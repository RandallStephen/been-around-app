{"version":3,"sources":["../node_modules/react/index.js","../node_modules/prop-types/index.js","../node_modules/react-calendar/dist/shared/propTypes.js","../node_modules/react-calendar/dist/shared/dates.js","../node_modules/react-date-picker/dist/shared/utils.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/react-date-picker/dist/shared/dates.js","../node_modules/react-date-picker/dist/shared/propTypes.js","../node_modules/merge-class-names/dist/entry.js","../node_modules/react-calendar/dist/shared/dateFormatter.js","../node_modules/react-calendar/dist/TileGroup.js","../node_modules/react-calendar/dist/Tile.js","../node_modules/react-lifecycles-compat/react-lifecycles-compat.es.js","../node_modules/react-calendar/dist/Flex.js","../node_modules/react-calendar/dist/shared/utils.js","../node_modules/react-date-picker/dist/DateInput/Input.js","../node_modules/react-dom/index.js","../node_modules/object-assign/index.js","../node_modules/webpack/buildin/global.js","../node_modules/get-user-locale/dist/entry.js","../node_modules/react-calendar/dist/CenturyView.js","../node_modules/react-calendar/dist/DecadeView.js","../node_modules/react-calendar/dist/YearView.js","../node_modules/react-calendar/dist/MonthView.js","../node_modules/react-jvectormap/build/index.js","../node_modules/underscore/underscore.js","../node_modules/@wojtekmaj/react-daterange-picker/dist/entry.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/scheduler/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/webpack/buildin/module.js","../node_modules/@wojtekmaj/react-daterange-picker/dist/DateRangePicker.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/make-event-props/dist/entry.js","../node_modules/react-fit/dist/Fit.js","../node_modules/detect-element-overflow/dist/entry.js","../node_modules/react-fit/dist/shared/utils.js","../node_modules/react-calendar/dist/entry.nostyle.js","../node_modules/react-calendar/dist/Calendar.js","../node_modules/react-calendar/dist/Calendar/Navigation.js","../node_modules/lodash.once/index.js","../node_modules/react-calendar/dist/CenturyView/Decades.js","../node_modules/react-calendar/dist/CenturyView/Decade.js","../node_modules/react-calendar/dist/DecadeView/Years.js","../node_modules/react-calendar/dist/DecadeView/Year.js","../node_modules/react-calendar/dist/YearView/Months.js","../node_modules/react-calendar/dist/YearView/Month.js","../node_modules/react-calendar/dist/MonthView/Days.js","../node_modules/react-calendar/dist/MonthView/Day.js","../node_modules/react-calendar/dist/MonthView/Weekdays.js","../node_modules/react-calendar/dist/MonthView/WeekNumbers.js","../node_modules/react-calendar/dist/MonthView/WeekNumber.js","../node_modules/react-date-picker/dist/DateInput.js","../node_modules/react-date-picker/dist/Divider.js","../node_modules/react-date-picker/dist/DateInput/DayInput.js","../node_modules/react-date-picker/dist/DateInput/MonthInput.js","../node_modules/react-date-picker/dist/DateInput/YearInput.js","../node_modules/react-date-picker/dist/DateInput/NativeInput.js","../node_modules/react-date-picker/dist/shared/dateFormatter.js","../node_modules/@wojtekmaj/react-daterange-picker/dist/shared/utils.js"],"names":["module","exports","__webpack_require__","Object","defineProperty","value","tileProps","tileGroupProps","isView","isClassName","isViews","isValue","isMaxDate","isMinDate","isCalendarType","obj","_propTypes","__esModule","default","_typeof","Symbol","iterator","constructor","prototype","allViews","oneOf","props","propName","componentName","minDate","Date","Error","concat","maxDate","oneOfType","instanceOf","arrayOf","string","view","views","indexOf","map","a","join","isRequired","activeStartDate","hover","locale","onClick","func","onMouseOver","tileClassName","tileContent","node","valueType","classes","date","style","objectOf","number","tileDisabled","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","getISOLocalDate","getISOLocalMonth","isWeekend","getDecadeLabel","getCenturyLabel","getDaysInMonth","getValueRange","getRange","getEndPrevious2","getEndPrevious","getEnd","getBeginNext2","getBeginPrevious2","getBeginNext","getBeginPrevious","getBegin","getWeekNumber","getDayRange","getEndOfDay","getBeginOfDay","getBeginOfNextMonth","getEndOfPreviousMonth","getBeginOfPreviousMonth","getMonthRange","getBeginOfWeek","getEndOfMonth","getBeginOfMonth","getBeginOfNextYear","getEndOfPreviousYear","getBeginOfPreviousYear","getYearRange","getEndOfYear","getBeginOfYear","getBeginOfNextDecade","getEndOfPreviousDecade","getBeginOfPreviousDecade","getDecadeRange","getEndOfDecade","getBeginOfDecade","getBeginOfDecadeYear","getBeginOfNextCentury","getEndOfPreviousCentury","getBeginOfPreviousCentury","getCenturyRange","getEndOfCentury","getBeginOfCentury","getBeginOfCenturyYear","getDayOfWeek","getDay","getMonthIndex","getMonth","getYear","_map2","arr2","_arrayWithoutHoles","iter","toString","call","from","_iterableToArray","_nonIterableSpread","el","index","SUNDAY","FRIDAY","SATURDAY","getFullYear","year","parseInt","isNaN","getDate","calendarType","arguments","weekday","beginOfCenturyYear","previousCenturyYear","nextCenturyYear","beginOfDecadeYear","offset","previousDecadeYear","nextDecadeYear","previousYear","nextYear","monthIndex","day","getDifferentMonth","previousMonthIndex","previousMonth","nextMonth","dayInWeekOne","beginOfFirstWeek","calendarTypeForWeekNumber","beginOfWeek","Math","round","rangeType","date1","date2","rawNextValue","sort","b","toYearLabel","_ref","_ref2","start","end","getTime","month","slice","enumerable","get","_utils","between","callIfDefined","updateInputWidth","max","min","_toConsumableArray","isValidNumber","_len","args","_key","apply","filter","_len2","_key2","element","span","document","createElement","innerHTML","placeholder","container","parentElement","appendChild","width","getBoundingClientRect","ceil","removeChild","_classCallCheck","instance","Constructor","d","__webpack_exports__","_defineProperties","target","descriptor","configurable","writable","key","_createClass","protoProps","staticProps","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_typeof2","_possibleConstructorReturn","self","ReferenceError","_assertThisInitialized","_setPrototypeOf","p","_inherits","subClass","superClass","create","_defineProperty","_objectSpread","source","ownKeys","keys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","forEach","_dates","_propTypes2","isValueType","allValueTypes","reduce","classList","arg","Boolean","formatShortWeekday","formatWeekday","formatMonth","formatMonthYear","formatLongDate","formatDate","_getUserLocale","getSafeFormatter","options","toLocaleString","getFormatter","safeDate","setHours","toSafeHour","_react","_interopRequireDefault","_Flex","_extends","assign","hasOwnProperty","this","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","TileGroup","className","count","dateTransform","dateType","step","Tile","tile","tiles","point","getTileClasses","wrap","propTypes","defaultProps","_default","newObj","desc","set","_interopRequireWildcard","_mergeClassNames","_Component","_getPrototypeOf2","_this","Component","nextProps","prevState","nextState","tileClassNameProps","tileContentProps","_this$props","children","formatAbbr","maxDateTransform","minDateTransform","_this$state","state","disabled","onFocus","type","aria-label","componentWillMount","getDerivedStateFromProps","setState","componentWillReceiveProps","bind","componentWillUpdate","prevProps","__reactInternalSnapshotFlag","__reactInternalSnapshot","getSnapshotBeforeUpdate","polyfill","isReactComponent","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","UNSAFE_componentWillMount","UNSAFE_componentWillReceiveProps","UNSAFE_componentWillUpdate","displayName","name","newApiName","componentDidUpdate","maybeSnapshot","snapshot","r","__suppressDeprecationWarning","Flex","toPercent","num","direction","otherProps","display","flexDirection","flexWrap","Children","child","cloneElement","flexBasis","maxWidth","overflow","marginLeft","bool","doRangesOverlap","isRangeWithinRange","isValueWithinRange","mergeFunctions","functions","f","fn","_len3","_key3","range","greaterRange","smallerRange","range1","range2","now","dateRange","valueRange","isRangeStart","isRangeEnd","Input","select","itemRef","nameForClass","onChange","onKeyDown","required","showLeadingZeros","hasLeadingZero","autoComplete","event","onKeyUp","ref","checkDCE","__REACT_DEVTOOLS_GLOBAL_HOOK__","console","error","propIsEnumerable","test1","String","getOwnPropertyNames","test2","fromCharCode","n","test3","split","letter","shouldUseNative","symbols","to","val","toObject","s","g","Function","e","window","getUserLocale","getUserLocales","_lodash","languageList","navigator","languages","language","userLanguage","browserLanguage","systemLanguage","toLowerCase","splitEl","toUpperCase","fixLowercaseProperties","_Decades","CenturyView","_PureComponent","PureComponent","renderDecades","setActiveRange","_Years","DecadeView","renderYears","_Months","YearView","renderMonths","_Days","_Weekdays","_WeekNumbers","MonthView","showWeekNumbers","_this$props2","onClickWeekNumber","showFixedNumberOfWeeks","_this$props3","childProps","alignItems","renderWeekNumbers","flexGrow","renderWeekdays","renderDays","_this$props4","showNeighboringMonth","l","t","m","c","ul","text","Cl","getAttribute","setAttribute","head","parentNode","gl","yl","wl","El","nodeName","h","Tl","grep","nodeType","Zl","M","promise","fail","then","removeEventListener","ready","Z","replace","Bl","Ul","y","expando","uid","Yl","Fl","test","JSON","parse","v","$l","S","cur","css","cssNumber","Wl","exec","unit","x","ownerDocument","ne","body","w","ql","ee","E","getElementsByTagName","querySelectorAll","merge","C","T","u","createDocumentFragment","oe","ce","re","htmlPrefilter","lastChild","childNodes","firstChild","textContent","createTextNode","inArray","Ql","ie","A","k","z","activeElement","L","j","off","guid","each","add","N","namespace","handler","isTrigger","special","delegateType","stopPropagation","fl","stopImmediatePropagation","preventDefault","trigger","extend","shift","Event","O","D","P","removeAttribute","R","hasData","access","events","handle","V","ae","checked","defaultValue","H","dl","xl","checkClone","fe","eq","html","clone","contains","src","_evalUrl","noModule","nonce","de","G","cleanData","I","Ze","getPropertyValue","pixelBoxStyles","me","ge","minWidth","B","_","cssProps","be","ve","ye","U","q","$","Kl","F","boxSizingReliable","parseFloat","getClientRects","Y","init","X","Te","hidden","requestAnimationFrame","setTimeout","fx","interval","tick","W","Ce","K","height","opacity","J","tweeners","prefilters","Deferred","always","elem","startTime","duration","tweens","run","notifyWith","resolveWith","opts","specialEasing","easing","originalProperties","originalOptions","createTween","Tween","stop","rejectWith","cssHooks","expand","ll","_queueHooks","queue","progress","complete","timer","anim","tl","match","Vl","nl","al","cl","Ge","il","unshift","rl","dataTypes","Je","ol","ajaxSettings","flatOptions","pl","Ml","ml","vl","bl","Sl","Al","jquery","toArray","pushStack","prevObject","first","last","splice","isPlainObject","random","isReady","noop","isEmptyObject","globalEval","trim","makeArray","support","kl","getElementById","id","getElementsByClassName","qsa","sl","cacheLength","attrHandle","sourceIndex","nextSibling","isDisabled","dir","uniqueID","Q","relative","matches","find","TAG","uniqueSort","pop","RegExp","hl","ID","CLASS","ATTR","PSEUDO","CHILD","needsContext","charCodeAt","isXML","namespaceURI","documentElement","setDocument","defaultView","top","addEventListener","attachEvent","attributes","createComment","getById","getElementsByName","getAttributeNode","matchesSelector","webkitMatchesSelector","mozMatchesSelector","oMatchesSelector","msMatchesSelector","disconnectedMatch","compareDocumentPosition","sortDetached","attr","specified","escape","detectDuplicates","sortStable","getText","nodeValue","selectors","createPseudo",">"," ","+","~","preFilter","pseudos","setFilters","not","has","lang","location","hash","root","focus","hasFocus","href","tabIndex","enabled","selected","selectedIndex","empty","parent","header","input","button","even","odd","lt","gt","nth","radio","checkbox","file","password","image","submit","reset","filters","tokenize","compile","selector","expr","unique","isXMLDoc","escapeSelector","zl","is","Ll","jl","Nl","Ol","Dl","parseHTML","Pl","Rl","contents","prev","closest","prevAll","addBack","parents","parentsUntil","nextAll","nextUntil","prevUntil","siblings","contentDocument","content","reverse","Callbacks","once","stopOnFalse","memory","remove","disable","lock","locked","fireWith","fire","fired","catch","pipe","notify","resolve","reject","exceptionHook","stackTrace","getStackHook","when","Hl","warn","message","stack","readyException","Gl","readyWait","readyState","doScroll","Il","_e2","_l","cache","data","removeData","_data","_removeData","dequeue","clearQueue","Xl","Jl","le","composed","attachShadow","getRootNode","te","show","hide","toggle","option","thead","col","tr","td","optgroup","tbody","tfoot","colgroup","caption","th","cloneNode","noCloneChecked","se","he","pe","global","triggered","dispatch","bindType","origType","delegateCount","setup","teardown","removeEvent","fix","delegateTarget","preDispatch","handlers","isPropagationStopped","currentTarget","isImmediatePropagationStopped","rnamespace","handleObj","result","postDispatch","addProp","originalEvent","load","noBubble","click","beforeunload","returnValue","isDefaultPrevented","defaultPrevented","relatedTarget","timeStamp","isSimulated","altKey","bubbles","cancelable","changedTouches","ctrlKey","detail","eventPhase","metaKey","pageX","pageY","shiftKey","char","code","charCode","keyCode","buttons","clientX","clientY","offsetX","offsetY","pointerId","pointerType","screenX","screenY","targetTouches","toElement","touches","which","blur","mouseenter","mouseleave","pointerenter","pointerleave","on","one","ue","Me","detach","append","prepend","insertBefore","before","after","replaceWith","replaceChild","appendTo","prependTo","insertAfter","replaceAll","opener","getComputedStyle","cssText","right","position","offsetWidth","backgroundClip","clearCloneStyle","pixelPosition","reliableMarginLeft","scrollboxSize","Se","xe","we","visibility","Ee","letterSpacing","fontWeight","animationIterationCount","columnCount","fillOpacity","flexShrink","gridArea","gridColumn","gridColumnEnd","gridColumnStart","gridRow","gridRowEnd","gridRowStart","lineHeight","order","orphans","widows","zIndex","zoom","setProperty","isFinite","left","margin","padding","border","prop","propHooks","pos","scrollTop","scrollLeft","linear","swing","cos","PI","Ae","ke","Animation","*","tweener","unqueued","overflowX","overflowY","prefilter","speed","speeds","old","fadeTo","animate","finish","timers","slideDown","slideUp","slideToggle","fadeIn","fadeOut","fadeToggle","slow","fast","delay","clearTimeout","checkOn","optSelected","radioValue","ze","Le","removeAttr","attrHooks","je","Ne","removeProp","propFix","for","class","addClass","removeClass","toggleClass","hasClass","Oe","valHooks","focusin","De","Pe","parentWindow","simulate","triggerHandler","Re","Ve","He","parseXML","DOMParser","parseFromString","Ie","Be","Ue","param","encodeURIComponent","serialize","serializeArray","qe","$e","Fe","Xe","We","Ke","Qe","active","lastModified","etag","url","isLocal","protocol","processData","async","contentType","accepts","xml","json","responseFields","converters","* text","text html","text json","text xml","context","ajaxSetup","ajaxPrefilter","ajaxTransport","ajax","mimeType","getResponseHeader","dataFilter","dataType","throws","ifModified","status","statusText","statusCode","getAllResponseHeaders","setRequestHeader","overrideMimeType","abort","method","crossDomain","host","traditional","hasContent","headers","beforeSend","success","timeout","send","getJSON","getScript","text script","wrapAll","firstElementChild","wrapInner","unwrap","visible","offsetHeight","xhr","XMLHttpRequest","et","0","1223","tt","cors","_e3","open","username","xhrFields","onload","onerror","onabort","ontimeout","onreadystatechange","responseType","responseText","binary","response","script","_t","scriptAttrs","charset","scriptCharset","nt","at","jsonp","jsonpCallback","createHTMLDocument","implementation","animated","setOffset","using","pageYOffset","pageXOffset","offsetParent","scrollTo","Height","Width","","unbind","delegate","undelegate","proxy","holdReady","parseJSON","isFunction","isWindow","camelCase","isNumeric","ct","jQuery","it","noConflict","fun","array","nextTick","title","browser","env","argv","version","versions","addListener","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","thatReturns","thatReturnsFalse","thatReturnsTrue","thatReturnsNull","thatReturnsThis","thatReturnsArgument","NODE_ENV","framesToPop","vectorMap","insets","bbox","paths","BF","path","DJ","BI","BJ","ZA","BW","DZ","ET","RW","TZ","GQ","NA","NE","NG","TN","LR","LS","ZW","TG","TD","ER","LY","GW","ZM","CI","EH","CM","EG","SL","CG","CF","AO","CD","GA","GN","GM","XS","CV","GH","SZ","MG","MA","KE","SS","ML","KM","ST","MW","SO","SN","MR","UG","SD","MZ","projection","centralMeridian","AR-Z","AR-X","AR-Y","AR-V","AR-W","AR-T","AR-U","AR-R","AR-S","AR-P","AR-Q","AR-N","AR-L","AR-M","AR-J","AR-K","AR-H","AR-F","AR-G","AR-D","AR-E","AR-B","AR-C","AR-A","BD","MN","BN","BH","BT","HK","JO","PS","LB","LA","TW","TR","LK","TL","TM","TJ","TH","XC","NP","PK","PH","-99","AE","CN","AF","IQ","JP","IR","AM","SY","VN","GE","IL","IN","AZ","OM","KG","UZ","MM","SG","KH","CY","QA","KR","KP","KW","KZ","SA","MY","YE","ro","ac","am","rr","ap","mt","go","ms","mg","pr","rs","ba","pi","rn","df","ma","pa","sp","rj","es","sc","pb","CA-NT","CA-NU","CA-NS","CA-BC","CA-SK","CA-QC","CA-PE","CA-MB","CA-YT","CA-NB","CA-NL","CA-ON","CA-AB","CH-SO","CH-LU","CH-SH","CH-SG","CH-UR","CH-NE","CH-BS","CH-JU","CH-BL","CH-SZ","CH-BE","CH-NW","CH-ZG","CH-FR","CH-ZH","CH-VS","CH-VD","CH-TI","CH-TG","CH-OW","CH-AG","CH-GE","CH-AI","CH-GL","CH-GR","CH-AR","OC","AS","EU","ES-NA","ES-B","ES-CS","ES-ZA","ES-O","ES-OR","ES-M","ES-L","ES-J","ES-H","ES-CU","ES-T","ES-C","ES-AV","ES-A","ES-CR","ES-CO","ES-VA","ES-TF","ES-Z","ES-MA","ES-AL","ES-CE","ES-PM","ES-VI","ES-S","ES-TE","ES-CC","ES-P","ES-PO","ES-GC","ES-GI","ES-TO","ES-MU","ES-GR","ES-GU","ES-AB","ES-SO","ES-ML","ES-LU","ES-SE","ES-CA","ES-SG","ES-BU","ES-SA","ES-V","ES-LE","ES-BI","ES-HU","ES-LO","ES-SS","ES-BA","BE","FR","BG","DK","HR","DE","BA","HU","JE","FI","BY","GR","RU","NL","PT","NO","LI","LV","LT","LU","FO","PL","XK","CH","AD","EE","IS","AL","IT","GG","CZ","IM","GB","AX","IE","ES","ME","MD","RO","RS","MK","SK","MT","SI","SM","UA","SE","AT","PR","DO","DM","LC","NI","PA","CA","SV","HT","TT","JM","GT","HN","BZ","BS","CR","US","GL","MX","CU","GU","PW","KI","NC","NU","NZ","AU","PG","SB","PF","FJ","FM","WS","VU","SE-O","SE-N","SE-M","SE-K","SE-I","SE-H","SE-G","SE-F","SE-E","SE-D","SE-C","SE-Z","SE-Y","SE-X","SE-W","SE-BD","SE-T","SE-S","SE-U","SE-AC","SE-AB","SE-","PY","CO","VE","CL","SR","BO","EC","AR","GY","BR","PE","UY","FK","US-VA","US-PA","US-TN","US-WV","US-NV","US-TX","US-NH","US-NY","US-HI","US-VT","US-NM","US-NC","US-ND","US-NE","US-LA","US-SD","US-DC","US-DE","US-FL","US-CT","US-WA","US-KS","US-WI","US-OR","US-KY","US-ME","US-OH","US-OK","US-ID","US-WY","US-UT","US-IN","US-IL","US-AK","US-NJ","US-CO","US-MD","US-MA","US-AL","US-MO","US-MN","US-CA","US-IA","US-MI","US-GA","US-AZ","US-MT","US-MS","US-SC","US-RI","US-AR","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","TF","colors","values","backgroundColor","scaleColors","normalizeFunction","selectedRegions","selectedMarkers","mapObject","regionName","Map","maps","charAt","substr","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","abs","deltaFactor","settings","adjustOldDeltas","documentMode","fixHooks","mouseHooks","mousewheel","onmousewheel","getLineHeight","getPageHeight","unmousewheel","inherits","parentClass","mixin","Number","MAX_VALUE","MIN_VALUE","whenImageLoaded","isImageUrl","AbstractElement","properties","applyAttr","AbstractCanvasElement","setSize","rootElement","classPrefix","canvas","addPath","addCircle","addImage","addText","addGroup","AbstractShapeElement","current","isHovered","isSelected","updateStyle","setStyle","mergeStyles","initial","selectedHover","SVGElement","svgns","createElementNS","getElementCtr","getBBox","SVGGroupElement","SVGCanvasElement","defsElement","applyTransformParams","scale","transX","transY","SVGShapeElement","images","setAttributeNS","imageCounter","SVGPathElement","SVGCircleElement","SVGImageElement","cx","cy","SVGTextElement","VMLElement","VMLInitialized","initializeVML","namespaces","rvml","createStyleSheet","addRule","VMLGroupElement","coordorigin","VMLCanvasElement","coordsize","VMLShapeElement","fillElement","strokeElement","stroked","fillcolor","strokecolor","strokeweight","VMLPathElement","pathSvgToVml","matrix","VMLCircleElement","VectorCanvas","mode","SVGAngle","impl","SimpleScale","getValue","OrdinalScale","getTicks","label","NumericScale","setScale","setNormalizeFunction","setMin","setMax","clearMinValue","minValue","normalize","clearMaxValue","maxValue","pow","vectorLength","vectorSubtract","vectorToNum","vectorAdd","vectorMult","sqrt","floor","log","LN10","ColorScale","rgbToArray","numToRgb","arrayToRgb","Legend","params","series","cssClass","vertical","legendCntVertical","legendCntHorizontal","render","attribute","border-radius","markerStyle","stroke","background","fill","labelRender","DataSeries","elements","setAttributes","setValues","legend","clear","shape","Proj","degRad","radDeg","radius","sgn","mill","tan","mill_inv","lat","atan","exp","lng","merc","merc_inv","aea","sin","aea_inv","asin","lcc","lcc_inv","MapObject","getLabelText","config","getLabelOffsets","offsets","setHovered","setSelected","Region","data-code","stroke-width","labelX","labelY","text-anchor","alignment-baseline","labelStyle","labelsGroup","updateLabelPosition","Marker","isImage","createShape","data-index","dy","group","defaultParams","mapData","markers","regions","regionsColors","regionsData","defaultWidth","defaultHeight","setBackgroundColor","onResize","updateSize","resize","apiEvents","bindTouchEvents","DocumentTouch","bindContainerTouchEvents","MSGesture","bindContainerPointerEvents","bindContainerEvents","bindElementEvents","createTip","zoomButtons","bindZoomButtons","createRegions","createMarkers","focusOn","region","setFocus","setSelectedRegions","setSelectedMarkers","createSeries","baseTransX","baseTransY","baseScale","applyTransform","repositionMarkers","repositionLabels","panOnDrag","mousemove","mousedown","onContainerMouseUp","mouseup","zoomOnScroll","zoomOnScrollSpeed","tip","translationX","translationY","addPointer","baseVal","tipWidth","tipHeight","regionsSelectable","markersSelectable","clearSelected","zoomStep","zoomAnimate","zoomMax","zoomMin","setInterval","clearInterval","latLngToPoint","getSelected","getSelectedRegions","getSelectedMarkers","clearSelectedRegions","clearSelectedMarkers","getMapObject","getRegionName","regionLabelsGroup","regionStyle","regionMargin","regionLabelStyle","labels","markersGroup","markerLabelsGroup","latLng","getMarkerPosition","markerLabelStyle","removeMarkers","coords","addMarker","addMarkers","removeAllMarkers","getInsetForPoint","pointToLatLng","fill-opacity","stroke-opacity","cursor","font-family","font-size","font-weight","onRegionTipShow","onRegionOver","onRegionOut","onRegionClick","onRegionSelected","onMarkerTipShow","onMarkerOver","onMarkerOut","onMarkerClick","onMarkerSelected","onViewportChange","MultiMap","maxLevel","main","multiMapLevel","history","addMap","defaultProjection","mapsLoaded","backButton","goBack","spinner","scope","mapNameByCode","drillDownPromise","drillDown","downloadMap","mapUrlByCode","$node","$mapObject","refs","containerStyle","containerClassName","object","regionsSelectableOne","markersSelectableOne","transform","locals","btoa","unescape","stringify","sources","sourceRoot","parts","base","media","sourceMap","insertInto","insertAt","attrs","rel","singleton","URL","createObjectURL","revokeObjectURL","Blob","convertToAbsoluteUrls","styleSheet","all","atob","querySelector","DEBUG","pathname","$$typeof","every","entries","symbol","any","exact","checkPropTypes","PropTypes","./","./africa_mill","./africa_mill.js","./ar_mill","./ar_mill.js","./asia_mill","./asia_mill.js","./brazil","./brazil.js","./ca_lcc","./ca_lcc.js","./ch_mill","./ch_mill.js","./continents_mill","./continents_mill.js","./es_mill","./es_mill.js","./europe_mill","./europe_mill.js","./index","./index.js","./north_america_mill","./north_america_mill.js","./oceania_mill","./oceania_mill.js","./se_mill","./se_mill.js","./south_america_mill","./south_america_mill.js","./us_aea","./us_aea.js","./vietnam","./vietnam.js","./world_mill","./world_mill.js","__WEBPACK_AMD_DEFINE_RESULT__","previousUnderscore","ArrayProto","ObjProto","SymbolProto","nativeIsArray","nativeKeys","nativeCreate","Ctor","_wrapped","VERSION","builtinIteratee","optimizeCb","argCount","collection","accumulator","cb","iteratee","identity","isObject","matcher","property","Infinity","restArguments","startIndex","rest","baseCreate","shallowProperty","deepGet","MAX_ARRAY_INDEX","getLength","isArrayLike","collect","results","currentKey","createReduce","memo","reducer","foldl","inject","reduceRight","foldr","detect","predicate","findIndex","findKey","list","negate","some","includes","include","item","fromIndex","guard","invoke","contextPath","pluck","where","findWhere","computed","lastComputed","shuffle","sample","rand","temp","sortBy","criteria","behavior","partition","groupBy","indexBy","countBy","reStrSymbol","isString","size","pass","take","tail","drop","compact","flatten","shallow","strict","output","idx","isArguments","len","without","otherArrays","difference","uniq","isSorted","isBoolean","seen","union","arrays","intersection","argsLength","unzip","zip","createPredicateIndexFinder","findLastIndex","createIndexFinder","predicateFind","sortedIndex","low","high","mid","lastIndexOf","chunk","executeBound","sourceFunc","boundFunc","callingContext","bound","callArgs","partial","boundArgs","bindAll","memoize","hasher","address","wait","defer","throttle","previous","later","leading","throttled","remaining","trailing","cancel","debounce","immediate","debounced","callNow","wrapper","compose","times","hasEnumBug","nonEnumerableProps","collectNonEnumProps","nonEnumIdx","proto","allKeys","pairs","invert","methods","names","createAssigner","keysFunc","defaults","extendOwn","deepEq","keyInObj","pick","omit","tap","interceptor","isMatch","aStack","bStack","valueOf","areArrays","aCtor","bCtor","isEqual","isEmpty","isElement","nodelist","Int8Array","isSymbol","isNumber","isNull","isUndefined","constant","propertyOf","accum","escapeMap","&","<","\"","'","`","unescapeMap","createEscaper","escaper","testRegexp","replaceRegexp","fallback","idCounter","uniqueId","prefix","templateSettings","evaluate","interpolate","noMatch","escapes","\\","\r","\n"," "," ","escapeRegExp","escapeChar","template","oldSettings","variable","argument","chain","_chain","chainResult","toJSON","_DateRangePicker","aa","ca","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","updater","forceUpdate","isPureReactComponent","__self","__source","_owner","keyPrefix","=",":","ea","fa","da","only","createRef","createContext","_calculateChangedBits","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_context","forwardRef","lazy","_ctor","_status","_result","compare","useCallback","useContext","useEffect","useImperativeHandle","useDebugValue","useLayoutEffect","useMemo","useReducer","useRef","useState","Fragment","StrictMode","Suspense","createFactory","isValidElement","unstable_ConcurrentMode","unstable_Profiler","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentDispatcher","ReactCurrentOwner","ha","ia","onError","ja","la","na","oa","extractEvents","eventTypes","phasedRegistrationNames","qa","registrationName","ra","sa","dependencies","ta","ua","va","wa","ka","xa","ya","za","Aa","_dispatchListeners","_dispatchInstances","isPersistent","release","Ba","injectEventPluginOrder","injectEventPluginsByName","Ca","stateNode","Da","Ea","Fa","Ga","Ha","tag","Ia","Ja","Ka","La","return","Ma","dispatchConfig","Na","_targetInst","Oa","Pa","Qa","Ra","Sa","Ta","animationend","animationiteration","animationstart","transitionend","Ua","Va","Wa","animation","transition","Xa","Ya","Za","$a","ab","bb","db","eb","fb","gb","nativeEvent","Interface","ib","eventPool","jb","destructor","hb","getPooled","cancelBubble","persist","isTrusted","kb","lb","mb","nb","ob","qb","rb","sb","beforeInput","bubbled","captured","compositionEnd","compositionStart","compositionUpdate","tb","ub","vb","wb","zb","xb","yb","Ab","Bb","Cb","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","color","datetime","datetime-local","email","search","tel","time","week","Mb","Nb","srcElement","correspondingUseElement","Ob","Pb","Rb","_valueTracker","setValue","stopTracking","Qb","Sb","Tb","Ub","Vb","Wb","Xb","Yb","Zb","$b","bc","cc","dc","ec","fc","gc","hc","ic","jc","_debugOwner","_debugSource","fileName","lineNumber","kc","lc","mc","nc","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","rc","tc","pc","qc","oc","uc","vc","defaultChecked","_wrapperState","initialChecked","wc","initialValue","controlled","xc","yc","zc","Ac","Bc","change","Cc","Dc","Ec","Fc","Gc","Hc","Ic","Jc","detachEvent","Kc","Lc","Mc","Nc","Oc","Pc","_isInputEventSupported","Qc","Rc","Alt","Control","Meta","Shift","Sc","getModifierState","Tc","Uc","Vc","Wc","Xc","Yc","fromElement","movementX","movementY","Zc","pressure","tangentialPressure","tiltX","tiltY","twist","isPrimary","$c","mouseEnter","mouseLeave","pointerEnter","pointerLeave","ad","alternate","bd","cd","dd","ed","effectTag","fd","hd","sibling","gd","animationName","elapsedTime","pseudoElement","jd","clipboardData","kd","ld","md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","nd","112","113","114","115","116","117","118","119","120","121","122","123","144","145","224","od","repeat","pd","dataTransfer","qd","rd","sd","deltaZ","ud","vd","wd","isInteractive","xd","isInteractiveTopLevelEventType","yd","zd","Ad","targetInst","ancestors","containerInfo","topLevelType","Bd","Cd","Dd","Ed","Fd","Gd","Hd","Id","Jd","Kd","Ld","Nd","HTMLIFrameElement","contentWindow","Od","contentEditable","Qd","focusedElem","selectionRange","Md","selectionStart","selectionEnd","getSelection","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","Rd","Sd","Td","Ud","Vd","Wd","Xd","Yd","onSelect","$d","Zd","defaultSelected","dangerouslySetInnerHTML","SimpleEventPlugin","EnterLeaveEventPlugin","ChangeEventPlugin","SelectEventPlugin","BeforeInputEventPlugin","mathml","svg","MSApp","execUnsafeLocalFunction","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columns","flex","flexPositive","flexNegative","flexOrder","gridRowSpan","gridColumnSpan","lineClamp","tabSize","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","substring","menuitem","area","br","embed","hr","img","keygen","link","meta","track","wbr","autoFocus","__html","unstable_scheduleCallback","unstable_cancelCallback","Set","contextTypes","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","childContextTypes","getChildContext","__reactInternalMemoizedMergedChildContext","elementType","pendingProps","contextDependencies","memoizedState","updateQueue","memoizedProps","lastEffect","firstEffect","nextEffect","childExpirationTime","expirationTime","Ye","af","bf","pendingChildren","cf","didError","earliestPendingTime","latestPendingTime","ff","latestPingedTime","earliestSuspendedTime","latestSuspendedTime","gf","nextExpirationTimeToWorkOn","jf","kf","baseState","tf","_reactInternalFiber","lf","nf","mf","payload","callback","of","pf","qf","rf","sf","uf","shouldComponentUpdate","vf","contextType","wf","xf","yf","componentDidMount","zf","Af","_stringRef","Bf","Cf","delete","Df","Ef","Ff","Gf","Hf","If","Jf","tagName","Kf","Lf","Mf","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","Vf","Wf","Xf","Yf","Zf","$f","ag","bg","cg","dg","eg","fg","gg","hg","ig","jg","kg","lg","baseUpdate","ng","og","pg","lastRenderedReducer","action","qg","lastRenderedState","eagerReducer","eagerState","rg","destroy","deps","sg","tg","ug","vg","wg","readContext","xg","yg","zg","Ag","Bg","Cg","Dg","Eg","Fg","Gg","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","Qg","getDerivedStateFromError","Rg","pendingContext","Sg","timedOutAt","Tg","Ug","hf","hydrate","observedBits","unstable_observedBits","Vg","Wg","Xg","Yg","Zg","$g","ah","bh","firstUpdate","lastUpdate","firstCapturedUpdate","lastCapturedUpdate","firstCapturedEffect","lastCapturedEffect","ch","dh","eh","fh","gh","hh","ih","jh","kh","lh","mh","nh","oh","onclick","ph","WeakSet","qh","rh","sh","vh","componentWillUnmount","wh","xh","yh","_reactRootContainer","zh","wasMultiple","multiple","uh","hi","Xh","Bh","WeakMap","Ch","Dh","Eh","componentDidCatch","Fh","componentStack","Gh","Hh","Ih","Jh","Kh","Lh","Mh","Nh","Oh","Ph","Qh","Rh","Sh","Th","Uh","__reactInternalSnapshotBeforeUpdate","Vh","Zh","pendingCommitExpirationTime","ef","Pd","Yh","unstable_runWithPriority","unstable_NormalPriority","finishedWork","$h","ai","bi","ci","di","maxDuration","pingCache","ei","fi","unstable_getCurrentPriorityLevel","unstable_ImmediatePriority","unstable_UserBlockingPriority","unstable_LowPriority","unstable_IdlePriority","gi","ii","ji","ki","li","mi","ni","oi","qi","ri","si","ti","unstable_now","ui","vi","wi","xi","yi","zi","timeoutHandle","Bi","Ci","nextScheduledRoot","Di","Ei","unstable_shouldYield","_onComplete","Fi","firstBatch","_expirationTime","_defer","Gi","Hi","Ii","Ji","Ki","Li","Ni","_root","_callbacks","_next","_hasChildren","_didComplete","_children","Oi","_didCommit","_onCommit","Pi","_internalRoot","Qi","Si","legacy_renderSubtreeIntoContainer","hasAttribute","Ri","Ti","Mi","form","commit","unmount","createBatch","Vi","createPortal","findDOMNode","unstable_renderSubtreeIntoContainer","unmountComponentAtNode","unstable_createPortal","unstable_batchedUpdates","unstable_interactiveUpdates","flushSync","unstable_createRoot","unstable_flushControlled","Events","findFiberByHostInstance","supportsFiber","onCommitFiberRoot","onCommitFiberUnmount","overrideProps","currentDispatcherRef","findHostInstanceByFiber","bundleType","rendererPackageName","Wi","Xi","_r","priorityLevel","cancelAnimationFrame","performance","_schedMock","MessageChannel","port2","port1","onmessage","postMessage","unstable_next","unstable_wrapCallback","unstable_continueExecution","unstable_pauseExecution","unstable_getFirstCallbackNode","webpackPolyfill","deprecate","_reactLifecyclesCompat","_makeEventProps","_reactFit","_entry","_DateInput","baseClassName","DateRangePicker","closeCalendar","isOpen","valueFrom","valueTo","openCalendar","isOpenProps","onOutsideAction","onCalendarClose","onCalendarOpen","calendarIcon","clearIcon","format","maxDetail","_concat6","commonProps","isCalendarOpen","onChangeFrom","onChangeTo","toggleCalendar","onBlur","resetValue","calendarClassName","calendarProps","selectRange","_this2","_this$props5","eventProps","renderInputs","renderCalendar","CalendarIcon","xmlns","viewBox","x1","y1","x2","y2","ClearIcon","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propFullName","secret","getShim","ReactPropTypes","focusEvents","keyboardEvents","touchEvents","mouseEvents","getArgs","eventName","_reactDom","_detectElementOverflow","isDisplayContentsSupported","CSS","supports","isMutationObserverSupported","capitalize","alignAxis","invertAxis","secondary","spacing","scrollContainer","findScrollContainer","parentCollisions","isX","startProperty","endProperty","sizeProperty","overflowStartProperty","overflowEndProperty","uppercasedSizeProperty","offsetSizeProperty","clientSizeProperty","minSizeProperty","scrollbarWidth","availableStartSpace","availableEndSpace","offsetSize","displayStart","displayEnd","displayIfFits","availableSpace","fits","displayStartIfFits","displayEndIfFits","moreSpaceStart","minSize","shrinkToSize","warnOnDev","newSize","displayWhereverShrinkedFits","alignBothAxis","invertSecondaryAxis","commonArgs","alignMainAxis","alignSecondaryAxis","Fit","fit","MutationObserver","onMutation","_assertThisInitialize","elementWidth","clientWidth","elementHeight","clientHeight","parentPosition","mainAxis","mutationObserver","observe","attributeFilter","collidedTop","collidedBottom","bottom","collidedLeft","collidedRight","overflowTop","overflowBottom","overflowLeft","overflowRight","isProduction","_Calendar","_CenturyView","_DecadeView","_YearView","_MonthView","_Navigation","datesAreDifferent","getLimitedViews","minDetail","getView","getValueType","getValueFrom","rawValueFrom","valueFromDate","getDetailValueFrom","detailValueFrom","getValueTo","rawValueTo","valueToDate","getDetailValueTo","detailValueTo","getDetailValueArray","Calendar","onActiveDateChange","drillDownAvailable","onDrillDown","nextView","drillUpAvailable","onDrillUp","nextValue","previousValue","getProcessedValue","nextActiveStartDate","getActiveStartDate","activeStartDateProps","viewProps","isViewAllowed","valueProps","processFunction","renderChildren","_this$state2","clickAction","onClickDecade","onClickYear","_this$props6","onClickMonth","_this$props7","onClickDay","showNavigation","_this$props8","navigationAriaLabel","navigationLabel","next2AriaLabel","next2Label","nextAriaLabel","nextLabel","prev2AriaLabel","prev2Label","prevAriaLabel","prevLabel","_this$state3","drillUp","setActiveStartDate","_this$props9","onMouseOut","valueArray","renderNavigation","renderContent","_this$props10","_this$props11","Navigation","_dateFormatter","shouldShowPrevNext2Buttons","previousActiveStartDate","previousActiveStartDate2","nextActiveStartDate2","prevButtonDisabled","previousActiveEndDate","prev2ButtonDisabled","nextButtonDisabled","next2ButtonDisabled","FUNC_ERROR_TEXT","INFINITY","MAX_INTEGER","NAN","symbolTag","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","objectToString","isObjectLike","other","isBinary","toNumber","sign","toFinite","remainder","toInteger","Decades","_TileGroup","_Decade","Decade","_Tile","Years","_Year","Year","Months","_Month","Month","Days","_Day","hasFixedNumberOfWeeks","dayOfWeek","daysInMonth","activeEndDate","currentMonthIndex","Day","Weekdays","anyDate","beginOfMonth","weekdays","weekdayDate","abbr","WeekNumbers","_WeekNumber","numberOfWeeks","days","dates","weekNumbers","weekNumber","weekIndex","WeekNumber","_Divider","_DayInput","_MonthInput","_YearInput","_NativeInput","defaultMinDate","defaultMaxDate","getValueFromRange","valueOrArrayOfValues","parseAndValidateDate","rawValue","valueDate","isValidInput","findInput","nextElement","DateInput","firstInput","divider","nextInput","_event$target","onChangeExternal","_value$split2","yearString","monthString","dayString","formElements","dayInput","monthInput","yearInput","formElement","checkValidity","proposedValue","currentMatch","showLeadingZerosFromFormat","commonInputProps","elementFunctions","pattern","res","renderFunction","elementFunction","_renderCustomInputs","renderDay","renderMonth","renderYear","onChangeNative","role","renderNativeInput","renderCustomInputs","level","useGrouping","formatNumber","Divider","_Input","DayInput","maxDay","minDay","currentMonthMaxDays","MonthInput","maxMonth","minMonth","YearInput","maxYear","minYear","yearStep","NativeInput","nativeValueParser","nativeInputType","formatterCache","stringifiedOptions"],"mappings":"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","file":"static/js/2.721c2a7c.chunk.js","sourcesContent":["'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is'); // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n\n\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tileProps = exports.tileGroupProps = exports.isView = exports.isClassName = exports.isViews = exports.isValue = exports.isMaxDate = exports.isMinDate = exports.isCalendarType = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nvar calendarTypes = ['ISO 8601', 'US', 'Arabic', 'Hebrew'];\nvar allViews = ['century', 'decade', 'year', 'month'];\n\nvar isCalendarType = _propTypes.default.oneOf(calendarTypes);\n\nexports.isCalendarType = isCalendarType;\n\nvar isMinDate = function isMinDate(props, propName, componentName) {\n  var minDate = props[propName];\n\n  if (minDate) {\n    if (!(minDate instanceof Date)) {\n      return new Error(\"Invalid prop `\".concat(propName, \"` of type `\").concat(_typeof(minDate), \"` supplied to `\").concat(componentName, \"`, expected instance of `Date`.\"));\n    }\n\n    var maxDate = props.maxDate;\n\n    if (maxDate && minDate > maxDate) {\n      return new Error(\"Invalid prop `\".concat(propName, \"` of type `\").concat(_typeof(minDate), \"` supplied to `\").concat(componentName, \"`, minDate cannot be larger than maxDate.\"));\n    }\n  } // Everything is fine\n\n\n  return null;\n};\n\nexports.isMinDate = isMinDate;\n\nvar isMaxDate = function isMaxDate(props, propName, componentName) {\n  var maxDate = props[propName];\n\n  if (maxDate) {\n    if (!(maxDate instanceof Date)) {\n      return new Error(\"Invalid prop `\".concat(propName, \"` of type `\").concat(_typeof(maxDate), \"` supplied to `\").concat(componentName, \"`, expected instance of `Date`.\"));\n    }\n\n    var minDate = props.minDate;\n\n    if (minDate && maxDate < minDate) {\n      return new Error(\"Invalid prop `\".concat(propName, \"` of type `\").concat(_typeof(maxDate), \"` supplied to `\").concat(componentName, \"`, maxDate cannot be smaller than minDate.\"));\n    }\n  } // Everything is fine\n\n\n  return null;\n};\n\nexports.isMaxDate = isMaxDate;\n\nvar isValue = _propTypes.default.oneOfType([_propTypes.default.instanceOf(Date), _propTypes.default.arrayOf(_propTypes.default.instanceOf(Date))]);\n\nexports.isValue = isValue;\n\nvar isViews = _propTypes.default.arrayOf(_propTypes.default.oneOf(allViews));\n\nexports.isViews = isViews;\n\nvar isClassName = _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string)]);\n\nexports.isClassName = isClassName;\n\nvar isView = function isView(props, propName, componentName) {\n  var view = props[propName];\n  var views = props.views;\n  var allowedViews = views || allViews;\n\n  if (allowedViews.indexOf(view) === -1) {\n    return new Error(\"Invalid prop `\".concat(propName, \"` of value `\").concat(view, \"` supplied to `\").concat(componentName, \"`, expected one of [\").concat(['a', 'b', 'c', 'd', 'e'].map(function (a) {\n      return \"\\\"\".concat(a, \"\\\"\");\n    }).join(', '), \"].\"));\n  } // Everything is fine\n\n\n  return null;\n};\n\nexports.isView = isView;\n\nisView.isRequired = function (props, propName, componentName) {\n  var view = props[propName];\n\n  if (!view) {\n    return new Error(\"The prop `\".concat(propName, \"` is marked as required in `\").concat(componentName, \"`, but its value is `\").concat(view, \"`.\"));\n  }\n\n  return isView(props, propName, componentName);\n};\n\nvar tileGroupProps = {\n  activeStartDate: _propTypes.default.instanceOf(Date).isRequired,\n  hover: _propTypes.default.instanceOf(Date),\n  locale: _propTypes.default.string,\n  maxDate: isMaxDate,\n  minDate: isMinDate,\n  onClick: _propTypes.default.func,\n  onMouseOver: _propTypes.default.func,\n  tileClassName: _propTypes.default.oneOfType([_propTypes.default.func, isClassName]),\n  tileContent: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.node]),\n  value: isValue,\n  valueType: _propTypes.default.string\n};\nexports.tileGroupProps = tileGroupProps;\nvar tileProps = {\n  activeStartDate: _propTypes.default.instanceOf(Date).isRequired,\n  classes: _propTypes.default.arrayOf(_propTypes.default.string).isRequired,\n  date: _propTypes.default.instanceOf(Date).isRequired,\n  locale: _propTypes.default.string,\n  maxDate: isMaxDate,\n  minDate: isMinDate,\n  onClick: _propTypes.default.func,\n  onMouseOver: _propTypes.default.func,\n  style: _propTypes.default.objectOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])),\n  tileClassName: _propTypes.default.oneOfType([_propTypes.default.func, isClassName]),\n  tileContent: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.node]),\n  tileDisabled: _propTypes.default.func\n};\nexports.tileProps = tileProps;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getISOLocalDate = exports.getISOLocalMonth = exports.isWeekend = exports.getDecadeLabel = exports.getCenturyLabel = exports.getDaysInMonth = exports.getValueRange = exports.getRange = exports.getEndPrevious2 = exports.getEndPrevious = exports.getEnd = exports.getBeginNext2 = exports.getBeginPrevious2 = exports.getBeginNext = exports.getBeginPrevious = exports.getBegin = exports.getWeekNumber = exports.getDayRange = exports.getEndOfDay = exports.getBeginOfDay = exports.getBeginOfNextMonth = exports.getEndOfPreviousMonth = exports.getBeginOfPreviousMonth = exports.getMonthRange = exports.getBeginOfWeek = exports.getEndOfMonth = exports.getBeginOfMonth = exports.getBeginOfNextYear = exports.getEndOfPreviousYear = exports.getBeginOfPreviousYear = exports.getYearRange = exports.getEndOfYear = exports.getBeginOfYear = exports.getBeginOfNextDecade = exports.getEndOfPreviousDecade = exports.getBeginOfPreviousDecade = exports.getDecadeRange = exports.getEndOfDecade = exports.getBeginOfDecade = exports.getBeginOfDecadeYear = exports.getBeginOfNextCentury = exports.getEndOfPreviousCentury = exports.getBeginOfPreviousCentury = exports.getCenturyRange = exports.getEndOfCentury = exports.getBeginOfCentury = exports.getBeginOfCenturyYear = exports.getDayOfWeek = exports.getDay = exports.getMonthIndex = exports.getMonth = exports.getYear = void 0;\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nvar _map = _toConsumableArray(Array(7)).map(function (el, index) {\n  return index;\n}),\n    _map2 = _slicedToArray(_map, 7),\n    // eslint-disable-next-line no-unused-vars\nSUNDAY = _map2[0],\n    MONDAY = _map2[1],\n    TUESDAY = _map2[2],\n    WEDNESDAY = _map2[3],\n    THURSDAY = _map2[4],\n    FRIDAY = _map2[5],\n    SATURDAY = _map2[6];\n/* Simple getters - getting a property of a given point in time */\n\n\nvar getYear = function getYear(date) {\n  if (date instanceof Date) {\n    return date.getFullYear();\n  }\n\n  if (typeof date === 'number') {\n    return date;\n  }\n\n  var year = parseInt(date, 10);\n\n  if (typeof date === 'string' && !isNaN(year)) {\n    return year;\n  }\n\n  throw new Error(\"Failed to get year from date: \".concat(date, \".\"));\n};\n\nexports.getYear = getYear;\n\nvar getMonth = function getMonth(date) {\n  return date.getMonth() + 1;\n};\n\nexports.getMonth = getMonth;\n\nvar getMonthIndex = function getMonthIndex(date) {\n  return date.getMonth();\n};\n\nexports.getMonthIndex = getMonthIndex;\n\nvar getDay = function getDay(date) {\n  return date.getDate();\n};\n\nexports.getDay = getDay;\n\nvar getDayOfWeek = function getDayOfWeek(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ISO 8601';\n  var weekday = date.getDay();\n\n  switch (calendarType) {\n    case 'ISO 8601':\n      // Shifts days of the week so that Monday is 0, Sunday is 6\n      return (weekday + 6) % 7;\n\n    case 'Arabic':\n      return (weekday + 1) % 7;\n\n    case 'Hebrew':\n    case 'US':\n      return weekday;\n\n    default:\n      throw new Error('Unsupported calendar type.');\n  }\n};\n/* Complex getters - getting a property somehow related to a given point in time */\n\n\nexports.getDayOfWeek = getDayOfWeek;\n\nvar getBeginOfCenturyYear = function getBeginOfCenturyYear(date) {\n  var year = getYear(date) - 1;\n  return year + -year % 100 + 1;\n};\n\nexports.getBeginOfCenturyYear = getBeginOfCenturyYear;\n\nvar getBeginOfCentury = function getBeginOfCentury(date) {\n  var beginOfCenturyYear = getBeginOfCenturyYear(date);\n  return new Date(beginOfCenturyYear, 0, 1);\n};\n\nexports.getBeginOfCentury = getBeginOfCentury;\n\nvar getEndOfCentury = function getEndOfCentury(date) {\n  var beginOfCenturyYear = getBeginOfCenturyYear(date);\n  return new Date(beginOfCenturyYear + 100, 0, 1, 0, 0, 0, -1);\n};\n\nexports.getEndOfCentury = getEndOfCentury;\n\nvar getCenturyRange = function getCenturyRange(date) {\n  return [getBeginOfCentury(date), getEndOfCentury(date)];\n};\n\nexports.getCenturyRange = getCenturyRange;\n\nvar getBeginOfPreviousCentury = function getBeginOfPreviousCentury(date) {\n  var previousCenturyYear = getYear(date) - 100;\n  return getBeginOfCentury(previousCenturyYear);\n};\n\nexports.getBeginOfPreviousCentury = getBeginOfPreviousCentury;\n\nvar getEndOfPreviousCentury = function getEndOfPreviousCentury(date) {\n  var previousCenturyYear = getYear(date) - 100;\n  return getEndOfCentury(previousCenturyYear);\n};\n\nexports.getEndOfPreviousCentury = getEndOfPreviousCentury;\n\nvar getBeginOfNextCentury = function getBeginOfNextCentury(date) {\n  var nextCenturyYear = getYear(date) + 100;\n  return getBeginOfCentury(nextCenturyYear);\n};\n\nexports.getBeginOfNextCentury = getBeginOfNextCentury;\n\nvar getBeginOfDecadeYear = function getBeginOfDecadeYear(date) {\n  var year = getYear(date) - 1;\n  return year + -year % 10 + 1;\n};\n\nexports.getBeginOfDecadeYear = getBeginOfDecadeYear;\n\nvar getBeginOfDecade = function getBeginOfDecade(date) {\n  var beginOfDecadeYear = getBeginOfDecadeYear(date);\n  return new Date(beginOfDecadeYear, 0, 1);\n};\n\nexports.getBeginOfDecade = getBeginOfDecade;\n\nvar getEndOfDecade = function getEndOfDecade(date) {\n  var beginOfDecadeYear = getBeginOfDecadeYear(date);\n  return new Date(beginOfDecadeYear + 10, 0, 1, 0, 0, 0, -1);\n};\n\nexports.getEndOfDecade = getEndOfDecade;\n\nvar getDecadeRange = function getDecadeRange(date) {\n  return [getBeginOfDecade(date), getEndOfDecade(date)];\n};\n\nexports.getDecadeRange = getDecadeRange;\n\nvar getBeginOfPreviousDecade = function getBeginOfPreviousDecade(date) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  var previousDecadeYear = getBeginOfDecadeYear(date) - offset;\n  return getBeginOfDecade(previousDecadeYear);\n};\n\nexports.getBeginOfPreviousDecade = getBeginOfPreviousDecade;\n\nvar getEndOfPreviousDecade = function getEndOfPreviousDecade(date) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  var previousDecadeYear = getBeginOfDecadeYear(date) - offset;\n  return getEndOfDecade(previousDecadeYear);\n};\n\nexports.getEndOfPreviousDecade = getEndOfPreviousDecade;\n\nvar getBeginOfNextDecade = function getBeginOfNextDecade(date) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  var nextDecadeYear = getBeginOfDecadeYear(date) + offset;\n  return getBeginOfDecade(nextDecadeYear);\n};\n/**\n * Returns the beginning of a given year.\n *\n * @param {Date} date Date.\n */\n\n\nexports.getBeginOfNextDecade = getBeginOfNextDecade;\n\nvar getBeginOfYear = function getBeginOfYear(date) {\n  var year = getYear(date);\n  return new Date(year, 0, 1);\n};\n/**\n * Returns the end of a given year.\n *\n * @param {Date} date Date.\n */\n\n\nexports.getBeginOfYear = getBeginOfYear;\n\nvar getEndOfYear = function getEndOfYear(date) {\n  var year = getYear(date);\n  return new Date(year + 1, 0, 1, 0, 0, 0, -1);\n};\n/**\n * Returns an array with the beginning and the end of a given year.\n *\n * @param {Date} date Date.\n */\n\n\nexports.getEndOfYear = getEndOfYear;\n\nvar getYearRange = function getYearRange(date) {\n  return [getBeginOfYear(date), getEndOfYear(date)];\n};\n\nexports.getYearRange = getYearRange;\n\nvar getBeginOfPreviousYear = function getBeginOfPreviousYear(date) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var previousYear = getYear(date) - offset;\n  return getBeginOfYear(previousYear);\n};\n\nexports.getBeginOfPreviousYear = getBeginOfPreviousYear;\n\nvar getEndOfPreviousYear = function getEndOfPreviousYear(date) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var previousYear = getYear(date) - offset;\n  return getEndOfYear(previousYear);\n};\n\nexports.getEndOfPreviousYear = getEndOfPreviousYear;\n\nvar getBeginOfNextYear = function getBeginOfNextYear(date) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var nextYear = getYear(date) + offset;\n  return getBeginOfYear(nextYear);\n};\n/**\n * Returns the beginning of a given month.\n *\n * @param {Date} date Date.\n */\n\n\nexports.getBeginOfNextYear = getBeginOfNextYear;\n\nvar getBeginOfMonth = function getBeginOfMonth(date) {\n  var year = getYear(date);\n  var monthIndex = getMonthIndex(date);\n  return new Date(year, monthIndex, 1);\n};\n/**\n * Returns the end of a given month.\n *\n * @param {Date} date Date.\n */\n\n\nexports.getBeginOfMonth = getBeginOfMonth;\n\nvar getEndOfMonth = function getEndOfMonth(date) {\n  var year = getYear(date);\n  var monthIndex = getMonthIndex(date);\n  return new Date(year, monthIndex + 1, 1, 0, 0, 0, -1);\n};\n/**\n * Returns the beginning of a given week.\n *\n * @param {Date} date Date.\n * @param {String} calendarType Calendar type. Can be ISO 8601 or US.\n */\n\n\nexports.getEndOfMonth = getEndOfMonth;\n\nvar getBeginOfWeek = function getBeginOfWeek(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ISO 8601';\n  var year = getYear(date);\n  var monthIndex = getMonthIndex(date);\n  var day = date.getDate() - getDayOfWeek(date, calendarType);\n  return new Date(year, monthIndex, day);\n};\n/**\n * Returns an array with the beginning and the end of a given month.\n *\n * @param {Date} date Date.\n */\n\n\nexports.getBeginOfWeek = getBeginOfWeek;\n\nvar getMonthRange = function getMonthRange(date) {\n  return [getBeginOfMonth(date), getEndOfMonth(date)];\n};\n\nexports.getMonthRange = getMonthRange;\n\nvar getDifferentMonth = function getDifferentMonth(date, offset) {\n  var year = getYear(date);\n  var previousMonthIndex = getMonthIndex(date) + offset;\n  return new Date(year, previousMonthIndex, 1);\n};\n\nvar getBeginOfPreviousMonth = function getBeginOfPreviousMonth(date) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var previousMonth = getDifferentMonth(date, -offset);\n  return getBeginOfMonth(previousMonth);\n};\n\nexports.getBeginOfPreviousMonth = getBeginOfPreviousMonth;\n\nvar getEndOfPreviousMonth = function getEndOfPreviousMonth(date) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var previousMonth = getDifferentMonth(date, -offset);\n  return getEndOfMonth(previousMonth);\n};\n\nexports.getEndOfPreviousMonth = getEndOfPreviousMonth;\n\nvar getBeginOfNextMonth = function getBeginOfNextMonth(date) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var nextMonth = getDifferentMonth(date, offset);\n  return getBeginOfMonth(nextMonth);\n};\n\nexports.getBeginOfNextMonth = getBeginOfNextMonth;\n\nvar getBeginOfDay = function getBeginOfDay(date) {\n  var year = getYear(date);\n  var monthIndex = getMonthIndex(date);\n  var day = getDay(date);\n  return new Date(year, monthIndex, day);\n};\n\nexports.getBeginOfDay = getBeginOfDay;\n\nvar getEndOfDay = function getEndOfDay(date) {\n  var year = getYear(date);\n  var monthIndex = getMonthIndex(date);\n  var day = getDay(date);\n  return new Date(year, monthIndex, day + 1, 0, 0, 0, -1);\n};\n/**\n * Returns an array with the beginning and the end of a given day.\n *\n * @param {Date} date Date.\n */\n\n\nexports.getEndOfDay = getEndOfDay;\n\nvar getDayRange = function getDayRange(date) {\n  return [getBeginOfDay(date), getEndOfDay(date)];\n};\n/**\n * Gets week number according to ISO 8601 or US standard.\n * In ISO 8601, Arabic and Hebrew week 1 is the one with January 4.\n * In US calendar week 1 is the one with January 1.\n *\n * @param {Date} date Date.\n * @param {String} calendarType Calendar type. Can be ISO 8601 or US.\n */\n\n\nexports.getDayRange = getDayRange;\n\nvar getWeekNumber = function getWeekNumber(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ISO 8601';\n  var calendarTypeForWeekNumber = calendarType === 'US' ? 'US' : 'ISO 8601';\n  var beginOfWeek = getBeginOfWeek(date, calendarTypeForWeekNumber);\n  var year = getYear(date) + 1;\n  var dayInWeekOne;\n  var beginOfFirstWeek; // Look for the first week one that does not come after a given date\n\n  do {\n    dayInWeekOne = new Date(year, 0, calendarTypeForWeekNumber === 'ISO 8601' ? 4 : 1);\n    beginOfFirstWeek = getBeginOfWeek(dayInWeekOne, calendarTypeForWeekNumber);\n    year -= 1;\n  } while (date - beginOfFirstWeek < 0);\n\n  return Math.round((beginOfWeek - beginOfFirstWeek) / (8.64e7 * 7)) + 1;\n};\n/**\n * Returns the beginning of a given range.\n *\n * @param {String} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\n\n\nexports.getWeekNumber = getWeekNumber;\n\nvar getBegin = function getBegin(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return getBeginOfCentury(date);\n\n    case 'decade':\n      return getBeginOfDecade(date);\n\n    case 'year':\n      return getBeginOfYear(date);\n\n    case 'month':\n      return getBeginOfMonth(date);\n\n    case 'day':\n      return getBeginOfDay(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n\nexports.getBegin = getBegin;\n\nvar getBeginPrevious = function getBeginPrevious(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return getBeginOfPreviousCentury(date);\n\n    case 'decade':\n      return getBeginOfPreviousDecade(date);\n\n    case 'year':\n      return getBeginOfPreviousYear(date);\n\n    case 'month':\n      return getBeginOfPreviousMonth(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n\nexports.getBeginPrevious = getBeginPrevious;\n\nvar getBeginNext = function getBeginNext(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return getBeginOfNextCentury(date);\n\n    case 'decade':\n      return getBeginOfNextDecade(date);\n\n    case 'year':\n      return getBeginOfNextYear(date);\n\n    case 'month':\n      return getBeginOfNextMonth(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n\nexports.getBeginNext = getBeginNext;\n\nvar getBeginPrevious2 = function getBeginPrevious2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return getBeginOfPreviousDecade(date, 100);\n\n    case 'year':\n      return getBeginOfPreviousYear(date, 10);\n\n    case 'month':\n      return getBeginOfPreviousMonth(date, 12);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n\nexports.getBeginPrevious2 = getBeginPrevious2;\n\nvar getBeginNext2 = function getBeginNext2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return getBeginOfNextDecade(date, 100);\n\n    case 'year':\n      return getBeginOfNextYear(date, 10);\n\n    case 'month':\n      return getBeginOfNextMonth(date, 12);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n/**\n * Returns the end of a given range.\n *\n * @param {String} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\n\n\nexports.getBeginNext2 = getBeginNext2;\n\nvar getEnd = function getEnd(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return getEndOfCentury(date);\n\n    case 'decade':\n      return getEndOfDecade(date);\n\n    case 'year':\n      return getEndOfYear(date);\n\n    case 'month':\n      return getEndOfMonth(date);\n\n    case 'day':\n      return getEndOfDay(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n\nexports.getEnd = getEnd;\n\nvar getEndPrevious = function getEndPrevious(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return getEndOfPreviousCentury(date);\n\n    case 'decade':\n      return getEndOfPreviousDecade(date);\n\n    case 'year':\n      return getEndOfPreviousYear(date);\n\n    case 'month':\n      return getEndOfPreviousMonth(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n\nexports.getEndPrevious = getEndPrevious;\n\nvar getEndPrevious2 = function getEndPrevious2(rangeType, date) {\n  switch (rangeType) {\n    case 'decade':\n      return getEndOfPreviousDecade(date, 100);\n\n    case 'year':\n      return getEndOfPreviousYear(date, 10);\n\n    case 'month':\n      return getEndOfPreviousMonth(date, 12);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n/**\n * Returns an array with the beginning and the end of a given range.\n *\n * @param {String} rangeType Range type (e.g. 'day')\n * @param {Date} date Date.\n */\n\n\nexports.getEndPrevious2 = getEndPrevious2;\n\nvar getRange = function getRange(rangeType, date) {\n  switch (rangeType) {\n    case 'century':\n      return getCenturyRange(date);\n\n    case 'decade':\n      return getDecadeRange(date);\n\n    case 'year':\n      return getYearRange(date);\n\n    case 'month':\n      return getMonthRange(date);\n\n    case 'day':\n      return getDayRange(date);\n\n    default:\n      throw new Error(\"Invalid rangeType: \".concat(rangeType));\n  }\n};\n/**\n * Creates a range out of two values, ensuring they are in order and covering entire period ranges.\n *\n * @param {String} rangeType Range type (e.g. 'day')\n * @param {Date} date1 First date.\n * @param {Date} date2 Second date.\n */\n\n\nexports.getRange = getRange;\n\nvar getValueRange = function getValueRange(rangeType, date1, date2) {\n  var rawNextValue = [date1, date2].sort(function (a, b) {\n    return a - b;\n  });\n  return [getBegin(rangeType, rawNextValue[0]), getEnd(rangeType, rawNextValue[1])];\n};\n/**\n * Returns a number of days in a month of a given date.\n *\n * @param {Date} date Date.\n */\n\n\nexports.getValueRange = getValueRange;\n\nvar getDaysInMonth = function getDaysInMonth(date) {\n  var year = getYear(date);\n  var monthIndex = getMonthIndex(date);\n  return new Date(year, monthIndex + 1, 0).getDate();\n};\n\nexports.getDaysInMonth = getDaysInMonth;\n\nvar toYearLabel = function toYearLabel(_ref) {\n  var _ref2 = _slicedToArray(_ref, 2),\n      start = _ref2[0],\n      end = _ref2[1];\n\n  return \"\".concat(getYear(start), \" \\u2013 \").concat(getYear(end));\n};\n/**\n * Returns a string labelling a century of a given date.\n * For example, for 2017 it will return 2001-2100.\n *\n * @param {Date|String|Number} date Date or a year as a string or as a number.\n */\n\n\nvar getCenturyLabel = function getCenturyLabel(date) {\n  return toYearLabel(getCenturyRange(date));\n};\n/**\n * Returns a string labelling a century of a given date.\n * For example, for 2017 it will return 2011-2020.\n *\n * @param {Date|String|Number} date Date or a year as a string or as a number.\n */\n\n\nexports.getCenturyLabel = getCenturyLabel;\n\nvar getDecadeLabel = function getDecadeLabel(date) {\n  return toYearLabel(getDecadeRange(date));\n};\n/**\n * Returns a boolean determining whether a given date is on Saturday or Sunday.\n *\n * @param {Date} date Date.\n */\n\n\nexports.getDecadeLabel = getDecadeLabel;\n\nvar isWeekend = function isWeekend(date) {\n  var calendarType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'ISO 8601';\n  var weekday = date.getDay();\n\n  switch (calendarType) {\n    case 'Arabic':\n    case 'Hebrew':\n      return weekday === FRIDAY || weekday === SATURDAY;\n\n    case 'ISO 8601':\n    case 'US':\n      return weekday === SATURDAY || weekday === SUNDAY;\n\n    default:\n      throw new Error('Unsupported calendar type.');\n  }\n};\n/**\n * Returns local month in ISO-like format (YYYY-MM).\n */\n\n\nexports.isWeekend = isWeekend;\n\nvar getISOLocalMonth = function getISOLocalMonth(value) {\n  if (!value) {\n    return value;\n  }\n\n  var date = new Date(value);\n\n  if (isNaN(date.getTime())) {\n    throw new Error(\"Invalid date: \".concat(value));\n  }\n\n  var year = getYear(date);\n  var month = \"0\".concat(getMonth(date)).slice(-2);\n  return \"\".concat(year, \"-\").concat(month);\n};\n/**\n * Returns local date in ISO-like format (YYYY-MM-DD).\n */\n\n\nexports.getISOLocalMonth = getISOLocalMonth;\n\nvar getISOLocalDate = function getISOLocalDate(value) {\n  if (!value) {\n    return value;\n  }\n\n  var date = new Date(value);\n\n  if (isNaN(date.getTime())) {\n    throw new Error(\"Invalid date: \".concat(value));\n  }\n\n  var year = getYear(date);\n  var month = \"0\".concat(getMonth(date)).slice(-2);\n  var day = \"0\".concat(getDay(date)).slice(-2);\n  return \"\".concat(year, \"-\").concat(month, \"-\").concat(day);\n};\n\nexports.getISOLocalDate = getISOLocalDate;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"between\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.between;\n  }\n});\nObject.defineProperty(exports, \"callIfDefined\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.callIfDefined;\n  }\n});\nexports.updateInputWidth = exports.max = exports.min = void 0;\n\nvar _utils = require(\"react-calendar/dist/shared/utils\");\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar isValidNumber = function isValidNumber(a) {\n  return typeof a === 'number' && !isNaN(a);\n};\n\nvar min = function min() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return Math.min.apply(Math, _toConsumableArray(args.filter(isValidNumber)));\n};\n\nexports.min = min;\n\nvar max = function max() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return Math.max.apply(Math, _toConsumableArray(args.filter(isValidNumber)));\n};\n\nexports.max = max;\n\nvar updateInputWidth = function updateInputWidth(element) {\n  var span = document.createElement('span');\n  span.innerHTML = element.value || element.placeholder;\n  var container = element.parentElement;\n  container.appendChild(span);\n\n  var _span$getBoundingClie = span.getBoundingClientRect(),\n      width = _span$getBoundingClie.width;\n\n  element.style.width = \"\".concat(Math.ceil(width), \"px\");\n  container.removeChild(span);\n};\n\nexports.updateInputWidth = updateInputWidth;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"getYear\", {\n  enumerable: true,\n  get: function get() {\n    return _dates.getYear;\n  }\n});\nObject.defineProperty(exports, \"getMonth\", {\n  enumerable: true,\n  get: function get() {\n    return _dates.getMonth;\n  }\n});\nObject.defineProperty(exports, \"getMonthIndex\", {\n  enumerable: true,\n  get: function get() {\n    return _dates.getMonthIndex;\n  }\n});\nObject.defineProperty(exports, \"getDay\", {\n  enumerable: true,\n  get: function get() {\n    return _dates.getDay;\n  }\n});\nObject.defineProperty(exports, \"getDaysInMonth\", {\n  enumerable: true,\n  get: function get() {\n    return _dates.getDaysInMonth;\n  }\n});\nObject.defineProperty(exports, \"getBegin\", {\n  enumerable: true,\n  get: function get() {\n    return _dates.getBegin;\n  }\n});\nObject.defineProperty(exports, \"getEnd\", {\n  enumerable: true,\n  get: function get() {\n    return _dates.getEnd;\n  }\n});\nObject.defineProperty(exports, \"getISOLocalMonth\", {\n  enumerable: true,\n  get: function get() {\n    return _dates.getISOLocalMonth;\n  }\n});\nObject.defineProperty(exports, \"getISOLocalDate\", {\n  enumerable: true,\n  get: function get() {\n    return _dates.getISOLocalDate;\n  }\n});\n\nvar _dates = require(\"react-calendar/dist/shared/dates\");","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"isMaxDate\", {\n  enumerable: true,\n  get: function get() {\n    return _propTypes2.isMaxDate;\n  }\n});\nObject.defineProperty(exports, \"isMinDate\", {\n  enumerable: true,\n  get: function get() {\n    return _propTypes2.isMinDate;\n  }\n});\nexports.isValueType = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _propTypes2 = require(\"react-calendar/dist/shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar allViews = ['century', 'decade', 'year', 'month'];\nvar allValueTypes = [].concat(_toConsumableArray(allViews.slice(1)), ['day']);\n\nvar isValueType = _propTypes.default.oneOf(allValueTypes);\n\nexports.isValueType = isValueType;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mergeClassNames;\n\nfunction mergeClassNames() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  return args.reduce(function (classList, arg) {\n    return typeof arg === 'string' || arg instanceof Array ? classList.concat(arg) : classList;\n  }, []).filter(Boolean).join(' ');\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.formatShortWeekday = exports.formatWeekday = exports.formatMonth = exports.formatMonthYear = exports.formatLongDate = exports.formatDate = void 0;\n\nvar _getUserLocale = _interopRequireDefault(require(\"get-user-locale\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar getFormatter = function getFormatter(options) {\n  return function (locale, date) {\n    return date.toLocaleString(locale || (0, _getUserLocale.default)(), options);\n  };\n};\n/**\n * Changes the hour in a Date to ensure right date formatting even if DST is messed up.\n * Workaround for bug in WebKit and Firefox with historical dates.\n * For more details, see:\n * https://bugs.chromium.org/p/chromium/issues/detail?id=750465\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1385643\n *\n * @param {Date} date Date.\n */\n\n\nvar toSafeHour = function toSafeHour(date) {\n  var safeDate = new Date(date);\n  return new Date(safeDate.setHours(12));\n};\n\nvar getSafeFormatter = function getSafeFormatter(options) {\n  return function (locale, date) {\n    return getFormatter(options)(locale, toSafeHour(date));\n  };\n};\n\nvar formatDateOptions = {\n  day: 'numeric',\n  month: 'numeric',\n  year: 'numeric'\n};\nvar formatLongDateOptions = {\n  day: 'numeric',\n  month: 'long',\n  year: 'numeric'\n};\nvar formatMonthYearOptions = {\n  month: 'long',\n  year: 'numeric'\n};\nvar formatMonthOptions = {\n  month: 'long'\n};\nvar formatWeekdayOptions = {\n  weekday: 'long'\n};\nvar formatShortWeekdayOptions = {\n  weekday: 'short'\n};\nvar formatDate = getSafeFormatter(formatDateOptions);\nexports.formatDate = formatDate;\nvar formatLongDate = getSafeFormatter(formatLongDateOptions);\nexports.formatLongDate = formatLongDate;\nvar formatMonthYear = getSafeFormatter(formatMonthYearOptions);\nexports.formatMonthYear = formatMonthYear;\nvar formatMonth = getSafeFormatter(formatMonthOptions);\nexports.formatMonth = formatMonth;\nvar formatWeekday = getSafeFormatter(formatWeekdayOptions);\nexports.formatWeekday = formatWeekday;\nvar formatShortWeekday = getSafeFormatter(formatShortWeekdayOptions);\nexports.formatShortWeekday = formatShortWeekday;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Flex = _interopRequireDefault(require(\"./Flex\"));\n\nvar _utils = require(\"./shared/utils\");\n\nvar _propTypes2 = require(\"./shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar TileGroup = function TileGroup(_ref) {\n  var className = _ref.className,\n      count = _ref.count,\n      dateTransform = _ref.dateTransform,\n      dateType = _ref.dateType,\n      end = _ref.end,\n      hover = _ref.hover,\n      offset = _ref.offset,\n      start = _ref.start,\n      step = _ref.step,\n      Tile = _ref.tile,\n      value = _ref.value,\n      valueType = _ref.valueType,\n      tileProps = _objectWithoutProperties(_ref, [\"className\", \"count\", \"dateTransform\", \"dateType\", \"end\", \"hover\", \"offset\", \"start\", \"step\", \"tile\", \"value\", \"valueType\"]);\n\n  var tiles = [];\n\n  for (var point = start; point <= end; point += step) {\n    var date = dateTransform(point);\n    tiles.push(_react.default.createElement(Tile, _extends({\n      classes: (0, _utils.getTileClasses)({\n        value: value,\n        valueType: valueType,\n        date: date,\n        dateType: dateType,\n        hover: hover\n      }),\n      date: date,\n      point: point,\n      key: date.getTime()\n    }, tileProps)));\n  }\n\n  return _react.default.createElement(_Flex.default, {\n    className: className,\n    count: count,\n    offset: offset,\n    wrap: true\n  }, tiles);\n};\n\nTileGroup.propTypes = _objectSpread({}, _propTypes2.tileGroupProps, {\n  activeStartDate: _propTypes.default.instanceOf(Date),\n  count: _propTypes.default.number,\n  dateTransform: _propTypes.default.func.isRequired,\n  offset: _propTypes.default.number,\n  tile: _propTypes.default.func.isRequired,\n  step: _propTypes.default.number\n});\nTileGroup.defaultProps = {\n  count: 3,\n  step: 1\n};\nvar _default = TileGroup;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _mergeClassNames = _interopRequireDefault(require(\"merge-class-names\"));\n\nvar _propTypes2 = require(\"./shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar Tile =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tile, _Component);\n\n  function Tile() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tile);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tile)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {});\n\n    return _this;\n  }\n\n  _createClass(Tile, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          activeStartDate = _this$props.activeStartDate,\n          children = _this$props.children,\n          classes = _this$props.classes,\n          date = _this$props.date,\n          formatAbbr = _this$props.formatAbbr,\n          locale = _this$props.locale,\n          maxDate = _this$props.maxDate,\n          maxDateTransform = _this$props.maxDateTransform,\n          minDate = _this$props.minDate,\n          minDateTransform = _this$props.minDateTransform,\n          onClick = _this$props.onClick,\n          onMouseOver = _this$props.onMouseOver,\n          style = _this$props.style,\n          tileDisabled = _this$props.tileDisabled,\n          view = _this$props.view;\n      var _this$state = this.state,\n          tileClassName = _this$state.tileClassName,\n          tileContent = _this$state.tileContent;\n      return _react.default.createElement(\"button\", {\n        className: (0, _mergeClassNames.default)(classes, tileClassName),\n        disabled: minDate && minDateTransform(minDate) > date || maxDate && maxDateTransform(maxDate) < date || tileDisabled && tileDisabled({\n          activeStartDate: activeStartDate,\n          date: date,\n          view: view\n        }),\n        onClick: onClick && function () {\n          return onClick(date);\n        },\n        onMouseOver: onMouseOver && function () {\n          return onMouseOver(date);\n        },\n        onFocus: onMouseOver && function () {\n          return onMouseOver(date);\n        },\n        style: style,\n        type: \"button\"\n      }, formatAbbr ? _react.default.createElement(\"abbr\", {\n        \"aria-label\": formatAbbr(locale, date)\n      }, children) : children, tileContent);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var date = nextProps.date,\n          tileClassName = nextProps.tileClassName,\n          tileContent = nextProps.tileContent,\n          view = nextProps.view;\n      var nextState = {};\n\n      if (tileClassName !== prevState.tileClassNameProps) {\n        nextState.tileClassName = typeof tileClassName === 'function' ? tileClassName({\n          date: date,\n          view: view\n        }) : tileClassName;\n        nextState.tileClassNameProps = tileClassName;\n      }\n\n      if (tileContent !== prevState.tileContentProps) {\n        nextState.tileContent = typeof tileContent === 'function' ? tileContent({\n          date: date,\n          view: view\n        }) : tileContent;\n        nextState.tileContentProps = tileContent;\n      }\n\n      return nextState;\n    }\n  }]);\n\n  return Tile;\n}(_react.Component);\n\nexports.default = Tile;\nTile.propTypes = _objectSpread({}, _propTypes2.tileProps, {\n  children: _propTypes.default.node.isRequired,\n  formatAbbr: _propTypes.default.func,\n  maxDateTransform: _propTypes.default.func.isRequired,\n  minDateTransform: _propTypes.default.func.isRequired\n});","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nfunction componentWillMount() {\n  // Call this.constructor.gDSFP to support sub-classes.\n  var state = this.constructor.getDerivedStateFromProps(this.props, this.state);\n\n  if (state !== null && state !== undefined) {\n    this.setState(state);\n  }\n}\n\nfunction componentWillReceiveProps(nextProps) {\n  // Call this.constructor.gDSFP to support sub-classes.\n  // Use the setState() updater to ensure state isn't stale in certain edge cases.\n  function updater(prevState) {\n    var state = this.constructor.getDerivedStateFromProps(nextProps, prevState);\n    return state !== null && state !== undefined ? state : null;\n  } // Binding \"this\" is important for shallow renderer support.\n\n\n  this.setState(updater.bind(this));\n}\n\nfunction componentWillUpdate(nextProps, nextState) {\n  try {\n    var prevProps = this.props;\n    var prevState = this.state;\n    this.props = nextProps;\n    this.state = nextState;\n    this.__reactInternalSnapshotFlag = true;\n    this.__reactInternalSnapshot = this.getSnapshotBeforeUpdate(prevProps, prevState);\n  } finally {\n    this.props = prevProps;\n    this.state = prevState;\n  }\n} // React may warn about cWM/cWRP/cWU methods being deprecated.\n// Add a flag to suppress these warnings for this special case.\n\n\ncomponentWillMount.__suppressDeprecationWarning = true;\ncomponentWillReceiveProps.__suppressDeprecationWarning = true;\ncomponentWillUpdate.__suppressDeprecationWarning = true;\n\nfunction polyfill(Component) {\n  var prototype = Component.prototype;\n\n  if (!prototype || !prototype.isReactComponent) {\n    throw new Error('Can only polyfill class components');\n  }\n\n  if (typeof Component.getDerivedStateFromProps !== 'function' && typeof prototype.getSnapshotBeforeUpdate !== 'function') {\n    return Component;\n  } // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n  // Error if any of these lifecycles are present,\n  // Because they would work differently between older and newer (16.3+) versions of React.\n\n\n  var foundWillMountName = null;\n  var foundWillReceivePropsName = null;\n  var foundWillUpdateName = null;\n\n  if (typeof prototype.componentWillMount === 'function') {\n    foundWillMountName = 'componentWillMount';\n  } else if (typeof prototype.UNSAFE_componentWillMount === 'function') {\n    foundWillMountName = 'UNSAFE_componentWillMount';\n  }\n\n  if (typeof prototype.componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'componentWillReceiveProps';\n  } else if (typeof prototype.UNSAFE_componentWillReceiveProps === 'function') {\n    foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n  }\n\n  if (typeof prototype.componentWillUpdate === 'function') {\n    foundWillUpdateName = 'componentWillUpdate';\n  } else if (typeof prototype.UNSAFE_componentWillUpdate === 'function') {\n    foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n  }\n\n  if (foundWillMountName !== null || foundWillReceivePropsName !== null || foundWillUpdateName !== null) {\n    var componentName = Component.displayName || Component.name;\n    var newApiName = typeof Component.getDerivedStateFromProps === 'function' ? 'getDerivedStateFromProps()' : 'getSnapshotBeforeUpdate()';\n    throw Error('Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' + componentName + ' uses ' + newApiName + ' but also contains the following legacy lifecycles:' + (foundWillMountName !== null ? '\\n  ' + foundWillMountName : '') + (foundWillReceivePropsName !== null ? '\\n  ' + foundWillReceivePropsName : '') + (foundWillUpdateName !== null ? '\\n  ' + foundWillUpdateName : '') + '\\n\\nThe above lifecycles should be removed. Learn more about this warning here:\\n' + 'https://fb.me/react-async-component-lifecycle-hooks');\n  } // React <= 16.2 does not support static getDerivedStateFromProps.\n  // As a workaround, use cWM and cWRP to invoke the new static lifecycle.\n  // Newer versions of React will ignore these lifecycles if gDSFP exists.\n\n\n  if (typeof Component.getDerivedStateFromProps === 'function') {\n    prototype.componentWillMount = componentWillMount;\n    prototype.componentWillReceiveProps = componentWillReceiveProps;\n  } // React <= 16.2 does not support getSnapshotBeforeUpdate.\n  // As a workaround, use cWU to invoke the new lifecycle.\n  // Newer versions of React will ignore that lifecycle if gSBU exists.\n\n\n  if (typeof prototype.getSnapshotBeforeUpdate === 'function') {\n    if (typeof prototype.componentDidUpdate !== 'function') {\n      throw new Error('Cannot polyfill getSnapshotBeforeUpdate() for components that do not define componentDidUpdate() on the prototype');\n    }\n\n    prototype.componentWillUpdate = componentWillUpdate;\n    var componentDidUpdate = prototype.componentDidUpdate;\n\n    prototype.componentDidUpdate = function componentDidUpdatePolyfill(prevProps, prevState, maybeSnapshot) {\n      // 16.3+ will not execute our will-update method;\n      // It will pass a snapshot value to did-update though.\n      // Older versions will require our polyfilled will-update value.\n      // We need to handle both cases, but can't just check for the presence of \"maybeSnapshot\",\n      // Because for <= 15.x versions this might be a \"prevContext\" object.\n      // We also can't just check \"__reactInternalSnapshot\",\n      // Because get-snapshot might return a falsy value.\n      // So check for the explicit __reactInternalSnapshotFlag flag to determine behavior.\n      var snapshot = this.__reactInternalSnapshotFlag ? this.__reactInternalSnapshot : maybeSnapshot;\n      componentDidUpdate.call(this, prevProps, prevState, snapshot);\n    };\n  }\n\n  return Component;\n}\n\nexport { polyfill };","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Flex;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction toPercent(num) {\n  return \"\".concat(num, \"%\");\n}\n\nfunction Flex(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      direction = _ref.direction,\n      count = _ref.count,\n      offset = _ref.offset,\n      style = _ref.style,\n      wrap = _ref.wrap,\n      otherProps = _objectWithoutProperties(_ref, [\"children\", \"className\", \"direction\", \"count\", \"offset\", \"style\", \"wrap\"]);\n\n  return _react.default.createElement(\"div\", _extends({\n    className: className,\n    style: _objectSpread({\n      display: 'flex',\n      flexDirection: direction,\n      flexWrap: wrap ? 'wrap' : 'no-wrap'\n    }, style)\n  }, otherProps), _react.default.Children.map(children, function (child, index) {\n    return _react.default.cloneElement(child, _objectSpread({}, child.props, {\n      style: {\n        flexBasis: toPercent(100 / count),\n        maxWidth: toPercent(100 / count),\n        overflow: 'hidden',\n        marginLeft: offset && index === 0 ? toPercent(100 * offset / count) : null\n      }\n    }));\n  }));\n}\n\nFlex.propTypes = {\n  children: _propTypes.default.node,\n  className: _propTypes.default.string,\n  count: _propTypes.default.number.isRequired,\n  direction: _propTypes.default.string,\n  offset: _propTypes.default.number,\n  style: _propTypes.default.objectOf(_propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])),\n  wrap: _propTypes.default.bool\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTileClasses = exports.between = exports.doRangesOverlap = exports.isRangeWithinRange = exports.isValueWithinRange = exports.callIfDefined = exports.mergeFunctions = void 0;\n\nvar _dates = require(\"./dates\");\n/**\n * Returns a function that, when called, calls all the functions\n * passed to it, applying its arguments to them.\n *\n * @param {Function[]} functions\n */\n\n\nvar mergeFunctions = function mergeFunctions() {\n  for (var _len = arguments.length, functions = new Array(_len), _key = 0; _key < _len; _key++) {\n    functions[_key] = arguments[_key];\n  }\n\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return functions.filter(Boolean).forEach(function (f) {\n      return f.apply(void 0, args);\n    });\n  };\n};\n/**\n * Calls a function, if it's defined, with specified arguments\n * @param {Function} fn\n * @param {Object} args\n */\n\n\nexports.mergeFunctions = mergeFunctions;\n\nvar callIfDefined = function callIfDefined(fn) {\n  if (fn && typeof fn === 'function') {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n\n    fn.apply(void 0, args);\n  }\n};\n\nexports.callIfDefined = callIfDefined;\n\nvar isValueWithinRange = function isValueWithinRange(value, range) {\n  return range[0] <= value && range[1] >= value;\n};\n\nexports.isValueWithinRange = isValueWithinRange;\n\nvar isRangeWithinRange = function isRangeWithinRange(greaterRange, smallerRange) {\n  return greaterRange[0] <= smallerRange[0] && greaterRange[1] >= smallerRange[1];\n};\n\nexports.isRangeWithinRange = isRangeWithinRange;\n\nvar doRangesOverlap = function doRangesOverlap(range1, range2) {\n  return isValueWithinRange(range1[0], range2) || isValueWithinRange(range1[1], range2);\n};\n/**\n * Returns a value no smaller than min and no larger than max.\n *\n * @param {*} value Value to return.\n * @param {*} min Minimum return value.\n * @param {*} max Maximum return value.\n */\n\n\nexports.doRangesOverlap = doRangesOverlap;\n\nvar between = function between(value, min, max) {\n  if (min && min > value) {\n    return min;\n  }\n\n  if (max && max < value) {\n    return max;\n  }\n\n  return value;\n};\n\nexports.between = between;\n\nvar getTileClasses = function getTileClasses() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      value = _ref.value,\n      valueType = _ref.valueType,\n      date = _ref.date,\n      dateType = _ref.dateType,\n      hover = _ref.hover;\n\n  var className = 'react-calendar__tile';\n  var classes = [className];\n\n  if (!date) {\n    return classes;\n  }\n\n  if (!(date instanceof Array) && !dateType) {\n    throw new Error('getTileClasses(): Unable to get tile activity classes because one or more required arguments were not passed.');\n  }\n\n  var now = new Date();\n  var dateRange = date instanceof Array ? date : (0, _dates.getRange)(dateType, date);\n\n  if (isValueWithinRange(now, dateRange)) {\n    classes.push(\"\".concat(className, \"--now\"));\n  }\n\n  if (!value) {\n    return classes;\n  }\n\n  if (!(value instanceof Array) && !valueType) {\n    throw new Error('getTileClasses(): Unable to get tile activity classes because one or more required arguments were not passed.');\n  }\n\n  var valueRange = value instanceof Array ? value : (0, _dates.getRange)(valueType, value);\n\n  if (isRangeWithinRange(valueRange, dateRange)) {\n    classes.push(\"\".concat(className, \"--active\"));\n  } else if (doRangesOverlap(valueRange, dateRange)) {\n    classes.push(\"\".concat(className, \"--hasActive\"));\n  } else if (hover && ( // Date before value\n  dateRange[1] < valueRange[0] && isRangeWithinRange([hover, valueRange[0]], dateRange) || // Date after value\n  dateRange[0] > valueRange[1] && isRangeWithinRange([valueRange[1], hover], dateRange))) {\n    classes.push(\"\".concat(className, \"--hover\"));\n  }\n\n  var isRangeStart = isValueWithinRange(valueRange[0], dateRange);\n  var isRangeEnd = isValueWithinRange(valueRange[1], dateRange);\n\n  if (isRangeStart) {\n    classes.push(\"\".concat(className, \"--rangeStart\"));\n  }\n\n  if (isRangeEnd) {\n    classes.push(\"\".concat(className, \"--rangeEnd\"));\n  }\n\n  if (isRangeStart && isRangeEnd) {\n    classes.push(\"\".concat(className, \"--rangeBothEnds\"));\n  }\n\n  return classes;\n};\n\nexports.getTileClasses = getTileClasses;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Input;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _mergeClassNames = _interopRequireDefault(require(\"merge-class-names\"));\n\nvar _utils = require(\"../shared/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar select = function select(element) {\n  return element && element.select();\n};\n\nfunction Input(_ref) {\n  var className = _ref.className,\n      disabled = _ref.disabled,\n      itemRef = _ref.itemRef,\n      max = _ref.max,\n      min = _ref.min,\n      name = _ref.name,\n      nameForClass = _ref.nameForClass,\n      onChange = _ref.onChange,\n      onKeyDown = _ref.onKeyDown,\n      placeholder = _ref.placeholder,\n      required = _ref.required,\n      showLeadingZeros = _ref.showLeadingZeros,\n      step = _ref.step,\n      value = _ref.value;\n  var hasLeadingZero = showLeadingZeros && value !== null && value < 10;\n  return [hasLeadingZero && _react.default.createElement(\"span\", {\n    key: \"leadingZero\",\n    className: \"\".concat(className, \"__leadingZero\")\n  }, \"0\"), _react.default.createElement(\"input\", {\n    key: \"input\",\n    autoComplete: \"off\",\n    className: (0, _mergeClassNames.default)(\"\".concat(className, \"__input\"), \"\".concat(className, \"__\").concat(nameForClass || name), hasLeadingZero && \"\".concat(className, \"__input--hasLeadingZero\")),\n    disabled: disabled,\n    name: name,\n    max: max,\n    min: min,\n    onChange: onChange,\n    onFocus: function onFocus(event) {\n      return select(event.target);\n    },\n    onKeyDown: onKeyDown,\n    onKeyUp: function onKeyUp(event) {\n      return (0, _utils.updateInputWidth)(event.target);\n    },\n    placeholder: placeholder,\n    ref: function ref(_ref2) {\n      if (_ref2) {\n        (0, _utils.updateInputWidth)(_ref2);\n      }\n\n      if (itemRef) {\n        itemRef(_ref2, name);\n      }\n    },\n    required: required,\n    step: step,\n    type: \"number\",\n    value: value !== null ? value : ''\n  })];\n}\n\nInput.propTypes = {\n  className: _propTypes.default.string.isRequired,\n  disabled: _propTypes.default.bool,\n  itemRef: _propTypes.default.func,\n  max: _propTypes.default.number,\n  min: _propTypes.default.number,\n  onChange: _propTypes.default.func,\n  onKeyDown: _propTypes.default.func,\n  required: _propTypes.default.bool,\n  showLeadingZeros: _propTypes.default.bool,\n  step: _propTypes.default.number,\n  value: _propTypes.default.number\n};\nInput.defaultProps = {\n  placeholder: '--'\n};","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function') {\n    return;\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n'use strict';\n/* eslint-disable no-unused-vars */\n\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n  if (val === null || val === undefined) {\n    throw new TypeError('Object.assign cannot be called with null or undefined');\n  }\n\n  return Object(val);\n}\n\nfunction shouldUseNative() {\n  try {\n    if (!Object.assign) {\n      return false;\n    } // Detect buggy property enumeration order in older V8 versions.\n    // https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\n\n    var test1 = new String('abc'); // eslint-disable-line no-new-wrappers\n\n    test1[5] = 'de';\n\n    if (Object.getOwnPropertyNames(test1)[0] === '5') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test2 = {};\n\n    for (var i = 0; i < 10; i++) {\n      test2['_' + String.fromCharCode(i)] = i;\n    }\n\n    var order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n      return test2[n];\n    });\n\n    if (order2.join('') !== '0123456789') {\n      return false;\n    } // https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\n\n    var test3 = {};\n    'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n      test3[letter] = letter;\n    });\n\n    if (Object.keys(Object.assign({}, test3)).join('') !== 'abcdefghijklmnopqrst') {\n      return false;\n    }\n\n    return true;\n  } catch (err) {\n    // We don't expect any of the above to throw, but better to be safe.\n    return false;\n  }\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n  var from;\n  var to = toObject(target);\n  var symbols;\n\n  for (var s = 1; s < arguments.length; s++) {\n    from = Object(arguments[s]);\n\n    for (var key in from) {\n      if (hasOwnProperty.call(from, key)) {\n        to[key] = from[key];\n      }\n    }\n\n    if (getOwnPropertySymbols) {\n      symbols = getOwnPropertySymbols(from);\n\n      for (var i = 0; i < symbols.length; i++) {\n        if (propIsEnumerable.call(from, symbols[i])) {\n          to[symbols[i]] = from[symbols[i]];\n        }\n      }\n    }\n  }\n\n  return to;\n};","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.getUserLocale = exports.getUserLocales = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.once\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar filterDuplicates = function filterDuplicates(arr) {\n  return arr.filter(function (el, index, self) {\n    return self.indexOf(el) === index;\n  });\n};\n\nvar fixLowercaseProperties = function fixLowercaseProperties(arr) {\n  return arr.map(function (el) {\n    if (!el || el.indexOf('-') === -1 || el.toLowerCase() !== el) {\n      return el;\n    }\n\n    var splitEl = el.split('-');\n    return \"\".concat(splitEl[0], \"-\").concat(splitEl[1].toUpperCase());\n  });\n};\n\nvar getUserLocales = (0, _lodash.default)(function () {\n  var languageList = [];\n\n  if (typeof window !== 'undefined') {\n    if (window.navigator.languages) {\n      languageList.push.apply(languageList, _toConsumableArray(window.navigator.languages));\n    }\n\n    if (window.navigator.language) {\n      languageList.push(window.navigator.language);\n    }\n\n    if (window.navigator.userLanguage) {\n      languageList.push(window.navigator.userLanguage);\n    }\n\n    if (window.navigator.browserLanguage) {\n      languageList.push(window.navigator.browserLanguage);\n    }\n\n    if (window.navigator.systemLanguage) {\n      languageList.push(window.navigator.systemLanguage);\n    }\n  }\n\n  languageList.push('en-US'); // Fallback\n\n  return fixLowercaseProperties(filterDuplicates(languageList));\n});\nexports.getUserLocales = getUserLocales;\nvar getUserLocale = (0, _lodash.default)(function () {\n  return getUserLocales()[0];\n});\nexports.getUserLocale = getUserLocale;\nvar _default = getUserLocale;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Decades = _interopRequireDefault(require(\"./CenturyView/Decades\"));\n\nvar _propTypes2 = require(\"./shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar CenturyView =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(CenturyView, _PureComponent);\n\n  function CenturyView() {\n    _classCallCheck(this, CenturyView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(CenturyView).apply(this, arguments));\n  }\n\n  _createClass(CenturyView, [{\n    key: \"renderDecades\",\n    value: function renderDecades() {\n      return _react.default.createElement(_Decades.default, this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", {\n        className: \"react-calendar__century-view\"\n      }, this.renderDecades());\n    }\n  }]);\n\n  return CenturyView;\n}(_react.PureComponent);\n\nexports.default = CenturyView;\nCenturyView.propTypes = {\n  activeStartDate: _propTypes.default.instanceOf(Date).isRequired,\n  locale: _propTypes.default.string,\n  maxDate: _propTypes2.isMaxDate,\n  minDate: _propTypes2.isMinDate,\n  onChange: _propTypes.default.func,\n  setActiveRange: _propTypes.default.func,\n  value: _propTypes2.isValue,\n  valueType: _propTypes.default.string\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Years = _interopRequireDefault(require(\"./DecadeView/Years\"));\n\nvar _propTypes2 = require(\"./shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar DecadeView =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(DecadeView, _PureComponent);\n\n  function DecadeView() {\n    _classCallCheck(this, DecadeView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DecadeView).apply(this, arguments));\n  }\n\n  _createClass(DecadeView, [{\n    key: \"renderYears\",\n    value: function renderYears() {\n      return _react.default.createElement(_Years.default, this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", {\n        className: \"react-calendar__decade-view\"\n      }, this.renderYears());\n    }\n  }]);\n\n  return DecadeView;\n}(_react.PureComponent);\n\nexports.default = DecadeView;\nDecadeView.propTypes = {\n  activeStartDate: _propTypes.default.instanceOf(Date).isRequired,\n  locale: _propTypes.default.string,\n  maxDate: _propTypes2.isMaxDate,\n  minDate: _propTypes2.isMinDate,\n  onChange: _propTypes.default.func,\n  setActiveRange: _propTypes.default.func,\n  value: _propTypes2.isValue,\n  valueType: _propTypes.default.string\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Months = _interopRequireDefault(require(\"./YearView/Months\"));\n\nvar _propTypes2 = require(\"./shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar YearView =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(YearView, _PureComponent);\n\n  function YearView() {\n    _classCallCheck(this, YearView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(YearView).apply(this, arguments));\n  }\n\n  _createClass(YearView, [{\n    key: \"renderMonths\",\n    value: function renderMonths() {\n      return _react.default.createElement(_Months.default, this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(\"div\", {\n        className: \"react-calendar__year-view\"\n      }, this.renderMonths());\n    }\n  }]);\n\n  return YearView;\n}(_react.PureComponent);\n\nexports.default = YearView;\nYearView.propTypes = {\n  activeStartDate: _propTypes.default.instanceOf(Date).isRequired,\n  formatMonth: _propTypes.default.func,\n  locale: _propTypes.default.string,\n  maxDate: _propTypes2.isMaxDate,\n  minDate: _propTypes2.isMinDate,\n  onChange: _propTypes.default.func,\n  setActiveRange: _propTypes.default.func,\n  value: _propTypes2.isValue,\n  valueType: _propTypes.default.string\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Days = _interopRequireDefault(require(\"./MonthView/Days\"));\n\nvar _Weekdays = _interopRequireDefault(require(\"./MonthView/Weekdays\"));\n\nvar _WeekNumbers = _interopRequireDefault(require(\"./MonthView/WeekNumbers\"));\n\nvar _propTypes2 = require(\"./shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar MonthView =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(MonthView, _PureComponent);\n\n  function MonthView() {\n    _classCallCheck(this, MonthView);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MonthView).apply(this, arguments));\n  }\n\n  _createClass(MonthView, [{\n    key: \"renderWeekdays\",\n    value: function renderWeekdays() {\n      var _this$props = this.props,\n          formatShortWeekday = _this$props.formatShortWeekday,\n          locale = _this$props.locale;\n      return _react.default.createElement(_Weekdays.default, {\n        calendarType: this.calendarType,\n        locale: locale,\n        formatShortWeekday: formatShortWeekday\n      });\n    }\n  }, {\n    key: \"renderWeekNumbers\",\n    value: function renderWeekNumbers() {\n      var showWeekNumbers = this.props.showWeekNumbers;\n\n      if (!showWeekNumbers) {\n        return null;\n      }\n\n      var _this$props2 = this.props,\n          activeStartDate = _this$props2.activeStartDate,\n          onClickWeekNumber = _this$props2.onClickWeekNumber,\n          showFixedNumberOfWeeks = _this$props2.showFixedNumberOfWeeks;\n      return _react.default.createElement(_WeekNumbers.default, {\n        activeStartDate: activeStartDate,\n        calendarType: this.calendarType,\n        onClickWeekNumber: onClickWeekNumber,\n        showFixedNumberOfWeeks: showFixedNumberOfWeeks\n      });\n    }\n  }, {\n    key: \"renderDays\",\n    value: function renderDays() {\n      var _this$props3 = this.props,\n          calendarType = _this$props3.calendarType,\n          onClickWeekNumber = _this$props3.onClickWeekNumber,\n          showWeekNumbers = _this$props3.showWeekNumbers,\n          childProps = _objectWithoutProperties(_this$props3, [\"calendarType\", \"onClickWeekNumber\", \"showWeekNumbers\"]);\n\n      return _react.default.createElement(_Days.default, _extends({\n        calendarType: this.calendarType\n      }, childProps));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var showWeekNumbers = this.props.showWeekNumbers;\n      var className = 'react-calendar__month-view';\n      return _react.default.createElement(\"div\", {\n        className: [className, showWeekNumbers ? \"\".concat(className, \"--weekNumbers\") : ''].join(' ')\n      }, _react.default.createElement(\"div\", {\n        style: {\n          display: 'flex',\n          alignItems: 'flex-end'\n        }\n      }, this.renderWeekNumbers(), _react.default.createElement(\"div\", {\n        style: {\n          flexGrow: 1,\n          width: '100%'\n        }\n      }, this.renderWeekdays(), this.renderDays())));\n    }\n  }, {\n    key: \"calendarType\",\n    get: function get() {\n      var _this$props4 = this.props,\n          calendarType = _this$props4.calendarType,\n          locale = _this$props4.locale;\n\n      if (calendarType) {\n        return calendarType;\n      }\n\n      switch (locale) {\n        case 'en-CA':\n        case 'en-US':\n        case 'es-AR':\n        case 'es-BO':\n        case 'es-CL':\n        case 'es-CO':\n        case 'es-CR':\n        case 'es-DO':\n        case 'es-EC':\n        case 'es-GT':\n        case 'es-HN':\n        case 'es-MX':\n        case 'es-NI':\n        case 'es-PA':\n        case 'es-PE':\n        case 'es-PR':\n        case 'es-SV':\n        case 'es-VE':\n        case 'pt-BR':\n          return 'US';\n        // ar-LB, ar-MA intentionally missing\n\n        case 'ar':\n        case 'ar-AE':\n        case 'ar-BH':\n        case 'ar-DZ':\n        case 'ar-EG':\n        case 'ar-IQ':\n        case 'ar-JO':\n        case 'ar-KW':\n        case 'ar-LY':\n        case 'ar-OM':\n        case 'ar-QA':\n        case 'ar-SA':\n        case 'ar-SD':\n        case 'ar-SY':\n        case 'ar-YE':\n        case 'dv':\n        case 'dv-MV':\n        case 'ps':\n        case 'ps-AR':\n          return 'Arabic';\n\n        case 'he':\n        case 'he-IL':\n          return 'Hebrew';\n\n        default:\n          return 'ISO 8601';\n      }\n    }\n  }]);\n\n  return MonthView;\n}(_react.PureComponent);\n\nexports.default = MonthView;\nMonthView.propTypes = {\n  activeStartDate: _propTypes.default.instanceOf(Date).isRequired,\n  calendarType: _propTypes2.isCalendarType,\n  formatShortWeekday: _propTypes.default.func,\n  locale: _propTypes.default.string,\n  maxDate: _propTypes2.isMaxDate,\n  minDate: _propTypes2.isMinDate,\n  onChange: _propTypes.default.func,\n  onClickWeekNumber: _propTypes.default.func,\n  setActiveRange: _propTypes.default.func,\n  showFixedNumberOfWeeks: _propTypes.default.bool,\n  showNeighboringMonth: _propTypes.default.bool,\n  showWeekNumbers: _propTypes.default.bool,\n  value: _propTypes2.isValue,\n  valueType: _propTypes.default.string\n};","!function (l, e) {\n  if (\"object\" === typeof exports && \"object\" === typeof module) module.exports = e(require(\"react\"));else if (\"function\" === typeof define && define.amd) define([\"react\"], e);else {\n    var t = e(\"object\" === typeof exports ? require(\"react\") : l.react);\n\n    for (var n in t) {\n      (\"object\" === typeof exports ? exports : l)[n] = t[n];\n    }\n  }\n}(this, function (l) {\n  return function (l) {\n    function e(n) {\n      if (t[n]) return t[n].exports;\n      var a = t[n] = {\n        i: n,\n        l: !1,\n        exports: {}\n      };\n      return l[n].call(a.exports, a, a.exports, e), a.l = !0, a.exports;\n    }\n\n    var t = {};\n    return e.m = l, e.c = t, e.d = function (l, t, n) {\n      e.o(l, t) || Object.defineProperty(l, t, {\n        configurable: !1,\n        enumerable: !0,\n        get: n\n      });\n    }, e.n = function (l) {\n      var t = l && l.__esModule ? function () {\n        return l.default;\n      } : function () {\n        return l;\n      };\n      return e.d(t, \"a\", t), t;\n    }, e.o = function (l, e) {\n      return Object.prototype.hasOwnProperty.call(l, e);\n    }, e.p = \"\", e(e.s = 23);\n  }([function (l, e, t) {\n    var n, a;\n    !function (e, t) {\n      \"use strict\";\n\n      \"object\" === typeof l && \"object\" === typeof l.exports ? l.exports = e.document ? t(e, !0) : function (l) {\n        if (!l.document) throw new Error(\"jQuery requires a window with a document\");\n        return t(l);\n      } : t(e);\n    }(\"undefined\" !== typeof window ? window : this, function (t, c) {\n      \"use strict\";\n\n      function i(l, e, t) {\n        t = t || ul;\n        var n,\n            a,\n            c = t.createElement(\"script\");\n        if (c.text = l, e) for (n in Cl) {\n          (a = e[n] || e.getAttribute && e.getAttribute(n)) && c.setAttribute(n, a);\n        }\n        t.head.appendChild(c).parentNode.removeChild(c);\n      }\n\n      function r(l) {\n        return null == l ? l + \"\" : \"object\" === typeof l || \"function\" === typeof l ? gl[yl.call(l)] || \"object\" : typeof l;\n      }\n\n      function o(l) {\n        var e = !!l && \"length\" in l && l.length,\n            t = r(l);\n        return !wl(l) && !El(l) && (\"array\" === t || 0 === e || \"number\" === typeof e && e > 0 && e - 1 in l);\n      }\n\n      function s(l, e) {\n        return l.nodeName && l.nodeName.toLowerCase() === e.toLowerCase();\n      }\n\n      function h(l, e, t) {\n        return wl(e) ? Tl.grep(l, function (l, n) {\n          return !!e.call(l, n, l) !== t;\n        }) : e.nodeType ? Tl.grep(l, function (l) {\n          return l === e !== t;\n        }) : \"string\" !== typeof e ? Tl.grep(l, function (l) {\n          return Zl.call(e, l) > -1 !== t;\n        }) : Tl.filter(e, l, t);\n      }\n\n      function p(l, e) {\n        for (; (l = l[e]) && 1 !== l.nodeType;) {\n          ;\n        }\n\n        return l;\n      }\n\n      function u(l) {\n        var e = {};\n        return Tl.each(l.match(Vl) || [], function (l, t) {\n          e[t] = !0;\n        }), e;\n      }\n\n      function M(l) {\n        return l;\n      }\n\n      function f(l) {\n        throw l;\n      }\n\n      function d(l, e, t, n) {\n        var a;\n\n        try {\n          l && wl(a = l.promise) ? a.call(l).done(e).fail(t) : l && wl(a = l.then) ? a.call(l, e, t) : e.apply(void 0, [l].slice(n));\n        } catch (l) {\n          t.apply(void 0, [l]);\n        }\n      }\n\n      function m() {\n        ul.removeEventListener(\"DOMContentLoaded\", m), t.removeEventListener(\"load\", m), Tl.ready();\n      }\n\n      function Z(l, e) {\n        return e.toUpperCase();\n      }\n\n      function g(l) {\n        return l.replace(Bl, \"ms-\").replace(Ul, Z);\n      }\n\n      function y() {\n        this.expando = Tl.expando + y.uid++;\n      }\n\n      function v(l) {\n        return \"true\" === l || \"false\" !== l && (\"null\" === l ? null : l === +l + \"\" ? +l : Fl.test(l) ? JSON.parse(l) : l);\n      }\n\n      function b(l, e, t) {\n        var n;\n        if (void 0 === t && 1 === l.nodeType) if (n = \"data-\" + e.replace(Yl, \"-$&\").toLowerCase(), \"string\" === typeof (t = l.getAttribute(n))) {\n          try {\n            t = v(t);\n          } catch (l) {}\n\n          $l.set(l, e, t);\n        } else t = void 0;\n        return t;\n      }\n\n      function S(l, e, t, n) {\n        var a,\n            c,\n            i = 20,\n            r = n ? function () {\n          return n.cur();\n        } : function () {\n          return Tl.css(l, e, \"\");\n        },\n            o = r(),\n            s = t && t[3] || (Tl.cssNumber[e] ? \"\" : \"px\"),\n            h = l.nodeType && (Tl.cssNumber[e] || \"px\" !== s && +o) && Wl.exec(Tl.css(l, e));\n\n        if (h && h[3] !== s) {\n          for (o /= 2, s = s || h[3], h = +o || 1; i--;) {\n            Tl.style(l, e, h + s), (1 - c) * (1 - (c = r() / o || .5)) <= 0 && (i = 0), h /= c;\n          }\n\n          h *= 2, Tl.style(l, e, h + s), t = t || [];\n        }\n\n        return t && (h = +h || +o || 0, a = t[1] ? h + (t[1] + 1) * t[2] : +t[2], n && (n.unit = s, n.start = h, n.end = a)), a;\n      }\n\n      function x(l) {\n        var e,\n            t = l.ownerDocument,\n            n = l.nodeName,\n            a = ne[n];\n        return a || (e = t.body.appendChild(t.createElement(n)), a = Tl.css(e, \"display\"), e.parentNode.removeChild(e), \"none\" === a && (a = \"block\"), ne[n] = a, a);\n      }\n\n      function w(l, e) {\n        for (var t, n, a = [], c = 0, i = l.length; c < i; c++) {\n          n = l[c], n.style && (t = n.style.display, e ? (\"none\" === t && (a[c] = ql.get(n, \"display\") || null, a[c] || (n.style.display = \"\")), \"\" === n.style.display && ee(n) && (a[c] = x(n))) : \"none\" !== t && (a[c] = \"none\", ql.set(n, \"display\", t)));\n        }\n\n        for (c = 0; c < i; c++) {\n          null != a[c] && (l[c].style.display = a[c]);\n        }\n\n        return l;\n      }\n\n      function E(l, e) {\n        var t;\n        return t = \"undefined\" !== typeof l.getElementsByTagName ? l.getElementsByTagName(e || \"*\") : \"undefined\" !== typeof l.querySelectorAll ? l.querySelectorAll(e || \"*\") : [], void 0 === e || e && s(l, e) ? Tl.merge([l], t) : t;\n      }\n\n      function C(l, e) {\n        for (var t = 0, n = l.length; t < n; t++) {\n          ql.set(l[t], \"globalEval\", !e || ql.get(e[t], \"globalEval\"));\n        }\n      }\n\n      function T(l, e, t, n, a) {\n        for (var c, i, o, s, h, p, u = e.createDocumentFragment(), M = [], f = 0, d = l.length; f < d; f++) {\n          if ((c = l[f]) || 0 === c) if (\"object\" === r(c)) Tl.merge(M, c.nodeType ? [c] : c);else if (oe.test(c)) {\n            for (i = i || u.appendChild(e.createElement(\"div\")), o = (ce.exec(c) || [\"\", \"\"])[1].toLowerCase(), s = re[o] || re._default, i.innerHTML = s[1] + Tl.htmlPrefilter(c) + s[2], p = s[0]; p--;) {\n              i = i.lastChild;\n            }\n\n            Tl.merge(M, i.childNodes), i = u.firstChild, i.textContent = \"\";\n          } else M.push(e.createTextNode(c));\n        }\n\n        for (u.textContent = \"\", f = 0; c = M[f++];) {\n          if (n && Tl.inArray(c, n) > -1) a && a.push(c);else if (h = Ql(c), i = E(u.appendChild(c), \"script\"), h && C(i), t) for (p = 0; c = i[p++];) {\n            ie.test(c.type || \"\") && t.push(c);\n          }\n        }\n\n        return u;\n      }\n\n      function A() {\n        return !0;\n      }\n\n      function k() {\n        return !1;\n      }\n\n      function z(l, e) {\n        return l === L() === (\"focus\" === e);\n      }\n\n      function L() {\n        try {\n          return ul.activeElement;\n        } catch (l) {}\n      }\n\n      function j(l, e, t, n, a, c) {\n        var i, r;\n\n        if (\"object\" === typeof e) {\n          \"string\" !== typeof t && (n = n || t, t = void 0);\n\n          for (r in e) {\n            j(l, r, t, n, e[r], c);\n          }\n\n          return l;\n        }\n\n        if (null == n && null == a ? (a = t, n = t = void 0) : null == a && (\"string\" === typeof t ? (a = n, n = void 0) : (a = n, n = t, t = void 0)), !1 === a) a = k;else if (!a) return l;\n        return 1 === c && (i = a, a = function a(l) {\n          return Tl().off(l), i.apply(this, arguments);\n        }, a.guid = i.guid || (i.guid = Tl.guid++)), l.each(function () {\n          Tl.event.add(this, e, a, n, t);\n        });\n      }\n\n      function N(l, e, t) {\n        if (!t) return void Tl.event.add(l, e, A);\n        ql.set(l, e, !1), Tl.event.add(l, e, {\n          namespace: !1,\n          handler: function handler(l) {\n            var n,\n                a,\n                c = ql.get(this, e);\n\n            if (1 & l.isTrigger && this[e]) {\n              if (c) (Tl.event.special[e] || {}).delegateType && l.stopPropagation();else if (c = fl.call(arguments), ql.set(this, e, c), n = t(this, e), this[e](), a = ql.get(this, e), c !== a || n ? ql.set(this, e, !1) : a = void 0, c !== a) return l.stopImmediatePropagation(), l.preventDefault(), a;\n            } else c && (ql.set(this, e, Tl.event.trigger(Tl.extend(c.shift(), Tl.Event.prototype), c, this)), l.stopImmediatePropagation());\n          }\n        });\n      }\n\n      function O(l, e) {\n        return s(l, \"table\") && s(11 !== e.nodeType ? e : e.firstChild, \"tr\") ? Tl(l).children(\"tbody\")[0] || l : l;\n      }\n\n      function D(l) {\n        return l.type = (null !== l.getAttribute(\"type\")) + \"/\" + l.type, l;\n      }\n\n      function P(l) {\n        return \"true/\" === (l.type || \"\").slice(0, 5) ? l.type = l.type.slice(5) : l.removeAttribute(\"type\"), l;\n      }\n\n      function R(l, e) {\n        var t, n, a, c, i, r, o, s;\n\n        if (1 === e.nodeType) {\n          if (ql.hasData(l) && (c = ql.access(l), i = ql.set(e, c), s = c.events)) {\n            delete i.handle, i.events = {};\n\n            for (a in s) {\n              for (t = 0, n = s[a].length; t < n; t++) {\n                Tl.event.add(e, a, s[a][t]);\n              }\n            }\n          }\n\n          $l.hasData(l) && (r = $l.access(l), o = Tl.extend({}, r), $l.set(e, o));\n        }\n      }\n\n      function V(l, e) {\n        var t = e.nodeName.toLowerCase();\n        \"input\" === t && ae.test(l.type) ? e.checked = l.checked : \"input\" !== t && \"textarea\" !== t || (e.defaultValue = l.defaultValue);\n      }\n\n      function H(l, e, t, n) {\n        e = dl.apply([], e);\n        var a,\n            c,\n            r,\n            o,\n            s,\n            h,\n            p = 0,\n            u = l.length,\n            M = u - 1,\n            f = e[0],\n            d = wl(f);\n        if (d || u > 1 && \"string\" === typeof f && !xl.checkClone && fe.test(f)) return l.each(function (a) {\n          var c = l.eq(a);\n          d && (e[0] = f.call(this, a, c.html())), H(c, e, t, n);\n        });\n\n        if (u && (a = T(e, l[0].ownerDocument, !1, l, n), c = a.firstChild, 1 === a.childNodes.length && (a = c), c || n)) {\n          for (r = Tl.map(E(a, \"script\"), D), o = r.length; p < u; p++) {\n            s = a, p !== M && (s = Tl.clone(s, !0, !0), o && Tl.merge(r, E(s, \"script\"))), t.call(l[p], s, p);\n          }\n\n          if (o) for (h = r[r.length - 1].ownerDocument, Tl.map(r, P), p = 0; p < o; p++) {\n            s = r[p], ie.test(s.type || \"\") && !ql.access(s, \"globalEval\") && Tl.contains(h, s) && (s.src && \"module\" !== (s.type || \"\").toLowerCase() ? Tl._evalUrl && !s.noModule && Tl._evalUrl(s.src, {\n              nonce: s.nonce || s.getAttribute(\"nonce\")\n            }) : i(s.textContent.replace(de, \"\"), s, h));\n          }\n        }\n\n        return l;\n      }\n\n      function G(l, e, t) {\n        for (var n, a = e ? Tl.filter(e, l) : l, c = 0; null != (n = a[c]); c++) {\n          t || 1 !== n.nodeType || Tl.cleanData(E(n)), n.parentNode && (t && Ql(n) && C(E(n, \"script\")), n.parentNode.removeChild(n));\n        }\n\n        return l;\n      }\n\n      function I(l, e, t) {\n        var n,\n            a,\n            c,\n            i,\n            r = l.style;\n        return t = t || Ze(l), t && (i = t.getPropertyValue(e) || t[e], \"\" !== i || Ql(l) || (i = Tl.style(l, e)), !xl.pixelBoxStyles() && me.test(i) && ge.test(e) && (n = r.width, a = r.minWidth, c = r.maxWidth, r.minWidth = r.maxWidth = r.width = i, i = t.width, r.width = n, r.minWidth = a, r.maxWidth = c)), void 0 !== i ? i + \"\" : i;\n      }\n\n      function B(l, e) {\n        return {\n          get: function get() {\n            return l() ? void delete this.get : (this.get = e).apply(this, arguments);\n          }\n        };\n      }\n\n      function U(l) {\n        for (var e = l[0].toUpperCase() + l.slice(1), t = ye.length; t--;) {\n          if ((l = ye[t] + e) in ve) return l;\n        }\n      }\n\n      function _(l) {\n        var e = Tl.cssProps[l] || be[l];\n        return e || (l in ve ? l : be[l] = U(l) || l);\n      }\n\n      function q(l, e, t) {\n        var n = Wl.exec(e);\n        return n ? Math.max(0, n[2] - (t || 0)) + (n[3] || \"px\") : e;\n      }\n\n      function $(l, e, t, n, a, c) {\n        var i = \"width\" === e ? 1 : 0,\n            r = 0,\n            o = 0;\n        if (t === (n ? \"border\" : \"content\")) return 0;\n\n        for (; i < 4; i += 2) {\n          \"margin\" === t && (o += Tl.css(l, t + Kl[i], !0, a)), n ? (\"content\" === t && (o -= Tl.css(l, \"padding\" + Kl[i], !0, a)), \"margin\" !== t && (o -= Tl.css(l, \"border\" + Kl[i] + \"Width\", !0, a))) : (o += Tl.css(l, \"padding\" + Kl[i], !0, a), \"padding\" !== t ? o += Tl.css(l, \"border\" + Kl[i] + \"Width\", !0, a) : r += Tl.css(l, \"border\" + Kl[i] + \"Width\", !0, a));\n        }\n\n        return !n && c >= 0 && (o += Math.max(0, Math.ceil(l[\"offset\" + e[0].toUpperCase() + e.slice(1)] - c - o - r - .5)) || 0), o;\n      }\n\n      function F(l, e, t) {\n        var n = Ze(l),\n            a = !xl.boxSizingReliable() || t,\n            c = a && \"border-box\" === Tl.css(l, \"boxSizing\", !1, n),\n            i = c,\n            r = I(l, e, n),\n            o = \"offset\" + e[0].toUpperCase() + e.slice(1);\n\n        if (me.test(r)) {\n          if (!t) return r;\n          r = \"auto\";\n        }\n\n        return (!xl.boxSizingReliable() && c || \"auto\" === r || !parseFloat(r) && \"inline\" === Tl.css(l, \"display\", !1, n)) && l.getClientRects().length && (c = \"border-box\" === Tl.css(l, \"boxSizing\", !1, n), (i = o in l) && (r = l[o])), (r = parseFloat(r) || 0) + $(l, e, t || (c ? \"border\" : \"content\"), i, n, r) + \"px\";\n      }\n\n      function Y(l, e, t, n, a) {\n        return new Y.prototype.init(l, e, t, n, a);\n      }\n\n      function X() {\n        Te && (!1 === ul.hidden && t.requestAnimationFrame ? t.requestAnimationFrame(X) : t.setTimeout(X, Tl.fx.interval), Tl.fx.tick());\n      }\n\n      function W() {\n        return t.setTimeout(function () {\n          Ce = void 0;\n        }), Ce = Date.now();\n      }\n\n      function K(l, e) {\n        var t,\n            n = 0,\n            a = {\n          height: l\n        };\n\n        for (e = e ? 1 : 0; n < 4; n += 2 - e) {\n          t = Kl[n], a[\"margin\" + t] = a[\"padding\" + t] = l;\n        }\n\n        return e && (a.opacity = a.width = l), a;\n      }\n\n      function J(l, e, t) {\n        for (var n, a = (el.tweeners[e] || []).concat(el.tweeners[\"*\"]), c = 0, i = a.length; c < i; c++) {\n          if (n = a[c].call(t, e, l)) return n;\n        }\n      }\n\n      function Q(l, e, t) {\n        var n,\n            a,\n            c,\n            i,\n            r,\n            o,\n            s,\n            h,\n            p = \"width\" in e || \"height\" in e,\n            u = this,\n            M = {},\n            f = l.style,\n            d = l.nodeType && ee(l),\n            m = ql.get(l, \"fxshow\");\n        t.queue || (i = Tl._queueHooks(l, \"fx\"), null == i.unqueued && (i.unqueued = 0, r = i.empty.fire, i.empty.fire = function () {\n          i.unqueued || r();\n        }), i.unqueued++, u.always(function () {\n          u.always(function () {\n            i.unqueued--, Tl.queue(l, \"fx\").length || i.empty.fire();\n          });\n        }));\n\n        for (n in e) {\n          if (a = e[n], Ae.test(a)) {\n            if (delete e[n], c = c || \"toggle\" === a, a === (d ? \"hide\" : \"show\")) {\n              if (\"show\" !== a || !m || void 0 === m[n]) continue;\n              d = !0;\n            }\n\n            M[n] = m && m[n] || Tl.style(l, n);\n          }\n        }\n\n        if ((o = !Tl.isEmptyObject(e)) || !Tl.isEmptyObject(M)) {\n          p && 1 === l.nodeType && (t.overflow = [f.overflow, f.overflowX, f.overflowY], s = m && m.display, null == s && (s = ql.get(l, \"display\")), h = Tl.css(l, \"display\"), \"none\" === h && (s ? h = s : (w([l], !0), s = l.style.display || s, h = Tl.css(l, \"display\"), w([l]))), (\"inline\" === h || \"inline-block\" === h && null != s) && \"none\" === Tl.css(l, \"float\") && (o || (u.done(function () {\n            f.display = s;\n          }), null == s && (h = f.display, s = \"none\" === h ? \"\" : h)), f.display = \"inline-block\")), t.overflow && (f.overflow = \"hidden\", u.always(function () {\n            f.overflow = t.overflow[0], f.overflowX = t.overflow[1], f.overflowY = t.overflow[2];\n          })), o = !1;\n\n          for (n in M) {\n            o || (m ? \"hidden\" in m && (d = m.hidden) : m = ql.access(l, \"fxshow\", {\n              display: s\n            }), c && (m.hidden = !d), d && w([l], !0), u.done(function () {\n              d || w([l]), ql.remove(l, \"fxshow\");\n\n              for (n in M) {\n                Tl.style(l, n, M[n]);\n              }\n            })), o = J(d ? m[n] : 0, n, u), n in m || (m[n] = o.start, d && (o.end = o.start, o.start = 0));\n          }\n        }\n      }\n\n      function ll(l, e) {\n        var t, n, a, c, i;\n\n        for (t in l) {\n          if (n = g(t), a = e[n], c = l[t], Array.isArray(c) && (a = c[1], c = l[t] = c[0]), t !== n && (l[n] = c, delete l[t]), (i = Tl.cssHooks[n]) && \"expand\" in i) {\n            c = i.expand(c), delete l[n];\n\n            for (t in c) {\n              t in l || (l[t] = c[t], e[t] = a);\n            }\n          } else e[n] = a;\n        }\n      }\n\n      function el(l, e, t) {\n        var n,\n            a,\n            c = 0,\n            i = el.prefilters.length,\n            r = Tl.Deferred().always(function () {\n          delete o.elem;\n        }),\n            o = function o() {\n          if (a) return !1;\n\n          for (var e = Ce || W(), t = Math.max(0, s.startTime + s.duration - e), n = t / s.duration || 0, c = 1 - n, i = 0, o = s.tweens.length; i < o; i++) {\n            s.tweens[i].run(c);\n          }\n\n          return r.notifyWith(l, [s, c, t]), c < 1 && o ? t : (o || r.notifyWith(l, [s, 1, 0]), r.resolveWith(l, [s]), !1);\n        },\n            s = r.promise({\n          elem: l,\n          props: Tl.extend({}, e),\n          opts: Tl.extend(!0, {\n            specialEasing: {},\n            easing: Tl.easing._default\n          }, t),\n          originalProperties: e,\n          originalOptions: t,\n          startTime: Ce || W(),\n          duration: t.duration,\n          tweens: [],\n          createTween: function createTween(e, t) {\n            var n = Tl.Tween(l, s.opts, e, t, s.opts.specialEasing[e] || s.opts.easing);\n            return s.tweens.push(n), n;\n          },\n          stop: function stop(e) {\n            var t = 0,\n                n = e ? s.tweens.length : 0;\n            if (a) return this;\n\n            for (a = !0; t < n; t++) {\n              s.tweens[t].run(1);\n            }\n\n            return e ? (r.notifyWith(l, [s, 1, 0]), r.resolveWith(l, [s, e])) : r.rejectWith(l, [s, e]), this;\n          }\n        }),\n            h = s.props;\n\n        for (ll(h, s.opts.specialEasing); c < i; c++) {\n          if (n = el.prefilters[c].call(s, l, h, s.opts)) return wl(n.stop) && (Tl._queueHooks(s.elem, s.opts.queue).stop = n.stop.bind(n)), n;\n        }\n\n        return Tl.map(h, J, s), wl(s.opts.start) && s.opts.start.call(l, s), s.progress(s.opts.progress).done(s.opts.done, s.opts.complete).fail(s.opts.fail).always(s.opts.always), Tl.fx.timer(Tl.extend(o, {\n          elem: l,\n          anim: s,\n          queue: s.opts.queue\n        })), s;\n      }\n\n      function tl(l) {\n        return (l.match(Vl) || []).join(\" \");\n      }\n\n      function nl(l) {\n        return l.getAttribute && l.getAttribute(\"class\") || \"\";\n      }\n\n      function al(l) {\n        return Array.isArray(l) ? l : \"string\" === typeof l ? l.match(Vl) || [] : [];\n      }\n\n      function cl(l, e, t, n) {\n        var a;\n        if (Array.isArray(e)) Tl.each(e, function (e, a) {\n          t || Ge.test(l) ? n(l, a) : cl(l + \"[\" + (\"object\" === typeof a && null != a ? e : \"\") + \"]\", a, t, n);\n        });else if (t || \"object\" !== r(e)) n(l, e);else for (a in e) {\n          cl(l + \"[\" + a + \"]\", e[a], t, n);\n        }\n      }\n\n      function il(l) {\n        return function (e, t) {\n          \"string\" !== typeof e && (t = e, e = \"*\");\n          var n,\n              a = 0,\n              c = e.toLowerCase().match(Vl) || [];\n          if (wl(t)) for (; n = c[a++];) {\n            \"+\" === n[0] ? (n = n.slice(1) || \"*\", (l[n] = l[n] || []).unshift(t)) : (l[n] = l[n] || []).push(t);\n          }\n        };\n      }\n\n      function rl(l, e, t, n) {\n        function a(r) {\n          var o;\n          return c[r] = !0, Tl.each(l[r] || [], function (l, r) {\n            var s = r(e, t, n);\n            return \"string\" !== typeof s || i || c[s] ? i ? !(o = s) : void 0 : (e.dataTypes.unshift(s), a(s), !1);\n          }), o;\n        }\n\n        var c = {},\n            i = l === Je;\n        return a(e.dataTypes[0]) || !c[\"*\"] && a(\"*\");\n      }\n\n      function ol(l, e) {\n        var t,\n            n,\n            a = Tl.ajaxSettings.flatOptions || {};\n\n        for (t in e) {\n          void 0 !== e[t] && ((a[t] ? l : n || (n = {}))[t] = e[t]);\n        }\n\n        return n && Tl.extend(!0, l, n), l;\n      }\n\n      function sl(l, e, t) {\n        for (var n, a, c, i, r = l.contents, o = l.dataTypes; \"*\" === o[0];) {\n          o.shift(), void 0 === n && (n = l.mimeType || e.getResponseHeader(\"Content-Type\"));\n        }\n\n        if (n) for (a in r) {\n          if (r[a] && r[a].test(n)) {\n            o.unshift(a);\n            break;\n          }\n        }\n        if (o[0] in t) c = o[0];else {\n          for (a in t) {\n            if (!o[0] || l.converters[a + \" \" + o[0]]) {\n              c = a;\n              break;\n            }\n\n            i || (i = a);\n          }\n\n          c = c || i;\n        }\n        if (c) return c !== o[0] && o.unshift(c), t[c];\n      }\n\n      function hl(l, e, t, n) {\n        var a,\n            c,\n            i,\n            r,\n            o,\n            s = {},\n            h = l.dataTypes.slice();\n        if (h[1]) for (i in l.converters) {\n          s[i.toLowerCase()] = l.converters[i];\n        }\n\n        for (c = h.shift(); c;) {\n          if (l.responseFields[c] && (t[l.responseFields[c]] = e), !o && n && l.dataFilter && (e = l.dataFilter(e, l.dataType)), o = c, c = h.shift()) if (\"*\" === c) c = o;else if (\"*\" !== o && o !== c) {\n            if (!(i = s[o + \" \" + c] || s[\"* \" + c])) for (a in s) {\n              if (r = a.split(\" \"), r[1] === c && (i = s[o + \" \" + r[0]] || s[\"* \" + r[0]])) {\n                !0 === i ? i = s[a] : !0 !== s[a] && (c = r[0], h.unshift(r[1]));\n                break;\n              }\n            }\n            if (!0 !== i) if (i && l.throws) e = i(e);else try {\n              e = i(e);\n            } catch (l) {\n              return {\n                state: \"parsererror\",\n                error: i ? l : \"No conversion from \" + o + \" to \" + c\n              };\n            }\n          }\n        }\n\n        return {\n          state: \"success\",\n          data: e\n        };\n      }\n\n      var pl = [],\n          ul = t.document,\n          Ml = Object.getPrototypeOf,\n          fl = pl.slice,\n          dl = pl.concat,\n          ml = pl.push,\n          Zl = pl.indexOf,\n          gl = {},\n          yl = gl.toString,\n          vl = gl.hasOwnProperty,\n          bl = vl.toString,\n          Sl = bl.call(Object),\n          xl = {},\n          wl = function wl(l) {\n        return \"function\" === typeof l && \"number\" !== typeof l.nodeType;\n      },\n          El = function El(l) {\n        return null != l && l === l.window;\n      },\n          Cl = {\n        type: !0,\n        src: !0,\n        nonce: !0,\n        noModule: !0\n      },\n          Tl = function Tl(l, e) {\n        return new Tl.fn.init(l, e);\n      },\n          Al = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g;\n\n      Tl.fn = Tl.prototype = {\n        jquery: \"3.4.0\",\n        constructor: Tl,\n        length: 0,\n        toArray: function toArray() {\n          return fl.call(this);\n        },\n        get: function get(l) {\n          return null == l ? fl.call(this) : l < 0 ? this[l + this.length] : this[l];\n        },\n        pushStack: function pushStack(l) {\n          var e = Tl.merge(this.constructor(), l);\n          return e.prevObject = this, e;\n        },\n        each: function each(l) {\n          return Tl.each(this, l);\n        },\n        map: function map(l) {\n          return this.pushStack(Tl.map(this, function (e, t) {\n            return l.call(e, t, e);\n          }));\n        },\n        slice: function slice() {\n          return this.pushStack(fl.apply(this, arguments));\n        },\n        first: function first() {\n          return this.eq(0);\n        },\n        last: function last() {\n          return this.eq(-1);\n        },\n        eq: function eq(l) {\n          var e = this.length,\n              t = +l + (l < 0 ? e : 0);\n          return this.pushStack(t >= 0 && t < e ? [this[t]] : []);\n        },\n        end: function end() {\n          return this.prevObject || this.constructor();\n        },\n        push: ml,\n        sort: pl.sort,\n        splice: pl.splice\n      }, Tl.extend = Tl.fn.extend = function () {\n        var l,\n            e,\n            t,\n            n,\n            a,\n            c,\n            i = arguments[0] || {},\n            r = 1,\n            o = arguments.length,\n            s = !1;\n\n        for (\"boolean\" === typeof i && (s = i, i = arguments[r] || {}, r++), \"object\" === typeof i || wl(i) || (i = {}), r === o && (i = this, r--); r < o; r++) {\n          if (null != (l = arguments[r])) for (e in l) {\n            n = l[e], \"__proto__\" !== e && i !== n && (s && n && (Tl.isPlainObject(n) || (a = Array.isArray(n))) ? (t = i[e], c = a && !Array.isArray(t) ? [] : a || Tl.isPlainObject(t) ? t : {}, a = !1, i[e] = Tl.extend(s, c, n)) : void 0 !== n && (i[e] = n));\n          }\n        }\n\n        return i;\n      }, Tl.extend({\n        expando: \"jQuery\" + (\"3.4.0\" + Math.random()).replace(/\\D/g, \"\"),\n        isReady: !0,\n        error: function error(l) {\n          throw new Error(l);\n        },\n        noop: function noop() {},\n        isPlainObject: function isPlainObject(l) {\n          var e, t;\n          return !(!l || \"[object Object]\" !== yl.call(l)) && (!(e = Ml(l)) || \"function\" === typeof (t = vl.call(e, \"constructor\") && e.constructor) && bl.call(t) === Sl);\n        },\n        isEmptyObject: function isEmptyObject(l) {\n          var e;\n\n          for (e in l) {\n            return !1;\n          }\n\n          return !0;\n        },\n        globalEval: function globalEval(l, e) {\n          i(l, {\n            nonce: e && e.nonce\n          });\n        },\n        each: function each(l, e) {\n          var t,\n              n = 0;\n          if (o(l)) for (t = l.length; n < t && !1 !== e.call(l[n], n, l[n]); n++) {\n            ;\n          } else for (n in l) {\n            if (!1 === e.call(l[n], n, l[n])) break;\n          }\n          return l;\n        },\n        trim: function trim(l) {\n          return null == l ? \"\" : (l + \"\").replace(Al, \"\");\n        },\n        makeArray: function makeArray(l, e) {\n          var t = e || [];\n          return null != l && (o(Object(l)) ? Tl.merge(t, \"string\" === typeof l ? [l] : l) : ml.call(t, l)), t;\n        },\n        inArray: function inArray(l, e, t) {\n          return null == e ? -1 : Zl.call(e, l, t);\n        },\n        merge: function merge(l, e) {\n          for (var t = +e.length, n = 0, a = l.length; n < t; n++) {\n            l[a++] = e[n];\n          }\n\n          return l.length = a, l;\n        },\n        grep: function grep(l, e, t) {\n          for (var n = [], a = 0, c = l.length, i = !t; a < c; a++) {\n            !e(l[a], a) !== i && n.push(l[a]);\n          }\n\n          return n;\n        },\n        map: function map(l, e, t) {\n          var n,\n              a,\n              c = 0,\n              i = [];\n          if (o(l)) for (n = l.length; c < n; c++) {\n            null != (a = e(l[c], c, t)) && i.push(a);\n          } else for (c in l) {\n            null != (a = e(l[c], c, t)) && i.push(a);\n          }\n          return dl.apply([], i);\n        },\n        guid: 1,\n        support: xl\n      }), \"function\" === typeof Symbol && (Tl.fn[Symbol.iterator] = pl[Symbol.iterator]), Tl.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function (l, e) {\n        gl[\"[object \" + e + \"]\"] = e.toLowerCase();\n      });\n\n      var kl = function (l) {\n        function e(l, e, t, n) {\n          var a,\n              c,\n              i,\n              r,\n              o,\n              h,\n              u,\n              M = e && e.ownerDocument,\n              f = e ? e.nodeType : 9;\n          if (t = t || [], \"string\" !== typeof l || !l || 1 !== f && 9 !== f && 11 !== f) return t;\n\n          if (!n && ((e ? e.ownerDocument || e : H) !== L && z(e), e = e || L, N)) {\n            if (11 !== f && (o = Zl.exec(l))) if (a = o[1]) {\n              if (9 === f) {\n                if (!(i = e.getElementById(a))) return t;\n                if (i.id === a) return t.push(i), t;\n              } else if (M && (i = M.getElementById(a)) && R(e, i) && i.id === a) return t.push(i), t;\n            } else {\n              if (o[2]) return K.apply(t, e.getElementsByTagName(l)), t;\n              if ((a = o[3]) && v.getElementsByClassName && e.getElementsByClassName) return K.apply(t, e.getElementsByClassName(a)), t;\n            }\n\n            if (v.qsa && !q[l + \" \"] && (!O || !O.test(l)) && (1 !== f || \"object\" !== e.nodeName.toLowerCase())) {\n              if (u = l, M = e, 1 === f && sl.test(l)) {\n                for ((r = e.getAttribute(\"id\")) ? r = r.replace(bl, Sl) : e.setAttribute(\"id\", r = V), h = w(l), c = h.length; c--;) {\n                  h[c] = \"#\" + r + \" \" + p(h[c]);\n                }\n\n                u = h.join(\",\"), M = gl.test(l) && s(e.parentNode) || e;\n              }\n\n              try {\n                return K.apply(t, M.querySelectorAll(u)), t;\n              } catch (e) {\n                q(l, !0);\n              } finally {\n                r === V && e.removeAttribute(\"id\");\n              }\n            }\n          }\n\n          return C(l.replace(il, \"$1\"), e, t, n);\n        }\n\n        function t() {\n          function l(t, n) {\n            return e.push(t + \" \") > b.cacheLength && delete l[e.shift()], l[t + \" \"] = n;\n          }\n\n          var e = [];\n          return l;\n        }\n\n        function n(l) {\n          return l[V] = !0, l;\n        }\n\n        function a(l) {\n          var e = L.createElement(\"fieldset\");\n\n          try {\n            return !!l(e);\n          } catch (l) {\n            return !1;\n          } finally {\n            e.parentNode && e.parentNode.removeChild(e), e = null;\n          }\n        }\n\n        function c(l, e) {\n          for (var t = l.split(\"|\"), n = t.length; n--;) {\n            b.attrHandle[t[n]] = e;\n          }\n        }\n\n        function i(l, e) {\n          var t = e && l,\n              n = t && 1 === l.nodeType && 1 === e.nodeType && l.sourceIndex - e.sourceIndex;\n          if (n) return n;\n          if (t) for (; t = t.nextSibling;) {\n            if (t === e) return -1;\n          }\n          return l ? 1 : -1;\n        }\n\n        function r(l) {\n          return function (e) {\n            return \"form\" in e ? e.parentNode && !1 === e.disabled ? \"label\" in e ? \"label\" in e.parentNode ? e.parentNode.disabled === l : e.disabled === l : e.isDisabled === l || e.isDisabled !== !l && wl(e) === l : e.disabled === l : \"label\" in e && e.disabled === l;\n          };\n        }\n\n        function o(l) {\n          return n(function (e) {\n            return e = +e, n(function (t, n) {\n              for (var a, c = l([], t.length, e), i = c.length; i--;) {\n                t[a = c[i]] && (t[a] = !(n[a] = t[a]));\n              }\n            });\n          });\n        }\n\n        function s(l) {\n          return l && \"undefined\" !== typeof l.getElementsByTagName && l;\n        }\n\n        function h() {}\n\n        function p(l) {\n          for (var e = 0, t = l.length, n = \"\"; e < t; e++) {\n            n += l[e].value;\n          }\n\n          return n;\n        }\n\n        function u(l, e, t) {\n          var n = e.dir,\n              a = e.next,\n              c = a || n,\n              i = t && \"parentNode\" === c,\n              r = I++;\n          return e.first ? function (e, t, a) {\n            for (; e = e[n];) {\n              if (1 === e.nodeType || i) return l(e, t, a);\n            }\n\n            return !1;\n          } : function (e, t, o) {\n            var s,\n                h,\n                p,\n                u = [G, r];\n\n            if (o) {\n              for (; e = e[n];) {\n                if ((1 === e.nodeType || i) && l(e, t, o)) return !0;\n              }\n            } else for (; e = e[n];) {\n              if (1 === e.nodeType || i) if (p = e[V] || (e[V] = {}), h = p[e.uniqueID] || (p[e.uniqueID] = {}), a && a === e.nodeName.toLowerCase()) e = e[n] || e;else {\n                if ((s = h[c]) && s[0] === G && s[1] === r) return u[2] = s[2];\n                if (h[c] = u, u[2] = l(e, t, o)) return !0;\n              }\n            }\n\n            return !1;\n          };\n        }\n\n        function M(l) {\n          return l.length > 1 ? function (e, t, n) {\n            for (var a = l.length; a--;) {\n              if (!l[a](e, t, n)) return !1;\n            }\n\n            return !0;\n          } : l[0];\n        }\n\n        function f(l, t, n) {\n          for (var a = 0, c = t.length; a < c; a++) {\n            e(l, t[a], n);\n          }\n\n          return n;\n        }\n\n        function d(l, e, t, n, a) {\n          for (var c, i = [], r = 0, o = l.length, s = null != e; r < o; r++) {\n            (c = l[r]) && (t && !t(c, n, a) || (i.push(c), s && e.push(r)));\n          }\n\n          return i;\n        }\n\n        function m(l, e, t, a, c, i) {\n          return a && !a[V] && (a = m(a)), c && !c[V] && (c = m(c, i)), n(function (n, i, r, o) {\n            var s,\n                h,\n                p,\n                u = [],\n                M = [],\n                m = i.length,\n                Z = n || f(e || \"*\", r.nodeType ? [r] : r, []),\n                g = !l || !n && e ? Z : d(Z, u, l, r, o),\n                y = t ? c || (n ? l : m || a) ? [] : i : g;\n            if (t && t(g, y, r, o), a) for (s = d(y, M), a(s, [], r, o), h = s.length; h--;) {\n              (p = s[h]) && (y[M[h]] = !(g[M[h]] = p));\n            }\n\n            if (n) {\n              if (c || l) {\n                if (c) {\n                  for (s = [], h = y.length; h--;) {\n                    (p = y[h]) && s.push(g[h] = p);\n                  }\n\n                  c(null, y = [], s, o);\n                }\n\n                for (h = y.length; h--;) {\n                  (p = y[h]) && (s = c ? Q(n, p) : u[h]) > -1 && (n[s] = !(i[s] = p));\n                }\n              }\n            } else y = d(y === i ? y.splice(m, y.length) : y), c ? c(null, i, y, o) : K.apply(i, y);\n          });\n        }\n\n        function Z(l) {\n          for (var e, t, n, a = l.length, c = b.relative[l[0].type], i = c || b.relative[\" \"], r = c ? 1 : 0, o = u(function (l) {\n            return l === e;\n          }, i, !0), s = u(function (l) {\n            return Q(e, l) > -1;\n          }, i, !0), h = [function (l, t, n) {\n            var a = !c && (n || t !== T) || ((e = t).nodeType ? o(l, t, n) : s(l, t, n));\n            return e = null, a;\n          }]; r < a; r++) {\n            if (t = b.relative[l[r].type]) h = [u(M(h), t)];else {\n              if (t = b.filter[l[r].type].apply(null, l[r].matches), t[V]) {\n                for (n = ++r; n < a && !b.relative[l[n].type]; n++) {\n                  ;\n                }\n\n                return m(r > 1 && M(h), r > 1 && p(l.slice(0, r - 1).concat({\n                  value: \" \" === l[r - 2].type ? \"*\" : \"\"\n                })).replace(il, \"$1\"), t, r < n && Z(l.slice(r, n)), n < a && Z(l = l.slice(n)), n < a && p(l));\n              }\n\n              h.push(t);\n            }\n          }\n\n          return M(h);\n        }\n\n        function g(l, t) {\n          var a = t.length > 0,\n              c = l.length > 0,\n              i = function i(n, _i, r, o, s) {\n            var h,\n                p,\n                u,\n                M = 0,\n                f = \"0\",\n                m = n && [],\n                Z = [],\n                g = T,\n                y = n || c && b.find.TAG(\"*\", s),\n                v = G += null == g ? 1 : Math.random() || .1,\n                S = y.length;\n\n            for (s && (T = _i === L || _i || s); f !== S && null != (h = y[f]); f++) {\n              if (c && h) {\n                for (p = 0, _i || h.ownerDocument === L || (z(h), r = !N); u = l[p++];) {\n                  if (u(h, _i || L, r)) {\n                    o.push(h);\n                    break;\n                  }\n                }\n\n                s && (G = v);\n              }\n\n              a && ((h = !u && h) && M--, n && m.push(h));\n            }\n\n            if (M += f, a && f !== M) {\n              for (p = 0; u = t[p++];) {\n                u(m, Z, _i, r);\n              }\n\n              if (n) {\n                if (M > 0) for (; f--;) {\n                  m[f] || Z[f] || (Z[f] = X.call(o));\n                }\n                Z = d(Z);\n              }\n\n              K.apply(o, Z), s && !n && Z.length > 0 && M + t.length > 1 && e.uniqueSort(o);\n            }\n\n            return s && (G = v, T = g), m;\n          };\n\n          return a ? n(i) : i;\n        }\n\n        var y,\n            v,\n            b,\n            S,\n            x,\n            w,\n            E,\n            C,\n            T,\n            A,\n            k,\n            z,\n            L,\n            j,\n            N,\n            O,\n            D,\n            P,\n            R,\n            V = \"sizzle\" + 1 * new Date(),\n            H = l.document,\n            G = 0,\n            I = 0,\n            B = t(),\n            U = t(),\n            _ = t(),\n            q = t(),\n            $ = function $(l, e) {\n          return l === e && (k = !0), 0;\n        },\n            F = {}.hasOwnProperty,\n            Y = [],\n            X = Y.pop,\n            W = Y.push,\n            K = Y.push,\n            J = Y.slice,\n            Q = function Q(l, e) {\n          for (var t = 0, n = l.length; t < n; t++) {\n            if (l[t] === e) return t;\n          }\n\n          return -1;\n        },\n            ll = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n            el = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n            tl = \"(?:\\\\\\\\.|[\\\\w-]|[^\\0-\\\\xa0])+\",\n            nl = \"\\\\[\" + el + \"*(\" + tl + \")(?:\" + el + \"*([*^$|!~]?=)\" + el + \"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + tl + \"))|)\" + el + \"*\\\\]\",\n            al = \":(\" + tl + \")(?:\\\\((('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + nl + \")*)|.*)\\\\)|)\",\n            cl = new RegExp(el + \"+\", \"g\"),\n            il = new RegExp(\"^\" + el + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + el + \"+$\", \"g\"),\n            rl = new RegExp(\"^\" + el + \"*,\" + el + \"*\"),\n            ol = new RegExp(\"^\" + el + \"*([>+~]|\" + el + \")\" + el + \"*\"),\n            sl = new RegExp(el + \"|>\"),\n            hl = new RegExp(al),\n            pl = new RegExp(\"^\" + tl + \"$\"),\n            ul = {\n          ID: new RegExp(\"^#(\" + tl + \")\"),\n          CLASS: new RegExp(\"^\\\\.(\" + tl + \")\"),\n          TAG: new RegExp(\"^(\" + tl + \"|[*])\"),\n          ATTR: new RegExp(\"^\" + nl),\n          PSEUDO: new RegExp(\"^\" + al),\n          CHILD: new RegExp(\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + el + \"*(even|odd|(([+-]|)(\\\\d*)n|)\" + el + \"*(?:([+-]|)\" + el + \"*(\\\\d+)|))\" + el + \"*\\\\)|)\", \"i\"),\n          bool: new RegExp(\"^(?:\" + ll + \")$\", \"i\"),\n          needsContext: new RegExp(\"^\" + el + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" + el + \"*((?:-\\\\d)?\\\\d*)\" + el + \"*\\\\)|)(?=[^-]|$)\", \"i\")\n        },\n            Ml = /HTML$/i,\n            fl = /^(?:input|select|textarea|button)$/i,\n            dl = /^h\\d$/i,\n            ml = /^[^{]+\\{\\s*\\[native \\w/,\n            Zl = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n            gl = /[+~]/,\n            yl = new RegExp(\"\\\\\\\\([\\\\da-f]{1,6}\" + el + \"?|(\" + el + \")|.)\", \"ig\"),\n            vl = function vl(l, e, t) {\n          var n = \"0x\" + e - 65536;\n          return n !== n || t ? e : n < 0 ? String.fromCharCode(n + 65536) : String.fromCharCode(n >> 10 | 55296, 1023 & n | 56320);\n        },\n            bl = /([\\0-\\x1f\\x7f]|^-?\\d)|^-$|[^\\0-\\x1f\\x7f-\\uFFFF\\w-]/g,\n            Sl = function Sl(l, e) {\n          return e ? \"\\0\" === l ? \"\\uFFFD\" : l.slice(0, -1) + \"\\\\\" + l.charCodeAt(l.length - 1).toString(16) + \" \" : \"\\\\\" + l;\n        },\n            xl = function xl() {\n          z();\n        },\n            wl = u(function (l) {\n          return !0 === l.disabled && \"fieldset\" === l.nodeName.toLowerCase();\n        }, {\n          dir: \"parentNode\",\n          next: \"legend\"\n        });\n\n        try {\n          K.apply(Y = J.call(H.childNodes), H.childNodes), Y[H.childNodes.length].nodeType;\n        } catch (l) {\n          K = {\n            apply: Y.length ? function (l, e) {\n              W.apply(l, J.call(e));\n            } : function (l, e) {\n              for (var t = l.length, n = 0; l[t++] = e[n++];) {\n                ;\n              }\n\n              l.length = t - 1;\n            }\n          };\n        }\n\n        v = e.support = {}, x = e.isXML = function (l) {\n          var e = l.namespaceURI,\n              t = (l.ownerDocument || l).documentElement;\n          return !Ml.test(e || t && t.nodeName || \"HTML\");\n        }, z = e.setDocument = function (l) {\n          var e,\n              t,\n              n = l ? l.ownerDocument || l : H;\n          return n !== L && 9 === n.nodeType && n.documentElement ? (L = n, j = L.documentElement, N = !x(L), H !== L && (t = L.defaultView) && t.top !== t && (t.addEventListener ? t.addEventListener(\"unload\", xl, !1) : t.attachEvent && t.attachEvent(\"onunload\", xl)), v.attributes = a(function (l) {\n            return l.className = \"i\", !l.getAttribute(\"className\");\n          }), v.getElementsByTagName = a(function (l) {\n            return l.appendChild(L.createComment(\"\")), !l.getElementsByTagName(\"*\").length;\n          }), v.getElementsByClassName = ml.test(L.getElementsByClassName), v.getById = a(function (l) {\n            return j.appendChild(l).id = V, !L.getElementsByName || !L.getElementsByName(V).length;\n          }), v.getById ? (b.filter.ID = function (l) {\n            var e = l.replace(yl, vl);\n            return function (l) {\n              return l.getAttribute(\"id\") === e;\n            };\n          }, b.find.ID = function (l, e) {\n            if (\"undefined\" !== typeof e.getElementById && N) {\n              var t = e.getElementById(l);\n              return t ? [t] : [];\n            }\n          }) : (b.filter.ID = function (l) {\n            var e = l.replace(yl, vl);\n            return function (l) {\n              var t = \"undefined\" !== typeof l.getAttributeNode && l.getAttributeNode(\"id\");\n              return t && t.value === e;\n            };\n          }, b.find.ID = function (l, e) {\n            if (\"undefined\" !== typeof e.getElementById && N) {\n              var t,\n                  n,\n                  a,\n                  c = e.getElementById(l);\n\n              if (c) {\n                if ((t = c.getAttributeNode(\"id\")) && t.value === l) return [c];\n\n                for (a = e.getElementsByName(l), n = 0; c = a[n++];) {\n                  if ((t = c.getAttributeNode(\"id\")) && t.value === l) return [c];\n                }\n              }\n\n              return [];\n            }\n          }), b.find.TAG = v.getElementsByTagName ? function (l, e) {\n            return \"undefined\" !== typeof e.getElementsByTagName ? e.getElementsByTagName(l) : v.qsa ? e.querySelectorAll(l) : void 0;\n          } : function (l, e) {\n            var t,\n                n = [],\n                a = 0,\n                c = e.getElementsByTagName(l);\n\n            if (\"*\" === l) {\n              for (; t = c[a++];) {\n                1 === t.nodeType && n.push(t);\n              }\n\n              return n;\n            }\n\n            return c;\n          }, b.find.CLASS = v.getElementsByClassName && function (l, e) {\n            if (\"undefined\" !== typeof e.getElementsByClassName && N) return e.getElementsByClassName(l);\n          }, D = [], O = [], (v.qsa = ml.test(L.querySelectorAll)) && (a(function (l) {\n            j.appendChild(l).innerHTML = \"<a id='\" + V + \"'></a><select id='\" + V + \"-\\r\\\\' msallowcapture=''><option selected=''></option></select>\", l.querySelectorAll(\"[msallowcapture^='']\").length && O.push(\"[*^$]=\" + el + \"*(?:''|\\\"\\\")\"), l.querySelectorAll(\"[selected]\").length || O.push(\"\\\\[\" + el + \"*(?:value|\" + ll + \")\"), l.querySelectorAll(\"[id~=\" + V + \"-]\").length || O.push(\"~=\"), l.querySelectorAll(\":checked\").length || O.push(\":checked\"), l.querySelectorAll(\"a#\" + V + \"+*\").length || O.push(\".#.+[+~]\");\n          }), a(function (l) {\n            l.innerHTML = \"<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>\";\n            var e = L.createElement(\"input\");\n            e.setAttribute(\"type\", \"hidden\"), l.appendChild(e).setAttribute(\"name\", \"D\"), l.querySelectorAll(\"[name=d]\").length && O.push(\"name\" + el + \"*[*^$|!~]?=\"), 2 !== l.querySelectorAll(\":enabled\").length && O.push(\":enabled\", \":disabled\"), j.appendChild(l).disabled = !0, 2 !== l.querySelectorAll(\":disabled\").length && O.push(\":enabled\", \":disabled\"), l.querySelectorAll(\"*,:x\"), O.push(\",.*:\");\n          })), (v.matchesSelector = ml.test(P = j.matches || j.webkitMatchesSelector || j.mozMatchesSelector || j.oMatchesSelector || j.msMatchesSelector)) && a(function (l) {\n            v.disconnectedMatch = P.call(l, \"*\"), P.call(l, \"[s!='']:x\"), D.push(\"!=\", al);\n          }), O = O.length && new RegExp(O.join(\"|\")), D = D.length && new RegExp(D.join(\"|\")), e = ml.test(j.compareDocumentPosition), R = e || ml.test(j.contains) ? function (l, e) {\n            var t = 9 === l.nodeType ? l.documentElement : l,\n                n = e && e.parentNode;\n            return l === n || !(!n || 1 !== n.nodeType || !(t.contains ? t.contains(n) : l.compareDocumentPosition && 16 & l.compareDocumentPosition(n)));\n          } : function (l, e) {\n            if (e) for (; e = e.parentNode;) {\n              if (e === l) return !0;\n            }\n            return !1;\n          }, $ = e ? function (l, e) {\n            if (l === e) return k = !0, 0;\n            var t = !l.compareDocumentPosition - !e.compareDocumentPosition;\n            return t || (t = (l.ownerDocument || l) === (e.ownerDocument || e) ? l.compareDocumentPosition(e) : 1, 1 & t || !v.sortDetached && e.compareDocumentPosition(l) === t ? l === L || l.ownerDocument === H && R(H, l) ? -1 : e === L || e.ownerDocument === H && R(H, e) ? 1 : A ? Q(A, l) - Q(A, e) : 0 : 4 & t ? -1 : 1);\n          } : function (l, e) {\n            if (l === e) return k = !0, 0;\n            var t,\n                n = 0,\n                a = l.parentNode,\n                c = e.parentNode,\n                r = [l],\n                o = [e];\n            if (!a || !c) return l === L ? -1 : e === L ? 1 : a ? -1 : c ? 1 : A ? Q(A, l) - Q(A, e) : 0;\n            if (a === c) return i(l, e);\n\n            for (t = l; t = t.parentNode;) {\n              r.unshift(t);\n            }\n\n            for (t = e; t = t.parentNode;) {\n              o.unshift(t);\n            }\n\n            for (; r[n] === o[n];) {\n              n++;\n            }\n\n            return n ? i(r[n], o[n]) : r[n] === H ? -1 : o[n] === H ? 1 : 0;\n          }, L) : L;\n        }, e.matches = function (l, t) {\n          return e(l, null, null, t);\n        }, e.matchesSelector = function (l, t) {\n          if ((l.ownerDocument || l) !== L && z(l), v.matchesSelector && N && !q[t + \" \"] && (!D || !D.test(t)) && (!O || !O.test(t))) try {\n            var n = P.call(l, t);\n            if (n || v.disconnectedMatch || l.document && 11 !== l.document.nodeType) return n;\n          } catch (l) {\n            q(t, !0);\n          }\n          return e(t, L, null, [l]).length > 0;\n        }, e.contains = function (l, e) {\n          return (l.ownerDocument || l) !== L && z(l), R(l, e);\n        }, e.attr = function (l, e) {\n          (l.ownerDocument || l) !== L && z(l);\n          var t = b.attrHandle[e.toLowerCase()],\n              n = t && F.call(b.attrHandle, e.toLowerCase()) ? t(l, e, !N) : void 0;\n          return void 0 !== n ? n : v.attributes || !N ? l.getAttribute(e) : (n = l.getAttributeNode(e)) && n.specified ? n.value : null;\n        }, e.escape = function (l) {\n          return (l + \"\").replace(bl, Sl);\n        }, e.error = function (l) {\n          throw new Error(\"Syntax error, unrecognized expression: \" + l);\n        }, e.uniqueSort = function (l) {\n          var e,\n              t = [],\n              n = 0,\n              a = 0;\n\n          if (k = !v.detectDuplicates, A = !v.sortStable && l.slice(0), l.sort($), k) {\n            for (; e = l[a++];) {\n              e === l[a] && (n = t.push(a));\n            }\n\n            for (; n--;) {\n              l.splice(t[n], 1);\n            }\n          }\n\n          return A = null, l;\n        }, S = e.getText = function (l) {\n          var e,\n              t = \"\",\n              n = 0,\n              a = l.nodeType;\n\n          if (a) {\n            if (1 === a || 9 === a || 11 === a) {\n              if (\"string\" === typeof l.textContent) return l.textContent;\n\n              for (l = l.firstChild; l; l = l.nextSibling) {\n                t += S(l);\n              }\n            } else if (3 === a || 4 === a) return l.nodeValue;\n          } else for (; e = l[n++];) {\n            t += S(e);\n          }\n\n          return t;\n        }, b = e.selectors = {\n          cacheLength: 50,\n          createPseudo: n,\n          match: ul,\n          attrHandle: {},\n          find: {},\n          relative: {\n            \">\": {\n              dir: \"parentNode\",\n              first: !0\n            },\n            \" \": {\n              dir: \"parentNode\"\n            },\n            \"+\": {\n              dir: \"previousSibling\",\n              first: !0\n            },\n            \"~\": {\n              dir: \"previousSibling\"\n            }\n          },\n          preFilter: {\n            ATTR: function ATTR(l) {\n              return l[1] = l[1].replace(yl, vl), l[3] = (l[3] || l[4] || l[5] || \"\").replace(yl, vl), \"~=\" === l[2] && (l[3] = \" \" + l[3] + \" \"), l.slice(0, 4);\n            },\n            CHILD: function CHILD(l) {\n              return l[1] = l[1].toLowerCase(), \"nth\" === l[1].slice(0, 3) ? (l[3] || e.error(l[0]), l[4] = +(l[4] ? l[5] + (l[6] || 1) : 2 * (\"even\" === l[3] || \"odd\" === l[3])), l[5] = +(l[7] + l[8] || \"odd\" === l[3])) : l[3] && e.error(l[0]), l;\n            },\n            PSEUDO: function PSEUDO(l) {\n              var e,\n                  t = !l[6] && l[2];\n              return ul.CHILD.test(l[0]) ? null : (l[3] ? l[2] = l[4] || l[5] || \"\" : t && hl.test(t) && (e = w(t, !0)) && (e = t.indexOf(\")\", t.length - e) - t.length) && (l[0] = l[0].slice(0, e), l[2] = t.slice(0, e)), l.slice(0, 3));\n            }\n          },\n          filter: {\n            TAG: function TAG(l) {\n              var e = l.replace(yl, vl).toLowerCase();\n              return \"*\" === l ? function () {\n                return !0;\n              } : function (l) {\n                return l.nodeName && l.nodeName.toLowerCase() === e;\n              };\n            },\n            CLASS: function CLASS(l) {\n              var e = B[l + \" \"];\n              return e || (e = new RegExp(\"(^|\" + el + \")\" + l + \"(\" + el + \"|$)\")) && B(l, function (l) {\n                return e.test(\"string\" === typeof l.className && l.className || \"undefined\" !== typeof l.getAttribute && l.getAttribute(\"class\") || \"\");\n              });\n            },\n            ATTR: function ATTR(l, t, n) {\n              return function (a) {\n                var c = e.attr(a, l);\n                return null == c ? \"!=\" === t : !t || (c += \"\", \"=\" === t ? c === n : \"!=\" === t ? c !== n : \"^=\" === t ? n && 0 === c.indexOf(n) : \"*=\" === t ? n && c.indexOf(n) > -1 : \"$=\" === t ? n && c.slice(-n.length) === n : \"~=\" === t ? (\" \" + c.replace(cl, \" \") + \" \").indexOf(n) > -1 : \"|=\" === t && (c === n || c.slice(0, n.length + 1) === n + \"-\"));\n              };\n            },\n            CHILD: function CHILD(l, e, t, n, a) {\n              var c = \"nth\" !== l.slice(0, 3),\n                  i = \"last\" !== l.slice(-4),\n                  r = \"of-type\" === e;\n              return 1 === n && 0 === a ? function (l) {\n                return !!l.parentNode;\n              } : function (e, t, o) {\n                var s,\n                    h,\n                    p,\n                    u,\n                    M,\n                    f,\n                    d = c !== i ? \"nextSibling\" : \"previousSibling\",\n                    m = e.parentNode,\n                    Z = r && e.nodeName.toLowerCase(),\n                    g = !o && !r,\n                    y = !1;\n\n                if (m) {\n                  if (c) {\n                    for (; d;) {\n                      for (u = e; u = u[d];) {\n                        if (r ? u.nodeName.toLowerCase() === Z : 1 === u.nodeType) return !1;\n                      }\n\n                      f = d = \"only\" === l && !f && \"nextSibling\";\n                    }\n\n                    return !0;\n                  }\n\n                  if (f = [i ? m.firstChild : m.lastChild], i && g) {\n                    for (u = m, p = u[V] || (u[V] = {}), h = p[u.uniqueID] || (p[u.uniqueID] = {}), s = h[l] || [], M = s[0] === G && s[1], y = M && s[2], u = M && m.childNodes[M]; u = ++M && u && u[d] || (y = M = 0) || f.pop();) {\n                      if (1 === u.nodeType && ++y && u === e) {\n                        h[l] = [G, M, y];\n                        break;\n                      }\n                    }\n                  } else if (g && (u = e, p = u[V] || (u[V] = {}), h = p[u.uniqueID] || (p[u.uniqueID] = {}), s = h[l] || [], M = s[0] === G && s[1], y = M), !1 === y) for (; (u = ++M && u && u[d] || (y = M = 0) || f.pop()) && ((r ? u.nodeName.toLowerCase() !== Z : 1 !== u.nodeType) || !++y || (g && (p = u[V] || (u[V] = {}), h = p[u.uniqueID] || (p[u.uniqueID] = {}), h[l] = [G, y]), u !== e));) {\n                    ;\n                  }\n\n                  return (y -= a) === n || y % n === 0 && y / n >= 0;\n                }\n              };\n            },\n            PSEUDO: function PSEUDO(l, t) {\n              var a,\n                  c = b.pseudos[l] || b.setFilters[l.toLowerCase()] || e.error(\"unsupported pseudo: \" + l);\n              return c[V] ? c(t) : c.length > 1 ? (a = [l, l, \"\", t], b.setFilters.hasOwnProperty(l.toLowerCase()) ? n(function (l, e) {\n                for (var n, a = c(l, t), i = a.length; i--;) {\n                  n = Q(l, a[i]), l[n] = !(e[n] = a[i]);\n                }\n              }) : function (l) {\n                return c(l, 0, a);\n              }) : c;\n            }\n          },\n          pseudos: {\n            not: n(function (l) {\n              var e = [],\n                  t = [],\n                  a = E(l.replace(il, \"$1\"));\n              return a[V] ? n(function (l, e, t, n) {\n                for (var c, i = a(l, null, n, []), r = l.length; r--;) {\n                  (c = i[r]) && (l[r] = !(e[r] = c));\n                }\n              }) : function (l, n, c) {\n                return e[0] = l, a(e, null, c, t), e[0] = null, !t.pop();\n              };\n            }),\n            has: n(function (l) {\n              return function (t) {\n                return e(l, t).length > 0;\n              };\n            }),\n            contains: n(function (l) {\n              return l = l.replace(yl, vl), function (e) {\n                return (e.textContent || S(e)).indexOf(l) > -1;\n              };\n            }),\n            lang: n(function (l) {\n              return pl.test(l || \"\") || e.error(\"unsupported lang: \" + l), l = l.replace(yl, vl).toLowerCase(), function (e) {\n                var t;\n\n                do {\n                  if (t = N ? e.lang : e.getAttribute(\"xml:lang\") || e.getAttribute(\"lang\")) return (t = t.toLowerCase()) === l || 0 === t.indexOf(l + \"-\");\n                } while ((e = e.parentNode) && 1 === e.nodeType);\n\n                return !1;\n              };\n            }),\n            target: function target(e) {\n              var t = l.location && l.location.hash;\n              return t && t.slice(1) === e.id;\n            },\n            root: function root(l) {\n              return l === j;\n            },\n            focus: function focus(l) {\n              return l === L.activeElement && (!L.hasFocus || L.hasFocus()) && !!(l.type || l.href || ~l.tabIndex);\n            },\n            enabled: r(!1),\n            disabled: r(!0),\n            checked: function checked(l) {\n              var e = l.nodeName.toLowerCase();\n              return \"input\" === e && !!l.checked || \"option\" === e && !!l.selected;\n            },\n            selected: function selected(l) {\n              return l.parentNode && l.parentNode.selectedIndex, !0 === l.selected;\n            },\n            empty: function empty(l) {\n              for (l = l.firstChild; l; l = l.nextSibling) {\n                if (l.nodeType < 6) return !1;\n              }\n\n              return !0;\n            },\n            parent: function parent(l) {\n              return !b.pseudos.empty(l);\n            },\n            header: function header(l) {\n              return dl.test(l.nodeName);\n            },\n            input: function input(l) {\n              return fl.test(l.nodeName);\n            },\n            button: function button(l) {\n              var e = l.nodeName.toLowerCase();\n              return \"input\" === e && \"button\" === l.type || \"button\" === e;\n            },\n            text: function text(l) {\n              var e;\n              return \"input\" === l.nodeName.toLowerCase() && \"text\" === l.type && (null == (e = l.getAttribute(\"type\")) || \"text\" === e.toLowerCase());\n            },\n            first: o(function () {\n              return [0];\n            }),\n            last: o(function (l, e) {\n              return [e - 1];\n            }),\n            eq: o(function (l, e, t) {\n              return [t < 0 ? t + e : t];\n            }),\n            even: o(function (l, e) {\n              for (var t = 0; t < e; t += 2) {\n                l.push(t);\n              }\n\n              return l;\n            }),\n            odd: o(function (l, e) {\n              for (var t = 1; t < e; t += 2) {\n                l.push(t);\n              }\n\n              return l;\n            }),\n            lt: o(function (l, e, t) {\n              for (var n = t < 0 ? t + e : t > e ? e : t; --n >= 0;) {\n                l.push(n);\n              }\n\n              return l;\n            }),\n            gt: o(function (l, e, t) {\n              for (var n = t < 0 ? t + e : t; ++n < e;) {\n                l.push(n);\n              }\n\n              return l;\n            })\n          }\n        }, b.pseudos.nth = b.pseudos.eq;\n\n        for (y in {\n          radio: !0,\n          checkbox: !0,\n          file: !0,\n          password: !0,\n          image: !0\n        }) {\n          b.pseudos[y] = function (l) {\n            return function (e) {\n              return \"input\" === e.nodeName.toLowerCase() && e.type === l;\n            };\n          }(y);\n        }\n\n        for (y in {\n          submit: !0,\n          reset: !0\n        }) {\n          b.pseudos[y] = function (l) {\n            return function (e) {\n              var t = e.nodeName.toLowerCase();\n              return (\"input\" === t || \"button\" === t) && e.type === l;\n            };\n          }(y);\n        }\n\n        return h.prototype = b.filters = b.pseudos, b.setFilters = new h(), w = e.tokenize = function (l, t) {\n          var n,\n              a,\n              c,\n              i,\n              r,\n              o,\n              s,\n              h = U[l + \" \"];\n          if (h) return t ? 0 : h.slice(0);\n\n          for (r = l, o = [], s = b.preFilter; r;) {\n            n && !(a = rl.exec(r)) || (a && (r = r.slice(a[0].length) || r), o.push(c = [])), n = !1, (a = ol.exec(r)) && (n = a.shift(), c.push({\n              value: n,\n              type: a[0].replace(il, \" \")\n            }), r = r.slice(n.length));\n\n            for (i in b.filter) {\n              !(a = ul[i].exec(r)) || s[i] && !(a = s[i](a)) || (n = a.shift(), c.push({\n                value: n,\n                type: i,\n                matches: a\n              }), r = r.slice(n.length));\n            }\n\n            if (!n) break;\n          }\n\n          return t ? r.length : r ? e.error(l) : U(l, o).slice(0);\n        }, E = e.compile = function (l, e) {\n          var t,\n              n = [],\n              a = [],\n              c = _[l + \" \"];\n\n          if (!c) {\n            for (e || (e = w(l)), t = e.length; t--;) {\n              c = Z(e[t]), c[V] ? n.push(c) : a.push(c);\n            }\n\n            c = _(l, g(a, n)), c.selector = l;\n          }\n\n          return c;\n        }, C = e.select = function (l, e, t, n) {\n          var a,\n              c,\n              i,\n              r,\n              o,\n              h = \"function\" === typeof l && l,\n              u = !n && w(l = h.selector || l);\n\n          if (t = t || [], 1 === u.length) {\n            if (c = u[0] = u[0].slice(0), c.length > 2 && \"ID\" === (i = c[0]).type && 9 === e.nodeType && N && b.relative[c[1].type]) {\n              if (!(e = (b.find.ID(i.matches[0].replace(yl, vl), e) || [])[0])) return t;\n              h && (e = e.parentNode), l = l.slice(c.shift().value.length);\n            }\n\n            for (a = ul.needsContext.test(l) ? 0 : c.length; a-- && (i = c[a], !b.relative[r = i.type]);) {\n              if ((o = b.find[r]) && (n = o(i.matches[0].replace(yl, vl), gl.test(c[0].type) && s(e.parentNode) || e))) {\n                if (c.splice(a, 1), !(l = n.length && p(c))) return K.apply(t, n), t;\n                break;\n              }\n            }\n          }\n\n          return (h || E(l, u))(n, e, !N, t, !e || gl.test(l) && s(e.parentNode) || e), t;\n        }, v.sortStable = V.split(\"\").sort($).join(\"\") === V, v.detectDuplicates = !!k, z(), v.sortDetached = a(function (l) {\n          return 1 & l.compareDocumentPosition(L.createElement(\"fieldset\"));\n        }), a(function (l) {\n          return l.innerHTML = \"<a href='#'></a>\", \"#\" === l.firstChild.getAttribute(\"href\");\n        }) || c(\"type|href|height|width\", function (l, e, t) {\n          if (!t) return l.getAttribute(e, \"type\" === e.toLowerCase() ? 1 : 2);\n        }), v.attributes && a(function (l) {\n          return l.innerHTML = \"<input/>\", l.firstChild.setAttribute(\"value\", \"\"), \"\" === l.firstChild.getAttribute(\"value\");\n        }) || c(\"value\", function (l, e, t) {\n          if (!t && \"input\" === l.nodeName.toLowerCase()) return l.defaultValue;\n        }), a(function (l) {\n          return null == l.getAttribute(\"disabled\");\n        }) || c(ll, function (l, e, t) {\n          var n;\n          if (!t) return !0 === l[e] ? e.toLowerCase() : (n = l.getAttributeNode(e)) && n.specified ? n.value : null;\n        }), e;\n      }(t);\n\n      Tl.find = kl, Tl.expr = kl.selectors, Tl.expr[\":\"] = Tl.expr.pseudos, Tl.uniqueSort = Tl.unique = kl.uniqueSort, Tl.text = kl.getText, Tl.isXMLDoc = kl.isXML, Tl.contains = kl.contains, Tl.escapeSelector = kl.escape;\n\n      var zl = function zl(l, e, t) {\n        for (var n = [], a = void 0 !== t; (l = l[e]) && 9 !== l.nodeType;) {\n          if (1 === l.nodeType) {\n            if (a && Tl(l).is(t)) break;\n            n.push(l);\n          }\n        }\n\n        return n;\n      },\n          Ll = function Ll(l, e) {\n        for (var t = []; l; l = l.nextSibling) {\n          1 === l.nodeType && l !== e && t.push(l);\n        }\n\n        return t;\n      },\n          jl = Tl.expr.match.needsContext,\n          Nl = /^<([a-z][^\\/\\0>:\\x20\\t\\r\\n\\f]*)[\\x20\\t\\r\\n\\f]*\\/?>(?:<\\/\\1>|)$/i;\n\n      Tl.filter = function (l, e, t) {\n        var n = e[0];\n        return t && (l = \":not(\" + l + \")\"), 1 === e.length && 1 === n.nodeType ? Tl.find.matchesSelector(n, l) ? [n] : [] : Tl.find.matches(l, Tl.grep(e, function (l) {\n          return 1 === l.nodeType;\n        }));\n      }, Tl.fn.extend({\n        find: function find(l) {\n          var e,\n              t,\n              n = this.length,\n              a = this;\n          if (\"string\" !== typeof l) return this.pushStack(Tl(l).filter(function () {\n            for (e = 0; e < n; e++) {\n              if (Tl.contains(a[e], this)) return !0;\n            }\n          }));\n\n          for (t = this.pushStack([]), e = 0; e < n; e++) {\n            Tl.find(l, a[e], t);\n          }\n\n          return n > 1 ? Tl.uniqueSort(t) : t;\n        },\n        filter: function filter(l) {\n          return this.pushStack(h(this, l || [], !1));\n        },\n        not: function not(l) {\n          return this.pushStack(h(this, l || [], !0));\n        },\n        is: function is(l) {\n          return !!h(this, \"string\" === typeof l && jl.test(l) ? Tl(l) : l || [], !1).length;\n        }\n      });\n      var Ol,\n          Dl = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]+))$/;\n      (Tl.fn.init = function (l, e, t) {\n        var n, a;\n        if (!l) return this;\n\n        if (t = t || Ol, \"string\" === typeof l) {\n          if (!(n = \"<\" === l[0] && \">\" === l[l.length - 1] && l.length >= 3 ? [null, l, null] : Dl.exec(l)) || !n[1] && e) return !e || e.jquery ? (e || t).find(l) : this.constructor(e).find(l);\n\n          if (n[1]) {\n            if (e = e instanceof Tl ? e[0] : e, Tl.merge(this, Tl.parseHTML(n[1], e && e.nodeType ? e.ownerDocument || e : ul, !0)), Nl.test(n[1]) && Tl.isPlainObject(e)) for (n in e) {\n              wl(this[n]) ? this[n](e[n]) : this.attr(n, e[n]);\n            }\n            return this;\n          }\n\n          return a = ul.getElementById(n[2]), a && (this[0] = a, this.length = 1), this;\n        }\n\n        return l.nodeType ? (this[0] = l, this.length = 1, this) : wl(l) ? void 0 !== t.ready ? t.ready(l) : l(Tl) : Tl.makeArray(l, this);\n      }).prototype = Tl.fn, Ol = Tl(ul);\n      var Pl = /^(?:parents|prev(?:Until|All))/,\n          Rl = {\n        children: !0,\n        contents: !0,\n        next: !0,\n        prev: !0\n      };\n      Tl.fn.extend({\n        has: function has(l) {\n          var e = Tl(l, this),\n              t = e.length;\n          return this.filter(function () {\n            for (var l = 0; l < t; l++) {\n              if (Tl.contains(this, e[l])) return !0;\n            }\n          });\n        },\n        closest: function closest(l, e) {\n          var t,\n              n = 0,\n              a = this.length,\n              c = [],\n              i = \"string\" !== typeof l && Tl(l);\n          if (!jl.test(l)) for (; n < a; n++) {\n            for (t = this[n]; t && t !== e; t = t.parentNode) {\n              if (t.nodeType < 11 && (i ? i.index(t) > -1 : 1 === t.nodeType && Tl.find.matchesSelector(t, l))) {\n                c.push(t);\n                break;\n              }\n            }\n          }\n          return this.pushStack(c.length > 1 ? Tl.uniqueSort(c) : c);\n        },\n        index: function index(l) {\n          return l ? \"string\" === typeof l ? Zl.call(Tl(l), this[0]) : Zl.call(this, l.jquery ? l[0] : l) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;\n        },\n        add: function add(l, e) {\n          return this.pushStack(Tl.uniqueSort(Tl.merge(this.get(), Tl(l, e))));\n        },\n        addBack: function addBack(l) {\n          return this.add(null == l ? this.prevObject : this.prevObject.filter(l));\n        }\n      }), Tl.each({\n        parent: function parent(l) {\n          var e = l.parentNode;\n          return e && 11 !== e.nodeType ? e : null;\n        },\n        parents: function parents(l) {\n          return zl(l, \"parentNode\");\n        },\n        parentsUntil: function parentsUntil(l, e, t) {\n          return zl(l, \"parentNode\", t);\n        },\n        next: function next(l) {\n          return p(l, \"nextSibling\");\n        },\n        prev: function prev(l) {\n          return p(l, \"previousSibling\");\n        },\n        nextAll: function nextAll(l) {\n          return zl(l, \"nextSibling\");\n        },\n        prevAll: function prevAll(l) {\n          return zl(l, \"previousSibling\");\n        },\n        nextUntil: function nextUntil(l, e, t) {\n          return zl(l, \"nextSibling\", t);\n        },\n        prevUntil: function prevUntil(l, e, t) {\n          return zl(l, \"previousSibling\", t);\n        },\n        siblings: function siblings(l) {\n          return Ll((l.parentNode || {}).firstChild, l);\n        },\n        children: function children(l) {\n          return Ll(l.firstChild);\n        },\n        contents: function contents(l) {\n          return \"undefined\" !== typeof l.contentDocument ? l.contentDocument : (s(l, \"template\") && (l = l.content || l), Tl.merge([], l.childNodes));\n        }\n      }, function (l, e) {\n        Tl.fn[l] = function (t, n) {\n          var a = Tl.map(this, e, t);\n          return \"Until\" !== l.slice(-5) && (n = t), n && \"string\" === typeof n && (a = Tl.filter(n, a)), this.length > 1 && (Rl[l] || Tl.uniqueSort(a), Pl.test(l) && a.reverse()), this.pushStack(a);\n        };\n      });\n      var Vl = /[^\\x20\\t\\r\\n\\f]+/g;\n      Tl.Callbacks = function (l) {\n        l = \"string\" === typeof l ? u(l) : Tl.extend({}, l);\n\n        var e,\n            t,\n            n,\n            a,\n            c = [],\n            i = [],\n            o = -1,\n            s = function s() {\n          for (a = a || l.once, n = e = !0; i.length; o = -1) {\n            for (t = i.shift(); ++o < c.length;) {\n              !1 === c[o].apply(t[0], t[1]) && l.stopOnFalse && (o = c.length, t = !1);\n            }\n          }\n\n          l.memory || (t = !1), e = !1, a && (c = t ? [] : \"\");\n        },\n            h = {\n          add: function add() {\n            return c && (t && !e && (o = c.length - 1, i.push(t)), function e(t) {\n              Tl.each(t, function (t, n) {\n                wl(n) ? l.unique && h.has(n) || c.push(n) : n && n.length && \"string\" !== r(n) && e(n);\n              });\n            }(arguments), t && !e && s()), this;\n          },\n          remove: function remove() {\n            return Tl.each(arguments, function (l, e) {\n              for (var t; (t = Tl.inArray(e, c, t)) > -1;) {\n                c.splice(t, 1), t <= o && o--;\n              }\n            }), this;\n          },\n          has: function has(l) {\n            return l ? Tl.inArray(l, c) > -1 : c.length > 0;\n          },\n          empty: function empty() {\n            return c && (c = []), this;\n          },\n          disable: function disable() {\n            return a = i = [], c = t = \"\", this;\n          },\n          disabled: function disabled() {\n            return !c;\n          },\n          lock: function lock() {\n            return a = i = [], t || e || (c = t = \"\"), this;\n          },\n          locked: function locked() {\n            return !!a;\n          },\n          fireWith: function fireWith(l, t) {\n            return a || (t = t || [], t = [l, t.slice ? t.slice() : t], i.push(t), e || s()), this;\n          },\n          fire: function fire() {\n            return h.fireWith(this, arguments), this;\n          },\n          fired: function fired() {\n            return !!n;\n          }\n        };\n\n        return h;\n      }, Tl.extend({\n        Deferred: function Deferred(l) {\n          var e = [[\"notify\", \"progress\", Tl.Callbacks(\"memory\"), Tl.Callbacks(\"memory\"), 2], [\"resolve\", \"done\", Tl.Callbacks(\"once memory\"), Tl.Callbacks(\"once memory\"), 0, \"resolved\"], [\"reject\", \"fail\", Tl.Callbacks(\"once memory\"), Tl.Callbacks(\"once memory\"), 1, \"rejected\"]],\n              n = \"pending\",\n              a = {\n            state: function state() {\n              return n;\n            },\n            always: function always() {\n              return c.done(arguments).fail(arguments), this;\n            },\n            catch: function _catch(l) {\n              return a.then(null, l);\n            },\n            pipe: function pipe() {\n              var l = arguments;\n              return Tl.Deferred(function (t) {\n                Tl.each(e, function (e, n) {\n                  var a = wl(l[n[4]]) && l[n[4]];\n                  c[n[1]](function () {\n                    var l = a && a.apply(this, arguments);\n                    l && wl(l.promise) ? l.promise().progress(t.notify).done(t.resolve).fail(t.reject) : t[n[0] + \"With\"](this, a ? [l] : arguments);\n                  });\n                }), l = null;\n              }).promise();\n            },\n            then: function then(l, n, a) {\n              function c(l, e, n, a) {\n                return function () {\n                  var r = this,\n                      o = arguments,\n                      s = function s() {\n                    var t, s;\n\n                    if (!(l < i)) {\n                      if ((t = n.apply(r, o)) === e.promise()) throw new TypeError(\"Thenable self-resolution\");\n                      s = t && (\"object\" === typeof t || \"function\" === typeof t) && t.then, wl(s) ? a ? s.call(t, c(i, e, M, a), c(i, e, f, a)) : (i++, s.call(t, c(i, e, M, a), c(i, e, f, a), c(i, e, M, e.notifyWith))) : (n !== M && (r = void 0, o = [t]), (a || e.resolveWith)(r, o));\n                    }\n                  },\n                      h = a ? s : function () {\n                    try {\n                      s();\n                    } catch (t) {\n                      Tl.Deferred.exceptionHook && Tl.Deferred.exceptionHook(t, h.stackTrace), l + 1 >= i && (n !== f && (r = void 0, o = [t]), e.rejectWith(r, o));\n                    }\n                  };\n\n                  l ? h() : (Tl.Deferred.getStackHook && (h.stackTrace = Tl.Deferred.getStackHook()), t.setTimeout(h));\n                };\n              }\n\n              var i = 0;\n              return Tl.Deferred(function (t) {\n                e[0][3].add(c(0, t, wl(a) ? a : M, t.notifyWith)), e[1][3].add(c(0, t, wl(l) ? l : M)), e[2][3].add(c(0, t, wl(n) ? n : f));\n              }).promise();\n            },\n            promise: function promise(l) {\n              return null != l ? Tl.extend(l, a) : a;\n            }\n          },\n              c = {};\n          return Tl.each(e, function (l, t) {\n            var i = t[2],\n                r = t[5];\n            a[t[1]] = i.add, r && i.add(function () {\n              n = r;\n            }, e[3 - l][2].disable, e[3 - l][3].disable, e[0][2].lock, e[0][3].lock), i.add(t[3].fire), c[t[0]] = function () {\n              return c[t[0] + \"With\"](this === c ? void 0 : this, arguments), this;\n            }, c[t[0] + \"With\"] = i.fireWith;\n          }), a.promise(c), l && l.call(c, c), c;\n        },\n        when: function when(l) {\n          var e = arguments.length,\n              t = e,\n              n = Array(t),\n              a = fl.call(arguments),\n              c = Tl.Deferred(),\n              i = function i(l) {\n            return function (t) {\n              n[l] = this, a[l] = arguments.length > 1 ? fl.call(arguments) : t, --e || c.resolveWith(n, a);\n            };\n          };\n\n          if (e <= 1 && (d(l, c.done(i(t)).resolve, c.reject, !e), \"pending\" === c.state() || wl(a[t] && a[t].then))) return c.then();\n\n          for (; t--;) {\n            d(a[t], i(t), c.reject);\n          }\n\n          return c.promise();\n        }\n      });\n      var Hl = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\n      Tl.Deferred.exceptionHook = function (l, e) {\n        t.console && t.console.warn && l && Hl.test(l.name) && t.console.warn(\"jQuery.Deferred exception: \" + l.message, l.stack, e);\n      }, Tl.readyException = function (l) {\n        t.setTimeout(function () {\n          throw l;\n        });\n      };\n      var Gl = Tl.Deferred();\n      Tl.fn.ready = function (l) {\n        return Gl.then(l).catch(function (l) {\n          Tl.readyException(l);\n        }), this;\n      }, Tl.extend({\n        isReady: !1,\n        readyWait: 1,\n        ready: function ready(l) {\n          (!0 === l ? --Tl.readyWait : Tl.isReady) || (Tl.isReady = !0, !0 !== l && --Tl.readyWait > 0 || Gl.resolveWith(ul, [Tl]));\n        }\n      }), Tl.ready.then = Gl.then, \"complete\" === ul.readyState || \"loading\" !== ul.readyState && !ul.documentElement.doScroll ? t.setTimeout(Tl.ready) : (ul.addEventListener(\"DOMContentLoaded\", m), t.addEventListener(\"load\", m));\n\n      var Il = function Il(l, e, t, n, a, c, i) {\n        var o = 0,\n            s = l.length,\n            h = null == t;\n\n        if (\"object\" === r(t)) {\n          a = !0;\n\n          for (o in t) {\n            Il(l, e, o, t[o], !0, c, i);\n          }\n        } else if (void 0 !== n && (a = !0, wl(n) || (i = !0), h && (i ? (e.call(l, n), e = null) : (h = e, e = function e(l, _e2, t) {\n          return h.call(Tl(l), t);\n        })), e)) for (; o < s; o++) {\n          e(l[o], t, i ? n : n.call(l[o], o, e(l[o], t)));\n        }\n\n        return a ? l : h ? e.call(l) : s ? e(l[0], t) : c;\n      },\n          Bl = /^-ms-/,\n          Ul = /-([a-z])/g,\n          _l = function _l(l) {\n        return 1 === l.nodeType || 9 === l.nodeType || !+l.nodeType;\n      };\n\n      y.uid = 1, y.prototype = {\n        cache: function cache(l) {\n          var e = l[this.expando];\n          return e || (e = {}, _l(l) && (l.nodeType ? l[this.expando] = e : Object.defineProperty(l, this.expando, {\n            value: e,\n            configurable: !0\n          }))), e;\n        },\n        set: function set(l, e, t) {\n          var n,\n              a = this.cache(l);\n          if (\"string\" === typeof e) a[g(e)] = t;else for (n in e) {\n            a[g(n)] = e[n];\n          }\n          return a;\n        },\n        get: function get(l, e) {\n          return void 0 === e ? this.cache(l) : l[this.expando] && l[this.expando][g(e)];\n        },\n        access: function access(l, e, t) {\n          return void 0 === e || e && \"string\" === typeof e && void 0 === t ? this.get(l, e) : (this.set(l, e, t), void 0 !== t ? t : e);\n        },\n        remove: function remove(l, e) {\n          var t,\n              n = l[this.expando];\n\n          if (void 0 !== n) {\n            if (void 0 !== e) {\n              Array.isArray(e) ? e = e.map(g) : (e = g(e), e = e in n ? [e] : e.match(Vl) || []), t = e.length;\n\n              for (; t--;) {\n                delete n[e[t]];\n              }\n            }\n\n            (void 0 === e || Tl.isEmptyObject(n)) && (l.nodeType ? l[this.expando] = void 0 : delete l[this.expando]);\n          }\n        },\n        hasData: function hasData(l) {\n          var e = l[this.expando];\n          return void 0 !== e && !Tl.isEmptyObject(e);\n        }\n      };\n      var ql = new y(),\n          $l = new y(),\n          Fl = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n          Yl = /[A-Z]/g;\n      Tl.extend({\n        hasData: function hasData(l) {\n          return $l.hasData(l) || ql.hasData(l);\n        },\n        data: function data(l, e, t) {\n          return $l.access(l, e, t);\n        },\n        removeData: function removeData(l, e) {\n          $l.remove(l, e);\n        },\n        _data: function _data(l, e, t) {\n          return ql.access(l, e, t);\n        },\n        _removeData: function _removeData(l, e) {\n          ql.remove(l, e);\n        }\n      }), Tl.fn.extend({\n        data: function data(l, e) {\n          var t,\n              n,\n              a,\n              c = this[0],\n              i = c && c.attributes;\n\n          if (void 0 === l) {\n            if (this.length && (a = $l.get(c), 1 === c.nodeType && !ql.get(c, \"hasDataAttrs\"))) {\n              for (t = i.length; t--;) {\n                i[t] && (n = i[t].name, 0 === n.indexOf(\"data-\") && (n = g(n.slice(5)), b(c, n, a[n])));\n              }\n\n              ql.set(c, \"hasDataAttrs\", !0);\n            }\n\n            return a;\n          }\n\n          return \"object\" === typeof l ? this.each(function () {\n            $l.set(this, l);\n          }) : Il(this, function (e) {\n            var t;\n\n            if (c && void 0 === e) {\n              if (void 0 !== (t = $l.get(c, l))) return t;\n              if (void 0 !== (t = b(c, l))) return t;\n            } else this.each(function () {\n              $l.set(this, l, e);\n            });\n          }, null, e, arguments.length > 1, null, !0);\n        },\n        removeData: function removeData(l) {\n          return this.each(function () {\n            $l.remove(this, l);\n          });\n        }\n      }), Tl.extend({\n        queue: function queue(l, e, t) {\n          var n;\n          if (l) return e = (e || \"fx\") + \"queue\", n = ql.get(l, e), t && (!n || Array.isArray(t) ? n = ql.access(l, e, Tl.makeArray(t)) : n.push(t)), n || [];\n        },\n        dequeue: function dequeue(l, e) {\n          e = e || \"fx\";\n\n          var t = Tl.queue(l, e),\n              n = t.length,\n              a = t.shift(),\n              c = Tl._queueHooks(l, e),\n              i = function i() {\n            Tl.dequeue(l, e);\n          };\n\n          \"inprogress\" === a && (a = t.shift(), n--), a && (\"fx\" === e && t.unshift(\"inprogress\"), delete c.stop, a.call(l, i, c)), !n && c && c.empty.fire();\n        },\n        _queueHooks: function _queueHooks(l, e) {\n          var t = e + \"queueHooks\";\n          return ql.get(l, t) || ql.access(l, t, {\n            empty: Tl.Callbacks(\"once memory\").add(function () {\n              ql.remove(l, [e + \"queue\", t]);\n            })\n          });\n        }\n      }), Tl.fn.extend({\n        queue: function queue(l, e) {\n          var t = 2;\n          return \"string\" !== typeof l && (e = l, l = \"fx\", t--), arguments.length < t ? Tl.queue(this[0], l) : void 0 === e ? this : this.each(function () {\n            var t = Tl.queue(this, l, e);\n            Tl._queueHooks(this, l), \"fx\" === l && \"inprogress\" !== t[0] && Tl.dequeue(this, l);\n          });\n        },\n        dequeue: function dequeue(l) {\n          return this.each(function () {\n            Tl.dequeue(this, l);\n          });\n        },\n        clearQueue: function clearQueue(l) {\n          return this.queue(l || \"fx\", []);\n        },\n        promise: function promise(l, e) {\n          var t,\n              n = 1,\n              a = Tl.Deferred(),\n              c = this,\n              i = this.length,\n              r = function r() {\n            --n || a.resolveWith(c, [c]);\n          };\n\n          for (\"string\" !== typeof l && (e = l, l = void 0), l = l || \"fx\"; i--;) {\n            (t = ql.get(c[i], l + \"queueHooks\")) && t.empty && (n++, t.empty.add(r));\n          }\n\n          return r(), a.promise(e);\n        }\n      });\n\n      var Xl = /[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/.source,\n          Wl = new RegExp(\"^(?:([+-])=|)(\" + Xl + \")([a-z%]*)$\", \"i\"),\n          Kl = [\"Top\", \"Right\", \"Bottom\", \"Left\"],\n          Jl = ul.documentElement,\n          Ql = function Ql(l) {\n        return Tl.contains(l.ownerDocument, l);\n      },\n          le = {\n        composed: !0\n      };\n\n      Jl.attachShadow && (Ql = function Ql(l) {\n        return Tl.contains(l.ownerDocument, l) || l.getRootNode(le) === l.ownerDocument;\n      });\n\n      var ee = function ee(l, e) {\n        return l = e || l, \"none\" === l.style.display || \"\" === l.style.display && Ql(l) && \"none\" === Tl.css(l, \"display\");\n      },\n          te = function te(l, e, t, n) {\n        var a,\n            c,\n            i = {};\n\n        for (c in e) {\n          i[c] = l.style[c], l.style[c] = e[c];\n        }\n\n        a = t.apply(l, n || []);\n\n        for (c in e) {\n          l.style[c] = i[c];\n        }\n\n        return a;\n      },\n          ne = {};\n\n      Tl.fn.extend({\n        show: function show() {\n          return w(this, !0);\n        },\n        hide: function hide() {\n          return w(this);\n        },\n        toggle: function toggle(l) {\n          return \"boolean\" === typeof l ? l ? this.show() : this.hide() : this.each(function () {\n            ee(this) ? Tl(this).show() : Tl(this).hide();\n          });\n        }\n      });\n      var ae = /^(?:checkbox|radio)$/i,\n          ce = /<([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)/i,\n          ie = /^$|^module$|\\/(?:java|ecma)script/i,\n          re = {\n        option: [1, \"<select multiple='multiple'>\", \"</select>\"],\n        thead: [1, \"<table>\", \"</table>\"],\n        col: [2, \"<table><colgroup>\", \"</colgroup></table>\"],\n        tr: [2, \"<table><tbody>\", \"</tbody></table>\"],\n        td: [3, \"<table><tbody><tr>\", \"</tr></tbody></table>\"],\n        _default: [0, \"\", \"\"]\n      };\n      re.optgroup = re.option, re.tbody = re.tfoot = re.colgroup = re.caption = re.thead, re.th = re.td;\n      var oe = /<|&#?\\w+;/;\n      !function () {\n        var l = ul.createDocumentFragment(),\n            e = l.appendChild(ul.createElement(\"div\")),\n            t = ul.createElement(\"input\");\n        t.setAttribute(\"type\", \"radio\"), t.setAttribute(\"checked\", \"checked\"), t.setAttribute(\"name\", \"t\"), e.appendChild(t), xl.checkClone = e.cloneNode(!0).cloneNode(!0).lastChild.checked, e.innerHTML = \"<textarea>x</textarea>\", xl.noCloneChecked = !!e.cloneNode(!0).lastChild.defaultValue;\n      }();\n      var se = /^key/,\n          he = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\n          pe = /^([^.]*)(?:\\.(.+)|)/;\n      Tl.event = {\n        global: {},\n        add: function add(l, e, t, n, a) {\n          var c,\n              i,\n              r,\n              o,\n              s,\n              h,\n              p,\n              u,\n              M,\n              f,\n              d,\n              m = ql.get(l);\n          if (m) for (t.handler && (c = t, t = c.handler, a = c.selector), a && Tl.find.matchesSelector(Jl, a), t.guid || (t.guid = Tl.guid++), (o = m.events) || (o = m.events = {}), (i = m.handle) || (i = m.handle = function (e) {\n            return \"undefined\" !== typeof Tl && Tl.event.triggered !== e.type ? Tl.event.dispatch.apply(l, arguments) : void 0;\n          }), e = (e || \"\").match(Vl) || [\"\"], s = e.length; s--;) {\n            r = pe.exec(e[s]) || [], M = d = r[1], f = (r[2] || \"\").split(\".\").sort(), M && (p = Tl.event.special[M] || {}, M = (a ? p.delegateType : p.bindType) || M, p = Tl.event.special[M] || {}, h = Tl.extend({\n              type: M,\n              origType: d,\n              data: n,\n              handler: t,\n              guid: t.guid,\n              selector: a,\n              needsContext: a && Tl.expr.match.needsContext.test(a),\n              namespace: f.join(\".\")\n            }, c), (u = o[M]) || (u = o[M] = [], u.delegateCount = 0, p.setup && !1 !== p.setup.call(l, n, f, i) || l.addEventListener && l.addEventListener(M, i)), p.add && (p.add.call(l, h), h.handler.guid || (h.handler.guid = t.guid)), a ? u.splice(u.delegateCount++, 0, h) : u.push(h), Tl.event.global[M] = !0);\n          }\n        },\n        remove: function remove(l, e, t, n, a) {\n          var c,\n              i,\n              r,\n              o,\n              s,\n              h,\n              p,\n              u,\n              M,\n              f,\n              d,\n              m = ql.hasData(l) && ql.get(l);\n\n          if (m && (o = m.events)) {\n            for (e = (e || \"\").match(Vl) || [\"\"], s = e.length; s--;) {\n              if (r = pe.exec(e[s]) || [], M = d = r[1], f = (r[2] || \"\").split(\".\").sort(), M) {\n                for (p = Tl.event.special[M] || {}, M = (n ? p.delegateType : p.bindType) || M, u = o[M] || [], r = r[2] && new RegExp(\"(^|\\\\.)\" + f.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\"), i = c = u.length; c--;) {\n                  h = u[c], !a && d !== h.origType || t && t.guid !== h.guid || r && !r.test(h.namespace) || n && n !== h.selector && (\"**\" !== n || !h.selector) || (u.splice(c, 1), h.selector && u.delegateCount--, p.remove && p.remove.call(l, h));\n                }\n\n                i && !u.length && (p.teardown && !1 !== p.teardown.call(l, f, m.handle) || Tl.removeEvent(l, M, m.handle), delete o[M]);\n              } else for (M in o) {\n                Tl.event.remove(l, M + e[s], t, n, !0);\n              }\n            }\n\n            Tl.isEmptyObject(o) && ql.remove(l, \"handle events\");\n          }\n        },\n        dispatch: function dispatch(l) {\n          var e,\n              t,\n              n,\n              a,\n              c,\n              i,\n              r = Tl.event.fix(l),\n              o = new Array(arguments.length),\n              s = (ql.get(this, \"events\") || {})[r.type] || [],\n              h = Tl.event.special[r.type] || {};\n\n          for (o[0] = r, e = 1; e < arguments.length; e++) {\n            o[e] = arguments[e];\n          }\n\n          if (r.delegateTarget = this, !h.preDispatch || !1 !== h.preDispatch.call(this, r)) {\n            for (i = Tl.event.handlers.call(this, r, s), e = 0; (a = i[e++]) && !r.isPropagationStopped();) {\n              for (r.currentTarget = a.elem, t = 0; (c = a.handlers[t++]) && !r.isImmediatePropagationStopped();) {\n                r.rnamespace && !1 !== c.namespace && !r.rnamespace.test(c.namespace) || (r.handleObj = c, r.data = c.data, void 0 !== (n = ((Tl.event.special[c.origType] || {}).handle || c.handler).apply(a.elem, o)) && !1 === (r.result = n) && (r.preventDefault(), r.stopPropagation()));\n              }\n            }\n\n            return h.postDispatch && h.postDispatch.call(this, r), r.result;\n          }\n        },\n        handlers: function handlers(l, e) {\n          var t,\n              n,\n              a,\n              c,\n              i,\n              r = [],\n              o = e.delegateCount,\n              s = l.target;\n          if (o && s.nodeType && !(\"click\" === l.type && l.button >= 1)) for (; s !== this; s = s.parentNode || this) {\n            if (1 === s.nodeType && (\"click\" !== l.type || !0 !== s.disabled)) {\n              for (c = [], i = {}, t = 0; t < o; t++) {\n                n = e[t], a = n.selector + \" \", void 0 === i[a] && (i[a] = n.needsContext ? Tl(a, this).index(s) > -1 : Tl.find(a, this, null, [s]).length), i[a] && c.push(n);\n              }\n\n              c.length && r.push({\n                elem: s,\n                handlers: c\n              });\n            }\n          }\n          return s = this, o < e.length && r.push({\n            elem: s,\n            handlers: e.slice(o)\n          }), r;\n        },\n        addProp: function addProp(l, e) {\n          Object.defineProperty(Tl.Event.prototype, l, {\n            enumerable: !0,\n            configurable: !0,\n            get: wl(e) ? function () {\n              if (this.originalEvent) return e(this.originalEvent);\n            } : function () {\n              if (this.originalEvent) return this.originalEvent[l];\n            },\n            set: function set(e) {\n              Object.defineProperty(this, l, {\n                enumerable: !0,\n                configurable: !0,\n                writable: !0,\n                value: e\n              });\n            }\n          });\n        },\n        fix: function fix(l) {\n          return l[Tl.expando] ? l : new Tl.Event(l);\n        },\n        special: {\n          load: {\n            noBubble: !0\n          },\n          click: {\n            setup: function setup(l) {\n              var e = this || l;\n              return ae.test(e.type) && e.click && s(e, \"input\") && void 0 === ql.get(e, \"click\") && N(e, \"click\", A), !1;\n            },\n            trigger: function trigger(l) {\n              var e = this || l;\n              return ae.test(e.type) && e.click && s(e, \"input\") && void 0 === ql.get(e, \"click\") && N(e, \"click\"), !0;\n            },\n            _default: function _default(l) {\n              var e = l.target;\n              return ae.test(e.type) && e.click && s(e, \"input\") && ql.get(e, \"click\") || s(e, \"a\");\n            }\n          },\n          beforeunload: {\n            postDispatch: function postDispatch(l) {\n              void 0 !== l.result && l.originalEvent && (l.originalEvent.returnValue = l.result);\n            }\n          }\n        }\n      }, Tl.removeEvent = function (l, e, t) {\n        l.removeEventListener && l.removeEventListener(e, t);\n      }, Tl.Event = function (l, e) {\n        if (!(this instanceof Tl.Event)) return new Tl.Event(l, e);\n        l && l.type ? (this.originalEvent = l, this.type = l.type, this.isDefaultPrevented = l.defaultPrevented || void 0 === l.defaultPrevented && !1 === l.returnValue ? A : k, this.target = l.target && 3 === l.target.nodeType ? l.target.parentNode : l.target, this.currentTarget = l.currentTarget, this.relatedTarget = l.relatedTarget) : this.type = l, e && Tl.extend(this, e), this.timeStamp = l && l.timeStamp || Date.now(), this[Tl.expando] = !0;\n      }, Tl.Event.prototype = {\n        constructor: Tl.Event,\n        isDefaultPrevented: k,\n        isPropagationStopped: k,\n        isImmediatePropagationStopped: k,\n        isSimulated: !1,\n        preventDefault: function preventDefault() {\n          var l = this.originalEvent;\n          this.isDefaultPrevented = A, l && !this.isSimulated && l.preventDefault();\n        },\n        stopPropagation: function stopPropagation() {\n          var l = this.originalEvent;\n          this.isPropagationStopped = A, l && !this.isSimulated && l.stopPropagation();\n        },\n        stopImmediatePropagation: function stopImmediatePropagation() {\n          var l = this.originalEvent;\n          this.isImmediatePropagationStopped = A, l && !this.isSimulated && l.stopImmediatePropagation(), this.stopPropagation();\n        }\n      }, Tl.each({\n        altKey: !0,\n        bubbles: !0,\n        cancelable: !0,\n        changedTouches: !0,\n        ctrlKey: !0,\n        detail: !0,\n        eventPhase: !0,\n        metaKey: !0,\n        pageX: !0,\n        pageY: !0,\n        shiftKey: !0,\n        view: !0,\n        char: !0,\n        code: !0,\n        charCode: !0,\n        key: !0,\n        keyCode: !0,\n        button: !0,\n        buttons: !0,\n        clientX: !0,\n        clientY: !0,\n        offsetX: !0,\n        offsetY: !0,\n        pointerId: !0,\n        pointerType: !0,\n        screenX: !0,\n        screenY: !0,\n        targetTouches: !0,\n        toElement: !0,\n        touches: !0,\n        which: function which(l) {\n          var e = l.button;\n          return null == l.which && se.test(l.type) ? null != l.charCode ? l.charCode : l.keyCode : !l.which && void 0 !== e && he.test(l.type) ? 1 & e ? 1 : 2 & e ? 3 : 4 & e ? 2 : 0 : l.which;\n        }\n      }, Tl.event.addProp), Tl.each({\n        focus: \"focusin\",\n        blur: \"focusout\"\n      }, function (l, e) {\n        Tl.event.special[l] = {\n          setup: function setup() {\n            return N(this, l, z), !1;\n          },\n          trigger: function trigger() {\n            return N(this, l), !0;\n          },\n          delegateType: e\n        };\n      }), Tl.each({\n        mouseenter: \"mouseover\",\n        mouseleave: \"mouseout\",\n        pointerenter: \"pointerover\",\n        pointerleave: \"pointerout\"\n      }, function (l, e) {\n        Tl.event.special[l] = {\n          delegateType: e,\n          bindType: e,\n          handle: function handle(l) {\n            var t,\n                n = this,\n                a = l.relatedTarget,\n                c = l.handleObj;\n            return a && (a === n || Tl.contains(n, a)) || (l.type = c.origType, t = c.handler.apply(this, arguments), l.type = e), t;\n          }\n        };\n      }), Tl.fn.extend({\n        on: function on(l, e, t, n) {\n          return j(this, l, e, t, n);\n        },\n        one: function one(l, e, t, n) {\n          return j(this, l, e, t, n, 1);\n        },\n        off: function off(l, e, t) {\n          var n, a;\n          if (l && l.preventDefault && l.handleObj) return n = l.handleObj, Tl(l.delegateTarget).off(n.namespace ? n.origType + \".\" + n.namespace : n.origType, n.selector, n.handler), this;\n\n          if (\"object\" === typeof l) {\n            for (a in l) {\n              this.off(a, e, l[a]);\n            }\n\n            return this;\n          }\n\n          return !1 !== e && \"function\" !== typeof e || (t = e, e = void 0), !1 === t && (t = k), this.each(function () {\n            Tl.event.remove(this, l, t, e);\n          });\n        }\n      });\n      var ue = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\/\\0>\\x20\\t\\r\\n\\f]*)[^>]*)\\/>/gi,\n          Me = /<script|<style|<link/i,\n          fe = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n          de = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g;\n      Tl.extend({\n        htmlPrefilter: function htmlPrefilter(l) {\n          return l.replace(ue, \"<$1></$2>\");\n        },\n        clone: function clone(l, e, t) {\n          var n,\n              a,\n              c,\n              i,\n              r = l.cloneNode(!0),\n              o = Ql(l);\n          if (!xl.noCloneChecked && (1 === l.nodeType || 11 === l.nodeType) && !Tl.isXMLDoc(l)) for (i = E(r), c = E(l), n = 0, a = c.length; n < a; n++) {\n            V(c[n], i[n]);\n          }\n          if (e) if (t) for (c = c || E(l), i = i || E(r), n = 0, a = c.length; n < a; n++) {\n            R(c[n], i[n]);\n          } else R(l, r);\n          return i = E(r, \"script\"), i.length > 0 && C(i, !o && E(l, \"script\")), r;\n        },\n        cleanData: function cleanData(l) {\n          for (var e, t, n, a = Tl.event.special, c = 0; void 0 !== (t = l[c]); c++) {\n            if (_l(t)) {\n              if (e = t[ql.expando]) {\n                if (e.events) for (n in e.events) {\n                  a[n] ? Tl.event.remove(t, n) : Tl.removeEvent(t, n, e.handle);\n                }\n                t[ql.expando] = void 0;\n              }\n\n              t[$l.expando] && (t[$l.expando] = void 0);\n            }\n          }\n        }\n      }), Tl.fn.extend({\n        detach: function detach(l) {\n          return G(this, l, !0);\n        },\n        remove: function remove(l) {\n          return G(this, l);\n        },\n        text: function text(l) {\n          return Il(this, function (l) {\n            return void 0 === l ? Tl.text(this) : this.empty().each(function () {\n              1 !== this.nodeType && 11 !== this.nodeType && 9 !== this.nodeType || (this.textContent = l);\n            });\n          }, null, l, arguments.length);\n        },\n        append: function append() {\n          return H(this, arguments, function (l) {\n            if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {\n              O(this, l).appendChild(l);\n            }\n          });\n        },\n        prepend: function prepend() {\n          return H(this, arguments, function (l) {\n            if (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) {\n              var e = O(this, l);\n              e.insertBefore(l, e.firstChild);\n            }\n          });\n        },\n        before: function before() {\n          return H(this, arguments, function (l) {\n            this.parentNode && this.parentNode.insertBefore(l, this);\n          });\n        },\n        after: function after() {\n          return H(this, arguments, function (l) {\n            this.parentNode && this.parentNode.insertBefore(l, this.nextSibling);\n          });\n        },\n        empty: function empty() {\n          for (var l, e = 0; null != (l = this[e]); e++) {\n            1 === l.nodeType && (Tl.cleanData(E(l, !1)), l.textContent = \"\");\n          }\n\n          return this;\n        },\n        clone: function clone(l, e) {\n          return l = null != l && l, e = null == e ? l : e, this.map(function () {\n            return Tl.clone(this, l, e);\n          });\n        },\n        html: function html(l) {\n          return Il(this, function (l) {\n            var e = this[0] || {},\n                t = 0,\n                n = this.length;\n            if (void 0 === l && 1 === e.nodeType) return e.innerHTML;\n\n            if (\"string\" === typeof l && !Me.test(l) && !re[(ce.exec(l) || [\"\", \"\"])[1].toLowerCase()]) {\n              l = Tl.htmlPrefilter(l);\n\n              try {\n                for (; t < n; t++) {\n                  e = this[t] || {}, 1 === e.nodeType && (Tl.cleanData(E(e, !1)), e.innerHTML = l);\n                }\n\n                e = 0;\n              } catch (l) {}\n            }\n\n            e && this.empty().append(l);\n          }, null, l, arguments.length);\n        },\n        replaceWith: function replaceWith() {\n          var l = [];\n          return H(this, arguments, function (e) {\n            var t = this.parentNode;\n            Tl.inArray(this, l) < 0 && (Tl.cleanData(E(this)), t && t.replaceChild(e, this));\n          }, l);\n        }\n      }), Tl.each({\n        appendTo: \"append\",\n        prependTo: \"prepend\",\n        insertBefore: \"before\",\n        insertAfter: \"after\",\n        replaceAll: \"replaceWith\"\n      }, function (l, e) {\n        Tl.fn[l] = function (l) {\n          for (var t, n = [], a = Tl(l), c = a.length - 1, i = 0; i <= c; i++) {\n            t = i === c ? this : this.clone(!0), Tl(a[i])[e](t), ml.apply(n, t.get());\n          }\n\n          return this.pushStack(n);\n        };\n      });\n\n      var me = new RegExp(\"^(\" + Xl + \")(?!px)[a-z%]+$\", \"i\"),\n          Ze = function Ze(l) {\n        var e = l.ownerDocument.defaultView;\n        return e && e.opener || (e = t), e.getComputedStyle(l);\n      },\n          ge = new RegExp(Kl.join(\"|\"), \"i\");\n\n      !function () {\n        function l() {\n          if (s) {\n            o.style.cssText = \"position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0\", s.style.cssText = \"position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%\", Jl.appendChild(o).appendChild(s);\n            var l = t.getComputedStyle(s);\n            n = \"1%\" !== l.top, r = 12 === e(l.marginLeft), s.style.right = \"60%\", i = 36 === e(l.right), a = 36 === e(l.width), s.style.position = \"absolute\", c = 12 === e(s.offsetWidth / 3), Jl.removeChild(o), s = null;\n          }\n        }\n\n        function e(l) {\n          return Math.round(parseFloat(l));\n        }\n\n        var n,\n            a,\n            c,\n            i,\n            r,\n            o = ul.createElement(\"div\"),\n            s = ul.createElement(\"div\");\n        s.style && (s.style.backgroundClip = \"content-box\", s.cloneNode(!0).style.backgroundClip = \"\", xl.clearCloneStyle = \"content-box\" === s.style.backgroundClip, Tl.extend(xl, {\n          boxSizingReliable: function boxSizingReliable() {\n            return l(), a;\n          },\n          pixelBoxStyles: function pixelBoxStyles() {\n            return l(), i;\n          },\n          pixelPosition: function pixelPosition() {\n            return l(), n;\n          },\n          reliableMarginLeft: function reliableMarginLeft() {\n            return l(), r;\n          },\n          scrollboxSize: function scrollboxSize() {\n            return l(), c;\n          }\n        }));\n      }();\n      var ye = [\"Webkit\", \"Moz\", \"ms\"],\n          ve = ul.createElement(\"div\").style,\n          be = {},\n          Se = /^(none|table(?!-c[ea]).+)/,\n          xe = /^--/,\n          we = {\n        position: \"absolute\",\n        visibility: \"hidden\",\n        display: \"block\"\n      },\n          Ee = {\n        letterSpacing: \"0\",\n        fontWeight: \"400\"\n      };\n      Tl.extend({\n        cssHooks: {\n          opacity: {\n            get: function get(l, e) {\n              if (e) {\n                var t = I(l, \"opacity\");\n                return \"\" === t ? \"1\" : t;\n              }\n            }\n          }\n        },\n        cssNumber: {\n          animationIterationCount: !0,\n          columnCount: !0,\n          fillOpacity: !0,\n          flexGrow: !0,\n          flexShrink: !0,\n          fontWeight: !0,\n          gridArea: !0,\n          gridColumn: !0,\n          gridColumnEnd: !0,\n          gridColumnStart: !0,\n          gridRow: !0,\n          gridRowEnd: !0,\n          gridRowStart: !0,\n          lineHeight: !0,\n          opacity: !0,\n          order: !0,\n          orphans: !0,\n          widows: !0,\n          zIndex: !0,\n          zoom: !0\n        },\n        cssProps: {},\n        style: function style(l, e, t, n) {\n          if (l && 3 !== l.nodeType && 8 !== l.nodeType && l.style) {\n            var a,\n                c,\n                i,\n                r = g(e),\n                o = xe.test(e),\n                s = l.style;\n            if (o || (e = _(r)), i = Tl.cssHooks[e] || Tl.cssHooks[r], void 0 === t) return i && \"get\" in i && void 0 !== (a = i.get(l, !1, n)) ? a : s[e];\n            c = typeof t, \"string\" === c && (a = Wl.exec(t)) && a[1] && (t = S(l, e, a), c = \"number\"), null != t && t === t && (\"number\" !== c || o || (t += a && a[3] || (Tl.cssNumber[r] ? \"\" : \"px\")), xl.clearCloneStyle || \"\" !== t || 0 !== e.indexOf(\"background\") || (s[e] = \"inherit\"), i && \"set\" in i && void 0 === (t = i.set(l, t, n)) || (o ? s.setProperty(e, t) : s[e] = t));\n          }\n        },\n        css: function css(l, e, t, n) {\n          var a,\n              c,\n              i,\n              r = g(e);\n          return xe.test(e) || (e = _(r)), i = Tl.cssHooks[e] || Tl.cssHooks[r], i && \"get\" in i && (a = i.get(l, !0, t)), void 0 === a && (a = I(l, e, n)), \"normal\" === a && e in Ee && (a = Ee[e]), \"\" === t || t ? (c = parseFloat(a), !0 === t || isFinite(c) ? c || 0 : a) : a;\n        }\n      }), Tl.each([\"height\", \"width\"], function (l, e) {\n        Tl.cssHooks[e] = {\n          get: function get(l, t, n) {\n            if (t) return !Se.test(Tl.css(l, \"display\")) || l.getClientRects().length && l.getBoundingClientRect().width ? F(l, e, n) : te(l, we, function () {\n              return F(l, e, n);\n            });\n          },\n          set: function set(l, t, n) {\n            var a,\n                c = Ze(l),\n                i = !xl.scrollboxSize() && \"absolute\" === c.position,\n                r = i || n,\n                o = r && \"border-box\" === Tl.css(l, \"boxSizing\", !1, c),\n                s = n ? $(l, e, n, o, c) : 0;\n            return o && i && (s -= Math.ceil(l[\"offset\" + e[0].toUpperCase() + e.slice(1)] - parseFloat(c[e]) - $(l, e, \"border\", !1, c) - .5)), s && (a = Wl.exec(t)) && \"px\" !== (a[3] || \"px\") && (l.style[e] = t, t = Tl.css(l, e)), q(l, t, s);\n          }\n        };\n      }), Tl.cssHooks.marginLeft = B(xl.reliableMarginLeft, function (l, e) {\n        if (e) return (parseFloat(I(l, \"marginLeft\")) || l.getBoundingClientRect().left - te(l, {\n          marginLeft: 0\n        }, function () {\n          return l.getBoundingClientRect().left;\n        })) + \"px\";\n      }), Tl.each({\n        margin: \"\",\n        padding: \"\",\n        border: \"Width\"\n      }, function (l, e) {\n        Tl.cssHooks[l + e] = {\n          expand: function expand(t) {\n            for (var n = 0, a = {}, c = \"string\" === typeof t ? t.split(\" \") : [t]; n < 4; n++) {\n              a[l + Kl[n] + e] = c[n] || c[n - 2] || c[0];\n            }\n\n            return a;\n          }\n        }, \"margin\" !== l && (Tl.cssHooks[l + e].set = q);\n      }), Tl.fn.extend({\n        css: function css(l, e) {\n          return Il(this, function (l, e, t) {\n            var n,\n                a,\n                c = {},\n                i = 0;\n\n            if (Array.isArray(e)) {\n              for (n = Ze(l), a = e.length; i < a; i++) {\n                c[e[i]] = Tl.css(l, e[i], !1, n);\n              }\n\n              return c;\n            }\n\n            return void 0 !== t ? Tl.style(l, e, t) : Tl.css(l, e);\n          }, l, e, arguments.length > 1);\n        }\n      }), Tl.Tween = Y, Y.prototype = {\n        constructor: Y,\n        init: function init(l, e, t, n, a, c) {\n          this.elem = l, this.prop = t, this.easing = a || Tl.easing._default, this.options = e, this.start = this.now = this.cur(), this.end = n, this.unit = c || (Tl.cssNumber[t] ? \"\" : \"px\");\n        },\n        cur: function cur() {\n          var l = Y.propHooks[this.prop];\n          return l && l.get ? l.get(this) : Y.propHooks._default.get(this);\n        },\n        run: function run(l) {\n          var e,\n              t = Y.propHooks[this.prop];\n          return this.options.duration ? this.pos = e = Tl.easing[this.easing](l, this.options.duration * l, 0, 1, this.options.duration) : this.pos = e = l, this.now = (this.end - this.start) * e + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), t && t.set ? t.set(this) : Y.propHooks._default.set(this), this;\n        }\n      }, Y.prototype.init.prototype = Y.prototype, Y.propHooks = {\n        _default: {\n          get: function get(l) {\n            var e;\n            return 1 !== l.elem.nodeType || null != l.elem[l.prop] && null == l.elem.style[l.prop] ? l.elem[l.prop] : (e = Tl.css(l.elem, l.prop, \"\"), e && \"auto\" !== e ? e : 0);\n          },\n          set: function set(l) {\n            Tl.fx.step[l.prop] ? Tl.fx.step[l.prop](l) : 1 !== l.elem.nodeType || !Tl.cssHooks[l.prop] && null == l.elem.style[_(l.prop)] ? l.elem[l.prop] = l.now : Tl.style(l.elem, l.prop, l.now + l.unit);\n          }\n        }\n      }, Y.propHooks.scrollTop = Y.propHooks.scrollLeft = {\n        set: function set(l) {\n          l.elem.nodeType && l.elem.parentNode && (l.elem[l.prop] = l.now);\n        }\n      }, Tl.easing = {\n        linear: function linear(l) {\n          return l;\n        },\n        swing: function swing(l) {\n          return .5 - Math.cos(l * Math.PI) / 2;\n        },\n        _default: \"swing\"\n      }, Tl.fx = Y.prototype.init, Tl.fx.step = {};\n      var Ce,\n          Te,\n          Ae = /^(?:toggle|show|hide)$/,\n          ke = /queueHooks$/;\n      Tl.Animation = Tl.extend(el, {\n        tweeners: {\n          \"*\": [function (l, e) {\n            var t = this.createTween(l, e);\n            return S(t.elem, l, Wl.exec(e), t), t;\n          }]\n        },\n        tweener: function tweener(l, e) {\n          wl(l) ? (e = l, l = [\"*\"]) : l = l.match(Vl);\n\n          for (var t, n = 0, a = l.length; n < a; n++) {\n            t = l[n], el.tweeners[t] = el.tweeners[t] || [], el.tweeners[t].unshift(e);\n          }\n        },\n        prefilters: [Q],\n        prefilter: function prefilter(l, e) {\n          e ? el.prefilters.unshift(l) : el.prefilters.push(l);\n        }\n      }), Tl.speed = function (l, e, t) {\n        var n = l && \"object\" === typeof l ? Tl.extend({}, l) : {\n          complete: t || !t && e || wl(l) && l,\n          duration: l,\n          easing: t && e || e && !wl(e) && e\n        };\n        return Tl.fx.off ? n.duration = 0 : \"number\" !== typeof n.duration && (n.duration in Tl.fx.speeds ? n.duration = Tl.fx.speeds[n.duration] : n.duration = Tl.fx.speeds._default), null != n.queue && !0 !== n.queue || (n.queue = \"fx\"), n.old = n.complete, n.complete = function () {\n          wl(n.old) && n.old.call(this), n.queue && Tl.dequeue(this, n.queue);\n        }, n;\n      }, Tl.fn.extend({\n        fadeTo: function fadeTo(l, e, t, n) {\n          return this.filter(ee).css(\"opacity\", 0).show().end().animate({\n            opacity: e\n          }, l, t, n);\n        },\n        animate: function animate(l, e, t, n) {\n          var a = Tl.isEmptyObject(l),\n              c = Tl.speed(e, t, n),\n              i = function i() {\n            var e = el(this, Tl.extend({}, l), c);\n            (a || ql.get(this, \"finish\")) && e.stop(!0);\n          };\n\n          return i.finish = i, a || !1 === c.queue ? this.each(i) : this.queue(c.queue, i);\n        },\n        stop: function stop(l, e, t) {\n          var n = function n(l) {\n            var e = l.stop;\n            delete l.stop, e(t);\n          };\n\n          return \"string\" !== typeof l && (t = e, e = l, l = void 0), e && !1 !== l && this.queue(l || \"fx\", []), this.each(function () {\n            var e = !0,\n                a = null != l && l + \"queueHooks\",\n                c = Tl.timers,\n                i = ql.get(this);\n            if (a) i[a] && i[a].stop && n(i[a]);else for (a in i) {\n              i[a] && i[a].stop && ke.test(a) && n(i[a]);\n            }\n\n            for (a = c.length; a--;) {\n              c[a].elem !== this || null != l && c[a].queue !== l || (c[a].anim.stop(t), e = !1, c.splice(a, 1));\n            }\n\n            !e && t || Tl.dequeue(this, l);\n          });\n        },\n        finish: function finish(l) {\n          return !1 !== l && (l = l || \"fx\"), this.each(function () {\n            var e,\n                t = ql.get(this),\n                n = t[l + \"queue\"],\n                a = t[l + \"queueHooks\"],\n                c = Tl.timers,\n                i = n ? n.length : 0;\n\n            for (t.finish = !0, Tl.queue(this, l, []), a && a.stop && a.stop.call(this, !0), e = c.length; e--;) {\n              c[e].elem === this && c[e].queue === l && (c[e].anim.stop(!0), c.splice(e, 1));\n            }\n\n            for (e = 0; e < i; e++) {\n              n[e] && n[e].finish && n[e].finish.call(this);\n            }\n\n            delete t.finish;\n          });\n        }\n      }), Tl.each([\"toggle\", \"show\", \"hide\"], function (l, e) {\n        var t = Tl.fn[e];\n\n        Tl.fn[e] = function (l, n, a) {\n          return null == l || \"boolean\" === typeof l ? t.apply(this, arguments) : this.animate(K(e, !0), l, n, a);\n        };\n      }), Tl.each({\n        slideDown: K(\"show\"),\n        slideUp: K(\"hide\"),\n        slideToggle: K(\"toggle\"),\n        fadeIn: {\n          opacity: \"show\"\n        },\n        fadeOut: {\n          opacity: \"hide\"\n        },\n        fadeToggle: {\n          opacity: \"toggle\"\n        }\n      }, function (l, e) {\n        Tl.fn[l] = function (l, t, n) {\n          return this.animate(e, l, t, n);\n        };\n      }), Tl.timers = [], Tl.fx.tick = function () {\n        var l,\n            e = 0,\n            t = Tl.timers;\n\n        for (Ce = Date.now(); e < t.length; e++) {\n          (l = t[e])() || t[e] !== l || t.splice(e--, 1);\n        }\n\n        t.length || Tl.fx.stop(), Ce = void 0;\n      }, Tl.fx.timer = function (l) {\n        Tl.timers.push(l), Tl.fx.start();\n      }, Tl.fx.interval = 13, Tl.fx.start = function () {\n        Te || (Te = !0, X());\n      }, Tl.fx.stop = function () {\n        Te = null;\n      }, Tl.fx.speeds = {\n        slow: 600,\n        fast: 200,\n        _default: 400\n      }, Tl.fn.delay = function (l, e) {\n        return l = Tl.fx ? Tl.fx.speeds[l] || l : l, e = e || \"fx\", this.queue(e, function (e, n) {\n          var a = t.setTimeout(e, l);\n\n          n.stop = function () {\n            t.clearTimeout(a);\n          };\n        });\n      }, function () {\n        var l = ul.createElement(\"input\"),\n            e = ul.createElement(\"select\"),\n            t = e.appendChild(ul.createElement(\"option\"));\n        l.type = \"checkbox\", xl.checkOn = \"\" !== l.value, xl.optSelected = t.selected, l = ul.createElement(\"input\"), l.value = \"t\", l.type = \"radio\", xl.radioValue = \"t\" === l.value;\n      }();\n      var ze,\n          Le = Tl.expr.attrHandle;\n      Tl.fn.extend({\n        attr: function attr(l, e) {\n          return Il(this, Tl.attr, l, e, arguments.length > 1);\n        },\n        removeAttr: function removeAttr(l) {\n          return this.each(function () {\n            Tl.removeAttr(this, l);\n          });\n        }\n      }), Tl.extend({\n        attr: function attr(l, e, t) {\n          var n,\n              a,\n              c = l.nodeType;\n          if (3 !== c && 8 !== c && 2 !== c) return \"undefined\" === typeof l.getAttribute ? Tl.prop(l, e, t) : (1 === c && Tl.isXMLDoc(l) || (a = Tl.attrHooks[e.toLowerCase()] || (Tl.expr.match.bool.test(e) ? ze : void 0)), void 0 !== t ? null === t ? void Tl.removeAttr(l, e) : a && \"set\" in a && void 0 !== (n = a.set(l, t, e)) ? n : (l.setAttribute(e, t + \"\"), t) : a && \"get\" in a && null !== (n = a.get(l, e)) ? n : (n = Tl.find.attr(l, e), null == n ? void 0 : n));\n        },\n        attrHooks: {\n          type: {\n            set: function set(l, e) {\n              if (!xl.radioValue && \"radio\" === e && s(l, \"input\")) {\n                var t = l.value;\n                return l.setAttribute(\"type\", e), t && (l.value = t), e;\n              }\n            }\n          }\n        },\n        removeAttr: function removeAttr(l, e) {\n          var t,\n              n = 0,\n              a = e && e.match(Vl);\n          if (a && 1 === l.nodeType) for (; t = a[n++];) {\n            l.removeAttribute(t);\n          }\n        }\n      }), ze = {\n        set: function set(l, e, t) {\n          return !1 === e ? Tl.removeAttr(l, t) : l.setAttribute(t, t), t;\n        }\n      }, Tl.each(Tl.expr.match.bool.source.match(/\\w+/g), function (l, e) {\n        var t = Le[e] || Tl.find.attr;\n\n        Le[e] = function (l, e, n) {\n          var a,\n              c,\n              i = e.toLowerCase();\n          return n || (c = Le[i], Le[i] = a, a = null != t(l, e, n) ? i : null, Le[i] = c), a;\n        };\n      });\n      var je = /^(?:input|select|textarea|button)$/i,\n          Ne = /^(?:a|area)$/i;\n      Tl.fn.extend({\n        prop: function prop(l, e) {\n          return Il(this, Tl.prop, l, e, arguments.length > 1);\n        },\n        removeProp: function removeProp(l) {\n          return this.each(function () {\n            delete this[Tl.propFix[l] || l];\n          });\n        }\n      }), Tl.extend({\n        prop: function prop(l, e, t) {\n          var n,\n              a,\n              c = l.nodeType;\n          if (3 !== c && 8 !== c && 2 !== c) return 1 === c && Tl.isXMLDoc(l) || (e = Tl.propFix[e] || e, a = Tl.propHooks[e]), void 0 !== t ? a && \"set\" in a && void 0 !== (n = a.set(l, t, e)) ? n : l[e] = t : a && \"get\" in a && null !== (n = a.get(l, e)) ? n : l[e];\n        },\n        propHooks: {\n          tabIndex: {\n            get: function get(l) {\n              var e = Tl.find.attr(l, \"tabindex\");\n              return e ? parseInt(e, 10) : je.test(l.nodeName) || Ne.test(l.nodeName) && l.href ? 0 : -1;\n            }\n          }\n        },\n        propFix: {\n          for: \"htmlFor\",\n          class: \"className\"\n        }\n      }), xl.optSelected || (Tl.propHooks.selected = {\n        get: function get(l) {\n          var e = l.parentNode;\n          return e && e.parentNode && e.parentNode.selectedIndex, null;\n        },\n        set: function set(l) {\n          var e = l.parentNode;\n          e && (e.selectedIndex, e.parentNode && e.parentNode.selectedIndex);\n        }\n      }), Tl.each([\"tabIndex\", \"readOnly\", \"maxLength\", \"cellSpacing\", \"cellPadding\", \"rowSpan\", \"colSpan\", \"useMap\", \"frameBorder\", \"contentEditable\"], function () {\n        Tl.propFix[this.toLowerCase()] = this;\n      }), Tl.fn.extend({\n        addClass: function addClass(l) {\n          var e,\n              t,\n              n,\n              a,\n              c,\n              i,\n              r,\n              o = 0;\n          if (wl(l)) return this.each(function (e) {\n            Tl(this).addClass(l.call(this, e, nl(this)));\n          });\n          if (e = al(l), e.length) for (; t = this[o++];) {\n            if (a = nl(t), n = 1 === t.nodeType && \" \" + tl(a) + \" \") {\n              for (i = 0; c = e[i++];) {\n                n.indexOf(\" \" + c + \" \") < 0 && (n += c + \" \");\n              }\n\n              r = tl(n), a !== r && t.setAttribute(\"class\", r);\n            }\n          }\n          return this;\n        },\n        removeClass: function removeClass(l) {\n          var e,\n              t,\n              n,\n              a,\n              c,\n              i,\n              r,\n              o = 0;\n          if (wl(l)) return this.each(function (e) {\n            Tl(this).removeClass(l.call(this, e, nl(this)));\n          });\n          if (!arguments.length) return this.attr(\"class\", \"\");\n          if (e = al(l), e.length) for (; t = this[o++];) {\n            if (a = nl(t), n = 1 === t.nodeType && \" \" + tl(a) + \" \") {\n              for (i = 0; c = e[i++];) {\n                for (; n.indexOf(\" \" + c + \" \") > -1;) {\n                  n = n.replace(\" \" + c + \" \", \" \");\n                }\n              }\n\n              r = tl(n), a !== r && t.setAttribute(\"class\", r);\n            }\n          }\n          return this;\n        },\n        toggleClass: function toggleClass(l, e) {\n          var t = typeof l,\n              n = \"string\" === t || Array.isArray(l);\n          return \"boolean\" === typeof e && n ? e ? this.addClass(l) : this.removeClass(l) : wl(l) ? this.each(function (t) {\n            Tl(this).toggleClass(l.call(this, t, nl(this), e), e);\n          }) : this.each(function () {\n            var e, a, c, i;\n            if (n) for (a = 0, c = Tl(this), i = al(l); e = i[a++];) {\n              c.hasClass(e) ? c.removeClass(e) : c.addClass(e);\n            } else void 0 !== l && \"boolean\" !== t || (e = nl(this), e && ql.set(this, \"__className__\", e), this.setAttribute && this.setAttribute(\"class\", e || !1 === l ? \"\" : ql.get(this, \"__className__\") || \"\"));\n          });\n        },\n        hasClass: function hasClass(l) {\n          var e,\n              t,\n              n = 0;\n\n          for (e = \" \" + l + \" \"; t = this[n++];) {\n            if (1 === t.nodeType && (\" \" + tl(nl(t)) + \" \").indexOf(e) > -1) return !0;\n          }\n\n          return !1;\n        }\n      });\n      var Oe = /\\r/g;\n      Tl.fn.extend({\n        val: function val(l) {\n          var e,\n              t,\n              n,\n              a = this[0];\n          {\n            if (arguments.length) return n = wl(l), this.each(function (t) {\n              var a;\n              1 === this.nodeType && (a = n ? l.call(this, t, Tl(this).val()) : l, null == a ? a = \"\" : \"number\" === typeof a ? a += \"\" : Array.isArray(a) && (a = Tl.map(a, function (l) {\n                return null == l ? \"\" : l + \"\";\n              })), (e = Tl.valHooks[this.type] || Tl.valHooks[this.nodeName.toLowerCase()]) && \"set\" in e && void 0 !== e.set(this, a, \"value\") || (this.value = a));\n            });\n            if (a) return (e = Tl.valHooks[a.type] || Tl.valHooks[a.nodeName.toLowerCase()]) && \"get\" in e && void 0 !== (t = e.get(a, \"value\")) ? t : (t = a.value, \"string\" === typeof t ? t.replace(Oe, \"\") : null == t ? \"\" : t);\n          }\n        }\n      }), Tl.extend({\n        valHooks: {\n          option: {\n            get: function get(l) {\n              var e = Tl.find.attr(l, \"value\");\n              return null != e ? e : tl(Tl.text(l));\n            }\n          },\n          select: {\n            get: function get(l) {\n              var e,\n                  t,\n                  n,\n                  a = l.options,\n                  c = l.selectedIndex,\n                  i = \"select-one\" === l.type,\n                  r = i ? null : [],\n                  o = i ? c + 1 : a.length;\n\n              for (n = c < 0 ? o : i ? c : 0; n < o; n++) {\n                if (t = a[n], (t.selected || n === c) && !t.disabled && (!t.parentNode.disabled || !s(t.parentNode, \"optgroup\"))) {\n                  if (e = Tl(t).val(), i) return e;\n                  r.push(e);\n                }\n              }\n\n              return r;\n            },\n            set: function set(l, e) {\n              for (var t, n, a = l.options, c = Tl.makeArray(e), i = a.length; i--;) {\n                n = a[i], (n.selected = Tl.inArray(Tl.valHooks.option.get(n), c) > -1) && (t = !0);\n              }\n\n              return t || (l.selectedIndex = -1), c;\n            }\n          }\n        }\n      }), Tl.each([\"radio\", \"checkbox\"], function () {\n        Tl.valHooks[this] = {\n          set: function set(l, e) {\n            if (Array.isArray(e)) return l.checked = Tl.inArray(Tl(l).val(), e) > -1;\n          }\n        }, xl.checkOn || (Tl.valHooks[this].get = function (l) {\n          return null === l.getAttribute(\"value\") ? \"on\" : l.value;\n        });\n      }), xl.focusin = \"onfocusin\" in t;\n\n      var De = /^(?:focusinfocus|focusoutblur)$/,\n          Pe = function Pe(l) {\n        l.stopPropagation();\n      };\n\n      Tl.extend(Tl.event, {\n        trigger: function trigger(l, e, n, a) {\n          var c,\n              i,\n              r,\n              o,\n              s,\n              h,\n              p,\n              u,\n              M = [n || ul],\n              f = vl.call(l, \"type\") ? l.type : l,\n              d = vl.call(l, \"namespace\") ? l.namespace.split(\".\") : [];\n\n          if (i = u = r = n = n || ul, 3 !== n.nodeType && 8 !== n.nodeType && !De.test(f + Tl.event.triggered) && (f.indexOf(\".\") > -1 && (d = f.split(\".\"), f = d.shift(), d.sort()), s = f.indexOf(\":\") < 0 && \"on\" + f, l = l[Tl.expando] ? l : new Tl.Event(f, \"object\" === typeof l && l), l.isTrigger = a ? 2 : 3, l.namespace = d.join(\".\"), l.rnamespace = l.namespace ? new RegExp(\"(^|\\\\.)\" + d.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\") : null, l.result = void 0, l.target || (l.target = n), e = null == e ? [l] : Tl.makeArray(e, [l]), p = Tl.event.special[f] || {}, a || !p.trigger || !1 !== p.trigger.apply(n, e))) {\n            if (!a && !p.noBubble && !El(n)) {\n              for (o = p.delegateType || f, De.test(o + f) || (i = i.parentNode); i; i = i.parentNode) {\n                M.push(i), r = i;\n              }\n\n              r === (n.ownerDocument || ul) && M.push(r.defaultView || r.parentWindow || t);\n            }\n\n            for (c = 0; (i = M[c++]) && !l.isPropagationStopped();) {\n              u = i, l.type = c > 1 ? o : p.bindType || f, h = (ql.get(i, \"events\") || {})[l.type] && ql.get(i, \"handle\"), h && h.apply(i, e), (h = s && i[s]) && h.apply && _l(i) && (l.result = h.apply(i, e), !1 === l.result && l.preventDefault());\n            }\n\n            return l.type = f, a || l.isDefaultPrevented() || p._default && !1 !== p._default.apply(M.pop(), e) || !_l(n) || s && wl(n[f]) && !El(n) && (r = n[s], r && (n[s] = null), Tl.event.triggered = f, l.isPropagationStopped() && u.addEventListener(f, Pe), n[f](), l.isPropagationStopped() && u.removeEventListener(f, Pe), Tl.event.triggered = void 0, r && (n[s] = r)), l.result;\n          }\n        },\n        simulate: function simulate(l, e, t) {\n          var n = Tl.extend(new Tl.Event(), t, {\n            type: l,\n            isSimulated: !0\n          });\n          Tl.event.trigger(n, null, e);\n        }\n      }), Tl.fn.extend({\n        trigger: function trigger(l, e) {\n          return this.each(function () {\n            Tl.event.trigger(l, e, this);\n          });\n        },\n        triggerHandler: function triggerHandler(l, e) {\n          var t = this[0];\n          if (t) return Tl.event.trigger(l, e, t, !0);\n        }\n      }), xl.focusin || Tl.each({\n        focus: \"focusin\",\n        blur: \"focusout\"\n      }, function (l, e) {\n        var t = function t(l) {\n          Tl.event.simulate(e, l.target, Tl.event.fix(l));\n        };\n\n        Tl.event.special[e] = {\n          setup: function setup() {\n            var n = this.ownerDocument || this,\n                a = ql.access(n, e);\n            a || n.addEventListener(l, t, !0), ql.access(n, e, (a || 0) + 1);\n          },\n          teardown: function teardown() {\n            var n = this.ownerDocument || this,\n                a = ql.access(n, e) - 1;\n            a ? ql.access(n, e, a) : (n.removeEventListener(l, t, !0), ql.remove(n, e));\n          }\n        };\n      });\n      var Re = t.location,\n          Ve = Date.now(),\n          He = /\\?/;\n\n      Tl.parseXML = function (l) {\n        var e;\n        if (!l || \"string\" !== typeof l) return null;\n\n        try {\n          e = new t.DOMParser().parseFromString(l, \"text/xml\");\n        } catch (l) {\n          e = void 0;\n        }\n\n        return e && !e.getElementsByTagName(\"parsererror\").length || Tl.error(\"Invalid XML: \" + l), e;\n      };\n\n      var Ge = /\\[\\]$/,\n          Ie = /\\r?\\n/g,\n          Be = /^(?:submit|button|image|reset|file)$/i,\n          Ue = /^(?:input|select|textarea|keygen)/i;\n      Tl.param = function (l, e) {\n        var t,\n            n = [],\n            a = function a(l, e) {\n          var t = wl(e) ? e() : e;\n          n[n.length] = encodeURIComponent(l) + \"=\" + encodeURIComponent(null == t ? \"\" : t);\n        };\n\n        if (null == l) return \"\";\n        if (Array.isArray(l) || l.jquery && !Tl.isPlainObject(l)) Tl.each(l, function () {\n          a(this.name, this.value);\n        });else for (t in l) {\n          cl(t, l[t], e, a);\n        }\n        return n.join(\"&\");\n      }, Tl.fn.extend({\n        serialize: function serialize() {\n          return Tl.param(this.serializeArray());\n        },\n        serializeArray: function serializeArray() {\n          return this.map(function () {\n            var l = Tl.prop(this, \"elements\");\n            return l ? Tl.makeArray(l) : this;\n          }).filter(function () {\n            var l = this.type;\n            return this.name && !Tl(this).is(\":disabled\") && Ue.test(this.nodeName) && !Be.test(l) && (this.checked || !ae.test(l));\n          }).map(function (l, e) {\n            var t = Tl(this).val();\n            return null == t ? null : Array.isArray(t) ? Tl.map(t, function (l) {\n              return {\n                name: e.name,\n                value: l.replace(Ie, \"\\r\\n\")\n              };\n            }) : {\n              name: e.name,\n              value: t.replace(Ie, \"\\r\\n\")\n            };\n          }).get();\n        }\n      });\n      var _e = /%20/g,\n          qe = /#.*$/,\n          $e = /([?&])_=[^&]*/,\n          Fe = /^(.*?):[ \\t]*([^\\r\\n]*)$/gm,\n          Ye = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n          Xe = /^(?:GET|HEAD)$/,\n          We = /^\\/\\//,\n          Ke = {},\n          Je = {},\n          Qe = \"*/\".concat(\"*\"),\n          lt = ul.createElement(\"a\");\n      lt.href = Re.href, Tl.extend({\n        active: 0,\n        lastModified: {},\n        etag: {},\n        ajaxSettings: {\n          url: Re.href,\n          type: \"GET\",\n          isLocal: Ye.test(Re.protocol),\n          global: !0,\n          processData: !0,\n          async: !0,\n          contentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n          accepts: {\n            \"*\": Qe,\n            text: \"text/plain\",\n            html: \"text/html\",\n            xml: \"application/xml, text/xml\",\n            json: \"application/json, text/javascript\"\n          },\n          contents: {\n            xml: /\\bxml\\b/,\n            html: /\\bhtml/,\n            json: /\\bjson\\b/\n          },\n          responseFields: {\n            xml: \"responseXML\",\n            text: \"responseText\",\n            json: \"responseJSON\"\n          },\n          converters: {\n            \"* text\": String,\n            \"text html\": !0,\n            \"text json\": JSON.parse,\n            \"text xml\": Tl.parseXML\n          },\n          flatOptions: {\n            url: !0,\n            context: !0\n          }\n        },\n        ajaxSetup: function ajaxSetup(l, e) {\n          return e ? ol(ol(l, Tl.ajaxSettings), e) : ol(Tl.ajaxSettings, l);\n        },\n        ajaxPrefilter: il(Ke),\n        ajaxTransport: il(Je),\n        ajax: function ajax(l, e) {\n          function n(l, e, n, r) {\n            var s,\n                u,\n                M,\n                v,\n                b,\n                S = e;\n            h || (h = !0, o && t.clearTimeout(o), a = void 0, i = r || \"\", x.readyState = l > 0 ? 4 : 0, s = l >= 200 && l < 300 || 304 === l, n && (v = sl(f, x, n)), v = hl(f, v, x, s), s ? (f.ifModified && (b = x.getResponseHeader(\"Last-Modified\"), b && (Tl.lastModified[c] = b), (b = x.getResponseHeader(\"etag\")) && (Tl.etag[c] = b)), 204 === l || \"HEAD\" === f.type ? S = \"nocontent\" : 304 === l ? S = \"notmodified\" : (S = v.state, u = v.data, M = v.error, s = !M)) : (M = S, !l && S || (S = \"error\", l < 0 && (l = 0))), x.status = l, x.statusText = (e || S) + \"\", s ? Z.resolveWith(d, [u, S, x]) : Z.rejectWith(d, [x, S, M]), x.statusCode(y), y = void 0, p && m.trigger(s ? \"ajaxSuccess\" : \"ajaxError\", [x, f, s ? u : M]), g.fireWith(d, [x, S]), p && (m.trigger(\"ajaxComplete\", [x, f]), --Tl.active || Tl.event.trigger(\"ajaxStop\")));\n          }\n\n          \"object\" === typeof l && (e = l, l = void 0), e = e || {};\n          var a,\n              c,\n              i,\n              r,\n              o,\n              s,\n              h,\n              p,\n              u,\n              M,\n              f = Tl.ajaxSetup({}, e),\n              d = f.context || f,\n              m = f.context && (d.nodeType || d.jquery) ? Tl(d) : Tl.event,\n              Z = Tl.Deferred(),\n              g = Tl.Callbacks(\"once memory\"),\n              y = f.statusCode || {},\n              v = {},\n              b = {},\n              S = \"canceled\",\n              x = {\n            readyState: 0,\n            getResponseHeader: function getResponseHeader(l) {\n              var e;\n\n              if (h) {\n                if (!r) for (r = {}; e = Fe.exec(i);) {\n                  r[e[1].toLowerCase() + \" \"] = (r[e[1].toLowerCase() + \" \"] || []).concat(e[2]);\n                }\n                e = r[l.toLowerCase() + \" \"];\n              }\n\n              return null == e ? null : e.join(\", \");\n            },\n            getAllResponseHeaders: function getAllResponseHeaders() {\n              return h ? i : null;\n            },\n            setRequestHeader: function setRequestHeader(l, e) {\n              return null == h && (l = b[l.toLowerCase()] = b[l.toLowerCase()] || l, v[l] = e), this;\n            },\n            overrideMimeType: function overrideMimeType(l) {\n              return null == h && (f.mimeType = l), this;\n            },\n            statusCode: function statusCode(l) {\n              var e;\n              if (l) if (h) x.always(l[x.status]);else for (e in l) {\n                y[e] = [y[e], l[e]];\n              }\n              return this;\n            },\n            abort: function abort(l) {\n              var e = l || S;\n              return a && a.abort(e), n(0, e), this;\n            }\n          };\n\n          if (Z.promise(x), f.url = ((l || f.url || Re.href) + \"\").replace(We, Re.protocol + \"//\"), f.type = e.method || e.type || f.method || f.type, f.dataTypes = (f.dataType || \"*\").toLowerCase().match(Vl) || [\"\"], null == f.crossDomain) {\n            s = ul.createElement(\"a\");\n\n            try {\n              s.href = f.url, s.href = s.href, f.crossDomain = lt.protocol + \"//\" + lt.host !== s.protocol + \"//\" + s.host;\n            } catch (l) {\n              f.crossDomain = !0;\n            }\n          }\n\n          if (f.data && f.processData && \"string\" !== typeof f.data && (f.data = Tl.param(f.data, f.traditional)), rl(Ke, f, e, x), h) return x;\n          p = Tl.event && f.global, p && 0 === Tl.active++ && Tl.event.trigger(\"ajaxStart\"), f.type = f.type.toUpperCase(), f.hasContent = !Xe.test(f.type), c = f.url.replace(qe, \"\"), f.hasContent ? f.data && f.processData && 0 === (f.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") && (f.data = f.data.replace(_e, \"+\")) : (M = f.url.slice(c.length), f.data && (f.processData || \"string\" === typeof f.data) && (c += (He.test(c) ? \"&\" : \"?\") + f.data, delete f.data), !1 === f.cache && (c = c.replace($e, \"$1\"), M = (He.test(c) ? \"&\" : \"?\") + \"_=\" + Ve++ + M), f.url = c + M), f.ifModified && (Tl.lastModified[c] && x.setRequestHeader(\"If-Modified-Since\", Tl.lastModified[c]), Tl.etag[c] && x.setRequestHeader(\"If-None-Match\", Tl.etag[c])), (f.data && f.hasContent && !1 !== f.contentType || e.contentType) && x.setRequestHeader(\"Content-Type\", f.contentType), x.setRequestHeader(\"Accept\", f.dataTypes[0] && f.accepts[f.dataTypes[0]] ? f.accepts[f.dataTypes[0]] + (\"*\" !== f.dataTypes[0] ? \", \" + Qe + \"; q=0.01\" : \"\") : f.accepts[\"*\"]);\n\n          for (u in f.headers) {\n            x.setRequestHeader(u, f.headers[u]);\n          }\n\n          if (f.beforeSend && (!1 === f.beforeSend.call(d, x, f) || h)) return x.abort();\n\n          if (S = \"abort\", g.add(f.complete), x.done(f.success), x.fail(f.error), a = rl(Je, f, e, x)) {\n            if (x.readyState = 1, p && m.trigger(\"ajaxSend\", [x, f]), h) return x;\n            f.async && f.timeout > 0 && (o = t.setTimeout(function () {\n              x.abort(\"timeout\");\n            }, f.timeout));\n\n            try {\n              h = !1, a.send(v, n);\n            } catch (l) {\n              if (h) throw l;\n              n(-1, l);\n            }\n          } else n(-1, \"No Transport\");\n\n          return x;\n        },\n        getJSON: function getJSON(l, e, t) {\n          return Tl.get(l, e, t, \"json\");\n        },\n        getScript: function getScript(l, e) {\n          return Tl.get(l, void 0, e, \"script\");\n        }\n      }), Tl.each([\"get\", \"post\"], function (l, e) {\n        Tl[e] = function (l, t, n, a) {\n          return wl(t) && (a = a || n, n = t, t = void 0), Tl.ajax(Tl.extend({\n            url: l,\n            type: e,\n            dataType: a,\n            data: t,\n            success: n\n          }, Tl.isPlainObject(l) && l));\n        };\n      }), Tl._evalUrl = function (l, e) {\n        return Tl.ajax({\n          url: l,\n          type: \"GET\",\n          dataType: \"script\",\n          cache: !0,\n          async: !1,\n          global: !1,\n          converters: {\n            \"text script\": function textScript() {}\n          },\n          dataFilter: function dataFilter(l) {\n            Tl.globalEval(l, e);\n          }\n        });\n      }, Tl.fn.extend({\n        wrapAll: function wrapAll(l) {\n          var e;\n          return this[0] && (wl(l) && (l = l.call(this[0])), e = Tl(l, this[0].ownerDocument).eq(0).clone(!0), this[0].parentNode && e.insertBefore(this[0]), e.map(function () {\n            for (var l = this; l.firstElementChild;) {\n              l = l.firstElementChild;\n            }\n\n            return l;\n          }).append(this)), this;\n        },\n        wrapInner: function wrapInner(l) {\n          return wl(l) ? this.each(function (e) {\n            Tl(this).wrapInner(l.call(this, e));\n          }) : this.each(function () {\n            var e = Tl(this),\n                t = e.contents();\n            t.length ? t.wrapAll(l) : e.append(l);\n          });\n        },\n        wrap: function wrap(l) {\n          var e = wl(l);\n          return this.each(function (t) {\n            Tl(this).wrapAll(e ? l.call(this, t) : l);\n          });\n        },\n        unwrap: function unwrap(l) {\n          return this.parent(l).not(\"body\").each(function () {\n            Tl(this).replaceWith(this.childNodes);\n          }), this;\n        }\n      }), Tl.expr.pseudos.hidden = function (l) {\n        return !Tl.expr.pseudos.visible(l);\n      }, Tl.expr.pseudos.visible = function (l) {\n        return !!(l.offsetWidth || l.offsetHeight || l.getClientRects().length);\n      }, Tl.ajaxSettings.xhr = function () {\n        try {\n          return new t.XMLHttpRequest();\n        } catch (l) {}\n      };\n      var et = {\n        0: 200,\n        1223: 204\n      },\n          tt = Tl.ajaxSettings.xhr();\n      xl.cors = !!tt && \"withCredentials\" in tt, xl.ajax = tt = !!tt, Tl.ajaxTransport(function (l) {\n        var _e3, n;\n\n        if (xl.cors || tt && !l.crossDomain) return {\n          send: function send(a, c) {\n            var i,\n                r = l.xhr();\n            if (r.open(l.type, l.url, l.async, l.username, l.password), l.xhrFields) for (i in l.xhrFields) {\n              r[i] = l.xhrFields[i];\n            }\n            l.mimeType && r.overrideMimeType && r.overrideMimeType(l.mimeType), l.crossDomain || a[\"X-Requested-With\"] || (a[\"X-Requested-With\"] = \"XMLHttpRequest\");\n\n            for (i in a) {\n              r.setRequestHeader(i, a[i]);\n            }\n\n            _e3 = function e(l) {\n              return function () {\n                _e3 && (_e3 = n = r.onload = r.onerror = r.onabort = r.ontimeout = r.onreadystatechange = null, \"abort\" === l ? r.abort() : \"error\" === l ? \"number\" !== typeof r.status ? c(0, \"error\") : c(r.status, r.statusText) : c(et[r.status] || r.status, r.statusText, \"text\" !== (r.responseType || \"text\") || \"string\" !== typeof r.responseText ? {\n                  binary: r.response\n                } : {\n                  text: r.responseText\n                }, r.getAllResponseHeaders()));\n              };\n            }, r.onload = _e3(), n = r.onerror = r.ontimeout = _e3(\"error\"), void 0 !== r.onabort ? r.onabort = n : r.onreadystatechange = function () {\n              4 === r.readyState && t.setTimeout(function () {\n                _e3 && n();\n              });\n            }, _e3 = _e3(\"abort\");\n\n            try {\n              r.send(l.hasContent && l.data || null);\n            } catch (l) {\n              if (_e3) throw l;\n            }\n          },\n          abort: function abort() {\n            _e3 && _e3();\n          }\n        };\n      }), Tl.ajaxPrefilter(function (l) {\n        l.crossDomain && (l.contents.script = !1);\n      }), Tl.ajaxSetup({\n        accepts: {\n          script: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n        },\n        contents: {\n          script: /\\b(?:java|ecma)script\\b/\n        },\n        converters: {\n          \"text script\": function textScript(l) {\n            return Tl.globalEval(l), l;\n          }\n        }\n      }), Tl.ajaxPrefilter(\"script\", function (l) {\n        void 0 === l.cache && (l.cache = !1), l.crossDomain && (l.type = \"GET\");\n      }), Tl.ajaxTransport(\"script\", function (l) {\n        if (l.crossDomain || l.scriptAttrs) {\n          var e, _t;\n\n          return {\n            send: function send(n, a) {\n              e = Tl(\"<script>\").attr(l.scriptAttrs || {}).prop({\n                charset: l.scriptCharset,\n                src: l.url\n              }).on(\"load error\", _t = function t(l) {\n                e.remove(), _t = null, l && a(\"error\" === l.type ? 404 : 200, l.type);\n              }), ul.head.appendChild(e[0]);\n            },\n            abort: function abort() {\n              _t && _t();\n            }\n          };\n        }\n      });\n      var nt = [],\n          at = /(=)\\?(?=&|$)|\\?\\?/;\n      Tl.ajaxSetup({\n        jsonp: \"callback\",\n        jsonpCallback: function jsonpCallback() {\n          var l = nt.pop() || Tl.expando + \"_\" + Ve++;\n          return this[l] = !0, l;\n        }\n      }), Tl.ajaxPrefilter(\"json jsonp\", function (l, e, n) {\n        var a,\n            c,\n            i,\n            r = !1 !== l.jsonp && (at.test(l.url) ? \"url\" : \"string\" === typeof l.data && 0 === (l.contentType || \"\").indexOf(\"application/x-www-form-urlencoded\") && at.test(l.data) && \"data\");\n        if (r || \"jsonp\" === l.dataTypes[0]) return a = l.jsonpCallback = wl(l.jsonpCallback) ? l.jsonpCallback() : l.jsonpCallback, r ? l[r] = l[r].replace(at, \"$1\" + a) : !1 !== l.jsonp && (l.url += (He.test(l.url) ? \"&\" : \"?\") + l.jsonp + \"=\" + a), l.converters[\"script json\"] = function () {\n          return i || Tl.error(a + \" was not called\"), i[0];\n        }, l.dataTypes[0] = \"json\", c = t[a], t[a] = function () {\n          i = arguments;\n        }, n.always(function () {\n          void 0 === c ? Tl(t).removeProp(a) : t[a] = c, l[a] && (l.jsonpCallback = e.jsonpCallback, nt.push(a)), i && wl(c) && c(i[0]), i = c = void 0;\n        }), \"script\";\n      }), xl.createHTMLDocument = function () {\n        var l = ul.implementation.createHTMLDocument(\"\").body;\n        return l.innerHTML = \"<form></form><form></form>\", 2 === l.childNodes.length;\n      }(), Tl.parseHTML = function (l, e, t) {\n        if (\"string\" !== typeof l) return [];\n        \"boolean\" === typeof e && (t = e, e = !1);\n        var n, a, c;\n        return e || (xl.createHTMLDocument ? (e = ul.implementation.createHTMLDocument(\"\"), n = e.createElement(\"base\"), n.href = ul.location.href, e.head.appendChild(n)) : e = ul), a = Nl.exec(l), c = !t && [], a ? [e.createElement(a[1])] : (a = T([l], e, c), c && c.length && Tl(c).remove(), Tl.merge([], a.childNodes));\n      }, Tl.fn.load = function (l, e, t) {\n        var n,\n            a,\n            c,\n            i = this,\n            r = l.indexOf(\" \");\n        return r > -1 && (n = tl(l.slice(r)), l = l.slice(0, r)), wl(e) ? (t = e, e = void 0) : e && \"object\" === typeof e && (a = \"POST\"), i.length > 0 && Tl.ajax({\n          url: l,\n          type: a || \"GET\",\n          dataType: \"html\",\n          data: e\n        }).done(function (l) {\n          c = arguments, i.html(n ? Tl(\"<div>\").append(Tl.parseHTML(l)).find(n) : l);\n        }).always(t && function (l, e) {\n          i.each(function () {\n            t.apply(this, c || [l.responseText, e, l]);\n          });\n        }), this;\n      }, Tl.each([\"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\"], function (l, e) {\n        Tl.fn[e] = function (l) {\n          return this.on(e, l);\n        };\n      }), Tl.expr.pseudos.animated = function (l) {\n        return Tl.grep(Tl.timers, function (e) {\n          return l === e.elem;\n        }).length;\n      }, Tl.offset = {\n        setOffset: function setOffset(l, e, t) {\n          var n,\n              a,\n              c,\n              i,\n              r,\n              o,\n              s,\n              h = Tl.css(l, \"position\"),\n              p = Tl(l),\n              u = {};\n          \"static\" === h && (l.style.position = \"relative\"), r = p.offset(), c = Tl.css(l, \"top\"), o = Tl.css(l, \"left\"), s = (\"absolute\" === h || \"fixed\" === h) && (c + o).indexOf(\"auto\") > -1, s ? (n = p.position(), i = n.top, a = n.left) : (i = parseFloat(c) || 0, a = parseFloat(o) || 0), wl(e) && (e = e.call(l, t, Tl.extend({}, r))), null != e.top && (u.top = e.top - r.top + i), null != e.left && (u.left = e.left - r.left + a), \"using\" in e ? e.using.call(l, u) : p.css(u);\n        }\n      }, Tl.fn.extend({\n        offset: function offset(l) {\n          if (arguments.length) return void 0 === l ? this : this.each(function (e) {\n            Tl.offset.setOffset(this, l, e);\n          });\n          var e,\n              t,\n              n = this[0];\n          if (n) return n.getClientRects().length ? (e = n.getBoundingClientRect(), t = n.ownerDocument.defaultView, {\n            top: e.top + t.pageYOffset,\n            left: e.left + t.pageXOffset\n          }) : {\n            top: 0,\n            left: 0\n          };\n        },\n        position: function position() {\n          if (this[0]) {\n            var l,\n                e,\n                t,\n                n = this[0],\n                a = {\n              top: 0,\n              left: 0\n            };\n            if (\"fixed\" === Tl.css(n, \"position\")) e = n.getBoundingClientRect();else {\n              for (e = this.offset(), t = n.ownerDocument, l = n.offsetParent || t.documentElement; l && (l === t.body || l === t.documentElement) && \"static\" === Tl.css(l, \"position\");) {\n                l = l.parentNode;\n              }\n\n              l && l !== n && 1 === l.nodeType && (a = Tl(l).offset(), a.top += Tl.css(l, \"borderTopWidth\", !0), a.left += Tl.css(l, \"borderLeftWidth\", !0));\n            }\n            return {\n              top: e.top - a.top - Tl.css(n, \"marginTop\", !0),\n              left: e.left - a.left - Tl.css(n, \"marginLeft\", !0)\n            };\n          }\n        },\n        offsetParent: function offsetParent() {\n          return this.map(function () {\n            for (var l = this.offsetParent; l && \"static\" === Tl.css(l, \"position\");) {\n              l = l.offsetParent;\n            }\n\n            return l || Jl;\n          });\n        }\n      }), Tl.each({\n        scrollLeft: \"pageXOffset\",\n        scrollTop: \"pageYOffset\"\n      }, function (l, e) {\n        var t = \"pageYOffset\" === e;\n\n        Tl.fn[l] = function (n) {\n          return Il(this, function (l, n, a) {\n            var c;\n            if (El(l) ? c = l : 9 === l.nodeType && (c = l.defaultView), void 0 === a) return c ? c[e] : l[n];\n            c ? c.scrollTo(t ? c.pageXOffset : a, t ? a : c.pageYOffset) : l[n] = a;\n          }, l, n, arguments.length);\n        };\n      }), Tl.each([\"top\", \"left\"], function (l, e) {\n        Tl.cssHooks[e] = B(xl.pixelPosition, function (l, t) {\n          if (t) return t = I(l, e), me.test(t) ? Tl(l).position()[e] + \"px\" : t;\n        });\n      }), Tl.each({\n        Height: \"height\",\n        Width: \"width\"\n      }, function (l, e) {\n        Tl.each({\n          padding: \"inner\" + l,\n          content: e,\n          \"\": \"outer\" + l\n        }, function (t, n) {\n          Tl.fn[n] = function (a, c) {\n            var i = arguments.length && (t || \"boolean\" !== typeof a),\n                r = t || (!0 === a || !0 === c ? \"margin\" : \"border\");\n            return Il(this, function (e, t, a) {\n              var c;\n              return El(e) ? 0 === n.indexOf(\"outer\") ? e[\"inner\" + l] : e.document.documentElement[\"client\" + l] : 9 === e.nodeType ? (c = e.documentElement, Math.max(e.body[\"scroll\" + l], c[\"scroll\" + l], e.body[\"offset\" + l], c[\"offset\" + l], c[\"client\" + l])) : void 0 === a ? Tl.css(e, t, r) : Tl.style(e, t, a, r);\n            }, e, i ? a : void 0, i);\n          };\n        });\n      }), Tl.each(\"blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu\".split(\" \"), function (l, e) {\n        Tl.fn[e] = function (l, t) {\n          return arguments.length > 0 ? this.on(e, null, l, t) : this.trigger(e);\n        };\n      }), Tl.fn.extend({\n        hover: function hover(l, e) {\n          return this.mouseenter(l).mouseleave(e || l);\n        }\n      }), Tl.fn.extend({\n        bind: function bind(l, e, t) {\n          return this.on(l, null, e, t);\n        },\n        unbind: function unbind(l, e) {\n          return this.off(l, null, e);\n        },\n        delegate: function delegate(l, e, t, n) {\n          return this.on(e, l, t, n);\n        },\n        undelegate: function undelegate(l, e, t) {\n          return 1 === arguments.length ? this.off(l, \"**\") : this.off(e, l || \"**\", t);\n        }\n      }), Tl.proxy = function (l, e) {\n        var t, n, a;\n        if (\"string\" === typeof e && (t = l[e], e = l, l = t), wl(l)) return n = fl.call(arguments, 2), a = function a() {\n          return l.apply(e || this, n.concat(fl.call(arguments)));\n        }, a.guid = l.guid = l.guid || Tl.guid++, a;\n      }, Tl.holdReady = function (l) {\n        l ? Tl.readyWait++ : Tl.ready(!0);\n      }, Tl.isArray = Array.isArray, Tl.parseJSON = JSON.parse, Tl.nodeName = s, Tl.isFunction = wl, Tl.isWindow = El, Tl.camelCase = g, Tl.type = r, Tl.now = Date.now, Tl.isNumeric = function (l) {\n        var e = Tl.type(l);\n        return (\"number\" === e || \"string\" === e) && !isNaN(l - parseFloat(l));\n      }, n = [], void 0 !== (a = function () {\n        return Tl;\n      }.apply(e, n)) && (l.exports = a);\n      var ct = t.jQuery,\n          it = t.$;\n      return Tl.noConflict = function (l) {\n        return t.$ === Tl && (t.$ = it), l && t.jQuery === Tl && (t.jQuery = ct), Tl;\n      }, c || (t.jQuery = t.$ = Tl), Tl;\n    });\n  }, function (l, e) {\n    function t() {\n      throw new Error(\"setTimeout has not been defined\");\n    }\n\n    function n() {\n      throw new Error(\"clearTimeout has not been defined\");\n    }\n\n    function a(l) {\n      if (h === setTimeout) return setTimeout(l, 0);\n      if ((h === t || !h) && setTimeout) return h = setTimeout, setTimeout(l, 0);\n\n      try {\n        return h(l, 0);\n      } catch (e) {\n        try {\n          return h.call(null, l, 0);\n        } catch (e) {\n          return h.call(this, l, 0);\n        }\n      }\n    }\n\n    function c(l) {\n      if (p === clearTimeout) return clearTimeout(l);\n      if ((p === n || !p) && clearTimeout) return p = clearTimeout, clearTimeout(l);\n\n      try {\n        return p(l);\n      } catch (e) {\n        try {\n          return p.call(null, l);\n        } catch (e) {\n          return p.call(this, l);\n        }\n      }\n    }\n\n    function i() {\n      d && M && (d = !1, M.length ? f = M.concat(f) : m = -1, f.length && r());\n    }\n\n    function r() {\n      if (!d) {\n        var l = a(i);\n        d = !0;\n\n        for (var e = f.length; e;) {\n          for (M = f, f = []; ++m < e;) {\n            M && M[m].run();\n          }\n\n          m = -1, e = f.length;\n        }\n\n        M = null, d = !1, c(l);\n      }\n    }\n\n    function o(l, e) {\n      this.fun = l, this.array = e;\n    }\n\n    function s() {}\n\n    var h,\n        p,\n        u = l.exports = {};\n    !function () {\n      try {\n        h = \"function\" === typeof setTimeout ? setTimeout : t;\n      } catch (l) {\n        h = t;\n      }\n\n      try {\n        p = \"function\" === typeof clearTimeout ? clearTimeout : n;\n      } catch (l) {\n        p = n;\n      }\n    }();\n    var M,\n        f = [],\n        d = !1,\n        m = -1;\n    u.nextTick = function (l) {\n      var e = new Array(arguments.length - 1);\n      if (arguments.length > 1) for (var t = 1; t < arguments.length; t++) {\n        e[t - 1] = arguments[t];\n      }\n      f.push(new o(l, e)), 1 !== f.length || d || a(r);\n    }, o.prototype.run = function () {\n      this.fun.apply(null, this.array);\n    }, u.title = \"browser\", u.browser = !0, u.env = {}, u.argv = [], u.version = \"\", u.versions = {}, u.on = s, u.addListener = s, u.once = s, u.off = s, u.removeListener = s, u.removeAllListeners = s, u.emit = s, u.prependListener = s, u.prependOnceListener = s, u.listeners = function (l) {\n      return [];\n    }, u.binding = function (l) {\n      throw new Error(\"process.binding is not supported\");\n    }, u.cwd = function () {\n      return \"/\";\n    }, u.chdir = function (l) {\n      throw new Error(\"process.chdir is not supported\");\n    }, u.umask = function () {\n      return 0;\n    };\n  }, function (l, e, t) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    }), e.default = [\"world_mill\", \"us_aea\", \"europe_mill\", \"continents_mill\", \"ch_mill\", \"oceania_mill\", \"africa_mill\", \"asia_mill\", \"north_america_mill\", \"south_america_mill\", \"ca_lcc\", \"brazil\", \"se_mill\", \"es_mill\", \"ar_mill\", \"vietnam\"];\n  }, function (l, e, t) {\n    \"use strict\";\n\n    function n(l) {\n      return function () {\n        return l;\n      };\n    }\n\n    var a = function a() {};\n\n    a.thatReturns = n, a.thatReturnsFalse = n(!1), a.thatReturnsTrue = n(!0), a.thatReturnsNull = n(null), a.thatReturnsThis = function () {\n      return this;\n    }, a.thatReturnsArgument = function (l) {\n      return l;\n    }, l.exports = a;\n  }, function (l, e, t) {\n    \"use strict\";\n\n    (function (e) {\n      function t(l, e, t, a, c, i, r, o) {\n        if (n(e), !l) {\n          var s;\n          if (void 0 === e) s = new Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n            var h = [t, a, c, i, r, o],\n                p = 0;\n            s = new Error(e.replace(/%s/g, function () {\n              return h[p++];\n            })), s.name = \"Invariant Violation\";\n          }\n          throw s.framesToPop = 1, s;\n        }\n      }\n\n      var n = function n(l) {};\n\n      \"production\" !== e.env.NODE_ENV && (n = function n(l) {\n        if (void 0 === l) throw new Error(\"invariant requires an error message argument\");\n      }), l.exports = t;\n    }).call(e, t(1));\n  }, function (l, e, t) {\n    \"use strict\";\n\n    l.exports = \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\";\n  }, function (l, e, t) {\n    \"use strict\";\n\n    (function (e) {\n      var n = t(3),\n          a = n;\n\n      if (\"production\" !== e.env.NODE_ENV) {\n        var c = function c(l) {\n          for (var e = arguments.length, t = Array(e > 1 ? e - 1 : 0), n = 1; n < e; n++) {\n            t[n - 1] = arguments[n];\n          }\n\n          var a = 0,\n              c = \"Warning: \" + l.replace(/%s/g, function () {\n            return t[a++];\n          });\n          \"undefined\" !== typeof console && console.error(c);\n\n          try {\n            throw new Error(c);\n          } catch (l) {}\n        };\n\n        a = function a(l, e) {\n          if (void 0 === e) throw new Error(\"`warning(condition, format, ...args)` requires a warning message argument\");\n\n          if (0 !== e.indexOf(\"Failed Composite propType: \") && !l) {\n            for (var t = arguments.length, n = Array(t > 2 ? t - 2 : 0), a = 2; a < t; a++) {\n              n[a - 2] = arguments[a];\n            }\n\n            c.apply(void 0, [e].concat(n));\n          }\n        };\n      }\n\n      l.exports = a;\n    }).call(e, t(1));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"africa_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 1054.4456598737515,\n          bbox: [{\n            y: -4361143.781154416,\n            x: -2822439.5658800667\n          }, {\n            y: 5651492.432223669,\n            x: 5723636.287018039\n          }],\n          left: 0\n        }],\n        paths: {\n          BF: {\n            path: \"M264.1,336.73l-0.38,0.6l0.64,1.4l-0.24,0.6l0.45,4.56l-0.35,0.78l0.96,2.95l-0.52,0.38l-1.13,-1.12l-1.14,-1.92l-3.05,-2.52l-6.67,-0.25l-5.65,2.08l-0.81,1.11l-1.3,-0.33l-0.81,-0.58l-1.06,0.11l-0.97,-0.44l-2.77,-1.95l-0.31,-1.37l-1.35,-2.42l-2.01,-0.98l-1.43,0.04l-1.31,-1.03l0.73,-3.93l-0.35,-3.1l1.58,-1.01l1.2,-3.07l0.23,-1.91l-0.71,-1.89l0.01,-1.44l1.9,-1.47l3.57,-0.76l1.28,-0.57l1.37,-0.98l1.89,-2.21l0.18,-3.18l-0.55,-0.89l2.84,-1.62l-0.0,-1.17l-1.15,-2.62l1.92,-2.04l1.07,-0.83l1.03,-0.2l4.85,2.6l2.89,-1.19l0.65,-1.69l0.16,-2.87l2.6,0.33l0.84,-0.24l0.52,-0.67l-0.09,-1.24l0.56,-1.81l1.04,-1.38l2.19,-1.78l1.28,-0.48l4.22,1.21l0.87,-0.55l0.92,-2.93l3.12,-0.59l2.38,-1.42l5.16,-2.3l3.42,-2.74l2.42,-0.33l1.68,0.77l1.87,-0.53l4.84,1.61l-0.54,4.66l2.53,3.13l-0.28,1.32l0.93,2.11l2.22,3.21l3.45,1.25l0.77,0.57l0.62,1.12l1.49,0.83l-1.54,-0.34l-0.49,0.28l-0.2,2.42l0.31,1.85l1.36,0.54l5.62,4.39l2.81,0.25l2.58,-1.21l0.76,0.11l0.56,0.66l0.68,2.06l-1.55,0.4l-0.37,0.74l0.45,1.07l3.34,4.38l-1.06,2.14l-3.38,3.04l-1.4,-0.26l-2.79,0.47l-0.58,-0.54l-1.85,0.09l-1.35,1.84l-1.84,0.43l-1.01,2.24l-1.1,0.01l-0.52,0.8l-4.55,0.45l-0.36,-0.43l-9.2,-2.08l-0.8,0.93l-1.17,0.12l-0.64,0.9l-1.44,0.83l-0.73,-0.69l-3.99,-0.25l-21.0,0.14l-0.48,0.5l-0.82,3.01l-0.1,1.69l0.51,1.27l0.95,0.91Z\",\n            name: \"Burkina Faso\"\n          },\n          DJ: {\n            path: \"M800.21,310.86l2.49,-0.89l2.06,2.6l1.22,3.04l-0.29,1.0l-1.15,1.3l-2.56,1.63l-2.88,1.05l-1.89,2.09l-1.18,-0.12l-0.43,0.5l0.21,0.81l0.84,0.38l3.96,-1.06l2.72,0.22l0.63,0.5l-3.48,5.46l-1.25,-0.1l-1.52,-0.81l-1.29,-0.06l-7.07,1.65l-1.47,-0.35l-0.35,-6.88l0.5,-1.41l2.1,-2.23l4.78,-6.87l0.41,-0.18l2.18,1.59l0.67,0.03l1.08,-0.76l0.97,-2.11Z\",\n            name: \"Djibouti\"\n          },\n          BI: {\n            path: \"M645.42,511.17l-3.4,-6.8l-0.35,-5.31l-0.5,-0.69l-0.91,-0.23l0.15,-3.04l-2.45,-3.14l0.12,-1.27l0.29,-0.52l1.17,0.22l1.0,0.53l0.56,1.26l0.68,0.41l3.89,-0.15l2.23,-1.13l0.73,-4.21l1.87,0.92l1.43,-0.81l1.84,-0.36l1.16,0.82l-1.21,2.39l0.44,0.94l-0.49,1.29l0.1,0.79l1.2,0.8l3.01,0.8l0.04,2.71l-1.83,0.84l-0.27,0.31l0.11,0.7l-2.25,1.87l-0.64,1.8l-1.27,1.37l-1.42,2.74l-2.26,2.52l-2.81,1.65Z\",\n            name: \"Burundi\"\n          },\n          BJ: {\n            path: \"M308.12,330.21l0.86,-0.9l0.64,0.14l0.6,-0.3l0.86,-2.1l1.82,-0.46l1.23,-1.76l1.22,-0.03l0.73,0.59l2.95,-0.5l1.71,0.19l3.64,-3.28l0.95,-1.86l0.61,-1.99l-0.56,-2.46l3.11,-0.81l1.69,-0.98l0.63,0.14l3.09,2.89l1.79,2.3l1.82,0.94l1.42,1.5l-1.11,2.16l-0.07,1.39l2.7,3.89l0.46,3.62l0.9,1.82l-0.57,1.92l-0.76,-0.15l-0.67,0.27l-0.97,1.57l0.01,0.66l0.72,1.13l-0.93,2.67l-2.37,1.13l-0.44,0.68l0.04,1.14l-2.2,2.49l0.07,1.73l-1.05,2.47l-2.97,0.39l-0.35,0.34l-0.49,3.14l-0.55,10.76l0.42,3.23l0.74,1.58l-0.4,0.87l0.07,3.84l-0.41,1.09l0.59,3.12l-0.76,3.68l-10.19,1.27l-0.39,-1.8l-1.68,-2.19l-0.17,-0.62l0.25,-0.77l-0.62,-2.49l0.9,-0.43l-0.29,-24.23l-0.51,-1.3l-2.01,-2.49l-0.45,-2.39l-0.22,-5.16l-6.61,-4.58l0.26,-3.59l1.26,-3.12Z\",\n            name: \"Benin\"\n          },\n          ZA: {\n            path: \"M740.97,1053.87l-0.3,0.16l-2.08,-0.34l0.77,-0.88l0.95,0.15l0.83,0.6l-0.17,0.3ZM513.38,877.36l-0.7,-2.43l0.21,-1.52l1.33,-0.97l-0.39,-2.31l-2.04,-3.95l-1.28,-0.93l-0.91,-1.89l-0.98,-0.79l-0.44,-1.41l-0.87,-1.03l-0.28,-1.52l0.86,-1.1l1.02,0.73l1.17,-0.42l1.58,-1.41l0.87,-1.92l-0.14,-5.2l-1.18,-4.99l-6.3,-9.48l-3.86,-7.37l-1.84,-4.4l-2.82,-8.97l-2.49,-5.08l-3.19,-4.84l1.71,-1.23l1.58,-0.5l1.51,-4.23l0.55,-0.6l1.17,-0.4l0.86,0.51l0.67,1.49l1.71,0.81l0.27,0.89l-0.5,1.25l0.06,0.63l1.46,2.85l2.93,0.89l3.23,0.54l1.6,0.79l8.58,-0.04l2.15,0.73l1.89,0.12l1.15,-0.62l0.66,-2.0l1.14,-0.28l0.89,-0.67l0.72,-1.13l1.41,-0.82l2.31,-0.66l1.14,0.02l0.41,-0.4l0.0,-45.51l3.59,2.68l0.95,1.39l4.2,9.51l0.27,2.9l-2.22,3.62l0.17,3.82l0.55,1.14l1.12,0.53l1.45,-0.47l2.34,0.53l4.45,-0.24l2.39,0.25l1.22,-0.68l1.03,-1.55l2.03,-0.52l1.07,-0.76l1.54,-2.45l4.44,-3.21l0.59,-0.91l2.77,-7.63l0.78,-1.0l1.09,-0.64l2.32,-0.54l1.33,0.28l3.19,1.73l2.71,2.14l0.99,0.34l2.51,0.09l1.71,1.37l4.87,0.93l1.67,-0.08l1.44,-0.71l2.47,0.03l2.89,-0.6l1.77,-1.52l3.74,-10.56l5.64,-1.65l0.77,-0.5l1.88,-2.25l2.53,-1.91l1.9,-6.79l1.09,-1.48l2.61,-1.84l2.17,-0.7l0.76,-0.54l0.84,-1.24l1.42,-0.32l0.29,-0.74l1.83,-1.35l0.14,-0.7l3.09,-3.46l1.9,-1.17l3.64,-0.71l1.74,-0.69l1.35,-1.12l0.83,-1.45l1.19,-0.7l6.13,-0.81l2.7,0.45l3.43,1.33l3.27,0.47l5.28,-0.47l1.78,0.2l2.22,1.0l2.84,10.65l0.18,2.57l3.01,5.17l2.14,6.91l-0.02,14.51l-0.75,1.88l0.25,2.05l-0.38,0.1l-5.35,-2.92l-1.09,0.12l-1.7,1.23l-1.4,1.72l-0.68,1.53l-2.73,4.04l-0.07,4.73l0.46,0.47l0.66,0.07l2.05,3.86l2.6,1.72l2.49,0.78l3.2,0.18l2.56,-0.05l0.39,-0.43l-0.14,-1.63l0.52,-4.16l3.87,0.62l5.77,-0.15l-0.36,2.4l-2.25,6.66l-1.43,7.49l-1.84,3.72l-1.01,1.51l-2.97,2.73l-1.48,0.86l-1.49,0.43l-5.23,5.67l-1.94,2.72l-1.74,4.0l-1.71,2.2l-4.74,8.26l-2.14,3.28l-3.68,4.5l-2.75,1.91l-2.96,2.65l-7.38,8.08l-4.73,4.27l-2.78,1.91l-4.1,3.69l-5.83,4.03l-3.32,2.09l-7.45,3.08l-5.07,-0.62l-2.27,0.34l-1.99,1.57l-0.29,2.16l-0.44,0.19l-4.58,-0.97l-2.09,0.16l-1.39,1.25l-0.86,1.33l-2.44,0.07l-4.83,-1.48l-5.72,-0.91l-1.5,-0.07l-3.6,1.24l-3.92,-0.23l-2.3,-0.7l-2.13,-0.0l-3.86,0.86l-5.25,3.93l-2.63,0.0l-2.42,0.46l-4.2,-0.54l-1.32,0.26l-1.31,0.71l-2.94,0.34l-5.89,4.21l-4.29,-0.41l-2.76,-1.89l-0.65,-0.02l0.02,-1.4l-1.07,-1.12l-1.17,-0.04l-0.78,-0.87l-2.78,0.16l-0.24,-3.04l-0.95,-0.65l-2.91,0.11l-0.94,1.2l-0.06,1.39ZM623.55,807.58l-1.33,0.56l-5.08,7.29l-2.34,1.04l-0.45,0.34l-0.22,0.76l0.97,2.51l2.58,4.01l-0.03,1.17l0.48,0.94l1.3,0.73l3.08,3.04l3.47,0.6l1.11,-0.88l0.57,-1.81l2.77,-3.68l3.97,-0.58l2.01,-0.85l2.35,-1.56l0.64,-2.92l1.77,-1.76l1.17,-3.92l-1.08,-2.49l-4.17,-2.79l-3.9,-3.86l-2.17,0.4l-2.81,1.09l-3.25,2.21l-1.44,0.43Z\",\n            name: \"South Africa\"\n          },\n          BW: {\n            path: \"M592.94,670.5l-0.23,1.26l0.71,1.59l1.23,1.28l2.04,3.62l2.35,2.48l0.65,1.85l1.45,1.67l0.11,1.69l2.56,5.57l6.11,4.47l5.85,2.54l0.78,1.38l0.27,2.94l0.41,0.38l4.41,0.23l0.15,2.87l-0.36,3.84l2.09,2.49l2.0,3.59l0.63,0.38l5.67,0.95l5.59,1.71l-0.22,1.52l0.42,1.17l0.85,0.66l1.53,0.2l0.68,0.71l-1.78,0.15l-1.53,0.86l-0.91,1.53l-1.14,0.97l-1.61,0.64l-3.77,0.75l-2.01,1.24l-2.24,2.32l-1.09,1.4l-0.12,0.65l-1.8,1.31l-0.2,0.62l-1.22,0.19l-1.62,1.81l-2.2,0.71l-2.77,1.97l-1.27,1.76l-1.75,6.53l-2.49,1.88l-2.45,2.61l-3.1,0.72l-2.77,1.1l-3.86,10.72l-1.49,1.23l-2.54,0.49l-2.51,-0.03l-1.61,0.75l-1.29,0.04l-4.76,-0.92l-1.79,-1.39l-3.3,-0.35l-2.6,-2.07l-3.36,-1.81l-1.52,-0.33l-1.57,0.28l-1.61,0.5l-1.77,1.76l-3.29,8.45l-4.38,3.15l-1.55,2.46l-0.82,0.61l-1.99,0.51l-0.68,0.47l-1.05,1.61l-7.08,0.09l-2.33,-0.53l-1.57,0.47l-0.8,-1.03l-0.17,-3.51l2.21,-3.57l-0.28,-3.35l-4.29,-9.69l-1.09,-1.56l-4.12,-3.05l-0.04,-33.77l11.25,0.0l0.39,-0.32l0.05,-44.66l11.82,-1.44l14.08,-2.4l0.71,0.26l1.82,2.37l1.36,2.58l0.7,0.36l1.27,-0.46l2.42,-2.43l3.94,-2.42l1.22,-0.5l2.22,0.81l3.02,-2.24l1.27,-0.49l3.45,-0.39Z\",\n            name: \"Botswana\"\n          },\n          DZ: {\n            path: \"M221.33,99.35l5.55,-0.16l6.56,-1.62l1.94,-1.36l1.39,-1.43l2.48,-3.82l2.1,-1.06l5.33,-1.88l3.96,-2.76l3.8,-0.7l0.66,-0.8l-0.08,-1.13l-2.32,-1.51l0.5,-2.08l-0.68,-3.22l0.65,-0.61l3.77,-0.18l5.04,-1.7l0.6,-0.79l0.62,-2.04l0.54,-0.29l4.79,-0.71l13.74,0.53l0.74,-0.27l0.25,-0.37l-0.41,-2.14l0.19,-0.64l1.95,-1.62l0.11,-0.49l-0.64,-1.23l-3.91,-2.98l-0.64,-1.1l-0.52,-2.63l-1.44,-3.04l0.54,-3.16l-0.97,-2.93l0.25,-2.74l-0.17,-2.45l-0.95,-2.48l0.64,-1.41l-1.32,-1.83l0.6,-1.91l-4.07,-3.16l-0.72,-1.01l3.05,0.07l2.93,-1.21l4.11,-2.52l2.84,-2.79l7.62,-3.71l2.73,0.57l1.86,-0.27l1.23,-1.02l1.17,-2.1l1.79,-1.26l7.68,-3.75l3.27,-0.99l12.68,-1.21l2.9,0.13l4.55,-2.47l6.35,-0.14l3.11,-1.36l11.33,-0.0l2.63,1.13l2.44,1.81l1.39,0.39l1.59,-0.39l3.49,-1.65l4.02,-0.89l2.16,-1.0l1.01,-1.47l1.48,-0.43l1.07,1.05l4.12,1.13l3.87,-0.66l0.27,-0.48l-0.26,-1.08l2.04,0.34l1.97,0.77l2.11,1.58l1.54,0.39l2.7,-0.72l4.92,-0.34l0.15,0.75l-1.6,0.85l-1.01,1.82l-1.55,1.12l-0.44,0.7l0.24,0.66l1.01,0.49l0.39,0.87l-1.18,7.58l0.84,2.07l-0.03,3.22l0.88,2.63l-0.87,1.43l-0.46,1.49l-0.37,3.25l-1.33,2.08l-3.26,1.97l-1.16,2.14l-2.75,2.31l-0.25,3.53l2.8,7.65l0.48,0.56l4.0,2.24l1.11,1.61l1.56,5.14l8.2,5.98l5.48,23.47l-2.2,1.33l-0.13,0.55l3.85,6.11l1.91,5.8l0.42,2.6l-0.31,5.2l0.5,6.57l0.66,3.21l-1.96,5.8l0.58,3.71l0.49,1.63l0.65,0.87l-0.12,2.54l-0.23,0.81l-4.32,2.79l-0.68,1.25l-0.17,1.41l0.36,1.12l6.44,9.15l0.31,3.47l1.07,3.25l1.71,2.65l1.86,1.42l0.67,0.05l2.78,-0.85l9.44,2.89l5.07,9.39l-52.31,32.38l-19.32,17.03l-0.94,0.5l-28.22,5.41l-2.21,-1.53l1.57,-2.44l0.16,-0.76l-0.64,-1.89l0.02,-2.73l-1.0,-1.05l-3.24,-1.37l-5.26,-1.26l-1.41,-1.71l-0.82,-0.54l-3.55,-0.36l-1.93,-0.67l-0.68,-0.49l-0.88,-2.15l-3.87,-2.03l-1.27,-1.07l0.08,-1.93l-0.49,-1.74l-66.42,-45.76l-11.74,-7.74l-36.95,-23.29l0.16,-17.66l11.35,-8.01l2.34,-0.55l3.78,-2.8l5.93,0.6l0.75,-0.22l0.97,-1.1l0.25,-1.88Z\",\n            name: \"Algeria\"\n          },\n          ET: {\n            path: \"M725.94,291.31l1.59,-0.58l1.43,-0.08l2.7,0.48l0.61,-0.32l0.82,-1.39l1.01,-0.41l0.96,0.83l1.77,2.54l1.16,0.25l3.75,-8.2l1.03,1.12l2.48,0.99l1.79,2.1l0.92,0.64l4.56,-0.65l2.86,-1.74l1.54,1.78l0.99,0.1l2.98,-0.77l2.55,0.43l1.76,0.7l2.77,-0.18l0.84,0.26l3.51,2.43l2.92,1.0l1.85,1.82l2.18,2.98l2.82,2.82l4.68,3.74l2.17,3.56l2.21,1.42l2.63,3.35l-4.31,6.33l-2.45,2.83l-0.34,3.34l0.4,5.17l0.27,0.35l2.11,0.47l7.0,-1.64l0.99,0.03l1.51,0.81l1.06,0.14l-1.56,1.9l-1.21,1.96l-0.07,0.61l1.49,2.73l0.69,2.0l2.69,3.32l1.34,0.64l1.39,3.09l2.16,2.79l1.75,0.62l4.76,4.15l34.61,11.66l10.92,0.04l-17.54,17.0l-17.34,18.6l-10.93,-0.52l-4.87,1.14l-5.48,2.53l-1.37,1.04l-1.78,2.71l-7.25,1.39l-2.4,0.75l-1.75,1.86l-6.41,0.41l-1.94,-0.21l-3.04,-2.61l-1.65,-1.03l-10.87,4.97l-2.27,3.29l-1.66,1.29l-6.08,-0.75l-4.27,-0.94l-5.97,-0.55l-13.9,-8.97l-10.28,-0.64l-2.84,-3.78l-0.07,-1.51l0.51,-2.54l-0.17,-1.57l-0.77,-0.92l-3.24,-0.88l-1.76,0.59l-0.34,-0.26l-0.05,-1.06l-2.16,-2.09l-1.1,-2.08l-0.32,-2.25l-3.0,-7.36l-1.7,-1.38l-1.03,-1.48l-2.35,-1.2l-2.43,-2.53l-0.51,-1.66l-1.49,-1.78l-2.88,-1.96l-5.15,-1.06l-2.36,-1.3l3.05,-5.92l7.75,-0.06l1.97,-1.84l-0.12,-11.17l0.91,-3.93l1.79,-4.02l-0.39,-4.04l1.71,-2.87l1.37,-0.92l2.44,1.52l0.66,-0.22l1.4,-1.3l0.53,-3.71l-0.08,-1.4l1.71,-6.24l1.65,-1.69l4.82,-7.84l1.58,-0.64l3.63,-0.69l0.37,-1.06l0.29,-3.43l0.59,-2.06l2.1,-4.28l0.66,-2.58l-0.02,-1.8l0.85,-2.9Z\",\n            name: \"Ethiopia\"\n          },\n          RW: {\n            path: \"M636.22,488.26l1.26,-0.91l1.11,-0.31l3.12,-3.45l0.23,-0.83l-1.49,-3.68l1.28,-1.64l2.53,-1.49l2.72,-0.58l0.72,1.41l1.45,-0.17l1.44,-1.01l2.6,-3.03l0.8,-0.44l0.3,0.02l0.44,1.46l1.5,1.94l1.0,0.44l0.5,0.61l0.54,1.12l0.07,4.67l0.54,0.99l0.12,1.02l-0.7,2.22l-2.66,0.4l-1.82,-1.01l-2.16,0.44l-1.14,0.76l-1.49,-0.87l-0.74,-0.03l-0.38,0.37l-0.64,4.17l-1.74,0.8l-3.47,0.17l-0.99,-1.54l-2.37,-0.94l-0.91,0.27l-0.5,1.03l-0.74,-0.57l-0.32,-1.82Z\",\n            name: \"Rwanda\"\n          },\n          TZ: {\n            path: \"M644.97,516.58l0.34,-4.61l0.73,-0.07l2.75,-1.8l2.34,-2.61l1.44,-2.77l1.32,-1.45l0.54,-1.65l2.32,-1.91l0.01,-0.89l1.73,-0.74l0.51,-1.14l-0.4,-2.83l-3.35,-0.98l-0.71,-0.33l-0.07,-0.35l0.54,-1.4l-0.47,-0.77l1.15,-2.31l2.85,-0.57l0.51,-0.36l0.71,-2.54l-0.14,-1.28l-0.54,-0.98l-0.11,-4.79l-1.25,-2.03l-0.99,-0.42l-1.36,-1.75l-0.34,-0.99l2.03,-0.25l1.49,-0.64l11.95,0.24l-0.4,3.55l-0.73,1.55l-1.17,5.25l0.13,4.05l1.26,2.01l-0.54,1.03l0.18,0.62l0.62,0.55l-0.27,0.69l0.26,1.29l0.42,0.3l0.53,-0.25l0.27,-0.85l0.41,-0.17l0.39,0.57l0.66,0.23l0.44,-0.51l-0.24,-2.1l1.79,-0.16l0.18,-0.44l-0.51,-1.29l1.57,-1.06l0.72,1.22l1.06,0.65l0.89,0.12l0.26,0.53l0.53,0.05l0.89,-0.65l0.47,0.59l1.22,0.21l-0.07,1.31l0.5,1.15l-0.97,0.97l-0.19,1.62l0.62,0.4l1.52,-1.4l0.71,-0.13l0.28,-0.57l-0.87,-2.06l0.09,-1.95l0.42,-0.49l1.11,-0.09l1.72,0.93l2.65,0.47l0.49,-0.38l0.02,-0.58l4.25,-3.12l-0.1,-1.24l-0.74,-0.36l-2.13,0.64l-3.59,-0.58l1.78,-0.61l1.16,-0.01l0.39,-0.48l-0.77,-1.09l-1.56,-0.14l0.58,-0.45l1.09,0.08l1.33,-0.78l0.22,-0.91l0.88,-0.93l-0.29,-0.75l0.22,-0.55l2.55,0.33l0.33,-0.73l-1.08,-0.91l0.08,-0.38l1.28,-0.24l0.04,-0.69l-0.44,-0.51l1.47,-1.96l41.71,23.3l0.4,2.07l-0.91,2.38l0.09,0.83l1.23,0.54l1.04,1.59l16.48,11.86l-2.76,9.33l-0.79,1.29l-1.08,2.96l-0.19,2.37l0.91,3.37l1.26,1.46l1.69,1.19l1.16,1.46l0.67,1.48l2.25,0.91l0.72,1.43l-0.25,0.93l-0.99,0.98l-0.94,1.58l-0.81,2.28l-0.02,3.18l0.68,0.29l0.28,-0.26l0.72,0.49l0.13,2.05l-1.16,2.69l-0.42,2.58l0.86,3.27l1.26,1.67l-0.33,1.1l2.14,2.83l-0.14,2.6l1.73,5.01l0.08,0.71l-0.6,0.9l0.27,0.62l1.51,0.24l1.23,1.45l1.38,0.17l3.45,2.23l0.64,0.9l-5.28,4.01l-1.96,1.06l-2.98,0.79l-2.85,1.71l-1.64,0.49l-2.22,0.02l-2.26,0.73l-3.44,2.1l-1.86,-1.09l-1.74,-0.43l-3.31,0.24l-0.55,0.43l-0.66,1.93l-1.1,1.05l-2.05,1.07l-1.85,0.39l-1.7,-0.27l-2.93,-1.43l-1.38,0.08l-2.36,1.34l-1.68,0.35l-2.4,-0.11l-1.08,-0.34l-0.27,-0.73l-1.09,-0.86l-2.25,-1.07l-1.76,0.1l-0.92,0.92l-1.46,0.75l-6.7,-0.3l-0.8,-2.01l-0.72,-0.67l-0.78,-0.14l-1.78,-2.85l0.71,-3.19l-0.06,-1.07l-0.9,-2.23l-0.18,-3.36l-0.59,-2.65l-2.47,-3.64l-2.72,-2.29l-1.18,-0.56l-0.46,0.09l-0.62,0.96l0.06,0.99l-2.57,-0.86l-3.12,0.15l-1.19,-1.08l-2.29,-0.28l-1.74,-1.13l-0.85,0.04l-4.84,-2.19l-0.8,-0.73l-2.44,-0.36l-1.17,-0.63l-1.97,-0.2l-0.31,-1.29l-1.28,-0.52l-1.64,0.09l-1.18,-1.05l-0.39,-1.22l-1.0,-0.7l-1.39,-0.63l-1.67,0.03l-0.42,-1.69l-2.07,-2.49l-0.06,-1.31l-2.75,-5.02l-1.4,-1.85l-0.05,-1.9l-0.96,-2.74l0.48,-0.66l0.06,-1.01l-0.46,-1.02l-0.91,-0.88l-1.81,-2.8l-1.67,-1.67l-1.13,-0.35l-1.39,0.42l-2.51,-2.66l0.27,-2.19l1.84,-0.96l0.58,-1.21l-1.05,-2.93l-1.22,-1.91l0.69,-3.57l-0.3,-1.39l-0.66,-0.88l-1.43,-0.88ZM762.78,552.69l-0.45,-0.03l2.18,-1.95l-0.46,1.08l-0.77,0.24l-0.51,0.66ZM764.47,517.47l-0.18,3.41l-0.94,1.84l-0.66,-0.51l0.6,-2.83l-0.24,-1.79l1.42,-0.13ZM760.15,532.01l0.83,2.31l-0.43,0.34l-0.52,-0.95l-0.74,-0.16l-0.92,-0.93l-0.6,-0.04l-0.52,-0.88l0.25,-1.03l-0.15,-1.61l1.05,-1.58l0.23,1.82l0.76,1.93l0.77,0.77ZM683.58,482.55l0.38,0.28l1.24,-0.06l0.79,1.43l-3.05,-1.0l-0.14,-1.03l0.6,-0.17l0.18,0.55ZM670.5,485.68l0.64,0.7l1.71,-0.3l-0.03,0.36l-1.27,0.27l-0.41,0.62l-0.7,-0.98l0.06,-0.68Z\",\n            name: \"Tanzania\"\n          },\n          GQ: {\n            path: \"M410.07,446.64l-1.07,-0.77l-1.18,-0.22l1.11,-3.0l1.66,-1.63l0.99,-2.55l1.02,-1.6l-0.11,-3.49l1.8,0.85l15.42,0.0l0.07,12.9l-14.92,-0.05l-1.36,0.5l-1.02,-0.39l-0.73,-0.94l-1.1,0.01l-0.59,0.36ZM399.74,415.59l1.81,-0.01l0.26,0.34l-0.04,0.66l-1.74,2.58l-0.37,1.17l-0.56,0.76l-0.36,0.05l-1.91,-0.51l-0.27,-0.45l0.22,-1.02l1.41,-0.56l0.73,-2.22l0.81,-0.78Z\",\n            name: \"Eq. Guinea\"\n          },\n          NA: {\n            path: \"M466.74,733.07l0.38,0.14l0.53,-0.3l0.29,-1.49l0.06,-1.38l-0.78,-3.22l-1.69,-3.26l-4.06,-5.17l-1.58,-3.62l-4.54,-6.79l-3.29,-8.89l-1.52,-2.0l-6.83,-13.38l-1.6,-2.24l-3.3,-3.31l-1.06,-2.44l-2.01,-3.19l-0.48,-2.93l0.08,-5.67l1.56,-0.23l1.36,-0.7l0.99,-0.04l1.23,0.54l3.93,0.03l6.56,-2.95l4.09,0.79l1.02,1.22l1.56,1.11l2.97,1.93l0.99,0.26l4.73,-0.25l46.65,0.14l0.82,0.42l2.79,3.2l2.87,1.25l5.01,0.28l3.11,0.53l6.52,-0.06l2.21,0.27l2.71,1.31l1.59,0.3l4.32,-0.77l1.91,0.08l1.68,0.45l33.47,-6.28l7.59,0.74l1.71,1.01l1.22,1.2l-3.15,0.36l-1.47,0.55l-2.98,2.19l-1.88,-0.83l-1.58,0.57l-2.92,1.63l-3.54,3.27l-0.86,0.33l-1.39,-2.56l-1.91,-2.5l-1.28,-0.49l-14.2,2.41l-9.11,1.31l-3.01,0.14l-0.38,0.4l0.04,44.55l-11.33,0.0l-0.4,0.4l0.04,80.24l-3.33,0.69l-1.64,0.94l-0.77,1.18l-0.76,0.57l-1.24,0.35l-0.49,0.57l0.02,1.07l-0.29,0.46l-0.78,0.38l-1.43,-0.12l-2.25,-0.75l-2.8,-0.18l-3.43,0.39l-2.32,-0.18l-1.49,-0.76l-6.0,-1.39l-1.09,-2.32l0.46,-1.7l-0.33,-1.21l-0.66,-0.69l-1.17,-0.31l-0.68,-1.49l-1.21,-0.76l-1.78,0.45l-0.85,0.85l-1.42,4.13l-1.43,0.38l-1.94,1.43l-6.19,-5.65l-1.96,-2.31l-5.01,-8.64l-1.8,-6.11l-0.09,-1.33l0.45,-1.04l-0.28,-1.16l-0.62,-1.24l-1.39,-1.25l-0.41,-4.36l-1.0,-2.93l0.21,-2.32l-0.53,-3.62l0.2,-2.77l-0.81,-3.06l-1.66,-3.05l-1.46,-4.23l-0.32,-11.33l-0.81,-3.84l0.15,-0.39Z\",\n            name: \"Namibia\"\n          },\n          NE: {\n            path: \"M321.81,313.66l1.53,-0.4l0.4,-0.89l-0.22,-1.1l-1.45,-2.12l-1.95,-0.1l-1.94,1.11l-2.45,-0.24l-5.39,-4.29l-1.15,-0.38l-0.09,-3.16l1.82,0.33l0.68,-0.44l-0.04,-0.61l-2.08,-1.29l-0.5,-1.0l-1.0,-0.75l-3.25,-1.11l-2.12,-3.07l-0.8,-1.8l0.24,-1.49l-2.48,-2.91l0.68,-5.15l5.45,0.19l2.78,-0.35l4.15,-3.46l19.81,-0.82l0.66,-1.03l5.16,0.84l0.46,-0.35l0.17,-1.37l2.04,-1.75l1.66,-0.81l1.31,-3.09l0.79,-2.94l1.26,-2.04l0.73,-2.79l0.23,-4.44l0.38,-0.57l-0.08,-25.67l17.51,-3.48l1.14,-0.59l19.35,-17.05l52.45,-32.47l17.54,4.13l1.29,0.7l7.35,6.23l0.48,-0.02l8.29,-4.41l2.16,12.67l0.17,5.07l1.36,1.45l3.48,5.3l-0.67,1.12l0.55,1.73l4.36,4.66l-2.64,5.31l-3.05,36.2l-12.92,13.89l-6.58,9.41l-1.95,4.04l-2.24,2.94l1.66,7.95l-2.93,0.41l-1.59,1.19l-3.77,1.49l-2.64,1.53l-1.7,1.58l-0.55,1.13l-3.62,0.02l-1.52,-1.2l-3.53,-1.28l-3.33,-0.67l-5.41,-0.22l-5.67,0.49l-3.48,0.73l-1.75,0.81l-1.44,0.91l-3.55,3.74l-4.66,-0.12l-5.18,-1.01l-3.4,-1.78l-4.22,-2.75l-3.26,-0.65l-0.74,0.08l-4.95,2.7l-2.18,0.27l-1.39,1.02l-1.14,-0.09l-1.38,-1.06l-2.54,-3.62l-3.47,-3.04l-1.54,-0.13l-8.22,-2.48l-1.61,0.45l-1.39,0.93l-4.84,-0.04l-3.14,0.7l-1.76,0.72l-2.05,1.71l-1.11,0.52l-0.9,5.04l-0.54,1.37l-1.02,1.82l-3.62,3.17l-0.08,6.6l-0.33,1.1l0.59,1.46l-0.27,0.23l-1.57,-1.62l-1.7,-0.84l-1.78,-2.28l-3.39,-3.09l-1.09,-0.17l-1.79,1.01l-3.36,0.92l-0.28,0.74l0.48,2.67l-3.22,-4.6Z\",\n            name: \"Niger\"\n          },\n          NG: {\n            path: \"M338.89,383.6l2.54,-1.3l-0.03,-0.73l-0.68,-0.18l-3.28,0.84l-1.28,1.51l-6.76,0.28l0.76,-3.44l-0.58,-3.21l0.4,-1.07l-0.07,-3.83l0.41,-1.05l-0.77,-1.74l-0.38,-3.03l0.54,-10.63l0.44,-2.81l3.16,-0.57l0.81,-1.34l0.44,-1.57l-0.11,-1.56l2.13,-2.36l0.08,-1.47l2.54,-1.34l0.66,-1.31l0.54,-1.9l-0.79,-1.5l0.27,-0.67l0.61,-0.69l0.99,0.13l0.54,-0.54l0.61,-2.19l-0.92,-2.01l-0.46,-3.61l-2.67,-3.8l0.03,-1.02l0.7,-1.48l1.32,-1.61l-0.59,-1.61l0.33,-1.04l0.07,-6.43l3.4,-2.82l1.15,-2.01l0.62,-1.58l0.68,-4.61l1.0,-0.46l2.05,-1.71l4.52,-1.29l4.94,0.02l1.55,-1.0l1.31,-0.37l8.03,2.47l1.3,0.04l3.27,2.88l2.53,3.62l1.77,1.29l1.51,0.1l1.52,-1.06l2.17,-0.26l5.34,-2.74l2.96,0.57l4.18,2.72l3.58,1.86l5.33,1.04l4.91,0.13l3.94,-3.96l1.29,-0.81l1.58,-0.74l3.34,-0.7l5.62,-0.49l5.27,0.21l3.23,0.65l3.39,1.23l1.67,1.25l2.36,0.2l1.78,-0.24l0.83,-1.36l1.6,-1.49l2.51,-1.44l3.83,-1.51l1.47,-1.12l2.92,-0.36l5.2,7.23l1.55,8.19l1.14,0.62l1.71,0.16l1.06,0.48l1.05,1.56l-0.27,3.59l-0.42,1.35l0.04,2.5l-4.04,2.55l-2.67,0.72l-1.12,0.93l-2.27,3.19l-1.98,3.29l-1.38,5.02l-1.73,1.72l-0.81,5.49l-1.97,0.77l-1.19,0.9l-0.66,1.55l-0.81,4.89l-0.8,1.5l-1.58,1.31l-2.31,0.53l-1.99,3.69l-0.93,4.05l-1.56,2.65l-0.11,1.52l-2.86,3.7l0.97,1.91l-3.18,2.63l-0.57,2.7l-2.25,1.88l-1.77,0.5l-0.54,-0.53l-0.86,-2.8l-3.25,-3.02l-1.62,-0.94l-0.8,0.12l-0.77,1.58l-0.93,0.43l-2.2,-0.14l-0.59,-1.08l-0.57,-0.11l-4.23,2.76l-1.51,2.76l-3.3,2.46l-3.76,3.74l-1.53,2.82l-1.56,6.81l-2.8,5.0l-0.32,0.25l-0.57,-0.15l-0.36,-0.64l-0.74,-0.3l-0.96,-1.07l-0.78,0.16l-0.11,0.44l1.05,2.82l-0.27,0.76l-7.24,0.38l-0.69,-0.32l-0.35,-0.95l-0.61,-0.18l-0.74,1.1l-1.77,0.08l-1.48,-1.46l-0.92,-0.48l-0.55,0.49l0.99,1.21l-0.08,0.83l-1.43,1.19l-0.76,0.06l-0.45,-0.41l-0.92,-3.27l-0.6,-0.23l-0.39,0.5l0.29,2.91l0.54,0.89l-1.76,0.21l-0.6,-1.48l-0.67,0.21l-0.25,1.31l-2.68,0.38l0.1,-1.13l-0.65,-0.28l-0.8,0.82l-0.08,0.87l-1.03,-0.1l-3.13,-1.87l-2.38,-2.16l-1.09,-2.2l-1.1,-2.87l0.83,-0.4l-0.21,-0.65l-0.94,-0.26l-0.02,-1.24l1.51,-0.54l0.61,-1.2l-0.54,-0.51l-1.74,0.77l-1.75,-1.15l2.03,-0.1l0.74,-0.44l-0.08,-0.72l-1.21,-0.16l-0.03,-0.57l-0.61,-0.36l-0.67,0.8l-0.89,0.33l-0.37,-0.24l-0.23,-1.38l-2.79,-3.17l-5.14,-3.88l-3.8,-0.8l-6.74,0.03ZM382.56,407.1l-0.87,0.28l-0.02,-0.0l0.45,-0.68l0.44,0.41Z\",\n            name: \"Nigeria\"\n          },\n          TN: {\n            path: \"M393.95,11.16l1.69,-1.28l0.94,-1.75l1.74,-0.94l0.03,-1.47l2.63,-0.77l3.65,-2.61l6.28,-1.93l1.22,0.27l-0.47,1.25l0.54,1.03l0.6,0.12l0.78,-0.63l-0.06,-0.91l1.95,0.05l0.97,0.47l-0.08,2.06l1.65,2.34l-0.39,0.92l0.2,0.52l1.4,0.67l1.63,-0.83l0.68,-1.19l2.26,-0.71l2.09,-1.67l0.72,-0.11l0.65,2.05l-1.66,1.69l-1.96,3.31l-1.73,0.93l-1.45,1.35l-0.7,2.23l0.38,2.14l1.07,2.04l1.15,1.17l1.21,0.45l2.36,1.69l0.47,3.82l0.81,1.23l-4.84,7.19l-1.78,1.72l-4.9,3.52l-1.05,2.18l0.14,1.24l1.29,2.72l1.8,1.72l2.07,0.97l2.54,-0.29l0.17,1.91l0.41,0.33l2.13,-0.26l0.76,-1.06l1.0,0.56l0.72,2.39l1.13,0.83l-0.39,0.32l0.07,0.66l3.32,0.78l-0.51,3.44l-0.06,3.37l0.96,2.13l-0.26,0.57l-7.85,4.28l-0.71,0.81l-1.87,1.17l-1.54,2.48l-1.86,0.38l-0.61,0.42l-1.38,1.86l-0.56,1.34l1.5,5.57l0.14,1.99l-0.42,0.94l-3.67,4.98l-3.88,1.77l-5.51,-23.48l-8.3,-6.14l-0.33,-1.91l-1.09,-3.01l-1.2,-1.77l-4.43,-2.74l-2.68,-7.3l0.14,-3.04l2.61,-2.15l1.12,-2.09l3.28,-2.0l0.93,-1.22l0.67,-1.32l0.75,-4.52l0.94,-1.54l-0.85,-2.92l0.01,-3.35l-0.83,-1.99l1.18,-7.61l-0.6,-1.31l-1.0,-0.53ZM429.08,34.41l0.05,-0.04l-0.0,0.02l-0.05,0.02ZM425.59,47.89l-0.94,0.42l-1.23,-0.47l0.15,-1.38l1.64,-0.05l1.05,0.9l-0.66,0.58Z\",\n            name: \"Tunisia\"\n          },\n          LR: {\n            path: \"M182.44,359.46l0.23,0.58l0.47,0.24l0.48,-0.27l1.56,1.32l0.86,5.09l0.9,2.38l-0.16,1.38l-0.9,1.59l0.14,0.72l2.35,0.46l1.98,1.95l1.88,-0.62l0.71,0.07l2.06,-2.86l0.41,-1.94l0.86,-0.18l0.23,0.6l1.41,1.2l1.6,5.06l-0.4,3.01l-3.07,3.32l-0.02,0.55l0.88,0.56l1.08,0.13l1.92,1.64l1.09,0.35l2.5,0.04l0.9,0.5l1.14,3.08l0.99,0.75l2.94,0.87l0.57,3.05l-0.33,0.87l-0.01,1.69l-0.59,0.94l-0.16,1.24l-0.89,0.8l-0.26,3.02l0.23,5.05l-7.51,-2.68l-10.18,-5.43l-2.8,-2.16l-10.57,-9.84l-1.72,-1.1l-2.19,-0.56l-2.02,-1.05l-0.86,-1.9l-5.16,-2.62l-2.18,-2.21l2.51,-3.59l2.12,-1.94l2.46,-1.67l2.6,-2.53l1.07,-3.83l2.4,-1.31l0.98,-3.42l1.53,-0.28l0.28,0.68l0.51,0.25l3.12,-1.1Z\",\n            name: \"Liberia\"\n          },\n          LS: {\n            path: \"M634.16,822.85l-4.19,0.68l-2.99,3.91l-0.2,1.11l-0.69,1.14l-3.16,-0.43l-2.91,-2.91l-1.25,-0.68l-0.33,-0.65l-0.02,-1.31l-2.6,-4.03l-0.85,-2.36l2.71,-1.31l5.14,-7.34l2.48,-0.8l3.26,-2.21l4.38,-1.45l3.67,3.7l4.02,2.67l0.94,2.02l-1.08,3.55l-1.82,1.85l-0.49,2.65l-2.12,1.4l-1.88,0.8Z\",\n            name: \"Lesotho\"\n          },\n          ZW: {\n            path: \"M619.52,667.32l1.52,-1.13l1.42,-2.83l1.6,-0.75l1.18,-1.13l0.85,0.25l0.79,-0.39l0.36,-0.77l-0.19,-0.61l0.53,-0.97l2.1,-0.57l1.33,0.92l0.84,-1.35l1.5,-0.62l0.21,0.77l0.48,0.37l0.76,0.08l0.76,-0.44l0.55,-1.03l0.84,-0.17l0.52,-0.76l-0.02,-0.65l-0.48,-0.38l-1.81,-0.41l0.65,-1.04l0.29,-3.44l0.54,-1.6l4.29,-2.48l2.29,-0.94l2.77,-0.61l7.38,-0.02l0.15,3.65l0.52,0.52l9.44,0.4l2.95,1.85l2.3,0.42l2.88,2.51l3.74,0.33l4.47,1.65l1.34,1.1l2.08,0.36l-0.79,1.76l0.12,1.98l0.97,2.52l-0.17,9.97l0.44,3.27l-1.23,4.36l-1.91,1.23l-0.31,1.56l0.43,1.1l1.33,0.98l-0.83,3.48l0.65,2.13l2.02,3.74l-0.14,1.15l-3.67,6.34l-1.62,1.14l-0.59,0.8l-0.2,3.53l-1.38,2.2l0.74,2.07l-11.51,12.13l-1.41,1.08l-2.38,-1.05l-1.92,-0.23l-5.39,0.47l-3.06,-0.45l-3.34,-1.3l-2.89,-0.49l-3.45,0.57l-1.32,-1.27l-1.7,-0.28l-0.55,-0.43l-0.24,-0.74l0.24,-1.52l-0.36,-0.6l-5.85,-1.81l-5.67,-0.96l-0.62,-0.64l-1.54,-3.01l-1.98,-2.29l0.4,-3.6l-0.05,-2.82l-0.31,-0.6l-0.94,-0.41l-3.68,-0.07l-0.29,-2.75l-1.0,-1.73l-5.96,-2.62l-5.89,-4.28l-2.44,-5.32l-0.17,-1.82l-1.52,-1.78l-0.65,-1.86l-2.36,-2.5l-2.0,-3.57l-1.22,-1.26l-0.6,-1.32l0.24,-0.97l2.0,0.54l2.22,-0.23l1.01,0.35l1.57,1.18l1.76,0.19l1.59,-0.67l2.12,0.2l2.81,1.11l2.65,0.23l3.66,-1.15l2.42,-3.38l0.75,-0.83l1.22,-0.47l-0.01,-0.38Z\",\n            name: \"Zimbabwe\"\n          },\n          TG: {\n            path: \"M297.58,329.02l5.02,1.16l0.41,0.5l4.27,-0.43l-1.21,2.91l-0.23,4.07l6.74,4.89l0.05,4.61l0.5,2.61l0.52,1.0l1.61,1.69l0.34,0.89l0.29,23.77l-0.72,0.04l-0.35,0.56l0.57,1.3l0.2,3.15l1.71,2.23l0.29,1.1l-1.57,0.41l-0.26,0.49l-4.23,1.18l-0.32,-0.43l-1.07,-0.3l-1.32,-1.77l-0.76,-0.09l-1.87,-1.33l-0.36,-1.41l-2.02,-3.08l0.05,-1.2l0.71,-0.89l0.49,-3.74l-1.49,-1.17l-0.09,-1.04l1.24,-2.27l-0.25,-4.87l0.14,-0.58l0.99,-1.08l0.07,-0.86l-0.87,-1.65l-1.64,-1.23l-1.12,-1.56l1.31,-1.36l-0.27,-3.1l0.74,-2.97l-0.15,-0.72l-1.1,-1.08l-1.07,-0.07l-0.96,0.6l0.16,-0.87l0.84,-0.48l-0.21,-0.65l-0.32,-0.08l0.41,-0.48l0.67,-7.15l-5.49,-4.69l0.85,-2.38l0.12,-2.09Z\",\n            name: \"Togo\"\n          },\n          TD: {\n            path: \"M578.03,273.18l-3.93,-0.49l-1.78,0.39l-4.06,0.13l-1.4,1.01l-0.94,1.17l0.33,2.92l-0.38,1.56l-2.0,2.01l-0.95,1.7l-0.15,1.58l-2.18,0.91l-1.13,1.08l0.69,3.53l1.01,1.3l-4.1,2.79l-0.9,1.48l0.01,1.14l1.31,3.02l0.08,1.52l-0.7,1.15l-2.02,1.29l-1.81,3.11l-0.18,1.11l0.84,1.32l1.56,0.36l2.71,-0.44l1.16,0.49l0.58,1.09l-0.24,1.06l0.95,4.57l0.28,0.53l0.98,0.47l-0.28,3.72l0.43,1.24l2.34,2.15l0.9,0.19l0.67,0.54l0.13,1.52l-0.79,2.84l-4.16,-0.83l-3.05,1.22l-0.89,0.77l-1.27,0.05l-1.09,1.08l-2.3,1.14l-0.9,1.11l0.23,2.36l-0.43,0.77l-0.48,0.5l-1.29,0.43l-1.57,2.45l-1.53,0.31l-2.98,3.09l-0.36,0.99l-2.37,2.61l-4.93,3.21l-3.03,-0.07l-1.54,0.71l-3.23,0.62l-6.19,0.07l-1.27,0.3l-1.1,0.68l-0.91,0.7l-0.08,0.78l2.5,2.18l-2.17,2.71l-3.17,2.77l-0.67,1.34l-10.77,0.76l-4.72,2.01l-1.56,1.33l-2.55,0.76l-1.02,0.93l-2.07,-2.05l-0.46,-1.29l-0.49,-0.32l-1.81,1.18l-0.37,1.04l-3.88,1.25l-0.93,0.78l-1.16,0.33l-3.54,-0.51l0.55,-1.29l-0.04,-1.55l-1.31,-0.92l-2.2,-5.47l-1.62,-2.83l-3.08,-2.96l-1.52,-0.81l-4.63,-3.94l-3.79,-4.5l-0.24,-0.91l1.76,-2.31l1.06,-0.81l6.79,0.46l3.55,-0.49l2.16,0.34l2.59,-0.07l1.48,-0.59l0.07,-0.7l-1.41,-0.93l-2.93,-3.11l-1.64,-3.35l-0.73,-2.36l-0.44,-3.05l0.29,-2.9l0.77,-2.02l-0.48,-1.41l0.03,-2.37l-2.37,-5.15l-0.43,-2.84l-1.01,-1.83l-1.71,-1.01l-0.8,-0.94l-0.32,-1.79l-0.79,-0.75l-2.69,-0.74l-2.02,-0.03l-5.2,-7.24l-1.79,-7.81l2.17,-2.87l1.95,-4.05l6.54,-9.36l13.06,-14.17l3.05,-36.28l2.66,-5.37l-0.48,-1.05l-3.96,-4.05l-0.45,-1.41l0.67,-1.28l-3.68,-5.61l-1.25,-1.27l-0.11,-4.85l-2.21,-12.95l11.33,-5.34l93.4,48.28l-0.08,45.21Z\",\n            name: \"Chad\"\n          },\n          ER: {\n            path: \"M725.98,290.45l-1.08,-9.87l1.07,-1.39l1.84,-5.7l1.57,-3.22l1.19,-3.67l-0.27,-4.02l1.01,-2.0l0.29,-2.92l1.67,0.22l3.06,-0.38l1.52,-3.09l2.72,-1.6l2.69,-0.91l1.01,0.09l1.86,-0.73l1.52,-1.7l0.59,-1.3l1.73,-1.8l3.31,6.53l1.43,4.09l1.26,4.26l0.93,6.42l0.91,3.33l1.48,1.71l0.96,2.98l1.01,0.37l0.48,0.66l1.03,2.81l0.81,1.16l0.69,-0.07l0.4,-0.92l-0.29,-1.59l0.51,-1.27l1.63,1.29l0.51,2.14l1.63,1.88l4.01,0.97l3.0,2.29l4.31,1.43l5.66,7.61l6.8,4.67l1.12,2.14l0.61,2.17l0.41,0.29l1.27,-0.09l2.29,2.23l0.94,1.99l2.03,0.67l0.51,-0.26l0.16,-0.49l0.44,0.4l0.27,0.93l-2.78,1.01l-1.16,2.36l-0.56,0.38l-2.39,-1.59l-0.67,-0.04l-0.58,0.41l-2.59,-3.3l-2.15,-1.36l-2.21,-3.6l-4.73,-3.78l-2.78,-2.78l-3.55,-4.5l-3.59,-1.45l-3.5,-2.43l-1.06,-0.36l-2.94,0.16l-1.53,-0.66l-2.68,-0.47l-3.79,0.7l-0.72,-1.17l-0.72,-0.56l-0.84,-0.08l-2.63,1.77l-4.17,0.63l-2.39,-2.59l-2.53,-1.03l-1.42,-1.39l-0.6,0.17l-3.59,8.22l-2.01,-2.62l-1.44,-1.07l-0.85,0.09l-0.82,0.56l-1.09,1.51l-2.45,-0.51l-1.56,0.09l-1.44,0.51ZM766.22,272.78l0.48,-0.41l0.03,-0.47l0.53,0.36l0.91,2.23l-1.05,-0.03l0.45,-0.33l-0.04,-0.49l-0.64,-0.68l-0.67,-0.19ZM769.17,274.55l0.38,-0.41l1.15,0.55l-0.68,0.02l-0.84,-0.16ZM767.02,269.46l0.02,0.06l-0.07,-0.03l0.04,-0.04Z\",\n            name: \"Eritrea\"\n          },\n          LY: {\n            path: \"M432.51,55.96l1.38,0.62l1.77,0.32l5.52,3.09l5.6,0.76l6.2,-1.47l2.92,1.16l3.54,0.43l3.69,1.05l4.24,2.61l7.66,1.54l0.93,0.91l1.01,1.84l0.07,2.47l1.57,4.11l2.63,3.18l4.95,2.13l7.8,0.67l6.6,1.71l5.58,1.96l1.45,1.0l2.76,0.94l5.64,4.66l3.13,1.61l2.32,0.35l2.19,-0.32l5.0,-2.61l3.6,-4.1l1.2,-2.18l0.49,-1.56l-0.1,-1.66l-2.12,-4.73l-0.39,-3.28l0.53,-2.25l1.66,-2.73l2.87,-2.72l2.89,-1.92l5.07,-2.5l4.24,-0.32l2.53,-1.81l2.26,0.38l4.02,-0.12l10.29,3.8l0.39,1.92l-0.1,1.87l2.3,1.61l5.95,0.71l3.97,1.95l4.11,0.17l2.4,-0.25l2.18,0.39l1.51,1.16l1.29,2.64l-3.38,4.27l0.29,3.57l1.12,3.66l-0.13,1.16l-0.95,2.74l-2.09,3.53l3.25,13.05l-0.01,114.09l-11.32,-0.01l-0.4,0.4l0.0,5.43l-93.2,-48.18l-12.16,5.56l-8.69,4.61l-7.05,-6.08l-1.45,-0.8l-17.67,-4.18l-4.98,-9.44l-0.57,-0.48l-9.64,-2.95l-3.37,0.82l-1.45,-1.16l-1.58,-2.44l-1.03,-3.13l-0.39,-3.67l-6.44,-9.16l-0.26,-0.86l0.7,-2.02l4.25,-2.71l0.44,-1.21l0.15,-2.82l-0.71,-1.06l-0.46,-1.54l-0.55,-3.46l1.96,-5.89l-0.67,-3.24l-0.5,-6.52l0.31,-5.16l-0.45,-2.79l-1.96,-5.95l-3.69,-5.86l6.61,-3.36l3.84,-5.21l0.47,-1.05l0.04,-1.2l-1.64,-6.67l1.74,-2.63l2.37,-0.68l0.85,-0.94l0.76,-1.6l1.76,-1.09l0.71,-0.81l8.06,-4.48l0.38,-1.64l-0.94,-1.63l0.06,-3.19l0.47,-3.16Z\",\n            name: \"Libya\"\n          },\n          GW: {\n            path: \"M102.75,314.04l2.01,-0.15l3.14,-1.06l3.53,0.23l3.21,-0.63l4.46,-2.25l16.69,0.07l0.02,0.75l0.64,1.26l-0.54,1.98l-1.27,0.14l-1.39,0.92l0.14,0.78l2.35,1.93l0.04,2.71l-2.28,0.75l-3.76,0.09l-2.18,1.22l-2.78,0.61l-1.26,1.37l-2.71,5.05l-0.18,-0.26l0.4,-1.37l-0.4,-0.51l-0.79,0.17l-0.73,0.93l0.04,-0.85l-0.36,-0.42l-1.1,0.02l-0.63,-0.55l-0.0,-1.0l0.43,-0.41l0.03,-0.63l-1.26,-0.26l0.29,-0.52l1.89,-0.81l2.09,-0.29l0.24,-0.64l-0.81,-0.9l-1.27,-0.3l-1.19,0.21l-0.88,0.6l-0.81,-1.0l0.31,-0.99l0.41,-0.23l2.3,0.01l1.58,-0.65l0.36,-1.03l-0.76,-0.31l-1.01,0.5l-2.93,-0.17l-1.03,0.37l-1.56,1.14l-1.82,0.6l-0.9,-0.17l0.34,-1.16l-0.84,-0.93l-2.27,0.43l-1.37,-0.62l-0.48,-0.67l0.08,-0.8l0.87,-1.17l-0.35,-0.52l-0.95,-0.05l-1.3,0.41l-1.74,-0.97ZM112.9,326.69l0.12,-0.11l0.02,0.0l-0.05,0.06l-0.09,0.04ZM110.3,324.02l-0.59,-0.08l0.44,-0.86l0.04,0.01l0.1,0.93ZM108.31,319.69l0.84,-0.06l-0.27,0.64l-0.57,-0.57ZM107.34,328.61l0.47,-0.15l0.65,-0.58l-0.03,0.58l-1.09,0.15Z\",\n            name: \"Guinea-Bissau\"\n          },\n          ZM: {\n            path: \"M578.83,587.79l0.57,0.09l0.9,1.63l1.94,0.49l0.41,0.52l0.31,1.3l-0.6,1.66l0.66,0.65l1.04,0.36l0.81,-0.09l1.84,-1.04l6.98,-1.64l-0.32,1.99l0.92,2.81l1.87,1.51l1.5,0.02l4.75,1.72l6.71,0.98l2.85,-0.1l1.64,-0.9l1.15,-3.33l0.93,-0.3l0.75,2.3l2.11,1.86l1.24,2.89l0.6,0.54l1.03,0.56l2.46,0.22l6.31,2.67l1.54,3.66l1.6,0.52l0.56,0.64l2.18,3.35l0.35,1.25l0.84,0.74l2.45,0.45l4.15,-1.77l0.53,0.36l0.42,1.55l1.15,0.51l0.87,-0.41l0.27,-0.68l-0.0,-14.77l-0.48,-0.39l-3.47,0.9l-0.38,0.66l0.12,1.47l-0.48,0.23l-4.08,-0.94l-2.45,-2.65l-4.23,-3.58l-1.39,-3.69l2.15,-7.93l1.13,-1.72l0.08,-1.41l-0.44,-1.86l0.26,-6.68l-0.31,-1.88l-2.38,-5.09l3.16,-2.4l2.27,-2.77l0.64,-1.18l0.2,-1.3l-0.31,-1.03l18.7,-2.93l-1.02,0.9l-0.41,1.25l0.48,1.04l0.86,0.1l-0.31,0.61l0.36,0.26l1.56,-0.81l1.29,0.58l2.05,2.1l1.03,0.63l1.28,-0.7l0.67,-0.01l0.32,-1.43l1.31,-0.02l1.89,1.09l0.32,1.13l1.42,1.26l1.88,0.0l0.84,0.3l0.08,0.89l0.53,0.6l2.13,0.23l1.15,0.62l2.33,0.33l0.66,0.66l4.88,2.21l0.68,1.21l0.2,1.17l1.25,0.47l0.59,-0.42l0.56,0.16l0.61,1.47l1.12,1.15l-0.33,2.25l2.45,2.21l0.31,1.85l1.23,1.86l-2.11,2.29l-1.44,0.39l-1.06,1.03l1.27,3.42l-1.16,2.57l-0.53,0.46l-0.03,1.61l0.71,0.92l0.15,0.78l-0.03,2.25l-0.54,2.88l1.16,2.49l0.58,0.33l1.12,0.01l-1.01,1.15l-4.53,1.8l-0.94,2.18l0.61,1.37l-0.34,3.58l-1.32,2.73l-2.19,1.84l0.25,0.57l1.27,0.75l-0.34,0.47l0.11,0.55l1.17,0.66l1.59,2.48l-17.08,5.92l-10.13,2.9l-5.19,2.06l-0.33,0.44l0.01,0.94l0.35,1.48l1.14,1.98l0.46,2.96l-7.37,0.02l-2.93,0.64l-2.44,1.0l-4.42,2.56l-0.62,0.85l-0.49,4.58l-0.64,0.98l-1.53,-0.37l-2.6,1.01l-1.11,-0.43l-0.51,0.83l-1.06,0.52l-0.31,0.78l-1.33,1.19l-1.56,-0.61l-1.27,0.61l-0.34,0.5l0.37,0.69l-1.24,0.36l-0.34,1.46l-0.84,0.2l-2.09,2.74l-1.07,2.03l0.28,0.56l-2.25,2.1l-1.87,3.23l-2.45,0.87l-2.23,-0.22l-2.92,-1.13l-2.27,-0.21l-1.78,0.69l-1.34,-0.19l-1.34,-1.07l-1.31,-0.48l-2.27,0.23l-2.12,-0.58l-3.08,-2.74l-3.24,-0.64l-5.5,-0.44l-10.3,1.89l-4.83,-4.16l-5.83,-5.69l-3.54,-2.57l-1.25,-3.88l-0.7,-3.64l-0.01,-34.94l21.47,0.0l1.47,-0.15l0.34,-0.33l0.02,-0.63l-0.95,-1.78l0.29,-1.74l0.97,-2.63l-0.38,-3.68l0.15,-5.67l0.87,-2.84l-0.85,-5.77ZM685.33,624.73l0.57,-0.41l0.12,0.17l-0.69,0.24Z\",\n            name: \"Zambia\"\n          },\n          CI: {\n            path: \"M196.93,382.8l2.89,-3.19l0.43,-2.32l0.05,-1.25l-1.95,-5.59l2.65,0.26l1.4,-2.46l-0.07,-1.4l1.32,-2.37l-0.2,-1.26l-2.64,-1.14l0.19,-2.03l1.8,-0.25l2.48,0.33l1.19,1.09l0.5,-0.0l0.54,-0.65l-0.08,-1.98l-0.43,-1.18l-0.92,-1.03l-1.72,-0.69l0.14,-1.82l1.69,-1.03l0.15,-0.57l-1.54,-1.29l0.22,-2.44l-0.47,-0.41l-1.42,0.2l-0.94,-0.89l-0.2,-5.46l1.75,-1.9l1.13,-0.28l0.94,-0.66l1.71,-2.17l1.57,-0.14l1.2,1.15l0.49,0.96l2.9,0.63l0.7,0.63l0.7,0.09l0.8,-0.68l-0.24,-1.02l0.28,-0.64l3.14,-0.28l0.32,-0.77l-0.12,-2.48l0.84,0.63l1.75,0.34l0.59,-0.68l-0.25,-0.8l1.38,-0.4l0.08,1.59l0.56,1.82l-0.55,1.65l1.67,1.02l1.39,-0.0l2.13,-2.23l3.13,-0.56l1.92,1.43l1.56,-0.01l1.64,0.79l1.18,2.2l0.43,1.55l4.1,2.6l1.18,-0.07l1.4,0.85l1.01,0.06l1.05,-1.24l5.38,-1.98l6.5,0.29l1.39,1.61l1.16,0.7l2.0,3.06l0.9,0.17l0.48,-0.23l-0.11,1.32l0.27,0.37l-0.75,1.69l-0.05,0.95l1.17,1.19l0.56,1.83l1.07,6.74l-1.2,0.72l0.04,1.01l-2.14,1.56l-1.25,2.9l-0.74,2.72l-0.32,2.93l-2.9,4.63l-0.14,2.06l0.52,3.62l2.38,7.52l0.74,1.08l1.69,0.35l0.4,1.76l-0.53,2.87l-1.4,0.37l-2.08,-0.82l0.17,-1.41l-0.35,-0.44l-0.57,-0.07l-0.86,0.46l-1.04,2.14l-5.87,-1.01l-1.43,-0.87l-1.66,-0.2l-5.1,0.35l-0.86,0.6l-0.13,0.46l0.24,0.16l-3.28,0.45l-0.63,-0.08l-0.81,-0.68l-3.17,-0.06l-0.81,0.35l-0.38,0.48l0.21,0.38l-2.29,0.19l-4.15,0.94l-10.94,4.0l-2.52,1.5l-2.05,0.7l-2.23,1.26l-1.09,0.23l-0.31,-5.08l0.26,-2.79l0.84,-0.77l0.14,-1.18l0.66,-1.17l0.01,-1.71l0.32,-0.84l-0.63,-3.6l-0.32,-0.39l-0.7,0.03l-1.32,-0.71l-1.13,-0.16l-0.56,-0.47l-1.27,-3.21l-1.23,-0.65l-2.59,-0.06l-0.89,-0.3l-1.79,-1.61l-1.47,-0.29Z\",\n            name: \"C\\xf4te d'Ivoire\"\n          },\n          EH: {\n            path: \"M98.08,205.07l0.08,-0.53l4.61,-0.68l7.72,-0.24l5.41,0.61l5.74,0.12l1.56,-0.12l1.34,-0.77l1.0,-1.33l0.7,-1.83l-0.17,-1.39l3.6,-3.91l1.16,-1.68l0.59,-5.54l0.82,-4.2l0.93,-3.8l1.48,-3.37l1.25,-1.1l5.4,-2.37l3.07,-5.33l0.75,-0.79l4.19,-2.59l2.47,-2.01l1.44,-3.57l1.65,-6.62l1.03,-2.84l-0.07,29.53l-3.82,1.71l-3.02,0.64l-4.82,3.35l-1.56,2.38l-0.19,1.07l0.84,3.16l0.89,13.84l-46.06,0.2ZM157.4,147.05l2.57,-0.61l1.1,-2.54l1.47,-2.19l2.08,-2.13l0.27,-1.55l-0.77,-1.45l5.06,-1.49l1.86,-0.12l2.33,0.36l3.62,1.65l2.5,-0.62l1.43,0.71l1.21,0.04l1.17,-0.23l3.65,-2.79l4.69,-0.01l2.5,-0.39l0.81,-0.78l-0.51,-2.08l0.27,-1.89l-0.47,-2.03l0.74,0.0l0.01,20.13l-37.6,0.0Z\",\n            name: \"W. Sahara\"\n          },\n          CM: {\n            path: \"M398.03,403.42l2.82,-5.07l1.56,-6.82l0.7,-1.54l4.33,-4.63l3.33,-2.48l1.48,-2.73l3.85,-2.5l0.77,1.06l3.39,0.0l0.65,-0.58l0.66,-1.41l1.37,0.78l3.12,2.89l1.1,3.23l0.74,0.41l1.2,-0.12l1.18,-0.46l1.88,-1.4l0.92,-1.25l0.3,-2.19l3.23,-2.63l0.05,-0.68l-0.95,-1.47l2.76,-3.48l0.19,-1.76l1.53,-2.56l0.92,-4.0l1.86,-3.45l2.06,-0.36l0.87,-0.57l1.58,-1.83l1.16,-5.86l0.56,-1.3l0.91,-0.64l1.78,-0.59l0.53,-0.56l0.81,-5.49l1.72,-1.7l1.41,-5.1l1.89,-3.12l2.21,-3.11l0.96,-0.78l2.6,-0.68l4.35,-2.85l0.28,-1.28l-0.22,-1.64l0.65,-3.05l0.02,-2.08l-1.41,-2.05l-1.21,-0.55l-2.37,-0.41l-1.43,-7.58l1.58,0.01l2.42,0.63l0.45,0.36l0.4,1.94l1.03,1.17l1.52,0.83l0.92,1.66l0.43,2.83l2.31,4.93l-0.04,2.29l0.48,1.26l-0.74,1.97l-0.31,3.08l0.46,3.19l0.77,2.5l1.76,3.56l3.9,3.8l-3.05,0.31l-2.23,-0.34l-3.5,0.49l-6.96,-0.45l-1.52,1.09l-1.89,2.46l0.35,1.76l3.85,4.57l4.71,4.0l1.55,0.84l2.88,2.74l1.56,2.71l2.23,5.53l1.32,1.21l-0.26,1.38l-1.73,2.8l-1.5,1.07l-0.56,0.78l-2.02,4.94l-2.03,2.73l-1.17,2.86l-0.59,0.61l-2.27,1.1l-0.87,0.92l-0.17,1.0l0.88,1.5l0.99,0.19l0.27,0.34l0.0,4.08l-0.63,2.62l0.93,1.38l0.8,6.0l0.8,1.4l2.94,2.34l0.41,0.75l0.84,2.49l-0.87,0.14l-0.29,0.54l0.34,0.86l0.83,1.49l7.59,8.23l1.64,0.47l1.66,2.0l-0.07,1.5l0.47,1.61l0.09,1.92l0.88,2.36l-0.05,0.45l-1.1,1.19l-0.17,1.15l0.77,3.32l-0.42,0.3l-3.71,-2.71l-1.74,-0.43l-2.99,0.05l-2.09,-1.04l-0.92,0.38l-1.87,-0.13l-0.45,-0.73l-1.33,-0.01l-2.52,-1.41l-1.03,0.48l-13.6,-0.08l-0.34,-0.67l-0.79,-0.44l-4.15,0.11l-5.9,-0.58l-9.45,-0.07l-2.47,0.03l-0.39,0.45l-0.17,1.1l-15.4,-0.0l-1.15,-0.48l-0.6,-1.01l0.96,-6.81l0.72,-1.86l-0.37,-2.11l-2.68,-3.39l0.9,-1.2l-0.4,-0.23l-1.12,0.11l-0.72,-1.57l0.47,-0.59l1.05,0.16l0.46,-0.45l-0.17,-0.57l-0.95,-0.85l0.42,-1.2l-0.75,-0.29l-1.01,0.5l-0.86,-0.44l-0.46,0.49l0.16,0.59l-0.55,0.59l-0.95,-0.14l-0.84,-0.7l-2.75,-1.02l-0.24,-1.42l-0.75,-1.51l-0.12,-2.56l-1.84,-0.35l-1.21,-1.05l-0.58,0.45l0.29,1.2l-0.69,0.03l-0.29,-0.55l0.31,-1.81Z\",\n            name: \"Cameroon\"\n          },\n          EG: {\n            path: \"M655.53,78.07l-0.21,0.35l0.36,0.35l1.61,0.17l3.64,-0.77l0.94,-1.8l1.14,0.18l3.97,1.69l1.1,0.01l3.14,-1.05l-1.65,2.54l0.15,0.61l2.72,0.93l0.97,1.48l0.46,0.19l1.43,-0.47l0.88,-1.06l-0.14,-0.7l2.53,2.05l1.11,0.5l5.96,-1.22l1.05,1.0l2.1,-0.59l3.42,-0.0l2.85,-0.68l3.12,-1.55l3.69,10.84l1.5,3.26l2.79,8.89l-1.89,2.68l-1.39,6.51l-1.99,5.07l-0.55,4.32l-1.88,2.86l-1.71,-0.68l-3.26,-2.7l-1.92,-2.6l-2.13,-1.76l-1.9,-2.18l-1.38,-5.22l-0.69,-1.29l-2.37,-2.68l-1.71,-2.94l-0.86,-3.49l-0.98,-2.31l-0.57,-0.19l-1.09,0.62l-0.04,1.2l-0.9,1.26l-0.58,1.8l0.54,1.4l1.92,1.84l0.35,0.72l0.43,1.69l-0.04,2.52l0.38,0.93l1.44,1.76l1.33,2.8l3.63,4.62l2.0,2.0l1.43,0.97l0.51,0.81l0.08,3.75l1.71,3.32l1.28,1.04l0.5,0.94l1.26,6.66l1.12,1.4l3.28,6.61l2.75,4.15l7.37,15.17l3.35,4.03l2.71,1.97l-1.8,0.35l-0.67,2.14l0.22,4.24l0.51,2.18l1.57,4.02l2.67,2.73l3.69,1.38l2.18,2.88l4.79,3.59l0.28,0.58l-62.68,0.01l0.41,-1.64l-0.55,-0.76l-0.75,-0.13l-0.92,0.38l-1.05,2.11l-0.37,0.06l-72.63,-0.01l0.0,-89.62l-3.24,-13.0l2.01,-3.21l1.01,-2.95l0.14,-1.41l-1.12,-3.66l-0.28,-3.32l2.97,-3.67l0.94,1.36l1.84,0.27l6.06,-1.39l15.73,3.12l3.47,2.15l1.06,0.29l2.32,-0.04l1.71,1.26l6.36,0.6l6.65,2.85l2.52,-0.49l1.84,-0.82l5.87,-3.87l1.26,-0.44l2.0,0.08l2.21,-2.6l1.58,-0.15Z\",\n            name: \"Egypt\"\n          },\n          SL: {\n            path: \"M165.73,342.66l1.63,1.75l4.17,5.64l-0.74,2.31l0.41,0.45l1.16,0.27l0.13,2.11l1.18,2.05l-1.46,1.62l-0.99,2.31l0.19,0.48l2.24,0.2l1.92,-1.94l0.63,-0.04l-0.81,2.95l-1.78,0.68l-0.74,0.82l-0.86,3.51l-2.61,2.56l-2.42,1.64l-2.15,1.96l-2.54,3.61l-2.43,-1.92l-2.36,-1.16l-6.28,-2.31l0.53,-1.8l-0.81,-1.26l0.29,-0.85l-0.38,-0.53l-1.19,0.6l-1.19,-0.14l-1.72,-1.16l-1.23,-3.82l-0.97,-0.75l-1.27,-0.14l-1.3,-2.27l2.07,0.42l1.94,-1.79l0.37,-1.04l-0.12,-0.31l-0.63,-0.17l-0.45,0.38l-1.42,-0.11l-0.88,0.52l-0.4,-1.02l0.17,-1.3l1.31,-0.13l0.46,-0.52l-0.29,-0.56l-1.01,-0.18l-1.29,-1.17l1.56,0.14l0.69,-0.3l1.03,-1.02l0.45,-1.28l1.3,-0.4l1.04,-0.94l2.42,-4.06l0.62,-1.73l0.66,-0.33l1.59,-0.34l1.71,0.62l2.58,-0.56l0.39,-0.82l7.08,-0.04l0.57,0.16l0.21,0.45ZM150.0,371.51l-0.53,-0.45l-3.08,-0.87l2.81,-0.26l0.92,0.47l-0.12,1.11Z\",\n            name: \"Sierra Leone\"\n          },\n          CG: {\n            path: \"M433.42,487.21l1.46,0.55l2.4,-0.56l1.54,0.77l4.48,-0.97l0.31,-0.36l0.38,-2.57l-0.54,-1.98l1.55,-0.98l1.97,1.09l2.51,4.59l4.34,1.09l1.37,-0.11l2.01,-1.45l1.27,-1.44l1.17,1.9l-0.19,0.83l0.33,0.82l1.68,0.45l1.3,-0.4l1.29,-1.29l0.14,-0.92l-0.44,-0.81l0.43,-0.47l0.59,-2.07l1.57,-1.38l0.46,-2.09l-0.23,-1.35l0.52,-0.89l0.1,-1.31l-0.52,-5.19l0.74,-4.75l-1.44,-1.48l-1.88,-0.53l-1.61,-1.82l-2.25,-0.59l0.27,-4.43l0.69,-1.73l1.47,-2.0l1.73,-0.23l1.13,-0.89l1.42,-2.45l-0.06,-1.17l-1.53,-2.72l-0.71,-2.27l-0.98,-0.83l-4.06,-0.56l-6.96,2.03l0.37,-1.14l-0.98,-3.22l0.1,-1.55l1.4,-4.04l13.58,0.08l1.08,-0.46l2.22,1.39l1.15,-0.05l0.48,0.79l2.32,0.12l0.75,-0.36l2.1,1.03l2.95,-0.06l1.54,0.39l4.07,2.79l1.13,-0.93l-0.78,-3.49l0.11,-0.86l1.14,-1.24l0.07,-0.69l3.31,-6.52l0.14,-4.02l1.05,-3.37l0.36,-0.37l7.04,-1.03l2.53,-1.01l4.94,1.51l2.66,0.03l0.86,0.63l1.92,-0.97l1.69,-0.38l0.59,1.03l0.63,0.42l0.12,1.75l-1.5,4.35l-3.29,6.01l-1.64,4.71l-0.18,5.65l-1.83,4.96l-0.19,3.14l0.46,3.7l-0.43,3.46l-1.32,3.31l-0.59,2.7l0.31,3.13l-2.32,2.5l-3.03,2.57l-3.56,1.65l-1.18,1.06l-4.04,7.27l-3.8,3.94l-0.37,1.47l0.3,8.77l-0.81,4.99l-3.1,5.33l-3.04,1.07l-1.0,0.74l-0.6,1.05l-2.47,1.56l-5.69,6.29l-0.7,0.35l-2.98,-0.39l-0.49,-2.66l0.94,-1.72l-1.13,-1.89l-0.38,-0.18l-3.82,1.45l-1.14,0.73l-1.66,-0.57l-1.04,0.27l-0.55,2.93l-2.86,1.5l-1.96,-1.42l-0.96,-1.18l-1.17,0.06l-1.93,-2.01l-1.33,-0.17l-1.86,1.19l-2.92,1.0l-0.99,1.73l-1.36,0.32l-1.79,2.28l-2.02,-2.53l-0.43,-0.88l-0.13,-1.42l-7.43,-7.49l1.06,-2.28l2.93,-1.84l1.95,1.87l1.98,0.18l0.8,-0.71l-0.06,-0.81l-0.48,-0.73l1.17,-2.53l-0.16,-0.38l-2.49,-1.6l-0.19,-0.36l0.72,-1.02l0.09,-0.67l-1.56,-1.76l-0.94,-0.23l0.66,-2.47l-0.31,-2.57Z\",\n            name: \"Congo\"\n          },\n          CF: {\n            path: \"M474.14,412.46l0.6,-0.07l0.43,-0.47l-0.9,-3.12l-0.56,-0.97l-2.96,-2.34l-0.6,-1.05l-0.8,-6.02l-0.9,-1.17l0.63,-2.48l0.0,-4.35l-0.53,-0.82l-0.99,-0.17l-0.64,-1.1l0.78,-1.08l2.75,-1.48l1.46,-3.29l2.04,-2.73l2.02,-4.95l2.0,-1.76l1.06,-1.74l4.03,0.55l1.47,-0.39l0.95,-0.79l4.0,-1.29l0.53,-1.2l1.01,-0.76l1.43,2.22l1.74,1.32l0.61,-0.19l0.77,-0.82l2.62,-0.8l1.56,-1.33l4.57,-1.94l3.36,-0.03l7.48,-0.76l0.5,-0.38l0.46,-1.18l1.28,-0.85l1.86,-1.9l2.4,-3.0l-0.52,-1.18l-2.03,-1.58l1.67,-1.11l1.03,-0.22l6.16,-0.06l3.37,-0.65l1.4,-0.67l3.29,0.0l5.12,-3.35l2.49,-2.75l0.34,-0.96l2.79,-2.9l0.85,0.05l0.78,-0.46l1.51,-2.4l1.15,-0.35l0.74,-0.71l0.62,-1.18l-0.05,-2.6l2.63,-1.43l0.97,-1.01l1.33,-0.08l0.94,-0.8l2.84,-1.14l4.0,0.86l1.16,1.87l4.08,4.31l2.7,4.2l1.15,2.37l-0.28,5.52l-0.27,0.81l-1.54,1.91l-0.03,0.99l0.99,1.2l-0.05,1.65l0.7,0.7l1.13,0.39l5.92,0.9l-0.29,2.04l0.44,1.26l0.97,0.92l2.11,0.71l3.26,0.56l1.24,0.58l1.8,2.02l2.21,1.8l0.45,0.8l-0.75,1.98l0.2,0.63l1.04,1.08l1.28,1.18l5.95,3.16l1.64,1.23l1.56,2.04l2.1,1.6l-0.55,1.87l0.19,0.91l1.15,1.54l1.11,2.41l1.06,0.74l1.62,0.27l4.76,3.13l0.89,1.67l0.33,3.21l0.86,1.25l-2.75,-0.64l-2.83,1.59l-15.36,-2.89l-1.64,0.82l-1.65,2.58l-1.96,0.61l-1.09,-0.16l-2.4,0.6l-3.76,-0.92l-1.52,0.18l-10.6,3.89l-1.07,-0.0l-2.37,-0.86l-3.03,0.16l-2.04,1.7l-2.44,4.54l-0.73,0.65l-8.48,-1.69l-1.78,0.41l-2.16,-0.76l-1.52,0.07l-1.03,-0.3l-2.05,-0.97l-4.52,-0.54l-1.89,-2.58l-1.96,-1.69l-2.69,-1.4l-2.21,-1.63l-1.69,-0.5l-2.31,-0.05l-2.19,0.72l-2.99,2.11l-2.86,4.41l-1.45,1.56l-1.4,0.66l-0.3,1.3l0.6,1.61l0.15,1.81l-0.43,3.19l0.1,1.59l-0.6,-0.98l-0.64,-0.29l-1.9,0.52l-1.53,0.88l-0.63,-0.56l-2.75,-0.06l-4.63,-1.55l-3.2,1.05l-6.39,0.73l-1.02,0.47l-0.57,0.66l-1.08,3.45l-0.14,4.01l-2.93,5.77l-0.5,-1.57l-0.59,-5.29l-1.63,-2.02l-1.84,-0.65l-3.64,-3.79l-3.83,-4.31l-0.87,-1.68Z\",\n            name: \"Central African Rep.\"\n          },\n          AO: {\n            path: \"M441.82,531.2l5.51,-1.02l3.33,-1.64l1.19,-0.09l1.33,0.29l8.0,-0.28l4.95,0.42l22.42,-0.32l1.26,0.37l1.14,0.71l1.79,2.25l0.1,3.42l0.4,1.79l2.1,3.81l0.49,1.37l-0.13,1.2l0.44,1.3l1.98,2.39l4.47,7.24l0.9,0.45l3.78,-0.36l1.27,0.46l2.2,-1.0l4.3,-1.02l4.37,0.77l2.35,0.0l2.39,-0.42l0.33,-0.35l0.36,-3.62l1.27,-2.22l0.05,-2.25l0.46,-1.41l1.39,-1.13l2.4,-0.57l7.93,-0.79l-0.65,2.71l0.29,0.87l0.73,0.59l13.96,0.54l0.34,0.88l-0.09,2.02l-0.63,3.19l0.24,2.91l1.12,2.76l0.11,4.05l-0.88,5.58l-0.2,3.59l0.58,1.73l2.74,3.2l1.23,2.03l0.88,2.52l0.36,5.0l-0.24,0.86l-0.77,0.46l-0.47,0.94l0.61,3.11l0.62,0.86l0.7,0.22l3.01,-1.69l6.04,0.37l4.49,-1.4l4.32,0.52l0.97,-0.4l0.33,-0.83l0.12,0.75l0.66,4.66l-0.87,2.86l-0.15,5.66l0.44,2.8l-1.33,5.29l0.97,1.94l-22.89,0.1l-0.4,0.4l0.01,35.38l0.73,3.82l1.44,4.23l3.58,2.59l3.09,3.14l7.11,6.3l-22.18,4.19l-1.47,-0.46l-2.05,-0.09l-4.31,0.77l-2.64,-0.77l-1.47,-0.82l-2.4,-0.29l-6.44,0.06l-3.08,-0.52l-4.9,-0.26l-2.61,-1.13l-2.74,-3.16l-1.29,-0.6l-46.71,-0.14l-4.64,0.25l-0.75,-0.2l-2.84,-1.86l-1.5,-1.07l-1.11,-1.29l-0.96,-0.42l-3.59,-0.49l-6.59,2.95l-3.74,-0.03l-1.09,-0.51l-1.36,0.01l-1.42,0.71l-1.3,0.19l0.84,-6.11l-0.26,-8.66l-0.49,-1.66l1.62,-1.29l0.85,-1.13l0.57,-1.45l0.68,-3.23l2.42,-7.3l1.16,-7.18l1.47,-3.45l0.53,-3.68l4.0,-4.81l1.03,-3.01l4.94,-2.94l2.29,-2.96l1.06,-2.0l1.17,-3.7l0.01,-3.95l0.74,-5.12l-0.16,-1.58l-1.12,-2.13l-0.27,-1.57l-2.1,-2.5l-0.54,-1.94l-1.88,-3.01l-0.51,-1.98l-0.91,-1.49l-0.63,-3.68l-1.83,-4.02l0.0,-0.28l0.54,0.15l3.67,-3.94l0.21,-4.04l-3.37,-6.95l-2.66,-6.41l-0.54,-3.41l-3.52,-4.26l-2.62,-5.27ZM440.92,526.36l-0.23,0.06l-0.46,-1.04l0.57,-1.98l-0.34,-1.69l-1.72,-3.63l1.89,-2.34l1.27,-0.25l0.93,-1.67l2.84,-0.99l0.98,-0.75l1.21,-0.42l2.01,1.99l-2.43,0.95l-2.71,2.81l-1.66,1.07l-0.15,0.59l0.81,0.81l-0.21,6.12l-2.58,0.35Z\",\n            name: \"Angola\"\n          },\n          CD: {\n            path: \"M441.08,527.14l2.62,-0.32l0.5,-0.41l0.31,-6.68l-0.67,-0.81l1.41,-0.9l2.69,-2.79l2.59,-0.98l0.6,-0.53l2.73,2.56l0.9,0.14l3.0,-1.47l0.38,-0.55l0.36,-2.58l2.25,0.5l4.69,-2.15l0.85,1.26l-0.93,1.82l0.66,3.06l0.65,0.43l3.26,0.2l0.95,-0.51l5.66,-6.27l1.52,-0.76l2.34,-2.46l3.17,-1.13l1.55,-2.11l1.91,-3.71l0.83,-5.09l-0.29,-8.85l0.24,-1.04l3.8,-3.95l3.94,-7.14l2.54,-1.79l2.1,-0.82l3.1,-2.63l2.5,-2.68l-0.23,-3.43l0.55,-2.55l1.36,-3.43l0.44,-3.56l-0.46,-3.81l0.19,-2.97l1.83,-4.94l0.17,-5.58l1.6,-4.62l3.26,-5.95l1.57,-4.52l-0.28,-4.52l0.43,-3.28l-0.16,-1.91l-0.59,-1.64l0.22,-0.72l1.21,-0.47l1.55,-1.65l2.78,-4.32l2.88,-2.03l1.96,-0.63l3.32,0.4l2.3,1.68l2.61,1.35l1.88,1.62l2.12,2.74l4.65,0.58l2.01,0.95l1.22,0.35l1.43,-0.1l2.16,0.77l1.91,-0.4l2.5,0.31l6.01,1.39l1.36,-0.97l2.45,-4.55l1.62,-1.41l2.72,-0.14l2.23,0.83l1.38,0.04l10.7,-3.9l1.25,-0.17l3.78,0.92l2.61,-0.6l1.12,0.16l2.34,-0.79l1.75,-2.67l1.24,-0.56l15.09,2.92l0.87,-0.23l1.71,-1.24l0.86,-0.12l3.17,0.98l0.98,1.57l2.08,1.49l1.47,2.37l2.25,1.33l1.15,1.25l1.59,0.98l2.81,0.3l3.57,-2.11l2.31,0.2l2.36,1.11l1.09,0.02l2.08,-1.32l1.01,-1.32l0.71,-0.21l1.26,0.5l1.11,1.15l1.11,1.86l3.78,4.03l3.69,1.75l0.49,1.88l0.43,0.58l2.05,0.06l0.84,1.41l0.67,0.41l-1.38,3.1l-0.32,1.5l1.12,1.86l-0.93,2.39l-0.49,2.71l1.4,1.0l1.6,0.02l1.31,1.27l1.03,0.18l0.8,1.0l-4.36,3.23l-4.04,3.9l-1.68,2.79l0.19,0.89l-0.92,0.36l-0.95,0.97l-0.71,1.55l-2.86,1.9l-0.14,3.81l-1.76,3.74l-0.71,0.84l-0.39,2.38l-2.23,0.93l-2.0,4.12l0.1,0.9l0.81,0.94l1.86,-0.41l0.81,-0.64l-0.85,4.62l0.2,4.56l-2.58,1.52l-1.19,1.5l-1.68,-0.6l-0.86,0.61l-0.61,2.37l-0.9,1.96l0.03,0.96l-0.5,1.34l0.48,1.07l-0.59,0.83l-0.15,1.1l0.89,2.99l1.03,0.51l0.14,0.94l2.33,2.84l-0.15,2.87l-0.81,1.14l0.06,2.46l-0.51,1.94l-0.21,3.61l0.14,1.38l-0.47,1.01l0.32,0.67l0.82,0.31l0.51,-0.15l0.23,-0.44l-0.2,1.74l-0.54,0.38l-0.37,0.91l-0.26,5.62l0.68,2.24l2.36,4.2l-0.32,0.51l-0.0,1.49l-1.69,1.55l0.07,1.66l1.42,1.9l1.32,3.51l0.63,0.46l-0.02,1.12l0.72,1.53l2.59,2.91l3.08,1.78l1.45,1.67l0.68,1.96l-0.04,1.33l0.92,3.24l3.01,2.58l0.46,1.23l-19.43,3.1l-0.27,0.52l0.39,1.15l-0.17,1.13l-0.52,0.92l-2.15,2.63l-3.41,2.77l0.05,0.8l1.63,2.75l0.72,1.93l0.29,1.73l-0.26,6.63l0.44,1.9l-0.07,1.24l-1.11,1.64l-2.18,8.02l0.3,1.25l1.24,3.06l4.33,3.69l2.73,2.83l4.21,0.97l0.89,-0.14l0.54,-0.79l-0.05,-1.58l1.86,-0.25l0.8,-0.42l-0.13,14.47l-0.78,-0.2l-0.33,-1.4l-1.09,-0.72l-4.33,1.77l-1.91,-0.31l-0.68,-0.59l-0.27,-1.11l-2.28,-3.49l-0.67,-0.76l-1.44,-0.37l-0.83,-2.38l-0.86,-1.41l-6.59,-2.81l-2.52,-0.23l-0.73,-0.42l-1.62,-3.2l-2.18,-1.96l-0.46,-2.0l-0.6,-0.54l-1.07,0.11l-0.86,0.5l-1.11,3.3l-1.21,0.61l-2.55,0.07l-6.62,-0.96l-4.76,-1.73l-1.22,0.08l-1.73,-1.38l-0.71,-2.37l0.41,-1.85l-0.74,-0.81l-7.38,1.68l-1.8,1.02l-1.28,-0.22l-0.2,-0.22l0.58,-1.46l-0.43,-1.64l-0.73,-0.83l-1.97,-0.54l-0.92,-1.61l-1.3,-0.23l-0.71,0.27l-0.5,1.17l-0.51,0.23l-4.31,-0.52l-4.53,1.4l-6.0,-0.38l-3.1,1.67l-0.45,-0.63l-0.53,-2.57l1.16,-1.19l0.31,-1.1l-0.28,-2.86l0.24,-0.82l-0.33,-1.63l-0.95,-2.72l-1.27,-2.11l-2.71,-3.15l-0.47,-1.36l0.19,-3.45l0.89,-5.67l-0.11,-4.16l-1.12,-2.79l-0.23,-2.79l0.72,-5.25l-0.44,-1.25l-0.46,-0.37l-13.84,-0.49l-0.57,-0.79l0.72,-2.73l-0.47,-0.7l-8.49,0.79l-2.52,0.6l-1.84,1.53l-0.51,1.59l-0.05,2.25l-1.28,2.29l-0.33,3.35l-4.27,0.35l-4.49,-0.77l-4.42,1.04l-2.03,0.97l-1.18,-0.46l-3.83,0.36l-4.74,-7.36l-1.95,-2.34l-0.33,-1.03l0.13,-1.22l-0.54,-1.51l-2.07,-3.71l-0.38,-1.66l0.1,-2.59l-0.25,-1.07l-1.95,-2.48l-1.44,-0.9l-1.48,-0.42l-22.47,0.32l-7.45,-0.44l-5.46,0.3l-3.52,-0.52l-2.56,0.51l-1.35,0.99l-1.81,0.47l-0.95,-0.16l-1.94,-2.08Z\",\n            name: \"Dem. Rep. Congo\"\n          },\n          GA: {\n            path: \"M400.47,467.86l1.76,-0.1l0.68,-0.62l1.11,-0.24l2.58,-3.26l0.57,-3.7l-0.33,-3.99l0.42,1.18l0.79,0.61l1.38,0.19l2.48,1.16l0.62,-0.25l0.14,-0.73l2.0,-0.74l0.26,-0.36l-0.91,-0.67l-2.07,0.27l-2.54,-1.14l-2.4,-2.83l1.62,-0.75l1.0,1.07l0.8,-0.39l0.1,-2.43l-0.51,-2.64l1.44,-0.44l0.67,0.9l1.36,0.46l1.38,-0.51l15.3,0.05l0.4,-0.4l-0.08,-13.67l0.28,-1.19l11.42,0.05l5.92,0.58l4.03,-0.12l0.58,0.78l-0.05,0.66l-1.36,3.55l-0.13,1.73l0.98,3.32l-0.48,0.7l-0.08,0.59l0.31,0.36l1.09,0.21l6.7,-2.07l3.65,0.53l0.52,0.42l0.71,2.25l1.48,2.57l0.06,0.78l-1.25,2.13l-0.89,0.7l-1.58,0.16l-0.5,0.37l-0.52,1.07l-0.91,0.92l-0.8,2.11l-0.18,4.88l0.67,0.58l1.92,0.31l1.46,1.73l1.95,0.58l1.15,1.38l-0.81,4.08l0.52,5.26l-0.09,1.18l-0.53,0.93l0.22,1.4l-0.42,1.89l-1.5,1.25l-0.61,2.11l-0.51,0.67l0.43,1.42l-1.14,1.14l-0.88,0.22l-1.01,-0.24l-0.02,-1.48l-1.06,-1.88l-0.78,-0.48l-0.53,0.16l-1.27,1.54l-1.68,1.28l-1.09,0.1l-4.03,-1.0l-2.35,-4.46l-1.01,-0.78l-1.59,-0.54l-1.71,0.94l-0.58,0.65l0.14,1.47l0.4,0.75l-0.35,2.16l-4.06,0.88l-1.43,-0.77l-2.53,0.56l-1.69,-0.52l-0.5,0.52l0.3,2.78l-0.75,2.72l0.31,0.5l1.08,0.2l1.21,1.31l-0.83,1.39l0.34,0.89l2.49,1.66l-1.15,2.37l0.58,1.2l-0.15,0.27l-1.56,-0.11l-1.67,-1.76l-0.87,-0.13l-3.24,2.06l-1.11,2.25l-0.67,-0.61l-1.03,-1.96l-3.56,-3.08l-0.67,-1.42l-2.79,-3.11l-6.22,-5.17l2.01,0.83l0.83,-0.53l-0.07,-0.64l-2.39,-1.27l-2.18,-0.36l-0.43,-0.4l-1.06,-2.36l-1.88,-2.18l0.78,0.38l0.54,-0.19l0.02,-1.08l-1.87,-1.01l-0.79,-0.07l-0.01,-0.96l-0.87,-1.72l1.17,1.19l1.11,0.03l1.47,-0.44l0.24,-0.57l-0.26,-0.51l-0.71,-0.66l-1.75,0.09l0.66,-1.79l-0.47,-0.54l-1.49,0.64l-1.42,-0.86l-3.38,-6.36Z\",\n            name: \"Gabon\"\n          },\n          GN: {\n            path: \"M141.71,352.29l0.24,-1.06l-1.47,-1.71l-0.56,-1.34l-1.55,-1.46l-1.15,-0.05l0.22,-2.42l-0.48,-0.96l0.11,-0.77l-0.48,-0.45l-0.82,0.62l-0.47,-0.12l-1.47,-0.9l-0.67,-0.8l-0.31,-1.14l-1.73,-0.05l-2.82,-1.33l-2.03,-3.39l0.19,-2.52l-0.67,-0.22l-0.51,0.48l-1.17,-2.5l-1.69,-0.42l-0.61,0.48l-0.49,1.4l-0.2,-0.14l0.07,-0.91l1.13,-1.55l1.92,-3.92l0.92,-1.04l2.68,-0.58l2.16,-1.21l3.61,-0.06l2.68,-0.87l0.27,-0.36l-0.07,-3.33l-2.46,-2.14l0.84,-0.42l1.18,-0.05l0.78,-0.82l0.42,-2.05l-0.67,-1.95l7.04,0.45l-0.17,0.92l0.49,0.79l0.87,0.11l0.82,-0.57l1.42,0.91l3.08,0.91l0.88,-0.02l0.75,0.45l1.44,0.12l2.83,-0.81l2.77,0.12l2.7,-0.46l1.39,0.12l-0.92,2.0l0.08,0.69l2.33,2.0l0.68,0.21l0.85,-0.26l1.8,-1.8l1.12,-0.32l2.17,3.28l0.63,0.37l1.27,-0.57l1.83,-2.36l1.99,-0.78l5.18,1.97l1.51,0.01l0.83,-1.29l3.56,-1.41l0.37,-1.11l-0.67,-1.38l1.56,-0.04l1.84,0.87l0.44,0.57l2.07,4.93l0.15,3.21l1.17,0.55l0.65,1.31l2.95,1.51l-1.34,1.23l-1.7,2.4l0.03,0.83l1.07,0.37l1.51,-0.69l1.26,0.55l0.25,0.81l-0.2,1.83l0.74,3.29l0.55,0.69l2.51,1.32l0.17,0.36l-0.05,1.08l-1.58,1.5l-0.35,0.75l0.19,5.81l0.64,0.99l0.8,0.5l1.36,-0.08l-0.23,2.15l1.47,1.18l-1.59,1.07l-0.26,2.57l2.11,1.1l0.65,0.78l0.4,2.48l-1.27,-1.01l-2.66,-0.33l-2.16,0.26l-0.43,0.55l-0.09,2.74l1.44,0.91l1.14,0.2l0.16,0.6l-1.33,2.39l0.09,1.33l-1.0,1.89l-2.23,-0.32l-0.72,0.4l-0.94,-1.27l-1.3,-0.1l-0.73,0.54l-0.38,1.88l-1.6,2.52l-0.9,-0.0l-1.32,0.53l-1.81,-1.85l-1.08,-0.37l-0.95,0.1l0.87,-1.56l0.17,-1.75l-0.89,-2.34l-0.07,-1.39l-0.7,-1.96l-0.08,-1.77l-1.91,-1.88l-0.85,-0.04l-0.63,-0.76l-3.15,1.15l-0.29,-0.57l-0.83,-0.36l-1.2,0.36l-1.56,-0.05l-2.28,2.08l-1.1,-0.15l0.74,-1.76l1.41,-1.48l0.14,-0.56l-1.23,-2.26l-0.12,-2.22l-0.32,-0.34l-1.24,-0.26l0.71,-1.67l-0.05,-0.82l-6.32,-8.12l-0.91,-0.24l-7.48,0.04l-0.49,0.9l-2.19,0.48l-1.71,-0.62l-1.86,0.41l-1.07,0.67l-0.62,1.76l-2.29,3.88l-0.78,0.75l-1.41,0.43l-0.71,1.58l-0.76,0.74l-1.95,0.03Z\",\n            name: \"Guinea\"\n          },\n          GM: {\n            path: \"M100.95,304.31l-0.62,-2.32l1.36,-1.21l1.03,1.81l2.06,0.55l2.56,-0.15l0.45,-0.42l0.18,-0.82l6.11,-0.87l1.77,0.01l0.51,-0.12l0.24,-0.62l-0.4,-0.34l-1.65,-0.2l-6.6,0.61l-2.59,1.24l-0.77,-0.09l-0.89,-1.06l-0.24,-0.98l11.84,0.03l1.25,-1.76l1.67,-0.67l1.8,-0.26l1.84,0.29l1.93,1.34l2.32,0.66l2.07,1.38l1.09,0.18l2.1,-0.56l1.82,-0.08l1.23,0.65l0.21,0.58l-0.15,0.52l-4.38,1.11l-2.13,-0.37l-6.84,-2.9l-1.81,-0.49l-0.66,0.46l-0.9,1.43l-6.12,0.84l-0.31,0.35l-0.19,1.66l-9.2,0.03l-1.0,0.59Z\",\n            name: \"Gambia\"\n          },\n          XS: {\n            path: \"M870.84,327.12l-0.01,20.86l-11.07,16.91l-11.42,0.0l-34.59,-11.65l-4.62,-4.08l-1.65,-0.54l-0.96,-1.1l-1.04,-1.49l-1.39,-3.12l-1.43,-0.74l-2.61,-3.2l-0.65,-1.9l-1.44,-2.61l6.6,-10.04l1.89,1.5l2.19,3.63l2.7,3.09l5.03,3.72l1.48,0.56l6.71,-0.13l4.61,-2.52l5.45,-2.16l7.45,1.19l1.36,-0.13l4.91,-2.16l3.04,-2.08l1.94,-0.83l3.56,0.74l3.6,-0.32l6.5,-2.15l1.09,-0.02l2.75,0.8Z\",\n            name: \"Somaliland\"\n          },\n          CV: {\n            path: \"M28.84,267.68l1.39,0.08l0.47,0.44l-0.15,1.03l-1.06,0.56l-1.06,-0.44l0.41,-1.67ZM28.19,260.4l0.01,0.82l0.07,0.36l-0.26,-1.07l0.19,-0.11ZM25.22,280.01l-0.28,-0.24l0.06,-0.77l0.23,-0.43l0.34,0.03l0.14,1.18l-0.48,0.22ZM19.01,279.11l1.9,1.57l0.86,1.27l-0.44,0.68l-1.23,-0.07l-0.64,-0.36l-0.81,-1.2l0.35,-1.89ZM11.49,262.35l0.91,0.29l-0.49,0.6l-0.43,-0.74l0.02,-0.15ZM11.76,283.5l-1.0,0.16l-0.47,-0.36l-0.06,-0.74l0.96,-0.54l0.38,0.12l0.2,1.37ZM3.48,259.84l1.06,-0.47l0.31,0.54l-0.53,0.16l-0.84,-0.23ZM0.42,257.15l2.3,-1.09l0.63,0.14l0.4,0.61l-1.9,1.44l-0.97,0.21l-0.46,-1.31Z\",\n            name: \"Cape Verde\"\n          },\n          GH: {\n            path: \"M262.02,399.49l0.83,0.05l1.7,-0.53l0.77,-3.59l-0.62,-2.21l-1.9,-0.53l-0.37,-0.63l-2.62,-8.49l-0.12,-4.16l2.86,-4.55l0.36,-3.07l0.72,-2.66l1.23,-2.82l1.87,-1.22l0.36,-0.65l-0.17,-0.62l0.83,-0.31l0.47,-0.77l-1.1,-6.96l-0.63,-2.01l-0.48,-0.81l-0.61,-0.32l0.84,-2.44l-0.33,-0.54l0.19,-1.39l-0.24,-1.21l-0.85,-2.35l0.34,-0.69l-0.45,-4.6l0.24,-0.72l-0.63,-1.09l0.35,-1.17l-1.07,-1.04l-0.37,-0.87l0.08,-1.47l0.78,-2.87l20.69,-0.14l3.81,0.23l0.51,0.61l0.57,0.13l1.74,-0.99l0.75,-0.93l1.08,-0.1l0.55,-0.75l2.23,0.5l0.7,0.8l-1.13,3.45l0.09,0.86l3.6,3.42l1.74,1.15l-0.58,6.67l-0.65,0.37l0.23,0.93l-0.64,1.71l0.76,0.7l1.38,-0.72l0.53,0.04l0.76,1.06l-0.73,2.89l-0.07,1.67l0.35,1.29l-1.2,0.93l-0.1,0.83l1.32,1.93l1.55,1.14l0.73,1.31l-1.2,2.26l0.24,4.93l-1.23,2.23l0.19,1.57l1.36,0.89l-0.47,3.5l-0.79,1.08l0.04,1.34l2.13,3.32l0.47,1.52l2.08,1.48l0.77,0.13l0.8,1.32l1.46,0.78l-1.48,1.1l-1.15,2.09l-2.15,0.54l-5.86,0.07l-4.5,2.21l-2.58,0.78l-1.69,1.29l-2.11,0.87l-1.51,1.07l-3.1,0.52l-5.16,1.71l-5.81,3.21l-0.82,-0.02l-3.64,-1.93l-7.18,-1.54Z\",\n            name: \"Ghana\"\n          },\n          SZ: {\n            path: \"M658.82,780.66l0.07,-4.13l2.66,-3.92l0.66,-1.48l1.33,-1.64l1.4,-1.03l0.63,-0.09l5.29,2.91l1.03,-0.19l0.99,0.55l-0.24,3.09l0.76,3.04l0.07,3.34l-0.71,-0.14l-0.66,0.4l-0.57,4.53l0.11,1.32l-5.23,-0.14l-2.19,-0.69l-2.35,-1.51l-2.04,-3.9l-1.02,-0.31Z\",\n            name: \"Swaziland\"\n          },\n          MG: {\n            path: \"M853.67,633.45l0.24,0.85l-0.77,2.09l0.28,0.45l0.83,0.15l0.76,-0.4l1.68,-2.95l1.01,-1.09l2.0,0.4l0.46,-0.19l-0.09,-0.49l-1.69,-1.44l-0.39,-1.81l2.54,-4.79l-0.06,-0.45l-1.05,-1.16l-0.03,-1.17l0.86,-1.19l0.4,-0.13l1.7,1.27l1.16,0.04l1.77,-2.17l2.52,-1.33l2.05,-1.89l1.44,-4.12l0.13,-1.24l-0.32,-1.57l-1.15,-2.76l0.76,0.15l0.76,-0.37l3.13,-4.13l0.3,0.0l1.01,1.69l2.02,2.3l1.19,2.47l3.46,5.1l0.34,2.28l1.26,3.72l1.17,5.47l0.72,8.28l0.97,2.6l1.46,2.49l0.46,2.67l-0.88,2.8l-2.08,3.7l-0.91,-0.61l-0.8,-1.07l-1.68,-4.3l-0.67,-0.26l-1.29,0.12l-1.28,1.14l-0.18,0.72l0.73,6.08l1.39,2.24l0.09,2.65l-0.29,1.27l-0.94,1.41l0.32,1.27l-1.9,1.26l-1.76,3.88l-0.14,1.39l0.66,3.86l-0.18,2.69l-1.34,5.26l-5.21,14.49l-5.28,16.74l-1.38,5.51l-2.04,6.04l-3.14,7.68l-1.23,6.53l-2.34,7.91l-0.54,2.98l-2.17,4.27l-1.17,4.31l-1.1,2.72l-1.61,2.3l-3.44,2.03l-3.98,0.28l-2.67,0.72l-6.59,3.76l-1.02,0.39l-3.41,0.09l-0.93,-0.3l-3.61,-2.63l-5.34,-1.29l-1.12,-1.39l-2.45,-1.42l-1.45,-4.36l-2.77,-4.12l-0.28,-6.85l0.2,-1.27l0.68,-1.46l-1.81,-5.63l-2.04,-2.46l-0.44,-1.1l-1.07,-4.95l0.29,-5.37l0.61,-1.75l1.12,-1.81l0.72,-3.43l0.79,-0.65l1.47,-0.5l1.23,-1.05l0.68,-1.34l0.63,-2.51l3.85,-5.95l1.29,-2.91l0.68,-2.79l0.52,-6.07l-2.48,-4.42l-0.06,-3.97l-1.49,-3.0l-0.78,-2.52l-0.31,-5.85l-0.8,-2.68l0.38,-2.1l5.14,-8.25l0.12,-5.12l0.35,-0.57l5.08,-0.53l3.57,-2.63l1.47,0.99l1.63,-0.59l1.18,0.08l0.41,-0.2l0.98,-1.95l3.49,-0.38l1.74,-0.51l1.69,1.96l1.37,0.19l0.49,-0.35l0.03,-0.63l-1.21,-1.29l0.62,-1.73l5.66,-4.31l0.79,0.06l0.36,2.17l0.34,0.46l1.09,-0.27l0.6,-1.2l-0.47,-2.39l2.11,-2.4l0.83,-2.09l0.73,-0.54ZM863.67,615.59l0.19,1.33l-0.78,-0.09l-0.12,-0.76l0.72,-0.48Z\",\n            name: \"Madagascar\"\n          },\n          MA: {\n            path: \"M111.55,174.08l0.87,-0.82l2.29,-1.53l4.61,-5.0l1.83,-0.96l1.58,-2.13l0.64,-2.12l0.15,-4.31l0.54,-2.21l3.21,-6.6l0.6,-2.92l0.57,-0.97l1.17,-0.55l1.63,-1.44l2.55,-0.94l4.55,-3.25l0.97,-1.81l1.0,-3.42l1.79,-3.61l0.93,-2.75l1.51,-1.38l1.09,-1.81l1.65,-0.74l3.81,-0.4l5.66,-1.52l5.19,-2.35l1.53,-0.99l4.03,-4.16l6.97,-4.48l3.42,-4.1l5.39,-7.44l0.96,-2.1l0.51,-3.13l-0.35,-1.39l-1.47,-2.13l-0.93,-0.57l-0.18,-0.67l0.49,-1.68l0.27,-7.37l1.52,-3.6l3.87,-4.95l0.73,-2.09l0.48,-4.21l4.69,-4.44l3.76,-4.32l2.43,-1.56l8.66,-3.5l4.9,-2.5l2.99,-1.94l1.74,-2.22l4.72,-8.51l4.99,-13.29l3.36,-0.55l2.57,-1.29l0.51,0.13l-0.27,0.42l0.05,1.69l1.04,1.81l1.78,2.01l3.24,2.54l2.53,1.02l3.5,0.6l4.2,-1.08l2.23,-0.02l1.08,-0.42l1.19,0.64l2.3,0.22l2.32,-0.37l2.46,-1.79l1.42,3.08l2.75,0.4l4.57,0.08l1.03,1.67l3.86,2.86l-0.6,1.9l1.29,1.6l-0.64,1.51l0.97,2.48l-0.08,5.17l0.95,2.82l-0.52,3.35l1.5,3.22l0.46,2.49l0.75,1.34l4.0,3.09l0.35,0.73l-1.93,1.71l-0.25,1.1l0.41,1.75l-13.96,-0.43l-4.91,0.72l-1.1,0.68l-0.9,2.5l-4.79,1.63l-3.95,0.23l-0.87,0.56l-0.27,0.68l0.67,3.3l-0.5,2.12l0.31,0.69l2.13,1.25l-0.34,0.84l-3.71,0.64l-3.92,2.74l-5.29,1.87l-2.27,1.14l-2.62,3.95l-3.02,2.58l-6.39,1.58l-5.73,0.19l-0.43,0.39l-0.23,1.86l-0.99,0.91l-6.07,-0.61l-4.01,2.89l-2.44,0.61l-6.8,4.71l-4.58,3.31l-0.43,0.7l-0.06,12.74l-1.18,-0.0l-0.4,0.43l0.5,2.41l-0.32,1.33l0.57,2.17l-0.25,0.45l-2.28,0.36l-4.87,0.03l-3.88,2.88l-0.82,0.12l-0.84,0.0l-1.68,-0.76l-2.46,0.63l-3.43,-1.6l-2.64,-0.4l-2.01,0.14l-5.47,1.59l-0.29,0.51l0.87,1.77l-0.18,1.02l-2.02,2.05l-2.06,3.28l-0.38,1.28l-3.45,0.81l-0.57,0.65l-2.99,11.13l-1.34,3.36l-2.26,1.8l-4.28,2.67l-0.88,0.94l-2.85,5.11l-5.33,2.33l-1.55,1.39l-1.55,3.53l-0.95,3.88l-0.83,4.25l-0.57,5.45l-4.71,5.41l0.11,1.58l-0.65,1.71l-0.85,1.11l-0.91,0.53l-1.42,0.11l-5.7,-0.12l-6.83,-0.61l-8.12,0.37l-2.68,0.51l0.76,-5.27l1.56,-3.09l1.18,-1.3l2.11,-0.87l1.83,-3.22l0.66,-2.98l1.13,-1.29l0.45,-1.2l-0.38,-0.93l4.64,-7.95l0.06,-1.38l-0.73,-0.14Z\",\n            name: \"Morocco\"\n          },\n          KE: {\n            path: \"M696.13,456.91l1.2,-1.94l0.9,-2.52l1.23,-0.89l1.69,-2.18l0.87,-2.1l1.3,-1.23l2.39,-1.11l-0.06,-1.76l2.06,-2.98l0.2,-1.72l-0.17,-3.41l-0.94,-4.11l0.23,-0.9l-0.46,-1.29l-0.65,-0.47l-0.86,-2.33l-1.78,-1.27l-0.73,-2.16l-0.9,-0.64l-0.52,-2.66l0.44,-2.85l-0.65,-0.74l-1.55,-0.55l-0.89,-0.7l0.13,-0.45l-0.73,-0.65l-1.64,-3.48l14.24,-14.05l0.92,0.87l1.84,-0.59l3.03,0.82l0.38,0.54l0.09,1.28l-0.5,2.4l0.08,1.75l3.18,4.28l0.95,0.31l9.51,0.42l13.93,8.98l6.14,0.58l7.22,1.42l3.36,0.26l0.68,-0.24l1.44,-1.33l2.14,-3.16l10.47,-4.79l4.37,3.57l2.19,0.25l5.87,-0.41l-5.9,8.46l-4.23,4.19l-0.29,0.61l0.17,43.23l6.42,8.43l0.09,1.09l-1.59,1.87l-1.29,0.85l-1.74,0.4l-1.14,-0.34l-0.49,0.17l-0.43,0.9l-0.24,-0.17l-0.63,0.38l0.36,1.94l-0.21,0.67l-0.83,0.7l-0.2,0.76l-1.77,1.54l-2.85,0.23l-2.23,1.63l-0.61,1.84l0.17,2.25l-0.89,2.57l-1.42,1.19l-1.49,2.6l-0.57,2.6l-1.01,2.38l-2.81,5.67l-1.16,1.5l-1.16,-0.05l-0.72,0.71l-16.23,-11.7l-0.96,-1.51l-1.12,-0.47l0.93,-2.7l-0.34,-2.17l-0.38,-0.57l-41.77,-23.33l0.6,-0.4l0.53,-1.22l-1.1,-2.04l-0.08,-0.78l1.21,-1.79l0.85,-0.2l2.27,0.58l0.47,-0.54l-0.1,-1.15l3.66,-0.65l0.42,-0.81l-1.12,-2.16l-0.47,-0.2l-3.55,1.24l-0.7,0.63l-0.5,1.16l-1.84,-2.03l-0.07,-1.02l-0.85,-0.13l-0.41,-0.45l-0.29,-2.46ZM779.14,483.65l0.05,-0.04l0.01,0.0l-0.07,0.03Z\",\n            name: \"Kenya\"\n          },\n          SS: {\n            path: \"M581.04,357.13l1.37,-1.12l2.93,-1.06l0.24,-1.49l1.15,-2.04l0.29,-2.42l1.3,-1.74l0.04,-2.89l2.49,-3.21l0.28,-2.18l0.39,-0.53l8.3,-1.41l0.43,0.1l0.2,0.45l0.08,1.69l0.41,0.58l2.98,2.46l4.44,5.17l1.42,0.61l1.53,-0.19l3.52,-1.32l9.24,0.18l1.18,2.38l0.97,0.82l9.33,0.03l0.39,-0.49l-0.07,-1.29l1.52,-1.48l2.94,-1.39l2.87,-0.69l1.6,-1.89l0.08,-1.72l4.26,-2.24l5.29,3.38l3.41,3.0l4.95,-0.48l0.96,-0.42l5.07,-5.03l2.36,-3.09l0.89,-2.12l5.78,-5.15l0.05,-0.67l-0.97,-2.24l-0.02,-4.76l-2.62,-3.02l6.91,-0.03l0.4,-0.37l-0.19,-2.16l4.79,0.06l-0.71,2.77l-0.16,2.99l-0.58,1.11l1.15,8.97l-0.49,1.2l0.39,0.52l2.63,0.98l0.99,1.18l5.16,4.28l0.53,1.37l0.07,2.18l-0.79,1.64l-0.28,2.62l0.47,0.85l1.95,0.04l0.29,8.87l-0.26,1.32l-1.23,1.06l-8.0,0.16l-0.65,0.61l-2.58,5.22l-0.17,1.0l1.09,1.04l1.77,0.78l5.15,1.06l2.69,1.85l1.26,1.5l0.61,1.81l2.52,2.63l2.42,1.26l0.95,1.41l1.64,1.33l2.86,7.13l0.33,2.27l1.2,2.25l1.92,1.85l-20.42,20.03l-3.67,-0.22l-2.17,-1.21l-1.83,0.94l-5.96,1.12l-1.69,1.2l-0.49,0.91l-1.94,-0.92l-1.73,-2.29l-0.45,-0.03l-2.79,1.41l-3.63,-1.25l-0.95,-0.02l-2.86,1.86l-0.8,1.15l-0.84,-1.09l-0.88,-0.25l-1.11,0.2l-0.72,-2.26l-3.78,-1.85l-3.73,-3.98l-1.03,-1.76l-1.27,-1.32l-1.6,-0.67l-1.23,0.27l-1.16,1.42l-1.73,1.15l-0.63,0.03l-2.46,-1.13l-2.59,-0.23l-2.61,1.61l-1.59,0.57l-1.98,-0.36l-2.41,-2.09l-1.61,-0.77l-1.98,-2.82l-2.06,-1.47l-2.65,-3.66l-0.32,-3.16l-1.07,-2.03l-4.97,-3.31l-1.65,-0.29l-0.78,-0.51l-1.11,-2.4l-1.04,-1.31l-0.15,-0.54l0.59,-2.01l-0.13,-0.42l-2.24,-1.72l-1.59,-2.06l-1.73,-1.29l-5.96,-3.17l-1.15,-1.07l-1.0,-1.17l0.59,-0.94l0.16,-1.06l-0.6,-1.22l-2.34,-1.95l-1.78,-2.01l-1.6,-0.77l-5.07,-1.13l-0.84,-0.79l-0.27,-0.87l0.45,-1.63l-0.67,-1.05Z\",\n            name: \"S. Sudan\"\n          },\n          ML: {\n            path: \"M158.55,301.7l-0.54,-1.32l-1.75,-2.1l0.09,-0.89l0.69,-0.68l0.3,-1.15l-0.68,-1.35l-0.07,-2.89l-2.36,-2.87l0.46,-2.09l-0.6,-1.27l1.44,0.3l1.94,-1.71l0.9,-1.49l0.52,-3.0l0.75,-2.02l2.76,-2.33l6.42,5.8l0.97,-0.19l2.15,-3.09l3.15,-0.17l5.53,0.77l2.29,-0.34l3.6,-0.68l0.33,-0.35l0.0,-1.39l0.39,-0.65l0.32,1.53l2.03,0.41l43.0,-0.0l0.39,-0.33l1.79,-9.46l-3.16,-3.69l-11.26,-102.64l20.21,-0.01l69.78,48.0l0.27,3.49l1.54,1.35l3.72,1.92l0.77,2.02l0.93,0.73l2.19,0.78l3.38,0.31l2.16,2.22l5.44,1.34l2.99,1.24l0.68,0.58l-0.02,2.61l0.63,2.09l-0.65,0.69l-1.08,2.33l0.35,0.81l1.56,1.07l1.96,0.38l9.28,-1.79l0.08,25.36l-0.37,0.53l-0.24,4.56l-0.69,2.6l-1.27,2.05l-1.6,5.2l-0.56,0.78l-1.29,0.44l-2.22,1.9l-0.27,1.36l-4.9,-0.79l-0.82,0.33l-0.19,0.72l-19.62,0.81l-4.18,3.48l-2.63,0.33l-5.06,-0.3l-0.79,0.21l-0.32,0.48l-4.9,-1.63l-2.05,0.51l-0.55,-0.52l-0.96,-0.22l-1.71,0.1l-1.25,0.34l-3.34,2.7l-5.19,2.31l-2.34,1.4l-3.22,0.61l-1.21,3.23l-0.36,0.17l-3.89,-1.22l-1.82,0.58l-2.32,1.88l-1.18,1.54l-0.67,2.08l-0.11,1.41l-2.82,-0.31l-0.86,0.46l-0.57,4.31l-2.32,1.06l-3.6,-2.2l-1.4,-0.4l-1.39,0.31l-3.31,3.19l0.13,1.16l0.98,2.02l-0.01,0.7l-2.75,1.34l-0.18,0.54l0.65,1.04l-0.07,2.61l-1.78,2.08l-1.19,0.84l-4.76,1.29l-1.52,0.95l-0.84,0.99l-0.03,1.86l0.71,1.88l-0.23,1.63l-1.03,2.7l-1.62,1.02l-0.16,0.4l0.38,3.12l-0.64,3.57l-1.85,0.07l-1.86,0.57l-2.16,2.23l-1.82,-0.57l0.52,-1.59l-0.54,-1.75l-0.14,-1.95l-0.64,-0.39l-2.03,0.66l-0.25,0.5l0.18,0.76l-1.15,-0.27l-0.99,-0.78l-0.54,0.04l-0.49,1.17l0.1,2.31l-3.13,0.29l-0.54,1.2l0.3,0.79l-0.28,0.19l-0.85,-0.69l-2.82,-0.62l-0.19,-0.71l-1.74,-1.48l-2.16,0.26l-1.82,2.27l-1.24,0.67l-0.36,-1.58l-3.03,-1.94l-0.64,-2.98l0.13,-2.4l-0.34,-0.64l-1.85,-0.87l-1.94,0.69l1.58,-2.24l1.16,-0.87l0.35,-1.13l-0.32,-0.44l-2.85,-1.43l-0.59,-1.25l-1.17,-0.59l-0.0,-2.92l-2.1,-5.0l-0.68,-0.86l-2.2,-1.02l-1.09,-0.08l-1.23,0.34l-0.2,0.66l0.64,1.04l-0.06,0.77l-1.45,0.34l-2.04,1.03l-0.95,1.28l-6.22,-2.14l-2.42,1.0l-1.78,2.32l-0.64,0.39l-1.8,-2.9l-0.67,-0.63l-1.1,-0.14l-0.94,0.49l-1.69,1.73l-0.72,0.09l-2.06,-1.77l1.29,-2.46l0.08,-0.89l-0.8,-0.97l0.61,-4.85l-1.78,-2.61l-0.38,-1.41l-0.67,-1.04l-1.72,-0.47l-0.82,0.85Z\",\n            name: \"Mali\"\n          },\n          KM: {\n            path: \"M817.5,603.11l0.61,-0.24l0.5,-0.86l0.49,1.37l-0.0,1.05l-1.59,-1.3ZM809.46,604.09l0.26,0.03l0.6,0.37l-0.69,-0.09l-0.17,-0.31ZM806.8,599.18l-1.42,-0.7l-0.71,-0.87l0.32,-3.55l0.29,-0.43l0.51,0.21l-0.15,2.23l1.15,3.1Z\",\n            name: \"Comoros\"\n          },\n          ST: {\n            path: \"M383.99,440.62l-0.33,-0.08l0.53,-0.7l0.05,0.23l-0.25,0.55ZM375.07,457.57l-1.05,0.63l-0.5,-1.61l0.52,-1.0l1.46,-0.64l0.52,0.65l0.0,0.69l-0.94,1.28Z\",\n            name: \"S\\xe3o Tom\\xe9 and Principe\"\n          },\n          MW: {\n            path: \"M681.13,619.76l1.74,-1.46l1.44,-2.96l0.38,-3.9l-0.61,-1.2l0.73,-1.72l4.31,-1.64l1.54,-1.88l-0.35,-0.69l-1.7,-0.22l-0.93,-2.11l0.55,-2.61l0.03,-2.37l-0.19,-1.02l-0.71,-0.92l0.05,-1.02l0.39,-0.27l1.32,-2.96l-1.29,-3.24l0.68,-0.62l1.52,-0.44l2.28,-2.28l0.14,-0.7l-1.31,-2.14l-0.33,-1.91l-2.41,-2.19l0.32,-2.22l-1.17,-1.21l-0.79,-1.69l-1.23,-0.32l-0.55,0.4l-0.41,-0.09l-0.68,-1.96l1.71,1.11l2.38,0.31l1.15,1.07l3.32,-0.1l2.2,0.84l-0.11,1.28l1.3,3.56l2.72,3.57l-0.7,2.02l0.63,6.18l-0.24,0.8l1.15,5.72l-3.03,4.51l-0.36,2.15l0.6,1.96l1.16,0.77l0.18,2.55l0.83,1.15l0.72,2.39l0.16,2.45l-0.26,2.73l1.16,2.0l1.6,0.84l0.58,0.7l0.15,0.79l-0.96,2.74l0.39,1.72l1.87,2.05l0.5,0.06l1.31,-0.89l0.42,-2.09l0.51,1.42l1.09,0.39l2.18,2.65l0.8,0.07l0.45,-0.87l-2.17,-6.4l8.0,10.32l0.46,2.59l-0.56,1.56l-0.41,2.77l0.29,1.92l-0.12,3.09l-0.7,4.33l-1.57,0.66l-3.01,0.52l-0.86,1.14l-1.49,3.84l0.75,1.26l0.57,1.91l0.08,3.32l-1.41,0.08l-0.46,-0.39l-0.14,-0.42l0.52,-0.56l0.21,-0.91l-0.41,-1.04l-1.81,-1.01l-4.7,-5.26l-1.29,-0.85l-0.14,-1.96l-1.78,-2.3l0.32,-0.97l0.94,-0.93l0.91,-2.74l1.26,-2.27l0.2,-3.44l-0.69,-5.22l-1.53,-2.08l-0.87,-0.35l-2.75,0.5l-0.65,0.42l-4.09,0.54l-0.52,0.37l-2.66,-3.09l-1.7,-2.92l-1.14,-1.26l-0.48,-0.13l-1.48,0.93l-1.35,-2.28l-0.96,-0.53l0.3,-0.65l-0.16,-0.35l-1.1,-0.81ZM707.94,620.9l-1.35,-0.14l-0.08,-1.18l1.13,0.99l0.3,0.33ZM704.22,601.65l0.03,-0.32l0.11,-0.2l0.13,0.19l-0.28,0.32ZM703.11,600.89l-0.08,0.18l-0.2,-0.25l0.11,-0.06l0.17,0.12Z\",\n            name: \"Malawi\"\n          },\n          SO: {\n            path: \"M784.81,478.05l-6.52,-8.7l-0.07,-43.18l4.26,-4.23l6.72,-9.72l1.17,-1.15l2.26,-0.71l6.71,-1.1l1.31,-0.88l1.43,-2.38l1.21,-0.9l5.27,-2.43l4.69,-1.11l10.76,0.6l0.66,-0.27l17.38,-18.64l18.24,-17.68l11.31,-17.26l0.07,-21.27l4.96,-0.97l3.0,-1.29l5.57,-0.97l4.18,-2.36l2.01,-2.56l1.6,-0.41l4.95,1.72l-0.32,1.61l-1.57,3.84l0.43,3.23l0.12,5.56l-0.39,1.09l-0.71,0.59l0.19,0.58l-1.22,0.58l-0.57,1.2l-0.8,6.56l-0.09,3.22l-1.57,2.11l-0.59,1.6l-2.45,3.14l-1.7,3.98l-2.09,3.57l-3.01,2.94l-1.06,3.55l-1.04,2.2l-3.75,5.6l-1.38,2.6l-1.67,4.35l-0.52,2.76l-4.65,7.91l-4.85,6.35l-3.04,5.37l-12.82,14.18l-9.68,9.49l-2.59,1.91l-10.64,5.88l-6.89,4.92l-10.19,9.06l-10.64,11.06l-4.03,4.91l-2.84,2.8l-2.92,5.38l-1.57,2.2ZM897.88,336.12l0.13,-0.45l1.54,0.9l-0.87,-0.13l-0.8,-0.32Z\",\n            name: \"Somalia\"\n          },\n          SN: {\n            path: \"M92.84,285.0l-0.36,0.43l-0.22,-0.26l0.58,-0.18ZM93.02,284.95l3.4,-1.72l3.59,-4.5l3.2,-5.29l0.83,-2.25l0.67,-3.33l0.45,-0.33l1.82,-3.52l0.62,-0.14l2.37,0.65l2.36,0.09l4.53,-1.16l3.09,-0.27l0.35,-0.55l0.8,0.03l0.52,-0.36l0.48,0.3l1.66,0.09l2.93,-0.12l2.61,0.87l3.62,3.07l0.54,1.33l0.83,0.74l0.88,0.21l0.96,-0.38l0.52,0.52l0.72,0.1l1.12,-0.25l1.15,0.85l0.67,0.94l1.01,3.19l0.65,1.11l0.91,0.33l0.76,1.11l1.05,0.13l0.55,0.46l0.73,1.24l0.27,1.4l2.27,1.89l1.38,0.54l0.87,0.69l0.68,1.09l1.46,0.95l0.95,1.66l-0.4,2.43l2.4,2.94l-0.02,2.6l0.68,1.29l-0.2,0.74l-0.77,0.84l-0.04,1.49l1.78,2.16l0.23,0.95l0.62,0.7l0.78,-0.04l0.6,-0.73l0.96,0.19l0.53,0.8l0.41,1.47l1.75,2.61l-0.67,4.5l0.76,1.32l-1.77,-0.18l-2.77,0.46l-2.77,-0.12l-2.95,0.83l-5.72,-1.44l-1.63,-0.97l-1.35,0.55l0.12,-1.1l-0.62,-0.67l-7.61,-0.48l-17.22,-0.07l-4.58,2.28l-3.0,0.6l-3.6,-0.23l-4.38,1.29l-2.05,-0.11l-0.58,-0.98l0.14,-0.31l2.13,-0.82l1.2,0.26l0.48,-0.65l-0.22,-0.52l-1.7,-1.1l-0.53,-0.05l-0.94,1.15l-0.44,0.05l0.09,-4.89l1.05,-0.83l9.43,-0.03l0.4,-0.35l0.2,-1.73l5.87,-0.78l0.8,-0.6l0.79,-1.29l8.18,3.38l2.32,0.41l4.84,-1.19l0.53,-1.39l-0.5,-1.06l-1.46,-0.77l-2.19,0.04l-2.08,0.56l-0.8,-0.15l-1.96,-1.35l-2.24,-0.62l-1.93,-1.35l-1.24,-0.32l-2.96,0.2l-1.94,0.77l-1.05,1.65l-11.81,-0.02l-0.29,-1.04l-1.99,-2.29l1.65,-1.45l-0.38,-0.61l-1.62,0.42l-0.12,-0.88l-2.03,-3.65l-1.29,-1.05l-1.0,-1.81l-1.31,-0.91l-1.89,-0.3Z\",\n            name: \"Senegal\"\n          },\n          MR: {\n            path: \"M98.1,207.95l0.48,-2.23l45.99,-0.06l0.4,-0.43l-0.92,-14.29l-0.73,-2.46l0.03,-1.39l1.33,-2.06l4.72,-3.28l2.88,-0.57l3.44,-1.47l0.9,-0.72l0.08,-31.14l38.71,-0.0l0.4,-0.4l-0.01,-15.52l43.54,27.63l-19.44,0.01l-0.4,0.44l11.32,103.21l3.12,3.52l-1.69,8.94l-42.64,0.0l-1.49,-0.2l-0.16,-1.61l-0.51,-0.35l-1.15,0.88l-0.23,1.79l-5.46,0.96l-5.49,-0.77l-3.39,0.19l-0.7,0.5l-2.02,2.76l-5.86,-5.58l-0.75,-0.24l-1.45,0.84l-1.96,1.81l-0.9,2.33l-0.51,2.96l-0.74,1.2l-1.69,1.48l-2.04,-0.76l-1.13,-0.78l-0.65,-1.06l-3.18,-1.85l-1.35,-1.32l-0.05,-0.99l-0.93,-1.58l-0.74,-0.62l-0.99,-0.08l-0.3,-0.72l-1.2,-0.59l-1.54,-4.08l-0.86,-1.2l-1.31,-0.99l-1.93,0.12l-1.04,-0.58l-1.17,0.32l-0.96,-1.08l-0.18,-0.79l-1.34,-1.33l-2.52,-1.94l-2.86,-0.98l-3.09,0.1l-2.42,-0.37l-0.53,0.38l-0.81,-0.1l-0.5,0.66l-2.77,0.2l-4.5,1.16l-2.18,-0.08l-2.44,-0.66l-0.97,0.2l-0.97,1.11l-2.02,4.02l-0.0,-1.73l0.84,-3.76l4.5,-11.36l0.59,-4.22l-0.64,-7.78l-1.51,-5.89l-1.14,-1.95l-2.02,-1.65l-0.27,-0.56l1.52,-0.5l0.77,-1.25l-0.02,-0.45l-0.43,-0.14l-0.76,0.22l1.52,-3.1l0.84,-5.34l-2.7,-5.63l-1.28,-0.76l-0.55,0.34l-0.15,0.78l-0.25,-0.13l-2.9,-5.41l-0.77,-0.52l-0.79,0.35ZM104.46,225.57l-0.06,-0.38l0.55,-0.92l-0.13,0.74l-0.35,0.56Z\",\n            name: \"Mauritania\"\n          },\n          UG: {\n            path: \"M644.58,475.13l-0.21,-4.33l0.98,-5.43l2.6,-2.48l0.22,-1.53l-0.22,-0.42l-1.22,-0.6l-0.84,-0.05l0.28,-2.03l0.69,-0.8l1.8,-3.83l0.06,-3.66l1.17,-0.51l1.59,-1.29l0.76,-1.6l0.83,-0.85l1.38,-0.47l0.26,2.06l0.79,0.38l0.73,-0.26l3.63,-4.87l0.83,-0.85l2.25,-0.89l1.27,-1.01l1.68,-2.63l-0.16,-4.31l1.05,-1.66l-0.5,-0.47l-0.7,0.27l-1.73,2.27l-0.78,-0.98l-1.15,-0.25l-1.29,-1.26l-1.7,-0.06l-0.88,-0.48l1.43,-4.87l-0.39,-1.09l-0.71,-0.78l0.79,-2.54l0.91,-1.47l-0.08,-0.92l-0.5,-0.42l0.8,-1.23l2.43,-1.66l4.5,1.27l2.93,-1.38l1.56,2.17l2.34,1.05l0.49,-0.11l0.65,-1.06l1.46,-1.03l5.84,-1.07l1.74,-0.88l1.82,1.17l3.98,0.23l1.21,-0.78l4.38,-4.39l1.59,3.37l0.5,0.31l-0.0,0.73l1.2,0.94l1.86,0.85l-0.46,2.66l0.57,2.95l0.94,0.7l0.9,2.36l1.65,1.11l0.83,2.28l0.67,0.53l0.35,0.97l-0.24,0.79l0.95,4.18l0.14,3.91l-0.34,1.21l-1.85,2.57l0.13,1.65l-2.14,0.88l-1.5,1.41l-0.88,2.11l-1.6,2.07l-1.35,1.04l-0.96,2.65l-1.04,1.69l-1.19,0.34l-1.1,-0.21l-0.21,-0.9l-0.68,-0.4l-0.89,0.33l-0.62,0.82l-0.73,0.02l0.25,-0.52l-0.15,-0.55l-1.55,-0.47l0.27,-1.15l-0.54,-0.3l-1.08,0.11l-1.0,0.4l-0.72,2.09l-0.52,0.11l-0.37,0.73l-1.1,0.83l-1.07,-0.75l-1.5,0.72l-0.04,-0.81l-0.53,-0.67l-0.55,-0.16l-0.84,0.83l-0.52,1.32l-0.47,0.13l-0.78,-0.41l-0.88,0.85l-1.74,0.2l-2.94,1.58l-0.4,0.78l0.76,1.1l-0.05,0.53l-1.46,1.84l-1.71,3.66l0.56,2.24l-10.98,-0.08l-2.43,0.87l-2.24,-0.06l-0.8,0.24l-2.48,2.91l-1.77,1.39l-0.71,0.2l-0.54,-1.28l-0.59,-0.26l-2.39,0.57ZM687.18,457.18l0.12,-0.82l1.06,-0.02l-0.55,0.44l-0.16,0.59l-0.47,-0.19ZM673.83,462.4l0.46,0.01l-0.02,0.46l-0.21,-0.11l-0.24,-0.35ZM675.29,463.38l0.55,-0.04l-0.4,1.17l-0.61,0.23l0.55,-0.77l-0.09,-0.59Z\",\n            name: \"Uganda\"\n          },\n          SD: {\n            path: \"M636.92,346.14l-1.71,1.58l-0.17,1.46l-8.66,-0.03l-1.72,-2.99l-0.48,-0.24l-9.48,-0.14l-4.74,1.51l-1.07,-0.42l-4.41,-5.13l-2.98,-2.46l-0.61,-2.66l-1.15,-0.4l-5.95,1.19l-2.18,0.09l-0.69,0.37l-0.58,0.87l-0.22,2.05l-2.53,3.29l-0.06,2.98l-1.28,1.68l-0.28,2.41l-1.15,2.04l-0.13,1.24l-3.63,1.38l-0.82,1.09l-6.16,-1.05l-0.35,-0.38l0.06,-1.63l-0.94,-1.06l0.04,-0.55l1.41,-1.64l0.39,-1.07l0.41,-4.45l-0.15,-1.56l-1.21,-2.49l-2.74,-4.26l-4.11,-4.35l-1.09,-1.77l0.88,-3.16l-0.19,-1.94l-1.0,-0.91l-0.83,-0.15l-2.09,-1.83l-0.35,-0.93l0.26,-3.9l-0.51,-0.76l-0.73,-0.14l-0.95,-4.58l0.22,-1.18l-0.73,-1.36l-1.8,-0.79l-3.43,0.38l-0.89,-0.97l0.9,-2.28l0.9,-1.24l2.0,-1.26l0.88,-1.46l-0.06,-1.96l-1.32,-3.07l-0.01,-0.67l0.67,-1.12l4.31,-3.03l-0.04,-0.84l-0.94,-1.07l-0.7,-2.9l0.77,-0.75l2.42,-1.1l0.24,-1.72l0.92,-1.67l2.02,-2.04l0.46,-1.89l-0.39,-2.6l1.72,-1.74l4.03,-0.14l1.72,-0.38l3.9,0.5l0.75,-0.53l0.12,-51.43l11.17,0.01l0.55,-0.49l0.01,-24.02l72.66,0.01l0.96,-0.31l1.31,-2.23l0.55,0.29l-0.56,1.71l0.38,0.53l63.39,-0.01l0.12,2.49l0.56,2.35l1.81,3.2l1.93,2.41l-0.62,-0.25l-0.55,0.34l-0.11,1.49l0.37,3.13l0.63,2.12l-0.45,1.97l0.06,3.35l0.81,4.03l-0.15,2.62l1.33,5.96l1.31,3.36l0.89,1.02l2.35,0.74l2.16,1.61l3.24,3.67l1.17,-0.15l0.46,0.59l2.73,1.71l0.22,0.43l-1.99,2.04l-0.62,1.36l-1.37,1.52l-5.34,1.43l-2.9,1.71l-0.54,0.6l-0.97,2.46l-2.64,0.23l-1.9,-0.2l-0.36,0.27l-0.38,3.16l-1.06,2.25l0.3,3.86l-1.16,3.57l-1.58,3.23l-1.82,5.63l-1.16,1.66l1.14,10.41l-0.92,3.13l0.02,1.82l-0.64,2.5l-2.08,4.21l-0.63,2.17l-0.4,3.98l-4.35,0.9l-0.91,0.57l-0.91,1.08l-4.01,6.87l-1.69,1.76l-1.79,6.45l-0.37,4.87l-1.41,1.11l-1.86,-1.32l-0.74,-0.18l-1.68,1.12l-1.12,1.63l-0.86,1.83l0.42,3.87l-1.77,3.95l-0.96,4.36l-1.64,-0.19l0.26,-2.3l0.82,-1.84l-0.09,-2.39l-0.66,-1.65l-5.28,-4.41l-1.07,-1.24l-2.59,-0.99l0.4,-1.09l-1.16,-8.77l0.56,-1.07l0.17,-3.01l0.68,-2.33l0.07,-0.98l-0.39,-0.43l-5.6,-0.07l-0.44,0.42l0.22,2.12l-7.41,0.03l-0.3,0.67l3.05,3.42l-0.01,4.63l0.97,2.46l-5.6,4.89l-1.71,3.36l-6.56,6.83l-5.16,0.74l-3.2,-2.87l-5.53,-3.54l-0.42,-0.0l-4.7,2.54l-0.17,1.9l-1.33,1.56l-4.06,1.1l-1.75,1.06Z\",\n            name: \"Sudan\"\n          },\n          MZ: {\n            path: \"M682.61,781.45l-5.86,0.15l-2.46,-0.31l-0.07,-3.6l-0.75,-2.96l0.22,-3.37l-1.36,-0.96l-0.28,-2.0l0.75,-1.85l0.01,-14.7l-2.2,-7.12l-2.99,-5.12l-0.14,-2.42l-2.83,-10.56l1.53,-1.18l11.71,-12.29l0.1,-0.46l-0.8,-1.77l1.38,-2.29l0.16,-3.4l2.08,-1.71l3.82,-6.63l0.14,-1.59l-2.06,-3.84l-0.57,-1.9l0.6,-1.72l0.19,-1.93l-0.43,-0.72l-1.15,-0.63l-0.14,-0.51l0.15,-1.01l1.44,-0.73l0.55,-0.64l1.3,-4.59l-0.44,-3.4l0.16,-10.06l-1.0,-2.64l-0.09,-1.68l0.83,-2.1l-0.32,-0.45l-2.3,-0.38l-1.29,-1.07l-4.63,-1.71l-3.52,-0.25l-2.86,-2.5l-2.47,-0.5l-3.08,-1.89l-9.33,-0.38l-0.14,-3.84l-0.54,-3.55l-1.17,-2.06l-0.33,-1.85l5.01,-1.99l10.13,-2.9l19.34,-6.68l1.96,3.1l2.92,3.37l5.14,-0.87l1.93,-0.74l1.62,-0.05l1.4,1.9l0.6,4.86l-0.19,3.24l-1.2,2.08l-0.89,2.71l-1.31,1.51l-0.04,0.93l1.8,2.36l-0.07,1.37l0.34,0.83l1.34,0.92l4.78,5.33l1.68,0.91l0.08,1.13l-0.61,0.86l0.32,0.88l0.99,0.73l1.83,-0.11l0.54,-0.67l-0.11,-3.49l-0.62,-2.13l-0.67,-0.93l1.38,-3.52l0.6,-0.83l4.04,-0.77l0.81,-0.7l0.44,-1.29l0.34,-3.37l0.12,-3.14l-0.29,-1.86l0.39,-2.67l0.61,-1.67l-0.59,-3.02l-7.04,-9.27l-2.76,-3.05l-1.69,-1.39l-0.18,-1.71l-0.42,-0.53l-0.11,-3.29l-0.35,-1.0l0.44,-2.32l-0.22,-1.58l-1.07,-2.47l0.09,-2.62l1.74,-1.65l0.42,-0.79l0.53,-1.44l0.29,-3.15l6.72,0.29l0.99,-0.31l1.75,-1.46l1.22,0.02l2.84,1.67l0.42,0.88l1.44,0.44l2.5,0.12l1.92,-0.39l1.26,-0.92l2.18,-0.46l2.72,1.39l2.04,0.3l2.08,-0.46l2.24,-1.19l1.23,-1.17l0.93,-2.13l2.82,-0.17l1.52,0.36l2.43,1.18l3.51,-2.16l2.16,-0.7l2.09,-0.0l1.88,-0.54l2.84,-1.71l3.04,-0.82l2.06,-1.12l5.19,-3.94l1.31,1.73l-1.13,0.91l0.03,0.67l0.9,0.54l-0.75,1.01l-0.12,0.82l0.41,0.85l-1.61,3.06l0.7,1.57l-0.34,2.52l1.12,4.02l-0.34,1.37l0.24,3.2l-0.39,1.08l0.76,0.81l0.32,1.07l-0.27,1.97l-1.26,1.04l-0.15,1.09l0.39,0.39l1.18,0.01l-0.21,3.2l0.32,1.05l-0.41,1.14l0.59,7.87l0.25,0.8l1.14,0.55l-0.88,1.76l0.07,1.85l0.3,0.34l0.43,-0.17l1.0,-1.23l0.27,0.3l0.32,2.9l-0.08,0.64l-1.51,1.6l-0.21,1.61l-0.78,0.64l0.32,1.89l-1.03,2.43l-5.24,6.03l-0.18,1.13l-1.22,1.74l-2.24,0.85l-0.16,0.48l0.5,1.34l-6.81,4.22l-1.83,2.13l-2.22,0.79l-2.44,0.1l-6.24,2.34l-1.25,0.99l-2.41,0.86l-3.86,2.16l-3.14,2.05l-3.64,3.12l-0.53,1.72l-4.19,4.69l-1.5,2.12l-0.14,0.86l-0.39,0.12l-0.58,-0.69l-0.7,0.19l-0.27,1.45l-1.13,-0.25l-3.22,1.86l-2.46,2.15l-3.33,3.99l-4.78,3.79l-0.8,0.08l-1.65,-1.35l-1.24,0.12l0.06,0.45l1.13,1.31l-0.58,7.87l3.29,4.23l1.55,4.65l0.16,2.57l1.6,3.06l0.72,4.68l-0.16,4.36l0.92,1.04l0.63,-0.13l0.29,-0.64l0.32,-3.09l0.36,1.14l0.13,1.44l-0.6,3.55l0.97,3.72l-0.92,2.66l-1.46,7.65l0.4,0.74l0.99,0.33l0.61,-0.67l-0.58,2.82l-2.69,4.42l-1.11,1.33l-1.85,1.31l-4.46,2.1l-9.03,3.07l-5.76,2.42l-4.59,2.9l-2.05,1.98l-0.89,2.3l-1.54,2.29l0.0,0.41l1.35,1.98l1.8,1.47l0.6,-0.22l0.28,-0.92l-0.58,7.72Z\",\n            name: \"Mozambique\"\n          }\n        },\n        height: 1054.4456598737515,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"ar_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 1775.5897460258225,\n          bbox: [{\n            y: 2464855.8822114565,\n            x: -8195937.5628109295\n          }, {\n            y: 6843324.315777245,\n            x: -5976606.436896723\n          }],\n          left: 0\n        }],\n        paths: {\n          \"AR-Z\": {\n            path: \"M26.08,1409.8l2.05,-1.87l2.03,-0.67l4.35,-0.45l2.16,-0.69l1.78,-1.21l5.62,-5.5l1.23,-1.7l0.53,-1.98l0.19,-2.3l-0.28,-6.15l-1.02,-3.26l-0.35,-2.8l1.61,-3.15l3.46,-2.04l2.95,-0.9l0.82,-0.6l1.94,-2.49l0.93,-0.11l1.51,0.37l0.86,-0.4l0.33,-0.83l-1.35,-2.98l0.72,-4.28l-1.07,-6.95l-0.46,-1.25l-2.15,-0.91l-0.53,-1.74l-0.83,-0.98l-2.72,-0.99l-1.36,-1.13l-1.09,-1.46l-0.34,-1.57l1.93,-3.5l1.92,-5.89l4.24,-6.52l0.87,-1.96l1.13,-5.21l-0.04,-0.91l-0.9,-0.88l-1.28,-0.58l0.32,-1.04l1.29,-1.23l1.73,-0.62l3.55,0.3l0.98,-0.16l0.93,-0.64l5.13,-5.51l0.95,-1.49l0.45,-1.24l-0.7,-3.01l0.39,-0.67l0.69,0.03l2.81,1.64l1.6,0.43l1.72,-0.75l0.96,-1.61l0.06,-1.9l-0.52,-1.5l-0.93,-1.31l-4.18,-2.42l-0.76,-0.86l0.16,-0.75l2.78,-1.5l0.99,-0.98l0.05,-0.5l-0.54,-0.84l-1.9,-1.9l0.75,-3.96l0.79,-1.27l-0.63,-2.17l0.54,-0.62l3.33,-0.25l1.23,-0.43l2.6,-2.84l2.47,-1.25l1.59,-1.52l0.43,-2.09l-0.68,-4.06l0.67,-2.84l-0.22,-1.16l-3.01,-7.12l-0.42,-1.91l0.11,-4.74l-0.27,-1.88l-0.99,-1.22l-5.74,-3.88l0.23,-0.41l3.88,-0.51l2.17,-0.83l2.23,-3.2l3.21,-3.15l182.99,0.03l-1.61,5.14l-0.06,3.81l2.16,8.95l1.54,4.52l5.35,9.49l4.01,3.38l3.67,1.08l1.08,1.55l1.74,1.14l2.78,0.84l0.61,1.53l1.58,1.33l2.14,3.42l1.58,0.47l0.37,0.68l4.89,4.61l2.62,3.55l1.79,1.51l4.03,1.83l1.79,-0.07l1.35,0.82l2.04,-0.51l0.98,0.38l2.72,-0.41l2.88,1.15l2.54,-0.19l1.21,0.52l7.11,1.29l5.29,-0.39l2.65,-0.88l1.99,-0.07l2.65,1.54l1.75,0.19l0.87,0.8l0.59,1.6l4.37,3.5l-0.37,1.07l1.89,6.67l-0.61,3.8l-0.4,5.71l-4.89,13.15l-1.88,0.37l-6.21,-0.64l-1.61,1.16l-1.53,1.68l-5.09,2.31l-2.86,1.77l-0.9,0.22l-3.52,-0.14l-1.03,0.53l0.29,0.4l2.19,0.65l1.93,-0.14l3.58,-1.73l3.64,-0.85l4.29,-2.09l1.23,-1.19l2.01,-0.34l3.06,0.28l0.6,0.62l1.38,5.4l1.31,1.29l2.29,0.6l-0.93,1.08l0.18,0.54l0.51,0.25l-1.96,0.51l-0.6,-1.02l-2.37,-0.69l-1.52,0.53l-1.03,1.36l-0.32,1.18l0.93,0.88l-0.24,1.1l-0.54,1.19l-0.71,0.42l-0.18,0.48l0.34,0.76l1.2,0.85l1.45,0.4l0.13,0.5l-0.66,0.84l-0.81,0.15l-0.46,-0.68l-0.84,-0.31l-1.06,0.42l-3.24,0.19l-2.25,0.82l-1.21,0.98l-0.35,1.31l-0.8,1.3l-3.4,1.3l-1.33,2.0l-1.49,0.48l-0.93,0.87l-0.94,1.35l-0.82,2.02l0.49,1.74l-4.35,-0.3l-1.18,0.92l-0.08,2.11l-1.26,0.68l-1.89,0.55l-4.97,0.49l-1.88,1.37l-2.51,1.15l-2.82,2.27l-2.29,2.29l-0.33,2.14l-1.98,0.76l-3.36,0.5l-2.56,1.87l-3.15,1.7l-1.22,1.4l-0.39,2.75l-1.76,1.78l-0.6,2.59l-2.06,1.46l-3.35,1.27l-3.79,2.15l-6.89,6.56l-0.94,2.04l-0.94,3.33l-1.68,1.55l-0.12,1.49l0.96,0.66l0.12,0.5l-1.71,1.04l-1.15,3.07l-1.06,0.95l-1.26,0.39l-0.2,0.62l0.97,1.11l0.0,0.69l-1.99,1.12l-0.06,0.67l0.41,0.32l-0.01,0.4l-1.06,0.9l-2.44,0.29l-0.34,0.31l0.16,0.8l0.97,0.37l4.3,-0.13l1.35,-1.27l0.68,-2.08l-0.05,-1.53l0.69,-0.89l0.25,-1.57l0.88,-0.9l0.85,0.74l-0.16,3.14l-1.9,3.22l-2.11,9.2l-0.81,8.03l0.24,0.94l-0.86,5.51l-1.78,5.22l-2.72,4.83l-2.72,2.44l-8.12,5.29l-4.16,1.55l-3.9,0.61l-3.56,-0.38l-1.44,-1.88l-1.1,-0.57l-0.94,-1.32l-1.87,-4.23l-2.65,-2.36l-0.87,-1.35l-1.24,-3.35l-3.86,-5.98l-2.03,-1.46l-2.14,-0.51l-0.42,0.28l0.18,0.47l2.77,1.62l0.49,0.57l0.28,0.9l2.79,4.42l0.78,2.51l0.02,1.21l-1.98,1.32l-2.12,0.88l-9.17,-0.29l-3.06,1.63l-1.41,0.08l-1.95,1.29l0.37,0.84l4.5,-0.23l1.68,-1.15l1.63,-0.63l3.25,0.05l4.39,0.74l3.97,-1.42l0.76,0.36l0.49,1.3l1.3,0.8l0.34,2.55l0.91,1.34l1.3,1.24l0.97,0.56l1.86,0.42l0.47,0.62l1.34,0.42l0.38,0.55l-0.39,0.84l-1.49,0.52l-1.83,1.3l-13.37,5.31l-1.58,-0.06l-1.1,0.9l-0.23,0.8l-1.68,0.39l-0.94,-0.15l-0.91,0.5l-0.38,1.42l-0.8,0.53l-3.45,4.04l-4.56,7.74l-0.22,2.76l-3.16,8.17l0.13,1.25l0.65,1.44l0.2,5.45l-0.35,1.33l-2.97,1.81l-2.52,2.34l-3.97,2.67l-1.91,1.78l-1.02,2.25l0.13,0.48l0.5,-0.01l5.48,-4.03l4.04,-2.07l0.93,-0.09l2.74,13.75l0.79,1.32l1.11,5.17l4.46,10.73l0.39,2.35l-0.3,0.85l-0.64,0.5l-1.61,-0.48l-1.46,0.05l-3.12,2.44l-2.17,-0.3l-5.18,-2.4l-4.26,-0.17l-1.93,0.83l-3.68,0.58l-2.14,1.56l-3.22,1.17l-0.2,0.49l0.46,0.26l11.83,-2.2l2.1,0.29l6.26,2.32l-0.19,0.54l-2.34,1.65l-0.17,0.7l0.4,0.4l1.04,-0.03l4.59,-2.03l3.12,-2.32l1.06,-0.14l1.06,0.45l1.58,1.43l2.8,6.74l2.13,2.76l6.39,12.12l14.43,18.24l0.4,0.94l-0.25,0.62l-2.73,2.87l0.1,-1.15l-0.51,-1.1l0.02,-2.11l-0.59,-1.04l-5.31,-1.18l-2.29,-1.03l-8.94,-1.23l-8.44,-3.88l-9.25,-2.49l-12.36,-0.34l-21.18,-7.56l-88.65,-1.05l-1.83,-1.0l0.72,-4.38l-0.45,-1.69l-1.12,-1.53l-4.18,-4.08l-3.19,-2.39l-2.12,-1.16l-4.18,-1.14l-0.74,-0.51l-0.53,-1.04l-0.38,-3.25l-0.48,-1.25l-1.13,-1.07l-3.35,-0.42l-0.7,-1.04l1.07,-1.55l3.3,-2.94l-0.01,-2.2l0.98,-1.74l0.28,-1.18l0.14,-4.69l2.79,-4.1l-0.04,-1.16l-0.74,-0.83l-3.47,-2.02l-1.39,-1.31l-0.88,-1.92l-0.06,-1.04l0.3,-0.68l2.04,-2.67l0.46,-0.48l2.16,-0.61l0.79,-1.43l0.5,-2.78l0.42,-5.14l-0.31,-2.4l-0.98,-1.68l-2.44,-2.97l-0.37,-0.92l0.26,-1.42l1.66,-3.11l-0.12,-1.35l-3.74,-1.74l-5.54,-1.13l-2.31,0.93l-3.0,2.96l-1.74,0.05l-3.13,-2.54l-1.01,-0.47l-1.26,0.16l-5.78,2.85l-6.68,5.4l-1.89,0.72l-1.76,-0.02l-1.5,-1.07l-0.66,-6.38l-2.93,-4.01l-0.17,-4.32l-0.62,-4.29l0.07,-3.64l-1.28,-4.01l-2.13,-3.43l-2.72,-1.61l-5.5,-4.4l-0.42,-1.37l0.41,-1.63l2.26,-3.51l0.14,-1.14l-1.04,-1.92l-3.15,-2.59l1.34,-2.05l0.3,-2.61l2.3,-2.06l0.97,-1.73l-0.16,-1.79l-1.24,-1.89l-2.1,-2.04l-0.25,-0.75l1.22,-2.65l-0.15,-1.53l-2.95,-3.88l1.98,-2.62l-0.33,-2.87l0.4,-0.78l2.43,-1.49l0.97,-1.01l0.22,-0.93l-0.4,-3.13l0.36,-0.33l13.98,-0.23l0.83,-1.49l1.37,-0.33l0.33,-0.72l-0.33,-0.43l-2.79,-0.46l-0.75,-0.9l-0.05,-1.23l0.53,-1.31l2.9,-3.2l0.5,-0.93l0.21,-2.29l0.57,-1.21l2.73,-3.49Z\",\n            name: \"Santa Cruz\"\n          },\n          \"AR-X\": {\n            path: \"M384.38,647.89l-0.01,-52.57l-2.02,-38.28l1.74,-3.25l2.05,-0.63l0.68,-0.86l-0.49,-2.56l1.61,-3.32l-0.32,-2.32l1.85,-3.42l0.38,-3.16l0.87,-1.81l0.07,-1.83l1.29,-1.58l0.45,-2.47l1.04,-2.3l0.41,-3.68l-0.83,-3.27l-1.35,-2.75l0.3,-3.78l-0.17,-2.3l-0.51,-0.86l-1.07,-0.36l-5.67,1.46l-5.21,0.42l-0.32,-0.6l0.05,-2.48l-1.41,-2.7l-0.62,-4.19l-3.0,-3.27l-15.04,-8.5l-1.57,-0.42l-3.59,-0.01l-0.34,-38.96l0.6,-2.99l8.13,-23.02l0.41,-2.26l1.71,-5.42l1.88,-3.38l3.67,-10.09l9.45,-2.58l2.34,-1.21l8.91,-9.21l0.52,-0.91l0.13,-1.2l-1.36,-11.35l0.39,-1.28l2.89,-1.0l26.51,-6.49l1.73,-0.04l9.05,2.33l-0.07,2.5l1.03,1.04l3.36,1.74l1.0,1.31l3.62,0.87l2.09,1.31l3.71,0.2l5.32,-0.8l3.86,1.06l2.56,-0.24l0.12,2.78l2.79,0.76l0.11,1.53l0.74,0.73l49.41,0.27l1.86,1.29l6.93,17.14l-2.1,12.78l0.42,2.23l10.07,10.78l2.01,2.77l-0.37,2.66l-11.53,40.78l-0.71,1.54l-4.47,4.1l-0.02,1.02l0.86,1.6l-0.26,3.15l0.34,3.77l1.41,2.67l-1.26,3.48l-0.29,5.32l3.77,4.01l2.65,1.54l1.48,4.66l1.38,2.45l3.3,2.41l1.21,1.39l0.85,4.65l1.29,1.44l-0.18,1.44l-1.07,1.58l-0.03,0.65l0.6,0.51l2.29,0.62l2.32,4.35l1.58,1.39l0.41,0.91l0.01,1.0l-1.08,3.05l0.04,3.13l-0.34,2.31l-0.6,1.11l-2.21,2.03l-1.04,0.53l-1.77,0.12l-1.3,1.59l-42.06,64.1l-21.73,-0.08l-1.83,1.82l-0.48,8.73l-0.1,21.18l-76.1,-0.02Z\",\n            name: \"C\\xf3rdoba\"\n          },\n          \"AR-Y\": {\n            path: \"M286.66,92.42l10.66,-34.74l-8.02,-8.61l2.14,-3.49l1.28,-1.5l3.38,-2.61l0.58,-0.81l0.17,-1.3l-0.34,-4.0l2.12,-0.09l2.09,-2.06l6.76,-2.51l0.2,-0.8l-0.26,-1.38l0.66,-1.0l0.87,-4.63l0.83,-1.87l1.41,-1.01l2.88,0.48l0.57,-0.92l11.13,-3.07l1.23,-0.89l0.83,-1.3l1.35,-0.39l0.51,-1.4l0.43,-4.39l2.08,-7.55l0.47,-0.15l3.67,1.16l1.87,0.92l1.27,1.34l0.84,2.63l4.32,0.83l0.86,0.48l5.74,6.64l1.51,1.03l1.55,0.44l6.29,-0.71l1.1,-0.59l5.55,0.71l11.62,-0.14l-0.22,0.99l-1.05,1.79l-0.72,2.63l-0.19,4.58l-1.5,2.36l-1.7,4.37l-1.06,1.9l-0.52,4.15l0.43,0.82l1.4,-0.01l1.75,1.61l-0.88,2.02l0.0,2.49l0.78,5.33l1.72,4.94l0.92,1.09l1.49,1.01l5.69,0.35l1.57,1.49l0.4,2.04l-1.53,8.8l0.85,1.16l3.23,1.45l2.8,5.7l0.32,2.29l0.56,0.98l2.71,0.52l1.06,-0.09l2.26,-1.72l3.64,-0.58l1.22,1.12l3.43,1.27l1.67,1.45l2.39,3.11l1.25,0.88l0.47,-0.01l1.11,-0.9l0.81,-2.71l1.29,-1.62l6.31,-0.08l1.2,0.24l0.25,1.06l1.0,30.62l-0.79,2.6l-1.55,2.73l-3.82,4.85l-1.05,0.69l-4.19,0.56l-1.47,1.81l-2.54,0.72l-3.15,2.96l-1.63,3.24l-0.32,0.07l-8.54,-7.32l-0.67,-0.24l-0.43,0.13l-1.3,1.86l-2.04,4.72l-1.11,0.1l-4.25,-1.55l-1.42,-0.85l-3.79,-3.01l-0.93,-1.47l-0.72,0.08l-1.82,1.22l-2.57,0.96l-3.75,-1.41l-2.89,-0.51l-2.32,-1.9l-1.11,-0.04l-1.27,0.6l-2.38,-1.35l-1.33,-2.43l-4.55,-5.89l-1.49,-2.48l-0.31,-0.81l0.15,-1.99l-0.31,-2.05l-3.36,-1.89l-2.1,-2.11l-1.07,-0.65l-1.11,-0.04l-0.84,0.69l-0.62,-0.03l-1.67,-2.29l0.34,-1.79l-0.72,-1.87l-0.71,-0.35l-0.04,-0.31l0.21,-3.64l1.55,-2.5l-0.56,-1.55l0.5,-1.14l-0.23,-2.26l0.25,-3.62l-2.02,-2.23l-6.47,-3.8l-1.92,-0.09l-1.91,-1.26l-1.36,-0.08l-2.68,-1.08l-1.06,0.13l-0.94,1.14l-1.35,6.3l0.2,1.94l2.91,7.9l0.18,2.66l-0.81,12.38l-1.12,2.65l-0.44,1.95l-1.36,0.65l-2.32,3.09l-1.35,0.7l-2.73,0.12l-1.54,-0.33l-3.11,-1.54l-4.22,-4.83l-4.7,-2.28l-2.6,-2.94l-0.65,-1.56l-1.88,-0.62l-0.56,-1.44l-3.63,-3.78l-0.72,-0.44l-2.3,-0.47l-1.53,-1.71l-1.83,-0.79l-1.19,-1.21Z\",\n            name: \"Jujuy\"\n          },\n          \"AR-V\": {\n            path: \"M411.27,1762.25l0.32,-0.91l-0.4,-0.4l-1.12,0.17l-1.02,0.81l0.26,0.72l-2.38,1.02l-1.5,2.06l-2.85,0.13l-0.46,-0.3l1.08,-1.39l-0.15,-0.58l-3.81,-2.0l0.14,-0.74l1.9,-1.21l1.05,-1.26l3.52,1.68l3.87,-1.12l0.8,-0.67l0.0,-0.61l-2.43,-2.03l-0.22,-0.47l0.61,-0.2l1.98,2.12l1.8,0.42l1.38,-0.75l0.88,-0.08l0.49,2.14l0.77,0.41l0.53,-0.11l0.39,-0.6l-0.25,-2.82l0.39,-1.32l1.42,0.93l0.87,-0.26l1.77,0.6l1.89,-0.26l1.83,1.51l0.87,-0.22l0.33,-0.91l-0.19,-0.74l0.25,-0.07l1.32,0.85l1.46,-0.86l0.72,1.64l0.8,0.52l1.97,-1.07l4.8,-1.09l0.87,0.28l0.22,0.6l0.91,0.2l1.87,-1.01l0.2,0.3l-1.11,0.88l-1.2,2.13l-1.99,0.49l-2.28,1.56l-0.42,-0.03l1.13,-2.25l-0.22,-0.93l-0.84,-0.41l-2.17,1.56l-2.72,-0.04l-0.87,0.55l-0.37,0.94l-0.9,0.39l-4.16,0.61l-0.92,0.94l-0.71,-0.47l0.02,-0.49l0.82,-2.23l-0.39,-0.55l-1.51,0.35l-0.68,-0.38l-0.74,0.15l-3.41,2.06l-1.87,1.72l-2.21,0.4ZM223.8,1758.43l0.64,-131.33l1.15,0.92l1.27,2.54l2.95,3.59l2.95,4.42l3.91,3.15l1.32,1.54l2.0,4.08l1.79,7.32l-1.88,-5.68l-1.31,-0.57l-2.2,0.64l-2.76,2.01l-2.28,2.32l-2.83,2.21l-1.54,2.84l-0.44,2.26l0.7,2.6l1.95,1.86l2.79,1.89l1.8,0.13l5.16,1.24l4.82,-0.38l3.29,1.73l1.48,2.96l-0.24,2.17l0.73,1.66l0.84,4.08l2.92,4.88l8.66,7.88l4.02,2.84l0.12,0.69l-0.4,0.77l0.38,0.58l2.1,-0.25l4.4,2.12l-0.93,0.49l-0.52,1.3l0.2,1.48l0.7,1.18l12.36,9.03l7.12,4.34l5.17,2.04l2.88,1.55l0.92,1.18l1.61,0.8l6.33,2.3l2.82,2.3l2.21,3.67l4.47,3.57l1.14,1.53l1.61,0.78l0.67,1.62l4.73,1.22l4.04,2.12l15.51,6.28l2.47,0.42l2.17,1.31l3.41,0.19l3.26,0.74l10.84,-1.36l3.5,0.26l3.21,-1.13l7.01,1.02l-2.21,2.4l-1.38,3.34l0.5,1.37l-1.33,1.03l-0.43,0.74l0.34,1.62l-2.7,1.93l-1.24,3.91l-0.99,0.65l-1.1,-0.04l-0.04,-1.0l-0.48,-1.0l-1.4,-0.65l-1.54,0.03l-1.23,0.7l-0.17,0.45l0.3,1.02l-0.73,0.86l-3.45,-0.28l-1.68,0.38l-1.1,1.87l-1.24,0.47l-0.58,-0.13l-0.89,-1.06l0.0,-1.65l-0.71,-1.07l-2.35,-0.22l-1.88,0.59l-2.87,-0.95l-1.32,0.68l-3.03,-0.5l-0.96,0.54l-0.13,0.58l1.44,1.65l-1.57,1.62l-5.45,1.42l-9.09,-0.02l-2.46,0.66l-0.29,0.44l0.04,1.64l-3.27,0.83l-3.94,-0.06l-3.96,-1.23l-1.26,-0.61l-2.49,-2.54l-4.09,-2.41l-1.35,-0.4l-5.12,-0.48l-3.93,-1.48l-13.62,-0.81l-9.38,-1.11l-5.78,0.37l-11.89,-1.13l-6.48,-1.01l-2.2,-1.4l-4.23,-0.33l-3.74,-1.65l-0.99,0.67l0.04,1.68l-0.53,0.78l-8.47,0.6l-1.75,-0.73l-1.39,-1.73l-1.98,-1.75ZM223.36,1764.78l0.41,-1.63l0.01,-2.33l2.4,3.07l0.1,0.59l-0.52,0.26l-2.4,0.04Z\",\n            name: \"Tierra del Fuego\"\n          },\n          \"AR-W\": {\n            path: \"M650.51,343.95l1.86,-3.66l0.54,-3.01l-0.08,-2.13l1.95,-3.92l0.57,-1.94l-0.17,-4.7l1.11,-6.42l-1.11,-3.85l0.4,-2.79l-0.39,-3.52l0.39,-1.57l0.84,-1.2l0.68,-0.31l2.61,-0.08l1.63,-0.44l2.59,-2.09l0.9,-1.52l1.6,-6.2l-0.09,-3.69l1.16,-3.37l0.1,-2.84l-0.85,-3.64l-2.27,-4.51l-0.08,-3.11l10.25,-7.13l6.44,-2.51l12.21,-1.03l4.97,0.61l4.76,-0.48l14.06,3.39l8.83,4.1l1.34,0.13l4.53,-0.63l2.13,0.26l1.43,1.25l3.03,0.93l2.71,1.63l3.2,0.16l1.58,-0.33l4.55,-2.4l1.57,-0.62l1.5,-0.15l1.42,0.56l2.73,2.64l1.99,1.08l1.84,-0.38l2.25,-1.7l3.01,-0.85l2.77,0.39l3.75,4.71l1.51,1.15l1.66,0.58l1.7,-0.47l1.45,-2.71l1.76,-2.18l0.57,-1.1l0.2,-3.27l3.17,-1.24l1.76,-1.89l1.82,-1.15l2.1,0.27l3.85,1.3l-0.77,0.8l-0.68,1.75l-0.13,2.96l6.53,12.97l0.97,3.32l0.56,5.87l0.31,0.71l2.31,2.66l0.8,2.74l1.26,1.89l4.9,3.63l-2.41,2.13l-2.91,0.98l-1.27,1.2l0.42,1.49l3.57,1.6l0.89,1.5l-0.57,2.14l-0.66,1.13l-0.3,0.21l-0.21,-0.93l-0.93,-1.05l-4.87,-0.96l-2.28,0.85l-0.94,0.79l0.27,1.79l-0.11,2.48l-5.01,1.62l-0.51,0.87l-0.02,3.58l-0.74,0.99l-2.84,1.96l-3.65,4.66l-1.4,0.9l-2.13,0.4l-1.13,0.59l-0.44,0.92l-0.27,4.11l-0.9,1.55l-3.17,1.89l-0.87,1.92l-0.23,2.97l-0.46,0.75l-3.66,1.08l-1.66,0.83l-3.21,2.57l-1.61,2.52l-0.32,1.53l0.26,0.68l-1.59,3.59l-3.69,2.46l-0.56,0.97l-0.09,1.31l-1.06,0.97l-0.51,1.46l-3.47,2.93l-0.7,1.14l-2.43,2.12l-0.66,1.73l-1.84,2.35l-4.03,3.98l-4.76,0.59l-1.94,0.7l-1.43,1.18l-0.91,1.92l-0.69,6.33l-3.87,2.89l-4.24,5.13l-1.83,1.21l-3.69,0.63l-0.68,0.62l0.75,3.5l-0.3,1.76l-0.91,1.47l-8.89,7.74l-1.24,1.47l-0.65,1.92l0.21,2.25l2.67,4.92l0.55,1.88l-1.92,-1.43l-5.23,-5.13l-2.18,-3.95l-0.82,-3.98l-0.61,-1.08l-4.76,-4.04l-2.64,-4.38l-1.55,-1.17l-8.77,-2.31l-3.05,-0.05l-2.94,-1.48l-2.16,-0.02l-6.56,2.67l-4.47,1.0l-5.91,-1.11l-4.31,2.33l-3.04,2.75l-3.22,1.77l-4.15,-1.46l-2.41,-0.35l-3.13,0.68l-2.0,-0.52l-3.14,1.16l-3.78,0.19l-0.28,-1.73l0.97,-3.31l0.41,-3.68l1.62,-3.24l0.34,-1.91l-0.19,-1.9l-1.41,-4.08l-1.56,-2.58l-0.32,-1.38l0.32,-1.24l1.71,-3.39l1.63,-6.73l0.1,-10.11l1.85,-7.36l0.63,-1.33l2.04,-1.93l5.71,-2.26l3.81,-3.1l2.77,-1.58l0.87,-1.56l0.15,-4.76Z\",\n            name: \"Corrientes\"\n          },\n          \"AR-T\": {\n            path: \"M387.48,287.37l-0.86,0.2l-0.46,0.53l-1.35,3.98l-0.37,0.72l-0.8,0.47l-2.26,-0.06l-2.5,1.13l-1.19,0.1l-1.52,-0.63l-3.14,-2.25l-1.1,-0.01l-3.78,2.25l-2.98,2.59l-2.81,4.29l-4.12,-4.98l-1.83,-6.33l-2.58,-1.5l-0.91,-0.04l-2.04,0.81l-1.04,-0.98l-1.24,-4.07l-2.31,-2.06l-2.55,-10.74l0.42,-1.24l-0.27,-0.74l-2.12,-0.5l-3.7,-2.03l-2.56,-0.39l-1.15,-0.6l2.02,-3.67l3.32,-3.24l1.62,-3.26l5.71,-5.93l1.28,-2.04l0.75,-2.04l0.0,-3.42l0.79,-3.81l-0.14,-1.63l-0.99,-1.33l-2.04,-0.96l-5.15,-4.26l-2.24,-0.86l-1.86,-0.33l-1.22,-1.28l-0.13,-1.7l2.21,-5.72l0.29,-2.78l1.63,-2.05l0.34,-0.89l12.98,2.17l1.6,0.08l0.8,-0.33l0.82,-1.41l-0.03,-2.88l0.59,-2.06l0.16,-3.54l0.47,-0.72l3.8,1.28l1.71,-0.07l4.48,0.99l1.05,-0.1l2.53,-1.38l2.04,-0.65l1.56,3.45l1.14,1.14l8.69,3.41l1.99,-0.06l2.29,1.34l1.1,0.3l2.15,-0.3l2.38,-1.76l3.52,-0.97l3.16,0.64l9.17,-0.21l0.05,4.33l-1.77,6.18l1.13,8.6l-0.05,2.48l-2.64,-0.41l-0.97,0.31l-1.82,5.56l-1.85,0.33l-0.55,0.38l-2.43,8.88l-0.59,1.16l-0.85,0.58l-0.7,1.09l-1.35,5.26l-1.33,3.29l-1.04,1.46l-0.98,2.76l-0.43,0.54l-1.12,0.22l-1.09,0.88l-5.6,6.21l-0.01,0.52l0.98,0.72l1.59,0.4l1.61,0.84l-1.39,1.89l-2.45,0.45l-0.69,1.71l0.08,1.26l3.04,6.99Z\",\n            name: \"Tucum\\xe1n\"\n          },\n          \"AR-U\": {\n            path: \"M74.24,1095.36l0.74,-0.99l-0.19,-1.76l1.28,-1.3l0.36,-2.29l1.6,-0.22l2.51,-0.92l1.92,0.37l0.86,-0.79l0.13,-2.24l-0.36,-1.8l0.64,-2.09l-0.48,-1.17l-0.9,-0.61l-4.23,-1.59l-6.72,-0.72l-1.91,-0.78l-1.8,-1.41l-1.43,-1.9l-0.81,-2.23l1.61,-7.36l-0.39,-7.88l-0.91,-3.43l0.43,-1.87l-0.74,-1.65l0.21,-1.76l0.84,-1.35l1.26,-0.97l2.26,-1.06l0.34,-0.81l-1.63,-2.82l0.64,-3.54l-0.53,-1.18l-2.26,-1.95l-0.46,-1.16l0.34,-1.11l2.95,-3.55l0.86,-2.85l1.16,-0.92l1.11,0.03l1.19,2.06l1.6,0.72l0.82,-0.38l1.06,-1.43l3.67,-0.72l2.43,-1.46l0.75,-1.45l-0.15,-2.82l-0.91,-1.33l299.13,0.03l3.05,0.54l2.15,4.29l1.52,1.9l1.77,1.56l3.53,2.16l2.17,0.15l3.38,1.7l4.11,0.41l2.09,1.31l3.21,-0.76l1.98,0.46l0.51,0.6l-1.91,1.26l-3.8,5.1l-0.41,1.76l0.61,0.94l1.44,0.3l3.54,-0.25l1.92,0.84l3.17,-0.28l2.72,-1.0l8.42,0.52l1.2,-0.28l2.23,-2.35l0.41,-0.98l-0.33,-1.89l0.61,-0.95l-1.09,-3.03l-1.23,-0.56l-2.04,-0.24l-4.94,0.21l-2.31,-0.24l-1.2,-0.68l0.75,-0.36l6.59,-0.84l5.56,-2.82l3.67,-2.39l3.87,-1.59l2.63,-0.7l1.67,0.37l1.53,1.39l0.97,1.51l1.84,5.06l2.23,2.05l0.94,1.83l0.32,2.14l-0.31,5.49l0.81,8.17l-0.55,2.1l-1.86,4.44l0.52,2.04l-2.11,2.54l-2.82,1.18l-9.2,1.89l-3.8,0.15l-2.06,0.9l-1.51,0.25l-2.23,-1.85l-2.36,-3.01l-1.57,-0.86l0.01,-0.99l1.42,-5.08l0.84,-0.5l0.18,-0.58l-0.3,-0.48l-2.59,-2.01l-1.67,-0.81l-1.31,-2.38l-3.01,-1.4l-2.29,-0.58l-4.88,-0.04l-4.46,0.86l-2.25,1.39l-2.18,0.65l-3.08,3.43l-5.24,1.05l-1.3,0.87l-1.56,2.81l-1.38,1.36l-0.4,0.96l0.3,1.56l0.75,0.92l1.96,0.53l1.52,1.04l2.86,0.82l5.48,2.42l4.15,2.96l2.58,0.87l3.95,-0.17l3.26,2.15l1.28,-0.03l3.72,-1.34l0.51,1.24l-0.99,1.24l-5.32,3.18l-5.26,1.92l-9.01,2.37l-8.18,5.1l-2.33,2.43l-1.82,1.05l-0.53,1.39l0.49,3.05l-0.24,0.77l-5.18,4.47l-2.47,3.76l-3.02,2.34l-2.48,4.15l-0.23,0.76l0.09,3.3l1.14,2.59l-0.51,2.89l1.05,1.15l0.9,2.66l0.15,3.58l0.9,0.49l0.88,-0.05l-0.86,0.93l0.43,2.06l1.08,0.86l0.52,0.04l-1.03,1.02l-0.38,1.24l0.18,1.64l0.78,1.05l-2.73,0.8l-0.85,0.74l-0.57,2.06l0.17,2.35l1.6,1.85l0.16,1.59l0.48,0.41l-0.05,0.96l0.54,0.64l1.03,0.16l0.11,1.11l-0.7,0.99l-1.05,0.22l-0.46,0.84l-0.69,0.46l-0.2,0.81l-0.78,-0.01l-0.15,0.98l-0.9,0.66l-0.01,0.83l0.7,0.32l-0.38,0.76l0.11,0.45l0.77,0.39l0.76,-0.2l-0.09,0.68l-0.79,0.15l-0.52,-0.64l-0.53,-0.07l-1.83,0.54l-0.28,0.55l0.38,0.86l-0.5,0.01l-0.68,0.71l0.07,0.81l0.47,0.47l-0.45,0.59l-0.33,-0.65l-0.77,-0.31l-1.77,0.27l-0.49,0.56l-0.03,0.76l-3.26,1.11l-1.55,1.49l-1.03,-0.16l-2.02,1.41l-2.06,2.67l-0.46,1.24l-0.19,3.22l-1.25,1.09l-0.02,2.28l0.58,1.25l2.01,0.69l0.66,0.66l1.4,-0.27l1.36,0.72l1.24,-0.09l1.79,1.32l-1.76,1.49l-0.83,-0.02l-0.79,0.77l0.12,1.11l0.57,0.6l-1.01,-0.23l-0.47,0.46l-0.05,0.5l0.62,0.83l-1.3,0.77l-1.87,-0.13l-0.45,0.72l-2.55,-1.89l-2.3,0.22l-0.72,0.61l-0.1,-1.08l-0.95,-0.89l-2.26,0.29l-0.27,0.36l0.01,1.35l-1.74,0.51l-1.01,-0.3l-0.94,-1.07l-1.66,-1.15l-1.21,0.05l-2.9,-0.86l-2.75,0.42l-1.38,-0.19l-3.78,3.49l-1.36,-0.61l-1.76,-0.05l-6.8,2.6l-1.23,1.15l-0.19,1.55l0.3,0.41l2.65,0.77l-0.33,0.43l-4.98,-1.56l-0.45,0.39l-0.02,1.53l0.32,0.4l1.91,0.39l0.73,0.84l-0.04,0.73l-6.25,-0.06l-8.98,1.17l-2.94,1.26l-3.65,2.69l-2.51,2.58l-7.18,10.04l-2.06,1.77l-1.71,2.27l-1.2,0.81l-1.14,2.74l0.09,2.67l0.79,0.82l-1.22,0.81l-0.26,1.55l0.28,1.08l-1.35,0.16l-2.65,1.91l-0.92,2.16l-1.43,1.01l-1.93,3.08l0.48,1.4l-0.91,0.49l-1.03,1.65l-182.45,-0.03l1.07,-1.33l-1.34,-3.72l-1.28,-1.4l-4.03,-1.91l-0.22,-0.74l0.59,-1.58l0.05,-1.11l-2.2,-2.58l-0.06,-0.96l0.88,-1.62l-0.32,-1.24l0.22,-1.39l1.8,-2.7l-0.18,-0.66l-0.73,-0.71l0.52,-0.97l1.48,-0.82l3.23,-0.71l3.46,0.22l1.71,-0.28l1.82,-1.21l0.66,-1.28l-1.4,-3.8l5.29,-2.11l3.55,-4.04l-0.17,-2.11l-2.16,-3.46l-3.92,-2.85l-1.67,-1.93l-1.23,-3.16l-1.81,-3.35l-1.58,-1.64l-5.26,-0.35l-2.52,-2.28l-1.16,-0.31l-4.87,1.09l-5.37,-2.35l-2.7,-0.08l-0.23,-0.59l0.29,-2.8l-0.63,-2.89l0.43,-0.93l0.98,-0.26l2.67,0.96l6.14,1.03l1.21,-0.22l1.96,-1.68l0.92,-0.14l3.93,1.32l2.0,0.11l4.24,-1.66l1.82,-0.39l1.66,0.47l3.59,2.23l1.94,0.54l1.91,-0.33l1.84,-1.2l1.18,-1.8l0.32,-2.13l-0.43,-2.88l0.23,-0.96l1.85,-2.76l1.8,-0.22l0.88,-0.65l0.54,-1.36l0.01,-1.2l-1.52,-1.95l-0.77,-2.65l-0.79,-0.88l-1.18,-0.62l-3.51,-0.24l-6.86,-1.21l-9.23,0.06l-2.27,-0.5l-2.05,-0.01l-1.99,0.52l-1.67,0.03l-1.51,-1.25l-0.1,-0.62l2.2,-1.24l0.47,-1.28l-1.23,-2.62l0.14,-0.82l0.94,-1.57l0.09,-1.3l-1.77,-3.35l-0.56,-1.75l0.76,-0.53l1.87,-0.52l1.59,-1.29l4.18,-5.76l0.51,-1.19l0.0,-0.91l-2.62,-3.98l-2.01,-1.58l0.42,-1.78l-0.33,-1.56l-0.68,-0.11l-1.35,0.57l-0.5,-0.21l-0.11,-0.6l0.6,-1.49l3.39,-1.51l0.94,-0.94l0.27,-0.87l-0.49,-3.88l-4.09,-3.44l-3.22,-0.3l-0.19,-0.43l0.99,-1.43l-0.04,-1.37l-0.6,-0.95l-1.81,-0.79l-1.46,0.39l-0.35,-0.3ZM360.8,1184.57l-0.53,0.11l-0.08,-0.09l0.14,-0.11l0.47,0.09Z\",\n            name: \"Chubut\"\n          },\n          \"AR-R\": {\n            path: \"M78.12,963.56l5.64,0.33l3.1,0.69l4.93,0.08l8.74,3.09l2.89,0.31l3.81,-0.76l3.17,-1.65l4.88,-5.74l0.82,-2.29l-0.35,-1.4l-1.38,-1.87l-2.53,-1.55l-0.43,-0.7l-0.01,-1.26l2.2,-2.7l2.08,-0.64l0.79,-0.65l0.78,-2.14l1.14,-1.11l2.22,-0.98l2.29,-0.38l2.54,-1.55l4.16,0.66l1.89,-0.42l1.68,-0.8l3.11,-2.82l1.51,-0.51l0.83,0.29l1.59,1.53l1.75,1.1l1.93,-0.04l3.5,-0.97l4.06,0.05l1.28,-0.78l1.41,-3.7l1.64,-0.01l2.23,-1.37l0.62,-1.36l0.34,-5.25l2.96,-6.54l-0.03,-2.4l0.62,-2.25l0.3,-3.12l0.93,-2.4l0.2,-1.84l0.87,-1.18l11.81,-6.53l2.05,-0.25l4.21,0.42l1.22,-0.26l1.14,-0.68l5.84,-4.99l2.44,-3.17l1.27,-2.27l1.59,-1.46l2.7,-1.2l2.8,-1.74l3.12,-0.27l4.21,-2.0l2.86,-4.29l2.91,-1.81l1.65,-4.22l1.31,-0.96l0.94,-1.33l1.87,-0.76l1.55,-1.16l3.04,-4.46l2.68,-1.85l1.5,-0.32l1.49,-0.75l3.0,-3.35l2.22,-0.99l1.76,-1.46l1.21,1.11l1.6,0.68l1.85,-0.69l2.78,0.73l1.64,0.02l4.92,-1.15l0.31,-0.38l-1.06,-0.64l-0.17,-1.98l-0.61,-1.41l-5.85,-8.48l-3.05,-3.21l-0.19,-1.0l0.12,-57.28l17.51,2.19l1.84,0.88l2.55,2.56l1.59,3.27l0.05,2.24l-0.56,1.8l-1.01,1.37l-3.02,1.95l-1.58,1.42l-1.03,1.93l-0.25,2.45l0.18,1.09l0.82,2.27l0.63,0.63l1.61,0.74l1.72,-0.38l1.59,0.61l1.2,1.19l2.47,4.77l1.2,1.61l1.54,1.37l2.0,0.87l3.45,-0.2l1.21,-0.56l3.46,0.43l1.24,-0.33l2.0,-1.19l3.7,-0.68l1.71,0.41l0.35,0.51l0.31,2.55l1.08,2.82l3.1,3.89l5.33,2.6l2.06,0.41l1.41,0.97l3.19,0.63l3.09,2.01l2.49,0.54l1.53,0.69l1.32,1.09l0.99,1.38l0.86,3.96l0.81,1.2l7.79,1.73l2.07,0.03l5.92,-0.95l11.44,1.34l4.07,1.42l2.49,0.36l1.74,1.09l2.52,0.15l1.49,0.98l1.97,-0.45l2.62,-1.68l1.09,-0.08l2.24,0.4l3.89,1.44l2.78,1.45l2.43,-0.74l2.35,0.07l6.62,-1.15l6.35,0.0l1.38,0.79l3.13,-0.46l1.63,0.39l0.77,-0.35l12.47,2.17l3.19,0.09l14.59,5.01l4.03,2.34l2.13,0.34l4.47,4.77l1.12,0.52l3.05,0.64l1.6,0.82l1.18,1.06l1.93,2.66l1.73,0.78l5.83,3.68l1.4,1.25l1.84,0.69l3.68,0.35l0.05,73.33l0.35,0.4l9.22,1.06l3.43,1.27l3.5,2.92l2.4,2.82l2.28,1.62l2.67,2.48l2.27,4.05l0.25,0.96l-2.54,2.25l-3.11,0.76l-5.38,2.56l-1.98,0.4l-9.78,-0.37l-3.06,0.7l-4.32,-0.36l-6.41,0.36l-7.06,-0.11l-1.94,-0.41l-1.83,-0.88l-4.6,-3.99l-2.01,-0.82l-2.13,-0.09l0.48,-1.39l-0.52,-0.89l-3.53,0.83l-1.68,-0.4l-10.93,-5.26l-6.14,-1.51l-4.24,-1.97l-4.13,-0.87l-2.25,-0.16l-3.13,0.29l-2.23,-0.38l-0.01,-0.31l0.59,-0.39l1.01,-0.29l0.32,0.06l-0.11,0.52l0.43,0.48l1.09,-0.36l3.59,-0.15l0.59,-0.82l-0.39,-1.11l-1.83,-0.88l0.91,-0.85l-0.06,-0.63l-1.24,-0.76l-4.26,-0.93l-2.66,0.28l-1.7,0.67l-0.53,0.4l0.2,0.71l2.49,-0.19l-0.33,0.74l0.51,0.78l-3.66,-0.08l-5.15,3.65l-0.53,0.62l-0.14,1.75l-1.3,2.6l-0.56,2.59l0.03,2.25l1.28,9.16l1.8,6.37l0.11,1.74l1.97,6.38l2.52,2.53l0.61,1.5l-0.46,3.2l-1.6,4.26l0.49,2.19l1.26,2.98l-0.07,1.79l-2.66,6.13l-0.7,2.37l0.21,2.05l0.37,0.79l-2.57,-0.45l-299.79,-0.03l-0.31,-0.44l0.27,-2.53l-0.89,-3.89l-2.83,-4.42l-0.09,-2.02l-0.54,-1.93l-2.49,-3.27l-0.0,-1.33l2.69,-1.93l0.58,-1.33l-1.56,-2.92l0.38,-4.05l-1.09,-3.74l0.07,-1.6l1.3,-4.67l-0.71,-3.66l0.8,-0.74l0.8,-4.82l0.03,-1.31l-0.63,-1.94Z\",\n            name: \"R\\xedo Negro\"\n          },\n          \"AR-S\": {\n            path: \"M528.52,529.21l1.07,-1.61l0.24,-1.8l-0.37,-0.81l-0.98,-0.87l-0.88,-4.71l-1.39,-1.62l-3.19,-2.3l-1.27,-2.26l-1.61,-4.88l-2.75,-1.64l-3.46,-3.53l0.28,-5.04l1.27,-3.64l-1.43,-2.79l-0.32,-3.61l0.25,-3.26l-0.91,-1.91l0.54,-0.91l3.8,-3.26l0.88,-1.84l11.55,-40.84l0.4,-2.9l-2.22,-3.25l-9.94,-10.6l-0.34,-1.79l12.12,-73.96l6.97,-44.56l127.65,-0.05l-0.41,1.59l-1.83,2.36l-1.27,0.8l-1.31,0.35l-2.71,0.09l-0.93,0.4l-0.75,0.77l-0.72,1.71l-0.15,1.87l0.38,2.64l-0.4,2.85l1.11,3.81l-1.1,6.31l0.17,4.71l-0.52,1.71l-2.0,4.05l0.07,2.21l-0.52,2.88l-1.89,3.66l-0.12,4.81l-0.64,1.16l-2.68,1.51l-3.77,3.07l-4.37,1.56l-2.63,1.69l-1.7,2.65l-1.62,5.89l-0.29,1.75l-0.09,10.0l-1.6,6.62l-1.68,3.31l-0.4,1.48l0.41,1.85l1.54,2.52l1.38,4.0l0.16,1.72l-0.3,1.61l-1.62,3.25l-0.43,3.76l-0.99,3.43l0.76,4.66l1.7,3.79l-0.45,6.31l-0.95,2.41l-0.64,4.66l-2.64,4.65l-5.49,7.31l-7.19,11.65l-2.83,2.87l-1.37,4.11l-3.15,4.48l-1.8,0.94l-0.87,1.18l-1.39,0.98l-4.42,5.8l-2.74,2.57l-2.55,1.13l-5.88,0.11l-2.16,0.92l-0.39,1.02l0.11,1.76l-1.01,4.22l-2.06,3.46l0.11,2.8l2.3,3.8l0.17,0.91l-2.03,4.32l0.23,4.96l-1.33,5.01l0.09,5.02l-1.64,4.31l-0.04,2.08l2.74,5.02l0.33,4.55l1.06,3.91l2.44,4.83l1.6,1.84l1.55,4.2l2.7,3.23l4.64,2.65l2.0,2.47l2.41,1.65l0.71,0.9l-0.38,1.65l-2.53,1.52l-0.51,3.47l-2.63,2.23l-0.75,3.98l-1.79,3.7l-1.3,0.95l-1.81,0.42l-0.98,-0.12l-1.03,-0.41l-1.54,-1.42l-2.17,-1.37l-4.66,-0.18l-3.07,-1.17l-1.59,0.1l-1.76,0.64l-0.85,0.85l-0.53,1.34l0.35,1.62l-1.46,2.03l-33.62,35.39l-50.72,0.27l41.76,-63.64l1.12,-1.37l1.77,-0.12l1.7,-1.09l1.67,-1.62l0.71,-1.28l0.43,-2.64l-0.04,-3.07l1.06,-2.96l-0.02,-1.4l-0.56,-1.2l-1.53,-1.33l-2.41,-4.45l-0.9,-0.51l-1.81,-0.38Z\",\n            name: \"Santa Fe\"\n          },\n          \"AR-P\": {\n            path: \"M514.39,40.24l-0.21,1.81l0.74,0.7l-0.36,1.2l0.87,0.54l0.67,1.3l1.25,1.36l0.44,1.09l1.46,1.16l2.17,2.91l1.32,2.44l0.05,2.06l2.27,2.69l5.08,3.04l1.37,1.79l2.02,1.43l0.68,0.89l0.35,2.22l0.65,0.62l2.52,1.78l3.27,0.42l2.23,2.29l1.39,0.42l-0.22,1.0l0.79,0.76l0.54,1.19l2.31,0.5l2.41,1.56l1.68,0.23l2.74,1.19l1.27,2.08l1.22,0.4l1.29,1.14l1.6,0.05l1.74,1.62l1.23,0.6l0.13,0.75l-0.46,2.14l1.14,1.63l1.27,0.76l0.66,0.82l1.6,3.02l1.92,1.36l1.9,-0.4l4.46,2.74l4.88,0.02l1.75,1.01l2.62,-0.06l1.43,0.62l0.99,1.84l1.91,0.18l2.33,1.42l2.79,0.53l1.95,-0.01l1.92,1.35l5.47,0.53l3.38,-0.1l3.28,-0.98l1.5,0.08l16.17,10.39l2.84,3.06l3.29,1.0l1.3,1.12l1.99,1.0l0.76,1.4l1.04,0.46l2.07,1.86l1.86,2.73l1.39,0.5l0.69,0.71l1.09,0.26l0.92,0.85l1.95,0.67l4.01,2.31l2.09,0.42l1.7,1.4l1.5,0.39l8.59,6.32l3.94,0.52l1.42,1.25l9.92,1.88l1.4,0.91l4.82,5.84l1.37,0.06l3.09,-2.46l0.58,-0.02l3.89,2.6l0.76,0.84l0.46,-0.02l3.04,1.49l1.83,0.0l0.86,1.46l5.03,0.5l2.6,2.78l2.53,1.68l1.48,3.16l0.98,1.29l1.29,0.86l1.47,4.02l2.77,2.1l0.81,1.1l-0.74,5.51l-1.51,0.91l-0.46,1.35l-1.81,-0.15l-0.42,0.25l-0.44,1.55l-2.77,0.7l-1.56,1.99l0.28,0.85l0.91,0.59l-1.62,1.44l-1.52,0.7l-0.03,1.34l0.62,1.51l-1.17,1.03l-2.07,1.04l-0.0,0.96l1.05,0.67l-0.42,0.72l-1.54,1.22l-0.46,0.87l0.25,0.56l1.8,0.51l-0.47,0.83l-5.15,3.73l-4.51,1.92l-0.56,0.64l-0.81,2.54l-1.14,-0.65l-0.53,0.43l0.23,1.11l1.8,1.46l-2.75,1.39l-0.01,3.33l-2.03,3.99l0.26,1.06l0.91,0.82l-0.85,1.07l-0.53,2.56l0.27,1.0l1.28,1.02l0.65,1.03l-1.08,1.01l0.57,1.74l-2.13,-0.38l-0.36,0.28l-0.47,1.61l-0.12,3.66l-1.52,0.25l-0.23,0.93l0.46,0.81l-0.29,0.3l-1.54,-0.33l-0.99,0.43l-0.52,1.5l1.5,1.73l-1.06,0.29l-0.81,-0.37l0.01,-0.99l-0.57,-0.57l-1.98,0.14l-1.3,-0.64l-0.77,-1.71l-3.1,-2.68l-1.13,-2.32l-3.77,-2.31l-1.75,-2.18l-0.85,-0.39l-1.46,-0.09l-2.28,-2.67l-3.17,-1.63l-3.17,-3.88l-2.26,-1.7l-5.13,-1.95l-2.73,-2.62l-1.24,0.15l-1.47,1.33l-2.49,0.96l-0.7,0.04l-1.56,-0.59l-1.22,0.23l-1.39,-1.61l-0.12,-1.42l-1.09,-1.76l-0.09,-1.93l-0.53,-0.76l-2.23,-1.0l-1.58,-0.03l-1.49,-0.43l-1.44,0.09l-2.41,-1.09l-1.76,0.01l-0.38,-5.51l-0.41,-0.36l-1.03,-0.14l-2.99,-4.16l-1.88,-1.78l-1.96,-0.95l-0.21,-1.68l-0.41,-0.63l-3.39,-1.88l-1.2,-1.58l-2.19,-0.6l-0.97,-1.78l-1.67,-0.4l-3.25,-1.48l-1.34,0.36l-0.55,-1.91l-1.3,-1.75l-0.8,-1.99l0.58,-1.01l-0.6,-1.42l-1.03,-0.52l-1.35,-0.18l-0.63,-1.82l-1.8,-0.99l0.27,-1.01l-1.03,-1.94l-2.93,-2.11l-1.69,-2.28l-1.64,-2.96l-1.38,-0.68l-1.45,0.1l-1.54,-0.95l-2.31,-0.74l-1.29,-1.21l-4.39,-2.61l-1.33,-0.48l-1.71,-1.7l-2.56,-1.59l-6.32,-5.22l-0.74,-0.22l-0.68,0.39l-0.43,-0.26l-1.1,-1.33l0.37,-1.81l-2.22,-3.47l-0.12,-1.51l-1.19,-0.58l-1.69,-2.31l-2.58,-0.99l-3.39,-0.16l-2.5,-0.84l-2.27,-0.09l-4.72,-4.38l-1.09,-2.2l-2.91,-0.37l-0.73,0.25l-2.22,-4.15l-3.34,-2.67l-5.64,-1.14l-3.65,-2.53l-1.12,-1.64l-0.93,-0.72l-4.4,-0.85l-9.46,-3.61l-0.1,-77.84l1.74,0.39l0.18,1.17l0.97,0.34l0.88,1.0l0.28,0.65l-0.87,1.64l0.15,0.9l1.8,1.04l0.87,0.16Z\",\n            name: \"Formosa\"\n          },\n          \"AR-Q\": {\n            path: \"M83.77,924.54l-2.81,-2.84l-0.87,-1.49l0.49,-1.18l-0.18,-1.17l0.61,-2.55l-0.51,-1.15l0.41,-0.48l1.27,-0.12l2.04,0.89l1.72,0.28l0.45,-0.29l0.59,-2.22l-0.46,-2.46l0.83,-0.79l2.07,-4.59l-0.3,-1.19l-2.17,-1.91l-0.59,-1.17l-0.34,-2.31l-0.99,-3.28l0.9,-2.73l-1.0,-1.76l0.08,-2.05l0.9,-1.46l2.83,2.48l0.93,0.22l2.13,-0.35l1.62,0.11l1.12,-1.03l0.22,-2.29l-1.81,-1.53l3.44,-4.98l-0.68,-1.92l0.04,-0.79l2.41,-2.02l0.51,-1.54l0.46,-4.41l-0.48,-7.16l-0.83,-3.95l0.67,-4.61l0.65,-1.19l1.23,-1.11l4.13,-2.02l2.0,-2.03l3.66,-0.64l4.62,-2.71l3.54,0.22l1.31,-0.28l0.8,-0.72l0.79,-1.4l1.76,-1.07l0.01,-0.78l-0.55,-0.95l0.08,-0.72l2.04,-3.04l0.2,-1.2l-0.77,-2.29l-4.56,-3.55l-0.99,-1.71l-2.05,-9.85l0.5,-3.53l-0.67,-3.14l0.7,-1.14l0.03,-0.78l-1.41,-1.97l-1.04,-2.97l-1.19,-2.0l-0.37,-2.3l-1.71,-3.05l-2.31,-6.85l-0.26,-3.26l0.72,-1.14l1.69,-1.18l0.43,-0.65l-0.03,-0.84l-0.59,-1.28l1.07,-4.13l-0.3,-1.35l-2.04,-2.7l-1.16,-2.43l-0.46,-2.43l2.63,-3.95l-0.02,-3.22l0.33,-0.98l2.1,-1.41l0.06,-0.67l-1.66,-1.31l-0.49,-0.7l-0.45,-2.55l-0.48,-0.7l-1.17,-0.68l0.93,-0.05l0.82,-0.52l0.52,-1.17l-0.38,-0.96l-1.1,-0.68l0.4,-2.01l-0.38,-0.66l-1.14,-0.69l-0.09,-0.57l0.82,-1.25l1.16,-2.89l0.25,-3.61l0.46,-0.39l0.63,0.06l1.63,0.92l1.27,-0.79l-0.52,-6.29l0.33,-2.3l0.72,-1.63l1.2,-0.28l1.85,0.39l1.77,-0.72l0.71,-1.09l0.31,-1.87l0.28,-0.53l0.53,-0.16l3.83,1.68l4.0,-0.97l0.75,-0.97l-0.01,-1.35l-1.03,-2.22l0.87,-1.72l0.03,-1.58l2.09,-1.0l1.72,-2.07l0.91,-0.54l1.0,-2.62l1.27,0.02l2.03,1.05l1.47,-0.01l1.87,-1.44l2.28,1.78l0.52,1.24l-0.03,2.59l-0.79,1.03l-0.27,0.98l0.23,1.92l1.03,2.21l0.55,0.57l1.01,0.32l1.61,-1.06l1.21,0.59l2.76,8.16l1.61,2.62l0.9,0.57l3.48,1.07l1.53,1.54l0.86,1.47l2.59,1.81l1.49,3.73l0.72,0.92l1.88,1.5l2.77,1.24l0.54,0.65l0.37,2.76l-0.26,1.98l-1.1,1.42l-0.15,0.79l0.34,0.84l3.24,3.91l1.62,1.39l3.74,2.17l4.23,1.11l2.51,0.15l7.91,-1.38l1.78,0.14l2.84,1.21l1.92,0.35l2.84,1.2l1.13,1.37l0.97,3.89l0.88,1.75l1.73,1.17l2.32,0.69l2.4,0.28l5.74,-0.48l0.75,0.33l1.67,1.8l1.16,0.71l1.9,0.0l1.96,0.73l2.98,0.04l0.71,0.27l1.96,3.29l1.64,1.42l7.85,1.02l-0.12,57.49l0.36,1.42l3.02,3.15l5.81,8.44l0.5,1.13l0.33,2.35l-3.6,0.85l-1.41,0.0l-2.95,-0.75l-1.93,0.68l-1.1,-0.55l-0.93,-1.04l-1.08,-0.11l-1.83,1.52l-2.32,1.07l-2.88,3.26l-1.37,0.69l-1.52,0.32l-2.9,2.0l-3.06,4.48l-1.38,1.02l-1.9,0.76l-1.13,1.49l-1.34,0.99l-0.56,0.87l-1.08,3.33l-2.88,1.78l-2.83,4.26l-3.88,1.81l-3.22,0.3l-2.88,1.78l-2.76,1.24l-1.78,1.64l-1.32,2.33l-2.36,3.07l-2.57,1.92l-3.11,2.92l-2.01,0.81l-4.14,-0.42l-2.28,0.29l-12.07,6.67l-1.11,1.53l-0.21,1.89l-0.94,2.46l-0.3,3.16l-0.63,2.27l0.05,2.28l-1.31,2.41l-1.66,4.17l-0.35,5.29l-0.44,0.98l-1.85,1.12l-1.96,0.18l-0.54,0.79l-0.97,3.03l-0.92,0.51l-3.8,-0.1l-3.63,0.99l-1.65,0.02l-3.02,-2.5l-1.3,-0.42l-1.94,0.66l-3.11,2.82l-1.53,0.71l-1.58,0.36l-4.35,-0.64l-2.66,1.55l-2.23,0.4l-2.43,1.08l-1.38,1.36l-0.71,2.03l-2.84,1.26l-0.73,1.21l-1.33,1.17l-0.43,1.17l0.12,1.19l0.57,0.97l2.6,1.62l1.24,1.68l0.26,0.97l-0.19,1.03l-1.1,1.68l-2.82,2.95l-0.81,1.46l-3.38,1.86l-3.53,0.72l-2.71,-0.28l-8.83,-3.11l-5.02,-0.09l-3.06,-0.68l-5.73,-0.34l0.71,-2.35l0.0,-1.27l-0.91,-2.36l-1.8,-2.46l-1.96,-6.73l3.57,-3.67l0.99,-1.74l0.28,-2.28l-0.61,-1.44l0.92,-1.72l1.9,-5.23l3.04,0.32l0.55,-0.56l1.83,-3.89l0.18,-2.16l-0.63,-1.04l-1.29,-0.45l-1.11,0.82Z\",\n            name: \"Neuqu\\xe9n\"\n          },\n          \"AR-N\": {\n            path: \"M796.09,266.4l2.14,-0.18l0.73,0.27l1.8,3.25l4.93,2.04l1.74,-1.34l1.59,-1.81l1.16,-0.86l2.12,-0.74l0.84,-0.92l0.54,-1.35l-0.1,-1.33l0.68,-1.66l-1.35,-3.43l1.73,-0.63l1.02,-2.62l3.36,-0.24l0.53,-0.96l0.36,-3.1l1.18,-1.58l1.53,-0.7l2.22,-0.3l2.11,-1.13l0.91,0.01l2.56,1.01l3.11,-0.17l0.87,-0.84l0.14,-1.24l-0.58,-1.78l0.23,-0.61l2.8,-2.71l2.94,-0.46l1.02,-0.47l1.16,-1.59l1.36,-3.94l0.62,-0.57l0.94,-0.23l1.86,0.0l1.07,0.51l1.24,-1.12l0.62,-2.5l-0.38,-3.31l0.98,-1.46l1.29,-1.03l1.83,-2.25l0.69,-3.83l0.91,-2.18l-0.05,-3.34l1.15,-1.86l-0.13,-0.91l-0.97,-1.57l0.9,-2.99l0.04,-1.19l-0.89,-3.93l0.34,-0.38l1.5,-0.2l0.63,-0.92l-0.34,-3.25l1.11,-2.25l0.12,-1.22l-1.37,-2.03l-1.13,-3.99l0.01,-1.05l1.59,-0.13l0.92,-0.5l0.05,-1.36l-0.66,-1.99l1.81,-0.04l0.56,1.62l1.24,-0.01l1.48,0.82l0.47,0.65l0.31,1.93l0.82,0.56l0.66,-0.39l0.22,-0.66l-0.19,-1.31l1.35,-1.07l0.41,-1.82l1.88,0.14l0.95,-1.08l1.22,-0.34l0.85,0.59l0.85,1.48l0.59,0.03l0.55,-0.94l2.15,0.18l0.36,-0.49l-0.86,-2.0l0.91,0.3l0.91,-0.1l1.97,-1.83l-0.8,2.4l0.18,1.1l1.2,1.35l0.64,0.09l0.54,-0.54l-0.09,-1.62l1.19,0.87l1.09,-0.39l1.19,0.51l0.47,0.58l0.75,3.0l0.44,0.28l1.04,-0.18l1.47,-0.88l0.26,0.24l0.9,2.59l-0.38,1.06l0.13,0.94l1.91,2.61l-0.06,3.65l0.53,2.53l-0.16,2.03l3.13,3.32l1.4,4.67l3.0,4.48l0.21,1.8l-0.48,1.44l-1.89,2.57l-0.45,1.55l0.51,5.94l-1.08,1.25l0.41,1.56l-0.65,2.22l0.13,3.57l-0.24,0.73l-0.96,0.34l-0.36,0.8l0.35,1.0l0.84,0.5l-0.24,1.48l0.93,0.47l0.98,4.4l-0.08,1.39l-2.48,5.67l-1.51,0.82l-0.18,2.65l-1.09,1.14l0.44,0.95l-0.39,0.8l-0.23,0.08l-0.9,-1.52l-0.77,-0.43l-0.83,0.42l-0.72,1.87l-1.5,-0.9l-1.0,0.28l-0.31,0.94l0.22,0.91l-0.5,0.12l-0.78,-0.39l-0.6,0.17l-0.64,1.23l-3.17,3.38l-1.41,0.16l-0.97,-0.33l-0.07,-1.09l-1.0,-0.73l-0.55,0.12l-2.51,5.33l0.03,1.29l-1.35,0.51l-0.95,1.7l-0.63,0.02l-1.69,-1.58l-0.44,-0.07l-0.21,2.25l-0.44,0.57l-0.27,-1.32l-0.67,-0.7l-2.71,-0.11l-0.74,0.18l-0.46,0.79l0.72,1.62l-3.81,1.2l-1.01,-1.38l-1.41,-0.22l-0.8,0.83l-0.92,2.29l-0.5,0.39l-0.36,-0.97l-0.91,-0.02l-0.43,0.48l-0.17,1.51l-0.35,0.24l-1.75,-0.02l-1.89,0.59l-0.4,-0.45l0.2,-0.75l-0.26,-0.54l-0.47,-0.21l-0.72,0.22l-1.16,1.12l-0.73,3.07l-1.84,0.34l-0.64,0.54l0.08,1.8l-0.63,3.38l-0.88,0.36l-2.27,1.95l-0.88,0.12l-2.44,-0.83l-1.02,0.38l-0.18,0.56l0.45,0.79l1.44,1.29l0.51,0.86l-1.24,-0.5l-1.79,0.19l-0.63,0.37l-0.4,1.34l-1.5,-1.01l-0.99,-0.22l-1.08,0.46l-1.18,1.6l-1.53,1.16l-2.51,-0.15l-0.84,0.88l-0.3,1.47l-1.92,0.79l-0.17,1.84l-2.48,2.98l-1.24,0.3l-0.67,-0.55l-0.93,0.22l-0.83,1.5l-0.99,0.79l-0.67,1.04l-0.41,-1.05l-1.33,-0.43l-1.07,1.07l-4.69,-3.45l-1.12,-1.67l-0.21,-1.44l-0.64,-1.39l-2.52,-3.11l-0.57,-5.87l-1.01,-3.47l-6.5,-12.87l0.01,-2.06l0.72,-2.08l1.38,-1.18Z\",\n            name: \"Misiones\"\n          },\n          \"AR-L\": {\n            path: \"M460.47,648.71l-0.2,224.1l-3.55,-0.34l-1.61,-0.62l-1.3,-1.19l-5.89,-3.72l-1.58,-0.68l-1.89,-2.61l-1.37,-1.21l-1.78,-0.9l-3.85,-0.99l-4.61,-4.87l-2.25,-0.39l-4.0,-2.33l-14.69,-5.04l-3.28,-0.11l-12.56,-2.19l-0.98,0.36l-1.46,-0.41l-3.07,0.45l-1.3,-0.77l-6.57,0.01l-6.61,1.15l-2.45,-0.05l-2.27,0.72l-2.44,-1.38l-3.97,-1.47l-2.5,-0.44l-1.37,0.13l-2.66,1.7l-1.55,0.38l-1.34,-0.95l-2.59,-0.16l-1.65,-1.06l-2.5,-0.37l-4.2,-1.45l-11.52,-1.34l-6.05,0.96l-1.92,-0.03l-7.47,-1.66l-0.4,-0.67l-0.32,-2.37l-0.59,-1.72l-1.11,-1.57l-1.48,-1.24l-1.71,-0.79l-2.41,-0.51l-3.1,-2.01l-3.24,-0.66l-1.32,-0.92l-2.14,-0.44l-5.1,-2.45l-2.92,-3.64l-1.19,-3.28l-0.16,-1.98l-0.69,-0.98l-2.23,-0.52l-3.82,0.7l-2.15,1.25l-1.0,0.25l-3.35,-0.44l-1.32,0.57l-3.27,0.19l-1.57,-0.7l-2.55,-2.79l-2.45,-4.74l-1.38,-1.39l-2.05,-0.79l-2.02,0.3l-1.29,-0.88l-0.74,-2.04l0.07,-3.21l0.91,-1.65l4.54,-3.29l1.16,-1.6l0.6,-1.93l-0.06,-2.62l-0.63,-1.77l-1.11,-1.79l-2.7,-2.71l-2.15,-1.02l-17.67,-2.21l0.03,-37.29l-0.36,-28.83l-1.64,-7.67l0.47,-5.34l0.58,-0.6l0.74,-0.31l142.32,0.09l0.66,-0.52l0.05,-50.79l76.1,0.02Z\",\n            name: \"La Pampa\"\n          },\n          \"AR-M\": {\n            path: \"M210.35,500.36l0.89,12.38l0.38,0.58l0.75,0.34l9.06,-0.12l2.35,-1.19l7.96,-5.16l1.53,-1.19l1.46,-1.7l6.4,-0.53l1.76,-0.77l2.13,-1.58l4.9,-1.21l1.43,0.03l1.46,0.89l1.53,1.72l0.52,1.78l2.93,1.79l2.14,2.35l4.37,0.68l6.5,-1.32l3.62,-0.08l0.99,-0.54l0.91,0.17l3.12,2.07l0.14,2.0l1.27,4.64l1.86,1.76l0.01,1.23l0.84,1.5l1.97,8.46l0.63,1.29l1.35,1.31l0.35,1.67l0.59,0.98l-0.71,1.38l-0.41,1.87l0.52,3.23l-0.68,0.58l-0.25,0.87l1.3,3.51l-0.28,1.96l0.54,1.71l0.36,4.49l-0.27,4.09l0.58,1.83l0.04,1.9l1.22,3.14l-0.09,3.29l0.46,1.23l4.32,6.94l1.21,1.34l1.4,4.43l1.07,1.79l1.62,5.02l3.9,3.02l0.48,0.8l0.54,2.44l1.91,1.69l0.65,2.28l0.73,1.2l-0.53,5.82l-0.43,0.51l-0.75,-0.36l-0.61,0.17l-1.04,2.1l0.46,5.93l0.45,0.92l-0.45,1.31l1.14,1.25l0.33,0.83l0.3,4.39l1.58,5.23l2.18,2.26l5.32,9.87l1.15,3.6l-0.19,4.39l0.97,3.49l1.06,2.28l-0.91,3.69l0.9,1.59l-0.61,1.91l0.61,3.94l-0.54,3.2l-0.18,4.55l-1.56,3.94l-0.52,5.16l-1.84,8.12l-0.36,3.74l-0.57,2.4l0.19,2.31l-72.86,-0.03l-1.05,0.4l-0.86,0.84l-0.61,5.85l1.64,7.67l0.36,28.78l-0.03,37.19l-7.51,-0.94l-1.35,-1.19l-1.36,-2.65l-0.86,-0.86l-1.0,-0.35l-2.94,-0.03l-1.92,-0.73l-1.89,-0.01l-2.47,-2.33l-1.05,-0.5l-5.92,0.46l-4.39,-0.87l-1.44,-0.93l-0.78,-1.53l-1.06,-4.09l-1.35,-1.6l-3.04,-1.3l-1.9,-0.34l-2.86,-1.22l-2.02,-0.18l-8.02,1.38l-2.29,-0.14l-4.06,-1.06l-3.54,-2.06l-1.52,-1.29l-3.37,-4.36l1.19,-1.72l0.14,-0.7l0.19,-1.78l-0.47,-3.0l-0.87,-0.96l-2.73,-1.21l-1.73,-1.38l-0.58,-0.73l-1.01,-3.01l-0.56,-0.84l-2.69,-1.92l-0.79,-1.39l-1.61,-1.62l-4.3,-1.56l-1.48,-2.4l-1.26,-3.25l-1.16,-4.39l-0.52,-0.79l-0.95,-0.69l-0.89,-0.12l-1.72,1.03l-1.14,-1.23l-0.7,-2.94l1.04,-1.85l0.03,-2.96l-0.7,-1.58l-2.45,-1.97l0.79,-2.14l1.07,-1.29l0.33,-0.9l-1.46,-3.98l0.3,-1.3l0.85,-0.81l0.16,-0.63l-0.41,-0.69l-1.26,-0.08l0.02,-1.43l2.84,-2.95l-0.25,-1.81l-2.66,-6.23l0.42,-2.6l-0.26,-3.06l0.4,-2.31l-1.68,-2.33l-1.12,-3.85l1.25,-0.51l0.66,-0.94l-0.68,-1.47l-1.6,-0.93l-3.75,-0.78l-0.68,-1.62l1.44,-2.28l7.19,-2.43l0.83,-3.67l-0.18,-3.65l0.83,-3.56l3.46,-7.89l-0.16,-0.88l-1.51,-1.87l1.66,-0.69l1.1,-1.74l0.49,-4.01l0.61,-1.62l2.69,-2.37l0.82,-1.12l1.58,-3.49l2.17,-1.78l0.43,-1.12l-0.26,-4.13l0.27,-0.97l0.61,-0.56l2.15,-0.38l3.73,0.7l0.48,-0.82l2.99,-1.23l0.4,-0.74l-0.38,-1.47l-1.6,-3.44l0.8,-5.46l-0.03,-2.52l-0.74,-1.64l-1.65,0.03l0.54,-3.99l-0.77,-4.96l2.45,-2.42l-0.06,-1.01l-1.53,-2.33l0.99,-3.66l-0.24,-1.52l0.22,-0.43l1.44,-0.77l0.47,-3.73l1.63,-2.18l0.38,-0.96l-0.04,-1.0l-0.82,-1.87l-0.36,-2.71l-1.24,-1.5l-3.15,-1.41l-1.79,0.22l-2.13,2.64l-0.72,0.14l-1.79,-3.5l-1.59,-1.28l-0.95,-1.39l0.78,-3.9l-0.83,-2.62l0.76,-1.16l1.38,-0.33l0.9,-0.66l1.15,-3.84l0.75,-1.36l0.05,-0.82l-0.81,-0.78l-1.8,-0.84l-1.44,-1.34l-2.33,-2.71l-0.67,-1.41l-1.13,-6.44l0.3,-1.38l1.39,-0.21l0.19,-0.6l-0.85,-1.25l-0.12,-2.78l-0.57,-1.16l-2.53,-1.63l-0.71,-1.34l0.13,-3.59l-0.39,-0.66l6.86,-1.03l1.73,-0.02l3.28,0.84l8.79,-2.02l5.65,-0.37l1.0,-0.62l0.64,-0.86l0.26,-1.31l-0.15,-2.83l0.8,-1.34l4.39,-1.58l2.72,-1.74l3.53,-0.08l2.19,0.4l1.35,-0.27l0.89,-0.72l1.01,-2.08l1.56,-0.55l1.38,-1.51l1.48,0.22l0.91,0.73l1.79,2.03l1.09,1.78l1.64,1.23l1.67,0.19l2.77,-0.44Z\",\n            name: \"Mendoza\"\n          },\n          \"AR-J\": {\n            path: \"M309.16,489.83l-10.9,0.57l-1.84,-0.38l-1.45,-0.98l-2.2,-0.47l-2.07,0.5l-3.73,0.24l-4.88,-0.99l-1.29,0.6l-0.92,1.13l-0.26,0.9l0.26,3.51l0.37,1.26l-0.97,3.81l0.15,9.26l-2.75,-1.82l-1.32,-0.28l-1.09,0.57l-3.61,0.07l-6.51,1.31l-4.02,-0.66l-1.85,-2.2l-2.8,-1.67l-0.44,-1.67l-1.7,-1.92l-1.67,-1.03l-1.79,-0.09l-5.11,1.24l-2.34,1.68l-1.53,0.66l-6.49,0.56l-3.12,2.97l-7.93,5.14l-2.21,1.11l-8.7,0.07l-0.42,-0.3l-0.97,-12.59l-0.69,-0.43l-2.78,0.46l-1.9,-0.4l-3.76,-4.62l-1.13,-0.88l-1.53,-0.33l-1.1,0.37l-0.99,1.3l-1.64,0.61l-1.16,2.24l-0.5,0.41l-1.01,0.23l-2.21,-0.4l-3.79,0.11l-2.85,1.79l-4.48,1.62l-1.1,1.6l-0.12,4.27l-1.46,1.11l-5.22,0.24l-8.74,2.01l-3.12,-0.84l-1.84,0.02l-7.33,1.18l-0.57,-0.65l-2.17,-0.82l-0.31,-1.05l0.09,-1.86l-0.8,-2.14l0.42,-1.92l-0.95,-0.95l-0.19,-1.67l-1.11,-1.34l-0.09,-0.58l0.39,-0.34l2.75,0.84l1.42,-0.17l0.52,-0.64l0.36,-1.78l1.14,-1.97l-0.1,-1.17l-0.61,-1.05l-1.92,-1.81l-0.92,-0.49l-5.05,-0.57l-1.96,-2.3l-0.56,-2.17l0.04,-2.31l-1.86,-2.38l-2.76,-5.68l0.49,-6.66l1.09,-3.41l-0.63,-2.91l0.99,-1.98l0.46,-4.49l2.46,-3.67l0.29,-0.2l0.53,0.24l0.5,1.97l0.65,0.81l1.07,-0.07l1.48,-1.57l0.43,-1.56l1.37,-2.33l0.64,-0.3l1.97,0.26l0.82,-0.56l-0.14,-0.85l-2.58,-2.58l-0.55,-1.44l0.88,-6.72l0.62,-1.68l1.31,-1.99l0.03,-2.68l1.82,-3.99l0.83,-3.79l0.82,-1.27l2.05,-1.34l0.44,-1.17l-0.2,-1.24l-1.12,-1.84l0.01,-0.5l0.8,-0.35l3.57,1.67l1.61,0.41l3.31,-1.18l2.48,-2.38l0.46,-0.96l0.52,-4.05l1.77,-1.33l0.72,-2.03l-0.64,-2.0l-1.5,-1.48l-1.86,-0.68l-2.3,0.12l-0.2,-0.51l1.67,-2.7l0.67,-1.96l0.56,-8.57l-0.66,-4.46l-1.57,-1.66l-0.36,-0.79l0.2,-4.09l-1.06,-4.74l-0.83,-1.61l-0.41,-2.45l-1.05,-2.08l0.09,-3.02l0.35,-0.81l2.33,-1.43l0.23,-1.08l-0.57,-0.79l2.89,-2.07l0.5,-1.19l3.9,-1.1l1.05,-1.31l0.38,-2.48l-0.48,-3.5l0.15,-1.82l1.55,-2.63l0.15,-1.33l1.28,-2.21l0.19,-1.03l-1.04,-4.34l0.11,-1.57l1.35,-2.94l0.9,-1.21l1.12,-0.7l0.29,-5.75l0.7,-2.36l2.64,0.67l2.07,1.04l1.26,0.0l1.84,-0.55l1.37,1.81l0.97,0.66l0.96,0.25l2.15,-0.2l0.61,0.27l6.55,5.31l1.21,1.26l1.25,2.83l1.38,4.75l3.79,3.51l2.07,4.82l2.12,1.82l0.59,0.89l0.2,0.83l-0.42,1.06l-1.49,0.65l-0.94,0.82l-1.19,1.98l-0.29,1.74l0.17,4.2l1.56,1.66l1.07,2.11l-1.49,1.48l-0.49,3.68l0.28,1.79l-1.81,3.41l-0.21,3.96l0.6,1.28l1.92,0.82l3.67,-0.85l3.29,0.69l3.22,-1.11l2.29,-0.41l4.23,2.11l4.92,-0.02l7.16,2.05l2.03,2.5l4.96,3.3l1.05,2.15l2.68,1.01l0.91,0.65l2.08,2.08l0.82,1.96l2.28,1.51l2.15,2.73l1.9,1.33l2.23,0.88l2.24,2.88l6.24,4.67l2.28,3.59l0.99,3.18l3.39,2.16l1.93,3.11l4.54,3.75l3.94,5.77l2.88,1.54l2.17,4.65l2.72,4.27l-1.66,5.53l0.3,1.71l2.31,2.01l-1.95,13.36l2.38,5.36l0.16,3.33l0.65,0.93l4.18,3.81l3.93,0.85l0.84,5.62l0.87,0.84l1.62,0.55l2.07,4.48Z\",\n            name: \"San Juan\"\n          },\n          \"AR-K\": {\n            path: \"M232.75,298.33l-0.09,-1.31l0.71,-3.13l-0.84,-2.6l0.93,-4.14l-0.25,-0.96l-0.68,-0.53l-3.22,-0.26l-2.97,1.7l-2.63,-0.95l-1.0,-0.06l-4.43,0.67l-4.29,1.34l-12.32,-0.96l0.54,-1.85l1.53,-0.8l0.4,-0.52l-0.69,-2.83l1.65,-1.84l1.21,-2.49l0.45,-1.4l0.05,-3.01l0.91,-0.91l1.62,-0.84l1.34,-1.4l2.21,-4.96l0.15,-3.57l0.37,-1.03l2.45,-3.67l2.04,-0.67l1.9,0.09l3.09,2.14l1.75,0.7l1.32,-0.11l0.75,-0.82l0.82,-2.04l1.63,-1.36l0.97,-0.36l3.27,-0.33l2.03,-0.85l2.06,0.03l0.44,-0.67l-0.03,-1.83l1.21,-3.54l-0.17,-1.67l-0.7,-1.41l-11.25,-15.44l-0.75,-1.98l-0.35,-2.39l0.06,-3.75l0.81,-3.48l1.24,-1.57l5.66,-4.31l0.64,-2.07l-0.37,-2.49l-3.12,-12.4l-0.56,-3.99l-1.09,-2.45l-1.65,-1.99l-0.01,-2.47l-0.35,-0.95l0.51,-0.99l-2.16,-2.99l-0.21,-0.74l0.1,-2.54l4.03,-12.09l0.68,-0.88l30.99,5.88l56.13,-0.56l0.94,1.78l0.68,4.41l2.26,3.47l-1.14,4.53l-0.0,1.51l-0.68,0.91l-2.51,1.67l-7.4,0.33l-3.05,2.22l-0.69,1.03l-0.22,1.82l0.06,2.09l0.62,2.35l4.67,7.07l3.61,4.41l0.68,2.14l1.5,1.78l1.75,4.02l5.68,6.05l1.36,0.28l1.3,-0.89l2.77,-6.14l1.8,-1.21l0.81,-1.61l0.72,-0.68l1.3,-0.3l1.4,0.26l2.62,2.97l1.72,0.91l-1.97,2.94l-0.3,2.81l-2.23,5.79l0.17,2.15l1.57,1.67l3.14,0.73l1.57,0.84l4.47,3.84l2.19,1.08l0.59,1.11l-0.0,1.39l-0.75,3.43l0.01,3.32l-0.66,1.79l-1.18,1.9l-5.75,5.99l-1.63,3.26l-3.31,3.23l-2.02,3.59l-0.13,0.88l1.65,1.05l2.99,0.58l3.22,1.82l1.81,0.27l-0.33,1.52l2.6,10.96l1.16,1.4l1.22,0.81l1.21,4.02l0.5,0.74l0.98,0.64l2.95,-0.78l2.28,1.3l1.73,6.19l4.43,5.28l1.03,0.05l1.37,-2.78l1.32,-1.7l2.88,-2.51l3.68,-2.19l1.05,0.35l3.51,2.4l1.41,0.25l1.74,-0.55l3.95,17.33l0.31,7.25l-0.26,2.72l-3.27,5.01l-1.23,0.89l-0.09,2.3l0.38,0.74l2.38,1.16l1.03,1.14l0.94,10.27l-0.19,4.1l1.98,14.39l2.01,4.7l4.63,8.08l-2.58,0.9l-0.73,1.82l1.35,11.56l-0.47,1.54l-8.71,9.04l-2.17,1.13l-9.3,2.54l-7.38,-14.39l-1.65,-4.53l-5.59,-12.25l-1.04,-4.78l-0.12,-4.39l-1.72,-3.32l-8.11,-7.72l-1.41,-0.75l-5.48,-5.41l-2.04,-1.35l-7.59,-3.39l-1.15,-0.89l-0.67,-1.18l1.87,-3.0l-0.01,-1.53l-2.79,-1.75l-1.43,-1.33l-1.55,-2.12l-0.37,-0.74l-1.02,-5.69l-1.03,-1.58l-1.5,-1.23l-1.67,-2.03l-8.83,-3.61l-9.02,-3.12l-1.65,0.07l-1.58,0.83l-2.48,2.77l-3.86,0.69l-3.26,0.1l-20.04,-0.93l-3.02,0.73l-2.23,1.35l-0.74,-2.03l-3.15,-4.21l-0.47,-1.61l-0.32,-2.63l0.14,-1.49l-0.31,-0.57l-1.7,-0.32l-5.64,1.75l-2.63,-2.36l-2.51,-0.78l-3.18,-0.17l-3.14,-3.23l-1.65,-0.41l-1.68,-0.01l-0.78,-0.45Z\",\n            name: \"Catamarca\"\n          },\n          \"AR-H\": {\n            path: \"M561.61,140.25l0.03,1.32l2.18,3.41l-0.41,0.74l0.08,1.12l1.37,1.71l0.78,0.42l1.13,-0.29l6.26,5.18l2.54,1.57l1.76,1.75l1.4,0.52l4.33,2.58l1.32,1.22l2.41,0.79l1.6,0.98l1.2,-0.14l1.29,0.49l1.57,2.87l1.74,2.36l2.91,2.09l0.89,1.66l-0.37,0.56l0.29,0.78l1.79,0.99l0.79,1.95l2.09,0.44l0.51,1.0l-0.55,0.69l-0.01,0.51l0.88,2.19l1.3,1.75l0.62,2.02l0.85,0.42l0.96,-0.49l3.12,1.44l1.51,0.32l0.98,1.79l2.21,0.61l1.12,1.53l3.33,1.82l0.18,1.48l0.42,0.82l2.02,1.0l1.76,1.66l3.06,4.24l1.24,0.37l0.17,4.68l0.42,0.97l0.95,0.38l1.15,-0.21l2.44,1.1l1.54,-0.08l1.47,0.43l1.53,0.02l1.92,0.87l0.31,2.27l1.11,1.82l0.14,1.46l1.75,1.99l1.49,-0.15l1.49,0.58l1.04,-0.05l2.69,-1.03l1.26,-1.21l0.92,-0.19l0.79,1.1l1.69,1.43l5.16,1.96l2.07,1.55l3.22,3.93l3.22,1.67l2.33,2.71l2.23,0.43l1.78,2.2l3.68,2.23l1.04,2.21l3.13,2.72l0.91,1.84l1.63,0.79l1.93,-0.12l0.2,1.32l-0.88,1.04l-2.82,0.84l-0.95,0.66l-0.42,0.88l0.09,0.64l0.57,0.63l-1.44,2.07l-0.3,1.47l-0.64,-1.02l-0.88,0.19l-0.84,1.33l-0.15,2.3l-2.21,0.39l-1.16,0.71l-0.65,0.99l-0.29,1.56l0.3,0.85l1.8,1.51l0.47,0.77l-0.1,2.98l-2.22,0.75l-10.56,7.48l0.09,3.58l2.31,4.63l0.8,3.44l-0.09,2.58l-1.18,3.45l0.1,3.61l-0.96,3.71l-127.8,0.05l-0.03,-89.7l-0.53,-19.44l-1.45,-4.11l-0.38,-0.27l-73.45,-0.1l47.55,-59.75l-0.12,-13.18l9.2,3.52l4.33,0.82l1.87,2.25l3.76,2.6l3.39,0.92l2.28,0.23l3.04,2.42l2.32,4.28l0.37,0.23l0.8,-0.26l2.57,0.23l0.94,2.07l4.94,4.56l2.52,0.17l2.45,0.83l3.43,0.16l1.63,0.5l0.94,0.69l1.32,1.95l1.03,0.42Z\",\n            name: \"Chaco\"\n          },\n          \"AR-F\": {\n            path: \"M178.38,317.96l4.15,-3.59l1.96,-2.46l0.94,-3.41l0.34,-0.27l1.66,0.93l1.12,0.06l2.45,-4.11l1.61,-3.73l0.93,-0.97l-0.07,-0.99l0.37,-0.6l1.09,-0.69l2.64,-0.69l1.41,-1.02l0.82,-1.44l1.67,-7.05l12.51,0.98l4.46,-1.36l4.31,-0.66l0.93,0.1l1.46,0.74l1.57,0.14l3.14,-1.77l2.39,0.32l0.38,0.53l-0.91,4.29l0.15,1.17l0.69,1.48l-0.78,3.64l0.34,1.31l1.19,0.72l3.14,0.34l1.34,1.22l0.98,1.43l0.97,0.65l3.3,0.21l2.32,0.72l1.62,1.76l1.09,0.64l1.1,-0.05l2.52,-1.1l1.38,-0.1l1.09,-0.48l0.98,0.16l0.21,4.17l0.53,1.82l3.2,4.3l0.49,1.64l0.82,0.82l0.9,-0.2l1.75,-1.24l2.75,-0.67l20.0,0.93l3.38,-0.1l4.05,-0.74l2.6,-2.83l1.46,-0.76l1.28,-0.01l8.81,3.07l8.71,3.56l1.47,1.86l1.45,1.18l0.94,1.42l0.97,5.55l0.49,1.01l1.59,2.17l1.53,1.43l2.62,1.56l-0.02,0.8l-1.93,3.21l0.12,0.77l0.72,1.02l1.42,1.11l7.59,3.39l1.92,1.28l5.44,5.38l1.4,0.73l7.97,7.57l1.6,3.03l0.11,4.34l1.08,4.95l5.61,12.29l1.66,4.54l7.46,14.55l-3.68,10.1l-1.89,3.42l-1.72,5.44l-0.42,2.27l-8.13,23.01l-0.62,3.11l0.33,39.14l-4.15,0.71l-2.09,-0.01l-2.76,-1.1l-3.92,-0.36l-2.4,0.56l-5.04,2.15l-2.23,0.22l-2.24,-0.21l-2.5,0.4l-2.65,-0.94l-2.95,0.28l-1.9,-0.89l-2.43,0.62l-2.99,-1.31l-2.93,-0.56l-1.08,-2.85l-1.19,-2.1l-1.0,-0.72l-0.94,-0.1l-0.51,-0.5l-0.87,-5.68l-0.68,-0.5l-3.5,-0.58l-4.51,-4.4l-0.11,-3.19l-2.35,-5.16l1.97,-13.47l-2.49,-2.41l-0.14,-1.22l1.65,-5.65l-2.82,-4.54l-2.26,-4.77l-2.93,-1.59l-3.93,-5.76l-4.53,-3.73l-2.01,-3.18l-3.3,-2.08l-0.86,-2.98l-2.44,-3.82l-6.31,-4.73l-2.3,-2.93l-2.31,-0.93l-1.74,-1.21l-2.14,-2.72l-2.21,-1.44l-0.8,-1.94l-2.18,-2.18l-1.17,-0.81l-2.4,-0.83l-1.05,-2.16l-5.0,-3.33l-2.11,-2.56l-7.5,-2.18l-4.84,0.04l-3.23,-1.82l-1.09,-0.31l-2.59,0.44l-3.04,1.08l-3.3,-0.7l-3.59,0.85l-1.42,-0.61l-0.43,-2.1l0.29,-2.42l1.8,-3.39l-0.27,-1.92l0.3,-2.88l0.27,-0.81l0.96,-0.49l0.44,-0.97l-1.17,-2.54l-1.48,-1.49l-0.2,-1.69l0.26,-3.68l1.42,-2.18l2.12,-1.15l0.55,-1.42l-0.27,-1.26l-0.75,-1.13l-2.02,-1.71l-2.11,-4.86l-3.7,-3.38l-1.35,-4.68l-1.27,-2.88l-1.41,-1.52l-6.67,-5.4l-1.0,-0.39l-2.82,0.01l-2.35,-2.48l-3.27,0.5l-1.9,-0.99l-2.5,-0.64Z\",\n            name: \"La Rioja\"\n          },\n          \"AR-G\": {\n            path: \"M385.58,272.81l5.29,-5.87l0.9,-0.74l1.2,-0.26l0.67,-0.82l1.02,-2.85l1.02,-1.42l1.36,-3.36l1.33,-5.23l0.57,-0.88l0.88,-0.59l0.71,-1.43l2.35,-8.68l1.7,-0.19l0.71,-0.55l1.74,-5.42l3.11,0.38l0.6,-0.44l0.15,-2.94l-1.12,-8.51l1.76,-6.1l-0.06,-4.82l0.31,-1.56l2.05,-4.26l0.38,-3.38l9.61,-20.4l0.73,-0.93l1.47,0.2l10.42,3.27l23.75,0.34l74.0,0.1l1.31,3.67l0.53,19.37l0.03,90.06l-16.8,104.57l-6.49,-16.03l-2.42,-1.68l-49.37,-0.25l-0.47,-2.06l-2.73,-0.7l0.13,-2.19l-0.47,-0.77l-0.83,-0.18l-2.04,0.33l-3.93,-1.07l-5.4,0.8l-3.46,-0.18l-1.96,-1.26l-3.52,-0.81l-0.99,-1.31l-3.32,-1.72l-0.74,-0.71l0.16,-2.29l-0.45,-0.59l-9.42,-2.43l-1.9,0.05l-26.33,6.44l-4.75,-8.21l-1.93,-4.47l-1.97,-14.3l0.19,-4.06l-0.8,-9.69l-0.56,-1.51l-3.37,-2.18l0.01,-1.81l1.21,-0.84l3.34,-5.16l0.31,-3.0l-0.32,-7.39l-4.0,-17.56l0.98,-0.37l1.63,0.17l1.57,-0.68l0.66,-1.11l1.28,-3.82l0.4,-0.39l0.83,-0.02l0.26,-0.42l-3.12,-7.57l-0.04,-0.97l0.51,-1.19l1.74,-0.1l1.02,-0.61l1.26,-1.99l-0.16,-0.71l-1.03,-0.69l-2.91,-1.06Z\",\n            name: \"Santiago del Estero\"\n          },\n          \"AR-D\": {\n            path: \"M280.68,494.41l-0.22,-3.66l0.39,-0.79l1.22,-0.83l4.87,0.98l6.27,-0.69l1.48,0.37l1.69,1.06l1.86,0.34l11.45,-0.59l3.03,0.58l3.09,1.33l2.5,-0.61l1.82,0.89l3.0,-0.27l2.71,0.95l2.55,-0.4l2.24,0.21l2.32,-0.23l5.17,-2.18l2.2,-0.52l3.7,0.35l2.9,1.12l2.22,0.01l4.48,-0.77l3.89,0.01l3.56,1.43l12.54,7.27l2.45,2.49l0.55,1.24l0.41,3.39l1.38,2.61l0.06,3.01l0.65,0.66l0.83,0.16l4.85,-0.51l5.34,-1.44l0.9,0.26l0.26,2.42l-0.29,3.96l1.36,2.82l0.81,3.16l-0.39,3.36l-1.01,2.21l-0.43,2.43l-1.32,1.66l-0.09,1.92l-0.86,1.77l-0.35,3.07l-1.87,3.5l0.31,2.36l-1.63,3.39l0.51,2.44l-0.34,0.39l-1.39,0.27l-0.83,0.5l-1.94,3.76l2.02,38.31l-0.04,103.88l-68.59,-0.07l-0.21,-2.17l0.57,-2.44l0.35,-3.69l1.84,-8.12l0.53,-5.16l1.56,-3.96l0.19,-4.61l0.54,-3.27l-0.6,-3.95l0.6,-1.9l-0.88,-1.56l0.87,-3.86l-1.09,-2.39l-0.95,-3.41l0.2,-4.33l-1.19,-3.76l-5.39,-10.02l-2.15,-2.21l-1.51,-5.05l-0.3,-4.42l-0.39,-0.99l-1.04,-1.1l0.46,-1.26l-0.46,-0.85l-0.47,-5.64l0.78,-1.62l1.06,0.33l0.97,-1.05l0.5,-6.4l-0.74,-1.22l-0.67,-2.34l-1.93,-1.72l-0.45,-2.22l-0.59,-1.02l-3.89,-3.02l-1.54,-4.86l-1.06,-1.77l-1.45,-4.55l-1.26,-1.42l-4.27,-6.86l-0.39,-1.07l0.11,-3.16l-1.26,-3.31l0.0,-1.74l-0.59,-1.86l0.28,-3.99l-0.37,-4.58l-0.53,-1.59l0.28,-2.03l-1.29,-3.53l0.92,-1.15l0.0,-1.3l-0.53,-1.98l1.13,-3.55l-0.65,-1.13l-0.4,-1.79l-1.39,-1.36l-0.54,-1.1l-1.1,-5.48l-1.02,-3.39l-0.67,-1.06l-0.01,-1.2l-0.94,-1.25l-0.96,-0.65l-1.22,-4.46l-0.27,-12.0l0.94,-3.5l-0.34,-1.67Z\",\n            name: \"San Luis\"\n          },\n          \"AR-E\": {\n            path: \"M584.61,484.16l0.06,-1.5l0.63,-0.59l1.97,-0.37l5.12,-0.06l2.88,-1.27l2.86,-2.68l4.37,-5.75l1.41,-1.0l0.77,-1.09l1.93,-1.07l3.24,-4.56l1.37,-4.14l2.81,-2.83l7.2,-11.67l5.49,-7.3l2.71,-4.79l0.66,-4.74l1.08,-3.33l0.34,-5.69l-1.73,-3.94l-0.3,-1.84l3.81,-0.2l3.11,-1.16l1.87,0.53l3.09,-0.68l2.22,0.32l4.61,1.48l3.46,-1.9l3.03,-2.73l4.04,-2.21l3.92,0.96l1.93,0.16l3.77,-0.77l7.36,-2.92l1.17,-0.04l1.15,0.21l2.33,1.33l3.12,0.07l8.63,2.28l1.65,1.46l1.22,2.57l1.04,1.35l4.67,3.95l0.66,1.43l0.66,3.43l2.3,4.16l5.33,5.25l2.72,1.96l0.56,5.19l-0.47,2.17l-3.3,0.48l-1.12,0.78l-0.34,1.2l2.16,3.21l0.33,2.11l-1.89,3.2l-0.63,2.32l0.29,3.47l-1.31,2.35l-1.43,1.3l-1.03,4.13l-3.19,2.18l-0.7,1.72l1.18,1.68l1.72,1.27l1.09,1.3l0.3,2.05l-0.39,2.1l-2.7,7.64l-0.37,0.57l-4.19,1.23l-2.01,1.89l-0.39,1.19l0.59,1.31l1.42,1.54l0.57,3.51l-0.58,4.03l-1.01,1.61l-0.23,1.3l0.56,1.14l3.04,3.84l0.42,1.3l-0.2,1.34l-2.84,3.9l-1.62,2.8l-0.91,2.38l-0.12,2.3l0.51,6.19l0.84,3.49l0.61,5.13l1.87,3.61l-0.97,3.92l0.56,3.48l-2.29,1.84l-1.54,0.15l-6.37,-0.99l-1.83,0.67l-0.75,1.02l0.16,0.89l0.62,0.26l-0.92,5.44l0.91,3.23l-2.05,1.73l-1.26,1.76l-0.9,1.95l-1.16,4.54l-0.17,2.11l0.3,2.22l-0.54,1.49l-0.39,3.79l0.43,3.31l0.78,1.73l2.8,4.03l0.95,5.97l-0.31,1.05l-2.15,0.45l-4.05,1.61l-1.98,-0.02l-1.74,-0.82l-4.57,-3.97l-3.17,-0.84l-3.22,-2.49l-4.98,-2.95l-6.02,-0.09l-1.56,-1.65l-1.43,0.14l-0.66,-0.51l-0.22,-2.26l-0.82,-1.11l-1.47,0.28l-0.53,0.6l-3.67,0.0l-2.08,-1.04l-1.67,-1.84l-1.9,-1.31l-3.95,1.06l-1.56,-0.31l-5.85,-3.01l-2.32,-3.04l-1.64,-1.34l-2.21,-1.06l-1.8,-0.44l-7.61,-5.08l-5.76,-5.79l-3.6,-1.91l-3.06,-3.38l-4.61,-2.62l-2.49,-3.0l-1.55,-4.21l-1.61,-1.85l-2.37,-4.69l-1.01,-3.75l-0.34,-4.62l-0.8,-1.92l-1.67,-2.41l-0.38,-1.53l1.8,-5.25l-0.08,-5.06l1.33,-5.05l-0.24,-4.87l1.78,-3.29l0.25,-1.07l-0.24,-1.32l-2.29,-3.76l-0.1,-2.26l2.07,-3.47l1.05,-4.37l-0.1,-0.6Z\",\n            name: \"Entre R\\xedos\"\n          },\n          \"AR-B\": {\n            path: \"M487.51,964.44l-0.33,-1.21l-2.38,-4.23l-2.77,-2.57l-2.26,-1.61l-2.4,-2.82l-3.59,-2.99l-3.75,-1.39l-8.91,-1.03l-0.06,-247.83l0.31,-72.01l0.37,-8.31l1.32,-1.45l73.41,-0.19l34.05,-35.66l1.62,-2.24l-0.32,-1.77l0.38,-1.02l0.65,-0.66l1.5,-0.52l1.37,-0.07l2.99,1.16l4.37,0.12l2.1,1.29l1.6,1.46l1.23,0.5l1.3,0.14l2.05,-0.49l1.66,-1.29l1.85,-3.85l0.7,-3.85l2.8,-2.49l0.35,-3.24l1.39,-0.54l1.03,-0.82l0.46,-0.79l0.1,-1.51l0.69,0.35l5.8,5.82l7.69,5.13l1.9,0.48l2.08,1.0l1.49,1.22l2.4,3.1l6.04,3.13l2.0,0.37l3.53,-1.08l1.63,1.12l1.81,1.94l2.41,1.16l3.9,0.0l0.77,-0.68l0.9,-0.21l0.57,3.04l0.94,0.75l0.81,0.21l0.64,-0.33l1.13,1.4l0.75,0.34l5.78,0.03l4.86,2.89l3.31,2.54l3.04,0.76l4.55,3.96l1.96,0.94l2.47,0.03l4.09,-1.63l2.04,-0.42l2.22,1.03l0.42,1.56l-0.35,4.41l0.59,1.63l-1.44,1.5l-0.59,1.37l-1.4,1.2l-0.7,0.18l-1.12,-0.4l-1.74,-0.08l-1.65,1.4l0.21,0.4l2.59,1.38l1.98,1.58l0.39,0.67l-0.7,1.36l-1.81,2.21l0.41,1.52l1.2,1.1l0.07,1.53l-2.88,2.41l-1.0,4.42l0.86,3.1l4.56,3.5l0.59,-0.13l1.67,-2.99l1.07,-0.92l1.75,-0.34l1.15,-1.37l3.16,1.98l2.06,1.74l1.67,0.83l2.79,0.4l1.43,0.79l2.71,0.69l1.67,1.93l1.39,0.49l2.81,-0.21l5.11,4.07l3.2,1.22l3.82,2.78l3.6,1.27l7.72,6.93l4.54,5.05l5.13,8.49l0.21,1.1l-0.7,2.03l-3.52,4.32l-5.89,8.27l-1.83,6.96l1.03,6.13l0.31,0.75l0.75,0.61l1.4,3.39l0.34,1.6l1.84,1.48l0.29,1.19l0.71,1.13l6.38,5.83l4.64,2.65l2.98,0.84l0.18,0.29l-0.55,0.52l0.28,0.91l0.57,0.03l1.67,-1.27l1.89,-0.75l3.88,0.01l0.39,-0.55l-0.38,-1.46l0.92,0.47l0.8,2.67l1.06,1.33l-0.09,6.32l1.23,4.13l0.16,15.09l-0.74,1.63l-4.68,5.73l-4.46,6.45l-5.9,9.66l-1.65,3.39l-4.92,6.36l-6.43,5.69l-1.84,2.82l-1.27,0.84l-5.02,6.18l-1.94,4.41l-0.59,4.51l0.58,1.37l-0.3,1.02l0.13,1.48l-1.08,2.32l-1.52,1.6l-12.07,7.38l-7.01,3.83l-2.18,0.56l-2.39,1.87l-1.65,0.86l-5.39,2.01l-2.47,1.26l-4.01,0.61l-3.42,1.09l-3.26,1.79l-7.31,1.56l-9.53,3.03l-2.6,1.58l-2.94,0.92l-25.67,4.74l-7.45,2.89l-4.15,-0.0l-20.57,3.6l-14.2,1.92l-9.29,1.72l-5.0,-0.07l-1.85,-0.32l-1.65,0.78l-4.04,0.95l-8.71,-1.03l-4.13,0.06l-3.05,0.9l-1.07,0.62l-6.87,-0.9l-2.33,-1.38l-3.08,0.75l-2.1,-0.08l-8.4,-2.26l-1.61,-0.74l-1.22,-1.03l-2.22,-4.36l-0.78,-0.54l-7.39,-0.58l-1.79,-0.69l-1.29,0.63l-0.61,1.01l0.36,0.8l-0.21,1.15l0.77,1.85l-0.06,1.22l0.99,-0.45l0.59,0.18l0.02,2.4l0.31,0.74l0.75,0.39l1.51,-0.2l-0.32,1.77l-1.42,1.01l-1.87,4.41l0.83,1.45l-0.35,2.48l0.38,1.15l3.05,2.6l-1.24,-0.57l-0.46,0.08l-0.65,0.68l-0.03,0.51l0.59,0.69l1.07,0.42l5.66,0.55l3.49,1.6l1.83,1.24l0.91,1.24l-0.12,0.97l-1.0,0.94l-4.16,-3.0l-1.25,-1.94l-0.68,-0.5l-4.17,0.14l-0.36,0.48l0.63,1.69l0.61,0.47l1.41,0.02l0.56,1.46l0.88,1.11l1.91,1.66l1.01,0.53l3.34,0.68l0.18,0.95l-0.97,1.54l-0.12,3.63l-0.52,1.24l-1.13,7.25l-0.12,4.73l-0.14,0.54l-1.89,1.07l-3.09,-0.49l-2.85,-1.94l-0.62,0.21l-0.16,0.81l0.84,1.35l-1.06,0.83l-0.09,3.04l-0.91,3.71l-1.39,3.19l1.21,3.3l-0.91,4.04l-0.34,0.87l-2.83,1.25l-0.9,0.81l-1.5,2.08l-0.31,1.2l0.25,1.06l1.3,2.28l0.68,3.1l1.21,2.1l3.97,1.96l0.05,1.41l1.41,1.72l0.6,0.49l0.9,-0.31l0.45,1.78l-0.01,1.12l-0.46,0.37l-1.87,-0.32l-1.38,-1.43l-0.6,0.31l0.06,1.12l0.69,1.19l-0.4,0.84l0.43,0.81l0.88,0.37l3.5,-1.91l1.65,-0.47l-1.49,1.08l-1.15,4.73l-2.55,5.28l-1.1,1.33l-6.63,3.17l-5.43,3.07l-3.11,1.17l-2.38,1.57l-2.82,0.06ZM689.21,609.29l-0.27,-0.53l0.66,-0.88l-0.08,-1.29l1.18,1.19l0.19,1.3l-0.64,-0.52l-0.56,0.08l-0.49,0.65ZM526.64,864.17l0.56,0.35l0.69,-0.73l1.35,3.43l-0.15,1.09l-1.47,-0.26l-1.44,-1.21l-3.77,-1.47l-2.57,-3.05l-0.46,-1.3l6.4,1.59l0.87,1.56ZM523.08,857.17l1.21,0.9l-0.07,0.69l-1.23,0.27l-0.77,-0.31l-2.49,-1.78l-1.02,0.52l-0.76,-0.38l0.27,-0.52l3.28,0.16l1.58,0.46ZM522.25,925.81l-0.45,-1.18l-3.09,-4.09l-0.92,-1.88l0.54,-2.26l2.97,0.79l1.01,1.32l-0.25,5.1l0.19,2.2ZM521.32,934.72l-3.03,4.06l-1.74,-0.24l0.24,-1.3l-0.54,-1.18l-0.55,-0.16l-1.16,0.65l-0.99,-0.01l-0.33,-0.31l1.52,-2.24l0.3,-2.25l0.83,-2.3l3.11,0.14l1.07,1.02l1.62,2.79l-0.34,1.31Z\",\n            name: \"Buenos Aires\"\n          },\n          \"AR-C\": {\n            path: \"M689.37,630.71l-1.01,1.27l-1.7,0.31l-1.21,1.05l-1.57,2.76l-3.94,-2.94l-0.79,-2.67l0.94,-4.18l2.57,-2.05l4.03,2.43l1.43,1.69l1.24,2.33Z\",\n            name: \"Ciudad de Buenos Aires\"\n          },\n          \"AR-A\": {\n            path: \"M230.92,160.73l3.51,-0.13l1.13,-0.52l0.67,-0.92l-0.12,-1.2l-3.34,-3.82l0.24,-2.28l-1.42,-1.82l0.13,-0.72l-0.36,-0.73l-0.47,-0.55l-1.39,-0.22l-1.67,-1.14l-1.14,-2.72l0.23,-1.64l2.29,-4.5l1.04,-3.35l1.56,1.31l0.57,-0.22l0.63,-2.38l1.73,-3.64l0.57,-0.32l1.55,0.39l1.05,-0.18l2.32,-3.24l0.61,-1.64l0.7,-0.47l37.54,-15.77l2.3,-1.23l1.21,-1.66l3.79,-12.14l1.03,1.01l1.74,0.72l1.63,1.79l2.91,0.83l3.54,3.7l0.56,1.44l1.86,0.6l0.64,1.54l2.66,3.02l4.79,2.36l4.27,4.87l3.26,1.62l1.71,0.37l2.96,-0.12l1.81,-0.94l2.33,-3.1l1.46,-0.78l1.67,-4.91l0.82,-12.47l-0.18,-2.78l-2.95,-8.06l-0.15,-1.69l1.29,-5.99l0.81,-0.82l2.88,1.09l1.23,0.03l2.06,1.31l1.83,0.05l6.34,3.73l1.54,1.53l0.21,0.58l-0.33,2.18l0.22,3.13l-0.49,1.12l0.57,1.53l-1.51,2.35l-0.25,3.86l0.12,0.69l0.77,0.49l0.07,0.74l0.52,0.75l-0.39,1.03l0.15,1.04l2.0,2.61l1.02,0.15l1.03,-0.75l0.59,0.01l2.96,2.65l3.22,1.79l-0.02,3.53l0.41,1.16l1.54,2.57l4.54,5.88l1.35,2.46l2.36,1.49l0.71,0.18l2.05,-0.62l2.29,1.89l2.95,0.53l3.88,1.45l1.98,-0.52l2.97,-1.76l0.65,1.3l3.89,3.09l1.55,0.91l5.01,1.68l1.35,-0.57l2.04,-4.72l1.06,-1.55l8.75,7.4l0.56,0.13l1.0,-0.58l1.44,-3.04l2.99,-2.81l2.5,-0.7l1.4,-1.77l4.05,-0.51l1.4,-0.9l3.95,-5.01l1.61,-2.85l0.84,-2.79l-1.14,-31.66l-0.49,-0.84l-1.54,-0.33l-5.72,-0.1l-1.05,0.25l-1.45,1.67l-0.67,2.47l-0.97,0.99l-0.88,-0.61l-2.37,-3.09l-1.76,-1.54l-3.59,-1.37l-1.33,-1.17l-4.18,0.6l-2.11,1.68l-3.3,-0.43l-0.28,-2.31l-3.06,-6.31l-0.71,-0.64l-2.77,-1.06l-0.54,-0.86l1.01,-4.14l0.6,-4.19l-0.31,-2.19l-1.24,-1.58l-0.93,-0.59l-5.69,-0.35l-1.85,-1.5l-1.79,-4.94l-0.77,-5.29l-0.01,-2.2l0.91,-2.33l-1.92,-2.05l-1.66,-0.24l0.45,-3.85l1.05,-1.89l1.69,-4.34l1.55,-2.48l0.21,-4.64l0.42,-1.8l1.29,-2.45l0.29,-1.33l7.27,-0.08l8.39,1.92l3.22,1.76l1.78,0.42l1.67,-0.47l1.21,0.23l3.09,1.54l1.87,2.77l0.02,0.59l-0.86,1.28l-0.4,1.49l2.09,1.97l-0.33,1.7l1.17,1.16l0.41,1.32l3.06,3.22l-0.92,1.84l-0.21,2.84l1.22,0.96l1.27,2.59l1.44,0.82l0.49,0.87l0.13,1.13l-0.32,1.05l0.55,0.94l0.16,2.09l1.07,0.72l0.57,-0.41l1.36,-4.98l0.06,-3.53l1.92,-7.04l0.6,-1.04l2.29,-2.12l1.15,-1.62l3.37,-8.58l1.58,-1.36l1.45,-3.57l0.7,-2.67l0.33,-0.65l1.21,-0.76l0.88,-2.74l0.53,-0.22l1.12,-0.2l4.09,0.27l3.22,2.22l3.12,-2.21l1.64,-0.28l28.37,0.16l6.68,-0.36l2.32,0.45l0.52,4.84l0.36,0.98l0.84,0.87l3.98,2.32l0.81,1.59l1.6,0.85l0.09,0.77l-0.52,1.21l0.41,0.76l2.87,0.93l1.89,2.04l2.35,0.8l1.44,1.77l3.15,2.12l1.04,0.39l0.31,91.6l-47.85,60.14l-23.5,-0.34l-10.28,-3.24l-2.17,-0.1l-0.94,1.22l-9.64,20.46l-0.42,3.47l-1.95,3.98l-0.37,1.65l-9.17,0.22l-3.26,-0.65l-3.82,1.05l-2.32,1.73l-1.79,0.25l-3.19,-1.59l-0.86,-0.2l-1.22,0.23l-8.48,-3.32l-0.84,-0.84l-1.31,-3.16l-0.81,-0.7l-1.23,0.18l-3.53,1.81l-0.97,0.14l-4.38,-0.97l-1.7,0.07l-4.05,-1.28l-1.04,0.9l-0.26,4.02l-0.6,2.12l0.09,2.54l-0.77,1.29l-1.6,-0.01l-13.23,-2.22l-1.8,-0.92l-2.77,-3.07l-2.62,-0.26l-1.38,0.67l-1.29,2.15l-1.76,1.17l-2.63,5.92l-0.72,0.74l-0.66,0.08l-2.11,-1.77l-3.7,-4.21l-1.71,-3.95l-1.51,-1.79l-0.71,-2.2l-3.63,-4.43l-3.67,-5.28l-0.92,-1.66l-0.56,-2.16l0.23,-3.74l2.73,-2.36l7.79,-0.46l2.79,-1.81l0.92,-1.24l0.04,-1.63l1.15,-4.83l-2.3,-3.63l-0.78,-4.8l-1.21,-1.82l-2.06,-0.22l-54.42,0.68l-30.23,-5.73Z\",\n            name: \"Salta\"\n          }\n        },\n        height: 1775.5897460258225,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"asia_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 555.5409752358405,\n          bbox: [{\n            y: -6895749.143810256,\n            x: 2858903.2260101754\n          }, {\n            y: 1365383.966806244,\n            x: 16242290.106516164\n          }],\n          left: 0\n        }],\n        paths: {\n          BD: {\n            path: \"M468.23,273.61l0.71,0.28l0.58,-0.17l1.03,-2.27l3.07,-0.06l0.75,-0.99l-1.01,-0.97l-0.42,-1.03l-2.11,-0.48l-1.82,-1.98l-1.04,-0.37l0.36,-1.52l2.2,-2.38l-0.03,-0.74l-0.59,-0.55l1.28,0.98l0.67,1.23l1.03,0.3l1.31,0.04l0.39,-0.56l-0.29,-0.74l1.12,2.32l1.6,0.95l1.55,0.0l0.55,-0.72l0.06,-0.94l0.91,1.84l-0.18,4.52l0.45,0.95l4.71,1.15l12.05,-0.09l2.87,1.64l-1.68,-0.08l-1.11,3.94l-1.09,0.36l-0.53,1.16l-0.92,-0.13l-1.3,0.83l-1.65,0.27l-1.04,1.45l-0.55,2.17l1.25,4.63l0.87,0.36l0.23,-0.76l0.39,0.99l1.03,0.54l1.43,-0.82l0.06,-1.92l1.33,-1.61l-0.02,-1.25l1.1,-0.2l0.56,0.3l0.57,2.45l0.21,3.12l0.98,1.98l0.95,10.27l-1.52,-0.91l-0.91,0.13l-0.83,1.18l0.19,1.46l-0.37,-0.53l-0.38,-4.02l-1.31,-4.1l0.26,-0.9l-0.55,-0.43l-0.24,0.13l-1.76,-2.79l-0.59,-1.56l-2.33,1.96l-1.63,0.27l-1.96,-3.12l-0.37,-4.39l-0.56,-0.29l-0.45,0.36l-0.06,0.92l-1.76,-0.24l-0.44,0.23l0.12,0.48l0.92,0.7l1.01,0.22l0.34,0.42l0.02,0.68l-0.97,0.9l0.32,0.89l-0.51,0.67l-0.05,0.75l0.49,1.55l0.74,1.1l-0.04,1.05l-1.67,1.56l-1.04,1.67l-0.41,-0.63l0.95,-1.34l0.03,-0.48l-0.94,-0.02l-1.11,0.67l-0.25,-1.52l0.63,-1.15l-0.09,-0.5l-0.51,-0.01l-0.91,0.83l-0.49,3.08l-1.12,0.91l-0.6,-3.09l-0.39,-0.32l-0.5,0.81l0.23,2.33l-0.91,1.25l-0.47,0.01l-0.88,-0.99l-0.34,-3.13l-0.94,-2.74l-0.52,-3.11l0.52,-1.04l-0.11,-0.49l-1.5,-0.56l0.17,-1.34l-1.2,-1.65l0.96,-2.52l0.18,-2.32l-0.78,-0.65l-1.19,-0.22l-1.51,-1.02l-0.65,0.08l-0.78,-0.54l-0.29,-0.57l0.77,-1.7ZM492.82,292.48l0.02,0.04l-0.02,-0.03l0.0,-0.01ZM490.12,294.53l0.06,-0.71l0.06,0.24l-0.11,0.47ZM486.34,295.46l0.98,-1.76l-0.25,-1.76l-0.63,-0.69l-0.22,-1.31l1.7,2.68l-0.27,2.27l-0.25,0.35l-1.07,0.23Z\",\n            name: \"Bangladesh\"\n          },\n          MN: {\n            path: \"M465.38,65.23l0.89,-0.91l-0.34,-1.28l0.62,-0.06l1.36,-0.89l0.63,-1.89l2.96,-0.29l1.6,0.36l0.59,-0.65l0.58,0.39l1.04,-0.28l0.59,-0.33l0.38,-0.81l1.04,0.09l2.05,-1.05l0.37,-0.57l-0.19,-1.38l2.27,-0.66l0.58,-1.07l4.59,-1.32l0.78,-0.78l1.87,-1.05l2.78,-0.49l3.01,-2.22l2.88,-0.07l1.04,-1.55l2.11,1.67l0.67,-0.01l0.8,-0.92l0.67,0.01l0.42,1.04l1.07,0.72l8.35,0.44l0.71,3.17l2.29,2.08l2.21,-0.2l1.29,1.02l2.11,-0.02l1.12,0.3l2.16,-0.99l1.09,0.49l0.76,-0.36l1.92,0.95l4.87,0.16l1.67,1.45l1.56,-0.13l1.37,-1.0l0.41,-0.68l1.71,-0.25l1.36,-0.75l0.85,-0.75l1.1,-2.2l0.25,-2.54l-1.91,-1.23l-0.53,-1.95l-0.94,-1.28l0.05,-0.46l0.57,-1.2l0.23,-1.64l0.63,-0.95l1.29,-0.51l0.99,-2.1l2.22,-0.91l1.25,-1.62l0.49,-1.34l0.6,0.61l2.94,1.23l2.31,0.52l1.62,1.19l4.13,0.3l6.74,2.7l1.5,-0.12l3.88,1.08l0.63,4.99l0.71,1.02l-0.09,1.5l0.6,0.53l0.85,0.15l1.69,1.38l3.6,0.96l1.12,0.89l2.42,0.6l1.42,-0.35l2.09,0.2l0.92,-0.22l2.0,-1.27l4.65,-0.82l2.11,-0.81l3.62,0.66l2.55,0.98l3.66,-0.08l3.83,3.12l5.14,0.45l-0.06,2.11l0.27,0.58l3.44,2.64l1.66,0.76l4.72,-0.1l7.17,1.59l1.72,-0.47l1.38,0.73l0.9,-0.0l4.66,-2.03l5.53,-0.68l3.09,-1.04l1.45,0.23l1.07,-0.2l1.83,-0.89l0.96,-1.85l2.96,-1.98l5.22,-2.55l3.2,0.36l1.84,0.88l2.02,1.84l1.38,0.6l2.35,0.12l3.03,-1.24l1.43,0.3l1.44,0.54l0.71,0.62l-4.84,9.93l-1.54,2.03l-0.25,2.98l-1.78,1.03l-0.19,0.39l0.24,1.78l0.55,0.9l2.15,1.83l1.08,-0.17l1.76,-1.38l1.99,0.18l1.85,-0.29l2.16,0.57l2.17,1.49l3.44,-3.22l2.57,-0.35l2.54,0.41l1.8,2.03l2.38,0.99l0.65,1.24l0.93,0.52l1.8,2.04l1.36,0.99l0.52,1.52l0.76,1.05l-0.01,1.06l-1.13,0.84l-2.67,-0.08l-3.79,-1.36l-0.93,0.6l-2.89,-0.2l-1.99,0.49l-1.2,0.45l-1.18,0.92l-1.41,-0.65l-1.01,0.08l-0.42,0.37l-0.4,1.72l-3.39,-0.28l-2.33,0.96l-2.4,3.23l-0.39,0.71l-0.06,1.29l-1.88,0.99l-1.87,1.53l-3.74,0.61l-1.74,0.11l-1.43,-0.38l-1.43,0.3l-1.21,1.84l-2.52,2.13l-3.44,1.97l-6.46,-1.24l-2.32,-1.64l-3.93,-0.05l-1.35,1.02l-0.99,1.34l-1.71,4.41l0.96,1.92l2.38,2.38l0.66,1.54l-1.14,0.39l-1.55,1.43l-4.17,1.53l-4.52,5.09l-7.72,2.96l-4.84,0.2l-3.84,-0.28l-10.6,1.44l-11.84,4.97l-1.46,1.22l-0.95,-0.4l-2.3,-0.1l0.0,-1.59l-0.48,-0.39l-5.77,1.1l-4.75,-2.26l-6.83,-1.36l-1.26,-0.48l-2.32,-2.54l-1.39,-0.42l-3.06,-0.12l-8.31,-1.14l-3.92,0.98l-16.87,-2.0l-6.05,0.61l-0.42,-1.63l-3.28,-3.13l-0.15,-1.01l-2.38,-5.24l-1.45,-0.72l0.29,-1.8l-0.2,-0.51l-2.52,0.02l-2.39,-0.79l-2.56,-1.53l-1.19,-1.11l-1.93,-0.36l-2.15,-2.01l-1.23,-0.49l-5.48,-0.85l-2.76,0.24l-2.97,-0.55l-3.26,-0.07l-1.18,-0.45l-0.88,0.06l-1.89,-0.9l-1.14,0.11l-1.48,-2.67l0.33,-1.69l2.14,-2.77l0.03,-0.89l-0.63,-1.57l0.87,-2.78l-0.36,-1.84l-0.87,-1.94l-1.26,-0.64l-1.54,-2.5l-0.52,-2.03l-0.88,-1.72l-1.6,-0.72l-0.81,-1.38l-0.52,-0.08l-1.29,0.57l-1.61,-1.67l-1.89,-0.23l-1.51,0.36l-3.73,-2.07l-0.11,-0.9l-0.63,-0.83l-3.77,-1.57l0.57,-0.74l-0.01,-0.67l-1.71,-0.88l-0.5,-0.67Z\",\n            name: \"Mongolia\"\n          },\n          BN: {\n            path: \"M669.68,427.4l0.73,0.87l0.54,2.47l-0.75,-0.21l-0.52,-3.13ZM663.3,429.66l2.55,-1.0l3.15,-2.12l-2.11,1.53l0.21,2.24l0.34,0.55l-0.41,1.43l-0.75,0.81l-1.24,-1.48l-0.84,-0.24l-0.9,-1.73Z\",\n            name: \"Brunei\"\n          },\n          BH: {\n            path: \"M186.05,263.08l0.03,-0.01l0.0,0.12l-0.03,-0.12ZM186.08,263.2l0.33,0.5l-0.01,1.54l-0.25,-0.46l-0.07,-1.59Z\",\n            name: \"Bahrain\"\n          },\n          BT: {\n            path: \"M479.26,258.41l-0.68,-0.6l-1.59,-0.42l-1.49,0.21l-0.67,-0.33l-1.21,-0.69l-0.18,-0.78l-0.61,-0.7l0.98,-0.78l0.47,-1.27l1.11,-1.01l0.49,-1.02l2.35,-2.77l2.96,-1.79l1.35,-0.05l1.57,0.4l-0.19,0.88l0.51,0.52l2.68,0.07l2.39,0.83l1.8,-0.86l2.35,0.97l-0.39,2.29l0.21,0.81l1.39,1.06l1.61,-0.11l0.49,0.91l-0.62,1.49l0.57,1.2l-0.19,0.44l-2.46,0.43l-0.91,-0.03l-0.85,-0.49l-1.14,0.61l-4.0,0.16l-3.09,-0.93l-1.21,0.46l-0.53,0.64l-3.27,0.27Z\",\n            name: \"Bhutan\"\n          },\n          HK: {\n            path: \"M661.58,292.96l0.56,-0.57l0.79,-0.15l0.37,0.12l0.23,0.69l-0.18,0.38l-1.77,-0.47Z\",\n            name: \"Hong Kong\"\n          },\n          JO: {\n            path: \"M73.44,221.31l0.32,-1.94l0.71,-1.81l-0.18,-2.7l0.4,-4.54l0.81,-0.34l0.91,0.11l1.09,1.36l1.36,0.46l1.2,0.92l3.65,0.53l14.19,-8.55l1.88,6.47l-0.46,0.56l0.45,1.39l0.49,0.26l1.18,-0.3l0.12,0.32l-2.13,1.8l-14.99,4.17l-0.18,0.66l7.3,7.79l-2.14,1.24l-1.23,2.64l-5.25,1.04l-0.54,0.35l-1.77,2.81l-2.92,2.3l-7.72,-1.2l0.79,-4.67l0.53,-1.3l0.03,-2.42l2.2,-5.75l-0.11,-1.66Z\",\n            name: \"Jordan\"\n          },\n          PS: {\n            path: \"M69.37,220.61l0.5,-1.44l1.93,-1.52l-0.75,-0.82l-0.89,-0.22l-0.2,-2.28l0.38,-1.39l0.34,-0.86l0.71,-0.46l1.04,0.19l1.21,0.91l0.0,4.78l-0.74,2.04l-2.36,0.96l-1.18,0.1ZM64.36,221.37l0.26,-0.24l-0.2,0.39l-0.05,-0.15Z\",\n            name: \"Palestine\"\n          },\n          LB: {\n            path: \"M71.41,206.16l3.41,-7.3l0.31,-1.87l1.06,-1.44l1.32,-0.97l0.1,-0.56l2.44,-0.29l-0.58,1.07l1.36,0.72l0.51,1.51l-0.27,0.54l-1.73,1.43l-0.21,0.89l-1.1,0.06l-1.03,0.79l-0.41,0.85l0.43,0.87l-1.83,1.74l-1.46,0.66l-0.46,1.19l-0.37,0.22l-1.46,-0.12Z\",\n            name: \"Lebanon\"\n          },\n          LA: {\n            path: \"M558.12,308.97l0.8,-2.48l0.9,-0.56l1.21,-0.03l0.58,-0.32l0.14,-0.59l-0.68,-0.32l0.06,-0.31l0.54,-0.46l0.92,-1.8l1.27,-0.46l1.32,-0.98l0.33,1.83l0.41,0.49l2.23,-0.25l1.45,0.64l0.79,-0.52l0.23,-0.51l-0.59,-0.81l0.09,-3.9l-1.05,-1.43l-0.46,-1.67l1.09,-1.67l0.5,0.65l1.96,-0.09l2.85,3.44l0.75,0.49l0.74,1.87l0.55,0.12l0.79,-0.61l0.59,0.27l-0.72,3.25l2.08,3.11l4.25,1.55l3.34,-1.92l3.23,2.09l-1.48,1.18l0.07,0.59l1.87,0.54l0.4,1.12l1.34,0.22l0.42,0.91l-1.29,1.97l-1.05,0.95l-2.28,-0.55l-2.03,0.27l-0.16,0.6l0.32,1.04l-1.08,0.87l-0.12,0.82l6.31,4.01l3.0,0.99l-0.42,1.03l0.28,0.95l1.72,1.75l0.92,0.28l0.85,1.15l0.86,2.02l2.37,2.5l1.98,1.54l1.67,1.97l0.28,2.13l0.96,1.49l0.83,0.4l0.66,-0.34l0.63,1.05l3.36,2.31l-1.56,1.09l-0.2,0.64l0.94,1.54l2.13,1.74l0.53,0.81l-1.24,1.92l0.26,2.05l-0.64,0.9l-0.88,-0.18l-1.3,1.28l-0.72,0.04l-0.59,0.63l-0.63,0.09l-2.18,-1.88l-0.59,0.03l-0.89,0.79l-0.78,-0.14l-0.68,0.79l-1.22,0.15l-0.43,0.59l1.04,2.11l-0.26,0.59l-0.82,-0.02l-1.24,-1.21l-1.56,-0.54l-1.34,0.34l-0.62,-0.55l-0.32,-0.6l1.56,-0.89l0.71,-1.11l0.39,-2.8l-0.42,-2.39l0.93,-1.73l0.17,-1.54l-0.28,-0.5l-1.57,-0.92l-0.05,-1.29l-2.57,-1.25l-0.75,-1.37l-0.96,-0.96l-0.46,-1.25l-0.05,-1.74l0.51,-3.38l-0.65,-1.35l-2.34,-1.84l-3.57,-4.78l-1.35,-0.09l-2.3,-0.79l-1.67,0.07l-0.48,0.38l-0.07,0.74l-1.19,1.15l-0.3,0.82l-1.62,0.51l-1.04,0.72l-0.47,-0.8l-1.53,-0.65l-1.54,-1.23l-0.79,-0.06l-1.18,1.01l-1.29,0.38l-0.67,1.12l-2.05,1.33l-1.8,1.65l-1.16,-0.32l1.6,-4.28l-0.05,-1.21l-0.67,-1.09l0.86,-1.3l0.92,-2.92l-0.66,-2.72l0.1,-1.75l-0.63,-0.53l-1.54,-0.29l-1.85,0.75l-0.71,0.09l-0.67,-0.33l-0.57,-0.57l-0.12,-0.62l1.05,-2.53l-0.19,-0.97l-1.62,-1.77l-0.72,-0.02l-0.52,0.36Z\",\n            name: \"Lao PDR\"\n          },\n          TW: {\n            path: \"M709.3,291.82l-1.83,-4.59l0.51,-1.89l-0.08,-2.0l3.67,-6.43l3.03,-4.34l3.7,-1.83l2.14,1.56l0.09,0.35l-0.77,1.26l0.06,2.28l-1.59,3.77l-1.03,5.01l-0.91,2.74l-2.57,3.52l-0.85,1.94l-0.35,3.19l-0.44,-0.46l-0.11,-1.02l-0.74,-1.59l-1.92,-1.47Z\",\n            name: \"Taiwan\"\n          },\n          TR: {\n            path: \"M7.99,161.66l1.03,0.22l1.78,-0.37l0.63,-0.86l-1.88,-0.41l-0.87,-1.59l0.93,-0.42l0.78,-0.97l-0.38,-0.84l-1.04,-0.26l0.22,-1.4l-1.11,-1.38l1.53,-1.64l-0.01,-0.66l-0.98,-0.39l-5.01,0.73l0.43,-1.17l0.14,-2.62l0.96,-0.37l3.02,-3.17l1.89,0.03l0.94,-0.5l0.88,-0.02l0.41,0.66l1.26,0.53l2.03,-0.11l0.96,-0.5l0.06,-0.48l0.2,0.52l0.44,0.12l2.4,-0.29l5.37,0.12l0.62,-0.4l-0.05,-0.64l-1.48,-0.65l0.7,-0.47l6.52,-0.93l0.35,-0.33l-0.36,-0.66l-4.21,-0.72l-1.38,-1.17l0.51,-1.42l5.55,0.63l3.22,-0.4l3.54,0.99l3.33,-0.2l1.01,-0.65l0.77,-1.35l4.6,-2.35l1.66,-1.26l7.24,-2.43l10.86,0.44l1.96,-0.93l0.54,0.16l-0.03,1.2l1.48,1.59l2.21,0.87l2.62,-0.69l0.67,0.19l0.96,2.25l1.79,1.43l0.93,0.16l1.2,-0.81l0.79,-0.08l1.41,0.69l0.74,0.89l5.19,0.94l1.14,0.69l3.53,0.69l7.87,-1.6l2.82,1.08l2.54,0.35l1.02,-0.16l6.24,-2.71l2.51,-1.47l0.64,-0.71l2.14,0.68l0.98,-0.56l3.85,0.49l1.25,-1.25l0.91,0.03l0.44,0.73l2.22,1.53l0.02,0.52l0.51,0.51l1.61,0.31l0.22,0.85l1.28,1.16l0.57,2.17l-1.04,1.78l0.93,2.48l-0.04,0.84l2.19,0.95l2.59,-0.14l2.28,1.66l-1.27,0.98l-0.54,2.14l-2.31,0.12l-0.46,0.66l0.51,1.54l0.64,0.58l-0.24,1.25l0.2,0.53l0.71,0.9l0.23,3.83l1.0,0.49l-1.64,3.72l0.43,0.51l0.73,0.06l1.56,1.01l-0.24,0.46l0.21,1.92l1.62,1.39l-0.23,0.51l-0.93,-0.02l-2.34,1.61l-0.2,-2.01l-0.87,-0.72l-0.84,-0.11l-1.42,0.77l-1.09,-0.03l-4.28,-1.2l-1.3,0.34l-1.32,-0.37l-2.72,2.18l-0.63,-1.23l-0.91,-0.31l-1.16,0.82l-3.93,0.97l-6.05,-0.08l-5.27,2.36l-4.83,1.22l-4.33,-0.1l-2.35,-1.43l-1.98,-0.36l-5.77,2.22l-2.57,-0.08l-0.96,-0.89l-2.18,-0.39l-0.64,0.48l-0.7,2.82l0.69,1.64l-1.76,0.56l-0.32,1.45l-0.99,0.56l-0.34,0.73l-1.01,-0.55l0.15,-0.53l-1.01,-2.49l2.77,-3.03l-0.16,-1.54l-1.04,-0.94l-0.43,-0.04l-2.94,1.62l-0.88,1.05l-0.89,0.15l-4.31,-1.91l-1.02,-0.13l-3.12,1.87l-2.57,2.64l-1.88,0.93l-5.61,0.72l-1.03,0.48l-1.75,-0.5l-1.08,-0.65l-2.65,-2.99l-5.1,-2.34l-5.46,-0.6l-0.89,0.96l-0.17,2.23l-0.71,2.0l-1.51,-0.37l-3.86,1.25l-3.28,-1.34l-0.48,-0.5l-0.77,-2.47l-0.76,-0.44l-1.22,0.32l-2.38,-1.06l-1.51,-0.11l-1.53,1.41l0.18,-0.25l-0.34,-0.64l-0.34,0.02l1.78,-1.56l0.13,-0.28l-0.36,-0.57l-7.0,0.23l0.11,-0.26l1.71,-0.35l0.29,-0.44l-0.31,-1.03l-2.07,-1.09l-0.87,-2.1l0.93,-0.51l0.06,-2.34l-2.86,-1.01l-1.45,-1.17l-1.04,0.34l-1.56,-0.72l0.81,-0.68l0.07,-0.85l-0.38,-1.15l0.83,0.48l0.08,1.22l0.49,0.71l0.25,0.15l0.66,-0.5ZM15.22,175.57l-0.41,0.2l-0.33,-0.03l0.31,-0.13l0.43,-0.04ZM16.6,143.61l0.01,-0.05l-0.46,-0.47l0.7,0.08l-0.24,0.44ZM3.34,140.98l2.15,-2.44l-0.15,-2.09l1.72,-0.87l0.46,-0.67l-0.31,-2.04l-1.93,-1.23l1.34,-0.44l0.56,-1.08l2.01,-0.26l1.03,-0.61l1.74,-0.22l1.82,1.43l3.3,-0.46l-0.1,0.85l0.47,1.13l1.24,1.74l1.18,0.83l5.0,2.06l-0.52,1.31l-1.07,0.25l-4.52,-0.94l-1.96,0.79l-1.34,-0.18l-1.86,0.36l-1.98,2.61l-3.22,1.51l0.3,-0.41l-0.33,-0.64l-4.89,0.12l-0.18,-0.41ZM7.44,143.02l-1.73,1.59l-1.03,1.2l0.09,-1.2l1.25,-0.99l1.41,-0.61ZM0.74,145.85l0.89,-0.3l0.19,0.13l-1.08,0.17Z\",\n            name: \"Turkey\"\n          },\n          LK: {\n            path: \"M405.27,403.82l0.63,-0.48l0.31,-2.67l0.69,-2.19l-0.1,-1.45l1.26,-2.36l0.05,-2.28l1.32,0.61l0.71,-0.1l0.29,-0.53l1.52,1.26l1.62,2.89l0.68,0.41l1.3,1.94l0.18,1.09l1.12,0.66l0.37,2.11l1.82,2.76l1.26,2.7l0.27,0.91l-0.09,2.77l-1.05,2.78l-2.37,1.92l-4.81,1.92l-1.57,0.21l-1.55,-0.41l-1.15,-0.96l-1.7,-4.93l-1.0,-8.59ZM409.2,391.24l-1.76,-0.39l-0.41,-0.44l1.57,0.08l0.6,0.76Z\",\n            name: \"Sri Lanka\"\n          },\n          TL: {\n            path: \"M743.75,531.36l1.77,-2.37l1.4,-0.5l3.12,-0.62l6.11,-0.25l2.56,-1.05l1.81,0.43l-2.38,1.79l-1.88,0.51l-1.38,1.0l-2.37,0.62l-1.6,0.93l-4.02,1.15l-2.18,1.48l-0.65,-1.32l0.98,-0.19l0.44,-1.35l-0.59,-0.65l-1.14,0.38ZM737.32,534.04l0.79,-0.42l1.17,-0.31l-0.74,0.83l-1.22,-0.09Z\",\n            name: \"Timor-Leste\"\n          },\n          TM: {\n            path: \"M203.1,134.81l-0.97,-1.38l-0.75,-1.96l2.58,-2.29l1.35,-0.76l-1.16,0.96l-1.2,2.45l0.48,0.84l-0.32,2.14ZM206.04,128.16l3.88,-1.05l3.1,-0.34l5.29,3.23l2.91,4.49l1.91,1.78l0.68,0.13l2.88,-0.54l8.07,0.54l1.16,-1.25l-0.76,-0.98l-0.26,-2.09l0.85,0.12l1.5,1.43l2.63,-0.58l1.07,-0.61l0.51,-0.81l-0.12,-0.87l-1.1,-0.81l-0.57,-1.62l1.36,-0.37l1.43,-2.54l1.56,0.47l0.76,1.14l1.07,0.04l0.16,-0.96l-2.22,-2.29l2.06,-0.02l0.81,-0.77l1.85,1.68l2.07,0.43l0.74,1.24l0.76,0.47l3.79,0.28l0.85,0.67l-0.35,2.11l1.55,0.99l-0.65,0.67l0.44,1.43l-0.5,1.54l0.38,0.61l2.88,1.63l3.07,-0.24l2.91,0.53l0.65,-0.05l1.18,-0.72l1.0,0.29l1.8,1.21l1.39,3.57l2.06,3.05l0.85,3.23l7.75,5.38l1.95,1.91l3.03,1.84l1.19,-0.12l2.24,1.84l7.43,4.52l2.76,-0.01l3.1,1.66l1.36,0.35l0.19,0.22l-0.77,1.34l-0.06,3.42l-2.52,-0.56l-2.87,-1.32l-1.09,1.01l-0.59,1.71l-3.23,0.11l-2.21,0.96l-2.42,6.9l-1.05,0.9l-1.93,0.94l-0.56,0.81l-1.11,0.03l-4.14,1.3l-1.34,0.12l-0.43,0.76l0.37,0.94l-0.74,1.84l-2.56,1.51l-1.65,0.02l-1.01,0.51l-0.49,-0.76l-1.74,-1.33l-2.84,0.04l-1.86,-1.54l-0.71,-0.1l0.1,-1.7l-0.68,-1.07l0.38,-0.89l-0.32,-4.03l-0.44,-0.84l-6.02,-0.15l-1.99,-2.71l-4.53,-2.48l-0.55,-0.59l-0.67,-1.69l-3.71,-1.53l-1.3,0.25l-0.99,-0.27l-1.02,0.41l-0.75,-0.21l-2.17,-1.45l-4.57,-1.19l-0.25,-1.22l-1.0,-0.91l-5.86,-0.35l-1.13,0.6l-0.29,0.89l-5.02,-0.19l-1.6,0.44l-3.74,2.45l-1.46,2.63l-3.62,1.13l-1.71,-0.08l-0.61,-4.69l0.33,-8.95l-1.59,-2.61l-2.68,-1.14l-1.3,0.25l0.55,-1.59l1.9,0.43l0.79,-0.12l0.32,-0.51l-0.29,-0.73l-0.73,-0.5l0.06,-2.12l-0.93,-0.58l-3.08,-0.24l-0.51,0.58l-0.94,-2.3l-0.07,-1.47l1.32,-4.71l1.22,1.25l1.6,0.4l1.86,-0.34l0.99,1.22l1.24,0.3l2.26,-0.61l1.46,0.23l0.32,-0.57l-0.35,-0.92l1.37,0.24l1.14,-0.41l0.37,-0.43l0.06,-1.24l-0.39,-1.08l-0.65,-0.72l-2.36,-1.57l-1.3,-1.27l-1.97,-5.25l-1.88,-0.49l-3.37,0.39Z\",\n            name: \"Turkmenistan\"\n          },\n          TJ: {\n            path: \"M312.6,153.86l0.49,-1.67l0.75,-0.73l1.15,-0.49l4.28,0.72l1.47,-0.06l0.98,-0.92l0.43,-1.72l0.68,-0.04l1.02,-0.65l0.05,-0.52l-0.48,-0.67l1.1,-0.28l0.2,-0.47l-0.55,-0.7l2.53,0.2l0.5,-1.43l-0.62,-2.01l0.6,-0.54l0.29,-1.15l0.59,0.04l1.33,0.95l0.68,0.04l4.34,-2.09l0.69,-1.18l1.41,1.4l0.16,0.81l0.48,0.2l-2.49,2.0l-0.24,0.95l0.31,0.46l1.01,0.36l0.69,1.04l0.79,0.09l-0.57,0.34l-0.55,1.08l-0.56,-0.81l-3.63,-1.35l-3.51,0.92l-0.7,0.87l0.01,0.65l-0.71,-0.36l-0.52,0.2l-0.23,0.5l-0.38,1.42l0.51,2.2l0.44,0.36l2.29,-0.43l2.59,0.18l1.71,-0.22l0.58,0.29l1.77,-0.37l0.57,0.13l0.89,1.24l0.85,0.31l1.54,-0.15l0.69,-0.8l2.64,-0.87l0.14,1.01l1.56,0.42l-0.06,0.72l0.58,0.64l0.59,0.04l1.42,-0.63l1.34,1.18l0.41,0.04l0.98,-1.13l1.43,-0.33l4.05,0.14l2.7,-0.86l0.79,0.04l-0.15,1.79l1.41,2.05l-0.78,0.93l0.93,2.59l1.55,0.72l0.72,-0.27l0.58,-0.82l0.9,0.0l3.72,1.57l-0.34,2.11l1.2,3.66l-0.24,1.67l1.57,1.55l-1.23,0.9l-1.56,-1.23l-3.22,-0.24l-0.9,0.78l-2.94,0.8l0.31,-0.94l-0.4,-0.66l-2.66,-0.38l-3.85,1.77l-1.04,0.82l-0.75,1.19l-2.16,0.4l-4.14,2.46l-0.73,-0.02l-0.79,-1.05l-0.7,-2.31l1.11,-6.72l-0.64,-0.61l-1.63,0.26l0.38,-1.82l-0.6,-1.47l-1.67,-1.13l-1.62,-0.38l-1.22,0.38l-0.9,0.77l-1.53,2.3l-1.6,1.44l0.26,2.26l-0.36,0.54l-0.71,0.2l-0.83,-0.46l-0.97,-0.08l-2.56,0.51l-0.8,0.87l-0.03,2.31l-0.63,0.6l-2.15,-1.75l-0.7,-0.14l-0.87,0.62l-0.93,0.03l-2.25,1.1l-0.9,0.97l-1.34,0.56l-0.57,-0.13l-1.25,-1.25l0.38,-2.72l3.53,-4.61l0.49,-1.81l-1.99,-2.39l-0.27,-1.51l0.72,-1.85l-0.39,-1.0l-0.72,-0.35l-2.42,-0.06l-0.36,-1.16l-2.04,-0.68Z\",\n            name: \"Tajikistan\"\n          },\n          TH: {\n            path: \"M537.74,324.01l2.04,-0.59l0.45,-0.42l-0.28,-2.76l0.73,-1.57l0.08,-2.38l1.18,-1.35l0.27,-0.79l1.75,0.63l4.69,-0.67l0.85,-0.91l0.34,-1.57l0.78,-0.19l1.13,0.28l1.04,-0.35l0.57,-0.75l-0.14,-0.95l1.52,0.11l1.48,-0.7l0.99,0.61l0.38,0.69l0.44,-0.05l0.96,-0.98l1.39,1.65l-1.06,2.91l0.28,1.07l0.7,0.71l1.17,0.53l1.0,-0.15l1.15,-0.68l1.82,0.3l-0.13,1.56l0.65,2.57l-0.87,2.67l-0.9,1.41l0.67,1.48l0.03,0.9l-1.74,4.23l0.45,0.78l1.2,0.54l0.78,-0.12l4.07,-3.13l0.69,-1.12l1.14,-0.27l1.06,-0.94l1.58,1.2l1.52,0.65l0.32,0.84l0.8,0.31l1.15,-1.0l1.89,-0.68l0.79,-1.54l0.91,-0.51l0.04,-0.84l1.24,-0.05l2.26,0.78l1.17,0.08l2.58,3.67l3.09,2.7l0.49,1.06l-0.52,3.18l0.05,1.82l0.54,1.52l1.05,1.09l0.81,1.45l2.36,1.1l-0.1,0.63l0.34,0.79l1.66,1.09l-0.17,1.07l-0.78,1.05l-0.17,0.77l0.4,2.55l-0.48,2.9l-2.18,1.37l-0.64,0.74l-0.46,-1.02l-1.49,-0.49l-6.07,0.52l-2.88,-0.48l-3.04,0.68l-1.37,0.65l-1.02,0.96l-1.4,2.3l-1.3,1.31l-0.09,0.53l-1.54,0.29l-0.11,2.45l0.98,2.09l0.27,2.51l1.86,1.89l-0.26,1.54l-0.86,-0.06l-0.14,0.32l-1.06,-0.8l-0.59,-1.02l-0.56,0.06l-1.2,-1.2l-2.43,-1.27l-2.27,0.49l-2.58,-0.4l-1.21,0.26l0.58,-5.56l-0.62,-0.66l-2.72,-0.77l-0.4,0.33l-3.09,0.59l-1.02,0.94l-0.2,0.84l0.71,1.59l-0.91,2.64l0.19,3.93l-1.05,1.63l-0.35,1.5l-1.27,2.17l-1.08,4.38l-1.47,2.35l-0.92,2.27l-0.07,4.25l0.92,2.45l-0.22,1.06l0.22,0.41l1.15,0.42l2.57,-0.74l0.54,0.13l1.06,5.07l1.12,1.35l0.69,-0.03l1.1,4.65l-0.71,-0.32l-0.96,0.72l0.38,1.87l1.85,2.56l1.25,0.14l3.14,2.29l2.99,-0.24l1.37,0.96l1.45,2.16l1.99,1.54l-0.2,0.8l-1.73,2.19l-0.57,0.01l-0.62,-0.83l-0.58,-0.14l-2.26,0.9l-0.77,1.07l-0.71,-0.69l0.68,-1.21l-0.18,-2.32l-0.75,-0.38l-0.78,0.05l-0.54,-1.24l-0.66,-0.46l-0.85,0.18l-1.85,-0.67l-0.86,-1.07l-1.03,0.3l-0.26,1.05l-1.38,-1.7l-1.18,-0.89l0.16,-1.5l-1.21,-0.97l0.27,-0.83l-0.53,-0.49l-1.31,-0.03l-0.73,-1.83l-0.6,-0.75l-0.9,-0.15l-0.12,-1.17l-1.94,-1.31l-0.71,-1.5l-1.29,-0.72l-0.59,0.2l-0.76,0.98l-0.68,-1.48l0.03,-2.42l0.63,-1.55l0.33,-2.39l2.81,-8.01l0.09,-2.34l3.14,-3.22l3.28,-5.36l-1.16,-3.29l-0.48,-2.8l-1.36,-1.43l-0.7,-2.18l0.42,-1.38l-0.33,-3.85l-1.57,-2.62l-2.74,-2.39l-2.36,-3.38l-0.3,-1.14l-0.11,-1.46l2.77,-1.37l0.24,-5.08l1.99,-1.43l0.23,-1.3l-0.53,-0.67l-0.48,0.01l-0.77,0.61l-1.26,-2.81l-0.32,-1.92l-5.49,-6.4l0.28,-0.94l-0.82,-2.56l-0.24,-0.48l-0.82,-0.09l-0.57,-0.75ZM559.45,406.63l0.01,0.05l-0.04,-0.01l0.03,-0.04ZM556.62,392.44l0.03,-0.28l0.21,0.01l-0.06,0.19l-0.18,0.08ZM544.21,404.66l-0.1,-0.43l0.18,-0.99l0.21,0.06l-0.29,1.36Z\",\n            name: \"Thailand\"\n          },\n          XC: {\n            path: \"M54.11,189.32l0.71,-1.69l3.58,0.38l4.65,-1.22l-1.47,1.07l-0.12,1.43l-1.57,0.62l-1.16,-0.11l-0.33,-0.76l-0.7,-0.35l-1.48,-0.08l-2.13,0.7Z\",\n            name: \"N. Cyprus\"\n          },\n          NP: {\n            path: \"M410.28,243.11l-2.55,-1.76l0.5,-1.57l0.84,-0.96l0.17,-1.86l0.43,-1.13l1.67,-2.57l2.53,-2.12l0.36,0.0l0.71,0.97l1.05,0.04l0.69,-0.55l1.13,-1.86l1.45,-0.35l2.74,0.45l1.31,2.1l2.04,1.05l2.81,2.14l1.2,0.53l1.08,0.07l3.06,3.39l1.08,0.07l1.86,-0.7l0.91,0.36l1.07,2.57l4.26,2.86l2.43,-0.32l-0.44,1.39l0.29,0.76l0.99,0.39l3.39,0.13l2.33,2.94l1.09,-0.49l0.13,-1.05l0.41,0.62l1.7,0.81l1.0,-0.37l0.52,-1.03l3.86,2.13l3.7,0.19l1.83,-0.58l1.62,0.11l-1.18,5.52l0.99,1.89l0.33,1.4l-0.85,2.37l-1.11,-0.4l-1.63,0.3l-1.53,-0.18l-1.06,0.47l-1.13,-0.44l-0.63,-1.02l-2.53,0.89l-2.42,-1.08l-2.71,-0.61l-1.59,0.35l-0.56,-1.32l-0.61,-0.49l-0.81,-0.06l-2.2,0.7l-0.76,-0.85l-3.21,-1.41l-0.5,-1.97l-1.16,-0.57l-2.9,-1.14l-1.72,0.42l-0.54,0.41l-2.88,-0.65l-1.06,0.69l-3.82,-1.07l-0.63,-1.31l-1.72,-0.01l-3.45,-1.93l-1.06,0.34l-3.87,-2.4l-1.13,-1.33l-4.32,-2.53l-0.65,-0.19l-0.62,0.45Z\",\n            name: \"Nepal\"\n          },\n          PK: {\n            path: \"M269.48,270.83l0.52,-4.2l0.67,-0.75l0.57,-2.85l2.01,-1.0l0.97,-0.08l0.52,-1.04l0.77,-0.46l2.52,-0.65l2.87,-0.06l0.36,-0.47l0.11,-1.17l0.45,-0.39l-0.03,-1.58l0.47,-0.86l-0.52,-0.74l-0.77,-0.41l-2.77,0.13l0.39,-1.76l-0.54,-4.07l0.04,-2.2l-1.6,-0.09l-1.51,-1.37l-3.47,-1.08l-1.91,-1.91l-2.05,-3.71l-0.19,-0.94l-2.65,-2.99l10.89,3.26l8.22,-0.72l3.87,0.84l2.43,-1.24l5.25,-0.12l8.22,-2.31l1.17,-1.25l-0.51,-1.27l0.49,-1.74l-0.13,-2.39l0.42,-1.5l0.32,-0.75l1.44,-0.87l1.7,-1.97l1.13,-0.25l0.74,0.48l1.28,0.21l1.43,-0.15l2.17,-0.92l0.23,-0.41l-0.28,-0.62l-0.84,-0.53l0.92,-0.14l2.08,-1.08l1.11,-1.01l1.85,0.42l1.11,-0.38l1.19,1.17l1.06,0.19l1.7,-0.92l1.54,-1.71l-0.18,-4.32l1.19,-1.99l0.71,-2.75l2.97,-0.66l2.75,-1.73l0.12,-0.99l-1.13,-2.12l-1.89,-2.23l0.09,-0.52l0.46,-0.22l2.4,0.73l2.52,0.08l1.59,-0.27l1.74,-0.77l0.34,-0.78l0.03,-2.08l-0.91,-1.17l2.28,-2.78l1.25,-0.9l1.26,-1.87l-0.52,-1.21l0.4,-0.97l-0.21,-1.16l-1.35,-2.98l-1.47,-1.22l2.92,-2.92l1.05,0.02l3.08,-2.38l3.32,-1.04l8.46,-0.5l2.11,0.54l4.23,-1.81l1.89,0.66l1.45,-0.23l1.96,0.57l0.66,1.53l1.84,-0.02l1.15,0.7l0.89,2.05l-0.04,1.63l-0.48,0.91l0.16,0.54l1.26,0.65l0.79,1.44l0.87,0.06l1.8,-0.54l0.21,0.8l1.45,0.92l1.99,4.42l-0.25,0.7l-1.59,0.77l-1.22,1.27l-1.07,-0.14l-2.06,0.72l-1.13,0.04l-2.35,1.35l-1.72,-0.27l-2.12,-0.88l-1.69,-0.06l-5.08,-0.99l-2.74,1.13l-1.28,2.39l0.11,0.68l1.22,0.82l-0.53,0.92l0.26,0.83l0.45,0.32l1.89,0.13l-1.7,1.09l-0.33,0.76l0.06,0.8l1.21,1.19l-0.19,0.79l-0.96,1.3l0.16,0.78l1.0,1.03l1.2,0.61l0.09,1.56l0.37,0.35l2.14,0.21l0.01,1.64l0.32,0.43l1.07,0.42l1.4,-0.03l1.71,0.69l0.54,0.53l-0.41,0.71l-3.79,1.57l-1.57,1.26l-0.36,1.18l0.6,1.91l-0.55,2.25l0.18,0.66l0.63,0.48l-2.05,1.08l-3.26,3.73l-0.26,0.91l0.35,1.04l-0.24,0.33l-0.5,0.49l-3.35,1.5l-1.12,3.11l-2.36,4.12l-4.24,2.31l-1.61,3.3l-1.4,1.47l-0.56,1.59l-2.17,0.66l-2.71,0.32l-2.75,0.97l-0.54,-0.33l-0.39,-1.18l-0.59,-0.61l-0.85,-0.41l-0.84,0.03l-2.03,1.49l-1.89,3.07l-2.77,2.99l-0.51,2.6l0.37,0.82l1.92,1.06l2.4,0.39l0.41,0.36l-0.14,2.08l-0.42,1.24l0.25,1.53l1.41,1.76l2.65,0.16l0.04,1.91l2.84,5.54l-0.51,1.0l0.38,1.32l-1.88,0.98l-0.72,-0.22l-0.2,-0.99l-0.83,-0.16l-3.03,1.01l-0.66,0.78l-1.39,0.17l-1.84,-0.86l-5.29,0.01l-0.66,-0.31l-0.65,0.61l-0.06,2.13l-3.01,0.31l-1.21,1.0l-0.25,-0.26l-0.77,0.04l-0.58,-0.5l-1.41,0.59l-0.05,-0.45l-0.57,-0.33l-0.36,0.17l-0.45,-0.88l-1.14,-1.08l-1.04,-4.6l-0.84,-0.57l-2.73,-0.5l-0.04,-2.81l-1.28,-2.11l-0.79,-0.73l-0.95,-0.3l-1.12,0.15l-0.56,0.45l-0.14,0.63l-3.17,0.73l-1.97,-0.15l-2.65,0.5l-2.1,0.03l-0.99,0.92l-3.43,-1.07l-0.78,-0.57l-1.09,0.44l-1.53,-0.33l-1.4,0.26l-0.65,0.55l-0.13,0.54l-5.86,-0.39l-2.45,0.99l-1.15,-0.64l-0.84,0.54l-1.21,0.17l-1.92,-0.28Z\",\n            name: \"Pakistan\"\n          },\n          PH: {\n            path: \"M728.0,406.82l-0.36,-1.38l-0.85,-0.45l-0.93,0.16l-1.15,1.02l-2.46,5.15l-0.73,-0.16l-0.33,-0.59l0.11,-0.69l0.93,-1.32l0.61,-3.27l0.76,-0.92l0.9,-0.65l4.06,-0.9l0.64,-0.48l0.18,-1.27l0.58,-0.71l1.78,-0.64l0.67,-0.86l1.5,0.51l1.05,1.19l0.18,1.61l-0.78,0.77l0.18,0.69l0.35,0.07l3.3,-1.43l1.49,-2.74l1.27,0.56l1.14,-0.29l0.99,-3.03l1.85,0.74l0.43,-0.17l0.47,-1.0l1.03,0.24l0.92,-0.17l0.58,-1.41l-0.86,-3.85l0.23,-0.35l2.55,1.76l0.99,1.46l0.61,0.45l0.63,0.02l0.02,0.82l0.91,1.89l-1.33,1.93l0.36,0.57l1.35,0.53l0.09,1.0l0.58,1.01l-0.17,2.72l1.02,1.26l0.13,2.5l-1.03,2.12l-1.88,1.25l0.29,1.17l-0.14,1.8l-0.55,-2.81l-1.64,-3.69l-0.84,-0.17l-0.91,0.67l-0.34,1.13l-1.8,2.36l-0.19,0.91l0.45,0.91l1.14,1.03l0.58,1.69l-0.02,1.68l-1.46,2.17l-0.55,0.33l-0.44,-1.09l0.26,-1.7l-0.39,-0.57l-0.86,0.04l-1.06,1.35l-0.53,-0.03l-5.2,-2.61l-0.91,-1.16l-0.67,-4.15l1.48,-1.94l0.23,-0.75l-0.31,-1.0l-1.65,-1.77l-2.44,-1.24l-0.93,-0.12l-0.84,0.47l-0.61,2.56l-1.07,-0.63l-0.58,-1.24l-0.67,0.04l-0.67,0.99l-0.69,0.09ZM751.98,389.95l-0.18,-0.26l0.18,-0.69l0.14,0.94l-0.14,0.0ZM745.51,369.73l0.42,0.49l0.16,1.05l1.39,0.75l-0.5,1.78l0.06,1.37l0.32,1.81l0.73,1.51l-0.22,0.62l0.63,0.5l-2.56,-0.11l-0.47,-0.75l-0.93,-0.6l-0.74,-1.33l0.4,-0.56l0.14,-1.09l-0.98,-0.39l-1.49,-1.79l-1.73,-1.01l-0.94,-2.42l1.55,0.24l4.29,-0.34l0.49,0.25ZM748.54,386.17l-0.11,0.68l0.34,1.55l-0.61,-0.86l0.39,-1.37ZM739.46,377.82l1.66,1.21l0.85,-0.07l0.75,-0.56l0.45,0.12l0.62,1.05l-0.07,3.26l1.13,1.12l0.7,2.2l-0.69,0.15l-0.74,-0.82l-0.65,0.35l0.22,1.71l-0.96,-0.38l0.05,-1.08l-0.37,-0.87l0.42,-1.7l-0.12,-1.02l-0.99,-1.46l-0.64,-0.13l-0.92,0.39l-0.72,-3.46ZM741.83,394.7l0.21,0.21l0.02,0.05l-0.32,-0.14l0.09,-0.12ZM738.84,387.8l1.52,0.83l0.11,1.43l-0.73,0.19l-0.69,0.75l-1.65,0.22l-1.56,-0.43l-0.3,-0.72l0.22,-0.29l1.36,-0.84l0.84,-1.0l0.88,-0.14ZM740.7,376.89l-0.46,0.02l-0.5,-0.74l0.4,0.01l0.56,0.71ZM738.03,358.15l1.13,1.2l-0.08,1.14l-1.32,0.79l-0.56,-0.45l0.53,-0.81l0.29,-1.86ZM705.26,340.87l2.47,2.04l1.41,-0.15l0.67,-0.97l-0.6,-3.01l0.11,-1.65l0.63,-1.44l0.12,-1.17l0.03,-2.73l-0.49,-1.5l1.77,-6.46l1.32,-0.62l2.0,-0.1l3.6,1.82l2.76,0.73l1.03,-0.47l0.93,-1.16l0.42,0.95l-1.01,1.96l-0.19,3.22l0.71,1.92l0.97,0.75l0.23,1.08l0.76,0.5l-2.68,6.69l-2.48,0.82l-1.67,1.35l-0.26,0.82l0.33,1.21l-1.44,2.23l-0.12,1.02l2.1,3.92l-0.4,0.52l0.02,0.84l1.09,3.29l1.19,1.24l2.47,0.77l0.97,-1.01l-0.57,-0.9l1.81,-1.08l0.87,0.03l2.06,0.87l0.92,1.55l-0.08,1.24l0.44,0.57l1.57,-0.04l0.57,-0.88l-0.17,-1.26l0.65,0.61l2.8,0.96l-1.64,0.38l-0.5,0.9l1.98,2.8l-0.23,0.96l0.4,0.54l1.09,0.06l1.14,0.57l-0.03,1.33l-0.44,1.29l-0.68,-0.57l0.47,-1.43l-0.11,-0.49l-0.54,-0.26l-1.98,0.22l-2.2,-0.99l-0.07,-1.15l-1.0,-1.74l-2.27,-1.38l-2.18,-2.32l-0.91,-0.19l-0.54,0.57l0.27,1.97l1.2,2.03l-0.11,0.92l-1.4,-2.27l-2.36,-2.11l-2.3,-1.17l-1.29,0.2l-1.17,0.64l-0.51,1.04l-1.37,0.37l-1.88,-0.91l-0.84,-0.94l-1.27,0.09l-0.06,-1.93l2.25,-2.25l0.18,-1.37l-0.61,-0.85l-1.39,-0.49l-0.76,-0.67l-0.69,0.13l-0.29,1.08l0.3,1.96l-0.52,-0.01l-1.22,-2.35l-1.29,-0.55l-1.08,-4.3l-0.32,-3.15l-0.92,-1.36l0.09,-1.8ZM730.9,372.85l0.47,-2.32l-0.19,-0.94l1.67,0.72l2.65,2.11l0.94,1.95l-1.57,-0.81l-0.13,-0.48l-2.08,-1.69l-0.86,0.3l-0.91,1.16ZM731.8,392.09l0.51,-3.17l2.34,-3.7l1.75,-4.53l0.06,3.43l-0.31,1.27l-2.26,2.03l-1.54,4.05l-0.54,0.62ZM733.28,394.82l0.52,-0.32l0.02,0.02l0.03,0.32l-0.57,-0.03ZM729.86,395.26l-0.73,0.04l-0.95,-1.93l-2.17,-1.16l-1.04,-1.46l-0.07,-0.78l0.39,-0.76l1.78,-0.22l1.23,-0.96l0.09,-1.64l-0.32,-1.54l0.97,-1.36l0.18,-1.36l1.68,-0.66l1.65,0.46l0.3,0.71l-3.01,6.84l-0.11,2.09l1.29,2.24l-0.6,1.16l-0.53,0.31ZM721.54,384.46l0.08,-2.36l0.65,-1.73l0.41,-4.26l-0.36,-0.84l-1.14,-0.42l0.2,-0.25l2.11,0.9l2.44,1.59l1.7,-0.22l0.29,0.21l-0.12,0.52l0.57,0.41l1.39,-0.68l-0.56,1.97l-1.94,1.45l-0.31,1.24l-1.72,0.97l-2.45,0.54l-1.25,0.95ZM725.79,384.74l0.1,-0.57l0.69,-0.72l-0.33,1.11l-0.47,0.17ZM725.34,370.08l0.51,0.0l0.32,0.32l-0.09,0.37l-0.74,-0.68ZM720.66,414.08l1.28,-0.48l1.17,0.52l-0.4,0.68l-1.29,0.41l-0.76,-1.13ZM721.62,371.25l-0.28,-0.34l0.74,-1.88l-0.26,1.6l-0.2,0.62ZM720.72,362.06l1.2,0.4l0.06,0.49l-0.5,0.8l-0.89,-0.63l0.12,-1.06ZM720.92,351.28l-0.31,-0.65l0.56,-0.04l0.08,0.05l-0.33,0.63ZM709.61,362.34l0.4,-0.1l2.09,0.38l1.26,-0.21l1.33,0.83l0.82,-0.23l2.08,2.06l-0.43,1.29l0.47,2.2l-1.03,2.1l-0.97,0.66l-0.4,-0.1l-1.19,-1.44l-0.47,-1.51l-0.77,-0.79l-0.21,-1.61l-0.66,-1.28l-1.3,-1.01l-0.48,-1.08l-0.55,-0.15ZM714.98,418.53l0.26,0.35l-0.6,0.22l-1.1,-0.11l0.83,-0.57l0.6,0.1ZM716.05,419.0l0.09,-0.02l0.4,0.07l-0.27,0.16l-0.22,-0.21ZM705.98,371.66l1.18,0.87l0.96,-0.01l0.47,0.43l-1.79,0.03l-0.83,-1.33ZM705.87,425.31l0.15,-0.09l-0.05,0.07l-0.1,0.02ZM707.64,424.35l0.2,-0.16l0.09,0.18l-0.07,0.15l-0.22,-0.17ZM706.04,374.1l0.59,0.45l-0.2,0.86l-0.04,-0.42l-0.35,-0.89ZM705.7,384.54l-0.46,0.12l-0.04,-0.14l0.31,-0.32l0.42,0.15l-0.23,0.19ZM686.27,399.97l0.72,-1.41l1.79,-1.9l2.11,-1.98l0.99,-0.21l0.79,-0.65l6.81,-7.61l1.57,-1.03l0.72,-1.72l-0.35,-1.29l1.36,-3.0l-0.17,2.33l1.17,3.14l-0.52,0.53l-1.72,0.64l-0.72,0.68l-0.59,1.28l-3.03,1.1l-0.35,0.57l0.08,0.83l-2.38,3.62l-2.22,1.15l-1.14,1.74l-2.96,1.68l-0.61,0.88l-1.33,0.63ZM684.24,404.1l0.0,0.29l-0.02,-0.03l0.01,-0.26Z\",\n            name: \"Philippines\"\n          },\n          \"-99\": {\n            path: \"M383.52,185.67l4.19,1.15l0.92,0.04l-3.62,2.11l-1.48,-3.3Z\",\n            name: \"Siachen Glacier\"\n          },\n          AE: {\n            path: \"M194.39,278.76l0.73,0.08l0.22,1.31l1.15,0.87l2.69,-0.08l2.96,-1.26l9.41,0.59l3.95,-1.73l2.56,-4.17l2.65,-1.86l3.18,-3.64l3.09,-2.34l1.07,-2.06l-0.1,2.81l0.48,0.5l1.07,0.36l0.03,1.78l-0.57,-0.2l-0.39,0.23l-0.21,0.84l0.56,0.47l0.63,-0.33l0.03,1.52l-1.79,1.71l-0.31,-0.4l0.09,-0.97l-0.49,-0.37l-1.04,0.15l-0.73,0.82l-0.26,3.17l0.28,1.09l-0.3,0.77l0.18,0.5l1.19,0.25l0.25,0.52l-2.94,0.49l-0.73,0.46l0.14,1.92l-2.3,5.42l-0.13,2.62l-0.3,0.38l-18.8,-2.42l-7.07,-8.89l-0.12,-0.91ZM210.56,279.01l0.06,-0.02l-0.04,0.02l-0.02,-0.0ZM210.81,278.92l0.07,-0.02l0.01,0.01l-0.07,0.02Z\",\n            name: \"United Arab Emirates\"\n          },\n          CN: {\n            path: \"M365.41,172.16l1.93,-0.79l0.8,0.45l0.58,-0.03l1.6,-1.06l0.43,-0.78l-0.29,-0.77l-1.35,-1.08l0.27,-1.56l-1.1,-2.86l-0.11,-1.26l0.45,-1.34l-0.29,-0.65l-2.33,-1.28l-1.95,-0.56l-1.36,0.09l-0.9,1.0l-0.98,-0.49l-0.3,-0.68l-0.39,-1.26l0.69,-0.6l0.09,-0.46l-1.45,-2.26l0.19,-1.53l1.3,-0.4l0.68,-0.85l0.11,-0.56l-0.57,-1.51l1.04,-1.95l2.98,-0.74l2.05,-1.55l1.31,-0.33l-0.07,-1.23l1.05,0.36l1.84,-0.28l2.1,-1.29l0.52,2.3l0.55,0.54l1.46,0.02l2.76,-1.01l0.79,0.52l1.36,-1.01l1.34,-2.89l1.67,-2.04l4.86,0.3l1.85,-0.56l2.31,-0.19l1.9,-1.96l0.18,-0.83l2.68,-1.58l4.03,-1.95l3.58,-1.07l0.68,-0.91l2.92,-0.44l0.25,-0.55l-0.22,-0.96l0.32,-0.57l-0.71,-3.75l0.51,-0.97l2.29,-0.97l-0.24,-0.77l-0.99,-0.5l1.46,-0.67l1.2,0.13l0.41,-0.8l-0.89,-1.63l0.26,-0.97l-0.41,-1.27l-2.18,-4.85l-0.02,-3.97l0.89,-1.82l-0.41,-0.45l-1.46,-0.56l-2.01,0.06l-0.52,-0.32l1.06,-0.83l4.21,-1.09l1.68,-0.04l6.15,-1.96l0.53,1.0l1.26,0.66l2.52,-0.51l1.4,0.82l0.8,-0.08l0.85,-1.74l-0.07,-1.41l-2.19,-1.08l-0.03,-0.33l1.78,-5.22l3.14,-7.6l0.39,-1.94l4.63,1.67l2.32,0.49l2.47,-0.24l2.33,0.22l0.45,0.9l0.68,0.43l1.8,-0.78l1.62,-1.17l2.02,-0.37l1.39,-2.04l0.08,-0.98l-0.6,-1.42l-0.45,-3.93l1.19,-3.6l0.77,-0.73l3.25,-0.45l2.36,-0.85l1.29,-1.65l0.29,-3.02l0.79,-0.62l2.36,-0.13l1.58,0.27l2.52,-0.84l0.3,1.27l-0.63,0.38l-0.25,0.6l0.94,1.34l1.39,0.54l-0.65,1.04l0.38,0.7l2.38,0.77l1.49,0.83l0.5,1.57l3.63,2.12l1.18,0.22l2.09,-0.46l2.1,1.87l0.74,0.07l1.12,-0.53l0.57,1.23l1.53,0.67l1.28,3.58l1.64,2.65l1.19,0.55l0.79,1.76l0.33,1.76l-0.89,2.6l0.67,2.13l-2.13,2.76l-0.41,2.07l1.63,3.21l0.63,0.31l0.99,-0.22l1.89,0.9l1.02,-0.03l1.13,0.44l3.3,0.07l3.02,0.55l2.72,-0.24l5.34,0.82l0.96,0.37l2.24,2.07l1.85,0.32l1.15,1.07l2.73,1.63l2.56,0.85l1.99,-0.13l-0.13,2.0l1.51,0.81l2.29,5.05l0.18,1.08l3.31,3.2l0.69,1.92l6.41,-0.51l16.91,2.0l3.94,-0.98l8.21,1.13l3.03,0.12l1.08,0.31l2.26,2.49l1.52,0.61l6.88,1.38l4.74,2.27l5.67,-1.01l0.0,1.47l0.37,0.4l2.66,0.14l1.13,0.41l1.7,-1.31l11.66,-4.91l10.41,-1.41l3.86,0.28l4.94,-0.21l7.99,-3.04l4.65,-5.2l4.07,-1.44l1.61,-1.47l0.83,-0.18l0.58,-0.54l-0.07,-1.24l-0.79,-1.18l-2.28,-2.25l-0.82,-1.48l1.58,-3.99l1.88,-2.0l3.55,0.07l1.21,1.17l1.03,0.45l6.82,1.27l3.8,-2.14l2.62,-2.22l0.93,-1.63l1.11,-0.23l1.42,0.38l1.82,-0.11l4.12,-0.73l1.86,-1.53l2.09,-1.18l0.37,-0.81l-0.17,-0.73l0.97,-1.75l1.14,-1.01l0.39,-0.77l1.9,-0.8l3.64,0.23l0.44,-0.45l0.38,-1.65l2.28,0.62l2.45,-1.39l1.7,-0.45l3.01,0.22l0.98,-0.62l2.2,1.09l1.38,0.27l2.89,0.08l1.36,-0.66l0.42,-0.79l-0.01,-1.52l-0.83,-1.16l-0.58,-1.61l-1.47,-1.11l-1.85,-2.1l-0.88,-0.45l-0.64,-1.25l-2.39,-0.99l-1.95,-2.14l-2.92,-0.51l-2.87,0.4l-3.15,3.15l-1.88,-1.41l-2.46,-0.62l-1.86,0.29l-2.09,-0.18l-2.41,1.59l-1.87,-1.6l-0.37,-0.56l-0.2,-1.43l1.92,-1.29l0.24,-3.01l1.51,-1.96l4.75,-9.76l3.9,1.76l1.78,0.17l3.07,0.94l4.54,-3.28l2.18,-1.11l2.92,-0.5l1.09,-0.71l0.55,-1.02l0.15,-1.22l-0.37,-0.95l-0.7,-0.36l0.55,-1.35l1.21,-1.37l0.54,-1.66l1.7,-2.34l0.5,-1.58l1.13,-1.51l0.76,-1.79l4.55,-3.66l0.6,-1.37l-0.01,-1.26l-0.61,-1.07l0.23,-1.97l-0.32,-0.74l-1.34,-0.73l-2.61,0.11l-0.48,-0.19l-0.1,-0.51l4.76,-4.34l1.99,-1.08l3.13,-0.33l6.78,-1.67l1.46,0.26l1.76,-0.12l3.07,-0.78l3.35,0.02l3.91,1.85l0.58,-0.06l1.7,1.35l1.37,0.23l1.22,0.74l0.7,0.1l0.53,-0.55l0.9,-0.2l3.43,1.55l0.68,0.02l0.53,1.46l1.13,0.28l1.21,1.21l-0.23,1.29l1.31,0.91l1.03,1.41l1.33,4.47l1.4,2.18l0.09,1.43l0.69,0.57l0.23,1.91l0.73,2.23l2.84,3.84l0.26,1.27l-0.31,1.03l0.33,1.29l1.69,1.29l-0.63,2.16l0.49,1.84l1.34,1.43l2.23,1.04l1.9,0.12l3.44,-0.39l0.69,1.23l1.5,0.44l0.48,0.5l2.05,0.2l1.04,-0.33l0.28,0.55l1.11,0.51l2.6,2.84l1.28,0.86l2.66,0.35l0.27,0.48l-0.44,1.57l1.87,2.66l-0.63,1.79l0.12,1.26l0.95,1.05l0.8,2.01l0.48,0.35l2.6,-0.29l1.75,0.43l1.71,0.01l5.1,-0.34l0.97,-0.59l0.99,-1.59l1.3,-0.37l1.9,-1.17l2.51,0.05l2.79,-1.68l3.24,-0.92l1.8,0.44l0.68,0.74l-0.82,1.93l1.31,2.75l-1.38,1.91l-1.77,0.61l-1.07,1.16l0.13,1.79l-0.94,1.69l-0.37,2.24l-1.12,1.92l0.19,1.39l-0.26,1.0l-1.13,0.94l-0.42,1.75l-1.06,0.82l-0.49,2.38l-1.96,1.19l-0.56,1.69l-0.04,1.63l-0.95,0.67l-0.5,-0.19l-0.1,-0.71l-0.73,-0.85l-2.53,-0.96l-1.5,0.01l-1.59,0.8l-1.29,-0.76l-1.5,1.14l-1.57,2.05l-2.71,0.69l-0.86,0.69l-0.15,0.9l0.85,1.78l1.22,4.66l-0.58,3.36l0.06,1.87l0.53,0.57l0.03,0.49l-0.58,2.05l-0.7,1.11l-0.07,0.94l-4.14,1.05l-0.65,0.58l-0.03,0.7l-0.59,-0.73l-0.01,-1.18l-0.31,-0.41l-1.13,-0.73l-1.86,-0.14l-0.96,2.12l-0.46,2.74l-0.99,0.52l-0.82,-0.43l-1.06,0.26l-0.85,1.04l-0.2,0.87l-1.83,1.42l-4.49,0.11l-2.3,0.6l-0.07,1.14l1.87,2.53l-0.82,1.45l-0.79,-0.53l-2.49,0.07l-3.67,-0.8l-0.72,-1.27l-1.0,-0.87l-0.72,-0.04l-1.3,0.54l-1.1,0.89l-0.72,2.33l-3.69,4.02l-2.02,0.41l-2.24,1.77l-2.61,1.03l-0.65,0.71l-0.77,0.09l-3.8,3.18l-0.88,1.57l-1.07,0.65l-2.36,0.15l-0.71,-0.45l-0.52,0.08l-0.5,0.75l-1.65,0.2l-0.91,0.64l-1.3,0.1l-1.6,0.69l-3.78,2.06l-2.63,2.74l-0.86,0.47l-1.56,0.08l-0.33,0.43l0.11,0.72l-2.19,0.42l-0.92,0.53l-0.13,-0.29l-0.07,-0.57l4.01,-1.54l0.22,-0.52l-0.31,-0.79l1.22,-1.18l-0.06,-0.68l-0.47,-0.17l-3.25,0.2l-0.06,-0.93l1.74,-0.99l-0.29,-1.01l0.19,-0.48l2.16,-1.03l2.89,-3.56l0.71,-1.79l-1.18,-1.72l-1.96,-1.27l-0.15,-1.0l-0.5,-0.33l-0.86,1.13l-4.24,-0.41l-3.06,2.81l-2.15,3.11l-6.55,2.87l-1.62,1.4l-1.06,1.8l-0.29,1.35l-1.66,1.8l-2.61,0.05l-2.19,0.87l-0.95,-0.95l-1.18,-0.38l-1.31,0.31l-0.87,0.71l-1.75,3.93l0.04,0.86l0.74,1.75l0.99,1.17l1.99,1.17l3.96,0.77l1.87,-0.27l0.87,0.6l0.96,2.56l-0.66,0.56l-0.29,2.76l1.44,1.5l2.65,0.69l2.41,-0.26l1.17,-0.95l0.09,-0.91l3.1,-2.29l0.03,-0.55l2.97,-1.14l2.03,0.85l1.23,1.04l1.38,0.26l1.86,1.0l2.57,0.17l0.84,-0.7l0.59,0.59l1.26,0.44l1.79,-0.09l-0.29,0.5l0.08,0.95l-0.94,0.91l-0.01,0.5l0.48,0.56l-1.09,0.82l-1.15,-1.08l-1.81,-0.01l-6.7,3.02l-1.68,-0.21l-0.45,0.45l0.75,1.29l-0.79,-0.14l-0.62,0.55l-0.37,2.19l-1.61,0.56l-0.14,-1.17l-0.39,-0.27l-1.33,0.32l-0.74,0.8l0.02,0.46l0.97,1.03l-1.13,0.58l-0.68,1.11l-0.81,0.79l-1.15,0.53l-1.43,1.93l-0.66,0.44l-0.69,1.69l-1.07,1.0l-0.38,1.38l0.27,1.08l0.38,0.28l1.03,-0.01l1.65,1.37l2.88,1.15l2.1,1.34l1.78,5.33l2.69,5.12l0.01,3.15l1.12,0.84l2.52,1.12l0.31,0.31l0.11,1.46l0.69,0.76l1.93,1.05l0.68,1.25l0.04,0.49l-0.31,0.01l-3.09,-1.32l-2.66,-0.06l-1.4,-1.34l-2.11,-0.64l-3.93,1.47l0.15,0.72l1.17,0.25l2.43,-0.92l1.32,0.24l0.62,1.36l2.02,0.84l2.18,1.92l2.25,1.33l0.86,1.19l0.56,1.61l-3.15,0.91l-0.86,0.76l-2.29,1.14l-1.2,1.61l-2.92,-0.2l-1.6,0.91l-0.46,0.83l1.46,0.15l1.0,-0.36l1.22,1.3l2.19,-0.28l1.82,-1.1l1.07,0.13l2.4,2.39l2.18,0.81l-3.43,2.67l-0.11,0.47l0.43,0.23l1.38,-0.22l1.47,-0.89l-0.17,3.07l-1.0,-0.86l-1.54,0.12l-0.7,0.55l-0.3,0.5l0.27,0.6l1.37,0.93l-0.97,0.15l0.14,0.48l0.67,0.48l-1.27,1.36l0.88,2.44l-1.79,0.73l-0.3,-0.73l-1.02,-0.07l-0.61,0.52l-0.97,1.92l-1.31,0.12l-0.34,0.56l0.6,0.64l-1.69,2.36l0.04,1.5l-1.57,1.94l-0.86,0.57l-1.09,1.77l-0.4,1.67l-0.76,0.38l-0.45,-0.81l0.02,-0.72l-0.56,-0.43l-0.78,0.86l-0.61,-0.34l-0.62,0.35l0.39,1.4l1.15,0.72l0.58,1.26l-2.78,2.07l-2.21,-0.53l-0.42,0.18l0.03,0.46l1.09,1.3l1.33,0.19l1.18,-0.41l-0.7,2.87l0.55,1.27l-1.1,-0.57l-2.04,0.21l-0.33,0.69l0.86,1.11l-1.36,-0.12l-0.71,0.28l-0.47,0.66l0.03,1.46l-1.86,0.71l-0.31,0.44l0.55,0.71l-0.3,0.65l-2.35,0.26l-1.61,-0.4l-0.83,0.65l-0.15,0.55l-0.9,0.02l-0.35,0.45l0.13,0.53l0.5,0.44l0.87,0.1l0.09,0.53l-1.42,1.61l-0.81,0.11l-0.79,1.15l-1.32,0.28l-0.25,1.38l-0.67,-0.56l-1.52,1.02l-1.31,-0.48l-0.47,0.3l-0.34,1.39l-1.77,0.94l0.48,0.64l-1.03,0.52l-0.45,1.76l-1.73,-0.15l-0.55,0.62l-2.18,0.65l-1.7,-0.36l-0.59,0.23l-0.53,0.81l-2.2,-0.75l-2.07,1.04l-0.44,0.51l-0.39,-0.04l-0.21,-0.64l-0.71,-0.39l-0.84,0.55l-0.46,1.11l-1.09,-0.4l-0.68,0.36l-1.01,-0.14l-1.26,0.3l-2.13,-2.38l-0.23,-1.15l0.2,-0.62l-0.46,-0.57l-0.87,0.25l-0.56,0.37l-0.12,0.91l-0.62,0.17l-0.28,0.49l1.65,2.52l0.24,1.88l-0.75,0.82l-1.87,0.83l-0.33,-0.77l-0.67,-0.1l-0.7,0.91l-0.26,1.4l-1.03,-0.33l-1.55,1.19l-0.69,-0.45l-0.17,-0.81l-0.8,-0.23l-0.35,0.51l0.19,1.14l-0.28,0.19l-2.61,-0.83l-0.77,1.07l-0.81,0.08l-1.15,1.15l-1.48,0.18l-0.61,0.37l-2.15,-0.19l-0.49,0.72l-1.63,0.37l-1.41,1.26l-0.31,-0.01l-0.52,-0.93l-0.57,0.3l-0.23,1.14l-1.23,0.94l-0.45,1.17l0.53,0.96l1.17,0.14l-0.41,0.45l0.04,0.79l1.36,1.09l-0.39,0.78l-0.62,0.37l-1.52,0.22l-1.17,-0.21l0.5,-0.6l-0.12,-0.35l-0.9,-0.7l-0.38,-0.62l0.04,-0.8l-1.0,-1.46l0.15,-1.56l0.65,-1.38l1.11,-0.59l0.07,-0.82l-0.39,-0.44l-0.58,-0.02l-0.41,-0.47l-0.65,0.09l-0.66,-1.03l-0.75,-0.24l-0.42,0.45l0.13,0.95l-2.47,0.67l0.17,-0.72l-0.39,-0.5l-0.73,-0.33l-1.8,-0.04l-0.98,-0.95l0.02,-0.73l-0.49,-0.43l-0.85,-0.03l-0.41,0.4l0.28,1.81l-1.09,-0.56l-0.72,1.04l-1.76,0.38l-1.62,-1.11l-2.08,0.41l-0.94,-0.16l-0.4,-0.55l-1.64,-0.72l-0.67,-1.01l-2.21,-0.67l-0.05,-1.66l-0.85,-1.11l0.23,-1.03l0.85,-0.53l0.68,-1.22l-0.12,-0.55l-1.84,-1.05l-2.07,0.36l-0.61,-0.73l-1.03,-0.2l-1.55,0.41l-2.03,-1.1l-0.83,-1.24l-1.34,-0.95l-3.55,1.72l-0.4,0.52l-0.2,1.34l-0.59,0.51l-1.18,0.15l-1.14,0.75l-1.15,-0.81l-1.33,0.5l-0.71,1.62l-2.1,-1.83l-0.89,0.42l-0.34,0.84l-0.66,-0.95l-0.63,-0.28l-2.47,2.5l-0.96,-1.02l-2.81,-1.34l-0.72,0.28l-1.91,2.51l-0.8,-0.35l-1.25,0.29l-0.63,-0.68l-0.72,0.09l-1.52,2.27l0.6,2.11l0.99,1.28l-0.12,3.86l0.49,0.66l-0.21,0.19l-1.25,-0.61l-1.95,0.36l-0.72,-3.85l-0.68,-0.58l-2.1,0.82l-1.69,1.42l-1.7,-0.24l-1.38,0.2l-0.21,-1.14l-1.18,-0.84l0.08,-1.61l-0.3,-0.58l-2.69,-0.64l-2.81,-0.24l1.23,-2.56l0.32,-2.41l0.95,-1.33l-0.39,-0.85l-0.53,-0.32l-3.83,-0.86l0.06,-1.37l-0.58,-1.01l0.2,-0.92l-1.13,-2.02l1.18,-1.77l-0.43,-0.41l-1.68,0.35l-0.79,-0.3l-2.18,0.04l-1.61,0.4l-2.81,1.32l0.84,-1.22l0.22,-0.96l-0.41,-1.54l-0.9,-0.73l-0.01,-0.93l0.33,-0.93l1.19,-0.86l-0.14,-1.39l0.61,-1.38l0.71,0.03l0.73,-0.48l0.79,-1.13l0.31,-1.17l1.26,-0.02l1.09,-1.65l1.23,-0.37l0.32,-0.55l-0.67,-1.69l0.86,-0.76l0.43,-4.22l-0.66,-7.13l-1.8,-1.02l-0.57,0.17l-0.4,0.7l-1.44,-4.65l-1.61,-1.77l-0.96,-0.11l-0.91,-1.15l-1.37,0.09l-1.35,2.06l-1.61,-1.06l-0.9,0.21l-1.36,-0.21l-1.36,-0.76l-1.94,0.67l0.2,-0.69l1.76,-1.77l0.1,-0.45l-1.17,-2.46l-1.06,0.09l-1.05,0.71l-0.08,-0.57l1.44,-0.92l0.25,-0.5l-0.29,-0.57l-0.99,-0.04l-1.3,-1.5l-1.5,0.45l-2.8,1.52l-0.86,1.33l-4.2,-1.08l-0.75,-0.94l-0.89,-0.16l-2.52,1.41l-1.3,1.3l-0.57,0.11l-1.02,1.34l-1.01,0.57l-3.9,0.88l-1.06,1.91l-3.46,2.48l0.09,1.15l-1.65,0.89l-1.35,-0.09l-1.97,0.85l-2.08,-0.24l-0.06,-1.23l-2.85,-1.31l-0.73,0.08l-1.25,0.75l-2.26,-0.8l-2.52,-0.06l0.13,-0.91l-0.36,-0.43l-1.9,-0.49l-1.67,0.07l-3.31,1.99l-2.43,2.86l-0.47,0.99l-1.06,0.94l-0.36,0.83l-0.47,-0.95l0.7,-3.01l-0.46,-1.27l-1.45,-0.74l-3.94,1.17l-0.48,0.51l-1.46,-0.05l-1.76,0.57l-3.44,-0.17l-0.89,-0.71l-1.94,-0.74l-0.44,-0.54l-0.79,-0.17l-0.62,0.16l-0.51,1.14l-0.41,0.1l-1.18,-0.63l-0.68,-0.79l-0.42,-0.01l-0.64,0.58l-0.21,0.98l-0.87,-1.65l-1.27,-1.21l-4.14,-0.33l0.41,-1.76l-0.28,-0.52l-0.91,-0.15l-1.8,0.4l-4.06,-2.75l-1.11,-2.6l-1.55,-0.5l-2.33,0.75l-3.12,-3.41l-2.3,-0.61l-2.71,-2.08l-2.01,-1.02l-1.48,-2.22l-3.04,-0.5l-1.83,0.42l-1.42,2.12l-0.6,0.33l-0.93,-1.59l-2.82,-1.74l-2.92,-0.99l0.03,-1.27l-0.49,-0.51l-0.64,-0.03l-2.05,-1.46l-1.84,0.08l-1.16,-0.84l-2.21,-2.86l-0.78,-0.2l-0.62,0.71l-1.06,0.34l-0.1,-1.14l0.46,-0.91l-0.04,-0.48l-0.73,-0.9l0.3,-1.79l-1.83,-2.23l-0.67,-2.27l1.73,-0.24l0.39,0.91l1.42,1.02l1.21,-0.27l1.4,-1.33l-0.13,-3.73l-0.73,-0.85l0.2,-1.15l-2.48,-2.76l-0.55,-4.19l1.72,-1.52l0.09,-0.95l-0.44,-0.7l-1.95,-1.37l-2.81,-1.04l-1.98,-4.96l0.26,-1.64l-0.3,-0.58l-1.28,0.21l-0.77,-0.36l-2.5,0.16l-2.61,-0.64l-3.32,-1.46l-0.35,-0.26l-0.07,-0.79l-0.48,-0.35l-2.59,0.64l-0.62,-1.33l-1.12,-0.49l0.45,-0.83l0.03,-1.94l-0.34,-1.28l-0.81,-1.23l-1.46,-0.87l-1.58,0.1l-0.77,-1.56l-2.25,-0.65l-1.24,0.26l-1.4,-0.66l-1.17,0.05l-0.72,-0.59ZM784.71,123.62l0.4,0.07l0.21,0.23l-0.36,-0.13l-0.25,-0.17ZM723.42,232.07l-1.54,-0.41l-0.17,-0.27l0.52,0.01l1.19,0.67ZM716.28,217.72l0.89,0.27l0.35,0.57l1.35,0.76l-2.09,-1.02l-0.5,-0.58ZM715.46,247.46l0.02,-0.03l0.0,0.02l-0.02,0.01ZM704.67,268.77l-0.0,-0.09l0.08,-0.21l0.02,0.22l-0.1,0.07ZM704.8,268.19l-0.02,-0.24l-0.07,-0.11l0.19,0.14l-0.1,0.2ZM626.1,313.41l0.45,-0.31l1.5,-0.02l0.99,-0.61l1.85,0.16l1.43,-0.24l0.73,-0.47l0.93,0.1l0.73,0.49l0.25,-0.45l0.9,0.43l0.57,-0.36l0.13,-0.8l1.76,1.26l0.46,1.85l-1.34,0.72l-1.36,2.07l-0.57,1.05l-0.86,3.16l-2.89,1.77l-0.1,0.61l-1.5,0.17l-1.06,1.16l-1.01,0.2l-3.6,-1.12l-2.23,-1.17l-0.45,-2.39l0.16,-3.13l4.5,-3.46l0.1,-0.45l-0.47,-0.24Z\",\n            name: \"China\"\n          },\n          AF: {\n            path: \"M263.13,194.66l1.33,-0.91l1.1,-1.84l0.56,-2.35l-0.33,-1.15l0.64,-0.51l0.68,-2.24l2.02,1.52l2.71,-0.08l1.58,1.21l0.79,1.07l1.38,-0.62l1.85,-0.09l2.97,-1.9l0.83,-2.18l-0.38,-0.98l1.1,-0.05l4.17,-1.31l1.19,-0.03l0.71,-0.9l1.92,-0.94l1.23,-1.03l2.34,-6.82l1.81,-0.8l3.41,-0.11l1.57,-2.69l2.48,1.27l2.72,0.6l2.73,-0.22l1.64,0.29l0.86,0.78l1.11,0.31l1.4,-0.46l1.44,0.32l0.85,1.3l0.93,0.79l0.99,0.28l1.84,-0.67l0.82,-0.97l2.16,-1.04l1.07,-0.09l0.54,-0.51l2.73,1.92l1.42,-1.18l-0.1,-1.72l0.51,-0.98l2.24,-0.43l2.22,0.57l0.76,-0.4l0.65,-1.03l-0.33,-2.03l1.5,-1.31l1.47,-2.23l0.78,-0.67l0.88,-0.24l1.13,0.29l1.38,0.87l0.46,0.95l-0.35,1.35l0.2,1.16l0.51,0.18l1.53,-0.27l-1.09,6.68l0.76,2.5l0.5,0.96l0.78,0.52l1.31,-0.02l4.09,-2.44l2.19,-0.39l1.93,-2.11l3.52,-1.63l2.11,0.32l-0.71,0.81l0.06,0.5l1.16,0.37l3.23,-0.85l0.78,-0.74l3.04,0.38l-2.53,1.09l-0.19,0.6l0.87,0.8l-3.12,1.43l-1.91,-0.55l-8.59,0.51l-3.63,1.14l-2.93,2.3l-1.2,0.04l-2.87,2.67l-0.48,0.82l0.3,0.78l1.32,1.02l1.26,2.8l0.16,0.92l-0.39,1.09l0.52,0.89l-1.08,1.56l-1.15,0.81l-2.41,2.82l-0.1,0.83l0.86,1.05l-0.03,1.85l-0.18,0.37l-2.73,0.74l-2.35,-0.07l-2.43,-0.75l-1.31,0.69l-0.06,1.27l1.94,2.25l1.04,1.99l-0.09,0.34l-2.33,1.35l-2.61,0.41l-0.64,0.44l-0.88,3.06l-1.19,2.0l0.24,4.16l-0.58,0.69l-0.74,0.79l-1.38,0.76l-1.78,-1.33l-1.45,0.33l-2.07,-0.39l-1.26,1.1l-3.3,1.43l0.0,0.89l0.73,0.66l-0.53,0.31l-2.14,0.46l-1.14,-0.18l-0.79,-0.49l-1.68,0.34l-1.85,2.08l-1.41,0.83l-0.55,1.09l-0.47,1.65l0.12,2.44l-0.5,1.81l0.43,1.28l-0.65,0.55l-7.99,2.23l-4.32,-0.04l-1.96,0.48l-1.27,0.86l-3.88,-0.8l-8.12,0.73l-11.54,-3.48l6.64,-7.54l0.32,-2.24l-0.46,-1.86l-1.04,-1.1l-5.98,-0.83l-0.21,-2.89l0.3,-3.19l-1.99,-7.16l2.65,-3.31l-0.38,-0.57l-2.37,-0.37l-0.45,-0.7l0.29,-1.15l-0.29,-1.99l0.97,-1.49l1.66,-0.09l0.29,-0.64l-0.98,-1.34Z\",\n            name: \"Afghanistan\"\n          },\n          IQ: {\n            path: \"M125.37,172.77l1.95,-1.22l0.78,-0.94l1.16,0.37l1.24,-0.35l4.35,1.19l1.2,0.03l1.46,-0.77l0.5,0.07l0.44,0.53l0.09,1.72l0.79,0.56l2.58,-1.7l0.69,0.07l0.9,2.88l1.07,0.96l0.23,1.88l0.57,0.71l0.86,0.33l1.15,3.11l1.42,0.29l1.68,1.36l3.14,0.13l-1.41,0.56l-0.54,1.37l0.08,0.71l0.99,1.29l0.2,1.22l-1.54,0.83l-1.82,1.95l-0.25,1.77l-0.74,-0.06l-0.45,0.37l-0.45,1.3l0.76,1.82l-1.02,2.28l2.56,3.1l1.08,-0.0l-0.11,0.57l0.29,0.52l0.85,0.46l0.87,1.45l-0.48,1.1l0.35,1.36l2.11,0.33l5.49,3.81l1.79,0.29l1.01,2.18l2.3,2.86l-1.06,3.07l-0.02,3.42l0.38,0.4l2.1,0.09l0.03,3.94l1.72,1.49l0.78,0.29l0.81,2.06l-1.95,-0.76l-1.42,0.35l-2.08,-0.8l-2.62,0.13l-0.97,0.37l-0.93,0.76l-1.6,3.52l-2.66,3.43l-1.13,0.23l-12.17,-1.05l-19.68,-15.44l-12.8,-7.12l-8.45,-1.44l0.59,-0.87l-0.34,-0.89l-0.45,-0.25l-1.2,0.28l-0.2,-0.63l0.45,-0.55l-2.04,-7.04l14.03,-7.89l1.79,-0.45l0.56,-0.45l1.68,-3.13l0.16,-4.4l1.03,-3.03l-0.03,-1.6l-0.78,-2.18l0.35,-2.43l0.73,-0.93l2.85,-0.77l4.37,-4.38Z\",\n            name: \"Iraq\"\n          },\n          JP: {\n            path: \"M869.1,98.66l1.75,-0.84l3.26,3.32l3.55,4.25l6.71,5.04l2.54,0.27l2.9,1.4l1.9,0.2l1.33,-0.56l3.0,-2.78l-1.69,3.31l-0.21,1.25l1.8,4.23l1.68,0.42l-1.41,0.23l-3.12,1.57l-2.16,0.49l-3.23,-0.24l-1.9,0.92l-2.95,2.59l-1.18,1.68l-1.26,3.56l-5.13,-2.24l-4.91,-2.89l-3.56,0.24l-3.12,1.79l-1.8,-1.77l-2.05,-0.12l-1.27,1.37l-0.29,0.99l0.17,0.69l1.58,1.52l1.6,0.19l2.73,2.36l-1.19,0.22l-2.17,-0.56l-1.32,1.32l-0.75,1.34l-1.78,0.69l-0.46,-0.91l0.82,-3.12l-0.47,-1.54l-1.58,-1.77l0.18,-2.51l0.16,-0.42l2.41,-1.29l1.69,-1.6l0.38,-1.25l-0.63,-1.01l-0.05,-0.81l0.91,0.01l1.81,0.98l2.53,0.25l1.29,-0.2l0.83,-0.99l0.3,-1.08l-0.11,-2.27l1.83,-3.39l0.14,-2.29l0.75,-2.08l0.15,-2.27l-0.5,-2.16l-0.97,-1.91l0.52,-1.84ZM797.15,199.72l-2.57,-1.61l-2.21,0.27l-1.69,0.57l-1.02,-0.53l-1.02,0.12l-0.16,-1.76l0.63,-0.77l2.7,-0.24l1.86,-1.68l1.91,-0.98l3.04,-2.52l2.67,-2.39l0.63,-0.98l1.51,-0.69l2.29,-0.37l1.09,0.82l1.69,-0.43l2.79,0.03l1.83,-0.29l1.79,-0.74l3.12,-0.29l2.19,-0.7l0.26,0.06l-0.18,1.1l0.85,0.68l2.74,0.22l1.11,-0.42l2.39,-1.97l-0.57,-2.1l0.4,-0.94l2.14,-2.04l2.55,-3.28l0.45,-1.95l-0.2,-2.13l0.78,-1.34l3.05,-1.07l-1.26,1.28l-1.65,0.92l-0.36,0.67l0.73,1.13l0.3,1.76l0.95,0.6l1.0,0.19l1.03,-0.3l1.18,-1.46l6.0,-2.29l1.79,-1.56l1.26,-1.52l1.25,-2.38l2.64,-1.4l1.29,-1.28l0.94,-3.21l2.1,-3.3l0.85,-3.08l0.92,-1.59l0.24,-1.99l-0.07,-1.16l-0.49,-1.08l-0.5,-0.42l-0.89,-0.06l0.74,-0.65l0.81,-2.26l-0.66,-2.93l0.62,-0.94l1.24,-0.36l0.75,-0.77l0.52,-1.54l-0.08,-1.59l1.48,0.12l0.32,2.43l0.68,0.84l0.91,-0.09l0.69,-0.8l1.64,0.42l0.94,-1.16l0.28,-1.02l-0.12,-1.08l-0.8,-0.68l-2.52,0.82l0.41,-1.91l0.27,-0.42l2.22,1.27l1.07,-0.21l-0.29,2.18l0.24,3.4l0.32,1.16l1.4,1.26l1.05,1.5l1.42,4.28l-0.1,3.09l-0.56,2.58l-1.66,1.14l-0.97,2.0l-0.54,2.99l-2.66,0.62l-1.2,1.82l-0.27,1.84l0.81,4.19l-0.25,2.97l-0.22,0.85l-1.25,1.25l-0.55,1.12l-0.77,1.97l-0.42,2.39l0.41,1.75l1.51,2.46l-1.28,0.42l-1.4,1.32l-0.76,2.79l-3.37,2.17l0.16,-2.7l1.76,-1.96l0.18,-0.57l-0.98,-1.12l-0.81,-0.07l-0.86,0.22l-0.46,0.57l-0.11,0.87l-0.77,0.64l0.28,2.04l-1.35,-1.19l-1.76,0.18l-0.84,0.66l-0.47,1.16l-0.21,2.14l-1.23,1.57l-0.41,-0.3l0.29,-2.03l0.55,-0.31l0.08,-0.64l-1.53,-0.93l-1.49,0.44l-2.44,3.02l-0.4,0.92l-2.16,-0.39l-4.01,0.1l0.08,-0.5l-0.5,-0.63l-1.57,0.08l-0.59,-0.56l-0.49,0.08l0.01,-1.77l-1.08,-0.14l-1.03,0.73l-1.2,2.64l0.69,1.14l1.89,1.24l-0.11,0.44l-2.17,0.49l-1.78,0.83l-3.03,5.07l-1.4,0.53l-1.55,-0.48l-2.28,-3.54l-0.16,-2.19l1.06,-0.6l0.93,-1.05l0.29,-0.62l-0.14,-0.95l-0.68,-0.38l-2.31,0.19l-2.27,-1.13l-3.88,0.47l-2.11,1.59l-3.9,0.79l-2.17,1.03l-0.97,-0.18l-2.53,0.68l-1.6,-0.83l-1.15,0.19l-0.84,1.15l-0.63,2.77ZM865.75,100.56l-0.16,0.02l-0.34,-0.3l0.21,-0.05l0.29,0.33ZM852.34,128.05l-0.01,-0.06l0.07,-0.12l-0.06,0.17ZM843.87,165.83l0.27,-1.03l-0.54,-0.64l0.99,-1.22l-0.26,1.06l0.73,0.5l-0.33,0.78l-0.86,0.54ZM817.81,195.39l0.11,0.97l-0.91,0.42l-0.18,-0.21l0.98,-1.19ZM799.43,203.31l2.14,-1.59l1.03,-2.45l0.92,-0.71l1.41,1.39l3.48,-0.79l0.56,-0.72l0.01,-1.08l2.1,-0.96l0.82,-0.08l3.06,1.19l0.79,-0.04l0.42,2.93l-2.28,1.59l-1.02,1.44l-0.37,1.1l-1.12,-1.23l-0.91,-0.46l-2.01,-0.15l-2.79,1.49l-1.02,2.25l-0.9,0.74l-0.38,1.27l-0.61,0.55l-0.91,-0.13l0.24,-0.55l-0.3,-0.55l-1.28,-0.14l-0.37,-0.85l0.5,-1.92l-0.78,-0.48l0.04,-0.61l-0.46,-0.44ZM806.3,180.01l-0.4,0.05l-0.11,-0.36l0.22,-0.13l0.29,0.44ZM779.3,207.59l0.61,0.97l1.43,0.4l0.37,-0.57l-0.55,-1.19l-2.44,-2.04l0.11,-0.44l1.3,0.29l0.51,-0.3l-0.03,-0.87l1.56,-0.56l0.61,-0.58l1.53,-0.34l1.02,-1.74l1.24,-0.61l1.69,0.3l0.71,1.52l1.14,0.82l1.52,0.28l1.66,-0.66l0.51,0.26l0.05,0.4l-1.27,1.89l0.29,0.6l2.08,0.18l-0.1,0.69l0.71,0.75l-0.05,0.84l0.5,0.31l-1.93,2.27l-0.62,1.2l-1.5,4.83l-0.01,1.79l-0.79,1.89l-1.25,-0.29l-0.84,0.25l-0.28,0.85l0.34,0.72l-1.19,0.96l-0.58,0.29l0.35,-1.29l-0.62,-2.27l0.59,-0.38l0.08,-0.63l-0.47,-0.69l-1.31,0.06l-0.77,1.34l-0.24,1.11l0.7,1.77l-2.46,-0.77l-0.16,-0.39l0.94,-0.5l0.22,-1.32l-0.96,-1.54l0.01,-2.43l0.83,-0.31l0.6,-0.67l1.88,-3.4l-0.33,-0.56l-0.48,-0.05l0.3,-0.59l-0.17,-0.81l-1.26,-2.24l-1.27,-0.93l-1.28,0.67l0.23,2.45l0.36,0.37l0.9,-0.08l-0.06,0.75l-1.61,-0.78l-1.42,0.81l-1.2,-2.07ZM788.9,226.85l0.01,-0.11l0.07,-0.14l-0.02,0.14l-0.05,0.1ZM785.8,229.65l-0.74,0.03l-0.25,-0.58l0.36,-0.28l0.79,0.45l-0.17,0.38ZM781.9,213.3l-0.19,-0.64l0.25,-1.01l0.49,-0.07l0.06,1.08l-0.6,0.64ZM776.05,246.41l0.46,-0.51l1.07,-0.27l-0.66,0.48l-0.27,0.75l-0.59,-0.45ZM776.4,195.67l0.0,0.07l-0.02,-0.02l0.02,-0.04ZM776.72,194.79l0.02,-0.76l0.3,-0.22l0.03,0.45l-0.35,0.53ZM775.75,197.51l0.11,-0.75l0.18,0.13l-0.28,0.62ZM774.64,207.53l0.05,-0.12l0.05,0.07l-0.1,0.05ZM773.52,250.21l0.09,0.15l-0.02,0.05l-0.05,-0.02l-0.03,-0.18ZM771.75,209.72l0.65,-0.12l0.16,0.27l-0.66,0.42l-0.16,-0.58ZM764.44,262.78l0.09,0.4l-0.31,0.21l0.02,-0.29l0.2,-0.32ZM764.79,261.99l0.01,-0.59l0.25,-0.07l0.06,0.35l-0.31,0.3ZM766.32,260.11l-0.04,-0.54l0.94,0.06l-0.09,0.16l-0.81,0.33ZM767.58,259.28l0.76,-0.83l0.14,-0.26l-0.37,0.82l-0.53,0.27ZM737.71,277.3l0.12,0.01l0.12,-0.02l-0.11,0.13l-0.12,-0.12ZM734.91,277.92l0.11,-0.19l0.44,0.15l-0.29,0.11l-0.26,-0.06Z\",\n            name: \"Japan\"\n          },\n          IR: {\n            path: \"M137.98,152.91l1.82,0.03l0.6,-0.28l0.67,-2.32l0.59,-0.59l1.55,0.95l2.35,3.38l2.65,2.25l5.45,1.21l1.03,-0.36l1.99,-0.04l2.17,-2.07l1.11,-0.37l1.44,-1.36l4.32,-2.67l1.33,-0.27l2.06,2.03l-1.19,0.63l-0.3,0.88l0.19,0.73l1.15,0.75l0.06,0.33l-1.67,0.54l-0.47,0.49l0.0,0.74l2.41,2.2l0.82,0.23l1.45,1.6l1.81,-0.16l0.68,4.4l1.03,2.14l2.34,1.36l5.61,0.96l1.48,2.17l4.46,2.95l1.55,0.63l4.82,1.1l3.39,-0.06l10.69,-2.45l0.21,0.44l0.67,0.3l1.71,0.03l0.55,-0.35l0.21,-0.71l-0.72,-3.44l1.67,0.06l3.89,-1.22l0.54,-0.48l1.08,-2.26l3.46,-2.28l1.38,-0.39l4.89,0.22l0.66,-0.25l0.51,-1.1l2.06,-0.24l1.77,0.38l2.05,-0.02l0.63,0.56l0.52,1.51l4.7,1.24l2.54,1.59l3.86,-0.27l3.36,1.38l0.49,1.51l0.66,0.7l4.56,2.51l2.11,2.82l5.87,0.06l0.51,3.54l-0.43,1.67l0.74,1.14l-0.1,1.69l0.31,1.07l-0.64,1.6l-0.71,0.64l0.34,1.44l-0.5,1.97l-0.93,1.56l-1.67,1.22l0.81,1.48l-1.39,0.22l-1.2,1.82l0.15,4.16l1.31,0.92l1.52,0.1l-2.39,2.82l-0.07,0.91l2.0,6.8l-0.31,3.03l0.25,3.24l0.59,0.43l5.89,0.81l0.55,0.62l0.38,2.82l-0.16,0.53l-6.99,7.93l0.0,0.53l3.52,3.93l0.14,0.86l2.14,3.86l2.05,2.06l3.58,1.15l1.47,1.37l1.37,-0.01l-0.16,1.7l0.53,3.99l-0.38,2.1l0.61,0.45l0.9,0.12l1.9,-0.26l0.6,0.48l-0.4,0.47l0.03,1.5l-0.45,0.44l-0.12,1.22l-2.53,-0.02l-2.68,0.69l-1.06,0.62l-0.58,0.96l-0.53,-0.06l-2.39,1.21l-0.42,0.76l-0.4,2.49l-0.69,0.76l-0.48,4.16l-1.09,0.73l-5.32,-1.37l-0.4,-0.8l-0.83,-0.45l-1.11,0.94l-2.58,-0.53l-0.97,0.15l-2.07,-0.31l-1.4,-0.61l-2.88,0.49l-1.9,-1.09l-4.44,-0.29l-1.86,-0.74l-1.13,0.19l-0.55,-0.51l-2.79,-0.5l-0.83,-1.7l-0.06,-1.04l-0.7,-1.65l-0.54,-3.52l-1.01,-1.66l-1.57,-1.19l-2.93,-0.59l-1.84,0.47l-1.36,0.86l-2.28,0.55l-1.54,1.56l-1.04,-0.07l-3.01,1.85l-1.55,0.34l-3.03,-1.5l-1.33,-0.29l-2.66,0.07l-1.33,-0.91l-0.5,-0.81l-3.55,-1.61l-2.09,-1.4l-0.66,-1.36l-1.1,-1.09l-2.08,-0.8l-1.34,-0.91l-2.73,-0.17l-0.9,-0.43l-1.66,-1.66l-0.08,-0.75l-1.31,-2.27l-0.3,-1.86l-1.47,-1.22l-0.02,-1.62l-1.45,-0.7l-0.17,-2.14l-3.57,-4.08l-1.03,-2.45l-0.88,-0.06l-2.97,1.37l-3.63,-2.19l0.69,0.2l0.8,-0.36l0.15,-0.46l-0.39,-0.73l-1.84,-0.31l-0.29,0.69l-0.72,0.48l-0.21,0.77l0.19,1.5l-0.24,0.32l-1.22,0.16l-0.84,0.51l-0.58,-0.43l-0.21,-1.14l-0.59,-0.91l-2.27,-1.56l-0.03,-3.98l-0.38,-0.4l-2.1,-0.09l0.0,-2.84l1.05,-3.56l-2.38,-2.97l-1.03,-2.21l-0.83,-0.6l-1.27,0.02l-5.5,-3.8l-1.96,-0.28l0.44,-1.85l-1.0,-1.8l-0.91,-0.72l-0.27,-1.04l-1.1,-0.07l-2.2,-2.72l0.96,-1.89l-0.74,-1.81l0.4,-0.91l1.01,-0.19l0.31,-1.89l1.71,-1.83l1.74,-1.07l0.13,-0.86l-0.38,-1.15l-0.94,-1.18l0.13,-0.84l0.21,-0.37l1.58,-0.58l0.3,-0.49l-0.2,-0.48l-0.95,-0.45l-3.11,-0.08l-1.23,-1.19l-1.38,-0.31l-0.92,-2.84l-1.37,-0.93l-0.23,-1.89l-1.06,-0.97l-0.82,-2.74l0.21,-1.31l-1.65,-1.47l-0.19,-1.57l0.23,-0.78l-1.97,-1.48l-0.74,-0.13l1.74,-3.57l-0.44,-0.59l-0.74,-0.15l-0.16,-3.61l-0.8,-1.09l0.1,-1.67l-0.76,-0.8l-0.29,-1.01ZM225.11,258.62l0.64,-0.41l0.16,-0.69l0.73,0.1l1.56,-0.62l-1.41,1.46l-0.78,-0.16l-0.9,0.32Z\",\n            name: \"Iran\"\n          },\n          AM: {\n            path: \"M133.7,137.72l5.31,-0.87l4.6,0.01l0.35,-0.5l0.62,-0.08l0.81,0.74l-1.29,0.59l0.3,0.87l0.61,0.07l0.36,-0.45l2.27,0.69l1.11,1.07l-1.31,0.9l-0.18,1.02l1.58,2.09l2.78,1.54l-0.52,1.31l-1.74,0.0l-0.63,0.66l4.82,3.73l1.1,-0.1l0.87,0.4l-0.9,0.95l0.15,0.5l1.2,1.02l-0.8,0.03l-0.28,0.45l0.61,0.92l0.05,1.15l-2.11,0.32l-1.07,-2.31l0.02,-0.85l-1.37,-0.97l0.06,-1.45l-0.44,-0.43l-0.76,-0.06l-1.65,0.57l-1.24,-0.74l-0.65,-0.01l-0.29,-0.86l-0.79,-0.69l-1.99,0.45l-1.49,-1.5l-2.11,-1.4l-2.29,0.19l-1.95,-0.72l-0.84,-2.96l0.94,-1.34l0.1,-0.93l-0.76,-2.01l-1.14,-1.0Z\",\n            name: \"Armenia\"\n          },\n          SY: {\n            path: \"M76.3,209.24l0.78,-1.3l-0.28,-1.24l0.26,-0.62l-0.51,-1.46l0.2,-0.69l1.24,-1.34l-0.07,-0.47l-0.54,-0.44l0.11,-0.31l0.73,-0.65l2.14,-0.14l0.12,-0.49l-0.59,-0.51l1.79,-1.52l0.45,-1.13l-0.6,-1.78l-1.0,-0.69l0.39,-0.45l-0.39,-0.91l-0.84,-0.28l-0.58,0.38l-1.63,0.02l-0.56,-2.32l0.4,-2.21l-0.29,-1.85l-0.99,-1.32l0.72,-2.42l1.8,0.68l0.65,-1.04l1.15,-0.75l0.19,-1.28l1.65,-0.36l0.34,-0.34l-0.72,-2.03l0.63,-2.49l1.73,0.32l1.19,0.96l2.75,0.08l5.74,-2.21l1.65,0.3l2.47,1.47l4.61,0.11l4.99,-1.25l5.14,-2.33l4.7,0.24l4.18,-0.76l1.3,-0.43l0.93,-0.75l0.49,0.36l0.27,1.06l-1.9,1.93l-2.13,1.89l-2.86,0.78l-1.02,1.32l-0.39,2.74l0.81,2.35l0.01,1.26l-1.03,3.02l-0.16,4.36l-1.75,2.99l-1.84,0.48l-14.35,8.07l-14.53,8.74l-3.06,-0.53l-1.12,-0.87l-1.17,-0.34l-0.76,-1.06l-1.01,-0.56Z\",\n            name: \"Syria\"\n          },\n          VN: {\n            path: \"M576.93,298.51l-0.51,-1.64l-0.78,-0.54l-2.47,-2.91l1.98,-2.57l2.48,1.12l1.27,1.17l1.55,-0.8l1.17,-1.62l1.09,1.31l0.65,-0.23l0.5,-1.12l1.92,1.68l0.6,0.06l0.44,-0.27l0.57,-1.49l0.49,-0.28l1.54,0.77l1.39,-0.82l1.27,-0.19l0.96,-0.95l0.37,-1.53l2.86,-1.51l1.3,1.08l0.6,0.99l2.08,1.11l2.44,-0.29l0.92,0.86l2.07,-0.36l1.29,0.73l-0.37,0.74l-0.94,0.61l-0.37,1.51l0.14,0.59l0.74,0.75l0.07,2.04l2.56,0.79l0.53,0.89l0.93,0.65l0.72,0.11l0.48,0.65l1.26,0.24l2.14,-0.43l0.58,0.42l-3.39,1.7l-0.6,1.9l-1.14,0.67l-0.66,-0.37l-1.43,0.37l-1.44,-0.38l-0.4,0.33l0.48,2.03l-1.38,1.48l0.04,1.26l-0.31,0.6l-2.5,2.19l-0.82,0.09l-0.73,0.54l-1.27,2.74l-0.21,2.38l-1.13,1.84l-0.08,0.98l2.05,3.67l4.39,4.08l-0.15,1.1l-0.77,0.02l0.12,0.62l1.13,0.7l1.67,2.29l2.79,2.32l0.58,1.32l2.52,1.78l2.47,2.7l1.33,-0.09l1.66,1.84l2.36,3.76l1.82,1.62l0.84,2.77l1.06,2.16l0.03,1.23l1.48,4.85l-0.3,0.38l0.19,4.34l1.14,2.62l-0.02,1.22l-0.47,-0.11l-0.95,0.87l0.34,1.63l-0.52,0.39l0.13,2.81l-0.5,1.52l0.29,0.85l-0.32,0.62l-0.86,0.38l-0.33,1.65l-1.2,0.23l-3.99,2.79l-1.28,0.28l-0.85,1.36l-1.1,0.17l-4.12,2.16l-1.15,-0.64l-0.46,-1.04l-0.71,-0.02l-0.4,1.85l-1.03,-0.97l-0.51,-0.09l-0.91,0.54l-0.19,0.4l0.3,0.33l0.82,0.08l0.14,0.43l-1.8,-0.07l-0.52,0.39l0.22,0.41l2.1,0.89l-0.78,0.82l-0.25,0.82l-3.09,-2.61l-0.52,-0.02l-0.09,0.51l0.35,0.6l2.45,2.47l0.4,0.99l-0.92,0.37l-3.22,-2.94l-0.84,-0.39l-0.48,0.13l0.02,0.49l2.41,3.01l0.28,0.55l-0.16,0.45l-4.87,2.23l-1.49,2.3l-1.45,1.2l-1.48,0.31l0.36,-0.57l-0.07,-0.58l-0.42,-0.3l0.2,-5.8l0.38,-1.4l1.47,-0.88l-0.07,-0.82l-0.63,-0.81l-1.13,-0.38l-0.44,-0.54l-1.28,0.05l-1.11,-1.3l0.48,-0.48l2.26,-0.26l1.53,-1.37l-0.09,-1.32l1.55,0.42l0.51,-0.11l0.48,-0.65l2.3,-0.3l0.84,0.96l0.69,-0.1l1.72,0.63l0.4,-0.5l-0.03,-1.85l-2.26,-1.96l-0.13,-2.15l0.54,-0.17l0.52,-0.66l2.19,0.55l0.8,-0.12l0.28,-1.97l1.77,-0.16l0.63,-0.58l1.29,-0.26l2.0,-1.65l0.57,-0.1l0.87,0.38l0.99,-0.95l0.4,-1.53l-0.59,-3.65l0.97,-3.21l-2.04,-5.21l0.23,-1.67l0.6,-0.64l0.66,-1.54l-0.36,-2.67l1.06,-1.4l0.15,-0.9l-0.78,-1.17l-2.07,-1.68l-0.7,-1.11l1.52,-0.9l0.14,-1.1l-3.61,-2.58l-0.66,-1.29l-1.33,0.28l-0.77,-1.14l-0.47,-2.49l-1.68,-1.97l-2.01,-1.57l-2.31,-2.43l-0.76,-1.89l-0.98,-1.33l-1.09,-0.41l-1.47,-1.51l0.18,-1.98l-3.34,-1.26l-4.49,-3.01l-1.41,-0.59l1.2,-1.11l-0.22,-1.32l1.3,-0.05l2.58,0.51l1.41,-1.22l1.32,-1.98l0.14,-0.79l-0.44,-0.98l-0.67,-0.44l-0.82,0.04l-0.47,-1.14l-1.38,-0.48l1.04,-0.77l0.02,-0.94l-1.79,-1.39l-1.94,-1.01l-1.95,0.68l-1.62,1.22l-3.75,-1.41l-1.74,-2.66l0.78,-2.71l-0.18,-0.78l-1.48,-1.06l-0.68,1.05ZM612.85,302.64l0.02,-0.06l0.03,0.02l-0.05,0.04ZM586.24,386.06l0.57,-0.22l-0.01,1.11l-0.18,-0.47l-0.38,-0.42Z\",\n            name: \"Vietnam\"\n          },\n          GE: {\n            path: \"M119.33,133.54l1.55,-2.34l0.06,-1.52l-2.13,-6.46l-0.7,-0.85l-2.04,-0.77l-0.55,-0.94l-1.69,-1.2l-2.83,-0.77l-3.29,-2.29l0.5,-0.74l2.93,0.42l1.01,-0.17l3.16,1.41l2.05,0.38l1.79,1.06l3.52,0.26l2.68,-0.31l1.23,0.63l1.39,-0.12l1.41,0.57l0.93,1.03l5.02,2.11l-0.32,1.13l0.82,0.54l1.12,0.07l4.19,-1.65l1.05,0.25l0.55,0.78l0.68,-0.05l0.49,-0.97l1.9,0.63l1.55,1.34l2.19,0.09l0.23,0.11l-0.65,2.11l0.22,0.56l2.45,1.57l1.94,0.42l1.21,0.63l-0.59,0.69l-0.95,0.41l-0.11,1.25l1.02,1.29l2.55,1.75l-0.26,0.81l-0.91,0.61l-1.98,-1.08l-1.24,0.22l-1.58,-0.46l-0.45,-0.31l-0.17,-0.72l-3.31,-1.02l-2.5,1.54l-1.15,0.15l-0.35,0.43l-4.03,-0.02l-3.27,0.74l-2.21,0.14l-0.49,-0.52l-1.43,-0.2l-0.32,-0.87l-3.2,-2.55l-1.35,0.05l-0.97,1.16l-3.92,-0.47l-0.86,0.54l-1.57,-0.52Z\",\n            name: \"Georgia\"\n          },\n          IL: {\n            path: \"M66.48,219.04l1.37,-2.38l3.17,-9.66l2.15,0.04l0.79,-0.61l0.24,-0.89l0.53,-0.01l1.02,-0.76l0.48,1.35l-0.25,0.5l0.28,1.14l-0.8,1.43l-1.61,0.91l-0.2,1.83l-0.83,-0.82l-1.7,-0.23l-1.12,0.8l-0.83,2.52l0.04,3.07l0.41,0.3l1.09,0.02l-1.48,1.09l-0.64,2.32l0.63,0.44l1.45,-0.12l2.1,-0.83l-0.28,1.47l0.26,0.89l-2.2,5.75l-0.02,2.36l-1.23,4.69l-4.6,-13.31l1.92,-2.46l-0.14,-0.82Z\",\n            name: \"Israel\"\n          },\n          IN: {\n            path: \"M322.9,278.6l0.38,0.21l5.32,-0.07l1.27,0.8l1.68,0.01l0.94,-0.3l0.53,-0.69l2.75,-0.92l0.43,1.03l1.13,0.35l2.74,-1.35l0.18,-0.55l-0.52,-0.57l-0.04,-0.58l0.56,-1.05l-1.29,-3.03l-1.64,-2.78l-0.04,-1.94l-0.86,-0.61l-2.16,0.04l-1.11,-1.47l-0.14,-1.05l0.41,-1.17l0.1,-2.48l-0.84,-0.83l-2.48,-0.42l-1.61,-0.88l0.35,-2.6l2.65,-2.76l1.84,-3.01l1.72,-1.27l1.22,0.52l0.56,1.44l1.1,0.59l2.99,-1.0l2.67,-0.31l2.47,-0.76l0.79,-1.89l1.73,-2.0l1.14,-2.58l4.28,-2.34l2.48,-4.31l1.09,-3.03l3.16,-1.31l0.98,-1.11l-0.21,-1.77l3.1,-3.58l2.24,-1.23l-0.01,-1.1l-0.66,-0.51l0.54,-2.18l-0.6,-2.16l0.25,-0.62l1.24,-0.97l3.79,-1.56l0.7,-0.74l0.09,-1.02l-0.92,-0.91l-1.85,-0.75l-2.18,-0.23l-0.22,-2.22l-2.33,-0.13l-0.3,-1.78l-1.32,-0.69l-0.82,-0.85l0.89,-1.3l0.26,-1.1l-1.3,-1.79l0.56,-0.69l1.19,-0.57l0.31,-0.72l-0.28,-0.71l-2.31,-0.44l0.48,-0.63l0.03,-0.68l-1.31,-1.12l1.1,-2.01l2.31,-0.86l4.75,0.99l1.75,0.07l1.98,0.85l2.17,0.26l2.44,-1.38l1.0,-0.01l2.0,-0.7l1.22,0.1l0.88,-0.54l0.56,-0.86l1.6,-0.77l0.5,-1.08l5.25,-3.06l0.64,0.29l0.82,-0.26l-0.18,1.74l2.41,5.55l2.69,0.85l2.04,1.59l-0.17,0.52l-1.42,0.96l-0.24,0.93l0.64,4.48l2.39,2.53l-0.22,1.03l0.75,0.99l0.1,3.18l-0.99,0.98l-0.73,0.16l-0.9,-0.75l-0.54,-1.09l-0.42,-0.13l-2.1,0.32l-0.52,0.68l0.83,2.72l1.35,1.61l-0.09,0.54l0.34,0.47l-0.15,1.2l0.72,1.02l-0.45,1.05l0.16,1.56l0.34,0.35l0.83,0.02l1.28,-0.47l0.37,-0.43l1.67,2.36l1.26,1.02l0.84,0.43l1.54,-0.15l2.02,1.45l0.71,0.09l-0.05,1.4l0.35,0.35l3.03,0.96l2.35,1.5l-2.46,1.88l-1.66,1.96l-1.12,2.54l-0.17,1.84l-1.11,1.66l-0.1,1.64l2.76,1.95l0.62,0.12l0.69,-0.39l4.26,2.5l1.1,1.3l4.1,2.53l1.21,-0.31l3.26,1.89l1.59,-0.04l0.61,1.31l4.11,1.18l1.39,-0.72l2.72,0.69l2.05,-0.86l3.61,1.43l0.49,1.96l3.51,1.64l0.5,0.74l1.03,0.2l2.34,-0.71l0.48,1.29l0.77,0.54l1.62,-0.34l2.57,0.56l2.67,1.13l2.21,-0.87l0.46,0.84l1.56,0.62l1.12,-0.47l1.56,0.17l1.58,-0.3l1.31,0.4l0.67,-0.62l0.82,-2.52l-0.4,-1.75l-0.92,-1.53l0.29,-2.13l0.92,-2.77l0.03,-0.85l-0.34,-0.44l2.12,-0.51l1.16,-0.64l1.2,0.53l0.28,0.95l-0.73,2.81l0.22,0.95l0.65,0.67l-0.76,0.6l-0.14,0.72l1.05,1.87l2.18,1.17l1.5,-0.2l1.71,0.47l0.4,0.55l1.23,0.14l2.71,-0.43l0.77,-0.78l0.82,-0.28l1.5,0.71l1.43,0.22l4.09,-0.15l1.16,-0.6l0.6,0.46l1.15,0.04l2.62,-0.46l0.58,-0.34l0.23,-0.55l-0.59,-1.48l0.63,-1.69l-0.97,-1.51l-1.82,0.06l-0.5,-0.33l-0.44,-0.65l0.28,-0.8l2.3,0.24l1.06,-0.64l2.23,-0.13l1.16,-0.49l1.04,-0.73l0.18,-1.47l2.52,-1.5l0.73,-0.75l0.82,-1.63l3.81,-0.83l1.13,-0.65l0.98,-1.24l0.63,-0.2l1.29,-1.3l2.31,-1.27l0.96,1.07l4.73,1.13l1.16,-0.99l0.17,-0.56l3.46,-1.75l1.52,1.58l-1.24,1.01l0.31,1.59l0.61,0.08l1.68,-1.02l0.74,1.78l-1.74,1.79l-0.44,1.09l0.18,0.4l1.05,0.43l1.61,-0.73l1.24,0.74l1.5,0.23l0.76,-0.22l1.42,0.99l0.16,1.89l-2.66,1.8l-0.78,1.08l0.23,1.55l1.41,2.08l-0.95,-0.48l-0.57,-0.88l-0.78,-0.46l-4.19,0.57l-1.17,0.47l-1.14,1.34l-3.26,2.32l-2.65,1.43l-0.51,0.98l-0.11,1.18l0.58,2.4l-0.76,0.85l-0.54,1.73l-1.12,1.36l-0.94,0.54l-0.72,1.21l-0.19,1.18l1.11,1.09l-0.87,2.1l-2.18,3.55l-1.16,3.34l-2.89,-1.02l-1.55,0.22l-0.79,-0.68l-0.86,0.21l-0.16,0.59l0.79,2.67l-0.36,4.18l-0.29,0.55l-0.89,-0.06l-0.42,0.54l0.05,0.78l-0.61,1.6l0.57,3.58l-0.72,0.29l-0.7,1.4l-1.45,-1.11l-0.57,0.22l-0.23,0.52l-0.5,-4.73l-0.99,-2.06l-0.2,-3.04l-0.66,-2.83l-1.11,-0.62l-1.71,0.29l-0.35,0.4l0.05,1.35l-1.33,1.63l0.0,1.78l-0.68,0.4l-0.43,-0.23l-0.76,-1.47l-0.87,0.09l-0.91,-2.82l0.47,-2.4l0.92,-1.22l1.06,0.04l1.44,-0.89l1.27,0.01l0.59,-1.27l1.19,-0.51l1.03,-3.6l1.2,0.25l0.62,-0.44l-0.19,-1.02l-2.02,-1.36l-1.38,-0.52l-12.03,0.09l-4.39,-1.08l0.12,-4.95l-1.2,-2.28l-0.97,-0.04l-0.36,0.44l-0.14,1.2l-0.96,-0.05l-1.22,-0.71l-0.47,-0.63l-0.34,-1.43l-0.48,-0.42l-1.07,0.08l-0.22,0.73l0.2,0.33l-0.52,0.04l-0.76,-0.22l-0.54,-1.04l-0.89,-0.81l-1.01,-0.48l-0.67,0.31l-0.15,0.89l0.69,0.62l-2.11,2.2l-0.56,2.02l0.59,0.77l0.85,0.23l0.71,0.63l1.1,1.34l0.92,0.42l1.12,0.03l0.31,0.89l0.81,0.56l-1.06,0.32l-2.19,-0.15l-0.38,0.27l-0.89,2.16l-0.8,-0.29l-0.59,0.27l-0.98,2.39l1.18,1.58l1.15,0.1l0.7,0.65l2.25,0.79l-0.21,1.8l-0.98,2.86l1.24,1.83l-0.23,0.96l0.19,0.58l1.36,0.51l-0.45,1.06l0.55,3.31l0.94,2.74l-0.12,2.18l-0.58,0.61l0.67,1.68l-0.38,-0.01l-0.68,-0.76l-0.73,1.06l0.28,-2.83l-1.13,-1.2l-0.38,0.3l-0.56,2.28l0.19,1.14l-0.63,0.22l-1.33,-1.07l-0.47,1.03l-0.53,-0.06l-0.19,-0.18l0.97,-3.34l-2.42,-2.28l-0.28,0.45l0.15,0.94l1.34,1.05l-1.35,2.0l-1.85,1.23l-4.35,1.21l-1.97,2.2l-0.18,1.39l0.89,3.07l-1.45,1.96l-0.07,0.76l-1.77,1.04l-0.81,1.11l-0.9,-0.24l-0.28,0.68l0.35,0.38l-0.41,0.19l-4.39,1.43l-0.28,-1.19l-0.79,-0.25l-1.88,1.14l-0.76,1.19l0.01,0.43l0.52,0.37l-3.38,2.95l-0.65,1.3l-4.35,5.15l-3.35,1.73l-3.41,3.56l-4.46,2.54l-1.82,1.41l-0.7,1.18l0.53,1.54l-0.64,1.44l-3.49,1.65l-2.6,-0.26l-1.0,0.23l-0.64,0.82l-0.76,2.21l-1.11,1.39l-0.62,-0.14l-0.45,-0.67l-1.08,-0.23l-2.16,0.81l-0.81,0.71l-1.53,3.09l-0.39,2.01l0.93,4.64l-0.49,2.1l0.99,3.49l-0.57,-0.03l-0.71,0.82l-0.03,0.48l2.01,1.74l-0.82,4.92l-0.62,1.73l-2.16,3.59l-0.79,3.19l0.26,0.98l-0.61,0.79l-0.06,0.48l0.93,0.07l0.18,0.65l-0.07,6.26l-1.97,-0.13l-1.06,0.18l-0.82,0.53l-0.53,0.87l0.03,0.92l-2.37,3.6l-0.11,1.12l0.64,0.82l-4.13,1.22l-1.23,0.94l-0.76,0.97l-0.5,2.85l-0.41,0.79l-2.04,1.38l-1.79,0.76l-1.36,-0.42l-1.69,-1.23l-3.75,-4.35l-1.66,-4.01l0.77,-0.17l0.23,-0.48l-0.84,-2.92l-1.12,-1.22l-0.01,-0.98l-2.05,-4.35l-1.49,-4.39l-1.57,-2.72l-2.42,-2.65l-1.84,-3.76l-1.3,-3.86l-0.75,-4.53l-1.29,-2.91l-0.9,-3.48l-3.22,-4.41l-0.58,-1.89l0.38,-0.67l-0.96,-1.15l0.25,-0.36l-0.34,-0.63l-0.8,-0.21l-1.49,-2.59l-1.02,-3.05l-1.38,-9.0l-1.2,-3.62l-0.89,-4.27l0.97,-2.9l-0.6,-1.33l-0.85,1.12l-0.06,-0.21l-0.03,-1.21l0.96,0.12l0.44,-0.29l-0.22,-0.47l-1.36,-0.6l0.04,-1.22l-0.43,-0.36l-0.4,-1.77l1.68,-6.59l-0.61,-3.55l-0.95,-0.59l-0.4,-1.19l0.62,-0.56l0.12,-0.49l-0.26,-0.13l2.93,-1.55l0.16,-0.51l-0.5,-0.21l-1.93,0.47l-1.69,-0.06l0.22,-0.85l0.82,-1.06l-1.25,-0.23l0.14,-0.86l1.66,-0.45l0.29,-0.38l-0.29,-0.39l-1.7,-0.37l-1.07,0.22l-2.04,-0.16l-0.39,0.32l0.86,0.84l-0.16,0.52l-1.7,1.97l0.13,0.63l0.93,0.36l0.47,0.66l-0.02,0.8l-1.63,2.72l-7.28,3.2l-2.07,-0.01l-1.67,-0.74l-3.29,-2.58l-2.17,-2.59l-4.15,-3.8l-1.53,-2.11l0.29,-0.67l1.05,0.94l0.71,0.17l1.95,-0.92l0.69,0.03l0.69,-0.46l0.75,0.03l1.32,-0.72l1.25,-0.2l2.15,-3.21l0.45,-0.21l0.23,-0.4l-0.21,-0.79l-0.88,-0.15l-0.75,1.0l-1.63,0.03l-3.3,1.46l-3.07,-0.68l-3.05,-1.58l-1.24,-1.01l-1.52,-2.74l2.46,-1.91l0.13,-0.51l-0.49,-0.2l-1.04,0.36l-2.61,1.58l-0.36,-1.42l1.25,-0.53l2.48,-0.1l0.41,-0.39l0.03,-2.19ZM510.38,409.89l0.46,1.53l-0.26,0.91l-0.96,-1.53l0.07,-0.64l0.69,-0.26ZM502.0,376.41l-0.73,-2.04l0.46,-0.43l0.48,-1.76l0.55,-0.06l-0.74,1.46l0.36,0.73l-0.38,2.09ZM502.93,370.91l-0.34,-0.32l0.01,-1.24l0.16,-1.82l0.51,-0.85l0.37,0.44l0.17,2.11l-0.94,0.92l0.06,0.77ZM503.37,365.59l0.26,-2.41l0.75,-0.98l-0.3,1.27l0.32,0.54l-1.03,1.58ZM500.23,384.16l-0.24,-0.02l-0.13,-1.21l0.57,-0.59l0.25,0.86l-0.45,0.96Z\",\n            name: \"India\"\n          },\n          AZ: {\n            path: \"M146.29,137.61l0.31,-0.42l-0.14,-0.46l-1.19,-0.85l1.66,-1.14l2.69,0.83l0.36,0.77l1.56,0.71l0.87,0.19l1.08,-0.25l2.09,1.1l0.96,-0.25l0.8,-0.8l0.28,-1.52l-2.74,-1.99l-0.84,-1.11l0.05,-0.36l0.72,-0.2l0.89,-1.05l0.62,0.68l1.35,-0.09l2.92,2.63l0.77,1.61l0.58,0.49l3.73,0.81l0.9,-0.29l1.4,-2.1l2.48,-1.29l1.21,-1.93l3.16,3.87l1.28,3.05l1.8,2.12l2.06,1.78l3.01,0.66l1.38,1.34l-2.81,-0.15l-3.0,1.27l-0.6,1.06l-1.13,4.18l0.28,2.16l-0.7,0.7l-0.48,1.73l-0.85,-0.64l-0.9,0.58l-0.89,2.3l0.09,3.19l-1.31,0.29l-1.44,-1.56l-0.89,-0.28l-0.7,-0.92l-1.38,-0.93l1.64,-0.6l0.54,-0.51l-0.11,-1.04l-1.24,-1.09l1.48,-1.09l0.08,-0.54l-2.77,-2.68l-1.81,0.33l-2.3,1.36l-2.2,1.41l-1.46,1.36l-1.09,0.35l-2.04,1.96l-0.32,-1.72l0.88,-0.3l0.06,-0.59l-1.44,-1.33l0.73,-0.52l0.03,-0.84l-1.43,-0.86l-0.97,0.13l-3.58,-2.86l1.32,-0.16l0.78,-1.51l0.01,-0.7l-3.09,-1.91l-0.78,-0.93l0.78,-0.43l-0.1,-0.73l-0.66,-0.19l0.95,-0.7l-0.04,-0.82l-1.37,-1.31l-1.8,-0.5ZM148.08,141.25l-0.07,0.14l0.0,-0.02l0.07,-0.12ZM143.77,150.11l1.2,-0.38l0.53,0.63l0.19,0.87l0.88,0.02l1.49,0.8l2.24,-0.57l-0.06,1.5l1.4,1.03l-0.08,0.63l0.93,1.93l-3.87,-0.93l-2.44,-2.08l-2.4,-3.44Z\",\n            name: \"Azerbaijan\"\n          },\n          ID: {\n            path: \"M789.33,474.14l1.38,-1.54l0.5,-1.3l-0.0,-0.92l3.92,-1.03l2.44,-1.87l1.87,-0.69l3.25,0.45l4.58,2.3l3.81,0.16l0.65,0.47l-0.17,1.23l1.36,2.55l-1.13,2.76l0.68,4.46l2.0,3.96l0.4,0.23l0.59,-1.18l-0.04,-0.97l0.35,-0.17l0.49,2.77l0.33,0.3l0.81,0.01l0.32,1.91l1.81,1.2l2.12,0.2l1.17,-0.34l2.83,-2.66l1.11,-1.9l1.81,-1.25l0.97,-2.14l3.21,-0.53l1.82,-0.72l0.99,-0.93l-0.34,-1.22l4.78,-2.47l6.06,2.27l1.21,0.95l7.33,3.23l2.8,0.05l0.74,0.46l2.75,0.25l1.04,1.22l1.3,0.02l0.01,27.59l-0.84,2.98l0.84,1.43l0.01,15.75l-2.99,-3.29l-3.59,-3.15l0.9,-1.62l-0.14,-0.51l-0.53,0.08l-1.2,1.2l-3.92,0.65l-1.0,-1.54l-2.46,2.02l0.42,-1.96l0.52,-0.65l0.64,-1.89l-0.34,-0.77l-0.85,-0.46l-1.09,-1.32l1.83,0.12l0.86,-0.28l0.27,-0.48l-2.71,-0.68l-1.41,-1.08l1.45,-0.24l0.25,-0.65l-3.14,-3.8l-1.0,-2.81l0.55,-0.88l-1.13,-0.38l0.86,-0.89l-0.44,-0.28l-1.59,0.29l-0.05,-1.54l-2.46,-1.85l-3.26,-1.75l-0.15,-0.38l-0.61,-0.18l-0.32,0.21l-0.69,-0.41l-3.54,-0.8l-4.86,-2.18l-3.99,-0.66l-1.85,0.06l-3.13,-1.82l-0.43,-0.67l0.08,-0.46l1.09,-0.1l0.36,-0.39l-0.35,-0.4l-1.06,-0.12l-1.47,0.42l-1.05,-0.47l-1.01,0.18l-1.02,-1.07l-1.09,0.17l-1.99,-2.23l0.11,-1.47l1.05,-1.42l-0.28,-0.61l-0.83,-0.02l-0.83,0.78l-0.2,1.78l-0.6,0.13l-0.41,0.49l0.16,0.67l-0.93,1.58l-0.06,1.1l-0.99,1.07l-2.04,0.03l-1.03,-2.27l0.81,-1.34l-0.94,-2.03l-3.11,-2.49l-2.21,-0.48l-0.28,-0.36l1.45,-0.65l3.86,0.73l2.32,-2.25l0.92,-0.29l2.94,0.8l0.71,0.55l0.57,-0.31l0.3,-1.04l1.11,-0.47l0.09,-0.97l-0.4,-0.37l0.57,-1.11l-0.55,-0.38l-1.54,0.64l-3.61,0.19l-1.92,0.42l-3.32,-0.4l-1.43,0.17l-1.92,-1.74l-0.62,-2.99l-0.39,-0.38l-1.41,-0.13l-3.25,-1.1l-1.9,0.36ZM839.2,526.43l1.24,-2.99l1.27,-2.13l1.22,-1.0l2.52,-0.81l1.51,0.07l1.22,1.28l0.14,0.58l-1.4,2.52l-1.81,1.56l-1.64,0.91l-4.26,0.02ZM846.09,526.2l0.98,-0.72l0.56,0.91l-1.54,-0.19ZM825.18,476.4l2.6,0.11l1.48,0.5l2.3,0.09l-3.37,0.37l-3.0,-1.07ZM822.33,469.12l1.47,0.16l0.45,0.26l-0.52,0.3l-1.4,-0.73ZM824.31,469.56l1.05,-0.04l3.09,2.59l-1.2,0.32l-1.42,-0.3l-1.0,-2.39l-0.52,-0.18ZM818.29,471.77l-0.21,-0.04l-0.17,-0.42l0.16,-0.02l0.22,0.48ZM813.05,509.18l0.58,0.0l0.41,-0.43l0.29,-1.17l-0.44,-0.67l1.84,-2.07l0.83,1.72l-0.21,1.93l0.3,1.44l-0.27,0.81l-0.38,0.3l-1.15,-0.18l-1.79,-1.67ZM812.51,512.73l0.68,-0.38l-0.5,-0.69l-0.07,-1.13l2.32,1.74l-1.23,2.35l-0.79,0.47l-0.67,-0.65l0.27,-1.71ZM801.88,507.73l-0.08,-0.13l0.08,-0.65l0.16,0.53l-0.16,0.25ZM791.1,523.43l-0.89,-0.08l-0.19,-0.61l0.31,-1.04l0.85,-1.69l0.66,-0.35l1.27,-1.43l0.18,-0.61l0.39,-0.12l0.2,0.11l-0.55,0.73l0.32,1.17l-0.44,1.23l-1.78,1.74l-0.35,0.94ZM785.68,465.9l-0.54,-0.57l-1.3,-0.15l0.15,-0.41l1.73,-0.18l0.72,0.99l-0.75,0.32ZM787.02,466.29l0.59,0.08l0.14,0.13l-0.57,0.11l-0.15,-0.32ZM787.04,464.3l2.01,0.13l1.67,0.73l0.19,0.68l-0.29,0.25l-0.91,-0.29l-0.96,0.12l-1.72,-1.62ZM789.08,524.99l0.05,-0.05l0.02,0.01l-0.07,0.04ZM786.92,471.18l1.16,-0.36l0.96,0.27l-0.49,2.26l-0.95,-0.47l-0.68,-1.7ZM766.27,488.64l-0.3,-0.69l2.11,-2.36l5.81,-0.26l0.94,0.8l1.35,-0.39l1.07,-0.71l0.68,0.0l3.32,1.4l2.85,0.08l1.28,0.95l0.69,1.82l0.9,0.44l0.47,0.8l-0.29,1.53l-5.37,-2.63l-1.33,-1.11l-2.56,-0.1l-0.53,0.55l0.05,0.41l-3.38,-0.88l-0.29,-0.67l-0.42,-0.11l-1.12,0.34l-1.17,1.21l-0.72,0.09l-0.48,-0.16l-1.4,-1.59l-0.89,-0.41l-0.85,0.41l-0.42,1.23ZM780.17,477.84l3.58,-1.0l0.41,0.54l-0.24,0.82l-1.38,0.56l-2.37,-0.92ZM778.8,522.63l0.94,0.13l-0.18,0.93l-0.79,-0.7l0.03,-0.36ZM763.29,456.66l-0.79,-2.23l0.82,-1.51l0.7,-2.8l2.1,-2.2l-0.75,1.07l-0.18,0.98l0.94,1.15l0.0,2.49l-0.83,1.09l-1.69,1.08l-0.32,0.87ZM763.89,457.48l0.97,0.44l0.99,-0.17l0.68,-1.6l1.34,-0.77l0.14,-1.37l0.36,-0.47l1.41,-0.82l1.5,-0.35l0.03,2.9l-2.85,1.55l-0.49,0.89l0.2,0.84l2.85,1.59l0.21,0.87l-1.41,-0.63l-3.46,-0.6l-0.67,0.3l-0.37,0.77l-0.08,2.61l0.69,2.29l1.8,3.22l-0.66,-0.29l-1.13,-2.05l-1.42,-1.29l0.15,-3.72l-1.16,-1.71l-0.12,-0.79l0.52,-1.65ZM769.72,447.96l-0.89,0.1l-0.34,-1.46l0.71,-1.09l1.54,-0.83l0.41,0.59l-0.43,1.63l-0.48,0.8l-0.53,0.26ZM770.98,517.22l0.07,-0.02l-0.01,0.06l-0.06,-0.04ZM766.39,491.38l0.34,-0.3l0.21,-0.03l-0.29,0.14l-0.26,0.19ZM767.55,490.94l0.67,-0.35l-0.17,0.61l-0.49,-0.27ZM766.43,525.21l0.01,0.0l0.11,-0.0l-0.03,0.03l-0.08,-0.03ZM767.16,475.96l-3.99,0.3l-0.88,-0.4l0.4,-0.99l1.11,-0.75l3.36,1.84ZM761.78,466.79l0.31,0.27l0.62,-0.11l0.26,-0.47l0.61,0.79l-0.45,0.83l0.4,0.98l-0.85,0.24l0.16,-0.66l-1.25,-1.34l0.2,-0.52ZM764.02,469.29l0.79,0.03l0.27,0.36l-0.41,0.22l-0.64,-0.6ZM760.63,469.19l0.05,-0.12l0.05,0.15l-0.09,-0.02ZM760.49,467.14l-0.3,0.09l-0.05,-0.4l0.25,-0.77l0.11,1.08ZM757.75,487.23l1.12,0.53l1.5,1.99l-0.08,0.85l-1.95,0.95l-1.71,0.4l-0.93,-0.35l-2.61,-1.35l-0.99,-1.48l0.06,-1.37l0.81,0.26l2.66,-0.6l2.11,0.14ZM757.21,433.23l0.01,-0.01l-0.0,0.01l-0.01,0.0ZM757.81,431.67l-0.55,-0.64l0.14,-0.88l0.5,1.37l-0.1,0.14ZM750.41,523.01l1.0,-1.32l1.73,0.26l2.79,-0.97l0.69,0.53l-1.13,0.53l-0.7,0.9l-2.53,-0.45l-1.85,0.52ZM747.5,477.65l0.38,-0.04l1.32,0.09l-1.63,0.15l-0.07,-0.2ZM750.49,477.62l1.14,-0.09l0.2,0.02l-0.72,0.12l-0.62,-0.06ZM750.92,479.55l-0.08,-0.27l0.13,-0.24l-0.06,0.52ZM748.22,437.51l0.03,0.04l-0.03,-0.01l0.0,-0.03ZM743.62,476.88l0.82,0.28l0.59,-0.2l0.46,0.47l-1.5,0.42l-1.42,-0.31l-2.24,0.81l-0.5,-0.01l-0.45,-0.75l0.3,-0.99l0.47,-0.16l1.27,-0.06l2.21,0.5ZM745.7,477.42l0.14,-0.02l0.02,0.01l-0.16,0.01ZM704.86,464.54l0.67,-0.32l0.35,-0.64l-0.38,-1.56l0.7,-1.38l0.9,-0.91l0.22,-1.01l1.46,-1.75l0.61,0.71l0.88,0.3l0.92,-0.29l1.28,-1.46l0.85,-1.63l0.55,-0.33l0.65,-0.1l0.97,0.48l1.35,0.12l0.78,1.0l0.7,0.33l2.14,-0.14l4.23,0.52l2.94,1.27l1.84,-0.7l5.9,0.77l3.32,-1.42l1.09,-1.24l1.03,-0.48l0.49,-1.14l1.28,-0.5l1.4,-1.67l0.9,0.27l0.37,0.77l-0.72,0.71l-1.14,2.23l-2.02,1.93l-1.35,1.98l-0.59,0.59l-1.4,0.6l-5.09,0.6l-1.77,-0.16l-1.34,-1.15l-0.84,-0.13l-8.69,0.42l-2.46,-0.46l-3.77,0.42l-3.29,-0.64l-1.86,0.64l-1.29,1.45l-1.42,3.65l0.37,2.87l1.43,2.52l2.03,1.25l0.64,1.6l0.81,1.04l2.66,0.26l1.16,-0.55l1.08,-1.76l1.97,-1.99l1.09,0.7l1.85,0.06l2.35,-1.32l4.52,-0.01l0.37,-0.44l-0.16,-0.5l1.88,-0.43l1.27,0.47l0.28,0.68l-0.26,1.25l-0.33,0.19l-1.76,-1.11l-1.42,0.24l-0.83,0.58l-2.23,2.84l-1.83,1.48l-2.87,1.01l-1.54,1.51l-1.64,-0.44l-0.46,0.1l-0.39,0.56l0.2,0.92l1.67,1.53l1.36,0.61l2.3,3.75l1.54,1.18l0.08,0.97l0.62,0.86l-0.56,0.67l-0.39,2.87l2.47,2.01l0.76,1.42l0.7,0.29l0.61,-0.26l0.18,1.66l-0.74,-0.33l-0.61,0.56l-1.54,0.02l-2.74,0.91l-0.68,0.93l0.08,1.25l-0.69,0.09l-2.23,-0.59l-0.59,-1.03l0.39,-2.11l0.54,-1.02l-0.07,-0.81l-0.6,-0.58l-1.72,-0.75l-3.0,-2.79l1.22,-2.49l-0.1,-3.4l-0.7,-0.76l-0.83,-0.19l-1.98,0.21l-2.36,1.53l-0.78,0.9l-0.02,0.97l1.01,2.13l0.32,2.63l-0.55,2.79l0.43,4.03l-1.05,3.95l1.04,2.72l-3.1,0.14l-1.67,0.86l-1.69,-1.16l-0.56,-0.63l-0.09,-0.63l1.15,-3.15l0.0,-1.13l0.72,-2.42l0.09,-2.92l-1.08,-2.37l0.04,-1.47l-1.22,-0.88l-2.77,0.54l-0.33,-0.25l-0.58,-1.33l0.17,-2.69l-0.53,-1.3l2.28,-1.74l0.6,-2.56l1.14,-1.64l0.2,-0.97l-0.28,-2.97l1.44,-3.6l1.14,-1.35l0.69,1.01l0.45,0.18l0.3,-0.38l-0.89,-5.64ZM736.59,534.43l0.65,0.46l1.5,0.02l1.11,-0.94l0.32,-0.91l2.8,-1.45l0.68,0.57l1.03,-0.38l-0.17,0.55l-0.73,0.03l-0.51,0.53l0.75,2.11l-2.51,2.9l-2.0,1.7l-1.75,0.24l-2.44,1.21l-0.67,0.02l-0.7,-0.31l0.76,-1.13l-0.16,-0.53l-0.73,-0.47l0.54,-1.87l2.23,-2.34ZM739.69,526.62l0.3,-0.38l-0.09,-0.61l0.49,-0.44l0.74,0.46l1.0,-0.28l2.39,0.23l0.02,0.44l-4.84,0.58ZM738.25,526.06l-0.87,1.35l-0.81,-0.7l1.04,0.05l0.63,-0.7ZM731.61,527.45l1.11,-0.79l0.05,-0.48l0.71,0.19l1.02,-0.53l-0.5,0.72l-0.64,0.17l-0.4,0.77l-0.89,0.22l-0.47,-0.27ZM733.01,475.86l0.15,0.17l-0.02,0.09l-0.13,-0.02l0.01,-0.25ZM728.24,475.03l-0.26,-0.63l0.5,-1.4l1.79,-0.17l-2.03,2.2ZM730.66,474.31l0.09,0.01l-0.08,0.05l-0.01,-0.07ZM731.28,474.11l0.47,-0.63l0.45,-0.08l0.46,0.35l-0.47,0.81l-0.91,-0.45ZM728.06,545.35l0.04,-0.38l1.57,-0.49l1.76,-1.46l0.19,0.55l-1.26,1.05l-2.31,0.73ZM729.8,526.35l0.37,-0.31l0.87,0.03l-0.08,0.29l-1.15,-0.01ZM726.57,505.77l-0.28,-0.74l1.35,-2.24l0.65,-4.35l0.9,-1.29l0.76,0.85l0.09,0.81l-1.0,0.33l-0.65,3.17l0.07,0.35l0.84,0.13l0.74,0.68l-0.7,0.43l-0.85,0.03l-0.97,1.82l-0.95,-0.0ZM729.17,494.09l1.2,-0.03l0.04,0.33l-0.68,0.62l-0.57,-0.92ZM705.88,527.5l2.53,-1.18l2.61,-0.3l1.0,0.55l1.9,0.32l3.37,1.63l4.0,-0.89l1.97,1.18l0.65,0.09l1.14,-0.33l0.87,-1.23l2.69,-1.32l-1.25,1.05l0.03,0.87l-2.49,0.92l-0.98,0.08l-1.0,-0.06l-0.77,0.11l-3.09,1.08l-0.63,-0.51l-1.32,-0.05l-0.8,0.74l-0.94,-0.13l-1.11,0.29l-3.54,-1.0l-1.78,0.13l-1.63,-0.31l-1.31,0.48l-0.52,-0.79l0.4,-1.43ZM728.29,525.01l-0.42,-0.09l0.33,0.02l0.09,0.07ZM724.05,503.6l0.27,-1.16l0.54,-0.75l-0.3,-1.92l2.04,-0.94l0.18,1.77l-1.01,1.42l0.03,1.48l-0.38,0.24l-0.79,-0.36l-0.58,0.23ZM720.93,502.15l0.62,0.76l-0.12,1.31l-0.94,-1.15l0.45,-0.92ZM720.23,543.0l0.44,-0.43l0.34,-0.02l-0.55,0.41l-0.23,0.04ZM706.07,534.07l1.84,1.37l0.47,0.99l1.4,0.16l0.62,0.43l1.7,1.8l0.11,0.63l-0.67,0.63l-1.69,0.55l-1.31,-0.32l-1.32,-0.78l-0.92,-1.19l-2.54,-1.52l-3.9,-0.54l-0.69,-0.98l1.35,-0.7l3.1,-0.23l1.3,0.2l1.15,-0.51ZM702.37,528.21l0.22,-0.47l0.21,0.05l-0.06,0.15l-0.36,0.27ZM693.04,526.41l0.72,0.45l1.53,-0.65l0.67,0.05l0.64,0.92l0.65,-0.13l0.38,-0.6l0.71,-0.04l1.18,2.42l-1.95,-0.07l-0.56,0.18l-0.25,0.54l-1.8,0.36l-0.09,-0.98l-0.75,-0.28l-1.32,1.18l-2.33,0.64l-1.08,-0.05l-1.64,0.65l-2.17,0.19l-1.07,0.47l-1.71,-0.58l0.33,-2.98l2.29,-1.13l1.29,0.44l1.51,-0.01l1.57,1.98l1.43,0.27l2.25,-0.78l0.15,-0.9l-1.07,-0.93l-0.98,-0.17l-1.11,-0.8l-0.4,-0.87l0.92,-0.34l1.29,0.22l0.79,1.34ZM624.73,453.92l0.32,-1.2l1.4,-1.48l0.79,-1.6l0.57,-0.24l0.23,0.98l0.47,0.31l0.21,1.21l0.61,0.69l4.36,3.97l1.76,1.11l4.44,-1.41l2.81,0.41l2.57,-0.14l0.92,-0.77l1.34,-0.42l0.81,-2.15l1.88,-0.75l3.35,-0.06l0.1,0.67l0.44,0.33l4.78,1.45l2.12,-1.48l3.43,-0.44l1.13,0.3l1.1,-1.45l0.44,-1.58l0.82,-0.52l0.22,-0.91l-0.41,-1.57l2.94,-2.09l-0.01,-0.9l-0.63,-0.47l0.22,-1.45l0.71,-0.74l1.04,0.04l0.82,-0.43l0.87,-3.2l0.01,-3.59l0.74,-1.77l1.17,-1.05l0.92,0.4l1.13,-0.45l1.83,0.33l0.96,-0.41l4.28,0.22l1.22,0.26l1.37,0.81l-0.09,0.78l2.13,2.46l-0.52,0.13l-0.74,-0.59l-0.66,0.21l-0.19,0.44l-2.01,-0.06l-0.87,0.12l-0.34,0.39l2.26,1.73l-0.23,0.93l0.24,0.77l1.88,0.96l-0.32,0.83l0.66,0.44l0.04,0.65l0.97,0.48l0.77,1.52l1.29,1.56l-0.09,0.39l-1.72,1.31l-0.07,0.72l2.13,2.4l4.18,2.87l2.38,2.1l-1.34,0.78l-1.57,0.18l-2.4,-0.43l-1.29,-1.21l-0.78,-0.45l-0.48,0.07l0.3,1.69l-1.62,1.18l-1.71,3.82l-0.45,4.24l0.8,3.1l-2.33,1.11l-2.24,2.13l-0.51,-0.17l-0.74,-1.17l-0.38,0.3l0.13,2.03l-1.38,0.97l-0.34,0.98l-1.85,1.46l0.38,0.6l0.71,-0.03l0.17,0.7l-0.16,0.71l-0.71,0.57l0.12,0.69l1.44,0.48l0.05,1.1l-0.1,0.51l-0.99,-0.02l-0.65,0.55l-0.07,0.39l0.49,0.41l-0.28,1.72l-0.35,0.31l-0.29,-0.21l-0.62,0.23l-0.07,0.63l0.5,0.77l-1.21,1.63l-0.68,1.71l-9.18,4.19l-0.25,-3.08l-0.6,-2.47l-0.29,-0.35l-0.87,0.73l-0.51,-0.29l0.29,-0.99l-0.2,-0.48l-0.51,0.12l-0.63,0.76l-0.92,-0.59l-1.23,0.91l-1.59,0.4l-0.66,-1.92l-0.54,-0.16l-1.55,0.4l-2.09,-2.12l-0.67,0.19l-0.43,1.75l-1.45,0.92l-1.04,0.52l-2.45,-0.55l-1.19,0.45l-1.71,1.25l-0.04,-3.42l-1.1,-1.47l-0.52,0.04l-0.45,0.52l-1.8,-0.3l-3.15,1.01l-0.34,-0.21l0.41,-0.79l-0.48,-0.19l-1.4,0.72l-0.99,-0.86l-2.02,0.63l-1.1,-7.06l-0.99,-1.09l0.56,-2.28l-0.43,-2.1l-0.89,-1.4l-1.51,-1.24l-2.88,-0.7l-0.03,-0.39l0.77,-0.78l-1.83,-1.67l-0.05,-1.14l0.99,-2.44l-2.34,-2.49l-0.27,-3.07l0.36,-2.36l1.15,-0.76l0.16,-0.42l-0.77,-0.31ZM689.33,432.89l1.07,-0.1l0.09,0.26l-0.8,0.22l-0.36,-0.38ZM688.52,438.39l0.19,-0.01l-0.04,0.25l-0.08,-0.07l-0.06,-0.17ZM688.18,525.84l-0.09,-0.44l0.43,-0.1l-0.34,0.54ZM676.77,529.94l0.76,-0.55l-0.1,-2.16l1.02,-0.92l1.12,-0.58l2.02,0.78l-1.52,3.24l0.09,0.45l-0.76,0.16l-2.62,-0.43ZM677.43,493.41l0.1,-1.05l-0.41,-1.51l0.63,-1.84l0.39,-0.25l0.37,3.12l-0.14,0.7l-0.94,0.84ZM665.5,525.06l3.09,0.52l1.84,-0.9l2.51,0.99l0.95,1.06l-2.63,1.44l-0.74,1.27l-0.04,-0.59l-0.76,-1.07l-1.72,-1.15l-1.67,-0.38l-0.83,-1.18ZM671.74,515.64l-0.41,0.09l-0.2,-0.1l0.96,-0.2l-0.35,0.21ZM596.42,514.63l0.11,-0.17l0.13,-0.12l0.08,0.21l-0.32,0.08ZM598.18,514.76l1.14,-1.95l1.0,-0.35l0.73,-2.71l1.15,-1.24l5.69,1.33l1.0,-0.27l0.85,-1.03l1.75,0.39l0.99,1.02l1.54,0.76l3.59,0.62l1.25,-0.16l1.32,1.32l0.6,1.81l0.87,0.74l4.61,0.57l1.64,-0.38l2.33,0.65l2.82,-0.05l1.94,0.34l1.32,-1.19l1.09,-2.43l1.31,-0.19l1.72,1.9l1.29,0.09l1.34,-0.38l1.51,0.93l1.77,0.23l0.81,0.67l3.18,0.2l0.76,2.06l1.03,0.6l0.02,1.75l1.86,1.11l1.83,0.48l1.96,0.06l4.21,-0.69l2.22,0.99l0.26,1.37l-0.42,3.1l0.54,1.37l0.91,0.84l-1.69,-1.01l-2.59,-0.38l-5.27,-2.14l-4.31,0.92l-4.16,-0.64l-4.53,-0.14l-6.69,-1.16l-4.26,-1.95l-5.75,-1.42l-4.09,-0.29l-1.47,0.35l-0.85,0.62l-3.75,-0.53l-2.7,-1.34l-2.03,-0.56l-6.08,-0.73l-0.14,-0.52l0.74,-1.34l-0.22,-0.54l-4.35,-1.48l-3.17,-0.03ZM654.92,517.5l-2.42,-0.71l0.79,-0.92l1.33,-0.13l6.62,-0.05l0.29,0.26l-0.93,0.28l-0.47,0.51l-1.37,0.03l-1.21,0.72l-2.63,0.02ZM651.59,507.15l0.02,-0.02l-0.0,0.02l-0.01,-0.0ZM629.22,472.23l-1.34,0.69l-0.13,-0.04l0.21,-1.38l1.22,0.14l0.23,0.38l-0.19,0.23ZM618.17,435.89l0.02,-0.02l0.08,-0.01l-0.1,0.03ZM618.38,435.83l0.47,-0.55l-0.28,-0.49l-1.07,-0.29l-0.43,-0.7l1.13,-1.07l1.0,1.28l0.01,0.85l-0.47,0.88l-0.36,0.1ZM613.87,485.59l0.62,-2.31l0.83,-0.17l1.71,0.45l0.91,0.65l0.42,0.73l-0.67,1.89l-0.81,0.66l-1.12,-1.0l-1.46,0.78l-0.43,-1.68ZM601.61,476.32l0.87,1.51l0.39,2.48l1.18,2.07l2.78,0.8l-0.96,2.1l0.31,1.02l-2.53,-1.29l-1.77,-0.49l-0.5,-1.02l0.14,-1.35l-0.58,-0.6l-0.68,-1.84l-1.77,-0.78l-1.76,0.29l-1.15,-0.49l1.64,-1.12l0.11,-1.3l0.47,-0.44l0.59,-0.22l0.69,1.26l0.66,0.02l0.4,-0.54l-0.09,-0.9l0.29,-0.08l0.93,0.17l0.35,0.75ZM530.39,424.92l2.72,-0.33l2.48,0.49l2.53,-0.04l2.62,2.37l0.68,1.61l1.82,1.83l-0.03,1.66l0.5,0.76l2.69,1.32l0.98,1.31l2.78,1.33l4.3,2.95l5.9,7.42l1.3,0.61l1.52,1.27l0.6,-0.39l-0.48,-1.94l0.42,-0.2l0.65,0.22l1.77,1.7l0.75,1.83l0.64,0.64l2.38,0.59l1.69,1.29l0.93,1.25l0.63,2.04l1.23,1.23l0.72,0.54l3.47,0.81l0.66,0.9l-0.25,0.33l-3.29,1.42l-0.26,0.47l0.44,0.31l2.65,-0.48l3.25,-1.74l0.79,0.19l1.35,1.33l0.7,1.44l-2.59,1.79l-0.16,1.25l0.67,0.82l-0.37,0.32l-0.08,0.69l0.83,1.57l1.47,1.03l2.67,1.06l2.12,0.17l1.02,5.6l0.54,0.93l1.88,1.11l-0.1,0.7l-1.34,1.48l0.01,1.56l0.96,0.2l1.38,-1.36l0.89,-0.36l2.6,0.15l1.24,0.75l3.36,4.47l0.08,0.58l-1.14,1.39l-0.45,1.58l0.05,1.0l0.58,0.85l-0.73,2.28l0.4,3.06l0.0,3.37l-0.52,4.94l-0.35,0.75l-0.52,-0.09l-0.7,-0.92l-1.3,-0.93l-0.74,0.12l-1.53,1.25l-3.08,-1.61l-0.57,0.22l-0.16,0.5l0.41,2.14l-3.87,-3.78l-1.82,-2.35l-6.85,-4.58l-2.81,-2.35l-3.04,-4.11l-4.1,-3.23l-1.59,-2.69l-1.88,-1.68l-1.65,-2.44l-0.27,-2.38l-2.75,-4.74l-1.36,-3.58l-3.35,-3.83l-1.51,-2.78l-2.58,-1.27l-1.15,-0.94l-2.67,-8.45l-1.56,-2.88l-3.96,-2.61l-2.73,-1.1l-0.8,-3.58l-1.59,-1.11l-3.15,-4.48l-1.34,-1.07l-2.6,-0.77l-1.59,-1.89l-5.47,-5.13l-2.06,-3.75l0.28,-0.92l-0.16,-0.88l0.93,-0.33l2.34,0.34l2.94,2.12l2.82,0.53ZM599.87,441.75l-0.0,-0.09l-0.01,-0.06l0.07,0.03l-0.06,0.12ZM590.63,465.03l0.37,-0.91l0.85,0.78l-0.91,0.24l-0.31,-0.11ZM593.0,465.4l0.03,-0.01l0.04,0.04l-0.06,-0.03ZM588.93,455.69l0.63,-0.44l1.15,-0.05l0.48,0.5l-0.01,0.7l-0.48,0.59l-0.37,-1.29l-0.46,-0.23l-0.95,0.22ZM589.16,467.04l1.01,-0.3l0.43,0.45l-0.4,0.65l-0.62,-0.01l-0.43,-0.79ZM586.69,455.6l0.28,-0.16l0.2,0.1l-0.19,0.32l-0.3,-0.26ZM583.2,466.09l0.26,-0.26l0.73,0.22l-0.47,0.13l-0.51,-0.09ZM580.69,459.3l0.04,-0.25l0.07,-0.11l0.18,0.35l-0.29,0.01ZM577.43,455.57l0.12,-0.16l1.43,0.67l0.68,0.71l-1.09,-0.85l-1.14,-0.36ZM575.86,455.84l3.0,1.71l0.05,0.24l-3.31,-0.81l0.26,-1.13ZM572.44,452.08l1.35,0.36l-0.78,-0.08l-0.57,-0.28ZM573.94,452.48l0.99,0.27l0.07,0.32l-0.4,-0.32l-0.66,-0.27ZM573.82,453.77l0.81,0.9l-0.12,1.3l-0.51,-0.94l-0.18,-1.26ZM573.27,503.85l0.97,0.44l-0.04,0.13l-0.23,0.01l-0.7,-0.58ZM569.22,448.44l0.36,0.65l-0.35,0.99l-0.59,0.37l-0.51,-0.09l-0.49,-0.96l0.03,-0.67l1.55,-0.3ZM558.51,485.09l1.28,1.34l-0.14,0.64l-1.01,-1.14l-0.13,-0.84ZM556.91,483.15l0.93,0.83l-0.3,0.47l-0.45,-0.01l-0.18,-1.3ZM553.83,479.28l0.22,0.16l0.51,1.03l-0.84,-0.6l0.11,-0.59ZM550.38,476.64l-0.51,0.03l-1.55,-1.07l-1.64,-2.92l0.45,-1.36l1.25,-0.2l1.51,3.63l0.96,1.31l0.02,0.4l-0.48,0.18ZM544.85,467.45l-0.26,0.08l0.72,-1.91l-0.06,0.84l-0.4,0.99ZM537.07,452.74l3.73,3.74l-0.54,2.57l-0.49,-0.11l-0.75,-1.78l-1.43,-0.9l-0.76,-1.62l-1.06,-1.18l0.55,-0.07l0.75,-0.64ZM529.81,445.7l-2.67,-1.77l-1.57,-0.47l-0.46,-0.71l0.65,-0.33l3.82,2.73l0.22,0.54Z\",\n            name: \"Indonesia\"\n          },\n          OM: {\n            path: \"M223.78,281.06l3.38,-0.67l0.29,-0.3l-0.45,-1.47l-1.1,-0.27l0.26,-4.83l0.69,-0.3l-0.25,0.67l1.14,1.14l2.12,-1.71l1.76,3.66l2.12,2.65l1.62,1.38l3.75,1.45l3.82,0.7l1.61,0.75l1.8,-0.16l1.27,0.87l1.96,3.07l2.97,3.68l1.01,0.78l1.88,0.47l-0.19,1.8l-3.17,5.6l-2.23,1.61l-1.3,1.38l-3.11,5.43l-1.27,0.02l0.2,-1.11l-0.45,-0.45l-0.63,0.09l-0.72,0.31l-1.78,2.51l-1.2,4.67l0.69,4.92l-4.45,0.72l-2.69,1.19l-1.36,1.35l-0.86,3.35l-1.11,1.22l-5.59,0.74l-1.26,0.47l-1.68,1.99l-0.21,0.8l0.41,1.01l-1.54,2.31l-1.94,0.51l-1.56,-0.49l-3.77,0.2l-3.53,1.9l-3.58,0.74l-1.98,-4.43l-0.59,-0.39l-5.4,-12.58l22.31,-7.89l4.97,-15.7l-3.38,-5.75l0.09,-2.41l2.31,-5.46l0.18,-0.91l-0.28,-0.81ZM247.35,309.88l0.0,-0.41l0.54,-0.61l-0.3,0.79l-0.24,0.24ZM248.53,308.01l0.2,-0.4l0.07,0.18l-0.27,0.22ZM228.41,263.74l0.31,-0.57l0.82,-0.1l0.38,-0.43l-0.33,3.33l-0.56,1.17l-0.36,-0.22l0.15,-2.76l-0.42,-0.43Z\",\n            name: \"Oman\"\n          },\n          KG: {\n            path: \"M333.84,133.42l1.81,-1.22l1.29,-1.33l1.2,-0.39l0.51,-0.99l2.75,-1.2l0.24,-0.51l-0.33,-0.57l-1.37,-0.73l-0.83,-0.02l0.93,-1.66l1.6,-1.66l3.59,-0.75l3.76,0.58l3.43,1.04l0.93,0.74l3.01,0.46l1.0,0.76l0.75,0.15l0.44,-0.52l-0.5,-1.57l0.95,-3.48l2.24,-1.01l0.53,-0.54l1.34,-0.0l0.6,-0.3l4.25,2.23l4.21,1.31l2.21,0.17l1.38,-1.08l5.05,0.16l3.55,-0.49l1.82,0.55l5.94,0.5l3.66,-0.07l2.7,0.81l1.83,0.02l0.38,0.88l1.76,1.69l3.68,0.64l1.99,1.86l0.2,0.82l-2.73,0.34l-0.69,0.92l-3.46,1.02l-4.15,2.01l-2.87,1.7l-0.29,0.97l-1.48,1.63l-2.25,0.18l-1.64,0.53l-4.35,-0.4l-0.86,0.18l-0.77,0.51l-1.24,1.84l-0.61,1.77l-1.46,1.67l-0.76,-0.52l-2.82,1.09l-1.14,-0.02l-0.54,-2.38l-0.56,-0.45l-3.42,1.52l-1.94,-0.32l-0.64,0.57l0.07,0.85l-0.9,0.24l-1.97,1.51l-3.29,0.96l-1.18,2.16l0.52,1.92l-0.49,0.68l-2.52,0.22l-2.64,0.86l-4.11,-0.13l-1.78,0.47l-0.72,0.87l-1.36,-1.13l-1.83,0.66l-0.31,-1.25l-1.47,-0.33l-0.05,-0.87l-0.65,-0.43l-3.16,1.0l-0.52,0.7l-1.26,0.12l-1.35,-1.46l-0.85,-0.22l-1.88,0.33l-0.56,-0.29l-1.73,0.26l-2.68,-0.18l-1.89,0.39l-0.45,-1.69l0.33,-1.19l1.21,0.22l0.53,-1.61l3.03,-0.86l0.66,0.22l2.71,1.05l0.49,0.78l-0.25,0.76l0.56,0.68l0.65,0.16l0.89,-0.38l0.19,-0.59l-0.27,-0.32l-1.06,-0.21l0.68,-0.5l0.21,-0.75l1.71,-0.69l0.01,0.93l0.46,0.52l-0.18,0.53l0.29,0.52l1.63,0.02l0.33,-0.32l-0.17,-0.81l0.26,-0.43l-0.29,-0.61l-0.9,-0.2l-0.78,-0.86l2.17,-0.26l1.43,0.63l0.91,0.01l0.78,0.5l1.93,-0.92l1.38,-1.61l1.76,0.26l0.46,-0.69l-0.19,-0.66l1.48,0.32l1.4,-1.17l2.73,-1.47l-0.24,-0.8l-3.56,-0.38l-2.13,-1.51l-1.14,0.14l-0.4,-1.32l-1.91,-0.17l-0.64,-1.78l-0.65,-0.42l-0.48,-0.9l-0.93,0.42l-0.15,1.53l-0.73,-0.17l-0.58,0.33l-0.07,1.45l-1.73,-0.13l-1.82,-0.62l-0.41,-0.24l-0.38,-1.21l-0.54,-0.58l-1.68,0.27l-1.78,-0.81ZM345.71,147.85l0.12,-0.51l-0.43,-0.47l-1.23,0.66l0.09,0.46l0.8,0.44l0.65,-0.58Z\",\n            name: \"Kyrgyzstan\"\n          },\n          UZ: {\n            path: \"M235.01,135.19l-0.38,0.4l-7.22,-0.5l-0.01,-32.71l18.68,-5.07l-1.24,2.18l-1.29,3.39l0.43,2.39l-0.39,1.23l0.7,1.14l0.78,0.02l1.18,-0.62l1.48,-2.22l0.55,-0.33l-0.18,-1.56l0.55,-1.23l-0.28,-0.48l-0.7,0.18l0.81,-1.1l-0.46,-0.93l-0.05,-1.12l4.44,2.62l-1.62,3.88l0.88,1.36l2.38,2.12l-0.8,1.35l0.51,0.69l2.08,-0.32l1.06,-0.65l0.04,-0.74l0.85,-0.92l-0.25,-2.44l0.36,-1.11l6.56,3.85l1.11,2.04l6.47,6.3l9.14,-1.24l9.21,0.7l3.4,-1.45l2.55,2.56l1.67,0.98l2.24,3.85l0.51,0.16l1.6,-0.74l-0.63,8.25l0.39,0.41l3.32,0.08l1.24,6.2l0.32,0.86l0.57,0.44l8.82,-0.28l1.03,1.2l-0.43,1.73l0.59,0.83l2.42,1.29l1.4,-0.01l0.52,-0.77l-0.32,-0.99l0.15,-0.68l1.09,-1.4l1.89,-1.48l0.64,-1.48l2.02,-0.94l2.24,-1.63l3.29,-1.36l2.33,-2.27l1.37,0.3l1.01,-1.21l2.11,-0.91l0.93,0.49l-2.53,1.07l-0.44,0.94l-1.23,0.44l-1.34,1.36l-2.01,1.35l-0.2,0.57l0.26,0.52l2.11,0.99l1.62,-0.31l0.55,1.44l0.77,0.57l2.02,0.69l2.03,0.24l0.65,-0.47l0.06,-1.22l1.11,-0.24l0.4,-1.1l0.62,0.37l0.89,2.05l1.85,0.11l0.32,1.36l1.44,-0.1l2.12,1.51l2.97,0.22l-2.11,1.0l-1.2,1.07l-1.66,-0.38l-0.4,0.63l0.2,0.8l-0.82,-0.42l-0.88,0.16l-1.5,1.67l-1.55,0.74l-0.4,-0.41l-0.89,0.03l-1.76,-0.69l-4.82,0.75l-0.78,-1.06l-0.95,-0.31l2.37,-2.04l0.47,-0.8l-0.25,-0.53l-0.5,-0.2l-0.31,-0.85l0.28,-0.59l-0.77,-0.87l-0.64,0.33l-0.71,-0.45l-0.47,0.06l-0.75,1.28l-4.15,1.99l-2.01,-1.2l-0.79,0.29l-0.44,0.45l-0.08,0.91l-0.78,0.89l0.66,1.91l-0.54,0.61l0.12,0.23l-1.83,-0.23l-2.24,0.35l-0.48,0.4l0.13,0.72l1.32,0.17l-0.28,0.55l0.25,0.62l-0.42,0.55l-0.95,0.33l-0.38,1.71l-0.49,0.52l-0.55,0.2l-5.24,-0.78l-1.43,0.63l-0.99,0.99l-0.57,1.96l0.25,0.69l2.09,0.69l0.1,0.82l0.46,0.48l2.06,0.03l0.94,0.36l-0.68,2.1l0.3,1.76l1.99,2.53l-0.76,1.55l-2.87,3.49l-0.41,0.88l-0.12,2.0l-1.76,-0.47l-1.47,0.47l-0.7,-0.17l-1.07,-0.89l-1.91,-0.32l-1.89,0.16l0.06,-3.23l0.78,-1.43l-0.54,-0.95l-1.52,-0.43l-3.17,-1.69l-0.85,-0.21l-1.77,0.28l-7.35,-4.47l-2.31,-1.91l-1.29,0.09l-2.83,-1.72l-1.93,-1.9l-7.31,-4.97l-0.51,-0.65l-0.49,-2.55l-0.61,-1.3l-0.87,-0.74l-0.64,-1.16l-1.1,-3.16l-1.28,-1.31l-2.48,-1.06l-1.9,0.77l-2.81,-0.53l-2.94,0.25l-2.59,-1.5l0.47,-1.53l-0.46,-1.25l0.64,-0.07l0.29,-0.56l-0.78,-1.1l-1.03,-0.46l0.27,-2.1l-1.15,-0.98l-3.9,-0.33l-1.34,-1.62l-2.16,-0.49l-2.12,-1.93l-0.62,0.13l-0.54,0.81l-1.74,-0.18l-0.89,0.6l-0.12,0.44l1.2,1.15l-1.99,-0.33l-0.69,0.68l-0.89,1.97l-1.02,0.19l-0.54,-0.82l-1.18,-0.67l-1.43,0.42l-1.4,3.21l-0.97,1.06l0.41,3.65l0.6,0.81ZM339.66,146.55l0.91,0.56l0.05,0.74l-0.49,-0.01l0.12,-0.53l-0.59,-0.76Z\",\n            name: \"Uzbekistan\"\n          },\n          MM: {\n            path: \"M501.87,308.34l-2.26,-2.73l-1.05,-3.71l0.63,-0.77l1.51,1.13l0.9,0.03l0.33,-0.59l-0.38,-5.03l0.64,-0.95l0.86,0.88l1.08,0.06l0.8,-1.56l0.88,-0.54l0.09,-1.09l-0.62,-2.76l0.58,-1.39l-0.03,-0.73l0.87,-0.01l0.58,-0.69l0.33,-2.1l0.18,-2.73l-0.73,-2.47l0.78,0.52l1.48,-0.24l3.04,1.06l0.73,-0.28l1.24,-3.53l2.17,-3.53l0.94,-2.27l-0.28,-1.07l-0.85,-0.49l0.17,-0.6l0.54,-0.94l0.93,-0.53l1.22,-1.47l0.58,-1.77l0.83,-0.97l-0.54,-2.69l0.49,-1.72l2.44,-1.24l3.25,-2.3l1.21,-1.39l0.86,-0.31l3.81,-0.56l1.57,1.55l1.42,0.2l0.31,-0.38l-0.06,-0.62l-1.47,-2.17l-0.16,-0.97l0.5,-0.65l2.83,-1.98l-0.02,-2.36l1.48,-2.18l0.46,0.06l0.7,1.04l1.0,0.12l1.42,1.56l1.51,4.79l0.65,0.32l0.41,-0.14l0.5,-0.79l1.08,0.52l0.63,6.78l-0.41,4.04l-0.56,0.28l-0.34,0.65l0.68,1.61l-1.38,0.54l-0.91,1.5l-0.85,-0.14l-0.57,0.27l-1.0,2.23l-1.52,0.44l-0.83,1.9l0.14,1.26l-1.1,0.7l-0.4,1.14l-0.01,1.25l1.02,1.05l0.29,1.08l-0.09,0.56l-0.85,1.05l-0.12,0.85l0.97,0.6l2.95,-1.43l1.39,-0.34l2.03,-0.04l0.79,0.35l0.91,-0.25l-0.5,0.55l-0.18,1.14l1.11,1.71l-0.19,1.0l0.59,1.0l-0.14,1.34l0.27,0.45l3.62,0.77l0.88,0.49l-0.78,1.01l-0.41,1.19l-0.02,1.49l-1.22,2.41l0.2,0.88l5.52,0.9l0.07,1.97l0.5,0.62l0.65,0.23l0.22,1.16l0.92,0.49l1.14,-0.27l1.21,0.31l0.84,-0.13l1.79,-1.47l1.57,-0.69l0.12,0.86l-0.39,0.69l-2.43,1.24l-0.4,0.48l-0.39,1.03l-0.95,1.18l0.11,1.06l-1.42,0.17l-0.71,0.59l-0.99,2.9l-1.37,-0.61l-1.41,0.77l-2.17,-0.17l-0.16,0.52l0.31,1.19l-0.81,0.38l-1.0,-0.28l-1.17,0.21l-0.5,0.57l-0.59,1.91l-3.95,0.64l-0.85,-0.01l-1.03,-0.56l-0.98,0.16l-0.33,0.86l-1.35,1.68l-0.11,2.5l-0.72,1.6l0.34,2.47l-1.49,0.55l-0.93,-0.17l-0.39,0.51l0.69,1.42l0.55,0.49l0.63,0.07l0.73,1.76l0.01,2.02l5.42,6.28l0.27,1.82l1.46,3.22l0.73,0.21l0.84,-0.59l-0.39,0.92l-1.82,1.25l-0.22,5.02l-0.66,0.03l-2.01,1.22l-0.22,0.78l0.18,1.31l0.4,1.41l2.42,3.46l2.76,2.42l1.43,2.38l0.28,3.46l-0.48,0.95l0.1,0.8l0.73,2.25l1.35,1.44l0.46,2.72l1.12,3.05l-0.96,1.03l-2.14,3.82l-3.26,3.39l0.03,1.89l-0.44,1.56l-0.67,0.72l0.06,-1.69l-0.4,-2.26l1.49,-2.26l0.57,-2.2l-0.01,-2.49l0.82,-0.74l-0.02,-0.69l-0.92,-0.45l-0.71,0.36l0.44,-1.37l0.03,-1.9l-0.53,-0.52l0.37,-0.74l-0.31,-0.53l0.25,-1.66l-0.66,-3.84l-1.23,-2.64l-1.24,-1.8l-0.14,-1.67l-0.29,-0.35l-0.7,0.2l-0.05,0.34l0.04,-1.87l-0.73,-1.27l-0.52,-1.99l0.6,-0.05l0.02,-0.49l-1.47,-1.44l-0.76,-7.75l-0.91,-1.16l0.39,-1.7l-0.05,-1.47l0.64,-1.12l-0.47,-0.2l-2.21,0.33l-1.14,-2.55l-0.24,-1.78l-1.72,-1.71l-0.89,-0.65l-0.49,0.01l-0.12,0.47l0.32,0.63l-0.34,0.87l0.38,1.18l-0.96,2.24l-0.99,1.04l-1.18,0.38l-0.79,-0.51l-0.41,-1.44l-0.79,-0.04l-0.23,0.5l0.87,2.31l-1.72,0.47l-0.36,0.71l-1.73,0.6l-0.85,1.65l-1.91,1.73l-0.12,-0.68l0.43,-0.98l-0.13,-0.86l-0.39,-0.34l-1.43,2.06l-1.33,0.03l-0.25,-2.39l-0.34,-0.35l-0.43,0.25l-0.35,1.13l-0.66,0.53l0.47,-3.19l-0.13,-0.93l-0.38,-0.31l-0.4,0.29l-0.28,1.27l-1.6,1.76l-0.96,0.53l0.36,-3.3l0.61,-0.99l0.91,-3.82l0.66,-1.3l0.21,-2.27l-0.71,-2.01l-0.47,-2.85l-1.68,-3.76l0.29,-0.25l-0.15,-0.42l-1.16,-0.97l-0.18,-2.93l-0.62,-0.3l0.17,-1.18l-1.22,-0.77l-0.64,-1.12l-0.81,-0.55l0.51,-0.72l-0.32,-0.65l-0.8,0.02l-1.26,-0.97l-1.31,-0.28l-0.87,0.25l-0.16,0.86l-0.41,-0.72l0.51,-0.56l-0.36,-0.73l0.26,-0.99l-0.35,-0.61l-0.66,0.19l-0.12,0.44l-0.32,0.57l-0.2,-1.16l-1.2,-1.37l-0.61,0.47l0.15,0.71ZM511.54,317.64l-0.59,1.02l0.13,1.32l-1.21,-0.74l-1.27,-2.11l0.87,0.82l0.88,0.31l1.18,-0.61ZM503.54,309.93l-0.24,0.32l-0.03,-0.02l0.15,-0.21l0.13,-0.09ZM545.29,376.32l-0.21,-0.96l0.34,-0.03l-0.06,1.01l-0.07,-0.02ZM544.52,369.1l0.3,0.29l-0.24,0.63l0.04,-0.45l-0.1,-0.47ZM538.23,340.2l-0.05,-0.68l0.11,-0.08l0.04,0.12l-0.1,0.65ZM509.61,315.91l1.12,0.49l0.2,0.28l-0.64,0.23l-0.68,-1.0ZM509.32,321.7l-0.47,-0.39l-0.2,-0.27l0.82,0.06l-0.15,0.6Z\",\n            name: \"Myanmar\"\n          },\n          SG: {\n            path: \"M585.95,453.53l-0.64,0.28l-0.67,-0.24l0.65,-0.28l0.66,0.24Z\",\n            name: \"Singapore\"\n          },\n          KH: {\n            path: \"M574.51,361.92l1.66,-0.41l0.12,-0.61l3.37,-4.31l3.71,-1.2l3.21,0.46l5.93,-0.52l1.08,0.34l0.57,1.07l0.57,0.1l0.63,-0.48l1.18,1.3l1.61,-0.24l1.3,0.45l1.26,1.22l1.44,0.1l0.37,-0.24l0.45,-1.27l-0.97,-1.85l1.11,-0.15l0.48,-0.66l0.95,0.03l0.88,-0.67l2.44,1.8l2.36,-0.87l1.16,-1.19l0.89,0.17l-0.8,1.05l-0.24,1.95l2.04,5.15l-0.97,3.16l0.51,2.51l-0.03,1.91l-0.66,0.91l-0.49,-0.33l-1.01,0.13l-2.18,1.73l-1.13,0.17l-0.63,0.58l-2.02,0.22l-0.32,0.43l-0.03,1.57l-2.6,-0.56l-1.56,1.19l0.08,2.96l2.22,1.94l-0.12,1.13l-0.94,-0.53l-0.65,0.09l-0.64,-0.81l-0.81,-0.16l-2.31,0.37l-0.59,0.64l-2.19,-0.27l-0.28,0.53l0.26,1.06l-1.38,1.2l-1.93,0.08l-0.92,0.75l-1.07,-0.86l-2.44,-0.4l-0.61,-0.53l-1.67,1.04l-0.56,-0.58l1.05,-0.75l0.31,-1.0l-0.63,-1.7l-0.96,-0.7l-0.49,0.05l-1.25,1.62l-1.01,0.05l-0.36,-1.87l0.15,-2.16l-0.77,-0.87l-0.14,-1.03l-0.42,-0.48l-0.35,0.04l-1.16,-2.31l-0.2,-1.12l0.28,-1.55l-1.85,-1.81l-0.28,-2.48l-0.98,-2.09l-0.07,-1.62Z\",\n            name: \"Cambodia\"\n          },\n          CY: {\n            path: \"M52.44,189.37l1.85,0.77l2.04,-0.71l1.37,0.09l0.52,1.29l1.4,-0.11l-1.77,1.53l-2.23,0.47l-0.92,0.87l-0.57,-0.55l-1.44,0.04l-1.81,-0.89l-0.72,-1.76l2.3,-1.04ZM61.14,190.36l0.36,-0.24l0.39,0.2l-0.02,0.0l-0.74,0.04Z\",\n            name: \"Cyprus\"\n          },\n          QA: {\n            path: \"M191.62,275.3l-1.7,0.32l-0.94,-0.72l-0.29,-0.65l0.27,-0.89l-0.68,-3.97l1.8,-4.45l1.49,-1.1l1.85,1.74l0.16,0.7l-0.61,2.21l0.9,3.61l-1.28,2.84l-0.98,0.35Z\",\n            name: \"Qatar\"\n          },\n          KR: {\n            path: \"M753.99,193.32l1.41,0.11l0.77,-1.18l-0.16,-0.67l-1.06,0.07l-0.87,-2.37l1.33,-2.74l0.95,-0.67l-0.16,-0.61l-0.43,-0.18l1.23,-0.79l0.46,-1.12l-0.69,-0.79l0.15,-0.9l-1.0,-1.05l0.03,-2.59l-0.46,-1.89l-0.52,-0.32l-0.69,0.31l-1.16,-0.29l-0.06,-0.26l0.32,-0.64l1.87,-1.06l1.8,0.49l0.69,1.02l0.63,-0.26l0.75,-0.88l-0.05,-0.43l-0.86,-0.41l-0.49,-0.88l-0.24,-0.71l0.21,-1.04l-0.97,-1.25l-0.02,-0.95l-0.61,-1.14l0.73,-0.78l0.02,-0.84l2.94,-3.01l7.06,-0.2l1.16,-0.57l1.11,-1.88l1.63,3.45l3.24,4.33l2.09,3.42l0.59,1.76l0.4,2.63l-0.59,3.62l0.08,2.32l0.41,0.65l0.8,-0.05l-1.07,3.98l-1.43,2.52l-1.54,0.6l-3.68,0.07l-0.8,0.84l0.15,1.0l-1.97,-0.42l-0.36,-0.62l-0.82,-0.17l-2.72,1.01l-0.15,0.64l0.66,0.86l-0.22,0.18l-0.9,-1.18l-1.06,0.16l-0.38,0.99l0.54,1.03l-0.65,0.91l-0.63,-0.39l0.57,-0.75l0.01,-0.74l-0.76,-0.42l-1.62,1.25l-0.93,1.29l-0.72,-0.54l-0.43,0.06l-1.2,1.11l-0.35,-0.97l-1.31,-1.11ZM771.49,190.93l0.08,1.06l-0.29,0.22l-0.66,-0.49l0.86,-0.78ZM765.7,192.18l0.1,-0.56l0.61,0.23l0.08,0.65l-0.79,-0.32ZM753.88,205.05l-0.4,0.13l-0.34,-0.44l1.03,-0.9l2.57,-0.72l1.17,0.22l-0.17,0.82l-1.1,0.52l-2.75,0.38ZM754.66,166.8l0.29,0.31l-0.02,0.58l-0.05,-0.07l-0.22,-0.82ZM752.75,195.37l0.75,-0.75l0.33,0.12l-0.79,0.68l-0.29,-0.06Z\",\n            name: \"Korea\"\n          },\n          KP: {\n            path: \"M739.6,147.16l0.14,-0.66l3.53,-2.94l0.73,-0.05l0.7,-0.77l2.64,-1.04l1.79,-1.14l0.46,-0.63l2.08,-0.45l3.82,-4.13l0.8,-2.45l0.81,-0.6l1.35,-0.45l1.79,2.16l2.94,0.69l2.65,-0.05l1.43,0.64l0.6,-0.11l1.12,-1.65l0.03,-0.6l-1.93,-3.06l6.28,-0.39l2.31,-1.74l0.26,-0.98l0.6,-0.76l0.46,-0.12l0.94,0.46l1.56,-0.74l1.33,-4.79l1.16,0.23l0.9,0.63l0.05,1.25l0.9,1.09l1.06,0.61l1.01,1.58l0.03,0.25l-1.33,-0.07l-1.59,1.03l-0.54,0.84l-1.29,0.97l-1.02,1.7l-0.93,0.9l-0.57,1.22l-0.03,0.9l0.62,1.68l-0.39,1.55l0.05,2.17l-2.69,1.16l-1.75,2.08l-2.92,1.48l-1.5,1.69l-1.47,0.78l-2.52,0.37l-0.87,0.93l-2.36,1.18l-0.33,0.96l0.16,1.96l-0.92,0.66l-0.24,1.65l3.07,1.36l1.43,1.65l2.59,1.82l-0.83,1.83l-0.7,0.63l-7.56,0.36l-0.78,0.49l-2.53,2.77l-0.15,0.99l-1.95,-0.73l-1.25,0.43l-0.37,0.46l-0.62,-0.84l-0.69,-0.03l-1.57,-0.95l-0.56,0.2l-1.0,1.37l-0.98,0.69l-0.68,-1.04l-1.65,-0.42l1.24,-0.68l0.08,-0.69l-0.74,-0.38l-2.63,-0.13l0.57,-0.37l0.23,-1.18l1.23,-1.65l1.71,-0.89l1.78,-0.17l0.16,-0.72l-1.08,-0.59l-0.97,0.01l-0.74,-0.65l1.87,-3.69l-0.37,-2.17l-0.26,-0.33l-1.97,-0.58l-2.32,-1.41l-0.69,0.12l-0.28,0.95l-0.54,-1.23l-1.46,-0.96l0.07,-0.75Z\",\n            name: \"Dem. Rep. Korea\"\n          },\n          KW: {\n            path: \"M167.69,235.06l-0.94,-0.06l-1.81,1.62l-0.16,0.46l0.3,0.43l2.23,0.19l0.93,2.92l1.65,3.04l-4.92,0.07l-1.91,-3.71l-5.99,-0.78l2.32,-3.08l1.56,-3.47l0.65,-0.51l3.13,-0.41l1.92,0.77l1.03,2.52ZM168.51,233.33l0.2,-0.32l0.75,1.05l-0.02,0.41l-0.58,0.53l-0.55,-1.16l0.2,-0.51Z\",\n            name: \"Kuwait\"\n          },\n          KZ: {\n            path: \"M172.6,48.91l0.9,0.03l3.88,-2.48l1.29,-2.26l2.33,-0.47l3.78,-1.94l3.63,-3.95l2.37,0.74l0.63,0.42l0.18,0.79l0.68,0.55l2.22,-0.14l2.95,-1.86l1.41,-0.32l0.62,0.21l1.14,1.57l0.7,0.43l1.96,-0.09l1.71,0.31l2.14,-0.2l1.31,0.73l1.23,1.52l2.02,0.91l1.27,1.11l2.02,2.46l0.45,2.04l0.86,0.61l0.55,-0.18l0.52,-0.7l0.01,-2.02l-0.64,-1.53l0.32,-0.24l2.51,1.3l2.63,2.04l2.58,0.87l1.09,-0.23l1.92,-1.12l0.81,-1.36l2.35,-1.56l1.04,0.32l2.77,-0.8l1.08,0.25l2.19,1.49l1.71,-0.39l1.32,-1.6l3.67,0.24l1.29,0.84l2.53,2.74l4.39,0.81l0.18,0.98l0.58,0.27l2.31,-0.95l1.57,-2.53l1.48,1.33l1.19,0.33l1.74,0.16l2.36,-0.33l2.13,-0.78l1.45,-1.06l1.44,-3.61l-0.18,-1.24l-1.75,-1.46l-2.4,-0.46l-0.47,-0.47l-3.68,-1.1l-0.59,-1.19l-2.45,-1.29l2.68,-1.56l1.87,-0.28l2.52,-1.96l-0.1,-1.05l-1.45,-2.62l1.84,-2.62l2.4,-0.21l4.25,0.52l1.19,-0.76l0.08,-0.8l-0.76,-0.88l-2.56,-1.18l-3.42,-0.64l0.2,-0.91l1.93,-0.37l0.51,-0.66l-0.13,-0.57l-0.65,-0.52l-1.74,0.28l-1.53,-0.53l0.84,-0.91l0.25,-2.16l0.51,-0.45l0.58,-0.23l4.51,1.03l0.91,-0.57l3.3,-0.1l1.14,-0.59l3.19,-0.36l0.96,-0.67l3.77,-0.75l1.12,0.06l2.66,-1.15l1.79,-0.35l1.52,0.31l1.98,-0.42l1.43,0.51l0.73,-0.49l0.53,-1.42l1.64,-0.98l1.56,0.04l1.46,-0.68l0.42,0.25l2.01,-0.08l4.05,-0.74l7.0,-1.39l1.13,-0.75l2.4,-0.34l0.91,-0.99l-0.15,-1.07l1.96,-0.31l1.56,-1.14l1.81,-0.78l3.75,0.33l5.15,2.03l1.1,-0.26l1.4,-1.0l1.59,-0.2l1.09,1.6l2.0,5.33l-0.22,2.29l-0.68,0.98l0.51,1.11l1.97,0.57l4.11,-0.64l0.78,0.15l0.73,-0.32l0.6,-0.87l1.2,1.76l0.14,1.58l0.48,0.49l0.43,0.03l1.22,-0.77l-0.04,-1.15l1.95,0.25l1.45,1.23l1.06,0.33l1.3,-0.08l1.86,-1.02l-0.1,0.73l-1.95,1.12l-0.92,1.37l-0.1,1.36l0.6,1.33l0.56,0.4l0.83,-0.3l1.25,-1.06l1.43,-0.39l2.39,0.39l1.44,0.92l0.59,-0.38l0.33,-1.35l2.69,-1.72l1.54,0.01l1.42,-0.75l1.17,-0.78l0.38,-1.17l1.89,-0.27l4.3,-2.03l1.77,-0.27l1.82,-0.97l-0.98,2.17l-1.56,-0.06l-0.41,0.4l0.55,1.55l0.79,0.92l8.43,5.75l1.1,1.06l4.59,6.36l5.04,7.73l6.5,11.03l0.6,0.16l0.5,-0.35l0.09,-0.58l0.86,-0.62l1.5,-0.34l0.42,-0.72l-0.09,-1.71l1.85,-0.96l0.89,0.1l0.79,0.91l0.93,0.01l-0.46,1.28l0.16,0.85l0.65,0.27l1.62,-0.15l0.32,1.74l0.56,0.45l3.42,-0.26l1.35,0.54l3.1,-0.2l0.97,-0.49l0.98,-1.1l1.82,-0.04l1.15,-0.91l1.29,-0.05l2.57,1.01l1.58,1.03l1.67,2.39l0.61,2.25l0.59,0.64l2.26,0.45l1.67,1.05l0.97,0.21l0.07,1.51l1.98,2.96l5.14,0.63l0.59,0.53l1.47,0.0l3.64,-2.68l-0.67,0.96l0.01,0.79l1.47,0.91l1.45,1.98l2.0,1.07l-2.66,0.15l-1.2,0.9l-0.36,3.14l-1.13,1.45l-6.08,1.5l-0.96,1.82l-0.76,2.8l0.45,4.09l0.61,1.53l-0.07,0.57l-1.1,1.62l-1.93,0.31l-2.97,1.82l-0.39,-0.9l-0.63,-0.4l-2.48,-0.23l-2.39,0.24l-2.17,-0.46l-4.68,-1.78l-0.74,0.25l-0.61,2.3l-3.13,7.56l-1.83,5.41l0.31,1.09l1.95,0.76l0.03,0.93l-0.52,1.22l-1.62,-0.86l-2.46,0.52l-0.88,-0.45l-0.34,-0.87l-0.92,-0.39l-6.12,1.99l-1.69,0.04l-4.31,1.11l-1.6,1.24l0.06,0.82l0.97,0.62l2.04,-0.05l1.07,0.43l-0.38,0.34l-0.41,2.18l0.14,3.17l2.24,5.03l0.35,1.1l-0.24,1.1l0.87,1.41l-1.02,-0.13l-1.69,0.77l-0.34,0.96l0.72,0.7l-1.42,0.56l-0.57,0.78l-0.33,1.2l0.71,3.27l-2.01,-1.79l-3.53,-0.57l-2.33,-2.68l-1.92,-0.03l-2.75,-0.82l-3.74,0.06l-5.84,-0.49l-1.92,-0.56l-3.62,0.5l-5.04,-0.17l-0.64,0.18l-0.91,0.93l-1.89,-0.19l-4.02,-1.25l-4.54,-2.38l-0.73,0.39l-1.36,-0.01l-3.25,1.86l-1.12,3.91l0.33,1.19l-0.86,-0.69l-3.16,-0.51l-0.81,-0.69l-3.56,-1.08l-3.49,-0.6l-2.34,0.48l-0.84,-0.12l-1.24,0.45l-1.88,1.87l-1.05,1.86l0.09,0.95l-1.3,0.47l-0.89,1.12l-0.6,-0.38l-0.76,0.09l-2.43,2.34l-3.9,1.67l-1.56,1.26l-2.24,1.13l-0.61,1.47l-1.85,1.44l-1.2,1.53l-0.29,1.22l0.32,0.85l-0.38,0.14l-1.35,-0.38l-1.57,-1.14l0.45,-1.71l-1.39,-1.84l-9.18,0.12l-1.51,-7.1l-0.39,-0.35l-3.27,-0.08l0.67,-8.49l-0.57,-0.39l-1.9,0.88l-2.11,-3.62l-1.8,-1.1l-2.72,-2.7l-1.13,0.14l-2.67,1.26l-9.15,-0.69l-8.97,1.25l-6.08,-6.05l-1.18,-2.1l-7.01,-4.12l0.16,-4.09l-0.32,-2.03l-0.55,-0.81l-1.7,-0.05l0.79,-2.36l4.16,0.6l3.04,-2.59l2.71,-1.03l0.78,-1.31l0.09,-0.76l-0.31,-0.59l-3.08,-0.71l-0.31,-1.74l-0.64,-0.6l-0.91,-0.15l-0.5,0.03l-0.32,0.58l1.13,0.99l-0.33,0.23l-1.16,-0.19l-0.4,0.28l-0.45,-0.86l-0.82,-0.28l-1.65,0.88l-0.66,1.3l0.28,0.84l0.66,0.56l2.26,-0.05l1.37,0.79l1.08,-0.56l0.53,1.15l-0.81,0.93l-4.22,-0.5l-1.77,0.48l-0.37,-2.0l-2.18,-0.48l-0.35,0.74l1.13,1.75l0.17,0.88l-0.58,1.96l-0.93,0.41l-0.51,-0.21l-0.53,0.4l-0.13,-0.6l0.7,-1.38l-0.33,-0.61l-0.63,-0.13l-0.95,0.42l-1.25,-0.14l-2.13,1.31l-0.9,2.61l-19.46,5.2l-0.29,0.39l0.01,32.99l-2.83,0.53l-0.57,-0.2l-1.35,-1.41l-2.96,-4.54l-1.41,-1.09l-4.37,-2.37l-3.36,0.36l-4.75,1.36l-1.5,0.85l-2.33,2.04l-0.09,-2.01l1.15,-2.89l0.17,-1.24l-0.41,-2.16l-0.95,-0.67l-1.69,0.1l-0.71,-0.56l-1.98,0.04l-2.08,-2.59l-2.26,-0.17l0.03,-2.63l-1.79,-2.47l-1.73,-4.01l-1.3,-0.88l-2.65,-0.56l-0.35,-0.85l0.23,-0.83l0.64,-0.3l3.16,-0.04l2.45,1.17l3.15,-0.49l-0.43,-0.87l-1.43,-0.45l-2.03,-1.99l0.08,-0.75l1.54,-1.3l1.11,-2.04l0.9,0.09l1.37,-0.5l5.13,-0.05l3.59,0.79l2.3,-0.12l0.16,-0.7l-2.99,-1.97l1.93,-3.52l0.7,-2.09l-0.18,-2.25l-0.32,-0.62l0.75,-1.88l-0.81,-1.87l-1.25,-1.02l-3.38,-0.4l-2.67,1.51l-1.0,-0.67l-1.73,-0.26l-1.03,-0.92l-3.56,-0.77l-2.01,0.69l-2.49,1.47l-1.33,0.11l-3.84,2.59l-4.01,0.71l-0.31,0.81l-0.94,0.66l-4.0,-1.89l-0.55,-0.56l0.02,-0.42l0.32,-0.14l1.13,0.48l1.1,0.05l0.75,-0.51l0.02,-0.71l-3.06,-5.19l-2.97,-3.78l-0.64,-0.44l-4.69,-0.56l-1.42,0.55l-1.14,-1.56l0.18,-1.65l-0.51,-1.3l-0.62,-0.61l-2.35,-1.11l-0.32,-1.28l0.65,-2.06l1.91,-2.2l0.57,-1.21l-0.2,-0.85l-1.49,-1.44l0.62,-2.97l0.71,-1.41l2.29,-2.06l0.24,-2.1l1.15,-1.1l1.13,0.2l3.84,4.33l0.94,0.79l1.03,0.29l2.46,-0.98l0.83,-1.02l-1.33,-5.63ZM248.32,97.54l1.41,-1.65l0.64,-0.08l0.28,-0.6l1.51,1.9l0.45,2.98l-4.3,-2.54ZM201.9,97.61l0.06,0.13l-0.08,-0.1l0.02,-0.02Z\",\n            name: \"Kazakhstan\"\n          },\n          SA: {\n            path: \"M67.56,247.08l1.06,-2.61l1.21,-6.57l8.14,1.18l3.22,-2.48l1.76,-2.79l5.69,-1.31l1.39,-2.79l2.37,-1.31l0.11,-0.62l-7.19,-7.71l14.36,-3.99l1.39,-1.04l8.92,1.5l12.67,7.05l19.68,15.46l12.58,1.15l1.36,-0.26l6.48,0.83l0.99,2.68l0.74,0.93l5.85,0.06l1.24,3.08l1.36,1.9l0.02,1.54l0.92,0.84l1.96,0.85l-0.09,0.58l1.74,2.09l1.07,0.33l1.25,1.48l2.47,1.51l-0.38,0.48l0.15,1.27l1.23,1.15l0.15,0.54l-0.3,1.16l-0.68,-0.02l-0.35,0.56l1.61,4.02l1.62,1.6l0.79,2.71l2.88,4.0l1.44,0.3l1.24,-0.31l0.58,0.29l-0.56,1.24l0.27,0.54l1.64,0.42l0.26,1.52l7.21,9.07l19.35,2.6l0.62,-0.35l3.01,4.88l-4.85,15.33l-22.24,7.7l-22.07,3.25l-6.65,3.39l-4.44,5.48l-1.05,2.59l-1.98,1.12l-0.97,-0.04l-2.04,-2.41l-3.15,0.26l-5.76,-0.54l-2.94,-0.97l-7.47,0.22l-1.72,0.54l-1.36,-0.25l-1.4,-1.05l-1.17,-0.12l-1.94,1.53l0.2,0.75l-0.46,0.41l-0.3,2.08l0.52,1.22l-0.09,0.47l-2.09,2.0l-0.74,-2.32l-2.34,-2.97l-0.72,-2.45l-4.07,-3.48l-1.74,-2.75l-0.63,-1.61l-1.43,-1.65l-0.88,-3.14l-2.67,-5.22l-1.18,-0.68l-1.03,-1.34l-3.01,-2.12l-1.56,-0.27l-1.05,-0.68l-3.32,-4.48l-1.26,-2.42l0.36,-1.64l-1.18,-2.86l0.78,-3.89l-0.25,-1.73l-0.41,-1.31l-0.77,-0.8l0.17,-0.38l-1.0,-1.2l-0.69,-2.03l-1.87,-3.31l-1.37,-1.63l-2.72,-2.14l-0.88,-0.15l-0.94,-0.69l-1.05,-0.1l-2.46,-3.84l0.54,-1.19l-0.93,-2.77l-1.71,-2.8l-1.2,-0.94l-0.59,-2.11l-1.27,-0.76l-1.95,-3.81l-3.0,-3.86l-0.72,-1.58l-1.32,-1.36l-1.19,-2.44l-1.82,-2.44l-1.05,-0.58l-2.95,-0.27ZM121.15,336.6l0.4,-0.33l0.04,0.83l-0.42,-0.42l-0.03,-0.07Z\",\n            name: \"Saudi Arabia\"\n          },\n          MY: {\n            path: \"M641.05,446.05l0.71,0.36l0.8,-0.15l0.31,-0.63l-0.05,-1.52l1.13,-1.14l8.26,-1.87l2.45,-1.08l3.07,-4.07l3.61,-3.82l0.56,-2.37l1.04,0.65l0.74,1.61l0.77,0.18l1.45,1.69l0.83,-0.12l1.04,-1.16l0.49,-1.72l-0.65,-2.41l1.27,-0.83l0.6,3.28l1.34,0.6l0.79,-0.16l0.23,-0.69l-1.05,-3.38l1.72,-0.53l1.0,-0.99l0.28,-0.89l-0.2,-0.46l-0.76,-0.4l-0.24,-0.75l0.85,-0.95l1.6,0.28l0.86,-0.69l1.46,-2.15l0.59,-1.82l2.63,-2.91l1.82,-3.25l0.07,1.03l-0.4,1.27l0.42,0.49l1.23,-0.56l1.41,-2.12l0.39,0.11l0.49,1.95l2.54,1.44l0.3,1.12l-0.58,0.84l0.21,1.26l-1.06,1.1l0.45,0.27l2.37,-0.42l1.26,-0.69l0.4,0.75l-1.28,0.7l0.39,0.84l0.8,0.12l1.71,-0.81l0.54,0.09l1.09,0.52l0.73,1.09l2.73,1.23l1.7,0.01l0.25,0.23l-0.17,1.1l-2.14,0.94l-1.73,0.42l-2.17,-0.4l-1.23,0.45l-0.5,1.64l1.11,1.27l1.74,1.22l-0.31,0.37l-3.61,0.82l-2.24,-0.68l-0.65,0.38l-0.47,0.91l-1.98,-0.95l-1.4,-0.29l-4.28,-0.24l-0.9,0.41l-1.26,-0.36l-1.67,0.49l-0.93,-0.39l-0.65,0.17l-1.34,1.23l-0.86,2.06l-0.01,3.59l-0.75,2.89l-1.52,0.08l-1.28,1.48l-0.09,1.78l0.74,0.64l-2.9,2.03l-0.23,0.94l0.5,1.26l-0.87,0.78l-1.12,2.74l-1.0,-0.3l-3.61,0.49l-1.97,1.43l-0.64,-0.42l-3.69,-1.0l-0.07,-0.54l-0.57,-0.44l-3.66,0.03l-2.38,0.96l-0.86,2.2l-1.16,0.28l-0.79,0.7l-2.19,0.08l-3.0,-0.4l-4.31,1.39l-5.53,-4.81l-0.52,-0.59l-0.12,-1.09l-0.67,-0.63l0.15,-0.41l0.53,0.81l2.05,1.09l2.87,0.04l2.35,1.25l1.7,0.14l1.46,0.96l1.09,0.05l0.35,-0.32l-0.2,-0.43l-1.23,-0.89l0.83,-1.07l0.2,-1.39l0.73,-1.77l-0.46,-0.71l0.0,-1.02ZM684.91,409.61l0.41,-0.56l0.41,-0.05l-0.11,0.45l-0.71,0.16ZM560.8,415.59l1.25,-0.03l0.88,1.55l1.37,0.16l0.1,1.64l-0.72,1.49l1.08,1.33l0.76,0.04l0.91,-1.13l1.92,-0.77l0.73,0.88l1.24,0.0l0.78,-0.51l0.47,-1.13l0.82,-0.81l0.26,-0.92l1.31,0.38l1.47,2.32l4.16,3.36l2.32,4.07l0.27,1.27l0.11,2.01l-0.8,4.74l0.67,1.89l-0.05,4.51l0.79,1.27l2.02,1.44l3.01,6.32l0.41,2.01l-0.51,-0.09l-0.34,-0.92l-1.12,-0.76l-0.17,1.27l-1.91,0.01l-1.28,0.88l-0.97,-1.56l-4.68,-2.31l-1.38,-1.41l-2.98,-1.53l-2.64,-2.36l-2.02,-0.89l-1.43,-1.29l0.34,-0.91l-0.49,-2.0l-4.16,-5.01l0.43,-0.68l-1.32,-2.52l-0.02,-2.17l-1.05,-2.92l-0.88,-3.99l-0.08,-3.02l-1.65,-3.37l0.29,-1.42l0.84,0.97l1.64,0.62ZM558.59,423.72l0.04,-0.52l0.15,0.07l-0.19,0.45ZM554.87,416.01l0.61,-0.22l0.15,0.23l-0.64,0.21l-0.12,-0.22Z\",\n            name: \"Malaysia\"\n          },\n          YE: {\n            path: \"M210.22,368.93l3.31,-0.15l1.6,0.56l-2.1,0.96l-2.93,0.3l-0.74,-0.15l-1.64,-1.15l1.07,-0.91l1.43,0.54ZM128.17,348.79l0.44,-0.21l0.08,-0.52l-0.6,-2.52l0.88,-2.78l-0.26,-2.55l2.7,-2.53l0.16,-1.06l-0.5,-1.03l0.13,-1.2l0.71,-1.07l-0.29,-0.74l0.95,-0.8l1.11,-0.07l1.35,1.04l1.75,0.31l1.77,-0.56l7.3,-0.22l2.88,0.97l5.8,0.55l2.98,-0.27l1.72,2.26l1.74,0.18l2.31,-1.32l1.14,-2.71l4.35,-5.36l7.46,-3.52l20.53,-2.86l5.51,12.84l0.6,0.39l1.9,4.24l-3.44,1.26l-1.95,1.39l-0.81,1.14l-0.47,1.65l0.32,2.18l-4.38,2.32l-4.33,1.48l-3.64,0.78l-2.72,1.43l-1.96,0.18l-4.21,1.47l-2.35,1.44l-0.94,1.48l-1.79,1.54l-2.77,0.39l-2.36,-0.34l-2.76,1.51l-1.63,1.45l-4.57,1.47l-6.42,0.52l-2.01,0.43l-2.12,2.11l-1.79,0.61l-0.9,1.3l-1.82,0.34l-1.28,-0.34l-2.53,1.26l-1.88,0.27l-2.61,-1.01l-0.88,0.19l-0.1,-0.73l-1.76,-3.14l0.35,-3.27l-0.45,-1.43l-0.97,-1.04l0.01,-1.45l-1.28,-4.7l0.07,-0.99l-0.57,-1.41l-0.93,-0.61Z\",\n            name: \"Yemen\"\n          }\n        },\n        height: 555.5409752358405,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"brazil\", {\n        width: 22e4,\n        height: 194010,\n        paths: {\n          ro: {\n            name: \"RO\",\n            path: \"M39760.00 75303.00l129.00 -97.00 0.00 -129.00 -32.00 -32.00 32.00 -32.00 64.00 32.00 64.00 0.00 129.00 0.00 97.00 -64.00 64.00 -64.00 32.00 -97.00 289.00 -161.00 65.00 -64.00 96.00 32.00 32.00 -32.00 129.00 -32.00 64.00 -96.00 193.00 -33.00 0.00 -32.00 0.00 -64.00 32.00 -64.00 129.00 -97.00 129.00 -128.00 64.00 -129.00 161.00 -129.00 0.00 -225.00 -33.00 -96.00 -96.00 -65.00 0.00 -32.00 32.00 -32.00 161.00 64.00 32.00 0.00 64.00 -32.00 97.00 65.00 64.00 -65.00 32.00 32.00 0.00 65.00 32.00 0.00 97.00 0.00 32.00 -32.00 -32.00 -97.00 96.00 0.00 32.00 0.00 97.00 97.00 32.00 0.00 64.00 -33.00 65.00 0.00 161.00 65.00 64.00 -65.00 32.00 0.00 96.00 -64.00 33.00 0.00 32.00 0.00 96.00 32.00 193.00 0.00 64.00 -32.00 0.00 -32.00 33.00 0.00 160.00 0.00 65.00 32.00 96.00 0.00 0.00 64.00 64.00 33.00 33.00 32.00 96.00 64.00 32.00 97.00 32.00 64.00 97.00 32.00 64.00 0.00 97.00 96.00 32.00 0.00 32.00 33.00 0.00 96.00 32.00 0.00 64.00 -32.00 33.00 161.00 32.00 0.00 32.00 32.00 32.00 96.00 32.00 0.00 64.00 -64.00 33.00 -32.00 64.00 0.00 32.00 -64.00 32.00 0.00 64.00 32.00 33.00 0.00 128.00 -258.00 64.00 -32.00 33.00 -257.00 32.00 0.00 64.00 0.00 32.00 0.00 33.00 -64.00 32.00 -32.00 96.00 -33.00 97.00 -32.00 32.00 0.00 96.00 0.00 64.00 32.00 161.00 129.00 32.00 0.00 32.00 0.00 33.00 32.00 0.00 65.00 32.00 32.00 96.00 -32.00 32.00 -65.00 65.00 65.00 64.00 -33.00 32.00 33.00 0.00 -65.00 -64.00 -161.00 -32.00 -64.00 0.00 -32.00 32.00 -161.00 0.00 -128.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 129.00 64.00 96.00 64.00 32.00 0.00 32.00 -32.00 0.00 -32.00 129.00 0.00 32.00 -64.00 225.00 -129.00 65.00 -64.00 160.00 -64.00 33.00 0.00 160.00 96.00 0.00 32.00 0.00 32.00 0.00 33.00 0.00 64.00 97.00 161.00 -32.00 128.00 0.00 32.00 96.00 33.00 0.00 64.00 -64.00 96.00 0.00 65.00 32.00 0.00 32.00 0.00 96.00 32.00 65.00 64.00 128.00 -96.00 65.00 0.00 64.00 -33.00 -32.00 -64.00 32.00 -32.00 32.00 0.00 129.00 0.00 32.00 -32.00 0.00 -32.00 64.00 -65.00 -32.00 -96.00 32.00 0.00 32.00 -32.00 33.00 -32.00 64.00 0.00 -32.00 -65.00 64.00 -64.00 0.00 -64.00 64.00 -65.00 97.00 0.00 64.00 -64.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 33.00 -97.00 32.00 -64.00 32.00 -32.00 -32.00 -65.00 0.00 -32.00 -32.00 -64.00 0.00 -32.00 0.00 -129.00 -33.00 -32.00 0.00 -64.00 0.00 -32.00 33.00 -33.00 64.00 -225.00 0.00 -128.00 0.00 -32.00 64.00 32.00 32.00 -32.00 32.00 -65.00 97.00 -64.00 129.00 -97.00 128.00 -32.00 64.00 0.00 65.00 0.00 32.00 32.00 96.00 129.00 33.00 0.00 96.00 -32.00 129.00 -97.00 0.00 -32.00 64.00 0.00 32.00 32.00 64.00 97.00 65.00 -32.00 96.00 0.00 129.00 32.00 64.00 0.00 32.00 -32.00 65.00 -32.00 0.00 -65.00 32.00 0.00 64.00 -32.00 32.00 -32.00 64.00 0.00 193.00 32.00 129.00 -32.00 64.00 0.00 32.00 0.00 65.00 -32.00 128.00 -32.00 129.00 -65.00 257.00 -96.00 64.00 0.00 0.00 32.00 0.00 64.00 -64.00 161.00 0.00 32.00 64.00 32.00 65.00 0.00 161.00 -32.00 160.00 32.00 258.00 -160.00 128.00 0.00 32.00 -32.00 0.00 -65.00 -32.00 -225.00 0.00 -128.00 -32.00 -97.00 0.00 -32.00 0.00 -32.00 96.00 -97.00 33.00 -64.00 -65.00 -129.00 0.00 -160.00 65.00 -97.00 32.00 -32.00 64.00 32.00 64.00 0.00 97.00 -64.00 32.00 0.00 193.00 32.00 -32.00 -129.00 96.00 -128.00 -32.00 -32.00 32.00 -33.00 32.00 -64.00 0.00 -64.00 65.00 -32.00 32.00 -161.00 32.00 -32.00 32.00 0.00 32.00 32.00 0.00 32.00 65.00 64.00 32.00 0.00 96.00 -160.00 0.00 -65.00 -32.00 0.00 -64.00 -64.00 0.00 -96.00 -97.00 -97.00 -32.00 -96.00 0.00 -32.00 161.00 -129.00 0.00 -64.00 -64.00 -65.00 -129.00 -32.00 0.00 -64.00 161.00 -97.00 0.00 -289.00 64.00 -32.00 97.00 32.00 32.00 -32.00 64.00 -97.00 32.00 -64.00 65.00 0.00 32.00 0.00 96.00 32.00 97.00 32.00 160.00 129.00 32.00 0.00 33.00 -32.00 64.00 -97.00 0.00 -64.00 64.00 -96.00 129.00 -97.00 -129.00 -225.00 0.00 -32.00 97.00 -96.00 161.00 -97.00 96.00 -161.00 32.00 -32.00 32.00 -96.00 -32.00 -33.00 0.00 -64.00 97.00 -64.00 32.00 -97.00 64.00 -32.00 32.00 -64.00 -32.00 -64.00 32.00 -225.00 418.00 32.00 161.00 0.00 804.00 0.00 2186.00 0.00 64.00 64.00 33.00 0.00 32.00 32.00 32.00 0.00 64.00 97.00 32.00 64.00 129.00 0.00 193.00 96.00 96.00 97.00 65.00 64.00 96.00 64.00 0.00 33.00 64.00 64.00 -32.00 32.00 32.00 97.00 33.00 32.00 -33.00 64.00 -32.00 32.00 0.00 32.00 0.00 33.00 32.00 64.00 65.00 32.00 64.00 129.00 -32.00 32.00 32.00 32.00 193.00 96.00 32.00 65.00 32.00 32.00 32.00 -32.00 33.00 32.00 32.00 0.00 32.00 32.00 32.00 0.00 32.00 96.00 -32.00 65.00 32.00 0.00 0.00 64.00 32.00 64.00 -32.00 65.00 65.00 0.00 32.00 64.00 32.00 32.00 0.00 32.00 32.00 0.00 96.00 -96.00 65.00 -32.00 32.00 -65.00 32.00 0.00 32.00 -32.00 65.00 65.00 32.00 64.00 64.00 32.00 129.00 32.00 64.00 0.00 64.00 32.00 64.00 32.00 33.00 33.00 0.00 64.00 -33.00 64.00 -32.00 129.00 32.00 128.00 0.00 97.00 33.00 64.00 32.00 32.00 64.00 0.00 32.00 65.00 -32.00 96.00 64.00 64.00 -32.00 65.00 -64.00 96.00 0.00 32.00 32.00 32.00 225.00 161.00 32.00 0.00 33.00 -64.00 -97.00 -97.00 0.00 -64.00 32.00 -32.00 65.00 -32.00 32.00 -32.00 128.00 32.00 65.00 64.00 128.00 0.00 64.00 0.00 33.00 97.00 32.00 64.00 0.00 64.00 -97.00 0.00 -32.00 32.00 97.00 65.00 64.00 96.00 -32.00 64.00 32.00 65.00 64.00 32.00 32.00 32.00 -32.00 64.00 0.00 33.00 129.00 321.00 129.00 32.00 128.00 -64.00 97.00 0.00 96.00 0.00 64.00 128.00 65.00 33.00 64.00 96.00 0.00 97.00 32.00 32.00 32.00 -32.00 193.00 64.00 65.00 -32.00 96.00 0.00 0.00 -65.00 96.00 0.00 97.00 -64.00 0.00 -96.00 0.00 -33.00 32.00 -32.00 -32.00 -64.00 32.00 -64.00 64.00 -65.00 0.00 -160.00 32.00 -65.00 33.00 0.00 96.00 65.00 96.00 0.00 65.00 32.00 64.00 -64.00 0.00 -33.00 64.00 -32.00 0.00 -32.00 33.00 -32.00 -33.00 -32.00 33.00 -65.00 64.00 0.00 64.00 -32.00 32.00 97.00 33.00 32.00 128.00 -32.00 97.00 32.00 32.00 32.00 64.00 32.00 32.00 32.00 -32.00 97.00 32.00 32.00 97.00 193.00 64.00 0.00 32.00 0.00 32.00 32.00 32.00 0.00 129.00 64.00 32.00 0.00 65.00 0.00 0.00 32.00 0.00 33.00 32.00 32.00 32.00 128.00 96.00 97.00 32.00 96.00 65.00 65.00 -97.00 128.00 -32.00 32.00 -128.00 258.00 -33.00 96.00 0.00 97.00 -64.00 64.00 0.00 64.00 -32.00 0.00 -32.00 97.00 0.00 64.00 0.00 64.00 0.00 65.00 64.00 96.00 32.00 32.00 32.00 97.00 33.00 32.00 0.00 64.00 0.00 32.00 -33.00 161.00 33.00 64.00 -33.00 33.00 -32.00 -33.00 -96.00 -32.00 -97.00 0.00 -64.00 32.00 -32.00 65.00 -161.00 0.00 0.00 32.00 0.00 64.00 32.00 32.00 64.00 -32.00 0.00 32.00 -32.00 97.00 32.00 64.00 -32.00 32.00 -32.00 64.00 0.00 33.00 0.00 96.00 64.00 -32.00 0.00 32.00 65.00 32.00 96.00 0.00 65.00 65.00 64.00 32.00 -64.00 32.00 64.00 96.00 -32.00 32.00 0.00 65.00 -32.00 0.00 -97.00 96.00 32.00 32.00 0.00 33.00 32.00 32.00 33.00 32.00 193.00 96.00 -129.00 32.00 0.00 33.00 96.00 96.00 65.00 -32.00 0.00 64.00 32.00 0.00 0.00 129.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 -32.00 161.00 32.00 64.00 32.00 0.00 32.00 -32.00 0.00 32.00 33.00 0.00 -33.00 32.00 -64.00 129.00 -64.00 0.00 32.00 96.00 0.00 65.00 -96.00 32.00 -33.00 64.00 -64.00 0.00 -32.00 -32.00 -129.00 64.00 32.00 33.00 65.00 0.00 128.00 64.00 0.00 96.00 -96.00 129.00 64.00 32.00 65.00 32.00 0.00 32.00 -33.00 65.00 65.00 32.00 0.00 96.00 32.00 97.00 0.00 32.00 0.00 96.00 -64.00 65.00 0.00 128.00 -33.00 32.00 33.00 33.00 0.00 32.00 -33.00 0.00 -32.00 64.00 32.00 32.00 0.00 97.00 -64.00 32.00 0.00 32.00 -64.00 161.00 -97.00 64.00 0.00 32.00 -32.00 32.00 32.00 97.00 -32.00 0.00 0.00 64.00 -32.00 64.00 0.00 65.00 -32.00 160.00 0.00 33.00 96.00 0.00 0.00 32.00 97.00 32.00 0.00 32.00 0.00 64.00 32.00 33.00 -129.00 32.00 0.00 64.00 0.00 32.00 0.00 97.00 32.00 64.00 65.00 96.00 64.00 97.00 -64.00 32.00 32.00 64.00 32.00 0.00 32.00 65.00 65.00 0.00 32.00 0.00 32.00 96.00 32.00 0.00 0.00 129.00 32.00 64.00 32.00 0.00 32.00 32.00 65.00 32.00 -32.00 32.00 0.00 33.00 32.00 0.00 32.00 0.00 -32.00 160.00 -32.00 33.00 32.00 32.00 -65.00 128.00 0.00 193.00 65.00 64.00 0.00 65.00 -65.00 64.00 33.00 97.00 -33.00 32.00 33.00 64.00 -65.00 97.00 32.00 32.00 0.00 32.00 0.00 64.00 0.00 64.00 0.00 33.00 -32.00 0.00 -32.00 32.00 0.00 96.00 64.00 64.00 33.00 0.00 0.00 33.00 -65.00 32.00 0.00 32.00 32.00 64.00 0.00 65.00 33.00 32.00 -33.00 96.00 33.00 65.00 -65.00 0.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 32.00 32.00 65.00 -32.00 64.00 0.00 96.00 -64.00 33.00 0.00 64.00 0.00 128.00 -33.00 0.00 33.00 33.00 0.00 64.00 32.00 0.00 0.00 64.00 -32.00 97.00 0.00 64.00 -33.00 32.00 0.00 97.00 -32.00 0.00 -64.00 0.00 0.00 32.00 579.00 32.00 2025.00 0.00 2573.00 0.00 32.00 0.00 0.00 96.00 32.00 33.00 32.00 0.00 -32.00 128.00 32.00 0.00 32.00 -32.00 64.00 32.00 33.00 32.00 -33.00 97.00 33.00 0.00 32.00 0.00 0.00 32.00 32.00 32.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 0.00 33.00 0.00 96.00 65.00 32.00 -32.00 -32.00 0.00 32.00 -97.00 -32.00 -32.00 64.00 32.00 97.00 -96.00 32.00 0.00 32.00 -33.00 32.00 33.00 32.00 0.00 33.00 0.00 0.00 32.00 0.00 64.00 0.00 32.00 32.00 32.00 32.00 0.00 96.00 0.00 32.00 0.00 65.00 33.00 64.00 32.00 32.00 0.00 65.00 32.00 32.00 -64.00 32.00 0.00 96.00 -33.00 33.00 33.00 32.00 32.00 64.00 -32.00 64.00 32.00 32.00 -32.00 33.00 32.00 32.00 0.00 32.00 0.00 0.00 -32.00 32.00 -33.00 32.00 33.00 32.00 128.00 129.00 -32.00 32.00 -32.00 32.00 64.00 32.00 0.00 33.00 -64.00 0.00 32.00 64.00 0.00 64.00 0.00 0.00 -32.00 65.00 32.00 -33.00 97.00 -32.00 -33.00 32.00 65.00 -64.00 0.00 0.00 32.00 32.00 32.00 0.00 32.00 32.00 64.00 65.00 0.00 0.00 33.00 32.00 0.00 -32.00 32.00 -32.00 32.00 -33.00 0.00 0.00 64.00 0.00 97.00 65.00 96.00 0.00 64.00 32.00 65.00 0.00 64.00 64.00 64.00 97.00 32.00 32.00 97.00 0.00 64.00 -32.00 32.00 32.00 0.00 -32.00 33.00 32.00 96.00 0.00 64.00 0.00 32.00 -32.00 65.00 0.00 32.00 -33.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 -96.00 0.00 -65.00 161.00 -64.00 32.00 -32.00 32.00 -32.00 33.00 -33.00 32.00 -32.00 -32.00 0.00 32.00 0.00 32.00 -64.00 64.00 -64.00 97.00 0.00 32.00 -97.00 32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 32.00 32.00 -32.00 0.00 32.00 33.00 -64.00 0.00 32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 65.00 -32.00 32.00 32.00 0.00 -32.00 64.00 32.00 32.00 -32.00 0.00 0.00 64.00 0.00 33.00 0.00 96.00 -32.00 0.00 32.00 32.00 0.00 65.00 0.00 32.00 -32.00 32.00 64.00 32.00 -32.00 32.00 32.00 97.00 0.00 64.00 33.00 0.00 0.00 32.00 0.00 32.00 -33.00 0.00 0.00 32.00 33.00 0.00 0.00 33.00 -33.00 32.00 65.00 0.00 0.00 32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 0.00 32.00 65.00 -65.00 32.00 33.00 -32.00 32.00 32.00 0.00 32.00 0.00 64.00 0.00 -32.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 64.00 32.00 65.00 32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 65.00 -32.00 64.00 96.00 32.00 0.00 32.00 33.00 -32.00 64.00 32.00 64.00 0.00 32.00 0.00 32.00 -32.00 0.00 97.00 65.00 -32.00 32.00 32.00 32.00 0.00 32.00 -32.00 0.00 -33.00 0.00 65.00 32.00 0.00 33.00 -32.00 64.00 -33.00 64.00 65.00 0.00 0.00 64.00 32.00 33.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 97.00 64.00 32.00 97.00 32.00 0.00 64.00 96.00 0.00 193.00 0.00 64.00 0.00 33.00 -32.00 32.00 0.00 64.00 32.00 96.00 0.00 33.00 32.00 64.00 0.00 32.00 0.00 32.00 32.00 0.00 547.00 450.00 -96.00 33.00 -65.00 64.00 0.00 32.00 -64.00 64.00 0.00 65.00 -32.00 0.00 -32.00 32.00 0.00 64.00 -65.00 64.00 32.00 161.00 -32.00 64.00 -32.00 33.00 -64.00 32.00 -64.00 -32.00 -33.00 -33.00 -64.00 33.00 0.00 -33.00 -32.00 33.00 -32.00 0.00 -64.00 0.00 0.00 32.00 -33.00 0.00 0.00 32.00 0.00 32.00 -96.00 32.00 -96.00 129.00 -129.00 32.00 -32.00 32.00 -65.00 64.00 -32.00 33.00 0.00 64.00 -32.00 96.00 -32.00 0.00 -64.00 32.00 -65.00 65.00 32.00 64.00 0.00 64.00 -64.00 97.00 0.00 129.00 -64.00 160.00 0.00 65.00 0.00 32.00 64.00 160.00 0.00 129.00 -32.00 161.00 32.00 225.00 -32.00 96.00 -96.00 97.00 -65.00 193.00 -64.00 0.00 -32.00 64.00 -32.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 32.00 -96.00 -32.00 -32.00 32.00 0.00 32.00 -33.00 32.00 -32.00 65.00 -32.00 32.00 0.00 96.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 0.00 65.00 -32.00 64.00 -32.00 0.00 -64.00 97.00 -64.00 0.00 0.00 64.00 -33.00 32.00 33.00 32.00 0.00 32.00 0.00 32.00 32.00 33.00 -32.00 64.00 64.00 32.00 -129.00 161.00 -32.00 0.00 -32.00 0.00 0.00 64.00 0.00 32.00 -64.00 97.00 0.00 64.00 -32.00 0.00 0.00 129.00 -33.00 0.00 -32.00 96.00 -64.00 0.00 0.00 32.00 0.00 65.00 -32.00 32.00 0.00 -32.00 0.00 32.00 0.00 32.00 -32.00 64.00 -33.00 0.00 33.00 65.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 64.00 -33.00 0.00 0.00 32.00 -32.00 0.00 0.00 97.00 65.00 64.00 -65.00 32.00 0.00 33.00 0.00 96.00 -32.00 64.00 -64.00 0.00 0.00 32.00 -32.00 0.00 -97.00 97.00 0.00 32.00 -128.00 32.00 -33.00 -32.00 -64.00 32.00 -32.00 32.00 0.00 -32.00 -96.00 32.00 -129.00 97.00 0.00 96.00 -64.00 0.00 0.00 32.00 -33.00 0.00 -32.00 33.00 -96.00 64.00 -32.00 0.00 -32.00 32.00 -33.00 0.00 -64.00 -32.00 -96.00 32.00 0.00 32.00 -33.00 32.00 0.00 32.00 0.00 33.00 -32.00 -33.00 -32.00 65.00 -64.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -65.00 32.00 0.00 32.00 0.00 33.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 0.00 32.00 32.00 -32.00 32.00 -32.00 0.00 0.00 33.00 -32.00 0.00 0.00 32.00 32.00 32.00 -32.00 32.00 -129.00 -64.00 -64.00 32.00 -64.00 -32.00 0.00 -97.00 -33.00 0.00 -64.00 -32.00 -96.00 -32.00 -33.00 -64.00 -64.00 -33.00 -64.00 0.00 -161.00 -64.00 -32.00 -64.00 -129.00 -97.00 -32.00 -64.00 -32.00 -64.00 32.00 -65.00 -32.00 -32.00 -32.00 0.00 -97.00 65.00 -32.00 0.00 -32.00 -65.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -97.00 33.00 -32.00 -129.00 32.00 0.00 32.00 32.00 0.00 -32.00 -32.00 -32.00 0.00 -64.00 32.00 -33.00 32.00 33.00 33.00 -33.00 -129.00 -64.00 -64.00 32.00 -65.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 97.00 32.00 -33.00 33.00 -64.00 32.00 -32.00 0.00 -32.00 -65.00 -32.00 0.00 -65.00 -32.00 -32.00 0.00 0.00 65.00 -32.00 64.00 0.00 32.00 -32.00 32.00 -97.00 -64.00 -64.00 64.00 32.00 -96.00 -32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 -64.00 -32.00 -65.00 0.00 0.00 -32.00 -32.00 64.00 32.00 32.00 -64.00 64.00 -64.00 -64.00 -65.00 32.00 -32.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -65.00 -32.00 0.00 -65.00 0.00 -64.00 33.00 -32.00 -33.00 0.00 -64.00 -64.00 -32.00 -33.00 0.00 33.00 96.00 -65.00 33.00 -128.00 0.00 0.00 64.00 -65.00 0.00 -160.00 0.00 -97.00 32.00 32.00 64.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 -193.00 65.00 -97.00 -65.00 -96.00 0.00 -64.00 -32.00 -65.00 -32.00 0.00 -32.00 -96.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 32.00 -97.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 -64.00 0.00 -65.00 65.00 -32.00 0.00 0.00 -65.00 -32.00 0.00 0.00 65.00 -32.00 0.00 -64.00 -32.00 0.00 64.00 -32.00 0.00 -97.00 -32.00 0.00 -32.00 -64.00 32.00 -64.00 -65.00 32.00 33.00 -65.00 32.00 -96.00 64.00 -32.00 -32.00 0.00 32.00 -65.00 0.00 -32.00 -32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 -32.00 0.00 0.00 -96.00 -32.00 0.00 -32.00 64.00 -33.00 32.00 -96.00 -32.00 -32.00 -32.00 0.00 64.00 -32.00 0.00 0.00 -32.00 -65.00 32.00 -32.00 65.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 64.00 -64.00 -32.00 0.00 -96.00 -65.00 -65.00 0.00 -96.00 0.00 -97.00 -64.00 -128.00 0.00 -32.00 -64.00 32.00 -32.00 0.00 -65.00 -32.00 0.00 -32.00 -64.00 -65.00 -32.00 32.00 -32.00 -32.00 -65.00 0.00 33.00 -64.00 -33.00 -32.00 -32.00 0.00 32.00 -65.00 -32.00 -32.00 -96.00 -32.00 0.00 32.00 32.00 0.00 -32.00 32.00 -65.00 -96.00 0.00 -129.00 -32.00 0.00 -32.00 0.00 -32.00 33.00 -64.00 -97.00 -65.00 0.00 0.00 -129.00 -64.00 33.00 -64.00 -33.00 0.00 -32.00 -32.00 0.00 -32.00 -64.00 -65.00 -64.00 0.00 -32.00 32.00 -65.00 0.00 -96.00 -32.00 -32.00 -32.00 -161.00 32.00 -64.00 -32.00 -33.00 -32.00 -32.00 -32.00 0.00 -32.00 65.00 -33.00 0.00 -32.00 -65.00 -32.00 -32.00 -32.00 -32.00 0.00 -97.00 -64.00 0.00 0.00 65.00 0.00 32.00 0.00 32.00 -33.00 64.00 -64.00 -32.00 0.00 -128.00 -64.00 -65.00 -32.00 0.00 -32.00 65.00 -33.00 -33.00 -32.00 0.00 -32.00 129.00 -64.00 0.00 0.00 32.00 -64.00 -32.00 32.00 64.00 -32.00 0.00 -65.00 -64.00 -32.00 32.00 -32.00 -64.00 -64.00 0.00 -33.00 64.00 -32.00 -64.00 -64.00 64.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -32.00 32.00 -64.00 -64.00 -32.00 32.00 -32.00 -32.00 0.00 -65.00 0.00 -32.00 -65.00 97.00 -32.00 -65.00 -64.00 -64.00 0.00 -96.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 -33.00 -32.00 33.00 -65.00 0.00 -32.00 -33.00 0.00 -32.00 65.00 -32.00 0.00 0.00 -97.00 -32.00 0.00 -32.00 32.00 32.00 65.00 -97.00 32.00 -96.00 -97.00 -64.00 32.00 -65.00 0.00 -64.00 -32.00 -257.00 -128.00 0.00 -65.00 64.00 -32.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 -33.00 -32.00 33.00 -64.00 0.00 -32.00 -33.00 0.00 -64.00 0.00 32.00 -97.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 0.00 32.00 -65.00 65.00 -96.00 0.00 0.00 64.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -32.00 64.00 0.00 32.00 0.00 32.00 -64.00 -64.00 0.00 -64.00 -32.00 0.00 -32.00 96.00 -97.00 -32.00 -64.00 -96.00 -64.00 -129.00 0.00 -32.00 0.00 -65.00 0.00 -32.00 -97.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 33.00 -64.00 -65.00 -64.00 -32.00 0.00 -64.00 -129.00 -64.00 -32.00 0.00 -96.00 -65.00 -33.00 -64.00 -64.00 -64.00 0.00 -33.00 32.00 0.00 32.00 -32.00 33.00 0.00 -65.00 -64.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 -33.00 0.00 -32.00 -129.00 -32.00 -32.00 -64.00 32.00 -97.00 -64.00 0.00 0.00 -96.00 -65.00 -32.00 -64.00 -193.00 -32.00 -65.00 -64.00 0.00 -65.00 -32.00 32.00 -96.00 65.00 -32.00 0.00 -32.00 -32.00 -33.00 -33.00 0.00 -96.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 -64.00 0.00 -64.00 0.00 -33.00 0.00 0.00 -65.00 -64.00 33.00 0.00 -33.00 0.00 -32.00 -64.00 0.00 0.00 -96.00 -32.00 0.00 -33.00 32.00 33.00 64.00 -65.00 32.00 -64.00 -64.00 -32.00 -32.00 -32.00 32.00 32.00 64.00 0.00 33.00 -32.00 32.00 -97.00 0.00 -32.00 32.00 -96.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 0.00 33.00 -64.00 0.00 -33.00 -33.00 -32.00 0.00 -160.00 0.00 -161.00 -64.00 -97.00 -64.00 -96.00 32.00 -32.00 -32.00 -129.00 -97.00 -32.00 -128.00 -64.00 -33.00 -33.00 33.00 -32.00 -33.00 -32.00 -32.00 97.00 0.00 -65.00 -64.00 0.00 -96.00 -160.00 0.00 -161.00 0.00 -129.00 -97.00 -96.00 -193.00 -97.00 -32.00 -96.00 -32.00 -97.00 -32.00 -32.00 -65.00 -161.00 -64.00 -96.00 32.00 -64.00 -64.00 -226.00 -64.00 -128.00 0.00 -97.00 -65.00 -32.00 32.00 -64.00 65.00 -32.00 32.00 -32.00 -32.00 -65.00 96.00 -96.00 -32.00 -96.00 -64.00 -65.00 0.00 -32.00 32.00 0.00 64.00 -32.00 97.00 0.00 64.00 0.00 32.00 -32.00 32.00 -65.00 0.00 -96.00 65.00 -97.00 32.00 -32.00 -32.00 -128.00 -97.00 -32.00 0.00 0.00 32.00 -33.00 33.00 -64.00 -65.00 -64.00 65.00 -32.00 0.00 -32.00 -97.00 -65.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 0.00 -64.00 -33.00 0.00 -32.00 32.00 -64.00 64.00 -32.00 0.00 0.00 -96.00 -32.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 128.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -64.00 0.00 -129.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 -64.00 -96.00 129.00 -97.00 32.00 -32.00 64.00 -32.00 32.00 -32.00 -32.00 -32.00 -32.00 32.00 -97.00 0.00 -64.00 -161.00 0.00 -96.00 0.00 -257.00 -32.00 -65.00 -64.00 -32.00 -33.00 -129.00 -128.00 -64.00 -97.00 -64.00 -32.00 -129.00 -64.00 -32.00 -96.00 0.00 -33.00 32.00 -64.00 32.00 -161.00 0.00 -161.00 -32.00 -160.00 -32.00 -32.00 -64.00 32.00 -129.00 64.00 -32.00 0.00 -64.00 -96.00 -32.00 -33.00 -65.00 0.00 -128.00 0.00 -258.00 -96.00 -128.00 -32.00 -65.00 -64.00 -32.00 -161.00 32.00 -97.00 65.00 -96.00 0.00 -32.00 -65.00 -65.00 -32.00 33.00 -96.00 32.00 32.00 96.00 0.00 97.00 -32.00 96.00 -64.00 0.00 -33.00 0.00 -32.00 -64.00 65.00 -161.00 -33.00 -32.00 -32.00 -32.00 -96.00 -65.00 -65.00 0.00 -32.00 65.00 -96.00 128.00 -32.00 0.00 -32.00 -64.00 0.00 -64.00 64.00 -97.00 64.00 -32.00 32.00 -64.00 -32.00 -65.00 -64.00 -128.00 -32.00 -32.00 -65.00 0.00 -32.00 0.00 -128.00 0.00 -161.00 96.00 -64.00 -64.00 -65.00 -97.00 -32.00 -32.00 -64.00 32.00 -32.00 97.00 -33.00 0.00 -32.00 0.00 -64.00 -129.00 -32.00 0.00 -97.00 32.00 -32.00 0.00 0.00 -64.00 32.00 -64.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 64.00 -97.00 65.00 -225.00 -32.00 -32.00 -65.00 -32.00 -128.00 0.00 -65.00 -97.00 0.00 -32.00 65.00 -161.00 0.00 -160.00 -97.00 -290.00 0.00 -64.00 -32.00 -64.00 -64.00 0.00 -129.00 64.00 -257.00 0.00 -32.00 32.00 64.00 64.00 0.00 33.00 0.00 32.00 -64.00 0.00 -193.00 -97.00 -129.00 -96.00 -32.00 -32.00 32.00 -32.00 129.00 -129.00 64.00 -129.00 0.00 -32.00 -64.00 -128.00 0.00 -33.00 32.00 -64.00 -64.00 -64.00 0.00 -65.00 96.00 -96.00 32.00 -96.00 -32.00 -33.00 -32.00 -32.00 -161.00 0.00 -193.00 -64.00 -32.00 0.00 -32.00 -64.00 -64.00 -354.00 0.00 -161.00 -65.00 -161.00 32.00 -64.00 161.00 -32.00 32.00 -32.00 -32.00 -65.00 -193.00 0.00 -32.00 -32.00 -64.00 -257.00 0.00 -161.00 32.00 -32.00 129.00 -32.00 32.00 -32.00 -32.00 -64.00 -33.00 0.00 -64.00 0.00 -32.00 0.00 -64.00 -193.00 0.00 -65.00 64.00 -64.00 96.00 -96.00 226.00 -65.00 32.00 -64.00 -32.00 -64.00 -65.00 -129.00 -32.00 -32.00 161.00 -129.00 96.00 -64.00 0.00 -32.00 -96.00 -97.00 -32.00 -96.00 -32.00 -97.00 0.00 -32.00 96.00 32.00 -64.00 -257.00 -193.00 -257.00 -97.00 -64.00 -64.00 0.00 -64.00 -32.00 0.00 -97.00 64.00 0.00 32.00 -96.00 -32.00 -97.00 32.00 -129.00 0.00 -96.00 -32.00 -96.00 -32.00 -97.00 -97.00 -32.00 -96.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 -64.00 64.00 -32.00 0.00 -32.00 0.00 -33.00 -32.00 -128.00 -64.00 -97.00 32.00 -128.00 -65.00 -65.00 -32.00 -64.00 32.00 -96.00 97.00 0.00 64.00 -65.00 64.00 -96.00 0.00 -161.00 -64.00 -128.00 64.00 -97.00 65.00 -32.00 96.00 -129.00 97.00 -96.00 64.00 -193.00 32.00 -32.00 32.00 -65.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 -64.00 -129.00 0.00 -96.00 32.00 -129.00 -32.00 -193.00 -64.00 -64.00 -32.00 -129.00 -33.00 -64.00 65.00 -225.00 -32.00 -129.00 -33.00 -64.00 0.00 -96.00 0.00 -65.00 33.00 -128.00 160.00 -161.00 33.00 -129.00 -33.00 -64.00 -128.00 -96.00 -65.00 -161.00 -64.00 -129.00 -32.00 -128.00 -64.00 -65.00 -129.00 -128.00 -257.00 -97.00 0.00 32.00 32.00 32.00 0.00 33.00 -32.00 64.00 -129.00 64.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 32.00 65.00 -96.00 32.00 0.00 160.00 0.00 65.00 0.00 32.00 -65.00 32.00 -96.00 -64.00 -32.00 128.00 -65.00 0.00 -32.00 33.00 0.00 32.00 32.00 96.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -128.00 32.00 0.00 -96.00 -33.00 0.00 -64.00 32.00 -32.00 32.00 -32.00 -32.00 -32.00 -129.00 -32.00 0.00 -33.00 65.00 0.00 -32.00 -32.00 -33.00 65.00 -64.00 -33.00 0.00 -32.00 0.00 -64.00 -64.00 -97.00 96.00 0.00 65.00 -96.00 -33.00 64.00 -96.00 -64.00 -64.00 0.00 -33.00 32.00 0.00 64.00 0.00 32.00 0.00 33.00 -32.00 -33.00 0.00 0.00 -64.00 -64.00 32.00 -32.00 32.00 -64.00 0.00 -65.00 0.00 -32.00 32.00 0.00 65.00 -32.00 0.00 -64.00 -65.00 -64.00 -32.00 32.00 -64.00 0.00 -64.00 -65.00 32.00 0.00 32.00 33.00 96.00 -33.00 33.00 -32.00 64.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -64.00 64.00 -33.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 64.00 -65.00 0.00 0.00 65.00 -32.00 32.00 0.00 32.00 -96.00 0.00 -65.00 0.00 32.00 -64.00 0.00 -32.00 33.00 -33.00 -33.00 -32.00 -32.00 -32.00 -64.00 0.00 -64.00 32.00 0.00 32.00 -65.00 0.00 0.00 -64.00 -32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -32.00 33.00 0.00 -33.00 -32.00 -32.00 -65.00 32.00 -64.00 33.00 -32.00 128.00 64.00 32.00 -32.00 0.00 -64.00 -32.00 0.00 65.00 -32.00 -33.00 -32.00 0.00 0.00 -64.00 -97.00 97.00 -32.00 0.00 -64.00 -129.00 -161.00 0.00 -65.00 32.00 33.00 32.00 -33.00 0.00 -32.00 65.00 -32.00 -33.00 0.00 -64.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -64.00 0.00 0.00 -32.00 -33.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -96.00 32.00 0.00 64.00 -97.00 0.00 0.00 33.00 32.00 64.00 -32.00 -32.00 -32.00 32.00 32.00 0.00 -64.00 32.00 -32.00 0.00 -33.00 -32.00 -96.00 -64.00 0.00 64.00 -32.00 -32.00 0.00 32.00 -32.00 32.00 -33.00 0.00 -64.00 32.00 0.00 -64.00 -32.00 32.00 0.00 64.00 -32.00 0.00 -64.00 -32.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 -128.00 0.00 -33.00 32.00 0.00 32.00 0.00 65.00 -128.00 32.00 -97.00 -32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 0.00 33.00 64.00 0.00 -64.00 0.00 -32.00 -33.00 32.00 -96.00 -64.00 -32.00 -33.00 32.00 -64.00 0.00 32.00 32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 0.00 0.00 64.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 -32.00 32.00 -32.00 0.00 -97.00 -32.00 0.00 64.00 -64.00 -32.00 -32.00 0.00 32.00 32.00 -32.00 33.00 -33.00 -33.00 -32.00 33.00 0.00 32.00 -32.00 -32.00 -161.00 -33.00 -868.00 -385.00z\"\n          },\n          ac: {\n            name: \"AC\",\n            path: \"M6610.00 62120.00l290.00 160.00 1961.00 869.00 2186.00 996.00 836.00 418.00 161.00 65.00 2219.00 450.00 64.00 32.00 707.00 225.00 97.00 32.00 96.00 0.00 1962.00 482.00 289.00 65.00 1254.00 289.00 1447.00 354.00 1736.00 353.00 515.00 129.00 450.00 97.00 353.00 225.00 772.00 418.00 1769.00 964.00 964.00 547.00 547.00 289.00 1222.00 643.00 900.00 450.00 965.00 547.00 160.00 64.00 129.00 65.00 514.00 225.00 2058.00 900.00 1158.00 514.00 2893.00 1254.00 772.00 322.00 129.00 96.00 160.00 33.00 193.00 96.00 1222.00 515.00 868.00 385.00 -32.00 33.00 0.00 64.00 -32.00 0.00 32.00 64.00 -32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 65.00 -32.00 -32.00 -32.00 -33.00 0.00 33.00 0.00 -33.00 -65.00 33.00 32.00 32.00 -32.00 64.00 -32.00 -32.00 0.00 64.00 -96.00 0.00 -97.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 0.00 33.00 -32.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 64.00 -32.00 -32.00 -64.00 32.00 0.00 33.00 -65.00 32.00 0.00 32.00 0.00 32.00 -64.00 0.00 -32.00 64.00 -64.00 0.00 0.00 33.00 0.00 64.00 -65.00 32.00 0.00 -32.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 32.00 64.00 0.00 32.00 -32.00 -32.00 -33.00 64.00 0.00 -32.00 0.00 65.00 -32.00 -33.00 -32.00 33.00 0.00 32.00 0.00 32.00 -64.00 0.00 0.00 32.00 0.00 -32.00 -32.00 32.00 32.00 32.00 0.00 32.00 -65.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 33.00 -32.00 128.00 -32.00 32.00 0.00 -64.00 -32.00 64.00 -33.00 0.00 0.00 -32.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -64.00 65.00 0.00 -32.00 0.00 64.00 -32.00 32.00 64.00 0.00 -32.00 32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 65.00 -32.00 32.00 0.00 32.00 -33.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 32.00 0.00 -129.00 65.00 -32.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 -64.00 32.00 -64.00 0.00 -32.00 32.00 0.00 64.00 32.00 32.00 -32.00 0.00 -32.00 32.00 -33.00 0.00 -64.00 33.00 -32.00 32.00 -64.00 0.00 -65.00 -65.00 -96.00 0.00 -32.00 -32.00 -65.00 0.00 -32.00 32.00 -96.00 33.00 -32.00 -33.00 -65.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -64.00 -32.00 -32.00 32.00 -33.00 33.00 65.00 64.00 -32.00 64.00 32.00 65.00 0.00 32.00 -32.00 0.00 -33.00 32.00 -64.00 -32.00 -64.00 0.00 0.00 64.00 -64.00 -64.00 -65.00 32.00 -64.00 -32.00 -32.00 -32.00 -32.00 0.00 -65.00 96.00 33.00 64.00 0.00 129.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 0.00 64.00 -32.00 33.00 -129.00 32.00 -32.00 32.00 -64.00 32.00 -65.00 -32.00 -64.00 32.00 0.00 64.00 -96.00 0.00 -32.00 0.00 -65.00 32.00 -96.00 33.00 -32.00 32.00 -97.00 160.00 -32.00 97.00 -96.00 96.00 -33.00 65.00 -96.00 96.00 -97.00 -64.00 -128.00 546.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -65.00 -64.00 0.00 0.00 -32.00 -33.00 32.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 -64.00 0.00 -64.00 0.00 -32.00 32.00 0.00 -32.00 -65.00 0.00 -32.00 64.00 -32.00 -32.00 -32.00 32.00 -64.00 0.00 0.00 -32.00 0.00 32.00 -65.00 -32.00 -96.00 64.00 -65.00 -32.00 -64.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 0.00 0.00 64.00 -32.00 0.00 -64.00 0.00 -64.00 33.00 0.00 64.00 -32.00 -32.00 -33.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 65.00 0.00 32.00 0.00 64.00 32.00 0.00 32.00 32.00 -32.00 32.00 0.00 33.00 -32.00 32.00 32.00 32.00 -32.00 32.00 -64.00 32.00 -33.00 65.00 -64.00 32.00 0.00 32.00 -64.00 32.00 -65.00 96.00 -32.00 0.00 -32.00 97.00 -64.00 0.00 -32.00 96.00 -32.00 0.00 32.00 32.00 -32.00 97.00 -65.00 32.00 -32.00 64.00 0.00 33.00 0.00 64.00 -32.00 64.00 -64.00 32.00 -33.00 33.00 -64.00 32.00 -32.00 64.00 -32.00 0.00 -32.00 0.00 -97.00 0.00 -32.00 32.00 -32.00 64.00 -32.00 33.00 -65.00 -65.00 -32.00 0.00 -160.00 65.00 -33.00 64.00 33.00 32.00 -33.00 32.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -65.00 -64.00 -64.00 64.00 -193.00 32.00 -96.00 65.00 0.00 64.00 -65.00 64.00 -96.00 65.00 0.00 32.00 -322.00 64.00 -514.00 129.00 32.00 -97.00 -64.00 -64.00 32.00 -64.00 -64.00 -33.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -32.00 32.00 -64.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 -65.00 -32.00 0.00 -32.00 33.00 -32.00 -33.00 32.00 0.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 65.00 0.00 -65.00 -65.00 -32.00 32.00 -32.00 -32.00 0.00 0.00 32.00 -64.00 0.00 32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 33.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 -32.00 32.00 0.00 -32.00 0.00 -64.00 32.00 0.00 65.00 -32.00 0.00 -33.00 -33.00 -32.00 0.00 -32.00 33.00 32.00 0.00 0.00 -33.00 32.00 65.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 -32.00 0.00 -64.00 65.00 -65.00 -32.00 -64.00 -65.00 -64.00 32.00 0.00 -32.00 -32.00 0.00 32.00 -64.00 -64.00 0.00 -33.00 0.00 -64.00 32.00 -32.00 0.00 32.00 64.00 -64.00 0.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 -64.00 32.00 -32.00 -97.00 -32.00 65.00 -32.00 -32.00 -65.00 32.00 -64.00 -32.00 -32.00 64.00 -32.00 -64.00 -64.00 0.00 0.00 -33.00 -33.00 33.00 -32.00 0.00 32.00 -33.00 -32.00 0.00 0.00 -32.00 -64.00 32.00 -64.00 -32.00 -33.00 -32.00 -64.00 0.00 -64.00 32.00 -32.00 -32.00 -65.00 -64.00 -32.00 64.00 -64.00 -32.00 32.00 0.00 0.00 -32.00 -96.00 32.00 -33.00 32.00 33.00 0.00 -33.00 32.00 -32.00 -64.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -97.00 -32.00 0.00 -32.00 -32.00 64.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 32.00 -64.00 -64.00 0.00 0.00 32.00 -65.00 -32.00 -32.00 64.00 0.00 -32.00 -32.00 0.00 -32.00 -64.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -33.00 -64.00 -32.00 32.00 -32.00 -65.00 -32.00 0.00 -32.00 65.00 -97.00 0.00 0.00 64.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 -65.00 0.00 0.00 -64.00 -32.00 32.00 -64.00 -32.00 -96.00 0.00 0.00 64.00 -33.00 0.00 -32.00 0.00 0.00 -32.00 -161.00 -32.00 0.00 32.00 0.00 32.00 -64.00 -32.00 -64.00 0.00 0.00 64.00 -32.00 -32.00 -65.00 32.00 -128.00 -32.00 -32.00 64.00 -33.00 -32.00 -64.00 32.00 -32.00 33.00 -32.00 -33.00 -64.00 65.00 -33.00 -65.00 -64.00 65.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 -32.00 -64.00 -32.00 -64.00 -33.00 0.00 0.00 32.00 -32.00 -32.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 -33.00 -65.00 0.00 0.00 33.00 -96.00 0.00 -32.00 0.00 -65.00 -33.00 -32.00 33.00 -32.00 -33.00 -32.00 33.00 -32.00 -33.00 -97.00 -32.00 -64.00 32.00 -32.00 33.00 -32.00 -33.00 -32.00 0.00 -97.00 0.00 0.00 65.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -33.00 -32.00 -32.00 64.00 -32.00 -32.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 -32.00 33.00 -65.00 0.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -64.00 0.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 64.00 -32.00 0.00 32.00 -32.00 -64.00 32.00 0.00 64.00 0.00 -32.00 -33.00 0.00 0.00 32.00 -32.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 -64.00 32.00 0.00 32.00 -33.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -64.00 0.00 0.00 32.00 -32.00 32.00 -65.00 -32.00 -64.00 0.00 -32.00 0.00 -32.00 -32.00 -97.00 32.00 -32.00 0.00 -32.00 65.00 -32.00 -33.00 -32.00 0.00 -33.00 33.00 -96.00 32.00 -64.00 -32.00 -65.00 32.00 -32.00 -32.00 -32.00 -33.00 -96.00 33.00 -33.00 -33.00 0.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 32.00 0.00 -32.00 -64.00 -32.00 -33.00 32.00 -32.00 -32.00 -32.00 0.00 32.00 -32.00 -64.00 -129.00 -97.00 -64.00 -32.00 -96.00 -64.00 -33.00 -32.00 0.00 -32.00 -64.00 -65.00 0.00 0.00 -32.00 -64.00 -32.00 -418.00 289.00 -32.00 -1383.00 0.00 -1221.00 0.00 -483.00 0.00 -1414.00 32.00 -547.00 0.00 -675.00 0.00 -32.00 32.00 -97.00 65.00 0.00 32.00 32.00 32.00 -96.00 32.00 -32.00 96.00 32.00 65.00 -32.00 32.00 -65.00 0.00 -96.00 32.00 0.00 0.00 -64.00 32.00 -32.00 -32.00 -33.00 32.00 -32.00 -32.00 0.00 -64.00 -161.00 -32.00 0.00 0.00 -64.00 -65.00 0.00 -64.00 -64.00 32.00 -32.00 -64.00 -32.00 -64.00 -161.00 32.00 -32.00 32.00 -65.00 -32.00 0.00 32.00 -32.00 0.00 -64.00 -64.00 -32.00 0.00 -32.00 64.00 -33.00 -32.00 97.00 32.00 0.00 32.00 -32.00 64.00 64.00 32.00 0.00 33.00 -32.00 -33.00 -64.00 -64.00 0.00 0.00 -33.00 32.00 -32.00 -32.00 -64.00 32.00 0.00 32.00 32.00 65.00 0.00 32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -97.00 64.00 33.00 0.00 -65.00 32.00 0.00 65.00 -64.00 32.00 64.00 0.00 -32.00 -65.00 -96.00 -32.00 -65.00 32.00 -32.00 33.00 32.00 32.00 0.00 -32.00 -96.00 32.00 0.00 32.00 0.00 32.00 -97.00 -32.00 33.00 -32.00 -33.00 -65.00 33.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -64.00 32.00 0.00 -32.00 -32.00 -33.00 -32.00 65.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -64.00 32.00 -32.00 0.00 -32.00 64.00 -33.00 0.00 -32.00 0.00 0.00 65.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 -65.00 -32.00 33.00 32.00 -65.00 0.00 0.00 32.00 0.00 33.00 0.00 -33.00 -32.00 33.00 32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -65.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 0.00 32.00 0.00 0.00 32.00 -32.00 32.00 -65.00 -64.00 -32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 32.00 32.00 -32.00 0.00 32.00 32.00 0.00 65.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -97.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 33.00 -64.00 0.00 -33.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 64.00 -64.00 32.00 0.00 -32.00 -97.00 64.00 -64.00 64.00 0.00 33.00 -32.00 0.00 -32.00 128.00 -32.00 0.00 -32.00 65.00 -33.00 0.00 -32.00 64.00 -128.00 0.00 0.00 32.00 0.00 -32.00 -33.00 64.00 -32.00 -32.00 0.00 32.00 -32.00 32.00 -64.00 161.00 -32.00 -32.00 0.00 96.00 0.00 33.00 0.00 32.00 -129.00 0.00 -64.00 -32.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 -64.00 0.00 -64.00 64.00 -97.00 64.00 -161.00 65.00 -96.00 64.00 -32.00 32.00 -33.00 32.00 -32.00 129.00 -32.00 32.00 -32.00 64.00 -64.00 65.00 0.00 96.00 -97.00 0.00 -96.00 -32.00 -32.00 0.00 0.00 64.00 -65.00 0.00 -192.00 65.00 -33.00 0.00 -96.00 -97.00 -65.00 32.00 0.00 65.00 -32.00 0.00 -32.00 -33.00 -64.00 97.00 -1318.00 0.00 -2573.00 0.00 0.00 -64.00 97.00 -33.00 32.00 -64.00 0.00 -64.00 0.00 -64.00 -64.00 -33.00 -32.00 -32.00 32.00 -64.00 64.00 -32.00 32.00 -97.00 64.00 -32.00 -32.00 -32.00 -64.00 -64.00 0.00 -129.00 -32.00 -32.00 0.00 -32.00 96.00 -97.00 65.00 -32.00 -129.00 -64.00 -129.00 -64.00 -64.00 0.00 -64.00 -33.00 -32.00 -32.00 -33.00 32.00 -64.00 -64.00 -64.00 0.00 0.00 -32.00 32.00 -96.00 0.00 -65.00 32.00 -96.00 0.00 -97.00 32.00 -64.00 -64.00 -96.00 32.00 -129.00 -32.00 0.00 -32.00 0.00 -97.00 -64.00 33.00 -290.00 -65.00 -32.00 -96.00 32.00 -65.00 -32.00 -64.00 32.00 -32.00 0.00 -64.00 -64.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -65.00 -33.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 -64.00 -64.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -97.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -128.00 32.00 -33.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 0.00 -65.00 -33.00 33.00 0.00 -33.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -64.00 -32.00 -64.00 0.00 -33.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 0.00 -32.00 -64.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 0.00 32.00 -64.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -322.00 0.00 -1864.00 0.00 64.00 -64.00 32.00 -129.00 0.00 -32.00 64.00 -32.00 97.00 -32.00 32.00 -65.00 64.00 -32.00 32.00 -96.00 129.00 -32.00 0.00 -32.00 -32.00 -65.00 -32.00 -32.00 96.00 -32.00 97.00 -161.00 96.00 -64.00 32.00 64.00 32.00 0.00 97.00 -64.00 0.00 -32.00 64.00 -32.00 32.00 -33.00 32.00 -32.00 0.00 -32.00 -96.00 -32.00 -32.00 -32.00 96.00 -65.00 129.00 -64.00 64.00 -64.00 64.00 -161.00 0.00 -128.00 33.00 -65.00 -33.00 -64.00 0.00 -129.00 -32.00 -64.00 0.00 -32.00 32.00 -32.00 33.00 -65.00 -129.00 -32.00 -96.00 -289.00 -97.00 -32.00 -64.00 0.00 0.00 -129.00 -32.00 97.00 -32.00 32.00 -65.00 -65.00 -32.00 -128.00 0.00 -65.00 -32.00 -32.00 0.00 -96.00 -64.00 0.00 -65.00 -97.00 0.00 -128.00 -96.00 -97.00 -32.00 -193.00 -33.00 -96.00 -64.00 -32.00 -64.00 -97.00 -64.00 0.00 -97.00 -32.00 -64.00 32.00 -64.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -64.00 -65.00 0.00 -96.00 -32.00 -32.00 -33.00 32.00 0.00 -64.00 -32.00 -32.00 -64.00 32.00 -32.00 -129.00 32.00 -32.00 32.00 -129.00 -64.00 -257.00 -65.00 -161.00 -96.00 0.00 -32.00 -32.00 -65.00 0.00 -96.00 -32.00 -32.00 32.00 0.00 -32.00 -64.00 32.00 -65.00 -96.00 -32.00 -129.00 -32.00 -64.00 -32.00 0.00 -32.00 0.00 -65.00 0.00 -64.00 -64.00 -129.00 -33.00 -32.00 0.00 0.00 -64.00 -64.00 0.00 -64.00 -32.00 -97.00 -129.00 32.00 -160.00 -64.00 -65.00 32.00 -128.00 -64.00 -97.00 -32.00 -32.00 0.00 -32.00 -65.00 -32.00 -32.00 -97.00 -64.00 -32.00 32.00 -96.00 0.00 -65.00 -32.00 -128.00 32.00 -97.00 -32.00 -128.00 -64.00 -65.00 -65.00 -96.00 -64.00 -32.00 32.00 -97.00 0.00 -96.00 -96.00 -97.00 -97.00 33.00 -64.00 0.00 -32.00 -161.00 -65.00 -65.00 -96.00 0.00 -32.00 33.00 -32.00 0.00 -32.00 -33.00 -33.00 -32.00 0.00 -96.00 -32.00 -64.00 -96.00 -97.00 32.00 -32.00 64.00 0.00 -64.00 -129.00 32.00 -64.00 32.00 0.00 65.00 96.00 128.00 0.00 32.00 0.00 65.00 -96.00 32.00 -64.00 0.00 -97.00 32.00 -161.00 -32.00 -96.00 -65.00 -32.00 -160.00 -97.00 -32.00 -32.00 -225.00 -64.00 -129.00 0.00 -32.00 -32.00 -65.00 -97.00 -32.00 -96.00 -96.00 0.00 -97.00 -97.00 -32.00 -128.00 -96.00 -32.00 -97.00 -97.00 -193.00 -193.00 -64.00 0.00 -32.00 -161.00 32.00 0.00 64.00 0.00 97.00 -32.00 96.00 -160.00 0.00 -65.00 65.00 -64.00 -65.00 -64.00 0.00 -161.00 -64.00 -64.00 -96.00 -225.00 0.00 -65.00 32.00 -32.00 32.00 32.00 32.00 65.00 32.00 -33.00 32.00 0.00 97.00 97.00 193.00 32.00 32.00 -64.00 32.00 -97.00 129.00 -64.00 64.00 0.00 96.00 32.00 129.00 -64.00 32.00 0.00 0.00 32.00 0.00 64.00 32.00 0.00 161.00 -96.00 96.00 -129.00 0.00 -32.00 -64.00 -129.00 0.00 -160.00 -64.00 -65.00 -97.00 -64.00 -32.00 -32.00 -32.00 -161.00 -64.00 -64.00 -32.00 -65.00 -65.00 -64.00 0.00 -32.00 -32.00 -64.00z\"\n          },\n          am: {\n            name: \"AM\",\n            path: \"M6610.00 62120.00l32.00 -33.00 97.00 -96.00 161.00 -193.00 64.00 -128.00 0.00 -65.00 -64.00 -32.00 0.00 -96.00 0.00 -65.00 -65.00 -128.00 0.00 -33.00 65.00 -128.00 96.00 -97.00 32.00 -96.00 0.00 -32.00 32.00 -97.00 32.00 0.00 33.00 -32.00 64.00 -96.00 64.00 -32.00 97.00 -161.00 32.00 -65.00 129.00 -96.00 32.00 -32.00 96.00 -64.00 32.00 0.00 97.00 0.00 32.00 -97.00 161.00 -128.00 96.00 -33.00 64.00 0.00 33.00 -32.00 96.00 0.00 97.00 -64.00 32.00 0.00 64.00 -32.00 64.00 0.00 97.00 -32.00 0.00 -97.00 32.00 -32.00 64.00 -32.00 32.00 -64.00 65.00 0.00 32.00 32.00 32.00 -32.00 64.00 0.00 65.00 0.00 96.00 -33.00 161.00 0.00 64.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 32.00 33.00 32.00 64.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 0.00 32.00 -32.00 0.00 -64.00 64.00 -32.00 33.00 32.00 32.00 0.00 64.00 -96.00 32.00 -33.00 -32.00 -32.00 32.00 -32.00 32.00 -96.00 32.00 -32.00 0.00 -33.00 33.00 -32.00 -33.00 -96.00 33.00 -32.00 32.00 0.00 0.00 -65.00 -32.00 -64.00 -65.00 -32.00 -32.00 -129.00 -32.00 -32.00 -32.00 -161.00 -32.00 32.00 0.00 -64.00 -32.00 -64.00 0.00 -64.00 0.00 -33.00 0.00 -32.00 -97.00 -96.00 -32.00 0.00 -32.00 -97.00 -64.00 -32.00 -33.00 -32.00 0.00 -64.00 0.00 -33.00 0.00 -128.00 -160.00 -161.00 0.00 -64.00 0.00 -129.00 96.00 -96.00 -32.00 -32.00 32.00 -33.00 -32.00 -192.00 32.00 0.00 64.00 -65.00 0.00 -32.00 33.00 -32.00 32.00 0.00 64.00 -32.00 0.00 -65.00 32.00 -128.00 0.00 -32.00 0.00 -65.00 0.00 -32.00 32.00 -64.00 32.00 32.00 0.00 -64.00 0.00 -32.00 0.00 -65.00 65.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 0.00 97.00 -33.00 0.00 -128.00 32.00 -32.00 64.00 0.00 0.00 -33.00 97.00 -32.00 64.00 -96.00 32.00 0.00 0.00 -97.00 32.00 0.00 32.00 -96.00 33.00 0.00 64.00 -32.00 0.00 -65.00 96.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 0.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 32.00 32.00 32.00 -32.00 -32.00 -64.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 32.00 -97.00 64.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 -33.00 0.00 -96.00 -32.00 -64.00 0.00 -129.00 0.00 -32.00 32.00 -129.00 32.00 -64.00 -32.00 -32.00 65.00 -32.00 32.00 -97.00 32.00 -32.00 0.00 -32.00 32.00 -64.00 0.00 -65.00 64.00 -32.00 0.00 -32.00 33.00 -96.00 0.00 -65.00 64.00 -64.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 -32.00 -65.00 32.00 -64.00 0.00 -32.00 0.00 -97.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 -64.00 -96.00 0.00 -32.00 -32.00 0.00 0.00 -33.00 32.00 -32.00 32.00 -32.00 32.00 0.00 33.00 -64.00 64.00 0.00 0.00 32.00 96.00 -32.00 32.00 -32.00 33.00 -129.00 64.00 32.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 33.00 32.00 32.00 -32.00 32.00 -65.00 64.00 33.00 0.00 -33.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 65.00 0.00 0.00 -32.00 64.00 0.00 0.00 -32.00 96.00 64.00 65.00 -32.00 32.00 0.00 64.00 32.00 32.00 -64.00 32.00 0.00 0.00 32.00 65.00 -32.00 96.00 -65.00 0.00 -96.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 64.00 -32.00 33.00 -32.00 64.00 0.00 32.00 -32.00 97.00 -96.00 32.00 0.00 64.00 0.00 32.00 -97.00 64.00 0.00 0.00 64.00 33.00 0.00 32.00 -64.00 32.00 32.00 0.00 32.00 32.00 0.00 0.00 -32.00 0.00 -64.00 97.00 -32.00 0.00 -65.00 -33.00 -32.00 0.00 -32.00 65.00 -32.00 0.00 64.00 32.00 -32.00 32.00 64.00 32.00 0.00 0.00 -64.00 64.00 0.00 0.00 -64.00 -32.00 -32.00 32.00 0.00 33.00 32.00 64.00 -64.00 64.00 0.00 0.00 -97.00 0.00 -32.00 0.00 -64.00 32.00 -33.00 33.00 -96.00 96.00 0.00 64.00 -64.00 65.00 0.00 0.00 -32.00 -33.00 -33.00 33.00 0.00 64.00 0.00 32.00 -32.00 129.00 32.00 -32.00 33.00 0.00 64.00 64.00 -32.00 64.00 -129.00 32.00 64.00 65.00 -32.00 96.00 -32.00 0.00 -64.00 32.00 -32.00 65.00 64.00 32.00 -32.00 -32.00 -32.00 128.00 -65.00 32.00 0.00 0.00 -32.00 65.00 -32.00 32.00 -32.00 64.00 32.00 129.00 -96.00 32.00 -65.00 64.00 -32.00 -32.00 -32.00 96.00 -97.00 97.00 -32.00 32.00 -64.00 0.00 -64.00 97.00 32.00 32.00 32.00 32.00 32.00 0.00 -64.00 0.00 -32.00 96.00 0.00 32.00 -65.00 33.00 -32.00 32.00 32.00 96.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -33.00 33.00 0.00 0.00 -32.00 -33.00 -64.00 97.00 -32.00 0.00 64.00 32.00 -32.00 0.00 -64.00 32.00 32.00 32.00 -32.00 0.00 -33.00 33.00 -32.00 64.00 32.00 64.00 -64.00 65.00 -32.00 128.00 -32.00 64.00 -32.00 65.00 0.00 32.00 -33.00 32.00 65.00 0.00 32.00 64.00 0.00 32.00 -32.00 0.00 -65.00 0.00 -32.00 33.00 -32.00 32.00 64.00 0.00 65.00 64.00 0.00 64.00 64.00 33.00 0.00 64.00 -32.00 96.00 32.00 65.00 -64.00 32.00 64.00 128.00 -96.00 -32.00 -33.00 32.00 -32.00 33.00 -32.00 0.00 32.00 0.00 32.00 -33.00 97.00 -64.00 32.00 0.00 32.00 64.00 32.00 33.00 33.00 64.00 0.00 96.00 -65.00 65.00 -64.00 64.00 -129.00 64.00 32.00 0.00 -64.00 32.00 -32.00 65.00 32.00 96.00 64.00 32.00 0.00 0.00 -32.00 -64.00 -64.00 0.00 -96.00 64.00 32.00 33.00 32.00 32.00 -32.00 0.00 -32.00 32.00 -33.00 64.00 0.00 64.00 65.00 33.00 0.00 32.00 32.00 0.00 32.00 64.00 0.00 96.00 -129.00 65.00 -64.00 64.00 64.00 64.00 -32.00 32.00 -32.00 33.00 32.00 0.00 65.00 32.00 0.00 96.00 0.00 33.00 32.00 0.00 32.00 32.00 -32.00 0.00 -65.00 -65.00 -32.00 -32.00 -64.00 65.00 0.00 64.00 96.00 64.00 33.00 64.00 -65.00 33.00 -32.00 -33.00 -128.00 -32.00 -65.00 32.00 0.00 97.00 32.00 64.00 -32.00 32.00 0.00 0.00 97.00 32.00 0.00 33.00 -129.00 32.00 0.00 32.00 32.00 -32.00 65.00 32.00 128.00 64.00 -64.00 0.00 -64.00 32.00 -33.00 32.00 0.00 33.00 0.00 32.00 0.00 0.00 65.00 64.00 -32.00 -32.00 -65.00 96.00 0.00 97.00 129.00 32.00 -64.00 0.00 -65.00 32.00 -32.00 65.00 -32.00 32.00 32.00 -32.00 64.00 32.00 33.00 96.00 -65.00 0.00 -64.00 64.00 0.00 -32.00 96.00 65.00 33.00 32.00 0.00 32.00 -65.00 64.00 0.00 32.00 0.00 65.00 0.00 32.00 -64.00 -32.00 -64.00 -33.00 -33.00 0.00 -32.00 65.00 32.00 32.00 33.00 32.00 64.00 97.00 32.00 32.00 32.00 32.00 -64.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -33.00 33.00 -96.00 64.00 -32.00 96.00 -32.00 -32.00 -97.00 32.00 -32.00 129.00 -64.00 -64.00 -97.00 -33.00 -64.00 65.00 0.00 64.00 32.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -65.00 32.00 -96.00 33.00 -32.00 32.00 -65.00 96.00 33.00 65.00 -97.00 32.00 -32.00 32.00 0.00 64.00 0.00 97.00 96.00 96.00 33.00 32.00 0.00 32.00 64.00 65.00 0.00 32.00 -64.00 0.00 -97.00 0.00 -128.00 32.00 32.00 32.00 32.00 32.00 64.00 0.00 -193.00 97.00 0.00 32.00 0.00 0.00 65.00 -64.00 128.00 0.00 64.00 32.00 33.00 32.00 32.00 64.00 -32.00 97.00 -33.00 64.00 -32.00 64.00 -32.00 32.00 -32.00 65.00 -64.00 -32.00 -65.00 160.00 33.00 33.00 96.00 -65.00 129.00 32.00 32.00 65.00 0.00 32.00 -129.00 32.00 -32.00 96.00 64.00 33.00 0.00 0.00 -64.00 96.00 0.00 32.00 -32.00 -64.00 -64.00 64.00 -33.00 65.00 33.00 128.00 0.00 32.00 -33.00 65.00 33.00 64.00 128.00 32.00 64.00 64.00 33.00 33.00 -65.00 32.00 -32.00 -32.00 -64.00 32.00 -32.00 64.00 64.00 64.00 32.00 32.00 32.00 0.00 129.00 33.00 161.00 -33.00 32.00 -96.00 32.00 0.00 64.00 129.00 97.00 -65.00 64.00 65.00 0.00 160.00 -64.00 0.00 32.00 -32.00 32.00 -64.00 32.00 32.00 65.00 64.00 32.00 97.00 0.00 32.00 32.00 32.00 -32.00 32.00 32.00 32.00 161.00 33.00 32.00 32.00 0.00 64.00 -32.00 0.00 -65.00 32.00 -32.00 97.00 -32.00 0.00 -32.00 -97.00 -64.00 65.00 -129.00 32.00 -32.00 64.00 32.00 32.00 32.00 64.00 -32.00 33.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 97.00 32.00 32.00 64.00 0.00 65.00 0.00 -65.00 64.00 32.00 97.00 33.00 0.00 96.00 32.00 32.00 32.00 0.00 64.00 32.00 0.00 129.00 -64.00 128.00 -64.00 97.00 -129.00 32.00 -161.00 0.00 -192.00 64.00 -65.00 33.00 0.00 225.00 -1318.00 225.00 -1254.00 707.00 -3987.00 354.00 -2090.00 450.00 -2669.00 321.00 -1800.00 -32.00 -161.00 32.00 -64.00 65.00 -65.00 0.00 -64.00 0.00 -193.00 32.00 -96.00 0.00 -65.00 64.00 -32.00 97.00 -32.00 0.00 -64.00 -65.00 -129.00 0.00 -193.00 0.00 -32.00 -64.00 -129.00 -32.00 -128.00 32.00 -97.00 64.00 -128.00 0.00 -129.00 65.00 -64.00 0.00 -64.00 0.00 -97.00 -129.00 -161.00 -32.00 -32.00 32.00 -129.00 -32.00 -32.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -64.00 64.00 0.00 -32.00 -65.00 -64.00 -32.00 -65.00 32.00 -64.00 -96.00 0.00 -64.00 -96.00 -97.00 -65.00 -32.00 -32.00 -32.00 -64.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -161.00 0.00 -65.00 -64.00 -64.00 -33.00 0.00 -128.00 -96.00 64.00 -97.00 0.00 -64.00 -64.00 -32.00 -32.00 0.00 -33.00 -64.00 -128.00 -97.00 32.00 -32.00 -64.00 -32.00 32.00 -32.00 -65.00 0.00 33.00 -65.00 0.00 -32.00 32.00 -32.00 64.00 0.00 -32.00 -64.00 32.00 -33.00 64.00 -96.00 33.00 -96.00 32.00 -65.00 32.00 -64.00 -32.00 0.00 0.00 -64.00 -32.00 -32.00 -33.00 0.00 -32.00 -65.00 -64.00 -32.00 32.00 -64.00 32.00 -97.00 -64.00 -96.00 -32.00 -32.00 32.00 -129.00 -64.00 -64.00 -65.00 0.00 -32.00 0.00 0.00 -97.00 -128.00 -32.00 -97.00 -32.00 0.00 -32.00 -128.00 -32.00 -65.00 -32.00 -32.00 -33.00 -32.00 -64.00 -32.00 0.00 -65.00 -96.00 -64.00 -33.00 -64.00 0.00 0.00 -64.00 -97.00 -32.00 -64.00 0.00 -96.00 -193.00 -65.00 32.00 -128.00 -32.00 -32.00 32.00 -129.00 -96.00 -64.00 -65.00 -33.00 -64.00 -32.00 0.00 -32.00 -64.00 -32.00 -32.00 -97.00 -129.00 -32.00 -32.00 -32.00 -64.00 -257.00 -225.00 -32.00 -33.00 0.00 -128.00 32.00 -65.00 32.00 -96.00 -32.00 -547.00 0.00 -385.00 32.00 -901.00 0.00 -1125.00 0.00 -386.00 32.00 0.00 32.00 0.00 33.00 64.00 32.00 33.00 64.00 0.00 32.00 -33.00 32.00 -64.00 -64.00 -64.00 129.00 0.00 32.00 64.00 128.00 32.00 65.00 -64.00 64.00 -96.00 32.00 32.00 65.00 -32.00 32.00 64.00 128.00 -32.00 65.00 -32.00 32.00 0.00 32.00 -33.00 64.00 33.00 32.00 0.00 0.00 64.00 97.00 -64.00 32.00 -65.00 96.00 -32.00 65.00 -97.00 64.00 65.00 64.00 -32.00 33.00 -129.00 64.00 -32.00 64.00 0.00 0.00 -64.00 32.00 -33.00 129.00 33.00 32.00 32.00 64.00 96.00 32.00 0.00 33.00 32.00 64.00 0.00 0.00 -32.00 64.00 0.00 0.00 -96.00 129.00 -65.00 0.00 -64.00 129.00 0.00 32.00 0.00 0.00 -64.00 32.00 -64.00 32.00 0.00 32.00 0.00 32.00 -65.00 32.00 -32.00 97.00 -32.00 32.00 0.00 32.00 32.00 32.00 64.00 65.00 0.00 32.00 33.00 0.00 64.00 32.00 32.00 96.00 64.00 0.00 65.00 193.00 192.00 65.00 65.00 32.00 -32.00 32.00 -33.00 0.00 -64.00 96.00 32.00 65.00 -32.00 32.00 -64.00 64.00 32.00 -32.00 32.00 32.00 97.00 -32.00 64.00 96.00 0.00 33.00 0.00 64.00 0.00 64.00 -32.00 0.00 32.00 129.00 -32.00 64.00 32.00 0.00 -64.00 0.00 -65.00 32.00 -32.00 0.00 -64.00 65.00 -32.00 32.00 32.00 64.00 0.00 64.00 32.00 65.00 0.00 32.00 32.00 32.00 0.00 32.00 -64.00 -161.00 -257.00 -96.00 -65.00 -64.00 -32.00 -33.00 -32.00 0.00 -96.00 65.00 -65.00 64.00 0.00 32.00 0.00 32.00 -96.00 -32.00 -129.00 -32.00 -32.00 -32.00 -64.00 0.00 -97.00 64.00 -32.00 65.00 0.00 0.00 -32.00 32.00 -64.00 -65.00 -65.00 -32.00 0.00 -96.00 -64.00 -65.00 0.00 0.00 -64.00 0.00 -32.00 -32.00 -65.00 32.00 -32.00 97.00 -32.00 -32.00 -64.00 -161.00 -65.00 -64.00 -64.00 96.00 -64.00 -32.00 -65.00 -32.00 -32.00 -257.00 -225.00 -33.00 0.00 -64.00 32.00 -32.00 -64.00 -64.00 0.00 0.00 -32.00 -65.00 -64.00 -128.00 0.00 -64.00 32.00 -65.00 -32.00 -32.00 32.00 -161.00 161.00 -96.00 -33.00 0.00 -64.00 0.00 -32.00 -32.00 -32.00 -65.00 32.00 -160.00 -32.00 -129.00 32.00 -225.00 0.00 -97.00 -32.00 -96.00 -97.00 -64.00 0.00 -33.00 65.00 -96.00 0.00 -96.00 32.00 -65.00 32.00 -64.00 -32.00 -32.00 32.00 -32.00 -64.00 0.00 -97.00 0.00 -64.00 -97.00 32.00 -32.00 0.00 -96.00 0.00 -129.00 97.00 -64.00 32.00 -33.00 96.00 -32.00 32.00 -96.00 -32.00 -64.00 -64.00 0.00 -1029.00 0.00 -1351.00 0.00 -707.00 96.00 0.00 -32.00 32.00 32.00 32.00 129.00 -32.00 64.00 32.00 0.00 -32.00 32.00 -64.00 32.00 0.00 129.00 -96.00 64.00 0.00 65.00 0.00 32.00 -33.00 32.00 33.00 96.00 0.00 0.00 32.00 65.00 0.00 64.00 0.00 32.00 -32.00 64.00 32.00 32.00 -65.00 33.00 0.00 96.00 -64.00 161.00 -64.00 64.00 -65.00 290.00 129.00 32.00 -32.00 0.00 32.00 32.00 32.00 32.00 -64.00 32.00 32.00 32.00 32.00 32.00 -32.00 129.00 32.00 161.00 97.00 0.00 64.00 32.00 -32.00 965.00 0.00 2282.00 0.00 2541.00 0.00 32.00 0.00 0.00 -64.00 -32.00 -33.00 -97.00 0.00 64.00 -96.00 -96.00 -64.00 -64.00 0.00 -32.00 32.00 -65.00 32.00 -64.00 0.00 -32.00 -129.00 32.00 -161.00 -32.00 0.00 -97.00 0.00 0.00 -64.00 0.00 -96.00 65.00 -65.00 32.00 -257.00 32.00 -32.00 64.00 -64.00 65.00 -65.00 64.00 0.00 64.00 -96.00 64.00 -32.00 65.00 64.00 64.00 -32.00 32.00 0.00 65.00 64.00 32.00 129.00 64.00 32.00 32.00 129.00 32.00 32.00 32.00 0.00 65.00 32.00 96.00 -32.00 97.00 96.00 96.00 97.00 161.00 160.00 161.00 0.00 32.00 -32.00 32.00 -64.00 64.00 -32.00 32.00 -64.00 -32.00 -129.00 129.00 -32.00 128.00 -97.00 97.00 -128.00 32.00 -32.00 64.00 -65.00 161.00 -321.00 65.00 -32.00 96.00 0.00 225.00 96.00 225.00 0.00 161.00 0.00 64.00 -64.00 97.00 -257.00 128.00 -97.00 32.00 -161.00 65.00 -96.00 64.00 -65.00 354.00 -160.00 64.00 -129.00 32.00 -64.00 97.00 0.00 96.00 0.00 97.00 64.00 128.00 129.00 32.00 514.00 32.00 97.00 0.00 257.00 129.00 482.00 64.00 193.00 32.00 64.00 161.00 97.00 65.00 -32.00 257.00 32.00 96.00 32.00 97.00 129.00 64.00 128.00 32.00 129.00 97.00 193.00 -33.00 128.00 33.00 129.00 32.00 96.00 32.00 97.00 32.00 675.00 0.00 129.00 32.00 161.00 -64.00 192.00 -32.00 386.00 0.00 450.00 32.00 129.00 -32.00 193.00 1093.00 -322.00 1222.00 1126.00 1350.00 1190.00 483.00 -129.00 128.00 32.00 32.00 32.00 65.00 65.00 32.00 64.00 32.00 0.00 161.00 -32.00 32.00 -65.00 32.00 0.00 64.00 33.00 65.00 -65.00 0.00 -32.00 32.00 -96.00 0.00 -33.00 64.00 0.00 97.00 -32.00 96.00 32.00 64.00 0.00 65.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 0.00 -64.00 65.00 -64.00 0.00 -97.00 64.00 -32.00 0.00 -96.00 32.00 -33.00 96.00 0.00 33.00 33.00 32.00 -65.00 64.00 -32.00 32.00 -96.00 -32.00 -65.00 97.00 33.00 128.00 -65.00 97.00 -64.00 32.00 32.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 33.00 32.00 32.00 -32.00 32.00 -65.00 32.00 0.00 64.00 -96.00 65.00 0.00 64.00 0.00 32.00 0.00 32.00 -32.00 32.00 32.00 32.00 32.00 33.00 32.00 32.00 -64.00 96.00 -65.00 129.00 129.00 -32.00 -96.00 64.00 0.00 32.00 -33.00 0.00 33.00 97.00 32.00 32.00 -32.00 32.00 96.00 32.00 -32.00 64.00 0.00 -32.00 32.00 32.00 64.00 65.00 0.00 32.00 65.00 32.00 32.00 -32.00 32.00 64.00 64.00 0.00 33.00 64.00 64.00 -32.00 96.00 0.00 32.00 97.00 0.00 0.00 33.00 -65.00 64.00 33.00 128.00 -33.00 0.00 -32.00 33.00 -32.00 -33.00 -32.00 33.00 32.00 64.00 -32.00 96.00 -64.00 0.00 0.00 33.00 -32.00 96.00 -33.00 0.00 -96.00 64.00 0.00 97.00 -64.00 96.00 32.00 32.00 32.00 33.00 64.00 160.00 32.00 32.00 0.00 65.00 33.00 0.00 32.00 32.00 64.00 -97.00 129.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 97.00 0.00 64.00 -32.00 0.00 -32.00 64.00 -64.00 33.00 -97.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 64.00 32.00 32.00 -32.00 -32.00 -65.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 -64.00 -129.00 64.00 -32.00 32.00 -97.00 32.00 -32.00 32.00 0.00 33.00 -64.00 96.00 -64.00 -32.00 -32.00 64.00 -65.00 64.00 -193.00 33.00 33.00 96.00 -65.00 129.00 0.00 32.00 0.00 32.00 32.00 -32.00 33.00 32.00 32.00 32.00 -32.00 65.00 32.00 96.00 -32.00 64.00 0.00 32.00 64.00 -32.00 32.00 65.00 0.00 64.00 -64.00 64.00 -129.00 32.00 -161.00 32.00 -32.00 33.00 -96.00 -97.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 -129.00 0.00 -128.00 33.00 -97.00 -33.00 -96.00 65.00 0.00 96.00 -32.00 0.00 -65.00 97.00 -64.00 64.00 64.00 32.00 0.00 32.00 -32.00 65.00 65.00 -32.00 96.00 32.00 32.00 64.00 -32.00 129.00 32.00 0.00 -64.00 64.00 -32.00 64.00 -97.00 97.00 -96.00 64.00 -97.00 -32.00 -32.00 -32.00 -96.00 64.00 -65.00 32.00 0.00 32.00 33.00 0.00 32.00 32.00 32.00 65.00 -32.00 32.00 -65.00 64.00 -64.00 -32.00 -32.00 64.00 0.00 32.00 0.00 0.00 96.00 65.00 0.00 32.00 0.00 0.00 -64.00 64.00 -96.00 -32.00 -32.00 193.00 -129.00 64.00 -97.00 32.00 33.00 65.00 128.00 -32.00 32.00 0.00 33.00 64.00 64.00 96.00 128.00 33.00 33.00 32.00 0.00 128.00 -65.00 0.00 -64.00 32.00 0.00 33.00 -96.00 0.00 -33.00 0.00 -32.00 32.00 -32.00 64.00 32.00 32.00 0.00 65.00 -32.00 32.00 0.00 64.00 -64.00 64.00 -97.00 32.00 0.00 65.00 -64.00 96.00 0.00 65.00 -96.00 -33.00 0.00 33.00 -65.00 -33.00 -32.00 65.00 -32.00 96.00 -161.00 97.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 32.00 96.00 -32.00 65.00 -65.00 64.00 -64.00 96.00 -64.00 32.00 32.00 33.00 0.00 96.00 -65.00 0.00 -32.00 64.00 -64.00 0.00 -32.00 65.00 -64.00 64.00 32.00 32.00 0.00 97.00 0.00 32.00 96.00 -65.00 97.00 -96.00 96.00 32.00 32.00 -32.00 32.00 -64.00 129.00 0.00 32.00 -32.00 97.00 32.00 32.00 64.00 0.00 96.00 0.00 33.00 32.00 32.00 64.00 32.00 32.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 -64.00 0.00 -64.00 32.00 -32.00 32.00 -33.00 0.00 -32.00 33.00 -32.00 32.00 -32.00 96.00 -64.00 0.00 -33.00 65.00 0.00 32.00 -64.00 64.00 -32.00 32.00 -32.00 65.00 32.00 32.00 0.00 96.00 -96.00 32.00 -65.00 65.00 -96.00 0.00 -65.00 32.00 0.00 64.00 0.00 64.00 -32.00 32.00 0.00 65.00 0.00 64.00 -32.00 0.00 -96.00 64.00 -65.00 33.00 -96.00 64.00 -64.00 32.00 -129.00 0.00 -32.00 32.00 -97.00 -32.00 0.00 -32.00 -96.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 0.00 0.00 -32.00 64.00 -161.00 0.00 -64.00 32.00 -32.00 -32.00 -64.00 32.00 0.00 0.00 -97.00 -64.00 0.00 0.00 -32.00 32.00 -161.00 0.00 -64.00 0.00 -96.00 0.00 -65.00 65.00 -32.00 32.00 -32.00 96.00 -32.00 0.00 -65.00 32.00 0.00 65.00 -64.00 32.00 -32.00 32.00 0.00 64.00 -64.00 32.00 32.00 32.00 -32.00 33.00 32.00 64.00 0.00 64.00 32.00 97.00 -64.00 32.00 0.00 32.00 32.00 32.00 32.00 161.00 0.00 32.00 96.00 64.00 -32.00 33.00 -96.00 128.00 0.00 64.00 32.00 33.00 -32.00 32.00 -65.00 32.00 0.00 64.00 33.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 0.00 -32.00 128.00 -97.00 33.00 33.00 32.00 32.00 -32.00 64.00 96.00 0.00 32.00 32.00 32.00 -32.00 0.00 -64.00 -32.00 -129.00 32.00 -32.00 32.00 0.00 33.00 0.00 32.00 0.00 64.00 -96.00 32.00 0.00 0.00 -33.00 0.00 -64.00 64.00 0.00 65.00 -64.00 32.00 0.00 96.00 -32.00 32.00 -33.00 97.00 0.00 129.00 65.00 0.00 32.00 96.00 0.00 64.00 -64.00 33.00 -65.00 32.00 0.00 96.00 65.00 32.00 0.00 32.00 -33.00 33.00 0.00 96.00 -64.00 32.00 0.00 0.00 -64.00 0.00 -32.00 32.00 -97.00 -32.00 0.00 0.00 -64.00 129.00 -64.00 32.00 64.00 257.00 161.00 129.00 64.00 96.00 -32.00 322.00 -97.00 128.00 0.00 33.00 32.00 96.00 0.00 0.00 65.00 0.00 96.00 32.00 97.00 65.00 128.00 64.00 65.00 96.00 96.00 65.00 97.00 225.00 128.00 193.00 -32.00 160.00 -64.00 129.00 32.00 386.00 64.00 64.00 0.00 64.00 97.00 0.00 32.00 322.00 96.00 96.00 65.00 33.00 0.00 64.00 64.00 32.00 161.00 -32.00 160.00 -129.00 290.00 32.00 514.00 -32.00 65.00 -128.00 96.00 -33.00 32.00 -32.00 64.00 -128.00 129.00 -32.00 129.00 0.00 64.00 0.00 32.00 128.00 64.00 97.00 129.00 32.00 64.00 64.00 33.00 32.00 128.00 65.00 64.00 96.00 65.00 96.00 96.00 129.00 65.00 32.00 0.00 32.00 32.00 65.00 160.00 0.00 33.00 -32.00 64.00 32.00 96.00 64.00 33.00 96.00 482.00 161.00 386.00 32.00 257.00 97.00 193.00 32.00 0.00 161.00 0.00 32.00 0.00 32.00 0.00 0.00 32.00 -32.00 96.00 0.00 65.00 32.00 32.00 -32.00 64.00 32.00 64.00 64.00 97.00 65.00 96.00 0.00 65.00 -32.00 128.00 -97.00 97.00 -64.00 225.00 32.00 128.00 64.00 65.00 32.00 32.00 0.00 193.00 -32.00 32.00 -161.00 129.00 -128.00 193.00 -32.00 96.00 -32.00 64.00 96.00 451.00 -32.00 192.00 -32.00 193.00 64.00 97.00 0.00 225.00 64.00 0.00 97.00 -65.00 96.00 129.00 32.00 32.00 33.00 129.00 32.00 64.00 -32.00 32.00 0.00 33.00 -33.00 64.00 -32.00 96.00 32.00 97.00 -32.00 193.00 65.00 160.00 0.00 161.00 64.00 65.00 64.00 128.00 0.00 129.00 0.00 128.00 0.00 129.00 64.00 96.00 97.00 65.00 96.00 32.00 32.00 64.00 97.00 32.00 96.00 290.00 0.00 32.00 0.00 32.00 0.00 96.00 -32.00 0.00 0.00 33.00 32.00 32.00 33.00 64.00 0.00 64.00 96.00 129.00 32.00 64.00 32.00 65.00 65.00 64.00 64.00 0.00 64.00 32.00 0.00 32.00 -32.00 65.00 32.00 96.00 -64.00 32.00 0.00 97.00 32.00 64.00 64.00 0.00 -32.00 64.00 -64.00 32.00 0.00 33.00 64.00 96.00 -32.00 32.00 32.00 32.00 32.00 32.00 33.00 0.00 32.00 -32.00 160.00 97.00 -32.00 32.00 0.00 129.00 -32.00 32.00 -32.00 32.00 32.00 96.00 -64.00 32.00 0.00 33.00 -32.00 0.00 -32.00 96.00 -65.00 32.00 -32.00 32.00 -128.00 65.00 0.00 64.00 32.00 0.00 -32.00 64.00 -33.00 -32.00 -32.00 32.00 0.00 65.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 32.00 97.00 -32.00 32.00 0.00 32.00 -32.00 32.00 32.00 64.00 0.00 65.00 32.00 32.00 64.00 64.00 0.00 64.00 -64.00 0.00 0.00 33.00 32.00 32.00 32.00 64.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 65.00 -64.00 32.00 -32.00 -32.00 0.00 32.00 -97.00 0.00 0.00 32.00 0.00 64.00 32.00 0.00 33.00 32.00 -33.00 33.00 -96.00 -33.00 -32.00 33.00 0.00 32.00 -64.00 32.00 -33.00 -64.00 -32.00 -33.00 -32.00 -32.00 0.00 -32.00 -128.00 0.00 -65.00 -32.00 0.00 32.00 -96.00 -64.00 -32.00 32.00 0.00 96.00 -65.00 33.00 0.00 96.00 32.00 0.00 33.00 97.00 -65.00 32.00 0.00 32.00 32.00 96.00 97.00 65.00 64.00 -32.00 32.00 64.00 33.00 0.00 32.00 32.00 0.00 -32.00 64.00 0.00 32.00 32.00 129.00 32.00 32.00 64.00 64.00 33.00 0.00 32.00 32.00 32.00 0.00 32.00 -32.00 32.00 64.00 32.00 0.00 32.00 33.00 0.00 96.00 129.00 32.00 64.00 65.00 0.00 32.00 65.00 64.00 64.00 0.00 32.00 64.00 -32.00 65.00 64.00 64.00 97.00 129.00 0.00 64.00 32.00 64.00 0.00 0.00 96.00 129.00 33.00 32.00 32.00 64.00 64.00 32.00 0.00 33.00 32.00 64.00 0.00 64.00 129.00 -32.00 64.00 32.00 32.00 32.00 32.00 33.00 33.00 64.00 32.00 64.00 0.00 64.00 0.00 97.00 96.00 96.00 97.00 32.00 64.00 97.00 225.00 0.00 96.00 129.00 129.00 32.00 96.00 32.00 161.00 129.00 161.00 64.00 97.00 32.00 128.00 32.00 97.00 129.00 32.00 128.00 0.00 65.00 0.00 64.00 -32.00 64.00 -65.00 64.00 -32.00 97.00 32.00 129.00 32.00 96.00 97.00 289.00 96.00 97.00 32.00 161.00 65.00 160.00 128.00 65.00 97.00 64.00 161.00 257.00 225.00 32.00 32.00 33.00 0.00 0.00 -129.00 32.00 -32.00 0.00 -64.00 -32.00 -32.00 -33.00 -65.00 -160.00 -64.00 -97.00 -193.00 0.00 -96.00 0.00 -33.00 -64.00 -32.00 -129.00 0.00 -32.00 -96.00 -129.00 -32.00 -32.00 0.00 0.00 -32.00 97.00 -129.00 32.00 -32.00 32.00 -64.00 0.00 -65.00 -129.00 -128.00 -96.00 -33.00 32.00 -64.00 64.00 -64.00 33.00 -161.00 32.00 -96.00 32.00 -129.00 32.00 -32.00 32.00 -32.00 -32.00 -97.00 32.00 -64.00 32.00 -64.00 33.00 -32.00 -33.00 -65.00 -32.00 -32.00 0.00 -32.00 65.00 -32.00 -65.00 -65.00 0.00 -32.00 32.00 -32.00 97.00 0.00 32.00 -64.00 0.00 -129.00 -32.00 -64.00 -64.00 -64.00 0.00 -33.00 0.00 -64.00 -65.00 0.00 -32.00 -32.00 32.00 -129.00 -32.00 -96.00 32.00 -32.00 0.00 -97.00 97.00 -64.00 0.00 -161.00 64.00 -64.00 0.00 -32.00 -32.00 -32.00 0.00 -129.00 0.00 -96.00 64.00 -161.00 97.00 -65.00 160.00 -128.00 33.00 -65.00 0.00 -96.00 64.00 -96.00 32.00 -33.00 96.00 0.00 33.00 -32.00 0.00 -32.00 0.00 -64.00 96.00 0.00 64.00 -64.00 129.00 -65.00 32.00 -32.00 65.00 -32.00 96.00 32.00 129.00 -129.00 64.00 0.00 32.00 0.00 225.00 -32.00 32.00 -32.00 0.00 -96.00 32.00 -32.00 -32.00 -65.00 0.00 -64.00 32.00 -32.00 33.00 0.00 64.00 32.00 96.00 0.00 97.00 32.00 0.00 -32.00 32.00 -32.00 96.00 -32.00 33.00 32.00 32.00 32.00 96.00 -32.00 32.00 0.00 129.00 64.00 32.00 129.00 32.00 32.00 65.00 0.00 32.00 0.00 128.00 64.00 129.00 0.00 64.00 0.00 32.00 -32.00 33.00 32.00 32.00 0.00 32.00 -32.00 64.00 0.00 32.00 129.00 -32.00 32.00 0.00 128.00 32.00 0.00 0.00 65.00 129.00 128.00 96.00 -64.00 33.00 32.00 32.00 32.00 0.00 65.00 0.00 32.00 32.00 96.00 161.00 0.00 64.00 32.00 0.00 161.00 0.00 32.00 0.00 32.00 32.00 0.00 32.00 33.00 32.00 32.00 33.00 -32.00 32.00 64.00 -32.00 64.00 -33.00 32.00 0.00 33.00 97.00 32.00 -32.00 64.00 32.00 32.00 -32.00 64.00 32.00 65.00 32.00 32.00 -32.00 64.00 96.00 -32.00 97.00 64.00 32.00 -32.00 161.00 64.00 32.00 0.00 -32.00 65.00 32.00 32.00 64.00 -64.00 97.00 -33.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 97.00 32.00 0.00 -96.00 160.00 64.00 0.00 32.00 65.00 0.00 32.00 32.00 32.00 0.00 129.00 -128.00 0.00 -32.00 -65.00 -32.00 65.00 -65.00 32.00 0.00 32.00 -64.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 64.00 -64.00 32.00 0.00 65.00 0.00 96.00 0.00 32.00 32.00 32.00 -32.00 32.00 -32.00 65.00 -32.00 96.00 0.00 32.00 -65.00 97.00 0.00 32.00 0.00 32.00 -32.00 129.00 -64.00 32.00 0.00 32.00 -64.00 0.00 -97.00 -32.00 0.00 32.00 -96.00 -64.00 -65.00 0.00 -96.00 -32.00 0.00 -32.00 0.00 -65.00 -64.00 -32.00 -32.00 -32.00 -65.00 -64.00 -32.00 0.00 -64.00 -65.00 32.00 -32.00 -64.00 32.00 -33.00 0.00 -64.00 -64.00 -32.00 0.00 -32.00 -32.00 -193.00 64.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 -64.00 193.00 -129.00 0.00 -64.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 32.00 -96.00 65.00 -32.00 0.00 -32.00 32.00 -65.00 -32.00 -96.00 0.00 -32.00 96.00 0.00 0.00 -129.00 32.00 -32.00 32.00 -32.00 -96.00 -129.00 32.00 -32.00 32.00 -129.00 -32.00 -96.00 32.00 -32.00 32.00 32.00 65.00 -32.00 32.00 -64.00 0.00 -65.00 32.00 -32.00 64.00 32.00 -32.00 -64.00 97.00 -97.00 32.00 0.00 32.00 -64.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 32.00 -64.00 64.00 -129.00 0.00 -128.00 129.00 -129.00 -32.00 -32.00 64.00 0.00 64.00 -96.00 97.00 -32.00 -32.00 -65.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 64.00 -65.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 96.00 -97.00 0.00 -32.00 161.00 -64.00 64.00 -32.00 65.00 -65.00 32.00 -321.00 64.00 -161.00 2862.00 0.00 1125.00 0.00 1415.00 0.00 0.00 1350.00 0.00 33.00 32.00 64.00 0.00 128.00 32.00 33.00 32.00 0.00 65.00 64.00 -33.00 289.00 33.00 32.00 0.00 65.00 -97.00 193.00 0.00 160.00 32.00 161.00 32.00 0.00 0.00 65.00 0.00 32.00 -32.00 64.00 0.00 225.00 129.00 97.00 129.00 64.00 0.00 32.00 96.00 0.00 0.00 32.00 32.00 -32.00 64.00 32.00 65.00 97.00 96.00 32.00 32.00 96.00 33.00 0.00 32.00 32.00 -32.00 161.00 32.00 129.00 32.00 32.00 32.00 64.00 0.00 97.00 0.00 32.00 -32.00 64.00 -64.00 0.00 0.00 97.00 32.00 32.00 0.00 96.00 -32.00 32.00 0.00 65.00 64.00 64.00 0.00 32.00 32.00 0.00 32.00 129.00 0.00 32.00 97.00 32.00 96.00 96.00 0.00 33.00 32.00 32.00 32.00 -32.00 65.00 32.00 96.00 193.00 64.00 32.00 65.00 0.00 0.00 32.00 64.00 64.00 32.00 0.00 0.00 33.00 32.00 32.00 0.00 32.00 193.00 128.00 0.00 33.00 32.00 0.00 33.00 -33.00 32.00 33.00 32.00 -33.00 0.00 65.00 32.00 64.00 32.00 0.00 32.00 64.00 32.00 0.00 0.00 -32.00 33.00 0.00 128.00 97.00 0.00 32.00 -96.00 32.00 32.00 64.00 -32.00 97.00 128.00 96.00 0.00 65.00 65.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 -33.00 64.00 33.00 33.00 -33.00 96.00 65.00 64.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 32.00 97.00 97.00 0.00 129.00 32.00 32.00 0.00 32.00 32.00 32.00 32.00 -32.00 32.00 96.00 97.00 33.00 -32.00 64.00 257.00 -32.00 0.00 -32.00 64.00 0.00 65.00 128.00 128.00 32.00 97.00 161.00 64.00 32.00 96.00 129.00 33.00 -32.00 128.00 -161.00 32.00 -32.00 0.00 -97.00 129.00 -32.00 64.00 -64.00 -32.00 -32.00 32.00 -65.00 193.00 -128.00 32.00 0.00 65.00 32.00 32.00 64.00 0.00 32.00 32.00 97.00 129.00 32.00 32.00 32.00 0.00 64.00 -32.00 97.00 64.00 64.00 0.00 97.00 -32.00 32.00 -97.00 289.00 0.00 97.00 -32.00 32.00 0.00 64.00 0.00 64.00 64.00 65.00 65.00 0.00 -32.00 32.00 0.00 64.00 96.00 32.00 0.00 97.00 32.00 0.00 64.00 -32.00 97.00 32.00 32.00 32.00 -32.00 64.00 32.00 32.00 32.00 -32.00 32.00 64.00 97.00 -64.00 64.00 0.00 97.00 32.00 0.00 32.00 96.00 33.00 0.00 32.00 32.00 0.00 32.00 96.00 33.00 32.00 32.00 65.00 32.00 0.00 32.00 0.00 0.00 64.00 0.00 32.00 32.00 0.00 64.00 -32.00 65.00 32.00 0.00 -32.00 96.00 32.00 64.00 -32.00 0.00 161.00 33.00 64.00 32.00 64.00 -32.00 65.00 64.00 0.00 64.00 96.00 97.00 -64.00 32.00 32.00 193.00 -32.00 0.00 -32.00 32.00 -32.00 64.00 64.00 -32.00 32.00 32.00 64.00 32.00 -32.00 97.00 64.00 64.00 0.00 32.00 0.00 32.00 97.00 65.00 0.00 -32.00 129.00 96.00 -65.00 32.00 65.00 32.00 32.00 65.00 -32.00 0.00 64.00 32.00 64.00 193.00 -64.00 0.00 32.00 -32.00 64.00 64.00 33.00 64.00 -97.00 65.00 0.00 0.00 64.00 32.00 33.00 32.00 0.00 0.00 64.00 -64.00 32.00 32.00 64.00 96.00 -64.00 97.00 96.00 64.00 -32.00 -32.00 -64.00 96.00 32.00 97.00 64.00 32.00 -96.00 128.00 0.00 0.00 32.00 33.00 0.00 32.00 -64.00 0.00 -32.00 32.00 0.00 32.00 32.00 -32.00 32.00 32.00 32.00 64.00 32.00 33.00 0.00 32.00 -32.00 64.00 -32.00 32.00 64.00 32.00 0.00 32.00 -32.00 33.00 64.00 64.00 -64.00 0.00 32.00 -32.00 129.00 32.00 32.00 0.00 32.00 64.00 0.00 97.00 0.00 64.00 129.00 96.00 -97.00 65.00 65.00 0.00 32.00 0.00 32.00 64.00 32.00 32.00 32.00 0.00 32.00 -64.00 65.00 32.00 96.00 64.00 65.00 97.00 225.00 32.00 32.00 193.00 -32.00 32.00 64.00 64.00 64.00 33.00 97.00 32.00 32.00 193.00 32.00 32.00 0.00 32.00 32.00 96.00 64.00 97.00 129.00 64.00 32.00 64.00 0.00 193.00 0.00 129.00 -64.00 64.00 0.00 65.00 64.00 32.00 32.00 32.00 97.00 0.00 96.00 0.00 32.00 -32.00 97.00 -97.00 96.00 -96.00 129.00 0.00 129.00 32.00 32.00 64.00 0.00 97.00 32.00 96.00 32.00 32.00 64.00 97.00 65.00 128.00 0.00 97.00 -33.00 64.00 0.00 32.00 33.00 33.00 -33.00 32.00 -128.00 0.00 -32.00 64.00 0.00 32.00 32.00 64.00 -32.00 33.00 -65.00 96.00 -32.00 64.00 -64.00 32.00 0.00 65.00 0.00 128.00 161.00 33.00 -32.00 64.00 -33.00 64.00 -32.00 32.00 32.00 65.00 65.00 64.00 0.00 96.00 -65.00 33.00 -64.00 64.00 -32.00 96.00 32.00 97.00 0.00 64.00 -32.00 32.00 -97.00 32.00 0.00 0.00 -64.00 33.00 -32.00 64.00 -32.00 129.00 -32.00 128.00 -161.00 97.00 32.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 64.00 0.00 65.00 0.00 64.00 0.00 225.00 -65.00 0.00 32.00 -32.00 65.00 -161.00 257.00 -129.00 225.00 -128.00 129.00 -129.00 96.00 -193.00 129.00 -321.00 161.00 -161.00 32.00 -96.00 64.00 -33.00 32.00 -96.00 225.00 -32.00 65.00 0.00 96.00 -32.00 64.00 -193.00 258.00 0.00 32.00 32.00 32.00 96.00 32.00 65.00 32.00 64.00 0.00 32.00 32.00 -128.00 290.00 -258.00 578.00 -257.00 515.00 -161.00 418.00 -353.00 772.00 -547.00 1221.00 -32.00 33.00 -193.00 450.00 -354.00 803.00 -128.00 322.00 -193.00 450.00 -322.00 708.00 -1093.00 2379.00 -1415.00 3087.00 -321.00 771.00 -418.00 901.00 -740.00 1672.00 -1897.00 4212.00 -32.00 64.00 -64.00 32.00 0.00 32.00 -33.00 0.00 -128.00 0.00 -32.00 32.00 -32.00 161.00 -33.00 64.00 -64.00 97.00 -96.00 32.00 -258.00 225.00 -96.00 161.00 -97.00 96.00 -64.00 129.00 0.00 418.00 64.00 96.00 33.00 161.00 128.00 354.00 129.00 161.00 64.00 32.00 32.00 96.00 33.00 0.00 128.00 32.00 64.00 65.00 65.00 64.00 160.00 289.00 97.00 97.00 96.00 32.00 33.00 0.00 64.00 129.00 32.00 64.00 64.00 32.00 33.00 129.00 96.00 96.00 64.00 257.00 -32.00 193.00 32.00 161.00 0.00 64.00 97.00 129.00 64.00 64.00 -32.00 33.00 -161.00 160.00 -161.00 322.00 -32.00 161.00 -32.00 160.00 32.00 129.00 32.00 161.00 33.00 64.00 0.00 96.00 -161.00 161.00 -65.00 129.00 -128.00 128.00 -32.00 33.00 0.00 128.00 0.00 65.00 -65.00 96.00 -160.00 161.00 -193.00 96.00 -32.00 65.00 -33.00 0.00 0.00 64.00 65.00 64.00 0.00 225.00 96.00 161.00 97.00 129.00 32.00 128.00 0.00 65.00 32.00 96.00 128.00 225.00 33.00 64.00 -33.00 97.00 33.00 96.00 -33.00 65.00 -128.00 64.00 -32.00 96.00 64.00 193.00 -64.00 97.00 32.00 193.00 -32.00 64.00 0.00 64.00 32.00 32.00 32.00 97.00 -32.00 32.00 -129.00 64.00 -32.00 65.00 32.00 64.00 -32.00 64.00 0.00 65.00 -128.00 160.00 -33.00 65.00 -64.00 96.00 -32.00 32.00 -64.00 129.00 32.00 96.00 32.00 65.00 0.00 64.00 -32.00 129.00 64.00 64.00 32.00 64.00 0.00 64.00 -32.00 33.00 -32.00 96.00 -32.00 64.00 -129.00 290.00 32.00 32.00 97.00 32.00 128.00 -64.00 33.00 0.00 128.00 -32.00 129.00 64.00 0.00 32.00 -32.00 32.00 -97.00 65.00 -193.00 192.00 -64.00 65.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -64.00 32.00 -289.00 32.00 -2830.00 0.00 -128.00 0.00 -3473.00 0.00 -2669.00 -32.00 -1543.00 0.00 -418.00 0.00 -64.00 0.00 -3473.00 0.00 -32.00 0.00 -64.00 0.00 -97.00 -193.00 -32.00 -32.00 32.00 -97.00 -32.00 -32.00 -64.00 -32.00 -32.00 -32.00 -97.00 -32.00 -128.00 32.00 -33.00 -32.00 -32.00 -97.00 -64.00 32.00 -64.00 0.00 -33.00 65.00 33.00 32.00 -33.00 32.00 0.00 32.00 -64.00 32.00 0.00 33.00 -64.00 64.00 -65.00 -32.00 -96.00 0.00 -96.00 -65.00 -33.00 0.00 -32.00 65.00 0.00 160.00 -64.00 65.00 -32.00 64.00 32.00 64.00 -32.00 32.00 0.00 33.00 0.00 96.00 -97.00 64.00 -96.00 0.00 0.00 65.00 -96.00 0.00 -65.00 32.00 -193.00 -64.00 -32.00 32.00 -32.00 -32.00 0.00 -97.00 -64.00 -96.00 -65.00 -33.00 -64.00 -128.00 -96.00 0.00 -97.00 0.00 -128.00 64.00 -129.00 -32.00 -129.00 -321.00 0.00 -33.00 32.00 -64.00 -32.00 -32.00 -64.00 -32.00 -32.00 -65.00 32.00 -64.00 -64.00 -96.00 -97.00 -65.00 32.00 -32.00 97.00 0.00 0.00 -64.00 -32.00 -64.00 -33.00 -97.00 -64.00 0.00 -128.00 0.00 -65.00 -64.00 -128.00 -32.00 -32.00 32.00 -65.00 32.00 -32.00 32.00 0.00 64.00 97.00 97.00 -33.00 64.00 -32.00 0.00 -225.00 -161.00 -32.00 -32.00 0.00 -32.00 64.00 -96.00 32.00 -65.00 -64.00 -64.00 32.00 -96.00 -32.00 -65.00 -64.00 0.00 -32.00 -32.00 -33.00 -64.00 0.00 -97.00 -32.00 -128.00 32.00 -129.00 33.00 -64.00 0.00 -64.00 -33.00 -33.00 -64.00 -32.00 -64.00 -32.00 -64.00 0.00 -129.00 -32.00 -64.00 -32.00 -32.00 -64.00 -65.00 -65.00 -32.00 32.00 -32.00 0.00 -32.00 65.00 -65.00 32.00 -96.00 96.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 -64.00 -65.00 0.00 32.00 -65.00 -32.00 -64.00 0.00 -64.00 -32.00 0.00 32.00 -65.00 -32.00 -96.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -33.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -65.00 -193.00 -96.00 -32.00 -32.00 32.00 -32.00 -64.00 -129.00 -65.00 -32.00 -32.00 -64.00 0.00 -33.00 0.00 -32.00 32.00 -32.00 33.00 -64.00 -33.00 -32.00 -32.00 -97.00 32.00 -32.00 -64.00 -64.00 0.00 -33.00 -96.00 -64.00 -65.00 -64.00 -96.00 -97.00 -193.00 -96.00 -129.00 0.00 -32.00 -64.00 -64.00 -97.00 -32.00 0.00 -32.00 -32.00 -33.00 0.00 -64.00 -64.00 -2186.00 0.00 -804.00 0.00 -161.00 0.00 -418.00 -32.00 -32.00 225.00 32.00 64.00 -32.00 64.00 -64.00 32.00 -32.00 97.00 -97.00 64.00 0.00 64.00 32.00 33.00 -32.00 96.00 -32.00 32.00 -96.00 161.00 -161.00 97.00 -97.00 96.00 0.00 32.00 129.00 225.00 -129.00 97.00 -64.00 96.00 0.00 64.00 -64.00 97.00 -33.00 32.00 -32.00 0.00 -160.00 -129.00 -97.00 -32.00 -96.00 -32.00 -32.00 0.00 -65.00 0.00 -32.00 64.00 -64.00 97.00 -32.00 32.00 -97.00 -32.00 -64.00 32.00 0.00 289.00 -161.00 97.00 0.00 64.00 129.00 32.00 64.00 65.00 0.00 64.00 -161.00 129.00 0.00 32.00 32.00 96.00 97.00 97.00 0.00 96.00 64.00 64.00 32.00 0.00 0.00 65.00 -96.00 160.00 -32.00 0.00 -65.00 -64.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 161.00 -65.00 32.00 0.00 64.00 -32.00 64.00 -32.00 33.00 32.00 32.00 -96.00 128.00 32.00 129.00 -193.00 -32.00 -32.00 0.00 -97.00 64.00 -64.00 0.00 -64.00 -32.00 -32.00 32.00 -65.00 97.00 0.00 160.00 65.00 129.00 -33.00 64.00 -96.00 97.00 0.00 32.00 0.00 32.00 32.00 97.00 0.00 128.00 32.00 225.00 0.00 65.00 -32.00 32.00 -128.00 0.00 -258.00 160.00 -160.00 -32.00 -161.00 32.00 -65.00 0.00 -64.00 -32.00 0.00 -32.00 64.00 -161.00 0.00 -64.00 0.00 -32.00 -64.00 0.00 -257.00 96.00 -129.00 65.00 -128.00 32.00 -65.00 32.00 -32.00 0.00 -64.00 0.00 -129.00 32.00 -193.00 -32.00 -64.00 0.00 -32.00 32.00 -64.00 32.00 -32.00 0.00 0.00 65.00 -65.00 32.00 -32.00 32.00 -64.00 0.00 -129.00 -32.00 -96.00 0.00 -65.00 32.00 -64.00 -97.00 -32.00 -32.00 -64.00 0.00 0.00 32.00 -129.00 97.00 -96.00 32.00 -33.00 0.00 -96.00 -129.00 -32.00 -32.00 -65.00 0.00 -64.00 0.00 -128.00 32.00 -129.00 97.00 -97.00 64.00 -32.00 65.00 -32.00 32.00 -64.00 -32.00 0.00 32.00 0.00 128.00 -64.00 225.00 -33.00 33.00 0.00 32.00 0.00 64.00 33.00 32.00 0.00 129.00 0.00 32.00 32.00 64.00 0.00 32.00 32.00 65.00 -32.00 32.00 -32.00 64.00 -33.00 97.00 0.00 32.00 -64.00 32.00 0.00 32.00 -64.00 64.00 -97.00 0.00 -64.00 65.00 0.00 64.00 -64.00 64.00 32.00 65.00 -64.00 0.00 -33.00 32.00 -32.00 32.00 -32.00 0.00 32.00 96.00 -64.00 65.00 0.00 32.00 -32.00 32.00 -129.00 0.00 -32.00 0.00 -32.00 32.00 32.00 64.00 -64.00 33.00 -65.00 0.00 -128.00 96.00 -65.00 -64.00 -96.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -65.00 64.00 -96.00 0.00 -64.00 -96.00 -33.00 0.00 -32.00 32.00 -128.00 -97.00 -161.00 0.00 -64.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 -160.00 -96.00 -33.00 0.00 -160.00 64.00 -65.00 64.00 -225.00 129.00 -32.00 64.00 -129.00 0.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -96.00 -64.00 -129.00 -64.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 65.00 0.00 128.00 -32.00 161.00 0.00 32.00 32.00 64.00 64.00 161.00 0.00 65.00 -32.00 -33.00 -64.00 33.00 -65.00 -65.00 -32.00 65.00 -96.00 32.00 -32.00 -32.00 0.00 -65.00 -33.00 -32.00 -32.00 0.00 -32.00 0.00 -161.00 -129.00 -64.00 -32.00 -96.00 0.00 -32.00 0.00 -97.00 32.00 -96.00 33.00 -32.00 32.00 -33.00 64.00 -32.00 0.00 -64.00 0.00 -32.00 0.00 -33.00 257.00 -64.00 32.00 -128.00 258.00 -33.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 64.00 -64.00 0.00 -33.00 32.00 -64.00 64.00 -32.00 0.00 -32.00 -96.00 -32.00 -32.00 -32.00 0.00 -33.00 -161.00 -64.00 32.00 -32.00 0.00 0.00 -96.00 -32.00 -33.00 -32.00 0.00 -97.00 -96.00 -64.00 0.00 -97.00 -32.00 -32.00 -64.00 -32.00 -97.00 -96.00 -64.00 -33.00 -32.00 -64.00 -33.00 0.00 -64.00 -96.00 0.00 -65.00 -32.00 -160.00 0.00 -33.00 0.00 0.00 32.00 -64.00 32.00 -193.00 0.00 -96.00 -32.00 -32.00 0.00 -33.00 0.00 -96.00 64.00 -32.00 0.00 -64.00 65.00 -161.00 -65.00 -65.00 0.00 -64.00 33.00 -32.00 0.00 -97.00 -97.00 -32.00 0.00 -96.00 0.00 32.00 97.00 -32.00 32.00 -97.00 0.00 -32.00 0.00 0.00 -65.00 -32.00 -32.00 -64.00 65.00 -97.00 -65.00 -64.00 32.00 -32.00 0.00 -161.00 -64.00 -32.00 32.00 0.00 32.00 96.00 65.00 33.00 96.00 0.00 225.00 -161.00 129.00 -64.00 129.00 -129.00 128.00 -129.00 97.00 -32.00 64.00 0.00 64.00 0.00 32.00 -193.00 33.00 -64.00 96.00 -129.00 32.00 -32.00 32.00 -96.00 -32.00 -65.00 64.00 -289.00 161.00 -32.00 97.00 -64.00 64.00 -97.00 64.00 -129.00 0.00 -64.00 0.00 -64.00 -32.00 -32.00 32.00 32.00 32.00 0.00 129.00 -129.00 97.00 -1222.00 -515.00 -193.00 -96.00 -160.00 -33.00 -129.00 -96.00 -772.00 -322.00 -2893.00 -1254.00 -1158.00 -514.00 -2058.00 -900.00 -514.00 -225.00 -129.00 -65.00 -160.00 -64.00 -965.00 -547.00 -900.00 -450.00 -1222.00 -643.00 -547.00 -289.00 -964.00 -547.00 -1769.00 -964.00 -772.00 -418.00 -353.00 -225.00 -450.00 -97.00 -515.00 -129.00 -1736.00 -353.00 -1447.00 -354.00 -1254.00 -289.00 -289.00 -65.00 -1962.00 -482.00 -96.00 0.00 -97.00 -32.00 -707.00 -225.00 -64.00 -32.00 -2219.00 -450.00 -161.00 -65.00 -836.00 -418.00 -2186.00 -996.00 -1961.00 -869.00 -290.00 -160.00z\"\n          },\n          rr: {\n            name: \"RR\",\n            path: \"M52171.00 10353.00l0.00 -64.00 0.00 -161.00 0.00 -129.00 -96.00 -128.00 -193.00 -193.00 -64.00 -97.00 -97.00 -64.00 0.00 -32.00 -64.00 -161.00 -161.00 -97.00 -64.00 -64.00 -225.00 -128.00 -97.00 -33.00 -96.00 -64.00 -97.00 -32.00 -128.00 32.00 -32.00 -32.00 -97.00 -129.00 -96.00 -160.00 -129.00 -97.00 -96.00 -96.00 -32.00 -225.00 -97.00 -33.00 -96.00 -64.00 -65.00 -128.00 -96.00 -65.00 -97.00 -64.00 0.00 -32.00 -32.00 -32.00 -32.00 -129.00 -96.00 -129.00 -65.00 -193.00 -64.00 -64.00 -96.00 -64.00 -129.00 -97.00 -129.00 -96.00 -64.00 -193.00 0.00 -161.00 32.00 -96.00 97.00 -97.00 64.00 0.00 418.00 193.00 161.00 161.00 160.00 354.00 161.00 128.00 161.00 65.00 64.00 -65.00 97.00 0.00 96.00 32.00 0.00 -32.00 225.00 -32.00 129.00 -64.00 129.00 0.00 64.00 0.00 257.00 32.00 129.00 -32.00 64.00 -32.00 96.00 0.00 0.00 64.00 33.00 0.00 64.00 0.00 96.00 32.00 65.00 32.00 128.00 0.00 97.00 -64.00 32.00 0.00 64.00 96.00 64.00 0.00 97.00 97.00 96.00 161.00 0.00 64.00 -32.00 32.00 32.00 64.00 97.00 97.00 129.00 257.00 64.00 32.00 0.00 32.00 161.00 33.00 0.00 128.00 64.00 32.00 32.00 0.00 64.00 129.00 32.00 0.00 0.00 -64.00 0.00 -33.00 33.00 33.00 32.00 -65.00 32.00 -32.00 32.00 -64.00 32.00 -32.00 65.00 0.00 32.00 -32.00 32.00 -33.00 32.00 33.00 129.00 -65.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 32.00 0.00 32.00 97.00 0.00 96.00 33.00 129.00 -33.00 64.00 0.00 96.00 33.00 -32.00 32.00 32.00 32.00 65.00 32.00 32.00 32.00 32.00 0.00 0.00 -32.00 65.00 0.00 64.00 32.00 96.00 -96.00 -64.00 0.00 -32.00 -32.00 0.00 -33.00 -64.00 0.00 -33.00 -32.00 0.00 -32.00 33.00 -32.00 0.00 -32.00 32.00 -97.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 -32.00 64.00 0.00 64.00 32.00 32.00 32.00 65.00 129.00 64.00 32.00 64.00 96.00 97.00 97.00 32.00 64.00 -32.00 64.00 32.00 32.00 -32.00 32.00 0.00 33.00 64.00 0.00 32.00 0.00 97.00 -33.00 0.00 97.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 32.00 32.00 0.00 65.00 65.00 32.00 -33.00 32.00 65.00 0.00 -65.00 -32.00 -96.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 0.00 65.00 32.00 32.00 0.00 64.00 32.00 64.00 -32.00 0.00 -64.00 0.00 -32.00 97.00 -97.00 32.00 -32.00 -64.00 -64.00 32.00 -32.00 0.00 -33.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 32.00 -64.00 -64.00 0.00 0.00 -32.00 96.00 -96.00 65.00 0.00 96.00 -33.00 193.00 129.00 97.00 0.00 64.00 -32.00 32.00 0.00 0.00 -32.00 32.00 -65.00 32.00 33.00 33.00 32.00 32.00 0.00 32.00 64.00 128.00 -32.00 33.00 32.00 128.00 32.00 64.00 0.00 -64.00 257.00 -64.00 65.00 0.00 160.00 32.00 33.00 0.00 32.00 96.00 128.00 65.00 0.00 64.00 0.00 64.00 33.00 65.00 0.00 64.00 0.00 64.00 0.00 97.00 64.00 96.00 64.00 0.00 64.00 65.00 65.00 32.00 0.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 129.00 -32.00 64.00 -65.00 0.00 65.00 32.00 192.00 97.00 0.00 96.00 65.00 0.00 64.00 97.00 64.00 64.00 33.00 32.00 64.00 0.00 32.00 0.00 32.00 -32.00 129.00 -129.00 32.00 -64.00 0.00 -96.00 64.00 0.00 97.00 -65.00 64.00 -64.00 96.00 -64.00 97.00 -129.00 64.00 32.00 32.00 0.00 33.00 0.00 32.00 64.00 32.00 0.00 32.00 97.00 32.00 0.00 32.00 64.00 97.00 65.00 32.00 0.00 0.00 -65.00 32.00 0.00 0.00 -64.00 32.00 -32.00 -32.00 -65.00 32.00 -96.00 -32.00 -96.00 0.00 -97.00 -32.00 -32.00 64.00 -64.00 0.00 -32.00 -64.00 0.00 -32.00 -65.00 -97.00 -64.00 0.00 -32.00 97.00 -65.00 -32.00 0.00 0.00 -32.00 -65.00 -32.00 -32.00 -64.00 0.00 -32.00 -64.00 -33.00 32.00 -128.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 96.00 -32.00 65.00 -64.00 32.00 -96.00 -97.00 -33.00 -32.00 -128.00 32.00 0.00 65.00 -65.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 161.00 64.00 64.00 -32.00 64.00 0.00 97.00 0.00 0.00 -32.00 32.00 -32.00 97.00 32.00 96.00 0.00 32.00 32.00 64.00 0.00 33.00 64.00 0.00 33.00 32.00 0.00 96.00 0.00 -32.00 -33.00 0.00 -64.00 64.00 -32.00 33.00 0.00 32.00 -32.00 -32.00 -65.00 0.00 -96.00 -33.00 32.00 -64.00 -32.00 32.00 0.00 32.00 -64.00 -32.00 -65.00 65.00 0.00 96.00 -32.00 0.00 -32.00 -64.00 -64.00 128.00 32.00 0.00 -32.00 32.00 -32.00 33.00 0.00 32.00 32.00 32.00 32.00 32.00 -64.00 32.00 0.00 32.00 0.00 0.00 -65.00 33.00 0.00 -33.00 -32.00 -64.00 0.00 32.00 -64.00 32.00 -32.00 33.00 32.00 32.00 0.00 0.00 -32.00 32.00 0.00 96.00 0.00 0.00 -32.00 32.00 32.00 33.00 0.00 32.00 32.00 32.00 0.00 0.00 -32.00 96.00 96.00 32.00 0.00 0.00 -32.00 65.00 0.00 0.00 97.00 32.00 0.00 64.00 64.00 32.00 -32.00 33.00 0.00 0.00 32.00 64.00 0.00 64.00 -32.00 32.00 64.00 129.00 0.00 64.00 64.00 32.00 -32.00 33.00 32.00 64.00 32.00 96.00 -32.00 0.00 32.00 0.00 65.00 97.00 32.00 32.00 0.00 32.00 0.00 64.00 32.00 0.00 32.00 33.00 -32.00 32.00 -32.00 96.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -65.00 64.00 0.00 33.00 -32.00 0.00 -32.00 32.00 0.00 32.00 32.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 0.00 -33.00 64.00 -32.00 97.00 65.00 32.00 -33.00 32.00 -32.00 0.00 32.00 0.00 33.00 32.00 -33.00 64.00 0.00 33.00 -64.00 32.00 32.00 32.00 -64.00 32.00 -32.00 32.00 0.00 -32.00 32.00 0.00 64.00 32.00 32.00 129.00 129.00 32.00 96.00 64.00 33.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 33.00 -128.00 0.00 -33.00 64.00 0.00 32.00 -32.00 64.00 32.00 32.00 0.00 33.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 0.00 64.00 0.00 0.00 32.00 64.00 32.00 65.00 0.00 0.00 -32.00 32.00 -96.00 -32.00 -65.00 64.00 0.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 64.00 -33.00 0.00 33.00 33.00 0.00 64.00 0.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 129.00 -32.00 32.00 -64.00 32.00 0.00 0.00 32.00 -32.00 32.00 32.00 32.00 96.00 -32.00 65.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 0.00 32.00 65.00 0.00 0.00 64.00 32.00 0.00 32.00 0.00 32.00 -64.00 64.00 -32.00 33.00 64.00 64.00 0.00 96.00 -32.00 33.00 0.00 32.00 -32.00 0.00 -32.00 64.00 -32.00 64.00 -65.00 33.00 0.00 0.00 -32.00 32.00 -96.00 32.00 -32.00 -64.00 -33.00 0.00 -32.00 -33.00 -64.00 33.00 0.00 32.00 -32.00 -32.00 -97.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 128.00 -33.00 65.00 -64.00 32.00 0.00 32.00 -64.00 64.00 0.00 32.00 0.00 32.00 32.00 -32.00 32.00 65.00 0.00 0.00 -32.00 32.00 0.00 64.00 0.00 0.00 32.00 161.00 0.00 96.00 32.00 65.00 0.00 0.00 -64.00 96.00 0.00 -32.00 -64.00 64.00 -33.00 0.00 -32.00 129.00 0.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 -96.00 -32.00 0.00 -65.00 -33.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 32.00 -96.00 96.00 0.00 0.00 -33.00 33.00 33.00 64.00 0.00 32.00 32.00 32.00 0.00 0.00 -65.00 64.00 33.00 33.00 64.00 32.00 -64.00 128.00 64.00 0.00 -64.00 65.00 96.00 32.00 -32.00 32.00 0.00 64.00 64.00 33.00 32.00 32.00 0.00 0.00 32.00 64.00 0.00 0.00 65.00 64.00 -65.00 32.00 0.00 0.00 -32.00 97.00 -32.00 64.00 -64.00 64.00 32.00 33.00 0.00 32.00 -32.00 96.00 0.00 129.00 0.00 0.00 32.00 64.00 0.00 64.00 0.00 0.00 -32.00 33.00 -97.00 96.00 0.00 32.00 -32.00 32.00 -64.00 -32.00 -97.00 97.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 -32.00 64.00 -64.00 -32.00 -33.00 0.00 -64.00 -65.00 -32.00 0.00 -64.00 33.00 0.00 64.00 0.00 0.00 -32.00 64.00 -33.00 32.00 -64.00 0.00 -96.00 65.00 -65.00 96.00 0.00 32.00 33.00 97.00 32.00 96.00 -129.00 32.00 0.00 65.00 -32.00 -33.00 -32.00 33.00 -32.00 96.00 0.00 0.00 -33.00 129.00 -32.00 64.00 32.00 32.00 -32.00 32.00 -64.00 32.00 0.00 33.00 -32.00 -33.00 0.00 33.00 -32.00 -33.00 -33.00 33.00 -32.00 64.00 -64.00 64.00 0.00 32.00 -32.00 0.00 -32.00 65.00 -32.00 0.00 -33.00 64.00 -64.00 32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 -33.00 129.00 -32.00 0.00 -64.00 64.00 -64.00 32.00 -33.00 65.00 0.00 32.00 -160.00 -32.00 -65.00 -33.00 -128.00 -64.00 -32.00 0.00 -65.00 -64.00 -64.00 -32.00 -96.00 -65.00 -33.00 32.00 -128.00 -32.00 -65.00 32.00 -64.00 0.00 -32.00 -32.00 -32.00 -32.00 64.00 0.00 -32.00 -32.00 -96.00 32.00 -65.00 -32.00 -64.00 -96.00 -64.00 0.00 -65.00 -33.00 -32.00 -32.00 0.00 -32.00 0.00 -96.00 0.00 -65.00 -32.00 65.00 -96.00 64.00 0.00 64.00 -33.00 65.00 -32.00 96.00 32.00 32.00 0.00 64.00 33.00 65.00 32.00 64.00 -32.00 32.00 32.00 32.00 -32.00 33.00 0.00 0.00 64.00 96.00 64.00 129.00 0.00 32.00 -32.00 64.00 -32.00 129.00 32.00 96.00 0.00 32.00 0.00 32.00 0.00 65.00 0.00 32.00 96.00 32.00 0.00 96.00 -64.00 0.00 -64.00 0.00 -32.00 65.00 32.00 96.00 -64.00 65.00 32.00 0.00 32.00 0.00 32.00 64.00 -32.00 32.00 0.00 64.00 0.00 33.00 0.00 64.00 0.00 32.00 -97.00 129.00 0.00 0.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -64.00 96.00 0.00 65.00 -32.00 32.00 -33.00 64.00 -32.00 64.00 32.00 33.00 65.00 0.00 64.00 96.00 64.00 64.00 -32.00 97.00 -64.00 32.00 96.00 129.00 161.00 32.00 225.00 0.00 32.00 96.00 0.00 32.00 33.00 32.00 32.00 0.00 32.00 33.00 64.00 32.00 0.00 96.00 64.00 0.00 33.00 32.00 -33.00 65.00 33.00 32.00 0.00 32.00 32.00 -32.00 32.00 32.00 32.00 -64.00 64.00 64.00 33.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 64.00 64.00 129.00 -32.00 32.00 32.00 32.00 -32.00 65.00 32.00 64.00 -32.00 0.00 0.00 64.00 -32.00 65.00 -32.00 64.00 -32.00 321.00 -33.00 33.00 -32.00 32.00 -32.00 64.00 32.00 32.00 -32.00 64.00 -32.00 33.00 64.00 64.00 0.00 64.00 0.00 97.00 -64.00 128.00 64.00 33.00 0.00 32.00 -161.00 160.00 -64.00 97.00 -32.00 32.00 32.00 32.00 0.00 64.00 0.00 65.00 -128.00 64.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 -64.00 32.00 32.00 97.00 -64.00 0.00 32.00 64.00 -64.00 0.00 0.00 -32.00 -33.00 0.00 -32.00 32.00 0.00 64.00 32.00 33.00 -32.00 128.00 32.00 32.00 97.00 0.00 32.00 0.00 129.00 0.00 -33.00 -64.00 97.00 -32.00 0.00 32.00 0.00 32.00 64.00 -32.00 32.00 32.00 0.00 32.00 0.00 32.00 32.00 0.00 97.00 0.00 32.00 33.00 64.00 -33.00 33.00 33.00 32.00 -33.00 32.00 0.00 32.00 65.00 64.00 32.00 33.00 -32.00 0.00 32.00 32.00 0.00 -32.00 -32.00 32.00 -97.00 32.00 0.00 0.00 32.00 96.00 33.00 32.00 -33.00 0.00 33.00 65.00 32.00 -32.00 32.00 96.00 32.00 -32.00 32.00 32.00 32.00 64.00 -64.00 65.00 0.00 32.00 -64.00 0.00 32.00 64.00 32.00 -32.00 64.00 32.00 32.00 32.00 0.00 32.00 0.00 65.00 -32.00 32.00 32.00 64.00 33.00 32.00 -33.00 0.00 -64.00 32.00 0.00 33.00 97.00 64.00 0.00 0.00 32.00 64.00 0.00 65.00 96.00 64.00 0.00 64.00 65.00 32.00 32.00 97.00 96.00 64.00 -32.00 64.00 64.00 -64.00 33.00 32.00 96.00 0.00 32.00 -64.00 32.00 -64.00 65.00 0.00 64.00 -33.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 32.00 0.00 32.00 0.00 33.00 64.00 0.00 32.00 32.00 -128.00 160.00 32.00 33.00 0.00 96.00 32.00 97.00 0.00 32.00 64.00 64.00 33.00 32.00 96.00 65.00 193.00 0.00 129.00 64.00 -33.00 96.00 -32.00 32.00 -96.00 193.00 32.00 0.00 64.00 65.00 65.00 0.00 0.00 32.00 0.00 64.00 96.00 32.00 0.00 65.00 -32.00 0.00 -32.00 -33.00 0.00 33.00 32.00 32.00 64.00 -65.00 0.00 65.00 -32.00 32.00 32.00 32.00 32.00 -32.00 33.00 0.00 -33.00 32.00 33.00 32.00 -65.00 65.00 0.00 32.00 65.00 0.00 32.00 32.00 32.00 -64.00 64.00 0.00 0.00 32.00 97.00 0.00 32.00 64.00 0.00 32.00 32.00 32.00 -64.00 32.00 0.00 33.00 0.00 32.00 -33.00 0.00 -32.00 -32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 -96.00 0.00 0.00 128.00 -65.00 -64.00 33.00 64.00 -65.00 0.00 -32.00 33.00 0.00 96.00 0.00 32.00 32.00 0.00 0.00 32.00 0.00 65.00 32.00 32.00 0.00 64.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 32.00 33.00 0.00 32.00 -32.00 32.00 -32.00 -64.00 -32.00 64.00 -65.00 32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -65.00 32.00 -32.00 64.00 -64.00 33.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 32.00 32.00 -32.00 32.00 32.00 65.00 -32.00 64.00 -64.00 32.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -33.00 32.00 -32.00 33.00 -32.00 32.00 0.00 32.00 -96.00 0.00 -32.00 32.00 -33.00 97.00 -64.00 0.00 32.00 32.00 -64.00 0.00 -64.00 64.00 -33.00 -32.00 -32.00 32.00 -64.00 -32.00 0.00 64.00 -32.00 -32.00 -65.00 32.00 -64.00 0.00 0.00 64.00 -32.00 65.00 -32.00 32.00 32.00 0.00 0.00 32.00 -64.00 32.00 32.00 32.00 96.00 0.00 0.00 65.00 32.00 64.00 97.00 32.00 64.00 64.00 0.00 97.00 -96.00 32.00 0.00 32.00 64.00 0.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 65.00 -33.00 64.00 0.00 32.00 0.00 64.00 33.00 0.00 64.00 -32.00 32.00 0.00 -32.00 97.00 32.00 160.00 32.00 33.00 0.00 64.00 -32.00 32.00 -64.00 -32.00 -32.00 32.00 32.00 97.00 -32.00 32.00 -33.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 129.00 -64.00 0.00 -32.00 96.00 0.00 65.00 -33.00 32.00 65.00 64.00 -65.00 32.00 -96.00 0.00 0.00 32.00 -32.00 129.00 64.00 161.00 -32.00 32.00 -64.00 0.00 32.00 0.00 32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 32.00 0.00 32.00 64.00 0.00 0.00 65.00 -32.00 0.00 -32.00 -33.00 -32.00 65.00 -65.00 32.00 0.00 64.00 -64.00 32.00 0.00 33.00 32.00 96.00 -32.00 64.00 -32.00 65.00 0.00 64.00 64.00 64.00 -32.00 32.00 -32.00 161.00 0.00 32.00 -97.00 129.00 -32.00 96.00 65.00 32.00 0.00 33.00 -65.00 64.00 32.00 64.00 -32.00 32.00 32.00 65.00 -32.00 32.00 0.00 32.00 0.00 161.00 -32.00 96.00 32.00 193.00 -32.00 64.00 32.00 193.00 0.00 33.00 65.00 96.00 32.00 32.00 -32.00 65.00 0.00 32.00 64.00 64.00 0.00 64.00 32.00 32.00 -64.00 0.00 0.00 65.00 32.00 0.00 96.00 64.00 65.00 64.00 -33.00 65.00 97.00 128.00 -32.00 32.00 0.00 65.00 32.00 32.00 0.00 32.00 96.00 64.00 -32.00 65.00 32.00 32.00 0.00 32.00 -32.00 96.00 64.00 65.00 -32.00 0.00 0.00 64.00 -64.00 64.00 0.00 32.00 64.00 129.00 65.00 64.00 32.00 -64.00 32.00 64.00 64.00 65.00 0.00 32.00 32.00 0.00 32.00 64.00 33.00 -32.00 32.00 -32.00 0.00 64.00 96.00 32.00 32.00 65.00 65.00 64.00 32.00 0.00 32.00 -32.00 97.00 0.00 64.00 0.00 0.00 32.00 64.00 32.00 -32.00 64.00 64.00 65.00 0.00 64.00 -64.00 32.00 32.00 129.00 -32.00 0.00 32.00 32.00 -32.00 64.00 -32.00 32.00 0.00 32.00 0.00 33.00 0.00 32.00 0.00 64.00 64.00 64.00 -32.00 33.00 32.00 32.00 0.00 32.00 0.00 64.00 -64.00 32.00 -32.00 97.00 32.00 128.00 32.00 0.00 0.00 33.00 32.00 32.00 -32.00 32.00 64.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 0.00 97.00 -32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 97.00 0.00 96.00 -65.00 32.00 33.00 65.00 -33.00 32.00 65.00 96.00 -32.00 97.00 32.00 64.00 32.00 0.00 32.00 0.00 32.00 0.00 64.00 -32.00 97.00 0.00 32.00 64.00 32.00 32.00 64.00 -64.00 -32.00 -64.00 32.00 -32.00 0.00 32.00 65.00 96.00 -32.00 97.00 0.00 32.00 -33.00 32.00 0.00 -32.00 -64.00 32.00 -32.00 64.00 32.00 32.00 -32.00 0.00 -32.00 65.00 32.00 32.00 -32.00 32.00 0.00 32.00 96.00 0.00 32.00 65.00 0.00 32.00 33.00 -32.00 96.00 32.00 32.00 32.00 65.00 64.00 32.00 -32.00 96.00 0.00 32.00 -32.00 65.00 -32.00 64.00 64.00 32.00 -32.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 33.00 32.00 0.00 65.00 64.00 64.00 0.00 64.00 32.00 0.00 0.00 -32.00 32.00 -32.00 32.00 32.00 0.00 129.00 0.00 32.00 32.00 64.00 97.00 32.00 96.00 0.00 33.00 129.00 64.00 32.00 -32.00 97.00 32.00 64.00 64.00 0.00 65.00 -32.00 0.00 32.00 0.00 64.00 64.00 65.00 0.00 32.00 32.00 0.00 -32.00 64.00 64.00 0.00 32.00 0.00 0.00 32.00 32.00 -32.00 0.00 -64.00 97.00 0.00 32.00 32.00 0.00 32.00 32.00 129.00 -32.00 32.00 0.00 64.00 64.00 0.00 32.00 -32.00 33.00 0.00 64.00 64.00 32.00 32.00 -32.00 33.00 32.00 32.00 32.00 96.00 -32.00 32.00 32.00 0.00 32.00 32.00 33.00 33.00 32.00 32.00 96.00 0.00 32.00 64.00 97.00 32.00 0.00 -32.00 64.00 0.00 32.00 0.00 65.00 64.00 32.00 33.00 32.00 0.00 32.00 32.00 32.00 0.00 64.00 0.00 65.00 32.00 64.00 -32.00 32.00 32.00 32.00 -32.00 33.00 64.00 32.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 64.00 129.00 -32.00 64.00 32.00 65.00 0.00 0.00 -32.00 32.00 32.00 32.00 65.00 32.00 32.00 32.00 -32.00 32.00 0.00 225.00 -33.00 0.00 65.00 -32.00 32.00 0.00 32.00 32.00 32.00 65.00 32.00 64.00 97.00 -64.00 32.00 0.00 32.00 -32.00 32.00 64.00 32.00 0.00 4727.00 -1415.00 0.00 -1125.00 0.00 -2862.00 0.00 -64.00 161.00 -32.00 321.00 -65.00 65.00 -64.00 32.00 -161.00 64.00 0.00 32.00 -96.00 97.00 0.00 64.00 32.00 32.00 32.00 32.00 -64.00 65.00 0.00 64.00 0.00 32.00 -32.00 32.00 32.00 65.00 -97.00 32.00 -64.00 96.00 -64.00 0.00 32.00 32.00 -129.00 129.00 0.00 128.00 -64.00 129.00 -32.00 64.00 -32.00 65.00 32.00 32.00 0.00 32.00 32.00 32.00 -32.00 64.00 -32.00 0.00 -97.00 97.00 32.00 64.00 -64.00 -32.00 -32.00 32.00 0.00 65.00 -32.00 64.00 -65.00 32.00 -32.00 -32.00 -32.00 32.00 32.00 96.00 -32.00 129.00 -32.00 32.00 96.00 129.00 -32.00 32.00 -32.00 32.00 0.00 129.00 -96.00 0.00 0.00 32.00 32.00 96.00 -32.00 65.00 0.00 32.00 -65.00 32.00 -32.00 96.00 -32.00 33.00 32.00 32.00 -32.00 32.00 32.00 32.00 0.00 64.00 -193.00 129.00 0.00 64.00 -32.00 65.00 0.00 32.00 -64.00 32.00 32.00 193.00 0.00 32.00 64.00 32.00 0.00 64.00 -32.00 33.00 32.00 64.00 65.00 -32.00 0.00 64.00 64.00 32.00 32.00 65.00 32.00 32.00 65.00 64.00 32.00 0.00 32.00 0.00 0.00 96.00 64.00 65.00 -32.00 96.00 32.00 0.00 0.00 97.00 -32.00 64.00 -32.00 0.00 -129.00 64.00 -32.00 32.00 -32.00 0.00 -97.00 0.00 -32.00 65.00 -96.00 0.00 -65.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -96.00 0.00 -65.00 0.00 -32.00 0.00 -64.00 64.00 -32.00 33.00 32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 64.00 -32.00 0.00 -65.00 65.00 65.00 32.00 0.00 32.00 -129.00 128.00 -32.00 0.00 -32.00 -32.00 -65.00 0.00 0.00 -32.00 -160.00 -64.00 0.00 96.00 -97.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -97.00 33.00 -64.00 64.00 -32.00 -32.00 32.00 -65.00 -32.00 0.00 -161.00 -64.00 -32.00 32.00 -97.00 -64.00 -96.00 32.00 32.00 -64.00 -32.00 -32.00 -32.00 -65.00 32.00 -64.00 -32.00 -32.00 32.00 -64.00 -97.00 -32.00 0.00 -33.00 33.00 -32.00 32.00 -64.00 -32.00 -64.00 -33.00 32.00 -32.00 -32.00 -32.00 -33.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -161.00 -64.00 -32.00 -161.00 0.00 -32.00 -96.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 -33.00 -32.00 -96.00 64.00 -129.00 -128.00 0.00 -65.00 -32.00 0.00 0.00 -128.00 32.00 -32.00 -32.00 -129.00 -64.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 -32.00 32.00 -64.00 0.00 -129.00 0.00 -128.00 -64.00 -32.00 0.00 -65.00 0.00 -32.00 -32.00 -32.00 -129.00 -129.00 -64.00 -32.00 0.00 -96.00 32.00 -32.00 -32.00 -33.00 -32.00 -96.00 32.00 -32.00 32.00 0.00 32.00 -97.00 -32.00 -96.00 0.00 -64.00 -32.00 -33.00 0.00 -32.00 32.00 0.00 64.00 32.00 65.00 -32.00 32.00 0.00 96.00 -32.00 32.00 -225.00 32.00 -32.00 0.00 -64.00 0.00 -129.00 129.00 -96.00 -32.00 -65.00 32.00 -32.00 32.00 -129.00 65.00 -64.00 64.00 -96.00 0.00 0.00 64.00 0.00 32.00 -33.00 32.00 -96.00 0.00 -32.00 33.00 -64.00 96.00 0.00 96.00 -33.00 65.00 -160.00 128.00 -97.00 65.00 -64.00 161.00 0.00 96.00 0.00 129.00 32.00 32.00 0.00 32.00 -64.00 64.00 0.00 161.00 -97.00 64.00 0.00 97.00 -32.00 32.00 32.00 96.00 -32.00 129.00 32.00 32.00 65.00 0.00 0.00 64.00 0.00 33.00 64.00 64.00 32.00 64.00 0.00 129.00 -32.00 64.00 -97.00 0.00 -32.00 32.00 0.00 32.00 65.00 65.00 -65.00 32.00 0.00 32.00 32.00 32.00 33.00 65.00 -33.00 32.00 -32.00 64.00 -32.00 64.00 32.00 97.00 -32.00 32.00 -32.00 32.00 -32.00 129.00 -32.00 96.00 -33.00 161.00 -64.00 64.00 -32.00 64.00 96.00 33.00 129.00 128.00 0.00 65.00 -32.00 64.00 -32.00 32.00 -97.00 129.00 0.00 32.00 32.00 0.00 129.00 32.00 32.00 96.00 129.00 0.00 64.00 32.00 0.00 33.00 0.00 96.00 97.00 193.00 160.00 64.00 33.00 65.00 32.00 32.00 0.00 64.00 -32.00 32.00 0.00 129.00 -33.00 0.00 -32.00 -32.00 -257.00 -225.00 -64.00 -161.00 -65.00 -97.00 -160.00 -128.00 -161.00 -65.00 -97.00 -32.00 -289.00 -96.00 -96.00 -97.00 -129.00 -32.00 -97.00 -32.00 -64.00 32.00 -64.00 65.00 -64.00 32.00 -65.00 0.00 -128.00 0.00 -129.00 -32.00 -32.00 -97.00 -32.00 -128.00 -64.00 -97.00 -129.00 -161.00 -32.00 -161.00 -32.00 -96.00 -129.00 -129.00 0.00 -96.00 -97.00 -225.00 -32.00 -64.00 -96.00 -97.00 -97.00 -96.00 -64.00 0.00 -64.00 0.00 -64.00 -32.00 -33.00 -33.00 -32.00 -32.00 -32.00 -32.00 32.00 -64.00 -64.00 -129.00 -64.00 0.00 -33.00 -32.00 -32.00 0.00 -64.00 -64.00 -32.00 -32.00 -129.00 -33.00 0.00 -96.00 -64.00 0.00 -64.00 -32.00 -129.00 0.00 -64.00 -97.00 -65.00 -64.00 -64.00 32.00 0.00 -32.00 -64.00 -64.00 -32.00 -65.00 -65.00 0.00 -32.00 -64.00 -96.00 -129.00 -33.00 0.00 0.00 -32.00 -64.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -64.00 -33.00 -32.00 -64.00 -129.00 -32.00 -32.00 -32.00 -64.00 0.00 0.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 -64.00 -64.00 32.00 -97.00 -65.00 -32.00 -96.00 0.00 -32.00 65.00 -32.00 -33.00 -97.00 -32.00 0.00 0.00 -96.00 65.00 -33.00 0.00 -96.00 32.00 -32.00 96.00 64.00 0.00 -32.00 65.00 32.00 128.00 0.00 0.00 32.00 32.00 32.00 32.00 33.00 33.00 64.00 64.00 -32.00 0.00 -32.00 32.00 -33.00 96.00 33.00 33.00 -33.00 -33.00 -32.00 -32.00 0.00 0.00 -64.00 0.00 -32.00 97.00 0.00 0.00 -32.00 32.00 32.00 64.00 -32.00 0.00 -65.00 32.00 0.00 33.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -64.00 -32.00 -32.00 0.00 -33.00 64.00 0.00 0.00 -64.00 -64.00 -64.00 -32.00 -32.00 0.00 -65.00 -32.00 -64.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -97.00 32.00 -32.00 32.00 0.00 32.00 -64.00 0.00 -65.00 32.00 -32.00 33.00 32.00 32.00 -64.00 -32.00 0.00 0.00 -64.00 128.00 -65.00 32.00 -32.00 65.00 -32.00 32.00 -96.00 32.00 0.00 0.00 -33.00 64.00 -32.00 -32.00 -96.00 32.00 -32.00 32.00 -32.00 0.00 -129.00 32.00 -32.00 -160.00 -97.00 -32.00 32.00 -33.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 -32.00 -64.00 -96.00 0.00 -33.00 64.00 -32.00 32.00 -64.00 -64.00 0.00 -32.00 -64.00 0.00 -97.00 64.00 -32.00 -32.00 -96.00 32.00 -65.00 0.00 -32.00 -64.00 -32.00 -64.00 0.00 -65.00 -64.00 -32.00 -65.00 -32.00 -64.00 -96.00 -129.00 0.00 -64.00 -33.00 -64.00 -32.00 -32.00 0.00 -33.00 32.00 0.00 0.00 -96.00 0.00 -32.00 0.00 -32.00 -96.00 -290.00 -97.00 -32.00 -32.00 -64.00 -96.00 -32.00 -97.00 -65.00 -64.00 -96.00 0.00 -129.00 0.00 -128.00 0.00 -129.00 -64.00 -128.00 -64.00 -65.00 0.00 -161.00 -65.00 -160.00 32.00 -193.00 -32.00 -97.00 32.00 -96.00 33.00 -64.00 0.00 -33.00 32.00 -32.00 -32.00 -64.00 -33.00 -129.00 -32.00 -32.00 -96.00 -129.00 -97.00 65.00 -64.00 0.00 0.00 -225.00 -64.00 -97.00 32.00 -193.00 32.00 -192.00 -96.00 -451.00 32.00 -64.00 32.00 -96.00 128.00 -193.00 161.00 -129.00 32.00 -32.00 0.00 -193.00 -32.00 -32.00 -64.00 -65.00 -32.00 -128.00 64.00 -225.00 97.00 -97.00 32.00 -128.00 0.00 -65.00 -65.00 -96.00 -64.00 -97.00 -32.00 -64.00 32.00 -64.00 -32.00 -32.00 0.00 -65.00 32.00 -96.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -161.00 0.00 -32.00 0.00 -97.00 -193.00 -32.00 -257.00 -161.00 -386.00 -96.00 -482.00 -64.00 -33.00 -32.00 -96.00 32.00 -64.00 0.00 -33.00 -65.00 -160.00 -32.00 -32.00 -32.00 0.00 -129.00 -65.00 -96.00 -96.00 -96.00 -65.00 -65.00 -64.00 -32.00 -128.00 -64.00 -33.00 -32.00 -64.00 -97.00 -129.00 -128.00 -64.00 0.00 -32.00 0.00 -64.00 32.00 -129.00 128.00 -129.00 32.00 -64.00 33.00 -32.00 128.00 -96.00 32.00 -65.00 -32.00 -514.00 129.00 -290.00 32.00 -160.00 -32.00 -161.00 -64.00 -64.00 -33.00 0.00 -96.00 -65.00 -322.00 -96.00 0.00 -32.00 -64.00 -97.00 -64.00 0.00 -386.00 -64.00 -129.00 -32.00 -160.00 64.00 -193.00 32.00 -225.00 -128.00 -65.00 -97.00 -96.00 -96.00 -64.00 -65.00 -65.00 -128.00 -32.00 -97.00 0.00 -96.00 0.00 -65.00 -96.00 0.00 -33.00 -32.00 -128.00 0.00 -322.00 97.00 -96.00 32.00 -129.00 -64.00 -257.00 -161.00 -32.00 -64.00 -161.00 -161.00 0.00 -32.00 32.00 -97.00 -32.00 -128.00 -96.00 -322.00 0.00 -64.00 128.00 -161.00 0.00 -96.00 -64.00 -33.00 -161.00 -32.00 -257.00 32.00 -450.00 97.00 -290.00 96.00 -160.00 32.00 -193.00 0.00 -258.00 0.00 -225.00 -96.00 -160.00 -64.00 -129.00 -32.00 -322.00 -129.00 -96.00 -64.00 -32.00 32.00 -64.00 -64.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -33.00 -64.00 -32.00 0.00 -32.00 -65.00 0.00 -32.00 -32.00 32.00 -64.00 33.00 -97.00 0.00 -64.00 32.00 -65.00 0.00 -64.00 0.00 -32.00 32.00 32.00 32.00 0.00 0.00 -96.00 96.00 -65.00 0.00 -64.00 65.00 -64.00 32.00 -64.00 0.00 -65.00 -32.00 -64.00 32.00 0.00 0.00 -64.00 -64.00 -65.00 0.00 -32.00 64.00 -64.00 32.00 0.00 -32.00 -65.00 -64.00 -32.00 0.00 -96.00 32.00 -32.00 0.00 -32.00 -65.00 0.00 0.00 -33.00 0.00 -32.00 -32.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 -160.00 -97.00 -33.00 -64.00 -64.00 -129.00 0.00 -289.00 -161.00 -65.00 -32.00 -64.00 -64.00 -96.00 -32.00 -97.00 -161.00 -161.00 -64.00 -128.00 -193.00 -161.00 -97.00 -96.00 32.00 -65.00 65.00 -128.00 32.00 -97.00 0.00 -64.00 0.00 -193.00 0.00 -96.00 -129.00 -354.00 32.00 -322.00 -96.00 -64.00 -32.00 -64.00 32.00 -97.00 64.00 -64.00 161.00 -161.00 64.00 -96.00 32.00 32.00z\"\n          },\n          ap: {\n            name: \"AP\",\n            path: \"M96286.00 15497.00l353.00 -32.00 225.00 -128.00 290.00 96.00 -32.00 418.00 161.00 193.00 257.00 -64.00 804.00 611.00 1157.00 160.00 900.00 -257.00 65.00 -32.00 64.00 32.00 32.00 -64.00 64.00 0.00 33.00 32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -97.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 64.00 0.00 0.00 64.00 65.00 32.00 32.00 -96.00 32.00 32.00 0.00 -32.00 32.00 -32.00 -32.00 -33.00 32.00 -64.00 64.00 0.00 32.00 32.00 33.00 -32.00 32.00 32.00 32.00 0.00 96.00 -32.00 32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 96.00 -33.00 33.00 -64.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -32.00 33.00 0.00 64.00 0.00 64.00 0.00 32.00 32.00 -32.00 0.00 -64.00 32.00 64.00 32.00 32.00 -32.00 33.00 64.00 32.00 -32.00 -32.00 64.00 -65.00 33.00 32.00 64.00 -32.00 0.00 -32.00 32.00 0.00 32.00 64.00 0.00 33.00 -32.00 96.00 32.00 64.00 0.00 32.00 65.00 33.00 0.00 0.00 -33.00 96.00 0.00 0.00 33.00 32.00 -33.00 0.00 97.00 97.00 0.00 32.00 0.00 32.00 32.00 32.00 0.00 0.00 -32.00 64.00 0.00 65.00 64.00 32.00 0.00 64.00 0.00 65.00 65.00 96.00 0.00 64.00 -33.00 32.00 0.00 65.00 33.00 64.00 -33.00 64.00 33.00 65.00 -33.00 0.00 -32.00 -33.00 -32.00 -32.00 -64.00 32.00 0.00 129.00 64.00 32.00 -64.00 32.00 0.00 33.00 -32.00 64.00 0.00 32.00 -65.00 64.00 0.00 32.00 -32.00 33.00 -32.00 32.00 -64.00 0.00 -65.00 64.00 -32.00 64.00 0.00 33.00 64.00 32.00 -32.00 32.00 65.00 0.00 64.00 32.00 32.00 64.00 32.00 65.00 0.00 0.00 65.00 96.00 32.00 0.00 64.00 64.00 32.00 65.00 -32.00 32.00 64.00 -129.00 97.00 -32.00 -32.00 0.00 96.00 -32.00 32.00 -64.00 0.00 32.00 32.00 -32.00 65.00 -33.00 32.00 0.00 32.00 33.00 32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 32.00 32.00 -32.00 32.00 -32.00 32.00 0.00 33.00 -32.00 32.00 0.00 32.00 32.00 32.00 32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 97.00 0.00 64.00 -32.00 161.00 -32.00 193.00 0.00 96.00 0.00 65.00 64.00 0.00 32.00 64.00 64.00 32.00 32.00 161.00 0.00 128.00 65.00 193.00 -32.00 32.00 -97.00 -32.00 -32.00 32.00 0.00 33.00 32.00 0.00 -32.00 64.00 0.00 32.00 32.00 32.00 -32.00 32.00 -96.00 33.00 -33.00 0.00 -64.00 64.00 -32.00 0.00 -96.00 96.00 0.00 0.00 -33.00 -32.00 -64.00 97.00 0.00 0.00 -32.00 32.00 0.00 160.00 -64.00 65.00 -65.00 32.00 32.00 0.00 -64.00 32.00 32.00 32.00 -32.00 97.00 -32.00 32.00 -32.00 32.00 0.00 64.00 -32.00 0.00 -33.00 258.00 -192.00 32.00 -65.00 -32.00 -32.00 96.00 -96.00 0.00 -65.00 32.00 -32.00 32.00 -32.00 65.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 96.00 0.00 0.00 -97.00 97.00 -96.00 64.00 0.00 0.00 -65.00 -32.00 -96.00 64.00 -32.00 32.00 0.00 0.00 -33.00 32.00 -64.00 33.00 0.00 -33.00 -96.00 -96.00 -65.00 32.00 -64.00 -64.00 -64.00 64.00 -64.00 32.00 -33.00 32.00 33.00 65.00 -161.00 32.00 -65.00 64.00 -128.00 65.00 -129.00 0.00 -32.00 32.00 -64.00 -32.00 -65.00 32.00 -64.00 96.00 -161.00 32.00 -96.00 129.00 -193.00 64.00 -64.00 32.00 32.00 32.00 0.00 65.00 -97.00 0.00 -32.00 -32.00 0.00 -33.00 -32.00 0.00 -64.00 0.00 -32.00 33.00 0.00 32.00 -65.00 64.00 -128.00 0.00 -65.00 0.00 -32.00 32.00 -96.00 32.00 -32.00 65.00 -129.00 64.00 -129.00 -96.00 -96.00 32.00 -64.00 32.00 -33.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 33.00 -64.00 32.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 32.00 -65.00 64.00 -32.00 65.00 32.00 -32.00 -161.00 64.00 -64.00 0.00 -64.00 64.00 -32.00 64.00 -32.00 0.00 -33.00 33.00 -32.00 32.00 32.00 32.00 65.00 64.00 -32.00 32.00 -33.00 129.00 -193.00 32.00 -32.00 0.00 -64.00 161.00 -193.00 32.00 -96.00 193.00 -386.00 64.00 -65.00 32.00 -128.00 33.00 -32.00 64.00 -65.00 -32.00 -32.00 96.00 -32.00 161.00 -354.00 96.00 -96.00 33.00 -64.00 32.00 -225.00 32.00 -33.00 32.00 -32.00 32.00 -161.00 65.00 -64.00 128.00 32.00 32.00 -96.00 -32.00 -129.00 32.00 -64.00 65.00 -32.00 32.00 -32.00 64.00 0.00 64.00 -32.00 65.00 -97.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 96.00 -33.00 33.00 -64.00 0.00 -32.00 96.00 -64.00 64.00 -97.00 33.00 -96.00 0.00 -97.00 0.00 -64.00 32.00 -64.00 96.00 -97.00 32.00 -32.00 161.00 -32.00 64.00 -32.00 65.00 -65.00 96.00 -32.00 97.00 -64.00 0.00 -97.00 0.00 -64.00 32.00 -64.00 96.00 -257.00 64.00 -129.00 33.00 -128.00 0.00 -161.00 32.00 -33.00 32.00 -128.00 32.00 -418.00 97.00 -354.00 32.00 -32.00 32.00 -32.00 128.00 -32.00 65.00 64.00 64.00 0.00 161.00 161.00 128.00 96.00 386.00 386.00 450.00 483.00 0.00 32.00 97.00 128.00 32.00 97.00 64.00 96.00 97.00 289.00 0.00 33.00 32.00 32.00 0.00 193.00 32.00 96.00 0.00 129.00 0.00 96.00 32.00 32.00 225.00 129.00 129.00 0.00 64.00 64.00 0.00 32.00 32.00 0.00 0.00 193.00 -32.00 97.00 0.00 225.00 0.00 64.00 0.00 65.00 -32.00 32.00 32.00 96.00 -32.00 64.00 0.00 65.00 0.00 128.00 32.00 226.00 65.00 707.00 -65.00 161.00 0.00 -33.00 -32.00 33.00 0.00 32.00 0.00 289.00 32.00 97.00 290.00 803.00 -33.00 97.00 -32.00 64.00 0.00 97.00 0.00 64.00 32.00 129.00 97.00 96.00 0.00 64.00 -32.00 65.00 0.00 96.00 32.00 64.00 32.00 97.00 64.00 64.00 0.00 129.00 0.00 64.00 33.00 129.00 32.00 64.00 32.00 96.00 96.00 97.00 0.00 129.00 0.00 96.00 33.00 97.00 -33.00 64.00 97.00 -32.00 64.00 64.00 32.00 0.00 32.00 64.00 -32.00 65.00 0.00 64.00 65.00 32.00 32.00 64.00 0.00 258.00 64.00 32.00 96.00 96.00 0.00 65.00 33.00 32.00 0.00 193.00 0.00 32.00 0.00 32.00 32.00 64.00 32.00 193.00 -32.00 129.00 -65.00 32.00 -32.00 64.00 32.00 0.00 0.00 -32.00 33.00 0.00 32.00 0.00 96.00 -64.00 65.00 0.00 64.00 32.00 32.00 64.00 0.00 65.00 64.00 96.00 33.00 32.00 0.00 97.00 -33.00 96.00 33.00 64.00 32.00 65.00 -32.00 96.00 64.00 32.00 32.00 64.00 0.00 161.00 32.00 65.00 64.00 96.00 0.00 97.00 0.00 96.00 33.00 0.00 32.00 32.00 64.00 129.00 32.00 64.00 32.00 96.00 0.00 97.00 -32.00 32.00 -64.00 0.00 0.00 32.00 161.00 -64.00 321.00 -129.00 97.00 -32.00 257.00 -96.00 193.00 0.00 128.00 0.00 65.00 32.00 0.00 32.00 32.00 0.00 64.00 64.00 32.00 97.00 129.00 161.00 0.00 32.00 32.00 32.00 32.00 64.00 32.00 0.00 65.00 65.00 32.00 32.00 -32.00 64.00 32.00 32.00 0.00 32.00 64.00 97.00 0.00 64.00 97.00 64.00 0.00 161.00 32.00 32.00 32.00 65.00 128.00 321.00 161.00 418.00 322.00 -64.00 321.00 128.00 65.00 0.00 160.00 65.00 97.00 32.00 161.00 96.00 385.00 225.00 33.00 33.00 0.00 64.00 -33.00 32.00 0.00 32.00 65.00 0.00 32.00 193.00 64.00 450.00 32.00 290.00 0.00 96.00 0.00 64.00 -32.00 225.00 32.00 65.00 -64.00 289.00 -96.00 161.00 32.00 96.00 32.00 225.00 32.00 65.00 0.00 128.00 -96.00 161.00 -33.00 97.00 -64.00 128.00 -32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 322.00 32.00 32.00 0.00 129.00 0.00 64.00 -32.00 64.00 -97.00 97.00 -32.00 0.00 -96.00 161.00 -32.00 96.00 -97.00 193.00 -96.00 64.00 0.00 32.00 -32.00 0.00 -33.00 -32.00 0.00 32.00 0.00 32.00 0.00 33.00 -32.00 64.00 32.00 0.00 0.00 64.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 65.00 -64.00 0.00 0.00 32.00 -32.00 0.00 -33.00 386.00 -289.00 0.00 -193.00 0.00 -161.00 32.00 -64.00 32.00 -321.00 64.00 -161.00 65.00 -225.00 160.00 -32.00 32.00 -33.00 0.00 -128.00 129.00 -65.00 129.00 -96.00 193.00 -32.00 257.00 -32.00 96.00 -97.00 129.00 -96.00 289.00 -64.00 129.00 -97.00 193.00 -96.00 193.00 -97.00 96.00 -128.00 97.00 -97.00 96.00 -96.00 129.00 -354.00 257.00 -193.00 96.00 -161.00 33.00 -418.00 128.00 -64.00 0.00 -64.00 32.00 -193.00 161.00 -32.00 32.00 -97.00 129.00 0.00 32.00 -32.00 0.00 -97.00 129.00 -32.00 32.00 -64.00 96.00 -96.00 97.00 -97.00 64.00 -32.00 0.00 -96.00 64.00 -290.00 33.00 -193.00 64.00 -161.00 257.00 -64.00 129.00 -128.00 160.00 -65.00 97.00 -96.00 96.00 -32.00 33.00 -65.00 96.00 -32.00 64.00 0.00 32.00 -32.00 258.00 -225.00 225.00 -64.00 64.00 -65.00 225.00 -96.00 193.00 -161.00 161.00 -129.00 96.00 -64.00 65.00 -193.00 225.00 -128.00 128.00 -322.00 547.00 -32.00 32.00 -32.00 64.00 -32.00 33.00 0.00 32.00 0.00 128.00 -33.00 322.00 0.00 161.00 -32.00 0.00 32.00 353.00 33.00 97.00 0.00 96.00 -33.00 64.00 -64.00 97.00 -353.00 354.00 -129.00 96.00 -386.00 32.00 -32.00 -32.00 -129.00 -128.00 -64.00 32.00 -64.00 128.00 0.00 32.00 -32.00 -32.00 -33.00 0.00 0.00 -32.00 0.00 -128.00 0.00 -33.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 32.00 161.00 -32.00 32.00 0.00 32.00 -97.00 -32.00 -128.00 32.00 -65.00 33.00 -64.00 32.00 0.00 32.00 32.00 32.00 64.00 64.00 0.00 32.00 -32.00 65.00 -96.00 32.00 -129.00 -64.00 -32.00 0.00 -32.00 -33.00 0.00 -64.00 32.00 -96.00 -64.00 -161.00 0.00 -32.00 -129.00 0.00 -64.00 -64.00 -64.00 0.00 -226.00 0.00 -64.00 -33.00 -193.00 0.00 -128.00 -64.00 -129.00 0.00 -96.00 -225.00 -33.00 -32.00 -128.00 -32.00 -65.00 -65.00 -96.00 65.00 -32.00 -33.00 -32.00 -32.00 64.00 -64.00 32.00 -96.00 -32.00 -33.00 0.00 -160.00 -96.00 -97.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 32.00 -33.00 64.00 0.00 32.00 0.00 32.00 -128.00 -32.00 -65.00 -64.00 -96.00 -64.00 -32.00 -65.00 -64.00 -32.00 -33.00 -64.00 65.00 -32.00 0.00 -97.00 32.00 -96.00 32.00 -64.00 0.00 -65.00 0.00 32.00 -64.00 129.00 -161.00 -64.00 -32.00 0.00 -64.00 0.00 -65.00 96.00 -161.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -97.00 -32.00 -64.00 -32.00 -64.00 0.00 -33.00 0.00 -96.00 0.00 -96.00 -32.00 -161.00 -65.00 -65.00 -160.00 0.00 -129.00 33.00 -96.00 64.00 -65.00 0.00 -64.00 -32.00 -129.00 -193.00 0.00 -32.00 0.00 -65.00 -64.00 -64.00 -64.00 -96.00 32.00 -97.00 -64.00 -64.00 128.00 -193.00 -32.00 -32.00 -64.00 -129.00 0.00 -96.00 64.00 -129.00 0.00 -129.00 -32.00 -64.00 -64.00 -64.00 -65.00 0.00 -96.00 -64.00 -64.00 -65.00 -33.00 -128.00 -353.00 -258.00 -32.00 -64.00 -33.00 -64.00 -32.00 -32.00 -96.00 -33.00 -129.00 33.00 -128.00 -33.00 -33.00 -32.00 -128.00 -353.00 -32.00 -129.00 -32.00 -161.00 0.00 -160.00 -33.00 -33.00 -96.00 -64.00 -64.00 -64.00 32.00 -193.00 -97.00 -32.00 -32.00 -65.00 0.00 -96.00 -32.00 -32.00 -32.00 -65.00 -97.00 -64.00 -64.00 -96.00 -64.00 -32.00 -32.00 -161.00 32.00 -97.00 32.00 -32.00 -97.00 -161.00 -96.00 -64.00 -32.00 -129.00 -32.00 -96.00 -97.00 -64.00 -32.00 -97.00 64.00 -96.00 0.00 -32.00 0.00 -65.00 -32.00 -128.00 65.00 -161.00 -33.00 -32.00 -64.00 -32.00 64.00 -97.00 -32.00 -32.00 65.00 -64.00 32.00 -32.00 0.00 -65.00 -32.00 -64.00 0.00 -64.00 32.00 -97.00 128.00 -161.00 32.00 -193.00 33.00 -32.00 0.00 -32.00 -97.00 -64.00 -64.00 32.00 -32.00 -32.00 -32.00 -97.00 -33.00 -64.00 -128.00 -96.00 -32.00 -97.00 -33.00 -32.00 -32.00 0.00 -32.00 -32.00 -193.00 -129.00 -96.00 -64.00 -65.00 -129.00 -64.00 -64.00 -257.00 -129.00 -32.00 -32.00 -225.00 -160.00 -32.00 -97.00 32.00 -32.00 0.00 -129.00 -32.00 -32.00 -33.00 -32.00 -32.00 -97.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -64.00 -32.00 0.00 0.00 -65.00 -64.00 -64.00 -32.00 -32.00 0.00 -161.00 0.00 -64.00 0.00 -64.00 64.00 -65.00 32.00 0.00 64.00 32.00 65.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -96.00 -32.00 -65.00 -64.00 -64.00 -33.00 -96.00 0.00 -97.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -161.00 -32.00 -257.00 129.00 -64.00 0.00 -32.00 -64.00 0.00 -33.00 64.00 -64.00 32.00 -96.00 -32.00 -65.00 -96.00 -32.00 -33.00 0.00 0.00 -128.00 65.00 -33.00 64.00 -32.00 -32.00 -96.00 -32.00 -32.00 -97.00 0.00 0.00 32.00 -32.00 32.00 -96.00 -96.00 -193.00 32.00 -33.00 64.00 -64.00 0.00 -32.00 -64.00 64.00 -32.00 32.00 -33.00 -32.00 -96.00 32.00 -64.00 -32.00 -65.00 -64.00 32.00 -32.00 129.00 -64.00 0.00 0.00 -32.00 -33.00 -32.00 -64.00 64.00 -32.00 -32.00 -32.00 -64.00 96.00 -97.00 0.00 -32.00 -96.00 -64.00 -32.00 32.00 32.00 64.00 0.00 32.00 -64.00 65.00 0.00 32.00 -129.00 -32.00 -32.00 -65.00 -32.00 65.00 -33.00 0.00 -32.00 -33.00 -32.00 -64.00 -64.00 -32.00 -65.00 0.00 -32.00 32.00 65.00 64.00 32.00 33.00 -32.00 32.00 -65.00 0.00 -32.00 -32.00 -96.00 32.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 -64.00 32.00 -97.00 -32.00 -32.00 32.00 0.00 -32.00 32.00 -128.00 0.00 -32.00 -64.00 0.00 -32.00 -65.00 -97.00 0.00 0.00 65.00 -64.00 32.00 -32.00 0.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 32.00 -64.00 -32.00 0.00 -64.00 -32.00 -33.00 32.00 0.00 -64.00 -64.00 -33.00 -32.00 65.00 -64.00 -32.00 -65.00 32.00 0.00 -65.00 0.00 -96.00 -32.00 -64.00 -64.00 32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 -65.00 -32.00 -64.00 64.00 -32.00 0.00 -32.00 -32.00 -64.00 32.00 32.00 32.00 -65.00 0.00 0.00 -32.00 33.00 -64.00 -33.00 -32.00 33.00 -64.00 -65.00 -129.00 -96.00 0.00 0.00 -32.00 32.00 -65.00 32.00 -64.00 0.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 -64.00 -33.00 0.00 0.00 -32.00 33.00 0.00 0.00 -32.00 -65.00 -65.00 32.00 -32.00 -64.00 0.00 0.00 -64.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -65.00 0.00 -32.00 0.00 0.00 -65.00 -32.00 0.00 -32.00 65.00 0.00 96.00 -32.00 -32.00 -32.00 -96.00 -65.00 -33.00 -64.00 -32.00 0.00 -64.00 -64.00 0.00 -32.00 -32.00 -65.00 32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 32.00 0.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 32.00 -32.00 32.00 -32.00 -64.00 32.00 0.00 -32.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 32.00 -32.00 -64.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -64.00 0.00 0.00 -32.00 -33.00 0.00 0.00 -33.00 -128.00 -64.00 -32.00 97.00 -65.00 -65.00 -64.00 0.00 -32.00 0.00 -64.00 32.00 -129.00 -32.00 -32.00 0.00 0.00 32.00 -64.00 -32.00 0.00 32.00 -65.00 33.00 -32.00 -33.00 -32.00 0.00 -64.00 -32.00 -33.00 -32.00 -32.00 -32.00 -161.00 -32.00 0.00 -32.00 -64.00 32.00 -96.00 -32.00 -32.00 32.00 -65.00 -32.00 -96.00 64.00 -32.00 0.00 -97.00 32.00 -32.00 -32.00 -64.00 0.00 -32.00 -32.00 0.00 32.00 -97.00 0.00 -129.00 -32.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 -32.00 -64.00 97.00 -65.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 -32.00 -32.00 0.00 -129.00 -32.00 -64.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -161.00 32.00 0.00 32.00 -64.00 0.00 -33.00 32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -64.00 0.00 32.00 -64.00 -64.00 -33.00 -32.00 -32.00 -33.00 -32.00 -32.00 -64.00 -32.00 -64.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 32.00 0.00 -32.00 -129.00 64.00 -32.00 -32.00 -64.00 32.00 -65.00 -32.00 -32.00 32.00 0.00 0.00 -64.00 65.00 -32.00 32.00 -32.00 0.00 -33.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 -65.00 -32.00 -32.00 -97.00 -96.00 -32.00 -97.00 0.00 -96.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 32.00 0.00 -32.00 -96.00 -32.00 -65.00 -257.00 -289.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 32.00 -33.00z\"\n          },\n          to: {\n            name: \"TO\",\n            path: \"M115835.00 83244.00l64.00 -128.00 0.00 -129.00 65.00 -128.00 32.00 -97.00 0.00 -64.00 32.00 -65.00 32.00 -32.00 64.00 -64.00 65.00 -32.00 32.00 -193.00 32.00 -129.00 -32.00 -96.00 0.00 -64.00 -32.00 -129.00 32.00 -96.00 0.00 -65.00 64.00 -32.00 32.00 -96.00 97.00 -65.00 0.00 -32.00 32.00 -64.00 0.00 -129.00 -32.00 -64.00 0.00 -129.00 -32.00 -96.00 32.00 -64.00 -65.00 -161.00 65.00 -97.00 96.00 -96.00 0.00 -65.00 -32.00 -64.00 -64.00 -32.00 0.00 -129.00 0.00 -32.00 32.00 -64.00 0.00 -32.00 32.00 -32.00 64.00 0.00 0.00 -32.00 0.00 -65.00 97.00 -161.00 -32.00 -96.00 0.00 -64.00 -33.00 -65.00 0.00 -96.00 -96.00 -64.00 0.00 -65.00 96.00 -96.00 65.00 -97.00 32.00 -64.00 64.00 0.00 32.00 0.00 33.00 -32.00 32.00 -97.00 64.00 -96.00 -32.00 -97.00 32.00 -96.00 0.00 -96.00 96.00 -33.00 33.00 0.00 32.00 -32.00 -32.00 -96.00 64.00 -322.00 128.00 -64.00 33.00 -64.00 96.00 -65.00 32.00 -32.00 -32.00 -96.00 0.00 -32.00 97.00 -225.00 32.00 -161.00 64.00 -161.00 -32.00 -225.00 -32.00 0.00 0.00 -32.00 32.00 -161.00 64.00 -129.00 65.00 -64.00 32.00 -96.00 64.00 -65.00 129.00 -64.00 64.00 -64.00 32.00 -97.00 0.00 -128.00 64.00 -97.00 0.00 -64.00 65.00 -97.00 0.00 -128.00 96.00 -193.00 97.00 -97.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 -96.00 32.00 -97.00 32.00 -161.00 193.00 -225.00 0.00 -64.00 32.00 -32.00 0.00 -97.00 65.00 -96.00 0.00 -129.00 64.00 -32.00 32.00 -64.00 32.00 -65.00 0.00 -96.00 32.00 -64.00 65.00 -65.00 -33.00 -96.00 -64.00 -97.00 0.00 -32.00 32.00 0.00 0.00 -64.00 0.00 -64.00 65.00 -225.00 128.00 -129.00 32.00 -129.00 0.00 -32.00 0.00 -128.00 0.00 -33.00 33.00 -128.00 0.00 -32.00 64.00 -65.00 64.00 -64.00 97.00 -32.00 32.00 -193.00 128.00 0.00 129.00 -161.00 161.00 -128.00 0.00 -33.00 0.00 -64.00 32.00 -32.00 129.00 -193.00 64.00 -128.00 32.00 -97.00 0.00 -64.00 32.00 -97.00 257.00 -225.00 33.00 -96.00 64.00 -129.00 64.00 -64.00 64.00 -97.00 65.00 -32.00 225.00 -193.00 193.00 -64.00 128.00 0.00 97.00 -32.00 32.00 -65.00 96.00 -128.00 129.00 -193.00 225.00 -322.00 64.00 -96.00 33.00 -129.00 64.00 -64.00 32.00 -96.00 193.00 -161.00 64.00 -97.00 0.00 -64.00 32.00 -289.00 33.00 -65.00 32.00 -96.00 128.00 -193.00 33.00 0.00 128.00 -64.00 97.00 -65.00 64.00 -64.00 64.00 -161.00 32.00 -96.00 33.00 -257.00 96.00 -193.00 64.00 -129.00 32.00 -64.00 33.00 -97.00 32.00 -160.00 -32.00 -97.00 32.00 -64.00 0.00 -97.00 32.00 -32.00 0.00 -32.00 64.00 -32.00 32.00 -64.00 0.00 -161.00 0.00 -64.00 -32.00 -161.00 65.00 -97.00 0.00 -128.00 32.00 -129.00 -32.00 -225.00 0.00 -32.00 0.00 -97.00 32.00 -32.00 32.00 -64.00 0.00 -32.00 -32.00 -65.00 -65.00 -32.00 -128.00 -32.00 -97.00 -64.00 -96.00 -129.00 -97.00 -64.00 -160.00 -129.00 -129.00 -64.00 -64.00 -64.00 -32.00 -65.00 -97.00 -225.00 0.00 -32.00 -96.00 -193.00 0.00 -96.00 32.00 -257.00 64.00 -33.00 64.00 -128.00 129.00 -161.00 193.00 -193.00 64.00 -64.00 0.00 -32.00 65.00 -97.00 96.00 -128.00 96.00 -129.00 33.00 -129.00 96.00 -160.00 32.00 -97.00 -32.00 -128.00 -32.00 -290.00 0.00 -289.00 0.00 -32.00 0.00 -129.00 0.00 -64.00 -64.00 -225.00 -33.00 -33.00 0.00 -64.00 0.00 -96.00 33.00 -65.00 96.00 -96.00 32.00 -64.00 32.00 0.00 97.00 -33.00 193.00 -96.00 128.00 -129.00 193.00 -128.00 65.00 -65.00 64.00 -96.00 225.00 0.00 129.00 -64.00 64.00 -33.00 64.00 -32.00 193.00 -32.00 129.00 0.00 32.00 0.00 64.00 0.00 64.00 0.00 161.00 -64.00 32.00 0.00 65.00 -64.00 96.00 -161.00 257.00 -64.00 97.00 -65.00 32.00 -64.00 32.00 -64.00 0.00 -129.00 -64.00 -193.00 0.00 -64.00 32.00 -97.00 64.00 -64.00 0.00 -96.00 65.00 -97.00 32.00 -32.00 64.00 -129.00 225.00 -193.00 64.00 -32.00 97.00 -96.00 32.00 -65.00 64.00 -96.00 32.00 -32.00 258.00 0.00 96.00 32.00 129.00 96.00 64.00 33.00 32.00 -33.00 32.00 -128.00 -32.00 -97.00 -32.00 -32.00 -64.00 -32.00 -64.00 -32.00 -33.00 -64.00 0.00 -32.00 33.00 -33.00 -33.00 -64.00 -32.00 -161.00 -32.00 -96.00 0.00 -97.00 0.00 -96.00 64.00 -64.00 65.00 -65.00 64.00 -32.00 129.00 32.00 160.00 -64.00 129.00 -96.00 64.00 -65.00 32.00 -96.00 0.00 -65.00 -96.00 -128.00 -129.00 -32.00 -32.00 -32.00 0.00 -65.00 32.00 -64.00 65.00 -97.00 64.00 -64.00 64.00 -32.00 193.00 -32.00 97.00 -64.00 0.00 -97.00 0.00 -32.00 -65.00 -97.00 0.00 -32.00 -128.00 -128.00 -65.00 -97.00 -32.00 -32.00 0.00 -32.00 -32.00 -225.00 0.00 -32.00 0.00 -129.00 32.00 -64.00 32.00 -65.00 65.00 -32.00 225.00 32.00 96.00 -32.00 32.00 0.00 33.00 -32.00 64.00 -32.00 64.00 -96.00 97.00 -193.00 32.00 -65.00 0.00 -96.00 0.00 -64.00 -193.00 -129.00 -64.00 -32.00 -33.00 -32.00 -64.00 -65.00 -96.00 0.00 -161.00 -32.00 -64.00 -32.00 -65.00 -32.00 -32.00 -32.00 -96.00 -129.00 -33.00 -32.00 0.00 32.00 0.00 -64.00 -64.00 -97.00 -32.00 -64.00 0.00 -64.00 0.00 -32.00 -64.00 -65.00 -32.00 -32.00 -33.00 -64.00 -64.00 -32.00 -32.00 0.00 -32.00 64.00 -97.00 -32.00 -96.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 -96.00 32.00 -65.00 0.00 -225.00 -32.00 -160.00 0.00 -65.00 0.00 -128.00 -32.00 -65.00 -129.00 -32.00 0.00 -128.00 -32.00 -193.00 0.00 0.00 -32.00 -65.00 0.00 -64.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 32.00 32.00 -32.00 97.00 32.00 32.00 -32.00 32.00 -129.00 32.00 -32.00 65.00 -32.00 128.00 32.00 64.00 32.00 33.00 64.00 96.00 32.00 32.00 -32.00 97.00 -96.00 64.00 -161.00 0.00 -96.00 32.00 -97.00 0.00 -64.00 97.00 -129.00 96.00 -64.00 161.00 32.00 96.00 -64.00 483.00 -65.00 64.00 33.00 161.00 128.00 128.00 0.00 97.00 64.00 128.00 65.00 65.00 32.00 32.00 0.00 64.00 64.00 97.00 32.00 64.00 33.00 321.00 32.00 129.00 32.00 161.00 -32.00 161.00 -161.00 32.00 0.00 64.00 0.00 161.00 32.00 96.00 0.00 32.00 0.00 226.00 97.00 32.00 64.00 32.00 96.00 0.00 33.00 0.00 32.00 0.00 160.00 128.00 161.00 65.00 64.00 160.00 0.00 129.00 -32.00 129.00 0.00 257.00 161.00 96.00 32.00 225.00 193.00 193.00 65.00 65.00 -33.00 32.00 0.00 289.00 290.00 65.00 193.00 0.00 160.00 32.00 129.00 0.00 64.00 0.00 129.00 -65.00 225.00 -32.00 96.00 65.00 129.00 64.00 64.00 128.00 290.00 33.00 161.00 32.00 32.00 0.00 321.00 -97.00 290.00 65.00 96.00 32.00 129.00 0.00 32.00 0.00 96.00 -32.00 129.00 32.00 129.00 64.00 289.00 64.00 161.00 65.00 96.00 32.00 97.00 0.00 96.00 0.00 64.00 -129.00 258.00 0.00 32.00 -32.00 160.00 -32.00 129.00 -32.00 129.00 -32.00 32.00 96.00 257.00 -32.00 64.00 -32.00 0.00 -129.00 193.00 0.00 65.00 -32.00 32.00 0.00 128.00 0.00 97.00 0.00 32.00 -64.00 96.00 -97.00 193.00 32.00 97.00 -32.00 32.00 0.00 64.00 0.00 225.00 -96.00 161.00 -65.00 193.00 0.00 32.00 33.00 0.00 0.00 32.00 64.00 161.00 32.00 97.00 -32.00 64.00 -97.00 193.00 0.00 128.00 -32.00 65.00 -32.00 96.00 0.00 32.00 -32.00 65.00 -129.00 128.00 -64.00 32.00 -129.00 161.00 -32.00 129.00 -96.00 128.00 -64.00 33.00 -65.00 -33.00 -96.00 -32.00 -65.00 0.00 -32.00 32.00 -160.00 97.00 0.00 32.00 0.00 97.00 0.00 64.00 64.00 64.00 193.00 97.00 96.00 96.00 97.00 225.00 32.00 0.00 32.00 0.00 64.00 0.00 97.00 -161.00 64.00 -32.00 225.00 0.00 32.00 32.00 193.00 129.00 65.00 129.00 32.00 64.00 -32.00 161.00 -129.00 64.00 0.00 32.00 -257.00 97.00 -65.00 32.00 -64.00 128.00 129.00 32.00 64.00 -32.00 96.00 -32.00 65.00 0.00 64.00 0.00 0.00 64.00 32.00 161.00 65.00 65.00 0.00 160.00 32.00 32.00 32.00 0.00 32.00 -64.00 129.00 0.00 32.00 32.00 32.00 32.00 0.00 33.00 -32.00 32.00 -32.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 64.00 32.00 32.00 0.00 33.00 32.00 -33.00 65.00 97.00 64.00 0.00 96.00 -32.00 65.00 0.00 32.00 32.00 64.00 64.00 32.00 64.00 -64.00 0.00 -32.00 -64.00 0.00 -32.00 -64.00 0.00 -33.00 64.00 0.00 32.00 0.00 33.00 65.00 64.00 32.00 64.00 64.00 32.00 32.00 -32.00 33.00 -32.00 0.00 -64.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 161.00 32.00 0.00 64.00 -32.00 0.00 -33.00 -32.00 0.00 32.00 33.00 33.00 -33.00 32.00 0.00 64.00 33.00 0.00 32.00 32.00 32.00 -32.00 64.00 32.00 32.00 -32.00 0.00 32.00 0.00 32.00 65.00 0.00 0.00 33.00 -33.00 64.00 33.00 -32.00 32.00 0.00 32.00 0.00 -32.00 32.00 32.00 96.00 32.00 65.00 -32.00 32.00 64.00 0.00 -64.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 0.00 32.00 32.00 32.00 33.00 33.00 64.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 64.00 -32.00 0.00 64.00 32.00 0.00 0.00 32.00 0.00 32.00 65.00 65.00 32.00 32.00 0.00 32.00 64.00 0.00 0.00 96.00 0.00 65.00 64.00 -32.00 33.00 0.00 32.00 96.00 32.00 -32.00 -32.00 96.00 32.00 32.00 32.00 -32.00 0.00 32.00 0.00 33.00 -32.00 0.00 64.00 64.00 -64.00 32.00 129.00 0.00 96.00 97.00 0.00 96.00 64.00 32.00 -32.00 32.00 65.00 32.00 0.00 33.00 96.00 0.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 0.00 0.00 32.00 33.00 0.00 32.00 -97.00 32.00 33.00 0.00 -33.00 96.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -64.00 0.00 -32.00 33.00 0.00 32.00 -65.00 64.00 0.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 0.00 33.00 32.00 32.00 0.00 32.00 -64.00 32.00 0.00 0.00 -65.00 64.00 -32.00 0.00 32.00 32.00 33.00 33.00 -33.00 32.00 -32.00 32.00 65.00 32.00 0.00 0.00 -33.00 32.00 0.00 97.00 -32.00 32.00 -32.00 32.00 32.00 32.00 0.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 0.00 32.00 32.00 0.00 32.00 -96.00 32.00 32.00 32.00 -32.00 32.00 0.00 33.00 0.00 32.00 -33.00 32.00 0.00 32.00 -32.00 64.00 32.00 32.00 0.00 65.00 0.00 32.00 -64.00 32.00 0.00 64.00 32.00 33.00 0.00 64.00 -64.00 96.00 0.00 65.00 32.00 0.00 32.00 64.00 0.00 32.00 32.00 64.00 33.00 0.00 32.00 0.00 64.00 65.00 32.00 128.00 64.00 129.00 97.00 32.00 64.00 0.00 32.00 32.00 33.00 0.00 32.00 0.00 128.00 0.00 65.00 65.00 64.00 0.00 64.00 -33.00 32.00 -64.00 0.00 -32.00 65.00 0.00 64.00 -97.00 257.00 0.00 32.00 0.00 33.00 65.00 32.00 64.00 64.00 -32.00 32.00 -64.00 64.00 -33.00 97.00 33.00 161.00 -65.00 96.00 -64.00 64.00 -64.00 65.00 -65.00 32.00 -96.00 0.00 -64.00 32.00 -65.00 0.00 -128.00 -64.00 -129.00 64.00 -64.00 32.00 -65.00 32.00 -96.00 33.00 -32.00 64.00 -32.00 32.00 -32.00 64.00 -33.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 -97.00 -32.00 0.00 32.00 0.00 32.00 -32.00 0.00 32.00 65.00 -64.00 32.00 -32.00 -32.00 32.00 96.00 0.00 32.00 0.00 32.00 -32.00 65.00 32.00 32.00 -96.00 96.00 -33.00 32.00 -32.00 -64.00 -32.00 32.00 0.00 32.00 -64.00 0.00 0.00 65.00 32.00 64.00 -32.00 0.00 32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 33.00 32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 0.00 32.00 -33.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 32.00 33.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 0.00 -32.00 0.00 64.00 -32.00 -32.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 -33.00 -32.00 0.00 32.00 -32.00 0.00 32.00 0.00 0.00 32.00 33.00 -32.00 32.00 32.00 0.00 32.00 -32.00 0.00 32.00 33.00 -32.00 0.00 0.00 32.00 -33.00 0.00 0.00 32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 65.00 32.00 32.00 0.00 -32.00 33.00 64.00 0.00 -32.00 32.00 32.00 32.00 32.00 64.00 -32.00 32.00 -32.00 0.00 -65.00 65.00 0.00 96.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 32.00 97.00 32.00 32.00 0.00 64.00 32.00 0.00 0.00 32.00 33.00 0.00 32.00 97.00 -32.00 32.00 0.00 96.00 -33.00 32.00 33.00 33.00 -33.00 32.00 -32.00 0.00 0.00 32.00 32.00 32.00 -32.00 32.00 -96.00 0.00 -65.00 65.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 32.00 64.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 65.00 -64.00 32.00 0.00 32.00 -64.00 32.00 0.00 32.00 -65.00 32.00 -32.00 0.00 -32.00 33.00 32.00 64.00 0.00 32.00 -32.00 32.00 0.00 32.00 -64.00 0.00 0.00 -32.00 0.00 32.00 -32.00 65.00 0.00 32.00 -97.00 0.00 -32.00 32.00 64.00 32.00 32.00 -32.00 0.00 32.00 33.00 0.00 0.00 32.00 -65.00 32.00 0.00 33.00 0.00 32.00 -32.00 0.00 32.00 32.00 -64.00 0.00 0.00 32.00 96.00 64.00 0.00 -32.00 65.00 0.00 64.00 32.00 64.00 -32.00 -32.00 65.00 32.00 0.00 32.00 0.00 0.00 -33.00 65.00 0.00 64.00 33.00 161.00 -65.00 96.00 0.00 32.00 65.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 32.00 32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 32.00 64.00 -32.00 0.00 32.00 65.00 32.00 0.00 65.00 0.00 32.00 -32.00 32.00 -33.00 0.00 33.00 0.00 64.00 32.00 0.00 129.00 32.00 32.00 32.00 32.00 64.00 -32.00 97.00 0.00 32.00 64.00 32.00 64.00 -32.00 0.00 32.00 33.00 65.00 -33.00 64.00 -32.00 64.00 65.00 97.00 -33.00 32.00 -32.00 32.00 0.00 32.00 -64.00 32.00 0.00 32.00 0.00 33.00 32.00 64.00 97.00 -32.00 32.00 0.00 0.00 64.00 64.00 96.00 64.00 65.00 32.00 32.00 33.00 32.00 64.00 97.00 -32.00 96.00 0.00 32.00 96.00 32.00 0.00 -32.00 32.00 -32.00 65.00 -32.00 128.00 0.00 97.00 -32.00 32.00 0.00 64.00 64.00 97.00 32.00 -32.00 32.00 -33.00 65.00 0.00 64.00 33.00 32.00 64.00 64.00 64.00 0.00 64.00 33.00 33.00 64.00 96.00 -32.00 64.00 32.00 0.00 64.00 -64.00 64.00 0.00 33.00 64.00 96.00 0.00 32.00 97.00 32.00 0.00 33.00 -193.00 128.00 -64.00 32.00 0.00 97.00 -65.00 96.00 0.00 129.00 -32.00 64.00 -193.00 129.00 32.00 128.00 0.00 65.00 33.00 32.00 0.00 32.00 64.00 0.00 161.00 0.00 96.00 64.00 32.00 65.00 -32.00 32.00 -32.00 96.00 0.00 32.00 96.00 33.00 97.00 0.00 128.00 -65.00 33.00 65.00 64.00 64.00 -32.00 96.00 32.00 0.00 64.00 65.00 -64.00 32.00 0.00 32.00 96.00 32.00 0.00 97.00 -32.00 32.00 0.00 96.00 65.00 64.00 -65.00 65.00 32.00 128.00 -32.00 65.00 97.00 128.00 0.00 161.00 32.00 32.00 32.00 97.00 96.00 32.00 33.00 0.00 160.00 193.00 65.00 225.00 96.00 32.00 97.00 64.00 64.00 -64.00 64.00 32.00 129.00 0.00 161.00 -32.00 128.00 -32.00 64.00 32.00 33.00 32.00 32.00 32.00 96.00 129.00 129.00 -32.00 193.00 32.00 225.00 -161.00 64.00 -32.00 32.00 0.00 32.00 32.00 33.00 289.00 64.00 97.00 32.00 -32.00 97.00 -32.00 128.00 64.00 97.00 -32.00 225.00 -65.00 193.00 97.00 225.00 32.00 225.00 -129.00 64.00 -64.00 32.00 -96.00 -32.00 -97.00 -32.00 -64.00 64.00 -97.00 32.00 65.00 97.00 0.00 0.00 64.00 -32.00 32.00 32.00 129.00 0.00 128.00 0.00 97.00 0.00 32.00 -32.00 32.00 -32.00 65.00 -65.00 160.00 -64.00 129.00 -64.00 32.00 -193.00 0.00 -65.00 32.00 -64.00 32.00 -32.00 0.00 0.00 33.00 0.00 32.00 -32.00 64.00 64.00 96.00 -32.00 129.00 -32.00 0.00 -161.00 0.00 -96.00 64.00 -65.00 65.00 -32.00 64.00 -193.00 129.00 -64.00 32.00 -32.00 96.00 -65.00 0.00 -64.00 32.00 -96.00 0.00 -33.00 32.00 -32.00 129.00 -128.00 32.00 0.00 97.00 -32.00 32.00 -65.00 32.00 -96.00 -32.00 -97.00 96.00 -96.00 0.00 -97.00 33.00 -32.00 -33.00 -96.00 33.00 0.00 32.00 -65.00 32.00 -64.00 32.00 0.00 32.00 32.00 32.00 65.00 97.00 32.00 32.00 0.00 32.00 -32.00 129.00 -97.00 64.00 -193.00 129.00 32.00 0.00 97.00 32.00 0.00 128.00 -32.00 65.00 -65.00 32.00 -128.00 64.00 -32.00 32.00 -32.00 65.00 -33.00 96.00 0.00 32.00 65.00 129.00 0.00 32.00 -161.00 96.00 -64.00 97.00 -161.00 96.00 -32.00 33.00 -33.00 64.00 -96.00 64.00 -32.00 0.00 0.00 97.00 -97.00 96.00 -96.00 257.00 -32.00 322.00 -97.00 161.00 -64.00 96.00 -64.00 0.00 -386.00 193.00 -129.00 32.00 32.00 64.00 -32.00 97.00 -32.00 0.00 0.00 64.00 32.00 32.00 0.00 65.00 32.00 128.00 65.00 97.00 96.00 32.00 32.00 0.00 65.00 32.00 0.00 129.00 0.00 32.00 96.00 64.00 0.00 32.00 0.00 161.00 32.00 96.00 32.00 33.00 33.00 32.00 96.00 32.00 32.00 64.00 32.00 0.00 65.00 0.00 64.00 0.00 96.00 32.00 33.00 65.00 32.00 32.00 32.00 0.00 64.00 -32.00 32.00 0.00 97.00 0.00 64.00 32.00 161.00 -32.00 129.00 64.00 96.00 32.00 32.00 0.00 64.00 32.00 65.00 0.00 64.00 65.00 0.00 32.00 32.00 64.00 64.00 32.00 65.00 32.00 32.00 -32.00 64.00 -32.00 32.00 64.00 97.00 0.00 64.00 -32.00 32.00 32.00 97.00 33.00 32.00 0.00 32.00 32.00 0.00 64.00 0.00 32.00 -225.00 32.00 -96.00 32.00 -97.00 -32.00 -64.00 32.00 -161.00 -64.00 -161.00 -96.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 -65.00 -32.00 -64.00 32.00 0.00 64.00 32.00 64.00 32.00 33.00 32.00 96.00 0.00 64.00 -64.00 33.00 -96.00 160.00 -161.00 65.00 -65.00 32.00 33.00 32.00 96.00 -32.00 64.00 64.00 65.00 32.00 0.00 32.00 -65.00 33.00 0.00 32.00 33.00 32.00 -33.00 64.00 -64.00 32.00 0.00 32.00 0.00 33.00 -32.00 32.00 -64.00 -32.00 -33.00 32.00 33.00 64.00 -33.00 64.00 65.00 97.00 64.00 -32.00 32.00 32.00 65.00 64.00 64.00 0.00 129.00 -64.00 96.00 32.00 64.00 32.00 65.00 32.00 128.00 -32.00 64.00 -64.00 65.00 0.00 32.00 0.00 32.00 64.00 0.00 64.00 -96.00 97.00 -97.00 0.00 -161.00 64.00 -192.00 32.00 -65.00 0.00 -128.00 32.00 -33.00 65.00 -32.00 32.00 -64.00 32.00 -97.00 97.00 0.00 64.00 -32.00 0.00 -64.00 32.00 0.00 64.00 64.00 65.00 0.00 32.00 32.00 32.00 -64.00 32.00 32.00 64.00 0.00 33.00 65.00 32.00 32.00 64.00 -32.00 64.00 0.00 65.00 -33.00 96.00 0.00 32.00 -64.00 32.00 32.00 33.00 0.00 32.00 0.00 32.00 -32.00 32.00 97.00 32.00 0.00 64.00 32.00 33.00 -32.00 96.00 -65.00 32.00 32.00 0.00 65.00 97.00 -32.00 32.00 -33.00 64.00 97.00 32.00 32.00 0.00 97.00 32.00 32.00 0.00 0.00 33.00 -129.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 32.00 32.00 32.00 -32.00 32.00 65.00 65.00 32.00 32.00 0.00 96.00 64.00 33.00 64.00 -33.00 32.00 0.00 65.00 -32.00 32.00 0.00 32.00 32.00 32.00 33.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 64.00 64.00 32.00 65.00 0.00 32.00 -32.00 64.00 0.00 161.00 129.00 32.00 225.00 -96.00 96.00 -33.00 33.00 65.00 -33.00 64.00 33.00 64.00 -33.00 97.00 -193.00 0.00 -128.00 32.00 -97.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 97.00 -32.00 32.00 -32.00 32.00 32.00 64.00 -64.00 161.00 64.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 65.00 -64.00 64.00 -64.00 32.00 -65.00 97.00 33.00 0.00 0.00 32.00 64.00 32.00 32.00 32.00 0.00 129.00 -64.00 32.00 32.00 64.00 0.00 64.00 -32.00 33.00 0.00 64.00 0.00 64.00 32.00 32.00 32.00 33.00 32.00 64.00 -64.00 64.00 -97.00 65.00 65.00 96.00 -32.00 64.00 -33.00 65.00 0.00 64.00 -32.00 161.00 97.00 -33.00 32.00 -64.00 32.00 0.00 225.00 32.00 96.00 -64.00 65.00 0.00 225.00 -96.00 64.00 32.00 65.00 32.00 -33.00 32.00 -128.00 64.00 -65.00 -32.00 -96.00 32.00 0.00 32.00 -32.00 33.00 -32.00 32.00 -129.00 0.00 -96.00 32.00 0.00 -32.00 -161.00 64.00 -32.00 -32.00 -32.00 32.00 -97.00 32.00 -129.00 0.00 0.00 32.00 -128.00 33.00 -65.00 -33.00 33.00 -64.00 -33.00 -32.00 33.00 -32.00 0.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 -96.00 0.00 -32.00 -32.00 -33.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -64.00 -65.00 -32.00 0.00 -65.00 0.00 32.00 -32.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 -65.00 546.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 129.00 -129.00 0.00 -739.00 0.00 -547.00 -32.00 -321.00 193.00 -33.00 0.00 33.00 32.00 -65.00 32.00 0.00 64.00 -32.00 0.00 -32.00 65.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 -97.00 32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 -64.00 0.00 -32.00 64.00 -65.00 32.00 -64.00 65.00 0.00 32.00 -96.00 32.00 -33.00 64.00 -64.00 0.00 -64.00 65.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 32.00 0.00 64.00 -64.00 0.00 -64.00 32.00 -32.00 0.00 -33.00 32.00 -64.00 33.00 -32.00 -33.00 0.00 33.00 -64.00 0.00 0.00 32.00 0.00 32.00 -33.00 32.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 0.00 -64.00 -32.00 32.00 -65.00 0.00 -64.00 64.00 32.00 0.00 0.00 64.00 -64.00 33.00 -64.00 -33.00 -32.00 33.00 -65.00 -33.00 32.00 -32.00 -32.00 -32.00 -64.00 32.00 -64.00 -32.00 -32.00 32.00 -33.00 0.00 -32.00 0.00 0.00 32.00 -96.00 33.00 32.00 96.00 -32.00 32.00 -65.00 0.00 0.00 65.00 -32.00 0.00 -32.00 64.00 -64.00 0.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 -97.00 0.00 -32.00 32.00 -96.00 -32.00 -65.00 0.00 -64.00 -65.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 33.00 0.00 64.00 -97.00 32.00 -32.00 96.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -97.00 -96.00 32.00 -33.00 97.00 -32.00 -32.00 -32.00 -65.00 -32.00 -64.00 32.00 -129.00 -32.00 0.00 -64.00 65.00 -129.00 -65.00 0.00 -64.00 32.00 -32.00 0.00 -64.00 -32.00 -33.00 0.00 -64.00 32.00 -96.00 -32.00 -32.00 -161.00 32.00 -128.00 -32.00 -33.00 -97.00 0.00 -129.00 -64.00 -32.00 32.00 -32.00 -32.00 -32.00 64.00 -32.00 33.00 0.00 32.00 -32.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 33.00 -65.00 32.00 97.00 32.00 -32.00 64.00 -33.00 32.00 33.00 0.00 -33.00 32.00 33.00 33.00 -33.00 0.00 0.00 32.00 65.00 32.00 0.00 32.00 -32.00 32.00 64.00 32.00 0.00 33.00 32.00 64.00 -64.00 64.00 -32.00 0.00 0.00 97.00 0.00 32.00 32.00 64.00 -32.00 32.00 32.00 97.00 0.00 64.00 64.00 64.00 64.00 0.00 0.00 97.00 -32.00 32.00 -32.00 0.00 -32.00 64.00 -32.00 32.00 -32.00 65.00 -33.00 32.00 -32.00 64.00 -32.00 97.00 -579.00 -643.00 0.00 -33.00 -96.00 -64.00 -97.00 32.00 -96.00 -32.00 -32.00 32.00 -64.00 0.00 -33.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 -64.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 -33.00 -32.00 97.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -97.00 -64.00 0.00 -97.00 32.00 -32.00 -64.00 -32.00 32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 -96.00 0.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -65.00 32.00 0.00 -32.00 -32.00 32.00 32.00 129.00 -32.00 0.00 0.00 32.00 0.00 32.00 0.00 32.00 -64.00 0.00 -32.00 33.00 -33.00 -33.00 -32.00 33.00 -32.00 -33.00 0.00 33.00 -96.00 32.00 -33.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 64.00 -97.00 0.00 -160.00 -32.00 0.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -64.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 32.00 -33.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 33.00 0.00 32.00 -64.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 64.00 -33.00 0.00 0.00 32.00 -32.00 32.00 -64.00 0.00 0.00 32.00 -32.00 0.00 -32.00 33.00 0.00 -65.00 0.00 32.00 -33.00 0.00 -32.00 0.00 0.00 65.00 0.00 32.00 -96.00 32.00 32.00 0.00 -32.00 0.00 32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -32.00 0.00 -64.00 0.00 32.00 32.00 -32.00 32.00 32.00 33.00 -32.00 0.00 -32.00 -33.00 -32.00 0.00 -32.00 33.00 -33.00 0.00 0.00 32.00 -32.00 0.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 33.00 -32.00 -65.00 -65.00 0.00 0.00 -96.00 33.00 0.00 -33.00 -32.00 0.00 -32.00 33.00 0.00 -65.00 -33.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -97.00 0.00 -32.00 -32.00 -32.00 0.00 64.00 -32.00 0.00 -32.00 -32.00 -65.00 -32.00 -64.00 64.00 0.00 129.00 -32.00 64.00 0.00 32.00 -64.00 32.00 -65.00 32.00 0.00 97.00 32.00 32.00 -32.00 32.00 0.00 97.00 -32.00 96.00 32.00 32.00 0.00 97.00 -64.00 64.00 -32.00 0.00 -32.00 0.00 -97.00 -96.00 32.00 -65.00 33.00 -96.00 0.00 -32.00 -33.00 -32.00 -32.00 -65.00 32.00 0.00 65.00 -64.00 0.00 -64.00 0.00 -97.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 -64.00 -32.00 0.00 -65.00 -33.00 -32.00 33.00 0.00 0.00 -32.00 32.00 0.00 0.00 -64.00 32.00 -32.00 -32.00 -97.00 -65.00 0.00 33.00 -32.00 -33.00 -64.00 0.00 -32.00 -32.00 0.00 0.00 -65.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 -33.00 -97.00 0.00 -64.00 0.00 -32.00 -64.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 -32.00 -64.00 -33.00 0.00 0.00 64.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 -64.00 -32.00 0.00 0.00 -97.00 0.00 -64.00 -32.00 -65.00 32.00 -64.00 -32.00 -64.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -33.00 -97.00 -96.00 0.00 32.00 -32.00 0.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 0.00 -65.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -32.00 33.00 -450.00 675.00 -32.00 -65.00 -97.00 -64.00 -32.00 -64.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 0.00 -32.00 -129.00 0.00 -32.00 -65.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 65.00 -64.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 -97.00 0.00 -64.00 -64.00 -32.00 0.00 -64.00 -225.00 -97.00 64.00 -32.00 97.00 -32.00 0.00 -64.00 64.00 -97.00 64.00 -32.00 32.00 0.00 65.00 -64.00 32.00 -33.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -64.00 32.00 0.00 97.00 -32.00 64.00 0.00 32.00 -33.00 0.00 -32.00 32.00 -64.00 129.00 0.00 32.00 32.00 0.00 0.00 65.00 -32.00 0.00 -97.00 160.00 -96.00 129.00 -64.00 64.00 -97.00 193.00 0.00 32.00 65.00 32.00 0.00 65.00 -33.00 64.00 -32.00 64.00 65.00 97.00 -33.00 64.00 33.00 64.00 -33.00 65.00 33.00 96.00 0.00 32.00 0.00 65.00 -129.00 96.00 -450.00 -257.00 -675.00 -386.00 -1415.00 -836.00 -32.00 -32.00 -33.00 0.00 -96.00 -32.00 -64.00 0.00 -129.00 -97.00 -32.00 32.00 -64.00 -64.00 -65.00 -32.00 -96.00 32.00 -32.00 0.00 -32.00 -64.00 -97.00 0.00 -32.00 -64.00 -129.00 0.00 -32.00 32.00 -64.00 -32.00 -129.00 -33.00 -32.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 -65.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -64.00 0.00 32.00 -64.00 -32.00 0.00 -64.00 -33.00 0.00 0.00 -33.00 -32.00 33.00 0.00 -33.00 -64.00 0.00 0.00 -32.00 -64.00 0.00 32.00 0.00 -65.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -65.00 -32.00 -32.00 32.00 -64.00 32.00 -32.00 -32.00 -65.00 64.00 -64.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 64.00 -32.00 0.00 -97.00 -64.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -65.00 32.00 -32.00 0.00 32.00 0.00 33.00 0.00 -33.00 32.00 0.00 32.00 33.00 0.00 -65.00 32.00 32.00 33.00 0.00 -33.00 -32.00 33.00 -64.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 -64.00 32.00 32.00 32.00 -32.00 -32.00 -129.00 32.00 -96.00 32.00 0.00 0.00 32.00 33.00 0.00 96.00 -64.00 0.00 -32.00 64.00 0.00 -32.00 -33.00 -32.00 -32.00 0.00 32.00 -32.00 33.00 0.00 -65.00 -64.00 -32.00 -33.00 -64.00 65.00 -64.00 0.00 -161.00 32.00 0.00 32.00 -32.00 0.00 -65.00 32.00 -32.00 65.00 -32.00 32.00 -32.00 0.00 -32.00 64.00 0.00 0.00 -33.00 32.00 0.00 0.00 -96.00 64.00 -96.00 -128.00 64.00 0.00 64.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 32.00 65.00 32.00 0.00 32.00 -65.00 0.00 -64.00 33.00 -32.00 0.00 64.00 32.00 -96.00 0.00 -33.00 64.00 -96.00 0.00 -32.00 97.00 -32.00 0.00 -97.00 0.00 0.00 32.00 -128.00 64.00 -33.00 32.00 0.00 32.00 33.00 33.00 0.00 32.00 -65.00 -32.00 -32.00 0.00 32.00 64.00 -32.00 32.00 -64.00 -32.00 0.00 32.00 0.00 32.00 -64.00 0.00 -33.00 0.00 33.00 32.00 -33.00 32.00 0.00 65.00 0.00 32.00 -64.00 0.00 -32.00 64.00 -32.00 64.00 32.00 0.00 -32.00 33.00 -65.00 32.00 -32.00 32.00 32.00 96.00 -32.00 33.00 -64.00 -33.00 -64.00 65.00 32.00 0.00 0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 65.00 -32.00 32.00 -32.00 0.00 -97.00 0.00 0.00 32.00 -64.00 32.00 0.00 32.00 32.00 32.00 32.00 32.00 -32.00 33.00 -64.00 32.00 0.00 32.00 0.00 32.00 64.00 0.00 -32.00 32.00 0.00 64.00 -32.00 0.00 -32.00 65.00 32.00 128.00 -32.00 0.00 -33.00 33.00 33.00 32.00 -33.00 64.00 -64.00 97.00 0.00 -65.00 -32.00 -64.00 -64.00 32.00 -161.00 0.00 -161.00 -64.00 0.00 -32.00 97.00 -65.00 0.00 -32.00 -33.00 0.00 -96.00 0.00 -32.00 97.00 -32.00 0.00 -32.00 -33.00 0.00 -64.00 64.00 -129.00 -97.00 0.00 33.00 -64.00 0.00 -128.00 -65.00 -65.00 32.00 -96.00 -64.00 0.00 -32.00 -129.00 32.00 -64.00 0.00 -64.00 -32.00 -33.00 -225.00 33.00 0.00 -129.00 -32.00 -64.00 32.00 -65.00 32.00 -32.00 96.00 32.00 33.00 0.00 0.00 -64.00 -97.00 -64.00 32.00 -97.00 65.00 -64.00 32.00 -161.00 64.00 -96.00 -32.00 -129.00 64.00 -32.00 65.00 32.00 0.00 -32.00 32.00 -129.00 -65.00 -32.00 33.00 -161.00 -33.00 -96.00 -64.00 -96.00 32.00 -97.00 -32.00 -32.00 0.00 -97.00 0.00 -32.00 64.00 -64.00 0.00 -64.00 -64.00 -97.00 0.00 -128.00 -32.00 -33.00 -129.00 33.00 -32.00 -97.00 32.00 -64.00 0.00 -161.00 32.00 -64.00 0.00 -97.00 33.00 -193.00 0.00 -96.00 -97.00 -97.00 0.00 -32.00 32.00 -96.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 129.00 -128.00 0.00 -97.00 -64.00 -96.00 32.00 -65.00 96.00 -32.00 0.00 -96.00 -96.00 -97.00 -97.00 0.00 -32.00 -32.00 0.00 -161.00 -32.00 -64.00 -32.00 -64.00 -32.00 -161.00 -32.00 -64.00 -33.00 -65.00 0.00 -32.00 129.00 -128.00 32.00 -32.00 64.00 -33.00 33.00 -64.00 32.00 -32.00 0.00 -129.00 -32.00 -96.00 32.00 -64.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 -32.00 -32.00 -33.00 0.00 -64.00 0.00 -128.00 -32.00 -33.00 0.00 -96.00 -193.00 32.00 -129.00 -32.00 -64.00 0.00 -129.00 0.00 -64.00 0.00 -97.00z\"\n          },\n          mt: {\n            name: \"MT\",\n            path: \"M64261.00 72698.00l0.00 -64.00 0.00 -32.00 161.00 0.00 32.00 -65.00 64.00 -32.00 97.00 0.00 96.00 32.00 32.00 33.00 33.00 -33.00 -33.00 -64.00 33.00 -161.00 0.00 -32.00 0.00 -64.00 -33.00 -32.00 -32.00 -97.00 -32.00 -32.00 -64.00 -96.00 0.00 -65.00 0.00 -64.00 0.00 -64.00 32.00 -97.00 32.00 0.00 0.00 -64.00 64.00 -64.00 0.00 -97.00 33.00 -96.00 128.00 -258.00 32.00 -32.00 97.00 -128.00 -65.00 -65.00 -32.00 -96.00 -96.00 -97.00 -32.00 -128.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 -65.00 0.00 -32.00 0.00 -129.00 -64.00 -32.00 0.00 -32.00 -32.00 3473.00 0.00 64.00 0.00 418.00 0.00 1543.00 0.00 2669.00 32.00 3473.00 0.00 128.00 0.00 2830.00 0.00 289.00 -32.00 64.00 -32.00 33.00 0.00 32.00 0.00 32.00 0.00 64.00 -65.00 193.00 -192.00 97.00 -65.00 32.00 -32.00 0.00 -32.00 -129.00 -64.00 -128.00 32.00 -33.00 0.00 -128.00 64.00 -97.00 -32.00 -32.00 -32.00 129.00 -290.00 32.00 -64.00 32.00 -96.00 32.00 -33.00 0.00 -64.00 -32.00 -64.00 -64.00 -64.00 32.00 -129.00 0.00 -64.00 -32.00 -65.00 -32.00 -96.00 64.00 -129.00 32.00 -32.00 64.00 -96.00 33.00 -65.00 128.00 -160.00 0.00 -65.00 32.00 -64.00 -32.00 -64.00 32.00 -65.00 129.00 -64.00 32.00 -32.00 -32.00 -97.00 -32.00 -32.00 0.00 -64.00 32.00 -64.00 -32.00 -193.00 64.00 -97.00 -64.00 -193.00 32.00 -96.00 128.00 -64.00 33.00 -65.00 -33.00 -96.00 33.00 -97.00 -33.00 -64.00 -128.00 -225.00 -32.00 -96.00 0.00 -65.00 -32.00 -128.00 -97.00 -129.00 -96.00 -161.00 0.00 -225.00 -65.00 -64.00 0.00 -64.00 33.00 0.00 32.00 -65.00 193.00 -96.00 160.00 -161.00 65.00 -96.00 0.00 -65.00 0.00 -128.00 32.00 -33.00 128.00 -128.00 65.00 -129.00 161.00 -161.00 0.00 -96.00 -33.00 -64.00 -32.00 -161.00 -32.00 -129.00 32.00 -160.00 32.00 -161.00 161.00 -322.00 161.00 -160.00 32.00 -33.00 0.00 -32.00 64.00 32.00 257.00 161.00 33.00 64.00 128.00 258.00 161.00 160.00 129.00 225.00 128.00 322.00 0.00 32.00 32.00 225.00 33.00 32.00 64.00 0.00 64.00 33.00 32.00 64.00 65.00 418.00 32.00 193.00 161.00 289.00 32.00 97.00 32.00 353.00 0.00 97.00 129.00 128.00 128.00 258.00 225.00 192.00 32.00 258.00 32.00 64.00 33.00 32.00 128.00 32.00 65.00 33.00 96.00 160.00 0.00 65.00 0.00 32.00 -64.00 160.00 -32.00 161.00 -65.00 97.00 0.00 32.00 0.00 64.00 65.00 129.00 0.00 32.00 0.00 32.00 -97.00 161.00 0.00 32.00 32.00 96.00 129.00 161.00 0.00 65.00 -32.00 64.00 0.00 32.00 96.00 64.00 32.00 32.00 -32.00 97.00 -64.00 64.00 32.00 97.00 0.00 32.00 64.00 32.00 65.00 32.00 -32.00 225.00 32.00 32.00 64.00 97.00 64.00 193.00 -32.00 161.00 32.00 96.00 129.00 0.00 161.00 -64.00 225.00 128.00 96.00 65.00 65.00 0.00 96.00 0.00 64.00 64.00 0.00 128.00 -32.00 129.00 32.00 32.00 65.00 32.00 96.00 97.00 161.00 0.00 161.00 32.00 32.00 97.00 32.00 32.00 64.00 0.00 161.00 -32.00 32.00 -33.00 64.00 33.00 97.00 32.00 64.00 32.00 32.00 32.00 258.00 321.00 192.00 97.00 33.00 96.00 64.00 97.00 64.00 32.00 0.00 97.00 65.00 32.00 32.00 64.00 0.00 64.00 -97.00 129.00 32.00 96.00 -32.00 65.00 0.00 32.00 32.00 32.00 65.00 64.00 32.00 65.00 64.00 32.00 64.00 32.00 65.00 32.00 193.00 -32.00 64.00 32.00 289.00 32.00 33.00 0.00 64.00 -32.00 64.00 32.00 129.00 32.00 64.00 97.00 97.00 257.00 32.00 0.00 0.00 64.00 0.00 161.00 32.00 64.00 0.00 65.00 32.00 64.00 32.00 0.00 97.00 -32.00 96.00 -64.00 0.00 -33.00 32.00 0.00 64.00 0.00 129.00 -32.00 1865.00 161.00 547.00 32.00 1736.00 161.00 3762.00 289.00 1254.00 129.00 579.00 32.00 2379.00 193.00 2476.00 193.00 2154.00 161.00 2154.00 160.00 257.00 0.00 1737.00 129.00 3762.00 257.00 739.00 65.00 1158.00 64.00 1029.00 64.00 2926.00 193.00 0.00 32.00 0.00 32.00 -97.00 97.00 -96.00 193.00 0.00 128.00 -65.00 97.00 0.00 64.00 -64.00 97.00 0.00 128.00 -32.00 97.00 -64.00 64.00 -129.00 64.00 -64.00 65.00 -32.00 96.00 -65.00 64.00 -64.00 129.00 -32.00 161.00 0.00 32.00 32.00 0.00 32.00 225.00 -64.00 161.00 -32.00 161.00 -97.00 225.00 0.00 32.00 32.00 96.00 -32.00 32.00 -96.00 65.00 -33.00 64.00 -128.00 64.00 -64.00 322.00 32.00 96.00 -32.00 32.00 -33.00 0.00 -96.00 33.00 0.00 96.00 -32.00 96.00 32.00 97.00 -64.00 96.00 -32.00 97.00 -33.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 64.00 -65.00 97.00 -96.00 96.00 0.00 65.00 96.00 64.00 0.00 96.00 33.00 65.00 0.00 64.00 32.00 96.00 -97.00 161.00 0.00 65.00 0.00 32.00 -64.00 0.00 -32.00 32.00 0.00 32.00 -32.00 64.00 0.00 32.00 0.00 129.00 64.00 32.00 32.00 64.00 0.00 65.00 -96.00 96.00 -65.00 97.00 65.00 161.00 -32.00 64.00 32.00 96.00 0.00 129.00 32.00 64.00 0.00 129.00 -32.00 64.00 0.00 32.00 -97.00 65.00 -32.00 96.00 -64.00 32.00 0.00 65.00 -32.00 96.00 32.00 129.00 0.00 64.00 32.00 96.00 -32.00 129.00 -32.00 193.00 -65.00 32.00 -64.00 64.00 -32.00 32.00 -32.00 65.00 0.00 64.00 -32.00 97.00 -65.00 128.00 0.00 129.00 -64.00 128.00 0.00 97.00 0.00 64.00 0.00 129.00 32.00 64.00 -32.00 129.00 96.00 193.00 33.00 0.00 128.00 32.00 64.00 0.00 33.00 0.00 32.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 -32.00 64.00 32.00 96.00 0.00 129.00 -32.00 32.00 -33.00 64.00 -64.00 33.00 -32.00 32.00 -129.00 128.00 0.00 32.00 33.00 65.00 32.00 64.00 32.00 161.00 32.00 64.00 32.00 64.00 0.00 161.00 32.00 32.00 97.00 0.00 96.00 97.00 0.00 96.00 -96.00 32.00 -32.00 65.00 64.00 96.00 0.00 97.00 -129.00 128.00 -32.00 65.00 32.00 32.00 0.00 32.00 -32.00 96.00 0.00 32.00 97.00 97.00 0.00 96.00 -33.00 193.00 0.00 97.00 -32.00 64.00 0.00 161.00 -32.00 64.00 32.00 97.00 129.00 -33.00 32.00 33.00 0.00 128.00 64.00 97.00 0.00 64.00 -64.00 64.00 0.00 32.00 0.00 97.00 32.00 32.00 -32.00 97.00 64.00 96.00 33.00 96.00 -33.00 161.00 65.00 32.00 -32.00 129.00 0.00 32.00 -65.00 -32.00 -64.00 32.00 32.00 129.00 -64.00 96.00 -32.00 161.00 -65.00 64.00 -32.00 97.00 97.00 64.00 0.00 64.00 -33.00 0.00 -96.00 -32.00 -32.00 32.00 -32.00 65.00 32.00 64.00 0.00 129.00 225.00 -33.00 32.00 33.00 0.00 64.00 -32.00 64.00 32.00 129.00 64.00 0.00 -32.00 96.00 65.00 65.00 0.00 128.00 -33.00 64.00 97.00 0.00 -64.00 129.00 0.00 64.00 32.00 33.00 32.00 0.00 32.00 -97.00 96.00 0.00 33.00 0.00 0.00 32.00 -97.00 65.00 0.00 32.00 161.00 64.00 161.00 0.00 64.00 -32.00 32.00 64.00 0.00 65.00 32.00 64.00 0.00 64.00 -32.00 64.00 -32.00 97.00 -32.00 96.00 0.00 193.00 -97.00 32.00 -64.00 97.00 -32.00 0.00 -64.00 -32.00 -65.00 32.00 32.00 96.00 65.00 32.00 0.00 33.00 -32.00 64.00 -129.00 32.00 -32.00 32.00 64.00 129.00 32.00 32.00 0.00 64.00 -32.00 161.00 32.00 129.00 -32.00 64.00 -32.00 64.00 32.00 0.00 64.00 65.00 0.00 64.00 0.00 129.00 -64.00 96.00 -32.00 32.00 0.00 161.00 -32.00 32.00 -64.00 97.00 -65.00 64.00 -32.00 64.00 -96.00 64.00 0.00 129.00 32.00 129.00 -32.00 64.00 -65.00 32.00 -64.00 129.00 -96.00 96.00 -129.00 65.00 -96.00 128.00 -33.00 322.00 -64.00 96.00 -32.00 161.00 -64.00 193.00 -97.00 128.00 -64.00 -32.00 -65.00 32.00 -32.00 0.00 -32.00 33.00 -32.00 64.00 96.00 128.00 -32.00 161.00 32.00 65.00 -32.00 96.00 65.00 129.00 0.00 32.00 0.00 96.00 0.00 32.00 0.00 65.00 0.00 128.00 0.00 65.00 -97.00 96.00 0.00 97.00 64.00 96.00 0.00 129.00 97.00 225.00 -32.00 96.00 -32.00 64.00 -129.00 97.00 -96.00 0.00 -65.00 -64.00 -32.00 0.00 -32.00 0.00 0.00 64.00 32.00 128.00 0.00 97.00 -64.00 64.00 -64.00 129.00 -97.00 193.00 -64.00 193.00 -32.00 64.00 32.00 161.00 -32.00 96.00 -65.00 32.00 32.00 129.00 0.00 32.00 -32.00 65.00 -32.00 64.00 64.00 96.00 0.00 65.00 65.00 64.00 32.00 64.00 -32.00 97.00 32.00 128.00 -161.00 258.00 32.00 160.00 -128.00 257.00 -33.00 0.00 -32.00 65.00 32.00 96.00 0.00 32.00 -32.00 65.00 -32.00 32.00 -32.00 64.00 -32.00 32.00 0.00 97.00 64.00 96.00 -32.00 65.00 -96.00 64.00 -97.00 161.00 0.00 96.00 0.00 64.00 -32.00 97.00 64.00 64.00 0.00 32.00 -32.00 0.00 -193.00 129.00 -32.00 0.00 -64.00 96.00 0.00 97.00 -225.00 128.00 -225.00 129.00 -129.00 32.00 -96.00 -32.00 -33.00 -64.00 -32.00 -161.00 -96.00 -64.00 -65.00 0.00 -32.00 64.00 -64.00 64.00 -96.00 65.00 -97.00 -65.00 -129.00 32.00 -64.00 129.00 -64.00 0.00 -32.00 64.00 -65.00 65.00 -193.00 -32.00 -32.00 32.00 -64.00 64.00 -64.00 161.00 -129.00 32.00 -96.00 225.00 -33.00 32.00 -128.00 0.00 -97.00 64.00 0.00 129.00 -64.00 97.00 0.00 96.00 32.00 64.00 65.00 32.00 0.00 33.00 -97.00 64.00 -64.00 32.00 -32.00 97.00 0.00 160.00 64.00 65.00 0.00 64.00 -129.00 193.00 0.00 32.00 32.00 64.00 0.00 32.00 -64.00 97.00 32.00 96.00 0.00 32.00 0.00 33.00 -32.00 32.00 -96.00 32.00 -32.00 64.00 0.00 32.00 32.00 97.00 0.00 64.00 -65.00 0.00 -64.00 0.00 -32.00 -96.00 -64.00 0.00 0.00 32.00 -32.00 0.00 32.00 96.00 96.00 258.00 0.00 64.00 -32.00 96.00 -32.00 32.00 -161.00 290.00 0.00 64.00 -129.00 64.00 -96.00 161.00 -32.00 65.00 -97.00 96.00 -32.00 96.00 -32.00 33.00 -96.00 -97.00 -193.00 0.00 -32.00 64.00 0.00 65.00 0.00 32.00 -65.00 -32.00 -64.00 32.00 -64.00 161.00 -65.00 32.00 -225.00 32.00 -96.00 -32.00 -65.00 0.00 -32.00 32.00 -32.00 -32.00 -96.00 64.00 -322.00 -64.00 -64.00 32.00 -129.00 0.00 -96.00 0.00 32.00 96.00 -32.00 129.00 -32.00 0.00 0.00 64.00 -129.00 97.00 0.00 96.00 -32.00 32.00 -64.00 65.00 -33.00 96.00 -32.00 64.00 0.00 33.00 -32.00 96.00 0.00 32.00 -96.00 65.00 -33.00 -33.00 -32.00 33.00 -32.00 32.00 -32.00 32.00 -97.00 -32.00 -192.00 96.00 -97.00 65.00 -64.00 0.00 -64.00 32.00 -33.00 32.00 -32.00 0.00 -64.00 -32.00 -64.00 32.00 0.00 96.00 -97.00 32.00 32.00 65.00 -32.00 64.00 0.00 161.00 -32.00 0.00 -64.00 0.00 0.00 32.00 96.00 129.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 -65.00 -33.00 0.00 -32.00 65.00 0.00 32.00 -96.00 0.00 -65.00 64.00 -64.00 0.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 -97.00 64.00 0.00 65.00 -32.00 0.00 -32.00 64.00 32.00 32.00 0.00 32.00 0.00 65.00 -32.00 32.00 0.00 32.00 0.00 64.00 64.00 64.00 -64.00 33.00 0.00 32.00 64.00 64.00 129.00 0.00 32.00 0.00 0.00 32.00 0.00 65.00 32.00 32.00 97.00 64.00 -33.00 32.00 0.00 32.00 33.00 -32.00 64.00 32.00 -64.00 33.00 32.00 32.00 0.00 32.00 0.00 32.00 -32.00 64.00 -33.00 0.00 -64.00 0.00 0.00 65.00 32.00 0.00 0.00 32.00 0.00 64.00 -32.00 32.00 0.00 64.00 -64.00 -32.00 0.00 65.00 -64.00 -65.00 -33.00 0.00 0.00 65.00 33.00 32.00 -65.00 0.00 32.00 64.00 -32.00 32.00 -64.00 0.00 -64.00 -64.00 -32.00 0.00 32.00 129.00 -97.00 -65.00 -32.00 0.00 -32.00 0.00 32.00 65.00 -32.00 32.00 0.00 32.00 64.00 0.00 32.00 129.00 -32.00 32.00 -32.00 -65.00 -32.00 -32.00 -32.00 32.00 -32.00 33.00 64.00 96.00 -32.00 -32.00 -65.00 32.00 -64.00 32.00 0.00 32.00 64.00 0.00 -32.00 32.00 0.00 129.00 -64.00 0.00 -32.00 64.00 0.00 32.00 0.00 65.00 -32.00 0.00 -33.00 32.00 -32.00 -32.00 -96.00 96.00 -32.00 0.00 0.00 65.00 -32.00 0.00 0.00 -33.00 -33.00 0.00 -32.00 33.00 -32.00 -33.00 -32.00 65.00 -64.00 0.00 -65.00 32.00 33.00 0.00 -33.00 32.00 -64.00 32.00 0.00 64.00 -32.00 0.00 -32.00 33.00 -32.00 0.00 0.00 -65.00 -33.00 0.00 0.00 32.00 -32.00 0.00 65.00 65.00 -33.00 64.00 33.00 0.00 0.00 32.00 -129.00 0.00 32.00 0.00 32.00 65.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 0.00 33.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 32.00 -32.00 -32.00 -65.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 64.00 32.00 32.00 -32.00 0.00 0.00 64.00 -33.00 33.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 64.00 0.00 32.00 0.00 32.00 0.00 33.00 -32.00 32.00 0.00 32.00 -32.00 64.00 0.00 -32.00 -32.00 0.00 0.00 129.00 32.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 32.00 32.00 -32.00 0.00 0.00 33.00 -33.00 0.00 33.00 64.00 -33.00 0.00 0.00 32.00 33.00 0.00 0.00 32.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 32.00 -32.00 33.00 -33.00 0.00 0.00 32.00 0.00 -32.00 0.00 64.00 -32.00 -32.00 -32.00 0.00 32.00 32.00 -64.00 0.00 32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 0.00 32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 33.00 0.00 32.00 0.00 32.00 -32.00 96.00 -32.00 0.00 0.00 32.00 -32.00 33.00 -32.00 64.00 -32.00 -32.00 -33.00 32.00 0.00 64.00 -32.00 97.00 0.00 32.00 0.00 32.00 -32.00 0.00 0.00 96.00 -32.00 33.00 -32.00 64.00 -65.00 0.00 33.00 96.00 -65.00 33.00 0.00 32.00 -64.00 32.00 0.00 32.00 0.00 32.00 32.00 -32.00 0.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 0.00 64.00 33.00 32.00 32.00 -32.00 32.00 32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 65.00 0.00 -33.00 32.00 -32.00 0.00 32.00 0.00 0.00 65.00 -32.00 32.00 0.00 -32.00 0.00 32.00 -32.00 32.00 32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 33.00 -32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 0.00 0.00 64.00 0.00 33.00 0.00 32.00 0.00 -32.00 -32.00 64.00 0.00 32.00 -32.00 64.00 0.00 33.00 0.00 64.00 0.00 -32.00 0.00 32.00 -33.00 64.00 0.00 32.00 33.00 0.00 -33.00 0.00 0.00 65.00 33.00 32.00 -33.00 32.00 33.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 0.00 32.00 0.00 32.00 -33.00 32.00 0.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 65.00 32.00 64.00 0.00 64.00 33.00 0.00 -33.00 33.00 33.00 32.00 0.00 32.00 -33.00 32.00 33.00 0.00 0.00 32.00 32.00 32.00 -32.00 32.00 96.00 65.00 0.00 -32.00 32.00 32.00 64.00 32.00 0.00 32.00 33.00 32.00 32.00 32.00 32.00 0.00 32.00 65.00 32.00 0.00 -32.00 32.00 64.00 64.00 -32.00 32.00 32.00 65.00 65.00 64.00 0.00 32.00 32.00 64.00 -32.00 161.00 32.00 32.00 32.00 32.00 0.00 33.00 32.00 32.00 -32.00 96.00 161.00 97.00 64.00 128.00 32.00 32.00 32.00 65.00 0.00 289.00 -482.00 0.00 -96.00 -32.00 -33.00 -64.00 -32.00 0.00 -64.00 -32.00 -64.00 -33.00 -32.00 0.00 -97.00 -32.00 -193.00 -32.00 -128.00 32.00 -33.00 32.00 -32.00 0.00 -96.00 -32.00 -97.00 32.00 -96.00 -64.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -33.00 -64.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 0.00 97.00 -33.00 32.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 -64.00 -32.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 -64.00 0.00 -64.00 -32.00 -65.00 0.00 0.00 -65.00 -32.00 0.00 -32.00 32.00 -64.00 0.00 0.00 -32.00 -97.00 -32.00 -32.00 -64.00 0.00 -32.00 -64.00 0.00 0.00 32.00 -32.00 -32.00 -129.00 0.00 0.00 32.00 -64.00 32.00 -32.00 32.00 -33.00 32.00 -32.00 65.00 -32.00 -65.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 -32.00 0.00 -161.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -33.00 0.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -33.00 -32.00 33.00 0.00 -33.00 -32.00 -32.00 -65.00 32.00 0.00 -64.00 -32.00 0.00 32.00 32.00 -32.00 0.00 -32.00 -64.00 -64.00 0.00 -32.00 0.00 0.00 32.00 -33.00 0.00 -64.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -33.00 -32.00 33.00 -64.00 -33.00 0.00 33.00 -32.00 -33.00 -65.00 0.00 -32.00 0.00 -32.00 33.00 -64.00 32.00 -32.00 0.00 -65.00 128.00 -160.00 33.00 -65.00 32.00 -64.00 0.00 -32.00 64.00 -129.00 32.00 -32.00 0.00 -32.00 64.00 -32.00 33.00 -32.00 0.00 -97.00 64.00 -32.00 161.00 -64.00 32.00 -32.00 32.00 0.00 64.00 0.00 32.00 0.00 97.00 0.00 32.00 0.00 64.00 -65.00 65.00 32.00 64.00 -32.00 32.00 0.00 97.00 -1993.00 -65.00 -32.00 0.00 -65.00 -64.00 -32.00 -129.00 32.00 -64.00 65.00 -32.00 0.00 -32.00 0.00 0.00 64.00 -32.00 32.00 -65.00 97.00 -96.00 0.00 -65.00 32.00 -32.00 96.00 -32.00 32.00 -32.00 97.00 32.00 96.00 -193.00 64.00 -32.00 33.00 -32.00 64.00 -129.00 129.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -64.00 64.00 -33.00 32.00 -96.00 33.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 -32.00 0.00 -128.00 32.00 -32.00 64.00 -33.00 65.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 0.00 64.00 0.00 32.00 0.00 32.00 32.00 0.00 0.00 32.00 -32.00 65.00 0.00 64.00 0.00 32.00 -96.00 97.00 0.00 32.00 -32.00 64.00 32.00 32.00 -32.00 32.00 -65.00 -32.00 -64.00 0.00 -32.00 32.00 0.00 -32.00 0.00 32.00 -32.00 -32.00 -65.00 32.00 -32.00 -64.00 -32.00 32.00 -32.00 -32.00 -65.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 -64.00 0.00 -32.00 65.00 -65.00 32.00 -32.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 -33.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -33.00 0.00 0.00 -32.00 0.00 32.00 -96.00 -64.00 -64.00 -32.00 32.00 -33.00 32.00 -96.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -65.00 32.00 32.00 0.00 -32.00 0.00 -32.00 -97.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -33.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -161.00 -32.00 -32.00 -64.00 0.00 -32.00 -32.00 0.00 32.00 -65.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -64.00 -32.00 -96.00 0.00 -33.00 -32.00 -32.00 0.00 -96.00 64.00 -32.00 -64.00 -33.00 32.00 0.00 -32.00 -64.00 -32.00 -32.00 32.00 -129.00 64.00 -96.00 32.00 -64.00 -32.00 -32.00 32.00 -65.00 33.00 -32.00 0.00 0.00 32.00 -64.00 -32.00 -32.00 -33.00 0.00 65.00 -65.00 32.00 -32.00 0.00 -32.00 0.00 -97.00 32.00 -32.00 64.00 0.00 32.00 -32.00 65.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -64.00 0.00 -65.00 64.00 -32.00 0.00 -64.00 65.00 -32.00 0.00 0.00 32.00 0.00 32.00 -97.00 32.00 -32.00 0.00 -64.00 32.00 -97.00 -32.00 -64.00 32.00 -32.00 -64.00 -32.00 0.00 -161.00 0.00 -32.00 32.00 -64.00 0.00 0.00 32.00 -33.00 -32.00 -32.00 64.00 -32.00 -32.00 -32.00 65.00 0.00 32.00 -32.00 -32.00 -64.00 -33.00 0.00 33.00 -33.00 -33.00 0.00 33.00 -32.00 0.00 0.00 32.00 0.00 -32.00 -32.00 32.00 -64.00 0.00 0.00 -32.00 0.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -33.00 0.00 33.00 -32.00 -33.00 -32.00 33.00 -32.00 -33.00 0.00 33.00 -33.00 -33.00 -32.00 65.00 -64.00 64.00 -64.00 -32.00 0.00 -32.00 -65.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 0.00 -33.00 -32.00 -32.00 -65.00 32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -96.00 0.00 0.00 -32.00 32.00 32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -33.00 0.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 32.00 -32.00 -32.00 32.00 0.00 -65.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 -32.00 32.00 32.00 -32.00 -64.00 -32.00 32.00 -33.00 -32.00 0.00 -96.00 33.00 -33.00 -33.00 -32.00 33.00 32.00 0.00 0.00 32.00 -64.00 -32.00 0.00 -33.00 0.00 33.00 -64.00 0.00 0.00 -97.00 -32.00 0.00 -65.00 -32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 -65.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 0.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 0.00 -33.00 -64.00 -64.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -64.00 -64.00 0.00 -32.00 -32.00 0.00 -33.00 -65.00 -32.00 32.00 0.00 -64.00 -64.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 -64.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -33.00 -32.00 0.00 -65.00 33.00 0.00 -33.00 -32.00 33.00 0.00 -33.00 -32.00 33.00 -64.00 -33.00 0.00 33.00 -33.00 -65.00 33.00 -32.00 -33.00 -64.00 -64.00 0.00 64.00 -32.00 -32.00 -65.00 -64.00 -32.00 -64.00 0.00 32.00 0.00 32.00 0.00 32.00 -64.00 -32.00 0.00 -32.00 0.00 -32.00 -64.00 64.00 -32.00 -64.00 -33.00 64.00 -32.00 -64.00 -64.00 64.00 -32.00 -64.00 -65.00 64.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -33.00 -33.00 0.00 -32.00 33.00 -32.00 -65.00 -32.00 32.00 0.00 33.00 -96.00 -97.00 32.00 -64.00 -32.00 0.00 -65.00 0.00 -32.00 32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 -65.00 -33.00 33.00 -64.00 -97.00 -32.00 32.00 32.00 32.00 -64.00 33.00 -32.00 -33.00 32.00 -32.00 -65.00 32.00 0.00 -32.00 33.00 0.00 32.00 -32.00 -129.00 0.00 -64.00 -32.00 0.00 32.00 0.00 32.00 -65.00 32.00 -64.00 -96.00 32.00 -32.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -33.00 64.00 0.00 -97.00 -32.00 0.00 -32.00 33.00 0.00 -65.00 -32.00 32.00 0.00 -96.00 0.00 -32.00 -32.00 32.00 0.00 -64.00 64.00 0.00 -64.00 -65.00 -64.00 -32.00 -65.00 -64.00 -32.00 0.00 32.00 64.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 0.00 -65.00 32.00 -96.00 -32.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -65.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 129.00 -64.00 -32.00 -32.00 32.00 -33.00 0.00 33.00 64.00 -65.00 -32.00 0.00 32.00 -64.00 0.00 -32.00 -32.00 -64.00 0.00 0.00 64.00 -33.00 -32.00 0.00 32.00 33.00 65.00 -65.00 -33.00 -32.00 33.00 32.00 0.00 -64.00 0.00 -32.00 0.00 0.00 32.00 32.00 32.00 -32.00 64.00 -32.00 0.00 -33.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 33.00 -64.00 0.00 0.00 32.00 -65.00 -65.00 0.00 -32.00 32.00 32.00 0.00 -32.00 -64.00 -32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -96.00 33.00 0.00 32.00 -33.00 64.00 -64.00 0.00 -32.00 64.00 -32.00 -32.00 -64.00 32.00 -65.00 65.00 -32.00 -33.00 0.00 -64.00 -64.00 32.00 0.00 -64.00 -32.00 0.00 0.00 32.00 -97.00 -64.00 -32.00 0.00 0.00 -64.00 -32.00 64.00 -32.00 -32.00 32.00 64.00 -32.00 0.00 0.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 -32.00 -96.00 64.00 -97.00 -32.00 -32.00 0.00 32.00 65.00 -64.00 0.00 -32.00 0.00 -64.00 0.00 -33.00 0.00 0.00 -33.00 -64.00 0.00 0.00 33.00 -64.00 -33.00 -32.00 -32.00 0.00 32.00 32.00 33.00 -32.00 32.00 -33.00 -65.00 -32.00 0.00 32.00 33.00 -32.00 32.00 -64.00 -32.00 0.00 -33.00 -32.00 -32.00 -65.00 32.00 33.00 -32.00 -129.00 0.00 -32.00 -32.00 -64.00 0.00 0.00 64.00 -33.00 0.00 -64.00 0.00 0.00 65.00 -64.00 32.00 32.00 32.00 0.00 32.00 -96.00 64.00 -33.00 33.00 33.00 64.00 -33.00 0.00 -64.00 -32.00 -129.00 32.00 0.00 96.00 -64.00 33.00 64.00 32.00 33.00 0.00 32.00 32.00 -32.00 32.00 -33.00 0.00 -32.00 32.00 65.00 32.00 0.00 32.00 -33.00 33.00 -64.00 0.00 -32.00 32.00 32.00 64.00 -32.00 32.00 -32.00 -32.00 -32.00 64.00 32.00 33.00 -32.00 64.00 -32.00 0.00 -33.00 96.00 -64.00 32.00 -64.00 -32.00 -65.00 32.00 -96.00 33.00 -64.00 96.00 -65.00 0.00 -32.00 64.00 -32.00 0.00 32.00 65.00 -32.00 32.00 0.00 32.00 32.00 32.00 65.00 -32.00 0.00 32.00 -97.00 129.00 -32.00 96.00 -64.00 65.00 -33.00 0.00 -32.00 0.00 -32.00 64.00 0.00 32.00 -64.00 0.00 -32.00 193.00 -32.00 0.00 -33.00 -32.00 -32.00 32.00 -64.00 0.00 -32.00 64.00 -65.00 32.00 0.00 97.00 -96.00 0.00 0.00 32.00 -129.00 -64.00 -64.00 64.00 -96.00 0.00 -97.00 32.00 -96.00 0.00 -32.00 0.00 0.00 32.00 -33.00 -32.00 -64.00 64.00 -32.00 -32.00 32.00 65.00 64.00 0.00 0.00 32.00 -96.00 0.00 -64.00 32.00 -97.00 -32.00 0.00 64.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 32.00 0.00 32.00 -64.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 97.00 -64.00 -33.00 0.00 33.00 -33.00 32.00 0.00 32.00 -64.00 -32.00 -64.00 96.00 -64.00 0.00 32.00 97.00 -32.00 64.00 -65.00 -32.00 -64.00 -97.00 0.00 -96.00 -161.00 32.00 -129.00 -64.00 33.00 -65.00 -97.00 -64.00 -32.00 -32.00 -64.00 0.00 -32.00 -97.00 -129.00 33.00 0.00 -33.00 -32.00 -96.00 32.00 0.00 32.00 -32.00 -64.00 -32.00 -32.00 -65.00 32.00 0.00 -32.00 -32.00 -32.00 -64.00 -65.00 -64.00 -32.00 0.00 0.00 32.00 -96.00 32.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 -64.00 -33.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 -33.00 0.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -65.00 -32.00 0.00 -32.00 -128.00 0.00 -64.00 0.00 -65.00 -65.00 -32.00 0.00 -129.00 -64.00 -64.00 -64.00 32.00 -64.00 129.00 -611.00 -547.00 -450.00 290.00 -97.00 32.00 0.00 -64.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -33.00 -33.00 -32.00 0.00 -64.00 -32.00 0.00 -128.00 -64.00 -65.00 -65.00 0.00 -64.00 65.00 -161.00 -65.00 0.00 -160.00 -32.00 -33.00 -64.00 33.00 -32.00 -33.00 -32.00 -32.00 32.00 -96.00 -161.00 32.00 -96.00 -32.00 32.00 -65.00 -32.00 -64.00 -97.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -65.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 -64.00 -33.00 0.00 -128.00 -65.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 -64.00 -33.00 0.00 -32.00 -64.00 -32.00 -32.00 -32.00 32.00 -32.00 -97.00 -65.00 0.00 -32.00 -32.00 0.00 -64.00 -96.00 -32.00 0.00 0.00 -64.00 -32.00 0.00 -97.00 -65.00 -32.00 -257.00 64.00 -96.00 -32.00 -33.00 -32.00 0.00 -96.00 33.00 -33.00 0.00 0.00 -33.00 0.00 -96.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 65.00 -64.00 -65.00 0.00 0.00 -32.00 0.00 -32.00 65.00 0.00 0.00 -32.00 -65.00 0.00 0.00 -97.00 32.00 -32.00 33.00 -64.00 -65.00 0.00 -64.00 -65.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -64.00 32.00 -64.00 -32.00 -33.00 -33.00 33.00 -32.00 -33.00 32.00 -64.00 -32.00 -32.00 32.00 -32.00 33.00 -65.00 -33.00 0.00 33.00 -128.00 -33.00 0.00 33.00 -32.00 -33.00 -32.00 33.00 -33.00 -33.00 0.00 33.00 -32.00 -65.00 -96.00 0.00 -32.00 0.00 -129.00 65.00 0.00 0.00 -32.00 0.00 -32.00 -33.00 -97.00 -32.00 -64.00 32.00 -129.00 0.00 -64.00 33.00 -193.00 0.00 -64.00 128.00 -290.00 32.00 -32.00 33.00 -64.00 128.00 -64.00 32.00 -97.00 129.00 -64.00 64.00 -64.00 65.00 -129.00 0.00 -64.00 -65.00 -97.00 -64.00 -128.00 64.00 -161.00 0.00 -32.00 32.00 -33.00 33.00 33.00 32.00 -33.00 96.00 -64.00 -32.00 -32.00 32.00 -161.00 0.00 -96.00 -64.00 -97.00 0.00 -128.00 -97.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 -97.00 -64.00 -32.00 193.00 -64.00 64.00 -129.00 64.00 -1672.00 -96.00 -3247.00 -129.00 -3312.00 -64.00 -161.00 -1865.00 -161.00 -1994.00 -1543.00 -1800.00 290.00 -32.00 1221.00 0.00 -128.00 -2348.00 -97.00 33.00 -128.00 -65.00 -32.00 -160.00 -33.00 -65.00 33.00 0.00 -33.00 -64.00 0.00 -64.00 -32.00 -33.00 32.00 0.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 -96.00 -32.00 0.00 -32.00 32.00 32.00 0.00 -64.00 -97.00 -64.00 32.00 -32.00 -32.00 0.00 0.00 -65.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 33.00 0.00 -33.00 -32.00 33.00 0.00 -33.00 0.00 -32.00 -33.00 32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 32.00 -32.00 -64.00 -32.00 -32.00 -65.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -64.00 -33.00 -32.00 33.00 -33.00 -33.00 -64.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 -65.00 -32.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 0.00 -65.00 -64.00 0.00 -32.00 0.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 -64.00 64.00 -32.00 -64.00 -64.00 64.00 -32.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 32.00 0.00 65.00 -32.00 96.00 -96.00 0.00 -33.00 32.00 -64.00 65.00 -64.00 0.00 -32.00 32.00 -65.00 0.00 -64.00 32.00 -32.00 0.00 32.00 0.00 -32.00 64.00 0.00 0.00 -32.00 -32.00 -32.00 -129.00 0.00 -64.00 -97.00 32.00 32.00 32.00 -64.00 33.00 0.00 -33.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 -33.00 -32.00 0.00 32.00 33.00 -32.00 0.00 0.00 -161.00 -32.00 -64.00 32.00 -33.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 32.00 0.00 33.00 -32.00 -33.00 32.00 -32.00 32.00 -32.00 0.00 -64.00 33.00 -32.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 96.00 -97.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 64.00 0.00 32.00 -32.00 -64.00 -32.00 0.00 -33.00 32.00 0.00 32.00 0.00 -32.00 -32.00 -96.00 0.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 -96.00 0.00 64.00 -64.00 -32.00 -32.00 -32.00 0.00 -64.00 0.00 0.00 64.00 -33.00 0.00 -32.00 -64.00 -64.00 0.00 32.00 -65.00 -64.00 0.00 32.00 -32.00 -64.00 0.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 0.00 -64.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 -64.00 -65.00 -32.00 65.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 0.00 -32.00 0.00 32.00 -64.00 -32.00 -64.00 -65.00 -33.00 -96.00 -32.00 32.00 0.00 64.00 -64.00 -64.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -33.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 64.00 0.00 32.00 -65.00 32.00 33.00 0.00 -33.00 0.00 -32.00 33.00 -32.00 0.00 -32.00 96.00 -32.00 64.00 32.00 33.00 0.00 32.00 -32.00 32.00 0.00 96.00 -64.00 32.00 -33.00 33.00 0.00 0.00 -32.00 64.00 0.00 0.00 -96.00 129.00 -97.00 96.00 -32.00 0.00 32.00 32.00 -32.00 64.00 -32.00 33.00 32.00 128.00 -32.00 0.00 -32.00 97.00 -97.00 32.00 0.00 0.00 -32.00 64.00 0.00 32.00 -64.00 0.00 -96.00 0.00 -33.00 65.00 -32.00 -65.00 -64.00 0.00 -97.00 32.00 0.00 0.00 -32.00 33.00 0.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -33.00 -65.00 33.00 0.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 32.00 32.00 -32.00 0.00 -65.00 0.00 -32.00 64.00 0.00 32.00 -96.00 33.00 0.00 0.00 -129.00 32.00 0.00 0.00 -64.00 64.00 -97.00 0.00 -32.00 0.00 -64.00 32.00 0.00 32.00 0.00 129.00 -161.00 -64.00 -32.00 32.00 -64.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 -33.00 -32.00 33.00 -32.00 0.00 -64.00 64.00 0.00 64.00 -97.00 32.00 0.00 32.00 -64.00 0.00 -65.00 65.00 0.00 32.00 -32.00 32.00 0.00 0.00 -96.00 32.00 -32.00 32.00 -65.00 33.00 -32.00 0.00 -32.00 32.00 -32.00 96.00 32.00 32.00 -32.00 33.00 0.00 32.00 0.00 32.00 32.00 32.00 -64.00 64.00 0.00 65.00 -193.00 96.00 -97.00 32.00 -96.00 -32.00 -225.00 32.00 -161.00 0.00 -129.00 -64.00 -160.00 0.00 -32.00 0.00 -65.00 64.00 -160.00 0.00 -129.00 64.00 -97.00 0.00 -64.00 -32.00 -64.00 65.00 -65.00 64.00 -32.00 32.00 0.00 32.00 -96.00 0.00 -64.00 32.00 -33.00 65.00 -64.00 32.00 -32.00 129.00 -32.00 96.00 -129.00 96.00 -32.00 0.00 -32.00 0.00 -32.00 33.00 0.00 0.00 -32.00 64.00 0.00 32.00 0.00 32.00 -33.00 0.00 33.00 64.00 -33.00 33.00 33.00 64.00 32.00 64.00 -32.00 32.00 -33.00 32.00 -64.00 -32.00 -161.00 65.00 -64.00 0.00 -64.00 32.00 -32.00 32.00 0.00 0.00 -65.00 64.00 -64.00 0.00 -32.00 65.00 -64.00 96.00 -33.00 -547.00 -450.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 -33.00 -32.00 -96.00 0.00 -64.00 32.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -193.00 -64.00 -96.00 -32.00 0.00 -32.00 -97.00 -97.00 -64.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -33.00 0.00 -64.00 -65.00 0.00 33.00 -64.00 32.00 -64.00 0.00 -33.00 -65.00 -32.00 33.00 0.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 -97.00 -65.00 32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 32.00 -64.00 -32.00 -33.00 -32.00 0.00 -64.00 -96.00 -65.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -64.00 -32.00 0.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 32.00 0.00 -64.00 0.00 -32.00 -32.00 -32.00 -33.00 32.00 65.00 -32.00 -32.00 -65.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 0.00 -32.00 -65.00 0.00 33.00 -32.00 0.00 -33.00 -33.00 0.00 0.00 -32.00 33.00 0.00 0.00 -32.00 0.00 -32.00 -33.00 0.00 0.00 -64.00 -32.00 -97.00 32.00 -32.00 -64.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 32.00 0.00 0.00 -96.00 0.00 -33.00 0.00 -64.00 32.00 0.00 -32.00 -32.00 32.00 -64.00 -32.00 0.00 32.00 -32.00 -32.00 -65.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 33.00 0.00 32.00 0.00 -32.00 -32.00 64.00 0.00 -32.00 -33.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 0.00 0.00 -32.00 97.00 -32.00 0.00 -32.00 64.00 -97.00 64.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 32.00 33.00 -32.00 32.00 -33.00 32.00 -32.00 64.00 -32.00 65.00 -161.00 96.00 0.00 32.00 -32.00 32.00 -32.00 32.00 0.00 33.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 -64.00 -32.00 -96.00 32.00 -33.00 -32.00 0.00 32.00 -32.00 0.00 -64.00 -32.00 -97.00 -97.00 -32.00 -64.00 -64.00 0.00 -64.00 -32.00 -65.00 0.00 -64.00 -65.00 -96.00 0.00 -97.00 0.00 -64.00 33.00 0.00 32.00 -32.00 32.00 -32.00 -32.00 0.00 0.00 -33.00 -65.00 0.00 -32.00 -64.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 0.00 -32.00 -65.00 32.00 33.00 33.00 -97.00 -65.00 -32.00 0.00 32.00 -64.00 0.00 -64.00 0.00 0.00 -32.00 -33.00 64.00 -32.00 0.00 -32.00 -64.00 -32.00 32.00 -129.00 32.00 -32.00 -128.00 -32.00 -33.00 -32.00 33.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 -32.00 -32.00 32.00 -64.00 -32.00 -64.00 32.00 -32.00 -32.00 -33.00 -33.00 -96.00 33.00 -32.00 0.00 -32.00 64.00 -65.00 -32.00 -32.00 0.00 -64.00 -32.00 -65.00 -33.00 -32.00 0.00 -96.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 -33.00 -32.00 33.00 -32.00 0.00 -97.00 96.00 -64.00 -32.00 32.00 32.00 -32.00 97.00 32.00 0.00 -32.00 32.00 -96.00 -65.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 33.00 -97.00 -33.00 -32.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 32.00 -128.00 -32.00 0.00 -32.00 -33.00 0.00 -96.00 -32.00 0.00 -2573.00 0.00 -2025.00 0.00 -579.00 -32.00 0.00 -32.00 64.00 0.00 32.00 0.00 0.00 -97.00 33.00 -32.00 0.00 -64.00 32.00 -97.00 0.00 -64.00 -32.00 0.00 0.00 -64.00 -33.00 -33.00 33.00 0.00 0.00 -128.00 0.00 -64.00 64.00 -33.00 0.00 -96.00 32.00 -64.00 -32.00 -65.00 32.00 -32.00 32.00 -32.00 0.00 32.00 32.00 32.00 0.00 33.00 65.00 0.00 -33.00 -65.00 33.00 -96.00 -33.00 -32.00 0.00 -65.00 -32.00 -64.00 0.00 -32.00 65.00 -32.00 0.00 -33.00 -33.00 0.00 -64.00 -64.00 0.00 -96.00 32.00 -32.00 32.00 0.00 0.00 -33.00 0.00 -64.00 0.00 -64.00 0.00 -32.00 -32.00 -32.00 65.00 -97.00 -33.00 -64.00 33.00 -32.00 -33.00 -97.00 65.00 -64.00 0.00 -65.00 -65.00 -64.00 0.00 -193.00 65.00 -128.00 -32.00 -32.00 32.00 -33.00 32.00 -160.00 -32.00 0.00 -32.00 0.00 0.00 -33.00 32.00 -32.00 -65.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 -64.00 0.00 -129.00 -32.00 0.00 -32.00 -96.00 -32.00 0.00 -65.00 0.00 -32.00 -65.00 -32.00 0.00 -32.00 -64.00 64.00 -32.00 -64.00 -97.00 -65.00 -96.00 -32.00 -64.00 0.00 -97.00 0.00 -32.00 0.00 -64.00 129.00 -32.00 -32.00 -33.00 0.00 -64.00 0.00 -32.00 -97.00 -32.00 0.00 -32.00 -96.00 0.00 0.00 -33.00 32.00 -160.00 0.00 -65.00 32.00 -64.00 0.00 -64.00 32.00 0.00 -32.00 -97.00 32.00 -32.00 0.00 -32.00 97.00 -64.00 64.00 -161.00 0.00 -32.00 64.00 -32.00 0.00 -97.00 -32.00 -32.00 32.00 -64.00 33.00 0.00 0.00 -32.00 -33.00 -33.00 33.00 -32.00 0.00 -128.00 64.00 -65.00 0.00 -96.00 0.00 -32.00 -32.00 -97.00 0.00 -96.00 -65.00 -32.00 33.00 -65.00 0.00 -32.00 -65.00 -32.00 -64.00 -32.00 96.00 -129.00 0.00 -96.00 -128.00 -64.00 -65.00 0.00 -32.00 -33.00 129.00 -64.00 32.00 32.00 64.00 0.00 33.00 -64.00 96.00 -32.00 0.00 -65.00 -32.00 -96.00 64.00 0.00 64.00 -129.00 33.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 -64.00 32.00 -161.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -129.00 -32.00 0.00 0.00 -64.00 -65.00 32.00 -96.00 -96.00 0.00 -33.00 129.00 -32.00 -193.00 -96.00 -33.00 -32.00 -32.00 -32.00 0.00 -33.00 -32.00 -32.00 97.00 -96.00 32.00 0.00 0.00 -65.00 32.00 -32.00 -64.00 -96.00 64.00 -32.00 -64.00 -32.00 -65.00 -65.00 -96.00 0.00 -65.00 -32.00 0.00 -32.00 -64.00 32.00 0.00 -96.00 0.00 -33.00 32.00 -64.00 32.00 -32.00 -32.00 -64.00 32.00 -97.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00z\"\n          },\n          go: {\n            name: \"GO\",\n            path: \"M104003.00 112858.00lz\"\n          },\n          ms: {\n            name: \"MS\",\n            path: \"M81302.00 122857.00l708.00 -1479.00 482.00 -1061.00 354.00 0.00 64.00 -96.00 -32.00 0.00 32.00 -65.00 -64.00 -64.00 -33.00 -32.00 -32.00 0.00 0.00 -386.00 -225.00 0.00 997.00 -3215.00 482.00 -32.00 0.00 -33.00 -64.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 0.00 32.00 -353.00 -322.00 -33.00 -128.00 -64.00 -290.00 -579.00 -1093.00 193.00 0.00 0.00 -96.00 -193.00 -161.00 65.00 -193.00 -65.00 -64.00 -32.00 0.00 -64.00 -129.00 -32.00 0.00 -65.00 -161.00 -64.00 -32.00 -32.00 -64.00 32.00 -65.00 0.00 -64.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 32.00 -64.00 -64.00 0.00 32.00 0.00 32.00 -65.00 -64.00 33.00 0.00 -33.00 32.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 161.00 32.00 64.00 -129.00 64.00 -32.00 64.00 64.00 0.00 129.00 65.00 32.00 0.00 65.00 0.00 64.00 32.00 128.00 32.00 0.00 0.00 65.00 32.00 0.00 0.00 32.00 0.00 32.00 0.00 32.00 32.00 32.00 0.00 33.00 33.00 0.00 -33.00 32.00 -32.00 32.00 0.00 32.00 0.00 64.00 -32.00 32.00 64.00 33.00 0.00 32.00 33.00 0.00 0.00 32.00 96.00 -32.00 0.00 -32.00 32.00 0.00 65.00 64.00 32.00 64.00 32.00 32.00 -32.00 0.00 32.00 65.00 64.00 32.00 -32.00 32.00 -32.00 0.00 32.00 96.00 0.00 33.00 129.00 -33.00 32.00 97.00 64.00 0.00 32.00 32.00 97.00 64.00 -33.00 65.00 129.00 64.00 161.00 -32.00 0.00 96.00 64.00 97.00 65.00 32.00 32.00 -64.00 -32.00 -97.00 64.00 0.00 64.00 -96.00 64.00 32.00 0.00 -32.00 33.00 -32.00 0.00 -33.00 64.00 33.00 64.00 -97.00 32.00 0.00 32.00 32.00 33.00 32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 64.00 0.00 0.00 -32.00 65.00 -32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 0.00 -32.00 32.00 32.00 32.00 0.00 -64.00 97.00 32.00 64.00 -32.00 96.00 0.00 0.00 -32.00 -64.00 0.00 -32.00 -65.00 32.00 32.00 64.00 -64.00 33.00 32.00 0.00 -32.00 32.00 0.00 96.00 0.00 97.00 -32.00 96.00 0.00 64.00 -64.00 129.00 64.00 0.00 -32.00 96.00 0.00 0.00 -97.00 65.00 -32.00 32.00 -64.00 64.00 0.00 32.00 -32.00 33.00 32.00 32.00 0.00 32.00 -193.00 64.00 0.00 0.00 -32.00 32.00 -64.00 32.00 0.00 33.00 0.00 64.00 -65.00 32.00 -96.00 97.00 -129.00 0.00 -32.00 -65.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -65.00 32.00 0.00 32.00 -64.00 65.00 0.00 64.00 -96.00 96.00 -33.00 65.00 -32.00 64.00 32.00 64.00 -32.00 33.00 -96.00 32.00 0.00 32.00 -64.00 -32.00 -33.00 32.00 -64.00 32.00 32.00 32.00 -32.00 -32.00 -64.00 32.00 -32.00 64.00 0.00 33.00 -33.00 0.00 -32.00 -65.00 -32.00 32.00 -32.00 33.00 0.00 32.00 -32.00 -32.00 -32.00 -33.00 0.00 -64.00 -32.00 64.00 -33.00 0.00 -96.00 129.00 -32.00 64.00 32.00 33.00 0.00 -33.00 -64.00 33.00 -33.00 96.00 -64.00 0.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -65.00 64.00 0.00 33.00 0.00 0.00 -64.00 64.00 0.00 32.00 32.00 129.00 0.00 -33.00 32.00 65.00 -32.00 32.00 32.00 0.00 33.00 64.00 32.00 32.00 -32.00 -32.00 -33.00 32.00 0.00 33.00 65.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 32.00 32.00 64.00 33.00 0.00 -33.00 64.00 0.00 0.00 33.00 33.00 0.00 64.00 0.00 32.00 0.00 64.00 0.00 -32.00 -65.00 32.00 0.00 97.00 32.00 96.00 -64.00 32.00 32.00 32.00 -32.00 33.00 0.00 0.00 -32.00 32.00 0.00 -32.00 -64.00 32.00 32.00 32.00 -64.00 0.00 64.00 32.00 0.00 97.00 64.00 0.00 -32.00 32.00 0.00 0.00 64.00 64.00 -32.00 0.00 64.00 32.00 33.00 65.00 -65.00 64.00 -32.00 32.00 32.00 32.00 -64.00 64.00 0.00 33.00 -64.00 0.00 -32.00 96.00 -33.00 0.00 -32.00 32.00 0.00 0.00 -32.00 64.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 65.00 65.00 0.00 -32.00 64.00 0.00 0.00 -33.00 32.00 -32.00 32.00 0.00 32.00 32.00 33.00 -32.00 32.00 0.00 32.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 64.00 0.00 -32.00 0.00 32.00 -33.00 65.00 33.00 -33.00 -65.00 0.00 -32.00 33.00 32.00 0.00 -64.00 64.00 0.00 32.00 32.00 64.00 0.00 0.00 -32.00 65.00 32.00 -33.00 -64.00 33.00 0.00 32.00 -32.00 64.00 32.00 0.00 -129.00 32.00 32.00 32.00 -32.00 32.00 32.00 65.00 -32.00 32.00 0.00 32.00 32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 33.00 -32.00 32.00 32.00 96.00 32.00 65.00 -32.00 32.00 0.00 32.00 0.00 32.00 64.00 32.00 0.00 -32.00 -64.00 32.00 0.00 65.00 64.00 64.00 32.00 64.00 65.00 -64.00 0.00 0.00 64.00 32.00 -32.00 0.00 32.00 0.00 96.00 32.00 -32.00 0.00 65.00 32.00 -33.00 32.00 0.00 0.00 97.00 33.00 -64.00 32.00 32.00 32.00 0.00 32.00 0.00 64.00 0.00 -32.00 32.00 64.00 96.00 65.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 32.00 129.00 0.00 -32.00 32.00 -33.00 0.00 0.00 32.00 65.00 -32.00 -32.00 32.00 32.00 33.00 64.00 -33.00 -32.00 -32.00 32.00 -32.00 64.00 97.00 33.00 -33.00 32.00 65.00 32.00 32.00 32.00 -32.00 32.00 0.00 -32.00 32.00 32.00 32.00 32.00 -32.00 65.00 0.00 32.00 0.00 -32.00 64.00 96.00 97.00 0.00 -33.00 32.00 -32.00 32.00 65.00 32.00 -33.00 33.00 0.00 32.00 33.00 32.00 0.00 32.00 32.00 32.00 0.00 32.00 64.00 65.00 -64.00 32.00 64.00 64.00 -64.00 32.00 64.00 33.00 -64.00 32.00 64.00 64.00 -64.00 0.00 32.00 0.00 32.00 64.00 32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 64.00 65.00 64.00 32.00 32.00 0.00 -64.00 64.00 64.00 32.00 33.00 65.00 -33.00 -33.00 33.00 33.00 0.00 -33.00 64.00 33.00 32.00 -33.00 0.00 33.00 32.00 -33.00 0.00 0.00 65.00 33.00 32.00 0.00 -32.00 32.00 0.00 0.00 32.00 0.00 64.00 32.00 0.00 32.00 32.00 0.00 -32.00 64.00 64.00 -32.00 0.00 65.00 32.00 0.00 33.00 32.00 32.00 64.00 0.00 0.00 64.00 32.00 0.00 32.00 0.00 0.00 32.00 33.00 -32.00 0.00 32.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 32.00 64.00 64.00 0.00 33.00 33.00 0.00 0.00 32.00 32.00 0.00 64.00 0.00 32.00 0.00 32.00 32.00 65.00 -32.00 64.00 32.00 0.00 32.00 32.00 0.00 32.00 -32.00 32.00 32.00 65.00 32.00 32.00 0.00 0.00 97.00 64.00 0.00 0.00 -33.00 0.00 33.00 64.00 32.00 0.00 -32.00 -32.00 0.00 32.00 -33.00 33.00 33.00 96.00 -33.00 32.00 0.00 -32.00 33.00 64.00 32.00 -32.00 32.00 32.00 -32.00 0.00 32.00 33.00 0.00 32.00 0.00 0.00 -32.00 32.00 32.00 -32.00 32.00 32.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 65.00 32.00 -32.00 -32.00 32.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 33.00 0.00 0.00 32.00 64.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 96.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 65.00 -32.00 32.00 32.00 0.00 33.00 32.00 0.00 -32.00 32.00 32.00 0.00 0.00 -32.00 32.00 32.00 32.00 0.00 65.00 0.00 0.00 32.00 64.00 32.00 64.00 -64.00 32.00 -65.00 33.00 33.00 0.00 -33.00 32.00 33.00 32.00 -33.00 32.00 33.00 0.00 -33.00 32.00 33.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 0.00 0.00 -32.00 0.00 32.00 64.00 0.00 32.00 -32.00 0.00 32.00 0.00 -32.00 32.00 0.00 0.00 -33.00 33.00 33.00 0.00 -33.00 64.00 33.00 32.00 32.00 0.00 -32.00 32.00 -65.00 32.00 32.00 32.00 -64.00 33.00 32.00 0.00 -32.00 64.00 0.00 32.00 -32.00 161.00 0.00 32.00 0.00 32.00 64.00 64.00 -32.00 97.00 32.00 64.00 -32.00 32.00 0.00 97.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 64.00 -65.00 32.00 0.00 65.00 -64.00 64.00 0.00 32.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -65.00 0.00 -32.00 32.00 -64.00 97.00 -32.00 32.00 0.00 32.00 0.00 65.00 -32.00 0.00 -65.00 32.00 33.00 64.00 32.00 0.00 -32.00 32.00 0.00 65.00 -33.00 32.00 -32.00 64.00 32.00 96.00 -32.00 129.00 -64.00 32.00 -32.00 64.00 32.00 0.00 32.00 33.00 -32.00 32.00 64.00 96.00 -64.00 32.00 0.00 33.00 32.00 96.00 0.00 64.00 32.00 33.00 0.00 0.00 32.00 32.00 0.00 -32.00 65.00 32.00 0.00 0.00 32.00 32.00 64.00 161.00 32.00 32.00 32.00 32.00 -32.00 32.00 32.00 0.00 33.00 32.00 32.00 32.00 32.00 97.00 32.00 0.00 32.00 0.00 32.00 -32.00 -32.00 0.00 65.00 32.00 32.00 -32.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 -32.00 96.00 -32.00 33.00 64.00 32.00 96.00 64.00 0.00 -32.00 0.00 32.00 33.00 0.00 64.00 32.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 0.00 32.00 -32.00 32.00 0.00 64.00 0.00 32.00 -32.00 65.00 -32.00 32.00 -65.00 64.00 0.00 32.00 -32.00 65.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 64.00 -32.00 32.00 32.00 65.00 0.00 32.00 32.00 32.00 -32.00 32.00 64.00 65.00 -32.00 32.00 32.00 0.00 -32.00 0.00 32.00 32.00 -32.00 64.00 0.00 65.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 0.00 -32.00 96.00 -97.00 0.00 -32.00 0.00 -64.00 32.00 -65.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 32.00 0.00 -32.00 32.00 0.00 33.00 -65.00 32.00 -64.00 128.00 -32.00 32.00 0.00 33.00 32.00 32.00 -32.00 32.00 0.00 0.00 -32.00 96.00 -33.00 33.00 -32.00 64.00 -64.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 129.00 -129.00 32.00 -64.00 32.00 -33.00 193.00 -64.00 -32.00 -96.00 32.00 -97.00 32.00 -32.00 32.00 -96.00 65.00 -32.00 96.00 0.00 65.00 -97.00 32.00 -32.00 0.00 -64.00 32.00 0.00 32.00 0.00 64.00 -65.00 129.00 -32.00 64.00 32.00 0.00 65.00 65.00 32.00 -97.00 1993.00 -32.00 0.00 -64.00 32.00 -65.00 -32.00 -64.00 65.00 -32.00 0.00 -97.00 0.00 -32.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 -161.00 64.00 -64.00 32.00 0.00 97.00 -33.00 32.00 -64.00 32.00 0.00 32.00 -32.00 32.00 -64.00 129.00 0.00 32.00 -32.00 64.00 -33.00 65.00 -128.00 160.00 0.00 65.00 -32.00 32.00 -33.00 64.00 0.00 32.00 0.00 32.00 33.00 65.00 -33.00 32.00 33.00 0.00 -33.00 64.00 33.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 32.00 64.00 0.00 33.00 0.00 0.00 -32.00 32.00 0.00 64.00 0.00 32.00 64.00 32.00 0.00 -32.00 -32.00 32.00 0.00 0.00 64.00 65.00 -32.00 32.00 32.00 0.00 33.00 32.00 -33.00 0.00 33.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 32.00 -32.00 33.00 0.00 0.00 32.00 0.00 32.00 32.00 0.00 0.00 33.00 32.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 32.00 32.00 161.00 -32.00 32.00 0.00 33.00 32.00 32.00 -32.00 32.00 0.00 0.00 32.00 64.00 0.00 32.00 65.00 32.00 -65.00 33.00 -32.00 32.00 -32.00 64.00 -32.00 0.00 -32.00 129.00 0.00 32.00 32.00 0.00 -32.00 64.00 0.00 0.00 32.00 32.00 64.00 97.00 32.00 0.00 32.00 64.00 0.00 32.00 -32.00 32.00 0.00 0.00 65.00 65.00 0.00 64.00 32.00 64.00 0.00 32.00 32.00 33.00 0.00 32.00 32.00 64.00 32.00 32.00 -32.00 32.00 0.00 32.00 -64.00 33.00 -32.00 0.00 -97.00 32.00 0.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 32.00 -32.00 0.00 32.00 32.00 0.00 0.00 -32.00 33.00 64.00 32.00 -32.00 0.00 32.00 32.00 0.00 96.00 64.00 97.00 -32.00 96.00 32.00 32.00 0.00 33.00 -32.00 128.00 -32.00 193.00 32.00 97.00 32.00 32.00 0.00 64.00 33.00 64.00 32.00 32.00 0.00 33.00 64.00 96.00 32.00 482.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -129.00 0.00 -32.00 33.00 -64.00 32.00 -32.00 64.00 32.00 96.00 32.00 193.00 0.00 97.00 96.00 289.00 0.00 129.00 33.00 128.00 0.00 193.00 160.00 161.00 129.00 0.00 64.00 32.00 32.00 0.00 33.00 -128.00 160.00 -97.00 161.00 -32.00 129.00 0.00 225.00 64.00 225.00 0.00 32.00 0.00 96.00 33.00 65.00 32.00 96.00 64.00 0.00 32.00 32.00 32.00 -32.00 97.00 -96.00 96.00 -65.00 129.00 -192.00 32.00 -97.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 129.00 -97.00 64.00 -32.00 65.00 -32.00 96.00 -129.00 32.00 -96.00 129.00 0.00 32.00 32.00 64.00 0.00 65.00 64.00 64.00 32.00 64.00 -32.00 64.00 97.00 0.00 32.00 33.00 0.00 96.00 193.00 32.00 128.00 65.00 0.00 32.00 33.00 0.00 64.00 32.00 64.00 -32.00 129.00 64.00 96.00 0.00 65.00 32.00 96.00 0.00 64.00 32.00 161.00 -64.00 32.00 0.00 161.00 32.00 32.00 32.00 64.00 -32.00 129.00 0.00 32.00 -32.00 97.00 -64.00 64.00 -32.00 0.00 -33.00 96.00 0.00 65.00 33.00 0.00 32.00 96.00 32.00 129.00 64.00 128.00 0.00 97.00 193.00 0.00 32.00 64.00 32.00 0.00 33.00 0.00 32.00 64.00 32.00 0.00 32.00 97.00 96.00 0.00 33.00 64.00 0.00 -32.00 32.00 97.00 0.00 0.00 64.00 -33.00 0.00 65.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 64.00 33.00 65.00 32.00 64.00 0.00 0.00 -65.00 96.00 0.00 65.00 33.00 0.00 -33.00 64.00 65.00 128.00 0.00 65.00 32.00 0.00 32.00 32.00 -32.00 0.00 32.00 64.00 -32.00 32.00 0.00 0.00 32.00 33.00 0.00 0.00 32.00 32.00 32.00 0.00 65.00 32.00 0.00 32.00 32.00 32.00 32.00 32.00 0.00 33.00 32.00 32.00 0.00 64.00 32.00 0.00 -32.00 32.00 32.00 0.00 65.00 32.00 32.00 -32.00 0.00 64.00 64.00 33.00 0.00 -33.00 0.00 0.00 32.00 33.00 0.00 32.00 32.00 64.00 0.00 32.00 -32.00 32.00 32.00 32.00 0.00 33.00 32.00 0.00 33.00 0.00 -33.00 64.00 33.00 32.00 0.00 32.00 32.00 -32.00 32.00 0.00 32.00 32.00 -32.00 32.00 -32.00 33.00 -32.00 0.00 32.00 64.00 0.00 32.00 32.00 32.00 0.00 32.00 0.00 -32.00 -64.00 32.00 32.00 33.00 32.00 32.00 0.00 32.00 0.00 0.00 -32.00 32.00 32.00 64.00 0.00 0.00 32.00 32.00 0.00 33.00 64.00 64.00 0.00 32.00 65.00 0.00 32.00 32.00 0.00 32.00 64.00 32.00 0.00 0.00 32.00 65.00 65.00 32.00 0.00 0.00 -33.00 32.00 0.00 32.00 0.00 -32.00 33.00 0.00 32.00 97.00 0.00 128.00 64.00 -32.00 0.00 64.00 32.00 -32.00 0.00 65.00 32.00 32.00 -32.00 64.00 65.00 64.00 0.00 32.00 0.00 -32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 33.00 -32.00 32.00 64.00 32.00 0.00 32.00 -32.00 32.00 32.00 -32.00 0.00 64.00 64.00 32.00 -32.00 161.00 97.00 65.00 -33.00 32.00 0.00 64.00 33.00 64.00 0.00 0.00 32.00 65.00 -32.00 32.00 -33.00 64.00 0.00 0.00 33.00 97.00 0.00 32.00 32.00 32.00 0.00 64.00 0.00 97.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 64.00 0.00 32.00 -32.00 65.00 64.00 32.00 -32.00 32.00 0.00 32.00 32.00 64.00 0.00 33.00 0.00 32.00 32.00 32.00 0.00 -32.00 33.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 32.00 97.00 0.00 0.00 32.00 0.00 32.00 32.00 32.00 0.00 33.00 96.00 -33.00 65.00 33.00 128.00 0.00 0.00 96.00 32.00 0.00 33.00 32.00 32.00 32.00 32.00 -32.00 0.00 64.00 96.00 33.00 32.00 32.00 33.00 -32.00 64.00 0.00 0.00 -33.00 32.00 0.00 32.00 0.00 32.00 33.00 33.00 -33.00 0.00 33.00 64.00 0.00 32.00 64.00 64.00 32.00 129.00 0.00 64.00 64.00 65.00 0.00 32.00 33.00 64.00 0.00 32.00 0.00 0.00 32.00 97.00 64.00 0.00 32.00 32.00 -32.00 32.00 32.00 64.00 64.00 0.00 65.00 32.00 0.00 32.00 96.00 33.00 32.00 0.00 33.00 -65.00 32.00 97.00 32.00 32.00 -32.00 32.00 32.00 -32.00 32.00 96.00 0.00 0.00 96.00 97.00 0.00 64.00 65.00 32.00 32.00 33.00 32.00 0.00 32.00 -65.00 32.00 -64.00 65.00 0.00 64.00 161.00 225.00 32.00 64.00 0.00 97.00 0.00 64.00 -64.00 0.00 -33.00 0.00 -96.00 -32.00 -32.00 0.00 -65.00 32.00 -32.00 64.00 -96.00 258.00 -32.00 32.00 -65.00 128.00 -32.00 161.00 -32.00 32.00 0.00 33.00 96.00 96.00 -64.00 96.00 32.00 65.00 0.00 32.00 65.00 64.00 0.00 161.00 0.00 129.00 32.00 64.00 64.00 96.00 0.00 33.00 0.00 32.00 0.00 32.00 -96.00 225.00 64.00 161.00 0.00 128.00 -32.00 97.00 -32.00 32.00 64.00 96.00 32.00 65.00 0.00 64.00 -129.00 257.00 -96.00 225.00 -64.00 193.00 -32.00 65.00 -161.00 128.00 -64.00 32.00 -65.00 65.00 -64.00 32.00 -32.00 0.00 -97.00 32.00 -128.00 32.00 -193.00 0.00 -290.00 64.00 -96.00 65.00 -97.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 129.00 -64.00 32.00 -161.00 289.00 0.00 32.00 -64.00 33.00 -129.00 96.00 -64.00 64.00 -161.00 258.00 -32.00 96.00 -97.00 96.00 -225.00 129.00 -32.00 32.00 -32.00 32.00 0.00 33.00 -32.00 32.00 -32.00 32.00 -161.00 354.00 -32.00 160.00 64.00 97.00 0.00 32.00 0.00 32.00 -32.00 161.00 0.00 161.00 32.00 96.00 64.00 64.00 -32.00 225.00 -32.00 65.00 -193.00 128.00 -32.00 0.00 -193.00 0.00 -64.00 32.00 -129.00 161.00 -32.00 97.00 -64.00 96.00 0.00 97.00 -65.00 160.00 -96.00 33.00 -32.00 64.00 -32.00 0.00 -97.00 32.00 -129.00 0.00 -32.00 32.00 -32.00 64.00 32.00 161.00 -32.00 65.00 32.00 32.00 65.00 96.00 32.00 193.00 32.00 32.00 -32.00 161.00 -32.00 129.00 0.00 32.00 0.00 32.00 0.00 32.00 -33.00 32.00 -192.00 161.00 -33.00 129.00 -32.00 96.00 -32.00 97.00 -96.00 96.00 -65.00 96.00 -32.00 33.00 -128.00 64.00 -97.00 0.00 -193.00 -32.00 -32.00 0.00 -64.00 32.00 -65.00 128.00 -64.00 97.00 32.00 64.00 161.00 129.00 0.00 96.00 64.00 129.00 0.00 96.00 0.00 33.00 -128.00 225.00 -65.00 64.00 -32.00 64.00 -193.00 65.00 -96.00 64.00 -97.00 225.00 0.00 64.00 -32.00 97.00 -225.00 160.00 -64.00 97.00 -64.00 32.00 0.00 32.00 -65.00 0.00 -160.00 193.00 -33.00 97.00 -128.00 418.00 -161.00 225.00 -64.00 64.00 -33.00 32.00 -32.00 97.00 -225.00 160.00 -32.00 33.00 -96.00 96.00 -32.00 64.00 -33.00 0.00 -32.00 32.00 -96.00 33.00 -129.00 64.00 -161.00 32.00 -96.00 97.00 -97.00 64.00 -64.00 32.00 -96.00 64.00 -193.00 65.00 -129.00 96.00 -96.00 32.00 -258.00 161.00 -32.00 64.00 -160.00 129.00 -65.00 129.00 -32.00 0.00 -128.00 64.00 -258.00 64.00 -32.00 32.00 -32.00 0.00 -193.00 97.00 -64.00 96.00 -32.00 32.00 -193.00 65.00 -32.00 32.00 -97.00 96.00 -96.00 129.00 -33.00 64.00 0.00 32.00 0.00 33.00 33.00 32.00 -97.00 160.00 -32.00 0.00 -225.00 290.00 -64.00 64.00 -33.00 32.00 -96.00 0.00 -96.00 0.00 0.00 32.00 -33.00 0.00 -289.00 97.00 -96.00 32.00 -65.00 32.00 -64.00 32.00 -32.00 32.00 -65.00 97.00 -128.00 32.00 -32.00 0.00 0.00 32.00 -97.00 97.00 -96.00 32.00 -161.00 96.00 -161.00 65.00 -64.00 32.00 -64.00 32.00 -65.00 96.00 0.00 33.00 -64.00 64.00 -64.00 32.00 -97.00 64.00 -32.00 129.00 -96.00 129.00 0.00 64.00 0.00 546.00 -129.00 129.00 0.00 64.00 -129.00 193.00 -64.00 225.00 -64.00 161.00 0.00 32.00 -64.00 129.00 -161.00 225.00 -32.00 32.00 -226.00 64.00 -289.00 193.00 -257.00 129.00 -129.00 -32.00 -32.00 32.00 -64.00 32.00 0.00 32.00 -129.00 225.00 0.00 193.00 -64.00 193.00 -32.00 193.00 -32.00 129.00 -33.00 64.00 -32.00 97.00 -32.00 192.00 0.00 33.00 -96.00 160.00 -32.00 193.00 -33.00 97.00 33.00 32.00 -33.00 64.00 33.00 97.00 0.00 128.00 -97.00 290.00 -32.00 64.00 -97.00 96.00 -193.00 97.00 -353.00 257.00 -129.00 32.00 -32.00 0.00 -32.00 32.00 -129.00 -96.00 0.00 -64.00 -32.00 -65.00 0.00 -64.00 -96.00 -32.00 -65.00 32.00 -64.00 -64.00 -64.00 -32.00 -97.00 -97.00 -64.00 -32.00 -64.00 -161.00 0.00 -64.00 -32.00 -32.00 -65.00 -32.00 -160.00 -33.00 -97.00 -96.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 -32.00 -97.00 32.00 0.00 -32.00 33.00 -64.00 -97.00 -33.00 0.00 -64.00 -64.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 -64.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 -32.00 -64.00 -65.00 0.00 -32.00 -33.00 -64.00 97.00 -64.00 64.00 0.00 65.00 -33.00 32.00 -193.00 32.00 0.00 -64.00 -64.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 0.00 32.00 -64.00 32.00 -32.00 32.00 -96.00 -32.00 -65.00 64.00 0.00 65.00 -32.00 -32.00 -96.00 32.00 -33.00 -65.00 -32.00 0.00 -32.00 65.00 -64.00 0.00 0.00 64.00 -64.00 0.00 0.00 32.00 0.00 32.00 -33.00 32.00 33.00 97.00 -65.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 0.00 -65.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 32.00 -65.00 32.00 -64.00 32.00 -64.00 32.00 -32.00 0.00 -33.00 65.00 -64.00 -32.00 0.00 -33.00 -32.00 33.00 -64.00 -33.00 -32.00 -64.00 -33.00 -32.00 -64.00 64.00 -32.00 0.00 0.00 32.00 -64.00 33.00 -33.00 0.00 -32.00 -33.00 -32.00 33.00 -96.00 32.00 0.00 -32.00 -65.00 0.00 -32.00 32.00 0.00 32.00 -193.00 0.00 -96.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 -33.00 -32.00 -96.00 -64.00 -64.00 0.00 -97.00 161.00 -32.00 0.00 -64.00 -32.00 -32.00 -33.00 -65.00 0.00 0.00 -64.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 0.00 -64.00 0.00 -33.00 -64.00 0.00 32.00 -64.00 -96.00 -64.00 32.00 -64.00 32.00 -129.00 -32.00 -64.00 0.00 -161.00 0.00 -32.00 -32.00 -32.00 64.00 -129.00 0.00 -97.00 -64.00 -64.00 32.00 0.00 -32.00 -64.00 32.00 -97.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 -32.00 -32.00 32.00 -96.00 -32.00 -33.00 -32.00 0.00 0.00 -128.00 -32.00 -65.00 -32.00 33.00 -32.00 -33.00 -65.00 -32.00 0.00 -32.00 -96.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -129.00 32.00 -64.00 0.00 -32.00 32.00 -32.00 -64.00 -65.00 0.00 -64.00 -32.00 -64.00 0.00 -32.00 -33.00 -97.00 -32.00 -64.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 64.00 0.00 33.00 -97.00 -33.00 -32.00 161.00 -193.00 32.00 -161.00 -32.00 -64.00 -32.00 0.00 0.00 -64.00 -64.00 -97.00 -97.00 -64.00 32.00 -64.00 -32.00 -97.00 0.00 -32.00 97.00 -32.00 64.00 -64.00 -32.00 -33.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -65.00 -96.00 65.00 0.00 32.00 -65.00 32.00 -32.00 -96.00 -96.00 0.00 -97.00 -65.00 -32.00 -64.00 -32.00 -32.00 0.00 -97.00 32.00 0.00 -96.00 0.00 -65.00 -32.00 -64.00 -64.00 -129.00 32.00 0.00 0.00 -96.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 -32.00 -32.00 -65.00 -32.00 33.00 -128.00 -33.00 -33.00 65.00 -32.00 -65.00 -128.00 0.00 -33.00 0.00 -32.00 -64.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 -97.00 0.00 -64.00 -64.00 -32.00 32.00 -65.00 -32.00 -96.00 32.00 -32.00 0.00 -97.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 64.00 -33.00 0.00 -64.00 33.00 -32.00 64.00 32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 -96.00 -32.00 -96.00 32.00 -33.00 -32.00 -64.00 0.00 -96.00 -32.00 -33.00 0.00 -96.00 -97.00 -96.00 -96.00 -65.00 -32.00 -32.00 -65.00 0.00 -32.00 -64.00 -32.00 -65.00 -129.00 -64.00 -96.00 -257.00 0.00 -64.00 -32.00 -65.00 32.00 -64.00 32.00 0.00 0.00 -32.00 32.00 -97.00 -32.00 -128.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 -97.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -64.00 -32.00 32.00 -64.00 0.00 -32.00 -129.00 -65.00 -32.00 -96.00 -32.00 -129.00 -64.00 -64.00 -193.00 0.00 -97.00 -32.00 -32.00 32.00 -32.00 -32.00 -65.00 32.00 -32.00 32.00 -32.00 0.00 -64.00 0.00 -64.00 -64.00 -97.00 32.00 0.00 64.00 -32.00 0.00 -32.00 -32.00 -129.00 -32.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -97.00 -64.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 -32.00 0.00 -32.00 -64.00 0.00 0.00 32.00 -32.00 -64.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 -96.00 -65.00 0.00 -64.00 -32.00 -32.00 -97.00 0.00 -32.00 -32.00 -32.00 32.00 -64.00 -65.00 -65.00 -32.00 -32.00 -32.00 -32.00 32.00 -64.00 -64.00 0.00 -32.00 -32.00 0.00 -33.00 -64.00 0.00 -33.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -96.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 -64.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 -65.00 -32.00 32.00 -33.00 0.00 -96.00 -32.00 32.00 -32.00 0.00 -64.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -33.00 64.00 -96.00 0.00 -32.00 33.00 0.00 32.00 -65.00 0.00 0.00 64.00 -32.00 32.00 0.00 32.00 32.00 33.00 -32.00 0.00 0.00 64.00 -64.00 -32.00 0.00 64.00 32.00 0.00 -96.00 64.00 0.00 65.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -33.00 64.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 32.00 0.00 33.00 -97.00 64.00 -32.00 0.00 -32.00 0.00 32.00 96.00 -32.00 0.00 -32.00 -32.00 -65.00 -32.00 -64.00 -32.00 -32.00 -64.00 0.00 -33.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -33.00 0.00 -32.00 0.00 0.00 32.00 32.00 33.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -64.00 64.00 -64.00 -32.00 32.00 -32.00 -32.00 -32.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -64.00 32.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 33.00 -32.00 -33.00 0.00 -64.00 32.00 0.00 64.00 0.00 33.00 0.00 64.00 -64.00 32.00 -32.00 32.00 -65.00 32.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -64.00 -32.00 -33.00 -32.00 33.00 -65.00 -33.00 -64.00 -32.00 0.00 -64.00 32.00 0.00 32.00 -32.00 33.00 -32.00 -33.00 -33.00 -32.00 33.00 0.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 -64.00 0.00 -32.00 -32.00 -32.00 -64.00 -65.00 32.00 -64.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 -65.00 65.00 -32.00 -32.00 -32.00 32.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 -65.00 0.00 32.00 64.00 -32.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 -32.00 -32.00 32.00 -97.00 -64.00 33.00 -96.00 -33.00 -65.00 33.00 -32.00 -33.00 -32.00 33.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 -32.00 0.00 32.00 0.00 32.00 32.00 33.00 -64.00 0.00 0.00 32.00 -97.00 64.00 -64.00 -64.00 -97.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 -33.00 -32.00 0.00 0.00 -32.00 -64.00 32.00 0.00 33.00 -65.00 32.00 33.00 32.00 -33.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 -33.00 -33.00 33.00 -64.00 0.00 0.00 -33.00 -32.00 0.00 32.00 -64.00 -64.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -97.00 -32.00 -64.00 32.00 32.00 -32.00 -64.00 0.00 -64.00 -64.00 -33.00 32.00 0.00 32.00 0.00 -64.00 -32.00 32.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 0.00 -32.00 -65.00 0.00 -64.00 -65.00 -32.00 0.00 -32.00 32.00 -65.00 33.00 -128.00 -33.00 -32.00 0.00 -33.00 -64.00 0.00 -96.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -64.00 0.00 -32.00 0.00 -33.00 -129.00 65.00 -128.00 0.00 -33.00 -32.00 -64.00 -65.00 -32.00 32.00 -64.00 0.00 0.00 33.00 -33.00 32.00 0.00 32.00 -64.00 -64.00 -32.00 32.00 -32.00 0.00 0.00 64.00 32.00 0.00 0.00 64.00 -64.00 33.00 -32.00 0.00 -33.00 0.00 -96.00 -65.00 -32.00 32.00 -32.00 97.00 -32.00 0.00 -33.00 -64.00 -32.00 0.00 -32.00 -65.00 -32.00 -32.00 -161.00 64.00 32.00 33.00 -64.00 -33.00 -64.00 0.00 -33.00 -32.00 -64.00 0.00 -128.00 0.00 32.00 -64.00 -32.00 -32.00 -33.00 -97.00 -64.00 0.00 -32.00 -32.00 -32.00 64.00 -64.00 0.00 -33.00 -32.00 -32.00 32.00 32.00 -160.00 -32.00 -33.00 -64.00 0.00 0.00 -64.00 32.00 -64.00 161.00 -97.00 0.00 -32.00 0.00 -96.00 64.00 -64.00 64.00 -226.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 97.00 -64.00 64.00 0.00 32.00 -33.00 -32.00 -32.00 -257.00 -128.00 0.00 -32.00 96.00 -33.00 97.00 -32.00 96.00 -193.00 0.00 -96.00 -64.00 0.00 -65.00 -64.00 -32.00 -33.00 0.00 -32.00 32.00 -64.00 193.00 -129.00 65.00 -64.00 0.00 -32.00 -193.00 -97.00 -32.00 -64.00 -65.00 -128.00 65.00 -97.00 96.00 -32.00 0.00 -32.00 -64.00 -65.00 -161.00 -64.00 -32.00 -96.00 0.00 -97.00 32.00 -96.00 64.00 -32.00 65.00 -97.00 32.00 -64.00 0.00 -64.00 64.00 -161.00 32.00 -97.00 193.00 -225.00 32.00 -64.00 32.00 -97.00 -32.00 -32.00 -193.00 -32.00 -64.00 -64.00 -64.00 -64.00 32.00 -33.00 289.00 -193.00 32.00 -64.00 0.00 -161.00 -64.00 -257.00 0.00 -32.00 97.00 -161.00 -97.00 -161.00 -32.00 -128.00 96.00 -64.00 97.00 -161.00 64.00 -65.00 -32.00 -64.00 0.00 -128.00 0.00 -33.00 -64.00 0.00 -65.00 65.00 -64.00 0.00 -32.00 -32.00 -64.00 -129.00 -33.00 -32.00 -64.00 -32.00 -64.00 32.00 -64.00 -32.00 32.00 -65.00 96.00 -64.00 193.00 -129.00 32.00 -96.00 -32.00 -64.00 -161.00 -129.00 -64.00 0.00 -96.00 64.00 -65.00 0.00 -64.00 -32.00 0.00 -32.00 64.00 -161.00 65.00 -32.00 64.00 -32.00 193.00 32.00 64.00 0.00 0.00 -32.00 -32.00 -64.00 -32.00 -65.00 -129.00 -160.00 -32.00 -65.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -97.00 193.00 -161.00 0.00 0.00 -64.00 0.00 -32.00 33.00 -97.00 32.00 -96.00 0.00 -32.00 -97.00 0.00 -96.00 -129.00 0.00 -97.00 64.00 -96.00 -96.00 -289.00 32.00 -129.00 96.00 -161.00 0.00 -64.00 -128.00 -193.00 -193.00 -32.00 -129.00 -97.00 -64.00 -225.00 32.00 -96.00 32.00 -161.00 0.00 -64.00 -32.00 -32.00 -32.00 -32.00 -97.00 0.00 -32.00 32.00 -64.00 64.00 0.00 32.00 -97.00 -64.00 -32.00 -129.00 32.00 -32.00 33.00 -64.00 128.00 -32.00 32.00 -65.00 -32.00 -32.00 -32.00 -32.00 -129.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 -33.00 33.00 -64.00 96.00 0.00 96.00 -32.00 33.00 -96.00 96.00 -65.00 193.00 -32.00 0.00 -32.00 64.00 -161.00 65.00 -32.00 96.00 0.00 64.00 0.00 65.00 -32.00 64.00 -129.00 64.00 -32.00 32.00 0.00 65.00 32.00 96.00 97.00 64.00 -129.00 129.00 -161.00 32.00 -64.00 -1318.00 -1029.00 482.00 -1029.00z\"\n          },\n          mg: {\n            name: \"MG\",\n            path: \"M114452.00 124015.00l-32.00 -65.00 64.00 -96.00 -96.00 -96.00 0.00 -33.00 32.00 -32.00 32.00 -161.00 65.00 -128.00 32.00 -32.00 96.00 -258.00 32.00 -64.00 65.00 -32.00 32.00 0.00 96.00 32.00 33.00 0.00 64.00 0.00 0.00 -64.00 0.00 -97.00 -32.00 -64.00 -161.00 -225.00 0.00 -64.00 64.00 -65.00 65.00 -32.00 160.00 65.00 290.00 96.00 32.00 0.00 64.00 -64.00 0.00 -32.00 -64.00 -97.00 -161.00 -129.00 -32.00 -32.00 32.00 -64.00 0.00 -32.00 64.00 -64.00 32.00 -129.00 65.00 -97.00 0.00 -96.00 32.00 -64.00 0.00 -32.00 64.00 -97.00 129.00 -129.00 96.00 0.00 97.00 -128.00 32.00 -64.00 0.00 -33.00 0.00 -64.00 32.00 -64.00 257.00 -65.00 32.00 -64.00 -32.00 -96.00 32.00 -32.00 65.00 0.00 64.00 0.00 289.00 0.00 65.00 -65.00 128.00 -64.00 0.00 -32.00 33.00 0.00 64.00 -129.00 128.00 -193.00 0.00 -128.00 -32.00 -32.00 32.00 -97.00 -64.00 -161.00 0.00 -64.00 64.00 -32.00 129.00 -64.00 32.00 0.00 97.00 -129.00 96.00 -257.00 0.00 -32.00 32.00 -33.00 97.00 -32.00 64.00 0.00 32.00 -32.00 97.00 -257.00 160.00 -225.00 65.00 -65.00 64.00 -32.00 32.00 -32.00 64.00 -32.00 97.00 -32.00 161.00 32.00 96.00 0.00 161.00 -96.00 386.00 64.00 96.00 -97.00 65.00 -64.00 64.00 -161.00 32.00 -32.00 64.00 0.00 161.00 0.00 32.00 64.00 193.00 33.00 129.00 0.00 96.00 -65.00 32.00 0.00 33.00 32.00 32.00 33.00 64.00 0.00 64.00 64.00 97.00 0.00 96.00 32.00 32.00 0.00 33.00 0.00 32.00 -64.00 32.00 -65.00 64.00 -32.00 64.00 32.00 33.00 0.00 64.00 -32.00 96.00 -64.00 65.00 -32.00 64.00 0.00 32.00 0.00 97.00 64.00 32.00 0.00 32.00 -64.00 -97.00 -97.00 33.00 -32.00 0.00 -32.00 96.00 -32.00 257.00 -32.00 65.00 32.00 32.00 -32.00 32.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 -129.00 32.00 -32.00 32.00 0.00 65.00 -32.00 96.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 97.00 0.00 64.00 32.00 96.00 226.00 225.00 64.00 161.00 32.00 0.00 64.00 32.00 97.00 -32.00 32.00 -32.00 32.00 -97.00 97.00 -96.00 64.00 -161.00 32.00 0.00 96.00 32.00 33.00 -32.00 32.00 -96.00 32.00 -32.00 32.00 -32.00 32.00 0.00 97.00 -33.00 32.00 -96.00 64.00 -129.00 64.00 -64.00 65.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 -97.00 -64.00 0.00 -32.00 33.00 -32.00 96.00 32.00 129.00 -32.00 32.00 -32.00 128.00 -97.00 97.00 0.00 0.00 32.00 -32.00 32.00 0.00 33.00 64.00 0.00 32.00 32.00 64.00 0.00 0.00 32.00 129.00 -64.00 32.00 -65.00 0.00 -64.00 97.00 -64.00 96.00 32.00 32.00 0.00 33.00 -64.00 32.00 0.00 0.00 -97.00 32.00 0.00 32.00 -32.00 64.00 -32.00 97.00 -97.00 96.00 0.00 32.00 65.00 129.00 0.00 32.00 64.00 161.00 32.00 32.00 32.00 32.00 161.00 64.00 0.00 65.00 -96.00 64.00 -33.00 64.00 33.00 97.00 -65.00 96.00 32.00 97.00 -32.00 64.00 32.00 64.00 -32.00 65.00 0.00 64.00 0.00 64.00 0.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 193.00 32.00 33.00 0.00 32.00 -32.00 96.00 0.00 32.00 32.00 0.00 64.00 32.00 32.00 97.00 0.00 64.00 65.00 97.00 -65.00 32.00 0.00 32.00 33.00 -32.00 64.00 32.00 32.00 161.00 -96.00 64.00 32.00 64.00 -32.00 33.00 0.00 32.00 0.00 0.00 64.00 32.00 0.00 161.00 0.00 64.00 -32.00 32.00 32.00 32.00 0.00 32.00 0.00 32.00 64.00 65.00 0.00 32.00 0.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 128.00 -97.00 65.00 -64.00 32.00 0.00 32.00 0.00 32.00 64.00 129.00 0.00 0.00 65.00 32.00 32.00 128.00 0.00 97.00 32.00 64.00 0.00 0.00 64.00 64.00 64.00 0.00 65.00 97.00 32.00 64.00 32.00 97.00 32.00 32.00 0.00 64.00 0.00 32.00 -32.00 33.00 -64.00 32.00 0.00 32.00 32.00 32.00 64.00 64.00 32.00 65.00 32.00 0.00 33.00 32.00 32.00 32.00 0.00 96.00 -65.00 0.00 33.00 0.00 64.00 0.00 64.00 32.00 0.00 33.00 0.00 0.00 97.00 32.00 32.00 32.00 -32.00 64.00 -32.00 32.00 0.00 33.00 -97.00 32.00 -32.00 128.00 64.00 33.00 -32.00 32.00 32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 32.00 65.00 33.00 32.00 0.00 0.00 -33.00 -32.00 -32.00 32.00 -64.00 0.00 -64.00 64.00 -32.00 32.00 -33.00 32.00 33.00 32.00 0.00 -32.00 32.00 32.00 32.00 33.00 0.00 32.00 32.00 64.00 -32.00 32.00 -32.00 65.00 0.00 0.00 -32.00 -33.00 -33.00 33.00 -64.00 32.00 -32.00 32.00 0.00 -32.00 -64.00 128.00 0.00 0.00 64.00 32.00 0.00 33.00 0.00 64.00 -64.00 0.00 -32.00 32.00 0.00 32.00 0.00 65.00 -161.00 32.00 0.00 32.00 32.00 0.00 32.00 64.00 -32.00 32.00 0.00 0.00 -32.00 65.00 -65.00 -65.00 -32.00 -32.00 -64.00 -32.00 -32.00 32.00 -32.00 64.00 -33.00 -32.00 -64.00 65.00 -32.00 0.00 32.00 32.00 32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -64.00 32.00 0.00 32.00 0.00 -64.00 -33.00 64.00 0.00 33.00 -32.00 32.00 -64.00 32.00 0.00 64.00 -64.00 32.00 0.00 0.00 32.00 0.00 96.00 0.00 32.00 32.00 33.00 0.00 -33.00 0.00 -32.00 65.00 -32.00 0.00 -64.00 64.00 -32.00 32.00 32.00 32.00 -32.00 33.00 0.00 -33.00 -32.00 33.00 -33.00 0.00 -32.00 64.00 32.00 0.00 -32.00 32.00 0.00 64.00 -64.00 32.00 0.00 33.00 32.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 64.00 0.00 0.00 33.00 32.00 -33.00 65.00 0.00 0.00 -32.00 -65.00 0.00 65.00 -32.00 0.00 -64.00 32.00 32.00 32.00 -32.00 64.00 0.00 0.00 -32.00 64.00 -33.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 65.00 32.00 32.00 -32.00 96.00 -64.00 32.00 0.00 65.00 32.00 -32.00 -64.00 32.00 0.00 32.00 0.00 32.00 -33.00 0.00 -64.00 -32.00 -64.00 -32.00 0.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 -65.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 0.00 -32.00 32.00 0.00 0.00 -65.00 -96.00 -64.00 0.00 -64.00 -32.00 0.00 0.00 -33.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 -64.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -65.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 33.00 0.00 -65.00 -32.00 32.00 0.00 33.00 -33.00 -33.00 -32.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 64.00 -64.00 32.00 -65.00 0.00 -64.00 33.00 -32.00 32.00 0.00 0.00 -32.00 64.00 0.00 64.00 -64.00 0.00 -33.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -64.00 64.00 0.00 0.00 -97.00 0.00 -64.00 -32.00 -64.00 -64.00 -97.00 -96.00 -96.00 -33.00 -65.00 -32.00 -64.00 -64.00 -32.00 -97.00 32.00 -96.00 -32.00 -64.00 -32.00 -65.00 0.00 -64.00 32.00 -161.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -128.00 -65.00 96.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -97.00 0.00 -64.00 -32.00 -32.00 -32.00 -64.00 -97.00 -33.00 -32.00 0.00 32.00 -64.00 65.00 0.00 0.00 -64.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 -33.00 65.00 0.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 0.00 -32.00 0.00 -32.00 33.00 32.00 32.00 -32.00 0.00 -97.00 -32.00 -32.00 96.00 -64.00 -32.00 0.00 0.00 -65.00 0.00 33.00 64.00 32.00 0.00 32.00 32.00 0.00 0.00 32.00 97.00 -32.00 32.00 64.00 32.00 -32.00 -32.00 -32.00 64.00 0.00 0.00 32.00 32.00 -32.00 -64.00 -64.00 32.00 0.00 0.00 -33.00 32.00 0.00 33.00 -32.00 64.00 32.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -33.00 96.00 -32.00 0.00 -32.00 -32.00 -32.00 64.00 0.00 0.00 -32.00 0.00 -32.00 65.00 0.00 32.00 32.00 32.00 -32.00 -32.00 -33.00 32.00 0.00 -32.00 -64.00 32.00 -32.00 32.00 0.00 64.00 0.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 33.00 0.00 0.00 -32.00 -33.00 -33.00 -32.00 -32.00 32.00 0.00 33.00 0.00 32.00 0.00 -65.00 -32.00 33.00 -32.00 -33.00 -32.00 97.00 0.00 32.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 32.00 64.00 -32.00 33.00 65.00 32.00 -33.00 -32.00 -32.00 64.00 -32.00 64.00 32.00 -32.00 -64.00 32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 -65.00 32.00 65.00 0.00 -97.00 33.00 32.00 0.00 -32.00 32.00 32.00 32.00 0.00 0.00 -96.00 0.00 32.00 32.00 -32.00 32.00 32.00 32.00 0.00 -32.00 0.00 0.00 -32.00 32.00 0.00 0.00 -32.00 97.00 32.00 -32.00 -32.00 32.00 -33.00 32.00 33.00 32.00 -33.00 -32.00 0.00 0.00 -32.00 32.00 0.00 32.00 -32.00 0.00 32.00 32.00 -32.00 -32.00 0.00 0.00 -96.00 32.00 0.00 0.00 32.00 65.00 32.00 -32.00 -32.00 32.00 0.00 0.00 -32.00 32.00 -32.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 0.00 32.00 0.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 -64.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -64.00 0.00 96.00 -32.00 33.00 -33.00 -33.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 32.00 -32.00 -64.00 -32.00 32.00 -32.00 -32.00 -33.00 -32.00 33.00 0.00 -33.00 -33.00 -32.00 97.00 -32.00 -32.00 -32.00 -32.00 0.00 -33.00 -64.00 -32.00 0.00 -64.00 32.00 32.00 -65.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -64.00 64.00 0.00 0.00 -32.00 -32.00 -97.00 64.00 -64.00 -96.00 32.00 0.00 -32.00 32.00 -32.00 -64.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -65.00 0.00 0.00 -65.00 32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -64.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 0.00 -33.00 0.00 -64.00 -64.00 -32.00 -32.00 0.00 -32.00 0.00 32.00 -32.00 0.00 -97.00 -32.00 33.00 -32.00 -33.00 64.00 -32.00 -32.00 -32.00 -32.00 0.00 32.00 0.00 -32.00 -64.00 -33.00 32.00 -32.00 32.00 -32.00 -32.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 0.00 -33.00 -32.00 33.00 0.00 -65.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 -64.00 -32.00 32.00 32.00 -64.00 -32.00 -32.00 0.00 32.00 -64.00 64.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 0.00 0.00 -33.00 -65.00 0.00 0.00 -32.00 -64.00 32.00 0.00 33.00 -32.00 0.00 0.00 -33.00 0.00 -64.00 -64.00 0.00 0.00 32.00 -32.00 -32.00 0.00 -32.00 -33.00 0.00 -64.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -33.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 32.00 -32.00 -65.00 0.00 0.00 -64.00 -32.00 -64.00 -32.00 -33.00 0.00 -32.00 0.00 -64.00 0.00 -96.00 32.00 -33.00 32.00 -64.00 65.00 -32.00 32.00 -97.00 -32.00 -128.00 32.00 -32.00 32.00 -33.00 64.00 -32.00 97.00 -160.00 32.00 -65.00 32.00 0.00 32.00 -96.00 32.00 -32.00 0.00 -65.00 33.00 -32.00 -33.00 -32.00 33.00 -64.00 64.00 -32.00 0.00 -33.00 32.00 0.00 32.00 -96.00 -32.00 -97.00 32.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -64.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 65.00 -32.00 0.00 -33.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 0.00 32.00 32.00 -32.00 0.00 -33.00 33.00 0.00 0.00 -32.00 -33.00 -32.00 33.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 -33.00 0.00 33.00 -32.00 -33.00 0.00 65.00 -32.00 0.00 -64.00 0.00 32.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 32.00 32.00 0.00 -32.00 0.00 32.00 97.00 0.00 32.00 32.00 64.00 -32.00 32.00 0.00 32.00 0.00 33.00 0.00 0.00 -32.00 32.00 -32.00 32.00 -33.00 0.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 32.00 33.00 0.00 32.00 -32.00 -32.00 0.00 32.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 0.00 0.00 -32.00 32.00 0.00 -32.00 0.00 32.00 -65.00 32.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 0.00 32.00 32.00 -32.00 64.00 65.00 -32.00 64.00 65.00 32.00 32.00 32.00 -32.00 32.00 32.00 33.00 -32.00 128.00 -97.00 450.00 -96.00 643.00 -161.00 65.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -65.00 -97.00 -161.00 33.00 -32.00 -33.00 -32.00 65.00 -128.00 -65.00 -161.00 0.00 -97.00 -96.00 -96.00 -64.00 -129.00 32.00 -161.00 -32.00 -64.00 32.00 -64.00 0.00 -32.00 -129.00 -32.00 0.00 -33.00 -32.00 0.00 -64.00 -64.00 -97.00 -32.00 -128.00 -97.00 0.00 -64.00 0.00 -161.00 64.00 -193.00 0.00 -192.00 96.00 -129.00 65.00 -64.00 64.00 -32.00 96.00 -33.00 65.00 -64.00 0.00 -32.00 -97.00 -32.00 65.00 -65.00 64.00 0.00 32.00 -128.00 -161.00 -193.00 -96.00 0.00 0.00 -225.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 -64.00 64.00 -64.00 -128.00 32.00 -32.00 -32.00 -97.00 96.00 -129.00 32.00 -96.00 65.00 -129.00 32.00 -64.00 32.00 -32.00 -64.00 -32.00 0.00 -65.00 -65.00 -32.00 -64.00 -64.00 0.00 -64.00 32.00 -32.00 257.00 -161.00 33.00 -65.00 160.00 33.00 193.00 32.00 129.00 64.00 129.00 32.00 128.00 65.00 97.00 32.00 128.00 96.00 65.00 32.00 64.00 32.00 96.00 -32.00 32.00 0.00 65.00 -32.00 64.00 32.00 64.00 -64.00 32.00 -32.00 33.00 0.00 64.00 -64.00 32.00 0.00 64.00 32.00 33.00 -32.00 -33.00 -129.00 -32.00 -32.00 0.00 -32.00 -64.00 -33.00 32.00 -96.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -64.00 -33.00 -32.00 -32.00 0.00 -64.00 -32.00 -64.00 32.00 -161.00 32.00 -64.00 64.00 -161.00 -64.00 -97.00 -32.00 0.00 -97.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 -65.00 97.00 -64.00 0.00 -96.00 32.00 0.00 96.00 -33.00 32.00 -32.00 33.00 -32.00 -33.00 -64.00 33.00 -65.00 64.00 33.00 96.00 -33.00 0.00 33.00 33.00 96.00 96.00 0.00 64.00 97.00 129.00 64.00 128.00 128.00 33.00 0.00 32.00 33.00 32.00 0.00 96.00 32.00 0.00 64.00 65.00 0.00 0.00 96.00 0.00 65.00 32.00 32.00 64.00 0.00 -32.00 96.00 -32.00 33.00 0.00 32.00 -32.00 64.00 32.00 0.00 32.00 32.00 64.00 0.00 0.00 64.00 33.00 33.00 128.00 0.00 64.00 -33.00 65.00 0.00 32.00 97.00 64.00 0.00 0.00 -32.00 32.00 0.00 129.00 64.00 96.00 -96.00 -32.00 -97.00 32.00 0.00 0.00 32.00 65.00 65.00 32.00 0.00 32.00 -33.00 64.00 0.00 33.00 65.00 32.00 0.00 64.00 0.00 32.00 -32.00 32.00 -129.00 65.00 32.00 64.00 -96.00 32.00 -65.00 32.00 0.00 0.00 33.00 64.00 0.00 97.00 96.00 -32.00 129.00 64.00 0.00 32.00 64.00 97.00 32.00 0.00 97.00 0.00 128.00 -32.00 32.00 0.00 32.00 0.00 161.00 -161.00 161.00 -32.00 32.00 0.00 64.00 -65.00 33.00 0.00 64.00 -64.00 32.00 -32.00 64.00 0.00 33.00 32.00 32.00 0.00 64.00 -32.00 32.00 0.00 32.00 -64.00 32.00 -65.00 0.00 0.00 33.00 -64.00 0.00 -32.00 32.00 -97.00 0.00 0.00 64.00 97.00 64.00 0.00 97.00 32.00 64.00 32.00 -32.00 0.00 32.00 32.00 64.00 129.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 97.00 0.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 -97.00 -33.00 -32.00 65.00 0.00 0.00 -96.00 64.00 -64.00 161.00 -33.00 225.00 129.00 32.00 -32.00 32.00 0.00 0.00 -32.00 64.00 0.00 33.00 -32.00 32.00 0.00 0.00 -65.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 -32.00 65.00 32.00 64.00 -32.00 64.00 32.00 64.00 0.00 33.00 0.00 64.00 0.00 32.00 -32.00 0.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 0.00 -32.00 0.00 -33.00 33.00 33.00 0.00 -33.00 64.00 0.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 65.00 -96.00 32.00 -65.00 -32.00 -32.00 32.00 -64.00 32.00 0.00 0.00 32.00 32.00 -96.00 32.00 32.00 0.00 32.00 65.00 -32.00 32.00 -32.00 32.00 -97.00 32.00 0.00 0.00 -32.00 32.00 0.00 0.00 -64.00 32.00 32.00 0.00 -32.00 97.00 -97.00 0.00 -32.00 64.00 0.00 32.00 -32.00 32.00 0.00 33.00 0.00 64.00 64.00 32.00 0.00 64.00 -32.00 65.00 64.00 96.00 -64.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 -32.00 33.00 -32.00 -33.00 0.00 65.00 -32.00 32.00 -65.00 32.00 0.00 0.00 33.00 32.00 0.00 97.00 -65.00 96.00 -96.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 32.00 32.00 33.00 0.00 0.00 -32.00 0.00 -32.00 96.00 0.00 32.00 -64.00 32.00 32.00 33.00 -64.00 -33.00 -65.00 33.00 32.00 32.00 0.00 0.00 -32.00 32.00 0.00 64.00 0.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 33.00 -64.00 32.00 32.00 32.00 -65.00 32.00 -32.00 32.00 32.00 64.00 -64.00 0.00 -64.00 65.00 -32.00 32.00 -65.00 96.00 33.00 0.00 -33.00 32.00 0.00 33.00 0.00 0.00 -32.00 64.00 -32.00 -32.00 32.00 64.00 32.00 289.00 33.00 33.00 0.00 32.00 -33.00 64.00 -96.00 64.00 -129.00 33.00 -32.00 0.00 32.00 32.00 -32.00 0.00 -64.00 193.00 -65.00 0.00 -32.00 64.00 32.00 0.00 -32.00 0.00 -32.00 64.00 0.00 -32.00 -32.00 64.00 -64.00 33.00 32.00 32.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 96.00 -33.00 0.00 -32.00 33.00 0.00 0.00 -32.00 64.00 0.00 32.00 -32.00 64.00 0.00 0.00 -32.00 0.00 32.00 65.00 -96.00 32.00 0.00 32.00 0.00 32.00 0.00 0.00 -65.00 -32.00 32.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 32.00 0.00 65.00 0.00 -33.00 -33.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 33.00 -32.00 -65.00 -32.00 0.00 -32.00 97.00 32.00 32.00 -32.00 -32.00 -33.00 64.00 0.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 -32.00 65.00 0.00 32.00 0.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 65.00 -32.00 0.00 -65.00 32.00 33.00 32.00 -65.00 0.00 32.00 32.00 0.00 32.00 0.00 0.00 -64.00 33.00 0.00 0.00 -64.00 32.00 0.00 0.00 -32.00 64.00 64.00 0.00 -64.00 32.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 32.00 0.00 33.00 32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 32.00 32.00 32.00 -96.00 32.00 0.00 32.00 -32.00 32.00 0.00 33.00 0.00 64.00 -65.00 32.00 -32.00 0.00 32.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 33.00 0.00 0.00 -32.00 64.00 32.00 0.00 -64.00 64.00 0.00 65.00 0.00 32.00 -33.00 0.00 33.00 32.00 -33.00 32.00 33.00 32.00 0.00 32.00 -33.00 32.00 -32.00 33.00 0.00 0.00 -32.00 32.00 32.00 32.00 -32.00 64.00 -32.00 64.00 -64.00 97.00 -32.00 32.00 -33.00 32.00 0.00 32.00 0.00 0.00 33.00 33.00 -33.00 0.00 -32.00 32.00 32.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -32.00 65.00 0.00 0.00 -32.00 96.00 -32.00 96.00 64.00 33.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 96.00 0.00 33.00 64.00 0.00 -32.00 -33.00 0.00 33.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -32.00 96.00 0.00 0.00 -32.00 0.00 -33.00 32.00 33.00 0.00 64.00 33.00 0.00 0.00 32.00 96.00 0.00 64.00 64.00 33.00 0.00 0.00 -64.00 128.00 32.00 0.00 64.00 -32.00 0.00 32.00 33.00 64.00 -33.00 33.00 -96.00 32.00 0.00 0.00 64.00 32.00 32.00 32.00 0.00 32.00 -32.00 0.00 32.00 32.00 0.00 0.00 -32.00 32.00 0.00 0.00 32.00 0.00 33.00 33.00 0.00 32.00 0.00 32.00 -33.00 0.00 33.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 33.00 -65.00 64.00 0.00 0.00 -32.00 32.00 0.00 96.00 0.00 -32.00 0.00 65.00 32.00 0.00 33.00 32.00 -33.00 32.00 0.00 32.00 65.00 32.00 0.00 0.00 64.00 0.00 -64.00 32.00 0.00 33.00 64.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 33.00 32.00 0.00 -32.00 0.00 64.00 64.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 65.00 -32.00 0.00 32.00 -33.00 0.00 33.00 32.00 32.00 -32.00 0.00 32.00 32.00 -64.00 64.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 0.00 33.00 32.00 -33.00 33.00 65.00 64.00 0.00 32.00 32.00 -96.00 129.00 0.00 32.00 -65.00 64.00 -64.00 225.00 -32.00 97.00 -32.00 32.00 -129.00 289.00 -32.00 193.00 0.00 32.00 -32.00 97.00 0.00 32.00 0.00 32.00 32.00 -32.00 0.00 96.00 32.00 0.00 0.00 65.00 -64.00 32.00 64.00 32.00 -64.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 32.00 32.00 0.00 -32.00 32.00 0.00 0.00 64.00 32.00 0.00 32.00 33.00 65.00 0.00 193.00 64.00 96.00 0.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 32.00 128.00 0.00 32.00 32.00 33.00 33.00 0.00 32.00 -33.00 32.00 0.00 32.00 65.00 0.00 32.00 -32.00 64.00 0.00 0.00 32.00 32.00 0.00 33.00 0.00 32.00 32.00 32.00 32.00 161.00 33.00 64.00 32.00 32.00 0.00 64.00 -32.00 65.00 0.00 32.00 64.00 161.00 96.00 32.00 32.00 -32.00 0.00 0.00 65.00 32.00 64.00 32.00 0.00 32.00 -64.00 32.00 32.00 0.00 -64.00 65.00 0.00 32.00 -33.00 32.00 0.00 32.00 0.00 32.00 0.00 0.00 -32.00 -64.00 -64.00 32.00 -32.00 64.00 0.00 32.00 -32.00 -32.00 -65.00 32.00 -32.00 65.00 0.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 32.00 97.00 -64.00 128.00 -65.00 33.00 0.00 64.00 0.00 64.00 -64.00 32.00 -32.00 32.00 0.00 65.00 -32.00 32.00 32.00 64.00 0.00 32.00 -32.00 0.00 -33.00 225.00 -32.00 33.00 0.00 96.00 0.00 32.00 -32.00 32.00 0.00 65.00 32.00 0.00 -32.00 128.00 64.00 97.00 0.00 64.00 65.00 32.00 0.00 0.00 -32.00 32.00 32.00 65.00 32.00 32.00 64.00 32.00 -32.00 32.00 0.00 32.00 -64.00 32.00 64.00 33.00 0.00 64.00 -32.00 32.00 0.00 0.00 32.00 97.00 64.00 32.00 -32.00 96.00 32.00 32.00 -32.00 97.00 65.00 64.00 0.00 32.00 32.00 32.00 96.00 0.00 32.00 33.00 0.00 32.00 33.00 0.00 -33.00 32.00 97.00 32.00 0.00 0.00 -32.00 32.00 32.00 32.00 32.00 32.00 0.00 33.00 -32.00 32.00 32.00 -32.00 0.00 0.00 32.00 64.00 32.00 32.00 65.00 64.00 0.00 0.00 32.00 32.00 32.00 129.00 96.00 64.00 65.00 161.00 32.00 32.00 64.00 65.00 64.00 64.00 33.00 0.00 32.00 64.00 -32.00 -32.00 0.00 64.00 0.00 0.00 32.00 33.00 0.00 -33.00 32.00 65.00 32.00 32.00 32.00 32.00 -32.00 64.00 64.00 0.00 -32.00 32.00 64.00 33.00 0.00 -33.00 0.00 97.00 65.00 64.00 64.00 32.00 -64.00 65.00 -65.00 64.00 33.00 32.00 32.00 32.00 32.00 65.00 96.00 32.00 0.00 96.00 33.00 0.00 64.00 65.00 0.00 32.00 0.00 96.00 64.00 97.00 129.00 160.00 0.00 0.00 64.00 -32.00 129.00 129.00 32.00 96.00 64.00 97.00 -32.00 32.00 32.00 64.00 97.00 97.00 -97.00 32.00 0.00 32.00 64.00 32.00 33.00 129.00 32.00 32.00 64.00 32.00 -32.00 64.00 64.00 65.00 -64.00 96.00 -64.00 65.00 32.00 64.00 -32.00 32.00 32.00 64.00 -32.00 0.00 -65.00 32.00 0.00 33.00 65.00 64.00 0.00 0.00 64.00 32.00 32.00 32.00 32.00 64.00 32.00 65.00 65.00 32.00 96.00 32.00 0.00 0.00 97.00 32.00 0.00 32.00 0.00 65.00 -33.00 193.00 -64.00 160.00 -32.00 33.00 32.00 64.00 0.00 128.00 64.00 97.00 -32.00 0.00 -64.00 64.00 0.00 32.00 -32.00 65.00 0.00 32.00 -32.00 64.00 -32.00 32.00 -97.00 65.00 0.00 64.00 -32.00 129.00 -32.00 32.00 -32.00 32.00 0.00 1157.00 1061.00 450.00 418.00 354.00 353.00 129.00 97.00 0.00 32.00 96.00 675.00 32.00 515.00 33.00 0.00 96.00 0.00 64.00 -33.00 32.00 0.00 65.00 65.00 96.00 -32.00 65.00 -33.00 96.00 0.00 96.00 65.00 33.00 0.00 96.00 32.00 64.00 32.00 65.00 32.00 32.00 -32.00 32.00 -96.00 32.00 0.00 129.00 -33.00 96.00 -96.00 97.00 32.00 96.00 -64.00 129.00 0.00 96.00 -97.00 32.00 0.00 0.00 -96.00 33.00 -32.00 32.00 -32.00 0.00 -65.00 64.00 65.00 64.00 0.00 32.00 0.00 33.00 0.00 64.00 0.00 32.00 160.00 64.00 0.00 32.00 0.00 129.00 -32.00 32.00 -32.00 32.00 32.00 33.00 -64.00 32.00 0.00 0.00 -97.00 0.00 -32.00 64.00 0.00 0.00 32.00 129.00 65.00 32.00 64.00 -32.00 64.00 32.00 65.00 64.00 32.00 97.00 -32.00 32.00 -32.00 32.00 0.00 -32.00 -65.00 32.00 -64.00 64.00 0.00 64.00 -32.00 33.00 0.00 0.00 32.00 32.00 0.00 64.00 96.00 0.00 33.00 97.00 32.00 64.00 128.00 32.00 0.00 32.00 -64.00 32.00 0.00 65.00 96.00 32.00 0.00 32.00 33.00 0.00 32.00 -32.00 32.00 64.00 32.00 0.00 32.00 129.00 32.00 -32.00 65.00 32.00 64.00 64.00 0.00 64.00 -32.00 97.00 0.00 0.00 -64.00 32.00 -65.00 64.00 -32.00 32.00 32.00 33.00 32.00 32.00 -32.00 64.00 -96.00 32.00 32.00 32.00 0.00 97.00 96.00 32.00 129.00 32.00 32.00 0.00 -32.00 64.00 64.00 0.00 -32.00 33.00 32.00 64.00 0.00 32.00 32.00 32.00 -32.00 64.00 -32.00 33.00 32.00 32.00 0.00 32.00 32.00 32.00 -32.00 32.00 0.00 32.00 0.00 97.00 0.00 64.00 -32.00 32.00 32.00 33.00 -32.00 32.00 0.00 32.00 0.00 64.00 -32.00 32.00 0.00 32.00 64.00 0.00 32.00 33.00 0.00 0.00 65.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 64.00 32.00 0.00 0.00 32.00 32.00 -32.00 97.00 65.00 32.00 0.00 0.00 128.00 -65.00 32.00 33.00 32.00 32.00 -32.00 0.00 32.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 64.00 33.00 0.00 64.00 -32.00 32.00 32.00 32.00 0.00 32.00 0.00 0.00 -32.00 65.00 -32.00 0.00 32.00 -33.00 65.00 33.00 32.00 32.00 0.00 32.00 -65.00 32.00 0.00 -32.00 97.00 0.00 -32.00 0.00 64.00 -32.00 0.00 0.00 32.00 32.00 -32.00 32.00 32.00 0.00 32.00 32.00 33.00 -32.00 0.00 0.00 32.00 64.00 0.00 33.00 32.00 -33.00 0.00 33.00 32.00 32.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 64.00 32.00 0.00 0.00 33.00 33.00 0.00 0.00 -33.00 64.00 0.00 0.00 65.00 96.00 0.00 0.00 -65.00 33.00 0.00 128.00 0.00 32.00 33.00 32.00 0.00 -32.00 0.00 -64.00 96.00 0.00 32.00 64.00 0.00 97.00 97.00 0.00 64.00 64.00 32.00 32.00 64.00 0.00 65.00 65.00 0.00 0.00 64.00 32.00 32.00 0.00 65.00 -97.00 64.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 32.00 64.00 32.00 0.00 32.00 64.00 -32.00 129.00 -64.00 32.00 0.00 32.00 -65.00 32.00 0.00 33.00 -96.00 128.00 32.00 65.00 32.00 32.00 32.00 96.00 -96.00 0.00 -32.00 32.00 -64.00 33.00 -33.00 128.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 64.00 -65.00 32.00 0.00 33.00 -32.00 32.00 -32.00 32.00 -64.00 161.00 -32.00 64.00 0.00 32.00 -33.00 97.00 -64.00 0.00 0.00 64.00 -32.00 64.00 -64.00 32.00 -33.00 -64.00 -32.00 0.00 32.00 -64.00 -32.00 -65.00 -32.00 65.00 -32.00 96.00 -32.00 65.00 -32.00 0.00 -65.00 128.00 -96.00 97.00 -32.00 32.00 -32.00 0.00 0.00 64.00 -33.00 0.00 33.00 32.00 32.00 0.00 0.00 97.00 32.00 0.00 0.00 64.00 0.00 32.00 -64.00 0.00 -97.00 -32.00 -32.00 -32.00 0.00 32.00 -64.00 0.00 -97.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 0.00 -64.00 129.00 0.00 32.00 -32.00 64.00 -32.00 161.00 -65.00 128.00 0.00 65.00 33.00 32.00 32.00 32.00 -32.00 64.00 0.00 97.00 -65.00 32.00 -64.00 161.00 -64.00 32.00 64.00 32.00 64.00 32.00 129.00 0.00 32.00 32.00 64.00 -32.00 65.00 32.00 0.00 65.00 32.00 32.00 0.00 64.00 32.00 32.00 -32.00 32.00 0.00 33.00 -64.00 0.00 0.00 32.00 -33.00 32.00 0.00 96.00 -32.00 65.00 -64.00 0.00 -32.00 -65.00 -65.00 65.00 -32.00 0.00 -32.00 32.00 -64.00 -65.00 -32.00 0.00 0.00 -32.00 -97.00 -64.00 -32.00 32.00 -96.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 0.00 -32.00 -32.00 0.00 -32.00 -96.00 0.00 -65.00 32.00 0.00 97.00 -64.00 128.00 -64.00 161.00 -97.00 96.00 -32.00 0.00 -32.00 129.00 0.00 32.00 0.00 32.00 -96.00 193.00 0.00 65.00 0.00 32.00 64.00 0.00 0.00 32.00 -32.00 193.00 -65.00 96.00 33.00 161.00 96.00 32.00 0.00 65.00 -64.00 64.00 32.00 96.00 -32.00 32.00 -32.00 0.00 0.00 65.00 32.00 32.00 0.00 64.00 96.00 65.00 -128.00 32.00 -65.00 96.00 -32.00 0.00 0.00 64.00 -64.00 0.00 0.00 65.00 64.00 32.00 -64.00 64.00 32.00 32.00 0.00 65.00 0.00 32.00 0.00 32.00 -129.00 64.00 97.00 65.00 32.00 32.00 96.00 -32.00 65.00 32.00 64.00 64.00 161.00 32.00 0.00 32.00 0.00 32.00 64.00 97.00 32.00 0.00 0.00 64.00 65.00 0.00 0.00 97.00 -33.00 64.00 33.00 32.00 32.00 32.00 64.00 161.00 97.00 64.00 64.00 -64.00 96.00 0.00 -32.00 32.00 32.00 65.00 -32.00 0.00 0.00 32.00 0.00 64.00 64.00 32.00 33.00 64.00 64.00 -64.00 32.00 0.00 64.00 97.00 32.00 64.00 33.00 -97.00 0.00 -64.00 32.00 32.00 32.00 65.00 64.00 32.00 -32.00 64.00 32.00 32.00 65.00 32.00 32.00 33.00 0.00 96.00 32.00 32.00 32.00 0.00 32.00 97.00 32.00 32.00 97.00 -32.00 32.00 64.00 32.00 0.00 64.00 0.00 65.00 96.00 -32.00 65.00 32.00 64.00 -32.00 64.00 64.00 65.00 32.00 64.00 -32.00 64.00 32.00 -32.00 64.00 32.00 32.00 65.00 0.00 32.00 -160.00 225.00 -257.00 128.00 0.00 32.00 32.00 33.00 96.00 64.00 64.00 32.00 0.00 129.00 -128.00 -65.00 -64.00 -32.00 -33.00 0.00 -96.00 -64.00 0.00 -32.00 -64.00 32.00 -33.00 -64.00 -32.00 0.00 -64.00 -65.00 -64.00 0.00 -33.00 32.00 -64.00 -32.00 -32.00 32.00 -64.00 0.00 0.00 -32.00 -129.00 0.00 -64.00 0.00 -129.00 -32.00 -32.00 64.00 -96.00 -96.00 -97.00 0.00 -64.00 -96.00 -32.00 0.00 -97.00 64.00 -96.00 64.00 -97.00 0.00 0.00 97.00 -64.00 0.00 -64.00 0.00 0.00 32.00 0.00 32.00 -32.00 64.00 32.00 32.00 -65.00 33.00 0.00 64.00 -96.00 32.00 -32.00 64.00 -32.00 33.00 -65.00 -33.00 -32.00 33.00 -32.00 -33.00 -97.00 65.00 -32.00 -32.00 0.00 -65.00 -64.00 0.00 -64.00 0.00 -32.00 32.00 -65.00 -32.00 -32.00 0.00 -32.00 0.00 32.00 -96.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 32.00 -65.00 -32.00 -64.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -97.00 129.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -33.00 -65.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 611.00 579.00 32.00 225.00 -128.00 32.00 -33.00 -32.00 -96.00 -32.00 -32.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 -33.00 -32.00 0.00 0.00 -64.00 -64.00 -32.00 -65.00 0.00 0.00 -64.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 64.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 64.00 0.00 33.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -65.00 -33.00 -32.00 33.00 -32.00 96.00 -96.00 0.00 0.00 -64.00 -65.00 0.00 -32.00 96.00 -32.00 0.00 32.00 -64.00 -96.00 32.00 0.00 32.00 0.00 32.00 -65.00 0.00 -128.00 65.00 0.00 64.00 -32.00 32.00 0.00 32.00 32.00 32.00 0.00 33.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 32.00 -161.00 129.00 -96.00 96.00 -33.00 32.00 0.00 129.00 33.00 32.00 0.00 97.00 0.00 64.00 0.00 32.00 -65.00 0.00 0.00 64.00 0.00 65.00 97.00 0.00 -65.00 32.00 -64.00 32.00 -64.00 96.00 32.00 32.00 418.00 33.00 129.00 0.00 160.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 -32.00 290.00 0.00 96.00 -32.00 0.00 -32.00 257.00 32.00 32.00 0.00 32.00 -32.00 33.00 -32.00 32.00 -32.00 0.00 0.00 32.00 64.00 32.00 -32.00 32.00 64.00 -32.00 0.00 32.00 32.00 0.00 -32.00 32.00 64.00 0.00 65.00 65.00 64.00 0.00 32.00 32.00 161.00 32.00 32.00 32.00 32.00 193.00 0.00 32.00 0.00 193.00 65.00 64.00 -33.00 33.00 65.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 -33.00 32.00 -32.00 33.00 -32.00 -33.00 -32.00 33.00 -64.00 32.00 -290.00 0.00 -96.00 0.00 -161.00 0.00 -64.00 0.00 -65.00 0.00 -64.00 -97.00 0.00 -32.00 -32.00 -32.00 -32.00 -64.00 -64.00 32.00 -65.00 0.00 -32.00 0.00 -289.00 0.00 -65.00 96.00 33.00 65.00 -33.00 64.00 33.00 0.00 -33.00 32.00 33.00 32.00 32.00 0.00 64.00 97.00 32.00 -33.00 0.00 -32.00 0.00 -64.00 64.00 64.00 33.00 0.00 96.00 -32.00 32.00 32.00 32.00 65.00 0.00 32.00 33.00 0.00 32.00 0.00 64.00 32.00 32.00 64.00 32.00 32.00 0.00 65.00 32.00 0.00 33.00 32.00 96.00 32.00 0.00 32.00 64.00 0.00 0.00 32.00 33.00 65.00 32.00 0.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 32.00 0.00 32.00 -32.00 0.00 -128.00 97.00 -65.00 0.00 0.00 64.00 -32.00 32.00 65.00 64.00 -33.00 65.00 33.00 32.00 32.00 0.00 0.00 64.00 96.00 0.00 32.00 64.00 32.00 -32.00 33.00 0.00 0.00 65.00 32.00 -33.00 0.00 65.00 0.00 32.00 32.00 0.00 64.00 0.00 32.00 32.00 33.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 65.00 64.00 0.00 -32.00 64.00 32.00 32.00 32.00 32.00 0.00 65.00 32.00 0.00 0.00 32.00 33.00 0.00 -33.00 32.00 33.00 32.00 0.00 64.00 -33.00 33.00 -32.00 0.00 0.00 64.00 32.00 32.00 -32.00 32.00 32.00 0.00 65.00 32.00 0.00 97.00 -65.00 0.00 -64.00 32.00 32.00 32.00 65.00 0.00 -33.00 32.00 0.00 32.00 33.00 0.00 32.00 0.00 32.00 0.00 32.00 33.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 96.00 0.00 65.00 65.00 32.00 -33.00 32.00 0.00 32.00 -128.00 97.00 0.00 32.00 0.00 64.00 -32.00 32.00 0.00 32.00 32.00 33.00 0.00 64.00 64.00 32.00 -32.00 32.00 0.00 32.00 -96.00 129.00 0.00 32.00 -161.00 0.00 -97.00 -32.00 -96.00 -32.00 0.00 64.00 32.00 64.00 -32.00 97.00 32.00 64.00 32.00 65.00 0.00 32.00 -96.00 32.00 0.00 32.00 -97.00 0.00 0.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 161.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 65.00 -64.00 32.00 -65.00 0.00 -32.00 32.00 -32.00 96.00 32.00 33.00 -32.00 32.00 0.00 64.00 0.00 32.00 -32.00 65.00 32.00 32.00 -64.00 32.00 0.00 64.00 64.00 32.00 32.00 65.00 -32.00 0.00 0.00 32.00 64.00 32.00 -32.00 64.00 -32.00 97.00 -32.00 0.00 32.00 64.00 0.00 32.00 -32.00 0.00 0.00 193.00 -32.00 32.00 -65.00 65.00 -32.00 -33.00 -96.00 33.00 0.00 64.00 -65.00 96.00 -32.00 0.00 -32.00 -32.00 -64.00 32.00 -129.00 0.00 -32.00 32.00 -32.00 129.00 -32.00 32.00 32.00 64.00 0.00 33.00 32.00 64.00 -64.00 64.00 0.00 97.00 -32.00 32.00 -33.00 32.00 0.00 32.00 -32.00 97.00 -32.00 32.00 0.00 64.00 -32.00 64.00 32.00 33.00 -64.00 64.00 32.00 0.00 -32.00 32.00 -32.00 64.00 -33.00 32.00 0.00 33.00 -32.00 96.00 -96.00 64.00 -32.00 -32.00 -32.00 32.00 0.00 33.00 -193.00 0.00 -997.00 0.00 -450.00 0.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 129.00 -33.00 32.00 -32.00 96.00 32.00 32.00 -32.00 33.00 -96.00 0.00 0.00 32.00 -32.00 32.00 -65.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 32.00 65.00 -64.00 32.00 0.00 32.00 -33.00 96.00 65.00 0.00 0.00 33.00 64.00 160.00 161.00 32.00 0.00 65.00 0.00 64.00 0.00 161.00 -32.00 64.00 0.00 97.00 -32.00 32.00 32.00 96.00 0.00 32.00 0.00 33.00 -65.00 0.00 -32.00 32.00 0.00 32.00 -64.00 96.00 0.00 65.00 -32.00 32.00 -32.00 32.00 0.00 32.00 32.00 32.00 96.00 0.00 65.00 0.00 -33.00 65.00 33.00 32.00 0.00 -32.00 32.00 32.00 -32.00 32.00 -33.00 32.00 -32.00 0.00 32.00 32.00 -64.00 32.00 -32.00 65.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -33.00 32.00 33.00 32.00 -33.00 33.00 -32.00 0.00 32.00 32.00 33.00 96.00 -33.00 0.00 0.00 -32.00 -64.00 0.00 0.00 64.00 0.00 32.00 0.00 33.00 -32.00 32.00 32.00 32.00 -32.00 32.00 -64.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 0.00 -64.00 0.00 32.00 32.00 -64.00 129.00 64.00 64.00 -32.00 32.00 -32.00 33.00 -65.00 32.00 -32.00 32.00 32.00 32.00 -64.00 32.00 0.00 64.00 -32.00 33.00 32.00 32.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 0.00 64.00 -97.00 -32.00 -32.00 32.00 -96.00 -32.00 -65.00 0.00 -32.00 32.00 -96.00 33.00 -97.00 0.00 -32.00 -33.00 -64.00 65.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -33.00 -32.00 -64.00 32.00 -64.00 64.00 0.00 32.00 64.00 33.00 0.00 32.00 64.00 64.00 33.00 0.00 32.00 32.00 32.00 0.00 32.00 0.00 64.00 65.00 33.00 32.00 0.00 32.00 -65.00 0.00 -32.00 -32.00 0.00 32.00 0.00 32.00 0.00 32.00 -96.00 97.00 0.00 32.00 -65.00 0.00 0.00 64.00 -32.00 32.00 0.00 32.00 -128.00 0.00 0.00 65.00 0.00 64.00 -33.00 0.00 -32.00 64.00 -32.00 32.00 -32.00 33.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 64.00 129.00 -32.00 32.00 0.00 64.00 32.00 32.00 0.00 -32.00 32.00 32.00 -32.00 65.00 32.00 32.00 -32.00 32.00 -32.00 32.00 -64.00 32.00 -33.00 32.00 -32.00 33.00 0.00 128.00 -32.00 64.00 0.00 33.00 32.00 0.00 32.00 32.00 -64.00 32.00 32.00 32.00 -32.00 32.00 32.00 65.00 -64.00 32.00 0.00 32.00 -64.00 32.00 32.00 0.00 64.00 32.00 -32.00 32.00 -32.00 32.00 -65.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 97.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 65.00 96.00 32.00 0.00 32.00 65.00 96.00 -33.00 33.00 -64.00 32.00 -32.00 96.00 -64.00 0.00 -33.00 32.00 0.00 32.00 -32.00 33.00 0.00 32.00 -96.00 32.00 0.00 32.00 32.00 32.00 -96.00 65.00 -33.00 32.00 -96.00 128.00 32.00 33.00 32.00 0.00 -64.00 64.00 32.00 32.00 32.00 0.00 65.00 0.00 0.00 64.00 32.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 65.00 32.00 32.00 33.00 -32.00 0.00 32.00 64.00 32.00 -32.00 32.00 32.00 0.00 64.00 0.00 32.00 0.00 32.00 0.00 33.00 -193.00 64.00 0.00 32.00 -128.00 32.00 -97.00 0.00 -96.00 32.00 -32.00 0.00 -32.00 65.00 -322.00 96.00 -32.00 32.00 -322.00 129.00 -225.00 96.00 0.00 65.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 32.00 -128.00 32.00 -97.00 32.00 -32.00 32.00 -193.00 65.00 -193.00 96.00 -32.00 32.00 -129.00 65.00 -257.00 64.00 -161.00 64.00 0.00 33.00 -128.00 128.00 -193.00 64.00 -64.00 33.00 -33.00 0.00 -128.00 96.00 -32.00 0.00 -97.00 32.00 -64.00 32.00 0.00 32.00 32.00 33.00 -32.00 32.00 -64.00 96.00 -129.00 32.00 0.00 -32.00 -64.00 0.00 -65.00 0.00 -96.00 32.00 0.00 65.00 -64.00 32.00 -33.00 -64.00 -32.00 -97.00 0.00 -32.00 97.00 -64.00 0.00 -65.00 0.00 -64.00 -65.00 0.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 0.00 -129.00 96.00 -32.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -33.00 -32.00 33.00 -32.00 -33.00 -32.00 33.00 -65.00 0.00 -96.00 32.00 -64.00 -32.00 -33.00 -33.00 -32.00 33.00 -64.00 0.00 -32.00 -33.00 -32.00 0.00 -65.00 33.00 0.00 32.00 -96.00 64.00 -129.00 96.00 -64.00 0.00 -32.00 33.00 -129.00 64.00 -64.00 0.00 -64.00 0.00 -65.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 -161.00 32.00 -32.00 32.00 -32.00 -32.00 -64.00 -32.00 0.00 -97.00 -33.00 33.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 0.00 32.00 0.00 32.00 -32.00 0.00 0.00 -64.00 -32.00 32.00 -65.00 -64.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -64.00 0.00 0.00 64.00 -32.00 32.00 0.00 -32.00 -33.00 -64.00 -64.00 0.00 -32.00 32.00 -32.00 0.00 -65.00 0.00 -64.00 97.00 -32.00 -33.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 -33.00 0.00 -32.00 0.00 -128.00 96.00 -33.00 0.00 -32.00 0.00 -64.00 32.00 -64.00 33.00 -65.00 -33.00 -32.00 33.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 0.00 64.00 -64.00 0.00 -33.00 32.00 -192.00 64.00 -65.00 33.00 -32.00 0.00 -96.00 32.00 0.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -64.00 -64.00 -97.00 0.00 0.00 32.00 -128.00 32.00 -33.00 0.00 0.00 64.00 -32.00 0.00 -32.00 33.00 0.00 -33.00 -64.00 -32.00 0.00 32.00 0.00 33.00 -64.00 32.00 -33.00 -32.00 0.00 32.00 0.00 32.00 0.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 64.00 -32.00 33.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -64.00 32.00 -33.00 0.00 0.00 -32.00 -64.00 32.00 0.00 32.00 -64.00 32.00 -32.00 33.00 -33.00 -33.00 -32.00 33.00 -32.00 -129.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 64.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -64.00 0.00 -65.00 0.00 -32.00 -32.00 -64.00 64.00 -32.00 33.00 -33.00 0.00 -32.00 0.00 0.00 -65.00 -96.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 65.00 0.00 32.00 0.00 32.00 -32.00 -32.00 -129.00 128.00 -96.00 32.00 0.00 33.00 -65.00 32.00 0.00 32.00 -64.00 0.00 0.00 -32.00 -97.00 32.00 -32.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 -97.00 32.00 -32.00 32.00 0.00 64.00 -96.00 33.00 0.00 32.00 -65.00 64.00 0.00 32.00 -32.00 -32.00 -64.00 0.00 -64.00 -32.00 -65.00 32.00 -96.00 -64.00 -32.00 0.00 -65.00 64.00 -64.00 0.00 -64.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 65.00 0.00 32.00 -64.00 32.00 -65.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 -32.00 -32.00 0.00 -33.00 32.00 -64.00 32.00 -32.00 97.00 -64.00 0.00 -129.00 0.00 -96.00 64.00 -33.00 32.00 -128.00 -32.00 -32.00 0.00 -65.00 0.00 -64.00 0.00 0.00 -32.00 -64.00 32.00 -97.00 32.00 -96.00 65.00 -65.00 -33.00 -32.00 33.00 -64.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 32.00 -32.00 0.00 -64.00 64.00 -32.00 33.00 0.00 32.00 32.00 32.00 -64.00 64.00 -129.00 32.00 -32.00 0.00 -64.00 32.00 -33.00 0.00 -160.00 97.00 32.00 32.00 -32.00 64.00 0.00 33.00 -32.00 0.00 -33.00 32.00 -96.00 -32.00 -161.00 32.00 -32.00 32.00 -64.00 0.00 -33.00 64.00 -64.00 0.00 -96.00 64.00 -32.00 0.00 -65.00 0.00 32.00 -96.00 -32.00 -32.00 -32.00 -32.00 -64.00 0.00 -32.00 -32.00 -32.00 -33.00 -33.00 0.00 -96.00 -64.00 -32.00 0.00 32.00 32.00 -64.00 161.00 -65.00 -32.00 -128.00 96.00 -32.00 0.00 -33.00 32.00 -32.00 0.00 -128.00 33.00 -33.00 -33.00 0.00 -32.00 33.00 -32.00 96.00 -64.00 -32.00 -64.00 -64.00 0.00 0.00 -65.00 -65.00 65.00 32.00 0.00 -32.00 32.00 -64.00 0.00 -64.00 96.00 -161.00 32.00 -64.00 32.00 -33.00 0.00 -64.00 -64.00 32.00 -32.00 0.00 -32.00 65.00 -64.00 -33.00 0.00 33.00 -65.00 32.00 0.00 -32.00 -64.00 0.00 -32.00 -65.00 -32.00 -96.00 64.00 -97.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -32.00 32.00 32.00 33.00 0.00 32.00 64.00 0.00 33.00 96.00 64.00 32.00 0.00 32.00 32.00 0.00 -96.00 33.00 -33.00 32.00 -64.00 -32.00 -64.00 0.00 0.00 32.00 -32.00 32.00 -33.00 0.00 0.00 32.00 -96.00 32.00 -32.00 32.00 -129.00 33.00 -32.00 128.00 64.00 64.00 33.00 0.00 96.00 -32.00 96.00 -32.00 33.00 0.00 96.00 0.00 32.00 0.00 -32.00 0.00 64.00 97.00 0.00 64.00 33.00 0.00 0.00 64.00 -33.00 32.00 -32.00 0.00 -32.00 65.00 0.00 32.00 32.00 32.00 32.00 32.00 33.00 0.00 0.00 32.00 -65.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -64.00 -32.00 -32.00 -33.00 64.00 -64.00 0.00 32.00 161.00 0.00 32.00 -32.00 32.00 -64.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -65.00 -32.00 0.00 32.00 -64.00 -32.00 0.00 32.00 -64.00 0.00 -33.00 0.00 -32.00 64.00 -32.00 0.00 0.00 64.00 0.00 32.00 -32.00 0.00 -64.00 33.00 -32.00 0.00 0.00 -65.00 0.00 -32.00 -33.00 0.00 0.00 -64.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 32.00 -65.00 -32.00 0.00 -64.00 32.00 0.00 33.00 -64.00 64.00 -65.00 0.00 -32.00 32.00 -32.00 32.00 -64.00 32.00 -65.00 32.00 0.00 33.00 -64.00 32.00 -32.00 32.00 -97.00 -32.00 -96.00 64.00 -129.00 -32.00 -96.00 32.00 -64.00 64.00 -65.00 0.00 -64.00 65.00 -64.00 -32.00 32.00 -33.00 32.00 -96.00 0.00 -32.00 -32.00 -97.00 0.00 -32.00 -32.00 32.00 -161.00 32.00 -32.00 -32.00 -33.00 32.00 -160.00 65.00 -32.00 64.00 -33.00 -32.00 -64.00 0.00 0.00 -64.00 -32.00 0.00 -64.00 0.00 -65.00 96.00 -96.00 -32.00 -97.00 32.00 -32.00 32.00 -96.00 -32.00 -32.00 -64.00 -33.00 -32.00 0.00 -33.00 -32.00 0.00 0.00 -32.00 65.00 0.00 -33.00 -96.00 33.00 -32.00 -33.00 -32.00 0.00 -65.00 65.00 -128.00 64.00 -33.00 0.00 -32.00 32.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -96.00 0.00 -32.00 32.00 -65.00 -96.00 -32.00 0.00 0.00 -33.00 -32.00 33.00 -64.00 0.00 -97.00 -65.00 0.00 32.00 -64.00 -32.00 0.00 -32.00 -64.00 0.00 -32.00 -96.00 -65.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 65.00 32.00 0.00 -32.00 96.00 -32.00 32.00 -32.00 65.00 32.00 32.00 -32.00 32.00 32.00 -32.00 32.00 32.00 0.00 64.00 -32.00 0.00 -65.00 -32.00 -32.00 -32.00 -32.00 -64.00 0.00 -33.00 -32.00 0.00 -32.00 97.00 -32.00 -97.00 -97.00 65.00 -64.00 -97.00 0.00 0.00 -64.00 97.00 -97.00 0.00 -64.00 -32.00 32.00 -33.00 0.00 -64.00 -32.00 0.00 -32.00 -64.00 0.00 0.00 -65.00 -64.00 0.00 -97.00 0.00 -32.00 -32.00 -64.00 32.00 0.00 -64.00 -161.00 -64.00 32.00 -32.00 0.00 -65.00 -64.00 -32.00 -33.00 0.00 0.00 -32.00 33.00 -32.00 -33.00 -32.00 -64.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 -32.00 -64.00 0.00 -33.00 0.00 -64.00 -33.00 0.00 33.00 -96.00 -33.00 -32.00 -32.00 -33.00 0.00 0.00 -32.00 -96.00 -32.00 0.00 -32.00 32.00 -97.00 -32.00 -32.00 32.00 -64.00 -64.00 0.00 -32.00 -64.00 -33.00 0.00 0.00 -33.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -33.00 32.00 0.00 64.00 -64.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 -64.00 32.00 32.00 -32.00 -64.00 97.00 -65.00 -32.00 -32.00 64.00 -160.00 -32.00 -33.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 -96.00 128.00 -32.00 64.00 -64.00 0.00 -33.00 -64.00 0.00 -32.00 -96.00 -64.00 -32.00 -65.00 -65.00 -96.00 33.00 -64.00 -33.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 32.00 64.00 -32.00 65.00 0.00 96.00 -32.00 0.00 -32.00 -64.00 -33.00 -65.00 -64.00 33.00 -64.00 32.00 0.00 0.00 -32.00 64.00 32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 33.00 -33.00 96.00 65.00 32.00 0.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 -32.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 -65.00 -97.00 0.00 -64.00 -64.00 -32.00 32.00 -65.00 -64.00 -64.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -65.00 -32.00 -32.00 0.00 -32.00 -64.00 -96.00 -32.00 0.00 -32.00 0.00 -33.00 -65.00 33.00 -64.00 64.00 -32.00 0.00 -32.00 96.00 -97.00 -32.00 -64.00 32.00 0.00 33.00 -32.00 64.00 0.00 0.00 -32.00 0.00 -97.00 0.00 -32.00 0.00 -32.00 32.00 -64.00 -32.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 193.00 32.00 64.00 -32.00 0.00 -97.00 64.00 -32.00 33.00 0.00 -33.00 -64.00 33.00 -32.00 64.00 0.00 0.00 -65.00 64.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 33.00 -32.00 32.00 0.00 0.00 -32.00 -65.00 -65.00 -32.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 -64.00 65.00 -65.00 -33.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 0.00 -33.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -65.00 0.00 -64.00 -32.00 0.00 -32.00 -129.00 64.00 0.00 32.00 -64.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 -65.00 -33.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 -64.00 0.00 -32.00 0.00 -32.00 65.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 -64.00 96.00 -32.00 -64.00 -32.00 -32.00 0.00 32.00 -65.00 0.00 -96.00 -64.00 -32.00 -32.00 32.00 -65.00 -32.00 0.00 -65.00 0.00 -32.00 33.00 -32.00 32.00 -128.00 -32.00 -65.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -64.00 0.00 0.00 32.00 -33.00 0.00 0.00 32.00 -96.00 32.00 -32.00 33.00 -32.00 0.00 -32.00 32.00 -65.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 -33.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 0.00 -33.00 -32.00 -64.00 32.00 0.00 32.00 -64.00 -32.00 -64.00 32.00 -33.00 33.00 -32.00 -33.00 -32.00 -64.00 -32.00 -32.00 -64.00 0.00 -33.00 -32.00 -64.00 -32.00 0.00 32.00 -32.00 -64.00 -64.00 0.00 -32.00 0.00 -65.00 -33.00 -64.00 0.00 -32.00 -32.00 0.00 -32.00 -65.00 -64.00 33.00 0.00 -65.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 -97.00 0.00 -32.00 0.00 0.00 32.00 -32.00 -64.00 -64.00 -97.00 0.00 -32.00 -32.00 -32.00 32.00 -97.00 -97.00 -96.00 65.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 0.00 0.00 -33.00 -97.00 -32.00 -32.00 -32.00 -32.00 0.00 32.00 -96.00 -32.00 -65.00 -32.00 -96.00 -32.00 -97.00 32.00 -32.00 0.00 -64.00 32.00 -97.00 -32.00 -32.00 -64.00 -32.00 -32.00 -64.00 -65.00 0.00 -32.00 -64.00 0.00 -65.00 -96.00 0.00 -65.00 -64.00 -64.00 -129.00 64.00 -160.00 65.00 -129.00 -65.00 -129.00 65.00 -32.00 32.00 -96.00 32.00 0.00 32.00 -32.00 32.00 -129.00 32.00 0.00 -32.00 -64.00 65.00 -65.00 0.00 -32.00 32.00 -32.00 64.00 32.00 161.00 0.00 0.00 -32.00 32.00 -32.00 32.00 -64.00 0.00 -65.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -65.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 -33.00 0.00 -64.00 -128.00 32.00 -32.00 -32.00 -65.00 0.00 -64.00 -32.00 0.00 -32.00 -64.00 -129.00 -32.00 -64.00 -33.00 -64.00 0.00 -97.00 -96.00 -96.00 -32.00 -32.00 -64.00 -65.00 0.00 -96.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 32.00 -33.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 0.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 -96.00 64.00 -32.00 -32.00 -33.00 32.00 0.00 0.00 -32.00 0.00 -64.00 32.00 0.00 0.00 -96.00 32.00 -65.00 32.00 0.00 65.00 -96.00 32.00 0.00 64.00 -161.00 0.00 -32.00 -64.00 -97.00 -32.00 -64.00 -32.00 0.00 0.00 -96.00 -33.00 -65.00 -32.00 0.00 -96.00 -32.00 -64.00 -128.00 -129.00 -33.00 -64.00 -64.00 -65.00 0.00 -64.00 -96.00 -129.00 0.00 -32.00 0.00 -32.00 -97.00 -129.00 -64.00 0.00 -64.00 0.00 -33.00 65.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 -65.00 -65.00 -96.00 -96.00 0.00 -32.00 -32.00 32.00 -32.00 32.00 -65.00 0.00 -64.00 64.00 -129.00 0.00 -64.00 32.00 0.00 33.00 -129.00 0.00 -64.00 32.00 0.00 96.00 -96.00 97.00 -65.00 0.00 -64.00 32.00 -64.00 -64.00 -32.00 -33.00 -65.00 -64.00 0.00 -32.00 0.00 -32.00 -161.00 -129.00 -32.00 0.00 -96.00 32.00 -64.00 32.00 -97.00 -32.00 -161.00 0.00 -160.00 65.00 -65.00 -33.00 -32.00 0.00 -64.00 97.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 32.00 0.00 32.00 32.00 0.00 32.00 -32.00 64.00 0.00 65.00 0.00 64.00 -32.00 64.00 -97.00 97.00 -32.00 0.00 -129.00 -65.00 -64.00 -96.00 -32.00 -161.00 -129.00 -96.00 -32.00 0.00 -32.00 32.00 0.00 161.00 -32.00 64.00 -32.00 64.00 -65.00 97.00 -96.00 -33.00 -32.00 97.00 -129.00 64.00 -96.00 0.00 -97.00 -32.00 -64.00 -64.00 -97.00 -32.00 -32.00 -97.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -96.00 -97.00 -161.00 -64.00 -32.00 -32.00 -33.00 -97.00 0.00 -32.00 33.00 32.00 32.00 -32.00 161.00 0.00 32.00 161.00 160.00 0.00 33.00 -32.00 64.00 -32.00 0.00 -65.00 32.00 -96.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 -32.00 -64.00 -64.00 -96.00 -33.00 -97.00 0.00 -64.00 33.00 -32.00 0.00 -65.00 0.00 -32.00 0.00 -128.00 -33.00 -161.00 33.00 -64.00 0.00 -161.00 64.00 -129.00 0.00 -96.00 0.00 -97.00 -32.00 -128.00 0.00 -65.00 32.00 -128.00 128.00 -97.00 33.00 -96.00 0.00 -32.00 -33.00 -97.00 0.00 -161.00 -64.00 -32.00 0.00 -96.00 32.00 -129.00 32.00 -193.00 0.00 -32.00 0.00 -96.00 65.00 -32.00 32.00 -33.00 96.00 33.00 65.00 0.00 32.00 -33.00 32.00 -64.00 64.00 -64.00 129.00 0.00 96.00 0.00 33.00 64.00 96.00 -32.00 161.00 64.00 161.00 0.00 32.00 0.00 64.00 0.00 32.00 -64.00 129.00 -32.00 32.00 -65.00 0.00 -289.00 -193.00 -32.00 -32.00 32.00 -547.00 0.00 -96.00 -32.00 -257.00 -64.00 -161.00 -32.00 -65.00 -129.00 -32.00 -64.00 -32.00 -129.00 0.00 -32.00 32.00 -129.00 258.00 -128.00 289.00 -65.00 64.00 -193.00 129.00 0.00 32.00 -32.00 0.00 -64.00 -32.00 -161.00 -32.00 -32.00 0.00 -129.00 -193.00 0.00 -64.00 -32.00 -97.00 -161.00 -289.00 0.00 -258.00 -32.00 -64.00 0.00 -32.00 0.00 -129.00 65.00 -257.00 64.00 -64.00 96.00 0.00 65.00 -32.00 0.00 -65.00 0.00 -64.00 -32.00 -32.00 -33.00 0.00 -160.00 -32.00 -97.00 32.00 -96.00 64.00 -97.00 32.00 -386.00 -32.00 -96.00 0.00 -129.00 -128.00 -32.00 -33.00 -64.00 -128.00 -97.00 -32.00 -128.00 -32.00 -32.00 32.00 -97.00 0.00 -128.00 32.00 -97.00 32.00 0.00 32.00 -64.00 0.00 -322.00 0.00 -161.00 -32.00 -32.00 0.00 -160.00 0.00 -33.00 0.00 -192.00 32.00 -97.00 64.00 -96.00 0.00 -97.00 0.00 -64.00 -32.00 -257.00 -96.00 -258.00 32.00 -64.00 -32.00 -64.00 0.00 -32.00 -32.00 -129.00 -129.00 -64.00 -32.00 -33.00 -32.00 -32.00 0.00 -160.00 0.00 -97.00 32.00 -32.00 0.00 -32.00 -32.00 -129.00 -32.00 -96.00 0.00 -129.00 64.00 -193.00 -64.00 -128.00 32.00 -33.00 0.00 -64.00 -32.00 -96.00 0.00 0.00 -65.00 -97.00 -32.00 -193.00 -225.00 -96.00 -32.00 -97.00 -32.00 -64.00 -32.00 -64.00 32.00 -65.00 32.00 -96.00 0.00 -64.00 32.00 -65.00 64.00 -96.00 0.00 -64.00 0.00 -33.00 65.00 -96.00 128.00 -64.00 32.00 -65.00 65.00 -96.00 161.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 -225.00 64.00 -257.00 64.00 -64.00 0.00 0.00 32.00 -97.00 65.00 -128.00 32.00 -33.00 32.00 -96.00 96.00 -64.00 0.00 -65.00 0.00 -64.00 0.00 0.00 65.00 -96.00 64.00 -65.00 64.00 -32.00 0.00 -64.00 0.00 0.00 33.00 -161.00 225.00 -32.00 -65.00 -64.00 -96.00 32.00 -32.00 32.00 -97.00 0.00 -128.00 -64.00 -161.00 96.00 -225.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 -64.00 -96.00 -32.00 -64.00 0.00 -129.00 0.00 -161.00 -65.00 -64.00 0.00 -32.00z\"\n          },\n          pr: {\n            name: \"PR\",\n            path: \"M97540.00 151634.00l32.00 -32.00 0.00 -64.00 64.00 -129.00 32.00 -64.00 65.00 -96.00 96.00 -65.00 129.00 -161.00 64.00 -96.00 64.00 -129.00 33.00 -192.00 64.00 -97.00 32.00 -96.00 64.00 -97.00 65.00 0.00 32.00 -64.00 -32.00 -129.00 -33.00 -64.00 -64.00 -64.00 -32.00 -65.00 32.00 -64.00 -32.00 -96.00 0.00 -97.00 96.00 -257.00 0.00 -193.00 65.00 -129.00 32.00 -128.00 64.00 -258.00 97.00 -289.00 32.00 -96.00 64.00 -33.00 32.00 -64.00 65.00 -161.00 32.00 -96.00 64.00 -161.00 32.00 -353.00 0.00 -65.00 -64.00 -225.00 -32.00 -129.00 64.00 -225.00 129.00 -128.00 96.00 -129.00 64.00 -161.00 33.00 -64.00 -65.00 -257.00 -64.00 -97.00 -161.00 -160.00 -32.00 -97.00 0.00 -96.00 0.00 -32.00 0.00 -65.00 -64.00 -160.00 0.00 -65.00 -32.00 -32.00 64.00 -129.00 128.00 -96.00 97.00 -129.00 32.00 -32.00 32.00 0.00 129.00 -32.00 353.00 -257.00 193.00 -97.00 97.00 -96.00 32.00 -64.00 97.00 -290.00 0.00 -128.00 -33.00 -97.00 33.00 -64.00 -33.00 -32.00 33.00 -97.00 32.00 -193.00 96.00 -160.00 0.00 -33.00 32.00 -192.00 32.00 -97.00 33.00 -64.00 32.00 -129.00 32.00 -193.00 64.00 -193.00 0.00 -193.00 129.00 -225.00 0.00 -32.00 64.00 -32.00 32.00 -32.00 129.00 32.00 257.00 -129.00 289.00 -193.00 226.00 -64.00 32.00 -32.00 161.00 -225.00 64.00 -129.00 0.00 -32.00 64.00 -161.00 64.00 -225.00 129.00 -193.00 0.00 -64.00 129.00 -129.00 0.00 -546.00 0.00 -64.00 96.00 -129.00 32.00 -129.00 97.00 -64.00 64.00 -32.00 64.00 -64.00 0.00 -33.00 65.00 -96.00 64.00 -32.00 64.00 -32.00 161.00 -65.00 161.00 -96.00 96.00 -32.00 97.00 -97.00 0.00 -32.00 32.00 0.00 128.00 -32.00 65.00 -97.00 32.00 -32.00 64.00 -32.00 65.00 -32.00 96.00 -32.00 289.00 -97.00 33.00 0.00 0.00 -32.00 96.00 0.00 96.00 0.00 33.00 -32.00 64.00 -64.00 225.00 -290.00 32.00 0.00 97.00 -160.00 32.00 96.00 32.00 97.00 64.00 -97.00 129.00 -32.00 64.00 -64.00 64.00 -65.00 65.00 -32.00 0.00 -32.00 64.00 -32.00 64.00 -32.00 33.00 -32.00 225.00 -33.00 96.00 33.00 225.00 160.00 64.00 33.00 161.00 -65.00 97.00 0.00 32.00 0.00 32.00 32.00 129.00 33.00 128.00 64.00 97.00 0.00 193.00 -64.00 289.00 -193.00 64.00 -33.00 32.00 0.00 65.00 97.00 128.00 129.00 32.00 0.00 65.00 32.00 96.00 64.00 32.00 0.00 161.00 -96.00 64.00 0.00 0.00 -33.00 65.00 0.00 32.00 33.00 32.00 0.00 64.00 32.00 161.00 64.00 225.00 0.00 97.00 32.00 64.00 -64.00 64.00 -32.00 129.00 -32.00 32.00 32.00 64.00 96.00 0.00 129.00 0.00 32.00 32.00 0.00 129.00 -64.00 64.00 -33.00 129.00 -32.00 -32.00 -193.00 0.00 -32.00 32.00 -128.00 0.00 -33.00 32.00 -96.00 65.00 -96.00 32.00 -33.00 64.00 -32.00 32.00 0.00 64.00 32.00 161.00 97.00 129.00 0.00 32.00 0.00 129.00 32.00 160.00 96.00 97.00 0.00 193.00 161.00 32.00 32.00 32.00 33.00 64.00 64.00 97.00 32.00 32.00 0.00 354.00 -96.00 64.00 32.00 32.00 0.00 32.00 32.00 65.00 0.00 0.00 32.00 32.00 129.00 32.00 64.00 96.00 0.00 97.00 -64.00 64.00 0.00 161.00 0.00 64.00 32.00 129.00 96.00 96.00 32.00 65.00 33.00 32.00 -33.00 128.00 -32.00 32.00 32.00 65.00 0.00 128.00 -64.00 33.00 0.00 96.00 -129.00 96.00 0.00 129.00 65.00 64.00 0.00 65.00 -32.00 128.00 32.00 65.00 0.00 128.00 32.00 32.00 0.00 97.00 -32.00 64.00 32.00 64.00 64.00 33.00 0.00 32.00 129.00 96.00 64.00 32.00 0.00 97.00 32.00 64.00 32.00 97.00 65.00 193.00 64.00 257.00 0.00 257.00 129.00 64.00 0.00 65.00 -33.00 96.00 0.00 64.00 97.00 33.00 0.00 64.00 -32.00 32.00 0.00 129.00 0.00 32.00 32.00 193.00 129.00 64.00 128.00 32.00 32.00 32.00 97.00 97.00 32.00 0.00 32.00 0.00 32.00 -32.00 193.00 32.00 32.00 96.00 0.00 97.00 0.00 32.00 32.00 32.00 33.00 32.00 0.00 32.00 0.00 97.00 -33.00 128.00 -225.00 32.00 -32.00 33.00 -32.00 32.00 0.00 64.00 0.00 32.00 64.00 97.00 33.00 64.00 32.00 64.00 -32.00 65.00 -65.00 128.00 32.00 65.00 33.00 32.00 32.00 32.00 64.00 32.00 32.00 64.00 32.00 65.00 -64.00 32.00 0.00 96.00 64.00 64.00 -32.00 97.00 32.00 32.00 -64.00 32.00 0.00 0.00 -96.00 32.00 -33.00 65.00 0.00 64.00 -32.00 97.00 65.00 0.00 32.00 64.00 64.00 32.00 64.00 96.00 0.00 65.00 0.00 32.00 -64.00 64.00 0.00 64.00 -32.00 129.00 64.00 32.00 32.00 0.00 32.00 32.00 0.00 65.00 -32.00 64.00 32.00 97.00 0.00 96.00 -32.00 64.00 -64.00 97.00 32.00 64.00 0.00 32.00 0.00 64.00 -96.00 65.00 0.00 64.00 32.00 97.00 -97.00 0.00 -32.00 96.00 32.00 64.00 0.00 33.00 97.00 32.00 0.00 32.00 0.00 32.00 -32.00 -32.00 -65.00 0.00 -32.00 32.00 -32.00 96.00 64.00 0.00 33.00 33.00 64.00 -33.00 96.00 -32.00 32.00 0.00 33.00 97.00 96.00 96.00 0.00 64.00 32.00 97.00 65.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 64.00 0.00 32.00 0.00 97.00 64.00 0.00 64.00 64.00 32.00 -32.00 33.00 32.00 32.00 32.00 64.00 0.00 97.00 -32.00 32.00 32.00 32.00 32.00 32.00 0.00 0.00 33.00 32.00 32.00 32.00 0.00 32.00 32.00 65.00 0.00 64.00 32.00 64.00 -32.00 65.00 0.00 32.00 32.00 32.00 32.00 -64.00 97.00 32.00 32.00 64.00 32.00 32.00 64.00 32.00 -32.00 0.00 32.00 33.00 32.00 96.00 0.00 -32.00 33.00 32.00 32.00 96.00 160.00 0.00 65.00 0.00 32.00 33.00 32.00 32.00 0.00 -32.00 64.00 32.00 33.00 64.00 128.00 0.00 97.00 32.00 64.00 0.00 64.00 -32.00 65.00 -32.00 -33.00 0.00 65.00 0.00 32.00 96.00 0.00 97.00 64.00 0.00 32.00 32.00 32.00 -32.00 33.00 -32.00 -33.00 -97.00 33.00 0.00 32.00 32.00 0.00 33.00 0.00 32.00 0.00 0.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 32.00 0.00 0.00 64.00 64.00 0.00 -32.00 33.00 32.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 0.00 32.00 -65.00 -32.00 0.00 64.00 -32.00 32.00 32.00 64.00 -32.00 0.00 -32.00 33.00 32.00 32.00 97.00 64.00 -32.00 32.00 32.00 64.00 -32.00 65.00 32.00 32.00 0.00 32.00 -65.00 64.00 -32.00 65.00 32.00 32.00 0.00 32.00 0.00 32.00 33.00 0.00 0.00 32.00 -33.00 32.00 65.00 33.00 0.00 32.00 64.00 32.00 0.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 32.00 0.00 32.00 33.00 33.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 -32.00 64.00 0.00 32.00 32.00 65.00 -32.00 0.00 -65.00 -32.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 65.00 32.00 -33.00 32.00 0.00 33.00 33.00 64.00 0.00 64.00 0.00 32.00 0.00 33.00 -65.00 32.00 -64.00 32.00 -32.00 0.00 0.00 32.00 32.00 32.00 -64.00 -32.00 -32.00 0.00 64.00 32.00 -32.00 32.00 -32.00 0.00 32.00 33.00 0.00 64.00 32.00 32.00 32.00 64.00 64.00 -64.00 0.00 96.00 32.00 33.00 33.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 64.00 32.00 0.00 -32.00 65.00 -32.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 -32.00 0.00 -65.00 0.00 33.00 65.00 32.00 -33.00 32.00 33.00 0.00 32.00 32.00 0.00 0.00 32.00 -64.00 0.00 0.00 32.00 32.00 0.00 64.00 32.00 0.00 32.00 -32.00 33.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 32.00 0.00 33.00 0.00 0.00 33.00 32.00 0.00 0.00 64.00 32.00 32.00 32.00 32.00 64.00 32.00 0.00 32.00 33.00 0.00 -33.00 33.00 33.00 32.00 0.00 32.00 32.00 0.00 96.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 96.00 32.00 0.00 33.00 33.00 -33.00 32.00 33.00 32.00 -33.00 32.00 33.00 0.00 32.00 97.00 64.00 32.00 0.00 0.00 32.00 32.00 32.00 -64.00 33.00 0.00 64.00 0.00 96.00 0.00 65.00 -65.00 32.00 32.00 32.00 129.00 96.00 0.00 33.00 64.00 0.00 32.00 32.00 -32.00 32.00 32.00 0.00 33.00 32.00 -33.00 64.00 33.00 32.00 32.00 33.00 0.00 32.00 0.00 32.00 32.00 32.00 32.00 -32.00 32.00 0.00 65.00 64.00 32.00 0.00 0.00 65.00 96.00 0.00 32.00 32.00 65.00 0.00 32.00 32.00 -97.00 96.00 -32.00 0.00 -64.00 97.00 -64.00 96.00 0.00 32.00 32.00 33.00 32.00 -65.00 32.00 0.00 0.00 32.00 -32.00 65.00 -64.00 64.00 32.00 32.00 -32.00 64.00 32.00 0.00 0.00 33.00 0.00 32.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 0.00 64.00 -96.00 32.00 -32.00 0.00 32.00 65.00 0.00 64.00 32.00 32.00 -32.00 32.00 -32.00 65.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 64.00 0.00 33.00 -32.00 0.00 64.00 32.00 -32.00 32.00 -32.00 32.00 0.00 32.00 32.00 32.00 -32.00 97.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 -32.00 64.00 32.00 0.00 0.00 32.00 33.00 0.00 96.00 97.00 64.00 0.00 33.00 0.00 64.00 32.00 32.00 0.00 129.00 0.00 0.00 -64.00 64.00 0.00 0.00 -32.00 32.00 -33.00 64.00 0.00 33.00 0.00 32.00 0.00 128.00 0.00 32.00 33.00 65.00 32.00 32.00 -65.00 32.00 0.00 0.00 33.00 64.00 0.00 0.00 -33.00 32.00 0.00 33.00 65.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -65.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 33.00 -32.00 -33.00 32.00 -32.00 -32.00 32.00 -32.00 33.00 0.00 64.00 32.00 64.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 96.00 64.00 -32.00 33.00 0.00 0.00 64.00 64.00 0.00 0.00 32.00 64.00 0.00 32.00 65.00 65.00 -65.00 64.00 0.00 32.00 0.00 32.00 33.00 32.00 0.00 0.00 -33.00 32.00 0.00 161.00 -32.00 65.00 32.00 32.00 0.00 -65.00 -64.00 33.00 -32.00 64.00 64.00 64.00 -64.00 32.00 32.00 32.00 64.00 65.00 0.00 64.00 33.00 32.00 96.00 65.00 -32.00 32.00 -64.00 32.00 0.00 0.00 64.00 32.00 0.00 64.00 -32.00 129.00 -32.00 32.00 32.00 32.00 32.00 0.00 -64.00 0.00 -33.00 0.00 -32.00 65.00 32.00 32.00 33.00 -32.00 32.00 32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 64.00 32.00 32.00 -64.00 64.00 -32.00 0.00 -32.00 65.00 0.00 64.00 -65.00 32.00 32.00 32.00 -32.00 32.00 32.00 33.00 33.00 32.00 -33.00 32.00 65.00 32.00 32.00 0.00 32.00 32.00 64.00 64.00 0.00 0.00 33.00 33.00 0.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 64.00 0.00 0.00 -32.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 65.00 -32.00 0.00 0.00 64.00 -64.00 32.00 -32.00 32.00 -97.00 65.00 0.00 64.00 0.00 32.00 -32.00 32.00 -32.00 64.00 32.00 65.00 -32.00 32.00 96.00 0.00 0.00 32.00 0.00 32.00 -32.00 32.00 -32.00 33.00 32.00 0.00 -32.00 64.00 0.00 -32.00 -32.00 0.00 0.00 32.00 0.00 64.00 0.00 32.00 0.00 32.00 32.00 33.00 -32.00 32.00 32.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 65.00 -64.00 32.00 0.00 32.00 -33.00 0.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 33.00 0.00 0.00 32.00 32.00 32.00 0.00 64.00 64.00 0.00 0.00 32.00 32.00 33.00 0.00 64.00 32.00 32.00 32.00 32.00 65.00 64.00 32.00 0.00 32.00 -64.00 32.00 -32.00 64.00 -96.00 33.00 -33.00 64.00 0.00 0.00 -64.00 32.00 -129.00 193.00 -128.00 64.00 0.00 33.00 -32.00 96.00 32.00 64.00 32.00 0.00 32.00 32.00 0.00 97.00 97.00 0.00 32.00 0.00 32.00 64.00 0.00 0.00 32.00 32.00 -32.00 32.00 0.00 0.00 96.00 -32.00 0.00 0.00 65.00 65.00 -65.00 32.00 -64.00 64.00 -64.00 0.00 -32.00 32.00 0.00 32.00 64.00 33.00 0.00 0.00 -64.00 0.00 -33.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 64.00 33.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 0.00 33.00 64.00 32.00 32.00 0.00 0.00 32.00 -32.00 32.00 32.00 97.00 -32.00 64.00 32.00 32.00 0.00 32.00 64.00 97.00 0.00 32.00 65.00 64.00 0.00 32.00 64.00 32.00 64.00 33.00 -32.00 32.00 -32.00 0.00 0.00 64.00 -32.00 64.00 -97.00 32.00 33.00 65.00 64.00 32.00 64.00 0.00 32.00 64.00 32.00 32.00 161.00 129.00 65.00 -32.00 64.00 -32.00 32.00 32.00 32.00 -32.00 65.00 0.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 64.00 32.00 32.00 -32.00 32.00 0.00 32.00 0.00 -32.00 32.00 32.00 33.00 -289.00 257.00 -64.00 64.00 0.00 64.00 32.00 0.00 -32.00 32.00 -161.00 129.00 -97.00 97.00 -128.00 193.00 -97.00 128.00 -32.00 161.00 -32.00 32.00 -64.00 0.00 -129.00 32.00 -129.00 64.00 -128.00 33.00 161.00 96.00 -65.00 161.00 -32.00 0.00 0.00 64.00 0.00 32.00 -32.00 0.00 -32.00 33.00 -32.00 64.00 -193.00 0.00 -97.00 32.00 -160.00 129.00 -129.00 160.00 -161.00 290.00 -257.00 418.00 -32.00 193.00 0.00 64.00 -32.00 -32.00 -33.00 32.00 -64.00 32.00 0.00 32.00 0.00 32.00 -32.00 65.00 32.00 32.00 -64.00 129.00 -64.00 225.00 -33.00 32.00 33.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 -32.00 -33.00 -96.00 65.00 0.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -161.00 0.00 -515.00 0.00 -675.00 0.00 64.00 32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -33.00 33.00 -32.00 0.00 0.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 -65.00 -33.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 -64.00 -64.00 0.00 -65.00 -33.00 32.00 -64.00 0.00 0.00 33.00 -32.00 0.00 -32.00 -65.00 -32.00 32.00 -65.00 -32.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -32.00 65.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 -33.00 -33.00 0.00 -32.00 33.00 -64.00 0.00 0.00 32.00 -64.00 0.00 -33.00 32.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 32.00 32.00 -32.00 32.00 -64.00 33.00 0.00 32.00 0.00 32.00 0.00 32.00 -65.00 0.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 32.00 32.00 33.00 -32.00 0.00 32.00 0.00 0.00 32.00 -65.00 0.00 33.00 32.00 -33.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -96.00 64.00 -32.00 32.00 -33.00 0.00 0.00 33.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -64.00 0.00 -33.00 0.00 0.00 32.00 -32.00 -32.00 0.00 -32.00 -32.00 64.00 -64.00 -32.00 0.00 64.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 0.00 -64.00 -32.00 0.00 -64.00 0.00 -32.00 64.00 -65.00 65.00 -32.00 -32.00 0.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 64.00 0.00 -32.00 0.00 32.00 -32.00 33.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 32.00 -32.00 -65.00 -32.00 0.00 0.00 33.00 32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 32.00 0.00 -32.00 64.00 -65.00 -32.00 -64.00 -97.00 0.00 65.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 -65.00 -33.00 0.00 0.00 -32.00 0.00 32.00 -32.00 0.00 -64.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 0.00 0.00 64.00 -64.00 32.00 0.00 -32.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 64.00 -65.00 -64.00 0.00 -32.00 -64.00 -65.00 -32.00 -64.00 64.00 -32.00 0.00 -32.00 -64.00 64.00 -64.00 -64.00 0.00 -65.00 0.00 0.00 -97.00 -64.00 -32.00 -32.00 -64.00 -32.00 0.00 0.00 32.00 32.00 0.00 0.00 64.00 -32.00 0.00 -32.00 -96.00 -33.00 32.00 0.00 32.00 -64.00 -32.00 -32.00 -97.00 -32.00 33.00 -32.00 0.00 -32.00 -65.00 0.00 -64.00 -33.00 32.00 -32.00 0.00 65.00 -32.00 0.00 -64.00 -33.00 -32.00 0.00 64.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 -33.00 32.00 -32.00 -129.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -32.00 -97.00 32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -64.00 32.00 -32.00 32.00 64.00 32.00 -129.00 129.00 32.00 -65.00 0.00 -96.00 -32.00 -32.00 -96.00 -32.00 0.00 32.00 -64.00 0.00 0.00 32.00 32.00 64.00 -32.00 32.00 -97.00 -64.00 -32.00 0.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 33.00 0.00 -33.00 -32.00 -96.00 -32.00 96.00 -97.00 65.00 -32.00 -32.00 -32.00 64.00 -64.00 -97.00 -65.00 65.00 0.00 -32.00 32.00 -97.00 -32.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 32.00 0.00 32.00 32.00 32.00 0.00 0.00 -32.00 32.00 32.00 -32.00 65.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -33.00 -32.00 0.00 -32.00 -64.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -33.00 -64.00 0.00 -65.00 -96.00 -32.00 0.00 32.00 0.00 65.00 -64.00 -33.00 -65.00 33.00 -96.00 32.00 -97.00 64.00 0.00 64.00 -64.00 0.00 32.00 65.00 0.00 32.00 -32.00 32.00 32.00 32.00 0.00 32.00 -32.00 0.00 0.00 32.00 64.00 0.00 0.00 33.00 -32.00 -33.00 -32.00 33.00 -32.00 -33.00 -64.00 -32.00 -32.00 -32.00 0.00 -32.00 -33.00 32.00 0.00 -32.00 33.00 -64.00 -33.00 -65.00 -160.00 -96.00 0.00 -32.00 -33.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 -32.00 -64.00 -33.00 -33.00 33.00 -32.00 -65.00 -32.00 0.00 32.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 0.00 64.00 -32.00 -32.00 32.00 0.00 -64.00 0.00 -33.00 -32.00 -32.00 32.00 -32.00 -32.00 -64.00 32.00 -129.00 64.00 0.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 -97.00 -32.00 0.00 -97.00 97.00 0.00 96.00 32.00 33.00 33.00 0.00 64.00 -33.00 32.00 0.00 32.00 0.00 0.00 65.00 -32.00 32.00 -32.00 0.00 -97.00 32.00 -64.00 0.00 -128.00 -32.00 -65.00 64.00 -32.00 64.00 -64.00 65.00 64.00 128.00 -32.00 0.00 -32.00 33.00 -65.00 32.00 -32.00 32.00 -32.00 64.00 -64.00 97.00 -32.00 32.00 -129.00 64.00 97.00 193.00 -33.00 32.00 -64.00 0.00 -64.00 0.00 0.00 -96.00 -32.00 -32.00 -193.00 32.00 -32.00 32.00 -33.00 32.00 -64.00 32.00 -32.00 97.00 -32.00 32.00 -32.00 -32.00 -97.00 -129.00 -32.00 0.00 -32.00 96.00 -32.00 97.00 -32.00 32.00 -33.00 0.00 -64.00 0.00 0.00 -161.00 -96.00 -96.00 -32.00 0.00 -33.00 32.00 65.00 129.00 -32.00 64.00 -33.00 0.00 -32.00 -64.00 -96.00 0.00 0.00 -97.00 -97.00 -64.00 -32.00 -32.00 -257.00 96.00 -32.00 -32.00 -97.00 -64.00 -32.00 96.00 -32.00 0.00 0.00 64.00 -32.00 33.00 -32.00 32.00 -65.00 32.00 -64.00 0.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -65.00 32.00 0.00 32.00 -32.00 0.00 -64.00 32.00 -64.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 65.00 -32.00 32.00 -96.00 32.00 0.00 32.00 -33.00 0.00 -32.00 64.00 32.00 0.00 0.00 33.00 -64.00 64.00 32.00 32.00 32.00 32.00 -96.00 32.00 -32.00 32.00 0.00 65.00 -64.00 -32.00 0.00 32.00 32.00 32.00 -65.00 32.00 0.00 32.00 33.00 65.00 96.00 32.00 -32.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 64.00 32.00 -32.00 32.00 32.00 32.00 -64.00 33.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 32.00 32.00 65.00 32.00 0.00 33.00 64.00 32.00 0.00 0.00 32.00 64.00 32.00 -32.00 32.00 0.00 32.00 64.00 33.00 -32.00 32.00 0.00 32.00 0.00 64.00 -64.00 32.00 32.00 65.00 -32.00 32.00 0.00 32.00 -97.00 0.00 -32.00 32.00 -64.00 0.00 0.00 32.00 -32.00 0.00 0.00 65.00 -97.00 0.00 -32.00 -33.00 -64.00 33.00 0.00 -33.00 -32.00 0.00 -97.00 33.00 -64.00 0.00 -64.00 32.00 -65.00 0.00 -64.00 64.00 64.00 64.00 0.00 65.00 -32.00 32.00 -64.00 32.00 32.00 -64.00 -129.00 -65.00 -32.00 -96.00 -64.00 -64.00 0.00 -65.00 -32.00 -64.00 -32.00 -32.00 -33.00 0.00 -64.00 0.00 32.00 -64.00 -32.00 -33.00 -32.00 -64.00 -64.00 -32.00 -97.00 32.00 -257.00 0.00 -64.00 0.00 -97.00 0.00 -64.00 0.00 -64.00 -64.00 -97.00 -65.00 -129.00 97.00 -64.00 0.00 -128.00 -32.00 -258.00 64.00 -64.00 0.00 -96.00 -32.00 -97.00 64.00 -64.00 -32.00 -65.00 64.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -96.00 -32.00 -129.00 0.00 -96.00 -64.00 -32.00 32.00 -65.00 -32.00 -64.00 0.00 0.00 -33.00 -129.00 33.00 -32.00 -65.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 -65.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 -32.00 -65.00 -33.00 0.00 -32.00 -32.00 0.00 -96.00 -64.00 -33.00 -64.00 0.00 -32.00 -32.00 -65.00 0.00 -64.00 0.00 -129.00 -128.00 -64.00 64.00 -97.00 32.00 -96.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 0.00 -32.00 -96.00 -96.00 -97.00 0.00 -64.00 32.00 -32.00 -65.00 -32.00 65.00 -65.00 -65.00 -64.00 33.00 -32.00 0.00 -32.00 -33.00 -33.00 -32.00 -32.00 32.00 -64.00 33.00 -32.00 0.00 -97.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 -97.00 -65.00 0.00 -128.00 -96.00 -97.00 32.00 -64.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -64.00 64.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 -64.00 -33.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 -97.00 -96.00 -96.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 32.00 -32.00 -65.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 33.00 -32.00 0.00 -64.00 -33.00 -64.00 33.00 -33.00 0.00 -32.00 -33.00 -32.00 0.00 -64.00 0.00 -64.00 0.00 -33.00 0.00 -128.00 65.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 -32.00 -64.00 32.00 -33.00 0.00 -64.00 32.00 -193.00 -97.00 -193.00 129.00 -96.00 32.00 -129.00 64.00 -64.00 0.00 -32.00 -32.00 -32.00 -32.00 -33.00 0.00 -64.00 -32.00 -32.00 -32.00 -32.00 -32.00 -32.00 -65.00 -32.00 0.00 -33.00 33.00 -32.00 0.00 -32.00 -33.00 -64.00 0.00 -65.00 -64.00 -32.00 0.00 0.00 -32.00 -128.00 -64.00 -65.00 -65.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -64.00 -97.00 -32.00 0.00 0.00 -64.00 -129.00 64.00 -32.00 0.00 -32.00 -32.00 -65.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 -64.00 -32.00 32.00 -193.00 129.00 -32.00 32.00 -64.00 0.00 -97.00 64.00 -32.00 0.00 -32.00 0.00 -96.00 32.00 -129.00 -32.00 -128.00 0.00 0.00 -32.00 -97.00 -64.00 -32.00 0.00 -32.00 -97.00 -97.00 32.00 -64.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 -32.00 -32.00 64.00 -97.00 -64.00 -32.00 0.00 -64.00 -32.00 0.00 -64.00 -97.00 -32.00 -32.00 -97.00 -64.00 -32.00 -64.00 -32.00 -65.00 -32.00 0.00 -97.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -65.00 32.00 -96.00 33.00 0.00 0.00 -32.00 0.00 -32.00 -33.00 -65.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 -65.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -64.00 -33.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -33.00 0.00 0.00 -32.00 0.00 -32.00 -96.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 -32.00 -128.00 32.00 0.00 32.00 0.00 0.00 -64.00 32.00 64.00 32.00 0.00 -32.00 -64.00 32.00 -33.00 -32.00 0.00 -64.00 33.00 32.00 -65.00 32.00 0.00 32.00 -32.00 -32.00 0.00 -64.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 64.00 0.00 0.00 -32.00 32.00 0.00 32.00 -33.00 -64.00 0.00 32.00 -64.00 -64.00 0.00 32.00 0.00 0.00 -32.00 -32.00 -64.00 -32.00 32.00 0.00 -32.00 32.00 -65.00 32.00 0.00 0.00 -32.00 32.00 -32.00 64.00 32.00 0.00 -32.00 -64.00 0.00 32.00 -64.00 0.00 -32.00 -96.00 0.00 64.00 -33.00 0.00 -32.00 -64.00 -32.00 -64.00 -32.00 32.00 -32.00 64.00 0.00 -32.00 -32.00 64.00 0.00 -96.00 -65.00 -65.00 33.00 33.00 -97.00 0.00 -32.00 -65.00 0.00 32.00 -32.00 -64.00 -32.00 64.00 0.00 -32.00 -65.00 65.00 32.00 0.00 33.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 -64.00 -32.00 0.00 -32.00 -33.00 -65.00 -64.00 -32.00 -64.00 32.00 32.00 -64.00 32.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 -97.00 64.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 32.00 -32.00 -32.00 -33.00 -64.00 33.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 0.00 33.00 -33.00 0.00 33.00 64.00 -33.00 64.00 -32.00 -32.00 0.00 -64.00 -32.00 -65.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 -97.00 -64.00 -32.00 -32.00 -32.00 -65.00 -64.00 -32.00 -32.00 32.00 -65.00 65.00 -32.00 32.00 -64.00 -64.00 -32.00 -65.00 -64.00 0.00 -33.00 97.00 0.00 160.00 -32.00 0.00 0.00 33.00 -64.00 -97.00 -64.00 -161.00 0.00 -64.00 128.00 -161.00 0.00 -96.00 -32.00 -32.00 -32.00 0.00 -161.00 128.00 -96.00 97.00 -33.00 0.00 -96.00 -32.00 -64.00 32.00 -32.00 64.00 32.00 0.00 128.00 64.00 0.00 33.00 32.00 32.00 -32.00 0.00 -96.00 0.00 -129.00 -97.00 -32.00 0.00 -32.00 32.00 0.00 129.00 -64.00 0.00 -65.00 -64.00 -64.00 -129.00 -64.00 0.00 -161.00 97.00 -96.00 160.00 -33.00 0.00 -96.00 -64.00 -64.00 32.00 0.00 32.00 0.00 65.00 -33.00 64.00 -160.00 128.00 32.00 129.00 -32.00 32.00 -32.00 0.00 -65.00 -161.00 -96.00 -128.00 -64.00 -32.00 -97.00 -65.00 -96.00 65.00 -33.00 0.00 -32.00 -65.00 32.00 -64.00 -64.00 -32.00 -64.00 -32.00 -32.00 0.00 -129.00 32.00 0.00 -257.00 -32.00 -97.00 0.00 -193.00 -97.00 -64.00 0.00 -64.00 0.00 -32.00 65.00 -33.00z\"\n          },\n          rs: {\n            name: \"RS\",\n            path: \"M84646.00 173756.00l32.00 -193.00 -32.00 -193.00 0.00 -64.00 161.00 -258.00 225.00 -192.00 97.00 -33.00 257.00 0.00 193.00 -64.00 32.00 -32.00 128.00 -96.00 226.00 -193.00 289.00 -386.00 96.00 -129.00 161.00 -128.00 129.00 -193.00 225.00 -129.00 128.00 -64.00 65.00 -65.00 96.00 -64.00 97.00 -129.00 0.00 -96.00 0.00 -64.00 32.00 -161.00 64.00 -32.00 193.00 0.00 64.00 -32.00 225.00 -418.00 33.00 -97.00 -33.00 -128.00 97.00 -193.00 129.00 -161.00 64.00 -193.00 96.00 -32.00 161.00 0.00 129.00 -97.00 64.00 -32.00 322.00 -32.00 64.00 0.00 32.00 -193.00 64.00 -96.00 -96.00 -97.00 32.00 -128.00 64.00 -65.00 65.00 -32.00 225.00 -64.00 64.00 -65.00 96.00 -128.00 33.00 -64.00 0.00 -129.00 -33.00 -225.00 33.00 -97.00 64.00 -32.00 96.00 -64.00 354.00 0.00 129.00 -161.00 64.00 -128.00 96.00 -129.00 386.00 -322.00 129.00 -64.00 64.00 -64.00 32.00 -64.00 -64.00 -65.00 -64.00 -96.00 0.00 -65.00 0.00 -64.00 64.00 -96.00 129.00 -32.00 160.00 -33.00 161.00 -32.00 129.00 -32.00 32.00 -32.00 0.00 -32.00 -97.00 -225.00 0.00 -65.00 0.00 -32.00 129.00 -193.00 129.00 -32.00 128.00 64.00 290.00 0.00 96.00 33.00 32.00 32.00 32.00 96.00 33.00 65.00 32.00 64.00 64.00 0.00 32.00 -64.00 0.00 -97.00 97.00 -257.00 0.00 -64.00 -161.00 -97.00 -129.00 -96.00 -193.00 -65.00 -32.00 -96.00 32.00 -64.00 193.00 -65.00 161.00 -32.00 193.00 -161.00 32.00 -32.00 64.00 -32.00 33.00 0.00 32.00 -32.00 -32.00 -64.00 64.00 -33.00 -32.00 -64.00 32.00 -32.00 32.00 -64.00 64.00 0.00 65.00 32.00 0.00 32.00 -33.00 64.00 0.00 32.00 129.00 65.00 32.00 0.00 32.00 -32.00 0.00 -65.00 0.00 -32.00 65.00 -64.00 96.00 -32.00 65.00 -129.00 32.00 -64.00 64.00 0.00 64.00 96.00 65.00 0.00 32.00 0.00 32.00 -64.00 128.00 -129.00 193.00 -96.00 33.00 -32.00 0.00 -65.00 -65.00 -96.00 -32.00 0.00 0.00 -64.00 64.00 -65.00 129.00 0.00 32.00 -32.00 32.00 -128.00 32.00 -65.00 33.00 0.00 64.00 0.00 129.00 32.00 64.00 0.00 32.00 -64.00 96.00 -161.00 193.00 -160.00 65.00 0.00 64.00 32.00 64.00 96.00 65.00 64.00 32.00 33.00 32.00 -33.00 32.00 -32.00 -32.00 -128.00 32.00 -32.00 64.00 -33.00 129.00 -32.00 129.00 65.00 96.00 32.00 32.00 -65.00 0.00 -64.00 -32.00 -64.00 -225.00 -97.00 -32.00 -64.00 32.00 -32.00 32.00 -32.00 97.00 -32.00 160.00 128.00 33.00 32.00 64.00 -32.00 32.00 -96.00 64.00 0.00 97.00 32.00 32.00 0.00 64.00 -32.00 32.00 -65.00 0.00 -32.00 129.00 -128.00 0.00 -129.00 0.00 -193.00 0.00 -96.00 32.00 -65.00 64.00 0.00 129.00 0.00 32.00 -32.00 32.00 -96.00 33.00 -161.00 96.00 -193.00 32.00 0.00 64.00 32.00 33.00 193.00 64.00 32.00 32.00 0.00 32.00 0.00 32.00 -32.00 65.00 -64.00 96.00 0.00 193.00 64.00 32.00 -32.00 0.00 -64.00 -32.00 -129.00 0.00 -64.00 32.00 -65.00 32.00 0.00 33.00 33.00 64.00 160.00 64.00 0.00 32.00 0.00 32.00 -64.00 33.00 -96.00 96.00 -161.00 0.00 -64.00 32.00 -65.00 32.00 0.00 32.00 32.00 97.00 97.00 64.00 128.00 32.00 0.00 65.00 -32.00 32.00 -64.00 32.00 -32.00 129.00 0.00 96.00 0.00 64.00 -32.00 0.00 -65.00 -32.00 -32.00 -96.00 -64.00 0.00 -64.00 32.00 0.00 129.00 0.00 32.00 -33.00 64.00 -64.00 32.00 0.00 97.00 64.00 0.00 33.00 96.00 128.00 32.00 32.00 65.00 33.00 64.00 -33.00 0.00 -64.00 -32.00 -96.00 0.00 -65.00 0.00 -32.00 32.00 0.00 64.00 32.00 64.00 65.00 65.00 96.00 32.00 0.00 96.00 -32.00 0.00 -129.00 33.00 -64.00 32.00 -32.00 96.00 0.00 64.00 -32.00 33.00 -65.00 0.00 -64.00 0.00 -64.00 32.00 -97.00 64.00 -96.00 0.00 -64.00 32.00 -129.00 64.00 -64.00 33.00 0.00 32.00 32.00 0.00 32.00 0.00 129.00 64.00 32.00 64.00 0.00 97.00 0.00 32.00 0.00 129.00 0.00 32.00 -65.00 64.00 -128.00 129.00 -32.00 64.00 -97.00 0.00 -96.00 32.00 -65.00 97.00 -32.00 64.00 0.00 64.00 0.00 0.00 -64.00 0.00 -97.00 32.00 -32.00 65.00 0.00 64.00 32.00 32.00 65.00 65.00 0.00 64.00 -97.00 32.00 -96.00 32.00 -32.00 97.00 0.00 64.00 160.00 32.00 33.00 32.00 0.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 -32.00 128.00 -97.00 65.00 32.00 64.00 161.00 64.00 0.00 65.00 -32.00 32.00 0.00 32.00 -32.00 64.00 -32.00 32.00 -33.00 65.00 0.00 32.00 0.00 64.00 33.00 0.00 32.00 32.00 32.00 0.00 64.00 0.00 97.00 32.00 32.00 33.00 0.00 64.00 -161.00 32.00 0.00 64.00 0.00 33.00 0.00 128.00 -64.00 65.00 0.00 32.00 0.00 96.00 96.00 64.00 32.00 33.00 0.00 64.00 0.00 0.00 -32.00 0.00 -64.00 0.00 -32.00 -64.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 0.00 32.00 0.00 64.00 0.00 32.00 64.00 65.00 32.00 225.00 -64.00 32.00 -64.00 32.00 -97.00 64.00 -64.00 32.00 0.00 33.00 -32.00 32.00 32.00 32.00 64.00 32.00 32.00 32.00 0.00 32.00 0.00 33.00 0.00 96.00 0.00 0.00 33.00 32.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 64.00 -96.00 161.00 0.00 32.00 0.00 32.00 0.00 33.00 32.00 0.00 32.00 0.00 64.00 -97.00 193.00 -96.00 65.00 -32.00 32.00 0.00 160.00 96.00 65.00 0.00 32.00 -32.00 32.00 -161.00 0.00 -32.00 32.00 0.00 32.00 -32.00 33.00 32.00 64.00 129.00 0.00 32.00 32.00 0.00 96.00 -32.00 193.00 -65.00 0.00 -64.00 0.00 -32.00 -32.00 -97.00 0.00 -32.00 0.00 -32.00 97.00 -96.00 32.00 0.00 96.00 0.00 32.00 0.00 33.00 32.00 -33.00 64.00 -96.00 129.00 0.00 96.00 32.00 32.00 32.00 0.00 129.00 -96.00 32.00 0.00 32.00 64.00 32.00 0.00 0.00 64.00 -64.00 97.00 -32.00 32.00 0.00 96.00 32.00 0.00 32.00 33.00 65.00 32.00 32.00 -32.00 0.00 -161.00 32.00 -97.00 32.00 0.00 96.00 33.00 0.00 128.00 33.00 32.00 32.00 0.00 96.00 -32.00 65.00 -32.00 0.00 -32.00 128.00 -64.00 32.00 0.00 32.00 32.00 0.00 128.00 0.00 32.00 33.00 0.00 32.00 0.00 64.00 -32.00 32.00 0.00 64.00 0.00 33.00 0.00 32.00 32.00 64.00 0.00 32.00 0.00 0.00 33.00 32.00 0.00 0.00 32.00 -32.00 96.00 0.00 32.00 65.00 33.00 0.00 32.00 32.00 -32.00 64.00 -65.00 32.00 -32.00 32.00 0.00 33.00 64.00 32.00 97.00 0.00 32.00 32.00 32.00 32.00 0.00 64.00 -64.00 0.00 -97.00 32.00 -32.00 33.00 0.00 32.00 0.00 64.00 97.00 64.00 32.00 32.00 0.00 33.00 -32.00 96.00 -32.00 32.00 -33.00 97.00 0.00 32.00 0.00 64.00 -32.00 64.00 97.00 161.00 32.00 97.00 0.00 0.00 -32.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 160.00 -96.00 33.00 0.00 32.00 0.00 0.00 32.00 -32.00 96.00 0.00 32.00 0.00 65.00 96.00 96.00 32.00 32.00 32.00 33.00 32.00 0.00 33.00 -33.00 -33.00 -128.00 0.00 -32.00 33.00 0.00 32.00 0.00 0.00 32.00 32.00 0.00 -32.00 128.00 32.00 97.00 64.00 -32.00 65.00 -65.00 32.00 0.00 64.00 65.00 64.00 32.00 65.00 64.00 32.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 -64.00 -32.00 -65.00 0.00 -64.00 0.00 -32.00 32.00 0.00 96.00 0.00 65.00 0.00 32.00 -32.00 96.00 64.00 -32.00 32.00 -96.00 32.00 -65.00 65.00 0.00 32.00 129.00 32.00 32.00 0.00 64.00 96.00 32.00 0.00 0.00 32.00 33.00 0.00 32.00 -32.00 32.00 -64.00 32.00 -96.00 64.00 -65.00 33.00 -32.00 32.00 0.00 32.00 32.00 -32.00 161.00 32.00 0.00 32.00 0.00 64.00 -32.00 65.00 0.00 32.00 -32.00 64.00 32.00 0.00 32.00 0.00 64.00 0.00 65.00 32.00 32.00 65.00 0.00 64.00 -32.00 96.00 32.00 32.00 0.00 33.00 0.00 96.00 -65.00 32.00 0.00 0.00 65.00 -64.00 32.00 32.00 32.00 0.00 32.00 64.00 32.00 33.00 32.00 64.00 -32.00 96.00 0.00 65.00 32.00 0.00 65.00 -32.00 0.00 -161.00 0.00 -32.00 0.00 -33.00 0.00 0.00 32.00 0.00 32.00 65.00 32.00 64.00 0.00 97.00 0.00 96.00 97.00 0.00 32.00 0.00 32.00 -129.00 97.00 33.00 32.00 64.00 0.00 64.00 -32.00 64.00 -33.00 33.00 0.00 32.00 33.00 0.00 160.00 64.00 97.00 64.00 0.00 0.00 -32.00 -32.00 -97.00 32.00 -32.00 0.00 -32.00 97.00 0.00 64.00 0.00 0.00 32.00 -64.00 161.00 32.00 32.00 64.00 -32.00 65.00 -32.00 96.00 96.00 32.00 0.00 32.00 0.00 0.00 -32.00 0.00 -32.00 -64.00 -65.00 0.00 -64.00 64.00 0.00 161.00 -32.00 0.00 32.00 64.00 32.00 65.00 65.00 32.00 0.00 32.00 -33.00 32.00 -96.00 32.00 -32.00 65.00 0.00 64.00 32.00 0.00 32.00 -32.00 64.00 32.00 65.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 -32.00 0.00 -97.00 64.00 0.00 32.00 0.00 0.00 32.00 32.00 0.00 -64.00 193.00 32.00 32.00 64.00 0.00 65.00 -96.00 64.00 0.00 32.00 0.00 0.00 32.00 0.00 32.00 -32.00 129.00 32.00 64.00 32.00 32.00 32.00 0.00 33.00 -64.00 0.00 -32.00 32.00 0.00 0.00 -32.00 64.00 32.00 129.00 -32.00 96.00 0.00 32.00 64.00 32.00 0.00 0.00 129.00 33.00 32.00 32.00 32.00 32.00 0.00 0.00 32.00 96.00 97.00 0.00 64.00 0.00 32.00 65.00 0.00 32.00 -64.00 32.00 -32.00 32.00 -33.00 64.00 -32.00 65.00 32.00 0.00 33.00 -32.00 128.00 64.00 32.00 64.00 65.00 97.00 -65.00 64.00 32.00 32.00 0.00 0.00 33.00 0.00 64.00 32.00 32.00 -32.00 32.00 0.00 64.00 97.00 33.00 64.00 -33.00 32.00 65.00 0.00 64.00 96.00 64.00 33.00 65.00 32.00 32.00 32.00 -32.00 32.00 -32.00 64.00 32.00 97.00 0.00 64.00 64.00 97.00 64.00 96.00 0.00 0.00 32.00 32.00 97.00 0.00 32.00 32.00 0.00 97.00 -32.00 32.00 0.00 64.00 32.00 32.00 32.00 -32.00 97.00 32.00 32.00 97.00 0.00 0.00 32.00 0.00 64.00 0.00 65.00 64.00 64.00 97.00 64.00 0.00 97.00 0.00 32.00 32.00 32.00 0.00 32.00 64.00 0.00 32.00 -96.00 32.00 -32.00 33.00 32.00 32.00 64.00 128.00 64.00 65.00 0.00 32.00 32.00 -32.00 65.00 64.00 64.00 -32.00 32.00 161.00 32.00 64.00 65.00 0.00 32.00 0.00 32.00 0.00 64.00 -32.00 65.00 -65.00 32.00 -32.00 32.00 97.00 32.00 32.00 32.00 32.00 64.00 -32.00 97.00 32.00 32.00 32.00 0.00 32.00 0.00 97.00 -96.00 32.00 0.00 64.00 96.00 0.00 32.00 129.00 -32.00 0.00 32.00 32.00 0.00 -32.00 65.00 32.00 96.00 -32.00 64.00 0.00 33.00 64.00 32.00 32.00 -65.00 33.00 33.00 0.00 32.00 32.00 32.00 0.00 96.00 0.00 97.00 32.00 0.00 161.00 96.00 64.00 0.00 32.00 0.00 0.00 97.00 64.00 32.00 32.00 32.00 65.00 96.00 -32.00 97.00 96.00 32.00 97.00 96.00 -33.00 65.00 33.00 64.00 64.00 0.00 64.00 -64.00 32.00 0.00 65.00 64.00 64.00 97.00 64.00 32.00 32.00 32.00 33.00 0.00 32.00 0.00 0.00 -97.00 32.00 0.00 32.00 0.00 96.00 33.00 129.00 0.00 64.00 0.00 65.00 64.00 32.00 32.00 64.00 0.00 129.00 0.00 32.00 64.00 32.00 0.00 32.00 0.00 32.00 -96.00 33.00 -32.00 32.00 0.00 32.00 32.00 0.00 128.00 0.00 65.00 32.00 -32.00 32.00 0.00 -32.00 -97.00 32.00 0.00 32.00 -32.00 65.00 0.00 64.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 64.00 33.00 97.00 -33.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 96.00 -64.00 0.00 32.00 64.00 129.00 33.00 32.00 32.00 -32.00 64.00 -65.00 32.00 0.00 32.00 32.00 33.00 0.00 32.00 0.00 64.00 97.00 0.00 96.00 32.00 33.00 97.00 -33.00 -33.00 -64.00 -64.00 -96.00 32.00 0.00 32.00 -65.00 65.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 64.00 32.00 0.00 32.00 -32.00 32.00 -32.00 65.00 0.00 32.00 64.00 0.00 64.00 64.00 65.00 -64.00 64.00 32.00 32.00 0.00 129.00 0.00 32.00 -32.00 32.00 -64.00 32.00 -33.00 65.00 33.00 64.00 -33.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 64.00 33.00 0.00 32.00 0.00 32.00 65.00 32.00 64.00 64.00 -32.00 -32.00 -32.00 -32.00 -32.00 32.00 -33.00 32.00 0.00 97.00 65.00 32.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -65.00 0.00 -32.00 64.00 32.00 33.00 -32.00 64.00 32.00 32.00 0.00 -32.00 0.00 -97.00 32.00 65.00 33.00 0.00 64.00 0.00 32.00 0.00 32.00 128.00 0.00 -32.00 32.00 32.00 33.00 65.00 -97.00 64.00 32.00 -32.00 -32.00 0.00 -64.00 32.00 0.00 32.00 96.00 32.00 0.00 32.00 32.00 33.00 33.00 32.00 -33.00 -32.00 -32.00 32.00 -64.00 -32.00 0.00 64.00 -32.00 0.00 -32.00 32.00 0.00 0.00 128.00 -32.00 32.00 32.00 33.00 96.00 -33.00 0.00 33.00 33.00 0.00 -33.00 32.00 65.00 64.00 -65.00 64.00 -32.00 65.00 32.00 0.00 65.00 32.00 32.00 96.00 32.00 32.00 32.00 -32.00 0.00 32.00 0.00 33.00 0.00 32.00 0.00 64.00 65.00 0.00 32.00 64.00 -32.00 32.00 -33.00 33.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 -64.00 0.00 -129.00 33.00 0.00 -65.00 -64.00 65.00 -32.00 0.00 -32.00 -33.00 0.00 -64.00 -33.00 32.00 -32.00 0.00 -32.00 65.00 -32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 0.00 -64.00 32.00 -32.00 33.00 -33.00 0.00 0.00 32.00 33.00 0.00 0.00 64.00 32.00 0.00 32.00 32.00 -64.00 0.00 -33.00 32.00 0.00 32.00 0.00 33.00 -32.00 0.00 0.00 -65.00 -96.00 0.00 32.00 0.00 -64.00 0.00 0.00 32.00 0.00 65.00 -33.00 64.00 33.00 32.00 -65.00 32.00 0.00 -32.00 -32.00 0.00 64.00 -96.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 -32.00 33.00 -65.00 0.00 -32.00 64.00 0.00 64.00 64.00 32.00 -32.00 0.00 0.00 33.00 -32.00 32.00 -64.00 -32.00 0.00 32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 32.00 0.00 0.00 65.00 -64.00 -32.00 0.00 96.00 0.00 32.00 32.00 0.00 -32.00 129.00 64.00 -32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -33.00 32.00 97.00 -32.00 0.00 64.00 32.00 -32.00 64.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 33.00 -32.00 0.00 0.00 32.00 0.00 32.00 -64.00 32.00 32.00 32.00 -65.00 32.00 33.00 32.00 96.00 0.00 -32.00 0.00 0.00 65.00 -32.00 0.00 0.00 96.00 64.00 32.00 32.00 33.00 64.00 32.00 -64.00 32.00 -32.00 -32.00 0.00 32.00 0.00 64.00 -32.00 -32.00 -32.00 32.00 0.00 65.00 -65.00 64.00 97.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 0.00 32.00 -225.00 97.00 96.00 0.00 0.00 32.00 0.00 -32.00 96.00 -32.00 33.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 0.00 32.00 -64.00 0.00 32.00 32.00 -32.00 0.00 -32.00 0.00 32.00 32.00 0.00 32.00 -65.00 0.00 0.00 64.00 33.00 0.00 -33.00 33.00 0.00 64.00 33.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 0.00 32.00 64.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -97.00 0.00 33.00 32.00 0.00 65.00 0.00 32.00 -65.00 0.00 0.00 32.00 -32.00 32.00 32.00 32.00 32.00 33.00 -64.00 0.00 -32.00 -33.00 -32.00 33.00 -32.00 0.00 -33.00 0.00 -32.00 32.00 0.00 -65.00 -64.00 65.00 0.00 -32.00 -32.00 -33.00 32.00 0.00 -64.00 0.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 0.00 -64.00 0.00 -65.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 33.00 0.00 0.00 64.00 32.00 0.00 -32.00 0.00 0.00 32.00 0.00 96.00 32.00 -32.00 -32.00 32.00 32.00 33.00 -65.00 32.00 33.00 -65.00 -97.00 65.00 0.00 -32.00 0.00 -33.00 32.00 0.00 32.00 -64.00 -96.00 0.00 0.00 -32.00 -64.00 0.00 32.00 -32.00 -64.00 0.00 0.00 -32.00 -65.00 64.00 65.00 0.00 32.00 32.00 0.00 32.00 -97.00 32.00 32.00 0.00 -32.00 33.00 32.00 0.00 33.00 32.00 -33.00 0.00 -96.00 64.00 32.00 0.00 32.00 0.00 0.00 32.00 65.00 0.00 -33.00 0.00 0.00 97.00 -32.00 32.00 32.00 0.00 0.00 32.00 33.00 32.00 0.00 32.00 32.00 0.00 0.00 -64.00 32.00 -32.00 0.00 32.00 32.00 0.00 0.00 32.00 64.00 32.00 -32.00 0.00 32.00 32.00 65.00 0.00 32.00 33.00 0.00 32.00 32.00 0.00 32.00 0.00 -32.00 32.00 96.00 0.00 0.00 32.00 -32.00 32.00 65.00 0.00 64.00 32.00 -129.00 -193.00 -64.00 0.00 -64.00 -64.00 -65.00 -64.00 -32.00 0.00 -32.00 -129.00 32.00 0.00 32.00 0.00 65.00 0.00 96.00 -32.00 32.00 0.00 0.00 -32.00 97.00 0.00 32.00 -32.00 129.00 -65.00 32.00 33.00 64.00 -33.00 64.00 -32.00 32.00 -64.00 33.00 -32.00 64.00 0.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 32.00 65.00 0.00 64.00 32.00 96.00 32.00 65.00 0.00 32.00 65.00 0.00 32.00 32.00 0.00 32.00 32.00 -32.00 0.00 0.00 32.00 64.00 32.00 -32.00 32.00 0.00 33.00 32.00 0.00 33.00 0.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 -32.00 0.00 32.00 64.00 0.00 32.00 0.00 97.00 64.00 32.00 0.00 64.00 -32.00 32.00 32.00 0.00 32.00 33.00 33.00 0.00 -33.00 0.00 33.00 32.00 0.00 -65.00 32.00 0.00 32.00 33.00 0.00 32.00 0.00 96.00 0.00 -96.00 96.00 0.00 65.00 -97.00 96.00 -257.00 289.00 -547.00 804.00 -64.00 97.00 -32.00 64.00 -64.00 64.00 -32.00 65.00 -129.00 257.00 -129.00 257.00 -128.00 225.00 -97.00 225.00 -64.00 97.00 -193.00 450.00 -129.00 289.00 -64.00 161.00 -64.00 161.00 -193.00 514.00 -64.00 161.00 -65.00 161.00 0.00 64.00 -64.00 97.00 -32.00 128.00 -129.00 386.00 -96.00 225.00 -129.00 225.00 -161.00 290.00 -353.00 450.00 -161.00 225.00 -418.00 611.00 -515.00 707.00 -32.00 64.00 -289.00 451.00 -129.00 192.00 -160.00 161.00 -226.00 257.00 -160.00 193.00 -225.00 193.00 -97.00 65.00 -418.00 353.00 -386.00 354.00 -257.00 193.00 -64.00 96.00 -161.00 193.00 -129.00 161.00 -353.00 257.00 -354.00 290.00 -321.00 225.00 -290.00 160.00 -450.00 258.00 -450.00 225.00 -450.00 257.00 -322.00 225.00 -193.00 161.00 -257.00 257.00 -450.00 482.00 -32.00 97.00 0.00 128.00 -97.00 -128.00 -96.00 32.00 -161.00 129.00 -161.00 96.00 -193.00 225.00 -160.00 193.00 -225.00 322.00 -161.00 289.00 -129.00 321.00 -225.00 579.00 -32.00 161.00 -97.00 450.00 -96.00 322.00 -225.00 514.00 -193.00 322.00 -225.00 482.00 -129.00 225.00 -160.00 225.00 -354.00 450.00 -290.00 257.00 -1157.00 933.00 -514.00 450.00 -451.00 354.00 -128.00 96.00 -483.00 322.00 -32.00 0.00 -64.00 32.00 -32.00 -32.00 -64.00 0.00 -33.00 0.00 -32.00 -32.00 0.00 -33.00 -32.00 -96.00 0.00 -64.00 -32.00 -32.00 -386.00 -33.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -65.00 32.00 -32.00 32.00 -64.00 -64.00 -64.00 32.00 -65.00 32.00 -32.00 0.00 -321.00 64.00 -354.00 33.00 -514.00 -97.00 -483.00 32.00 -482.00 322.00 -482.00 450.00 -258.00 225.00 33.00 289.00 -354.00 -289.00 -97.00 96.00 -96.00 33.00 64.00 -33.00 0.00 33.00 32.00 32.00 0.00 -65.00 -96.00 483.00 -225.00 128.00 -193.00 -32.00 -32.00 97.00 -97.00 289.00 -64.00 64.00 -161.00 -482.00 -418.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 -161.00 -32.00 -96.00 -64.00 -33.00 -129.00 -128.00 32.00 -32.00 65.00 -33.00 0.00 -32.00 -33.00 -32.00 -32.00 -96.00 -64.00 -65.00 -32.00 -64.00 32.00 -32.00 0.00 -64.00 -97.00 -33.00 0.00 -64.00 65.00 -96.00 -65.00 -32.00 -32.00 0.00 -32.00 -33.00 0.00 -32.00 32.00 -64.00 -128.00 -64.00 -97.00 0.00 -32.00 -33.00 -64.00 0.00 -32.00 0.00 -65.00 -32.00 0.00 -32.00 0.00 -128.00 0.00 -65.00 32.00 0.00 -32.00 -32.00 32.00 -96.00 -64.00 0.00 -32.00 -65.00 0.00 -32.00 -64.00 -96.00 -32.00 0.00 -65.00 -65.00 -32.00 -64.00 -64.00 0.00 -65.00 0.00 -32.00 -161.00 -64.00 32.00 -32.00 33.00 -129.00 -33.00 -64.00 0.00 -64.00 -64.00 -33.00 0.00 -32.00 32.00 0.00 32.00 -64.00 -64.00 -32.00 0.00 -64.00 -64.00 -33.00 -32.00 -64.00 0.00 -96.00 -65.00 -97.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -64.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 -96.00 -97.00 0.00 33.00 -33.00 0.00 -32.00 -65.00 -128.00 32.00 -32.00 -32.00 -33.00 65.00 33.00 32.00 -33.00 -97.00 -32.00 0.00 -64.00 -64.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -65.00 -32.00 -32.00 32.00 0.00 -32.00 -64.00 0.00 -65.00 -33.00 -32.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 -65.00 -32.00 -32.00 32.00 -96.00 -32.00 -32.00 -64.00 -65.00 -32.00 0.00 -33.00 -96.00 -32.00 -64.00 -32.00 -33.00 0.00 -32.00 0.00 -64.00 -64.00 0.00 -32.00 32.00 0.00 0.00 -33.00 32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -129.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 32.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -64.00 64.00 -32.00 -32.00 -65.00 97.00 0.00 -33.00 -64.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 -161.00 -64.00 0.00 -65.00 -64.00 -64.00 -1415.00 -1061.00 32.00 -64.00 -32.00 -32.00 -32.00 -33.00 -32.00 -64.00 64.00 -32.00 0.00 -32.00 0.00 32.00 0.00 -32.00 -32.00 -65.00 -32.00 33.00 -32.00 -97.00 -32.00 -32.00 -65.00 -32.00 32.00 -32.00 -128.00 -193.00 -32.00 -32.00 -33.00 -33.00 -96.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -97.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -33.00 -418.00 0.00 -64.00 -64.00 -32.00 0.00 -32.00 -32.00 -33.00 32.00 -64.00 0.00 -32.00 -64.00 -161.00 -32.00 -128.00 64.00 -65.00 -32.00 -32.00 32.00 -96.00 0.00 -32.00 32.00 -97.00 -128.00 -32.00 0.00 32.00 -33.00 -96.00 -64.00 -65.00 -64.00 32.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -96.00 -32.00 -33.00 32.00 -32.00 0.00 0.00 -65.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 -96.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 -32.00 -97.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -64.00 -32.00 32.00 -33.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 32.00 -65.00 -32.00 -64.00 32.00 -32.00 32.00 32.00 0.00 0.00 32.00 0.00 33.00 -64.00 96.00 -32.00 32.00 -33.00 0.00 0.00 32.00 0.00 32.00 -64.00 0.00 -32.00 -32.00 -96.00 -32.00 -33.00 -32.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -97.00 -64.00 0.00 -33.00 -32.00 0.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -64.00 0.00 0.00 -32.00 -258.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -161.00 -32.00 -32.00 32.00 -32.00 -64.00 -65.00 -97.00 0.00 0.00 -32.00 65.00 -32.00 -32.00 -32.00 -65.00 -32.00 0.00 -33.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 -64.00 32.00 0.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -64.00 -64.00 0.00 -64.00 -97.00 0.00 33.00 -32.00 -33.00 32.00 -32.00 0.00 -96.00 -32.00 0.00 -65.00 -32.00 0.00 -65.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 -64.00 0.00 -64.00 -32.00 32.00 -64.00 32.00 -33.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -64.00 -64.00 0.00 -33.00 -64.00 -96.00 32.00 -32.00 -32.00 0.00 -33.00 0.00 -64.00 -64.00 -32.00 -33.00 -32.00 0.00 -64.00 -96.00 -33.00 -32.00 33.00 0.00 -33.00 -65.00 -32.00 -32.00 -64.00 -32.00 -32.00 0.00 -65.00 -32.00 -64.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -33.00 32.00 -64.00 32.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 65.00 -32.00 -32.00 -32.00 64.00 64.00 32.00 -32.00 0.00 0.00 64.00 64.00 65.00 -32.00 64.00 -32.00 0.00 -32.00 64.00 32.00 32.00 -32.00 33.00 0.00 32.00 -64.00 0.00 -65.00 0.00 0.00 -32.00 -32.00 -33.00 -32.00 65.00 -32.00 0.00 -32.00 -65.00 -33.00 0.00 33.00 33.00 -33.00 0.00 0.00 96.00 -32.00 32.00 32.00 32.00 -96.00 0.00 0.00 32.00 -32.00 65.00 -97.00 -32.00 32.00 64.00 -64.00 32.00 -128.00 0.00 -33.00 0.00 0.00 32.00 -64.00 97.00 0.00 32.00 -96.00 -32.00 -32.00 32.00 -65.00 129.00 -64.00 0.00 0.00 32.00 -32.00 0.00 -65.00 -65.00 -32.00 33.00 -64.00 0.00 -32.00 32.00 -32.00 32.00 -97.00 -32.00 -96.00 -32.00 -65.00 32.00 0.00 32.00 -96.00 -32.00 0.00 -32.00 -32.00 -129.00 0.00 -225.00 32.00 -97.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 0.00 -32.00 -32.00 0.00 64.00 -129.00 -32.00 -32.00 0.00 -97.00 96.00 -128.00 0.00 -65.00 -32.00 -32.00 -32.00 -32.00 -32.00 -96.00 -32.00 -33.00 0.00 -32.00 32.00 0.00 -64.00 -32.00 0.00 -64.00 0.00 -32.00 -65.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 -33.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 -33.00 0.00 -64.00 64.00 -32.00 0.00 -32.00 -128.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 0.00 -32.00 32.00 -65.00 -32.00 0.00 -32.00 -32.00 -64.00 -32.00 0.00 -64.00 64.00 -33.00 0.00 -32.00 -64.00 0.00 -65.00 -64.00 -32.00 -64.00 32.00 -65.00 -64.00 -32.00 -32.00 -32.00 64.00 -64.00 -96.00 -32.00 -129.00 0.00 -32.00 -33.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -64.00 -32.00 -32.00 0.00 -32.00 64.00 -33.00 0.00 0.00 -64.00 33.00 -32.00 -33.00 -32.00 -32.00 -33.00 -32.00 33.00 -32.00 0.00 0.00 -33.00 -32.00 -64.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 32.00 -65.00 32.00 -96.00 -32.00 -32.00 0.00 0.00 -65.00 -65.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 -96.00 0.00 -33.00 -32.00 33.00 0.00 0.00 -32.00 -65.00 0.00 0.00 -64.00 -32.00 -33.00 0.00 -32.00 32.00 0.00 0.00 -64.00 -64.00 0.00 -32.00 -97.00 -32.00 33.00 -65.00 0.00 -64.00 -65.00 32.00 -32.00 -32.00 -32.00 -64.00 -129.00 -65.00 33.00 -32.00 64.00 -32.00 0.00 -32.00 -64.00 -32.00 -33.00 0.00 -64.00 -65.00 -32.00 -128.00 0.00 0.00 -32.00 -32.00 -65.00 64.00 -32.00 0.00 -96.00 -32.00 -32.00 -32.00 64.00 -97.00 -96.00 0.00 -65.00 -96.00 32.00 -32.00 0.00 -65.00 33.00 -32.00 -33.00 65.00 -64.00 -33.00 -96.00 -64.00 32.00 -64.00 -65.00 32.00 0.00 32.00 0.00 0.00 -32.00 -64.00 -64.00 -32.00 -64.00 -97.00 0.00 0.00 -32.00 97.00 -33.00 0.00 -32.00 -33.00 32.00 -32.00 -32.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 -65.00 32.00 -64.00 -64.00 0.00 -64.00 -32.00 0.00 -64.00 -33.00 -129.00 -32.00 -96.00 0.00 -32.00 -64.00 32.00 -96.00 0.00 -33.00 -97.00 -32.00 -32.00 -64.00 -64.00 0.00 -32.00 -32.00 -65.00 -32.00 -64.00 0.00 -96.00 0.00 0.00 -32.00 -65.00 0.00 -96.00 128.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -33.00 -32.00 -64.00 -32.00 -96.00 32.00 -97.00 0.00 -32.00 -64.00 -64.00 0.00 -129.00 0.00 -32.00 32.00 0.00 64.00 -64.00 0.00 -65.00 -32.00 -64.00 0.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 0.00 -64.00 64.00 -32.00 64.00 32.00 0.00 -32.00 32.00 -33.00 0.00 -96.00 -32.00 0.00 64.00 64.00 0.00 0.00 65.00 -64.00 32.00 -64.00 0.00 -65.00 128.00 -64.00 65.00 0.00 64.00 -64.00 0.00 0.00 64.00 32.00 33.00 -32.00 0.00 32.00 0.00 0.00 32.00 32.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -97.00 65.00 -32.00 96.00 -64.00 32.00 -129.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 -65.00 64.00 -32.00 0.00 -32.00 -64.00 -64.00 -96.00 -32.00 -33.00 -33.00 65.00 -160.00 64.00 -33.00 -64.00 -32.00 32.00 -96.00 64.00 0.00 65.00 -32.00 0.00 -65.00 0.00 -64.00 0.00 0.00 -65.00 32.00 -32.00 -64.00 -32.00 -96.00 0.00 -65.00 -32.00 -96.00 0.00 -32.00 0.00 -33.00 96.00 -128.00 -32.00 -129.00 -32.00 -32.00 -64.00 -32.00 -33.00 32.00 -192.00 -32.00 -33.00 -225.00 -96.00 -97.00 -32.00 -64.00 32.00 64.00 -64.00 225.00 0.00 161.00 -65.00 322.00 -193.00 96.00 -96.00 65.00 -161.00 96.00 -96.00 96.00 -97.00 290.00 -161.00 96.00 -128.00z\"\n          },\n          ba: {\n            name: \"BA\",\n            path: \"M135416.00 82601.00l-32.00 -32.00 0.00 -64.00 32.00 0.00 32.00 -97.00 -32.00 -64.00 129.00 -32.00 386.00 -193.00 64.00 0.00 64.00 -96.00 97.00 -161.00 32.00 -322.00 96.00 -257.00 97.00 -96.00 0.00 -97.00 32.00 0.00 96.00 -64.00 33.00 -64.00 32.00 -33.00 161.00 -96.00 64.00 -97.00 161.00 -96.00 0.00 -32.00 -65.00 -129.00 0.00 -32.00 33.00 -96.00 32.00 -65.00 32.00 -32.00 128.00 -64.00 65.00 -32.00 32.00 -65.00 0.00 -128.00 -97.00 -32.00 -32.00 0.00 193.00 -129.00 97.00 -64.00 32.00 -129.00 0.00 -32.00 -32.00 -32.00 -65.00 -97.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 65.00 -32.00 0.00 -32.00 96.00 -33.00 32.00 33.00 97.00 -33.00 96.00 0.00 97.00 -96.00 96.00 32.00 65.00 -32.00 32.00 -32.00 0.00 -97.00 128.00 -32.00 32.00 -129.00 33.00 -32.00 96.00 0.00 64.00 -32.00 65.00 0.00 32.00 -96.00 64.00 -32.00 193.00 -129.00 32.00 -64.00 65.00 -65.00 96.00 -64.00 161.00 0.00 32.00 0.00 32.00 -129.00 -64.00 -96.00 32.00 -64.00 0.00 -32.00 0.00 -33.00 32.00 0.00 64.00 -32.00 65.00 -32.00 193.00 0.00 64.00 -32.00 64.00 -129.00 65.00 -160.00 32.00 -65.00 32.00 -32.00 0.00 -32.00 0.00 -97.00 0.00 -128.00 -32.00 -129.00 32.00 -32.00 0.00 -64.00 -97.00 0.00 -32.00 -65.00 32.00 0.00 65.00 0.00 96.00 0.00 64.00 -32.00 97.00 -96.00 64.00 0.00 161.00 -97.00 32.00 0.00 64.00 65.00 65.00 96.00 0.00 97.00 0.00 128.00 0.00 65.00 64.00 96.00 129.00 96.00 32.00 33.00 0.00 160.00 32.00 33.00 96.00 64.00 33.00 32.00 64.00 32.00 64.00 129.00 129.00 96.00 32.00 65.00 -32.00 160.00 32.00 97.00 129.00 96.00 0.00 65.00 -33.00 32.00 -128.00 128.00 -64.00 97.00 32.00 64.00 0.00 96.00 -32.00 65.00 32.00 96.00 32.00 225.00 0.00 33.00 32.00 32.00 32.00 32.00 32.00 0.00 65.00 32.00 64.00 0.00 32.00 64.00 32.00 32.00 0.00 33.00 64.00 289.00 161.00 129.00 161.00 32.00 97.00 32.00 0.00 32.00 64.00 161.00 32.00 32.00 129.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 257.00 32.00 97.00 0.00 96.00 0.00 32.00 33.00 97.00 -33.00 64.00 0.00 32.00 33.00 64.00 32.00 33.00 32.00 64.00 32.00 64.00 96.00 64.00 0.00 33.00 0.00 96.00 33.00 32.00 0.00 0.00 32.00 193.00 161.00 97.00 -97.00 32.00 0.00 32.00 -32.00 64.00 0.00 97.00 -97.00 32.00 0.00 32.00 65.00 129.00 -97.00 32.00 -32.00 32.00 -32.00 0.00 -96.00 96.00 -193.00 32.00 0.00 97.00 0.00 0.00 -97.00 32.00 -32.00 97.00 -32.00 32.00 -32.00 64.00 -32.00 129.00 32.00 96.00 -32.00 0.00 -33.00 32.00 -96.00 -64.00 -193.00 32.00 0.00 0.00 -32.00 32.00 -32.00 65.00 -32.00 32.00 0.00 64.00 0.00 64.00 -33.00 32.00 -32.00 65.00 -128.00 64.00 -32.00 129.00 0.00 128.00 96.00 33.00 0.00 32.00 0.00 32.00 0.00 96.00 -32.00 65.00 -64.00 32.00 -65.00 32.00 -32.00 32.00 0.00 129.00 32.00 96.00 -32.00 32.00 -32.00 193.00 -225.00 32.00 -32.00 65.00 0.00 64.00 32.00 32.00 32.00 32.00 32.00 97.00 193.00 96.00 64.00 97.00 33.00 32.00 0.00 96.00 -65.00 32.00 0.00 97.00 65.00 64.00 32.00 65.00 32.00 32.00 0.00 32.00 0.00 64.00 -32.00 32.00 0.00 32.00 -65.00 65.00 -128.00 32.00 -32.00 96.00 0.00 32.00 -33.00 33.00 -64.00 96.00 -321.00 32.00 -33.00 65.00 -64.00 0.00 -32.00 -33.00 -161.00 33.00 -128.00 32.00 -65.00 64.00 0.00 64.00 32.00 129.00 65.00 129.00 0.00 96.00 0.00 0.00 -32.00 32.00 -161.00 64.00 -64.00 33.00 -97.00 32.00 -32.00 64.00 -64.00 97.00 -65.00 64.00 -64.00 0.00 -129.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 193.00 -193.00 96.00 -129.00 32.00 -225.00 0.00 -96.00 -32.00 -65.00 65.00 -96.00 32.00 -32.00 128.00 0.00 161.00 0.00 0.00 -65.00 32.00 -96.00 97.00 -64.00 32.00 -129.00 -32.00 -64.00 -65.00 -33.00 -96.00 -96.00 64.00 -129.00 0.00 -32.00 -32.00 -32.00 -64.00 0.00 0.00 -64.00 0.00 -32.00 64.00 0.00 0.00 -65.00 97.00 -32.00 32.00 -64.00 0.00 -64.00 64.00 -65.00 0.00 -32.00 -64.00 -64.00 -65.00 -32.00 -64.00 -65.00 -64.00 0.00 -32.00 0.00 -33.00 -64.00 -192.00 -64.00 -33.00 -32.00 -64.00 -33.00 -64.00 -192.00 0.00 -65.00 0.00 -32.00 0.00 -64.00 -129.00 -225.00 -96.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 0.00 -64.00 -32.00 0.00 -129.00 -32.00 -128.00 0.00 -65.00 160.00 -257.00 97.00 -64.00 64.00 -129.00 64.00 -64.00 97.00 -32.00 289.00 -97.00 97.00 -64.00 193.00 -161.00 64.00 -32.00 96.00 -129.00 97.00 -96.00 32.00 0.00 96.00 -32.00 33.00 0.00 64.00 -64.00 129.00 -129.00 64.00 -32.00 96.00 -32.00 65.00 32.00 32.00 0.00 64.00 32.00 129.00 161.00 32.00 64.00 96.00 161.00 97.00 96.00 96.00 0.00 32.00 0.00 65.00 97.00 64.00 32.00 32.00 0.00 32.00 128.00 32.00 0.00 33.00 0.00 32.00 -64.00 128.00 0.00 65.00 -32.00 32.00 0.00 64.00 0.00 32.00 64.00 32.00 32.00 97.00 -64.00 64.00 -161.00 64.00 0.00 65.00 65.00 0.00 -65.00 32.00 0.00 32.00 -32.00 32.00 32.00 32.00 0.00 0.00 33.00 33.00 0.00 64.00 32.00 0.00 32.00 32.00 0.00 64.00 0.00 32.00 0.00 0.00 96.00 193.00 -32.00 33.00 0.00 96.00 -32.00 64.00 32.00 65.00 64.00 0.00 33.00 32.00 32.00 -32.00 96.00 0.00 65.00 32.00 128.00 32.00 64.00 0.00 33.00 96.00 64.00 97.00 0.00 64.00 32.00 97.00 129.00 32.00 0.00 32.00 0.00 64.00 -65.00 32.00 0.00 32.00 65.00 0.00 96.00 65.00 97.00 0.00 96.00 64.00 0.00 193.00 -32.00 32.00 -32.00 0.00 -97.00 65.00 -32.00 64.00 -64.00 64.00 -64.00 0.00 -97.00 0.00 -32.00 32.00 32.00 97.00 32.00 0.00 32.00 64.00 0.00 96.00 -32.00 65.00 0.00 64.00 -32.00 32.00 32.00 97.00 -128.00 32.00 -65.00 32.00 -32.00 97.00 32.00 96.00 -32.00 129.00 32.00 128.00 -32.00 32.00 -64.00 -32.00 -64.00 32.00 -33.00 65.00 -32.00 96.00 32.00 32.00 -32.00 65.00 -32.00 32.00 -32.00 0.00 -129.00 32.00 -32.00 96.00 -64.00 129.00 -64.00 32.00 -33.00 32.00 0.00 0.00 -128.00 161.00 -97.00 32.00 -64.00 32.00 0.00 97.00 -32.00 96.00 0.00 32.00 -32.00 97.00 -65.00 64.00 -32.00 32.00 0.00 65.00 32.00 64.00 0.00 64.00 -32.00 193.00 0.00 97.00 0.00 96.00 -32.00 161.00 -96.00 64.00 0.00 64.00 0.00 65.00 -32.00 128.00 64.00 129.00 -97.00 64.00 97.00 32.00 0.00 65.00 0.00 64.00 64.00 32.00 0.00 32.00 -32.00 33.00 -64.00 96.00 -32.00 64.00 -65.00 32.00 0.00 65.00 32.00 64.00 0.00 64.00 -289.00 97.00 -97.00 0.00 -96.00 96.00 -96.00 32.00 0.00 65.00 -65.00 128.00 -96.00 0.00 -129.00 0.00 -96.00 33.00 -129.00 0.00 -32.00 225.00 0.00 32.00 -64.00 0.00 -65.00 193.00 -32.00 32.00 0.00 0.00 -64.00 64.00 0.00 32.00 -64.00 32.00 0.00 33.00 0.00 32.00 0.00 64.00 0.00 32.00 64.00 97.00 -32.00 0.00 -129.00 64.00 -32.00 32.00 -129.00 32.00 0.00 32.00 -64.00 0.00 -64.00 33.00 -32.00 0.00 -33.00 32.00 0.00 32.00 -96.00 64.00 0.00 64.00 -64.00 129.00 -161.00 32.00 32.00 65.00 -161.00 64.00 -128.00 32.00 -97.00 64.00 -64.00 0.00 -32.00 65.00 0.00 32.00 0.00 128.00 96.00 97.00 0.00 96.00 65.00 32.00 0.00 65.00 -33.00 64.00 -64.00 97.00 0.00 0.00 -32.00 32.00 -32.00 32.00 0.00 96.00 32.00 32.00 -32.00 33.00 32.00 32.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 225.00 -32.00 -32.00 64.00 0.00 32.00 -32.00 32.00 0.00 33.00 32.00 64.00 32.00 32.00 0.00 32.00 32.00 32.00 33.00 65.00 96.00 0.00 0.00 32.00 32.00 -32.00 32.00 0.00 65.00 0.00 64.00 0.00 32.00 0.00 32.00 128.00 -32.00 129.00 64.00 32.00 97.00 -64.00 32.00 0.00 64.00 -33.00 97.00 33.00 0.00 64.00 64.00 0.00 129.00 -32.00 0.00 64.00 64.00 64.00 32.00 0.00 0.00 33.00 0.00 96.00 64.00 64.00 0.00 65.00 97.00 32.00 0.00 128.00 64.00 0.00 0.00 161.00 32.00 64.00 33.00 65.00 32.00 64.00 0.00 32.00 0.00 32.00 32.00 33.00 0.00 96.00 32.00 32.00 -32.00 65.00 64.00 32.00 32.00 64.00 65.00 0.00 0.00 32.00 64.00 -32.00 64.00 32.00 32.00 0.00 0.00 64.00 33.00 0.00 64.00 33.00 96.00 64.00 32.00 0.00 97.00 0.00 32.00 64.00 64.00 32.00 -32.00 65.00 0.00 64.00 0.00 32.00 -32.00 64.00 0.00 33.00 -64.00 96.00 32.00 64.00 0.00 65.00 32.00 0.00 0.00 64.00 -32.00 32.00 -97.00 32.00 0.00 32.00 0.00 33.00 -64.00 32.00 -96.00 -32.00 0.00 32.00 -32.00 0.00 -33.00 32.00 97.00 128.00 -32.00 33.00 32.00 64.00 -64.00 64.00 32.00 65.00 0.00 64.00 0.00 32.00 -32.00 0.00 -65.00 32.00 0.00 97.00 -32.00 64.00 -32.00 64.00 129.00 -64.00 128.00 0.00 32.00 32.00 161.00 97.00 129.00 32.00 128.00 32.00 161.00 -64.00 64.00 0.00 33.00 0.00 32.00 -33.00 64.00 -64.00 32.00 0.00 32.00 -129.00 32.00 -32.00 97.00 -32.00 32.00 0.00 32.00 0.00 97.00 32.00 32.00 32.00 64.00 -96.00 97.00 -193.00 64.00 -64.00 64.00 0.00 97.00 96.00 96.00 32.00 32.00 0.00 129.00 -128.00 0.00 -97.00 0.00 -32.00 64.00 -193.00 65.00 -64.00 64.00 -354.00 32.00 -96.00 -32.00 -129.00 32.00 -161.00 64.00 -192.00 97.00 -97.00 32.00 -32.00 64.00 0.00 32.00 0.00 33.00 32.00 32.00 0.00 96.00 97.00 97.00 64.00 32.00 64.00 64.00 0.00 97.00 0.00 192.00 -96.00 65.00 -65.00 64.00 -64.00 129.00 0.00 160.00 0.00 33.00 0.00 64.00 -32.00 96.00 -32.00 193.00 -225.00 32.00 -33.00 33.00 -96.00 64.00 -32.00 96.00 -193.00 -32.00 -129.00 -96.00 -193.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 96.00 -33.00 258.00 -64.00 64.00 32.00 64.00 0.00 193.00 -128.00 225.00 32.00 65.00 0.00 32.00 -32.00 32.00 -32.00 32.00 -33.00 -32.00 -96.00 0.00 -64.00 0.00 -32.00 -32.00 -161.00 -65.00 -129.00 33.00 -96.00 128.00 0.00 64.00 0.00 97.00 -33.00 96.00 0.00 193.00 -64.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 128.00 -32.00 32.00 -33.00 193.00 -64.00 97.00 -64.00 0.00 -64.00 32.00 -33.00 64.00 0.00 64.00 0.00 33.00 -96.00 32.00 0.00 128.00 -32.00 33.00 0.00 32.00 0.00 32.00 32.00 32.00 32.00 64.00 64.00 65.00 0.00 128.00 0.00 65.00 0.00 32.00 33.00 32.00 64.00 0.00 32.00 0.00 32.00 32.00 97.00 64.00 32.00 32.00 32.00 33.00 64.00 -33.00 32.00 0.00 161.00 0.00 32.00 33.00 65.00 32.00 32.00 32.00 32.00 32.00 0.00 0.00 -32.00 97.00 32.00 96.00 -32.00 32.00 -32.00 32.00 -33.00 65.00 65.00 0.00 32.00 128.00 32.00 161.00 32.00 129.00 32.00 128.00 33.00 32.00 0.00 65.00 64.00 128.00 64.00 65.00 129.00 64.00 32.00 32.00 32.00 32.00 0.00 32.00 0.00 97.00 -32.00 193.00 -32.00 64.00 -32.00 64.00 0.00 225.00 32.00 33.00 0.00 32.00 32.00 128.00 96.00 129.00 129.00 96.00 32.00 65.00 64.00 32.00 97.00 32.00 161.00 0.00 96.00 32.00 64.00 65.00 129.00 128.00 64.00 64.00 -32.00 33.00 0.00 64.00 -128.00 0.00 -290.00 32.00 -64.00 161.00 -257.00 96.00 -33.00 193.00 33.00 129.00 96.00 64.00 64.00 -32.00 129.00 -32.00 64.00 -129.00 97.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 32.00 65.00 64.00 96.00 97.00 97.00 128.00 96.00 65.00 32.00 64.00 32.00 96.00 33.00 97.00 -97.00 129.00 -129.00 32.00 0.00 64.00 -32.00 97.00 0.00 0.00 65.00 96.00 96.00 32.00 97.00 0.00 32.00 -32.00 32.00 -96.00 64.00 -33.00 65.00 33.00 64.00 64.00 0.00 -97.00 96.00 33.00 129.00 32.00 32.00 32.00 32.00 64.00 97.00 64.00 160.00 -32.00 65.00 161.00 353.00 64.00 193.00 129.00 129.00 32.00 96.00 32.00 33.00 0.00 64.00 -32.00 32.00 0.00 64.00 32.00 32.00 97.00 0.00 96.00 97.00 64.00 -32.00 97.00 32.00 32.00 -32.00 32.00 0.00 129.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 32.00 0.00 65.00 65.00 64.00 0.00 32.00 0.00 64.00 64.00 65.00 64.00 -32.00 97.00 -33.00 64.00 0.00 32.00 -32.00 32.00 -32.00 32.00 32.00 33.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 0.00 97.00 32.00 64.00 64.00 32.00 32.00 32.00 33.00 32.00 64.00 33.00 32.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 64.00 -32.00 64.00 -64.00 33.00 0.00 32.00 0.00 32.00 0.00 64.00 0.00 97.00 0.00 96.00 64.00 129.00 32.00 0.00 0.00 32.00 97.00 96.00 96.00 33.00 32.00 0.00 32.00 32.00 -32.00 64.00 -32.00 64.00 32.00 32.00 0.00 33.00 -64.00 64.00 0.00 96.00 -64.00 97.00 0.00 32.00 64.00 32.00 96.00 193.00 33.00 32.00 32.00 0.00 64.00 -32.00 64.00 0.00 0.00 64.00 33.00 0.00 64.00 0.00 96.00 32.00 32.00 -32.00 226.00 129.00 32.00 64.00 0.00 65.00 0.00 32.00 0.00 96.00 128.00 257.00 97.00 129.00 0.00 64.00 -32.00 161.00 0.00 32.00 64.00 32.00 128.00 611.00 0.00 32.00 33.00 33.00 -129.00 64.00 -96.00 0.00 -33.00 32.00 -96.00 64.00 -32.00 0.00 -32.00 33.00 0.00 32.00 -32.00 0.00 -33.00 0.00 0.00 32.00 -32.00 32.00 0.00 32.00 32.00 0.00 -96.00 32.00 32.00 65.00 -32.00 32.00 161.00 289.00 32.00 97.00 0.00 32.00 0.00 32.00 -32.00 64.00 0.00 64.00 0.00 -32.00 -32.00 32.00 0.00 33.00 -65.00 0.00 0.00 32.00 32.00 32.00 0.00 32.00 33.00 32.00 0.00 32.00 64.00 547.00 -579.00 225.00 -161.00 64.00 -128.00 65.00 -129.00 0.00 0.00 -129.00 0.00 -32.00 -64.00 -64.00 -32.00 0.00 -33.00 -65.00 -32.00 0.00 -96.00 32.00 -32.00 -32.00 -32.00 -32.00 -65.00 64.00 -64.00 -32.00 -32.00 65.00 -65.00 0.00 -64.00 -33.00 -32.00 0.00 -64.00 0.00 -32.00 -64.00 -97.00 32.00 -32.00 0.00 -32.00 65.00 0.00 64.00 0.00 64.00 0.00 65.00 -32.00 96.00 -33.00 64.00 -32.00 0.00 -32.00 33.00 32.00 64.00 -32.00 64.00 32.00 0.00 32.00 97.00 -32.00 32.00 -32.00 64.00 0.00 64.00 64.00 97.00 0.00 96.00 65.00 32.00 0.00 33.00 32.00 -33.00 32.00 0.00 0.00 65.00 97.00 32.00 0.00 32.00 -33.00 64.00 33.00 33.00 32.00 64.00 128.00 64.00 32.00 64.00 33.00 33.00 32.00 0.00 0.00 -65.00 64.00 32.00 32.00 33.00 0.00 32.00 32.00 64.00 -32.00 0.00 0.00 32.00 32.00 32.00 33.00 0.00 0.00 32.00 32.00 0.00 0.00 33.00 32.00 0.00 0.00 64.00 -32.00 96.00 -32.00 0.00 0.00 33.00 32.00 64.00 64.00 32.00 32.00 0.00 0.00 32.00 -32.00 65.00 32.00 32.00 -32.00 32.00 64.00 32.00 65.00 64.00 64.00 32.00 32.00 -32.00 97.00 97.00 32.00 -32.00 64.00 32.00 32.00 0.00 32.00 0.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 -32.00 0.00 32.00 65.00 -32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 -32.00 32.00 32.00 32.00 -32.00 33.00 0.00 32.00 -64.00 32.00 0.00 64.00 64.00 97.00 -32.00 0.00 0.00 32.00 64.00 32.00 -64.00 0.00 0.00 32.00 32.00 32.00 32.00 -32.00 0.00 32.00 32.00 97.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 64.00 0.00 0.00 65.00 33.00 -33.00 32.00 0.00 0.00 33.00 -32.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 0.00 -64.00 32.00 0.00 0.00 -32.00 65.00 0.00 32.00 32.00 32.00 0.00 0.00 64.00 0.00 32.00 32.00 32.00 32.00 -32.00 0.00 32.00 32.00 -64.00 32.00 0.00 65.00 32.00 -65.00 0.00 -32.00 0.00 65.00 32.00 0.00 33.00 96.00 -33.00 0.00 33.00 0.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 64.00 32.00 0.00 65.00 33.00 32.00 0.00 32.00 32.00 -32.00 32.00 0.00 64.00 64.00 32.00 32.00 -32.00 32.00 32.00 65.00 0.00 32.00 33.00 32.00 -33.00 64.00 65.00 97.00 0.00 0.00 64.00 32.00 0.00 32.00 0.00 64.00 -32.00 33.00 0.00 -33.00 96.00 65.00 0.00 64.00 32.00 0.00 -32.00 0.00 -32.00 64.00 -64.00 -32.00 -64.00 32.00 0.00 32.00 0.00 0.00 -65.00 33.00 32.00 32.00 -32.00 32.00 0.00 32.00 65.00 32.00 32.00 32.00 0.00 33.00 0.00 64.00 -32.00 32.00 0.00 32.00 0.00 -32.00 64.00 32.00 32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 0.00 33.00 32.00 32.00 0.00 161.00 0.00 0.00 -64.00 64.00 -65.00 64.00 0.00 129.00 0.00 32.00 0.00 64.00 -32.00 129.00 -96.00 96.00 -97.00 97.00 -96.00 32.00 0.00 32.00 -64.00 64.00 0.00 33.00 0.00 -33.00 0.00 33.00 32.00 -33.00 64.00 -193.00 193.00 -128.00 193.00 -354.00 739.00 -128.00 225.00 -226.00 547.00 -257.00 547.00 -32.00 160.00 -129.00 193.00 -96.00 161.00 -64.00 97.00 -32.00 96.00 -33.00 64.00 -289.00 483.00 -96.00 128.00 -258.00 354.00 -193.00 289.00 -32.00 32.00 0.00 33.00 -32.00 64.00 -32.00 0.00 -96.00 161.00 -129.00 160.00 -64.00 97.00 -65.00 129.00 -64.00 128.00 -96.00 161.00 -65.00 32.00 -64.00 64.00 -64.00 65.00 0.00 96.00 0.00 32.00 -65.00 0.00 -32.00 65.00 -64.00 32.00 -64.00 96.00 -161.00 161.00 -225.00 321.00 -97.00 65.00 -96.00 128.00 -97.00 97.00 -64.00 96.00 -64.00 97.00 -65.00 0.00 -96.00 96.00 -96.00 161.00 -129.00 129.00 -64.00 0.00 -33.00 0.00 -64.00 0.00 -64.00 32.00 -161.00 96.00 -129.00 129.00 -96.00 32.00 -64.00 0.00 -65.00 -32.00 0.00 32.00 -160.00 -32.00 -226.00 -32.00 97.00 -225.00 32.00 -97.00 -32.00 -64.00 -257.00 64.00 64.00 129.00 -64.00 96.00 0.00 32.00 -32.00 0.00 -65.00 97.00 -32.00 32.00 -64.00 96.00 -32.00 33.00 -32.00 0.00 -129.00 96.00 -64.00 0.00 -65.00 64.00 -32.00 65.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 96.00 0.00 33.00 -96.00 32.00 -64.00 32.00 32.00 0.00 -65.00 32.00 -64.00 32.00 -128.00 65.00 -65.00 32.00 -32.00 64.00 -96.00 32.00 -97.00 64.00 0.00 33.00 -64.00 0.00 -65.00 32.00 -64.00 96.00 -64.00 225.00 0.00 32.00 -32.00 258.00 32.00 128.00 64.00 97.00 32.00 32.00 129.00 -97.00 32.00 33.00 32.00 64.00 -32.00 32.00 32.00 0.00 0.00 64.00 0.00 65.00 32.00 32.00 33.00 64.00 -33.00 32.00 33.00 32.00 -65.00 97.00 -64.00 -32.00 0.00 64.00 32.00 0.00 32.00 0.00 -32.00 32.00 0.00 32.00 -96.00 65.00 0.00 64.00 -33.00 161.00 0.00 64.00 33.00 32.00 64.00 0.00 0.00 32.00 0.00 32.00 64.00 33.00 -32.00 32.00 0.00 96.00 64.00 0.00 33.00 -32.00 0.00 32.00 0.00 97.00 -33.00 64.00 -96.00 97.00 0.00 -33.00 -32.00 -64.00 -65.00 0.00 -64.00 64.00 -96.00 0.00 32.00 33.00 0.00 64.00 -32.00 32.00 -97.00 96.00 -32.00 129.00 0.00 193.00 64.00 193.00 65.00 96.00 96.00 161.00 0.00 32.00 64.00 32.00 33.00 97.00 0.00 128.00 0.00 33.00 -65.00 289.00 0.00 64.00 -32.00 161.00 -32.00 97.00 0.00 64.00 -96.00 289.00 -33.00 161.00 -32.00 96.00 0.00 97.00 0.00 32.00 -32.00 193.00 32.00 96.00 0.00 -32.00 32.00 32.00 0.00 65.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -64.00 129.00 0.00 129.00 -64.00 257.00 -32.00 257.00 -65.00 129.00 0.00 160.00 -32.00 129.00 -32.00 64.00 -64.00 322.00 0.00 193.00 0.00 128.00 0.00 226.00 64.00 128.00 64.00 32.00 32.00 0.00 33.00 -64.00 0.00 64.00 -33.00 0.00 0.00 97.00 -32.00 32.00 32.00 0.00 0.00 -32.00 33.00 0.00 0.00 193.00 0.00 193.00 32.00 192.00 32.00 97.00 0.00 64.00 64.00 193.00 0.00 482.00 0.00 547.00 0.00 129.00 0.00 96.00 32.00 193.00 -32.00 32.00 32.00 32.00 65.00 418.00 96.00 354.00 0.00 32.00 32.00 32.00 32.00 258.00 0.00 321.00 32.00 322.00 65.00 257.00 32.00 0.00 64.00 225.00 0.00 32.00 32.00 32.00 129.00 257.00 32.00 33.00 0.00 32.00 -32.00 32.00 0.00 32.00 64.00 32.00 0.00 32.00 -32.00 33.00 -32.00 64.00 -96.00 161.00 -129.00 450.00 -97.00 225.00 -64.00 193.00 -32.00 32.00 0.00 129.00 0.00 64.00 32.00 96.00 -32.00 32.00 -32.00 97.00 -32.00 32.00 -32.00 96.00 -65.00 33.00 -96.00 128.00 0.00 32.00 -32.00 0.00 -32.00 129.00 0.00 32.00 64.00 -96.00 -64.00 161.00 32.00 128.00 32.00 32.00 32.00 0.00 0.00 32.00 -32.00 65.00 0.00 128.00 -64.00 32.00 -65.00 65.00 -96.00 161.00 0.00 96.00 -32.00 32.00 0.00 32.00 32.00 -32.00 0.00 32.00 0.00 65.00 -32.00 32.00 0.00 64.00 -97.00 193.00 0.00 129.00 -32.00 160.00 0.00 65.00 0.00 96.00 -32.00 97.00 32.00 32.00 -64.00 64.00 0.00 129.00 0.00 96.00 -32.00 0.00 -33.00 32.00 -32.00 65.00 0.00 64.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 193.00 32.00 322.00 64.00 96.00 65.00 64.00 -65.00 33.00 -128.00 193.00 0.00 192.00 -97.00 161.00 0.00 193.00 32.00 32.00 -32.00 32.00 -32.00 65.00 0.00 128.00 -32.00 65.00 -64.00 32.00 -33.00 64.00 -32.00 129.00 0.00 353.00 0.00 65.00 -32.00 161.00 32.00 257.00 0.00 96.00 32.00 225.00 65.00 225.00 0.00 322.00 32.00 225.00 -32.00 32.00 0.00 64.00 32.00 193.00 225.00 322.00 32.00 0.00 -32.00 32.00 -225.00 193.00 32.00 96.00 -96.00 65.00 -33.00 64.00 -257.00 257.00 -32.00 65.00 0.00 64.00 32.00 32.00 -32.00 32.00 -257.00 129.00 -65.00 0.00 -32.00 -32.00 -64.00 32.00 -64.00 64.00 -32.00 0.00 -97.00 32.00 -225.00 129.00 -129.00 128.00 -96.00 129.00 -129.00 225.00 -128.00 257.00 -32.00 -32.00 -33.00 0.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 32.00 64.00 64.00 -32.00 -32.00 32.00 32.00 65.00 33.00 -33.00 -161.00 226.00 -225.00 418.00 0.00 64.00 -97.00 193.00 0.00 32.00 -32.00 129.00 32.00 32.00 -64.00 128.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 -64.00 -32.00 -1062.00 -676.00 -32.00 -32.00 -128.00 -96.00 -547.00 -354.00 -772.00 -482.00 0.00 -129.00 -64.00 -32.00 -96.00 -64.00 -32.00 -33.00 0.00 -32.00 257.00 -128.00 160.00 -225.00 0.00 -32.00 -32.00 -65.00 -64.00 -32.00 -32.00 32.00 32.00 -64.00 -32.00 -64.00 -64.00 -65.00 32.00 -64.00 -32.00 -64.00 32.00 -65.00 -65.00 -96.00 -64.00 0.00 -32.00 0.00 -32.00 -64.00 -97.00 32.00 -32.00 -32.00 -32.00 -97.00 -32.00 0.00 -32.00 -32.00 0.00 -96.00 -32.00 -33.00 -65.00 -32.00 -32.00 -32.00 32.00 -64.00 -64.00 -32.00 -32.00 -65.00 -32.00 -32.00 0.00 64.00 -33.00 97.00 -32.00 -64.00 -64.00 -97.00 -32.00 0.00 -64.00 64.00 -33.00 -64.00 -64.00 -32.00 0.00 -64.00 0.00 -32.00 32.00 0.00 -32.00 -65.00 32.00 -32.00 -96.00 0.00 -64.00 64.00 -97.00 -64.00 -64.00 -161.00 -32.00 -32.00 -33.00 -32.00 33.00 -64.00 0.00 -97.00 -65.00 0.00 0.00 -64.00 -32.00 0.00 -64.00 -97.00 0.00 -32.00 0.00 -32.00 -161.00 -32.00 -64.00 -64.00 -65.00 -32.00 -96.00 32.00 -32.00 -32.00 -97.00 -65.00 129.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 64.00 -64.00 -64.00 -32.00 0.00 -65.00 64.00 0.00 0.00 -64.00 32.00 0.00 65.00 -96.00 128.00 -32.00 -96.00 -65.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 32.00 0.00 32.00 -32.00 -32.00 -96.00 64.00 -64.00 0.00 -65.00 -96.00 -32.00 -33.00 -161.00 65.00 -96.00 32.00 -193.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 0.00 -65.00 96.00 -193.00 0.00 -32.00 0.00 -32.00 32.00 -129.00 32.00 0.00 97.00 -96.00 64.00 -161.00 64.00 -128.00 0.00 -97.00 65.00 -32.00 96.00 0.00 0.00 32.00 32.00 32.00 65.00 0.00 32.00 0.00 64.00 32.00 32.00 0.00 32.00 -32.00 33.00 0.00 96.00 -32.00 32.00 -32.00 97.00 64.00 0.00 32.00 32.00 0.00 64.00 65.00 32.00 -32.00 32.00 0.00 65.00 -65.00 32.00 65.00 64.00 0.00 32.00 -65.00 0.00 -96.00 33.00 -32.00 0.00 -32.00 64.00 0.00 0.00 -33.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 -65.00 -32.00 -64.00 32.00 -32.00 -32.00 -129.00 0.00 -64.00 -32.00 -64.00 -32.00 64.00 -32.00 64.00 -161.00 65.00 -32.00 0.00 -97.00 32.00 -64.00 -32.00 -32.00 -33.00 -32.00 0.00 -65.00 65.00 -128.00 32.00 -161.00 32.00 -64.00 0.00 -32.00 64.00 -129.00 65.00 0.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 97.00 64.00 64.00 0.00 0.00 -32.00 32.00 32.00 97.00 32.00 64.00 0.00 0.00 -32.00 0.00 -64.00 -32.00 0.00 0.00 -97.00 -32.00 0.00 -33.00 -32.00 33.00 0.00 0.00 -64.00 32.00 0.00 32.00 -32.00 96.00 -97.00 65.00 -128.00 32.00 0.00 32.00 -65.00 32.00 -96.00 32.00 -65.00 32.00 65.00 -32.00 64.00 32.00 0.00 33.00 64.00 64.00 -32.00 32.00 -64.00 0.00 -64.00 64.00 0.00 33.00 -97.00 0.00 -32.00 32.00 -64.00 64.00 -161.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 65.00 -32.00 0.00 -64.00 32.00 -32.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 32.00 32.00 0.00 33.00 -128.00 64.00 -33.00 32.00 -32.00 96.00 0.00 -32.00 -96.00 -32.00 -32.00 -32.00 -65.00 96.00 -128.00 0.00 -33.00 65.00 -32.00 0.00 -32.00 64.00 -32.00 32.00 -129.00 -32.00 -64.00 -32.00 0.00 -32.00 -64.00 32.00 0.00 32.00 32.00 32.00 0.00 0.00 -32.00 97.00 -64.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 -65.00 0.00 0.00 -65.00 -32.00 -64.00 -64.00 -32.00 0.00 -64.00 -97.00 -97.00 -64.00 0.00 0.00 -32.00 64.00 -96.00 32.00 0.00 -32.00 0.00 -32.00 -33.00 -128.00 0.00 -33.00 0.00 0.00 65.00 -96.00 0.00 0.00 -65.00 -64.00 0.00 0.00 33.00 -33.00 0.00 0.00 -33.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -33.00 -32.00 33.00 0.00 -33.00 -32.00 -64.00 0.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 32.00 0.00 0.00 -64.00 0.00 32.00 32.00 -97.00 -32.00 0.00 -32.00 65.00 -32.00 0.00 -33.00 -32.00 33.00 -65.00 0.00 -32.00 -65.00 32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 32.00 -33.00 0.00 0.00 -64.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 65.00 -32.00 0.00 -128.00 -32.00 0.00 -97.00 -65.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -65.00 -33.00 0.00 0.00 -32.00 -32.00 -64.00 -32.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 -32.00 -64.00 32.00 -97.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -33.00 -32.00 -64.00 32.00 -32.00 32.00 -32.00 -32.00 -64.00 0.00 -33.00 -32.00 0.00 32.00 -64.00 -64.00 0.00 32.00 -32.00 -32.00 -32.00 -129.00 -97.00 -96.00 -32.00 0.00 -32.00 -32.00 -64.00 96.00 -32.00 32.00 -33.00 -32.00 -32.00 -32.00 -64.00 32.00 -32.00 65.00 0.00 64.00 -97.00 0.00 -64.00 32.00 -64.00 0.00 -32.00 -64.00 32.00 -65.00 -129.00 -32.00 0.00 -32.00 -64.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 -32.00 0.00 -65.00 -96.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -64.00 -128.00 -97.00 -32.00 0.00 -33.00 -64.00 -96.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -64.00 32.00 -64.00 0.00 -32.00 64.00 32.00 65.00 -32.00 0.00 -32.00 32.00 -97.00 32.00 -64.00 -32.00 -32.00 -65.00 32.00 -64.00 -32.00 -64.00 -129.00 -65.00 0.00 -32.00 -64.00 0.00 0.00 32.00 0.00 97.00 -32.00 0.00 -33.00 64.00 -32.00 -32.00 -32.00 32.00 -129.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 -160.00 -64.00 0.00 -33.00 0.00 -32.00 0.00 -64.00 0.00 -64.00 -65.00 0.00 65.00 -32.00 32.00 -33.00 32.00 0.00 96.00 -32.00 0.00 -96.00 97.00 -129.00 0.00 -96.00 64.00 -97.00 -32.00 -96.00 96.00 -129.00 33.00 -32.00 0.00 -32.00 96.00 -32.00 32.00 -65.00 -32.00 -64.00 -32.00 -96.00 -32.00 -33.00 0.00 -96.00 -65.00 -96.00 0.00 -65.00 33.00 -96.00 32.00 -65.00 -65.00 -32.00 0.00 -64.00 33.00 -96.00 0.00 -33.00 0.00 -32.00 -515.00 -96.00 -675.00 0.00 -32.00 -129.00 -97.00 -354.00 -353.00 -450.00 -418.00 -1157.00 -1061.00 -32.00 0.00 -32.00 32.00 -129.00 32.00 -64.00 32.00 -65.00 0.00 -32.00 97.00 -64.00 32.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 -64.00 0.00 0.00 64.00 -97.00 32.00 -128.00 -64.00 -64.00 0.00 -33.00 -32.00 -160.00 32.00 -193.00 64.00 -65.00 33.00 -32.00 0.00 -32.00 0.00 0.00 -97.00 -32.00 0.00 -32.00 -96.00 -65.00 -65.00 -64.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 -64.00 0.00 -33.00 -65.00 -32.00 0.00 0.00 65.00 -64.00 32.00 -32.00 -32.00 -64.00 32.00 -65.00 -32.00 -96.00 64.00 -65.00 64.00 -64.00 -64.00 -32.00 32.00 -32.00 -64.00 -129.00 -32.00 -32.00 -33.00 -32.00 -64.00 -32.00 0.00 -97.00 97.00 -64.00 -97.00 -32.00 -32.00 -97.00 32.00 -96.00 -64.00 -129.00 -32.00 32.00 -129.00 0.00 -64.00 -160.00 0.00 -97.00 -129.00 -96.00 -64.00 -32.00 0.00 -65.00 0.00 0.00 -64.00 -96.00 -33.00 -32.00 0.00 -65.00 -96.00 -32.00 -32.00 -32.00 -32.00 -64.00 -33.00 -65.00 65.00 -32.00 64.00 -64.00 -64.00 -97.00 -65.00 33.00 0.00 -33.00 0.00 -32.00 -64.00 0.00 32.00 -64.00 -64.00 -32.00 32.00 -32.00 -32.00 -65.00 -32.00 33.00 -32.00 -33.00 0.00 0.00 -32.00 -64.00 0.00 32.00 0.00 -64.00 32.00 0.00 -32.00 -64.00 -33.00 -65.00 -64.00 -32.00 -64.00 -161.00 -32.00 -64.00 -65.00 -129.00 -96.00 -32.00 -32.00 0.00 -32.00 -64.00 0.00 -32.00 -65.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -97.00 0.00 33.00 -32.00 -33.00 -33.00 0.00 0.00 -32.00 -32.00 -96.00 -32.00 -32.00 -64.00 0.00 -97.00 -65.00 -32.00 32.00 -96.00 -32.00 -32.00 32.00 -97.00 -64.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 -33.00 0.00 -32.00 -64.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 -64.00 -65.00 -32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -64.00 -65.00 -97.00 0.00 -128.00 -64.00 0.00 32.00 -65.00 -32.00 -32.00 0.00 -32.00 32.00 -96.00 0.00 -33.00 0.00 -225.00 32.00 0.00 33.00 -32.00 32.00 -64.00 0.00 -32.00 -32.00 -65.00 32.00 -32.00 0.00 -32.00 32.00 -64.00 64.00 -64.00 0.00 -33.00 0.00 -128.00 65.00 -97.00 64.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -65.00 0.00 -32.00 32.00 32.00 65.00 -32.00 32.00 -64.00 0.00 -32.00 32.00 64.00 64.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 33.00 -65.00 0.00 0.00 64.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 -64.00 0.00 -65.00 32.00 0.00 -32.00 -32.00 -161.00 -96.00 -32.00 -64.00 -65.00 0.00 -64.00 32.00 -32.00 0.00 -64.00 -32.00 -161.00 -33.00 -32.00 -32.00 -32.00 -32.00 -33.00 0.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 -32.00 32.00 -65.00 0.00 0.00 -32.00 33.00 -32.00 0.00 -32.00 -33.00 -33.00 -32.00 -32.00 -128.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00 -96.00 0.00 -193.00 -64.00 -65.00 0.00 -32.00 -33.00 -32.00 0.00 0.00 -64.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 64.00 0.00 -64.00 -32.00 64.00 -32.00 0.00 -65.00 -32.00 0.00 0.00 -96.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 32.00 -97.00 0.00 -32.00 32.00 -193.00 129.00 -289.00 32.00 -32.00 32.00 -97.00 64.00 -225.00 65.00 -64.00 0.00 -32.00 96.00 -129.00 -32.00 -32.00 -64.00 0.00 -33.00 -65.00 -32.00 33.00 0.00 -33.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 33.00 0.00 0.00 -32.00 -65.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -64.00 0.00 0.00 -64.00 0.00 32.00 -33.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 -64.00 -32.00 0.00 0.00 64.00 0.00 -64.00 -32.00 0.00 -32.00 -65.00 -32.00 0.00 -32.00 33.00 0.00 -33.00 -65.00 -32.00 32.00 0.00 -96.00 0.00 -32.00 0.00 0.00 32.00 -64.00 0.00 -33.00 65.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 -33.00 -32.00 33.00 -32.00 0.00 -33.00 0.00 0.00 -33.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -32.00 0.00 -33.00 96.00 -64.00 33.00 -32.00 -33.00 32.00 0.00 0.00 -64.00 -128.00 -32.00 0.00 64.00 -33.00 0.00 -64.00 -64.00 -96.00 0.00 0.00 -32.00 -33.00 0.00 0.00 -64.00 -32.00 -33.00 0.00 33.00 0.00 32.00 -96.00 0.00 0.00 32.00 0.00 32.00 -32.00 -32.00 -33.00 32.00 33.00 0.00 0.00 32.00 -33.00 -64.00 -96.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 -96.00 -64.00 -96.00 32.00 0.00 32.00 -65.00 0.00 32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -33.00 33.00 0.00 -33.00 -32.00 0.00 -32.00 0.00 -32.00 33.00 -97.00 32.00 -64.00 64.00 -64.00 32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 0.00 -32.00 -33.00 -32.00 33.00 0.00 -33.00 -32.00 33.00 -65.00 0.00 -64.00 0.00 0.00 64.00 -64.00 -32.00 0.00 32.00 -33.00 0.00 0.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 0.00 -32.00 -32.00 32.00 -64.00 65.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 96.00 -32.00 -32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -33.00 -32.00 -32.00 0.00 -32.00 65.00 32.00 32.00 -32.00 32.00 -32.00 -32.00 0.00 64.00 -64.00 -64.00 0.00 32.00 -32.00 0.00 0.00 64.00 -33.00 0.00 0.00 64.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 65.00 -32.00 -33.00 0.00 65.00 -65.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -64.00 0.00 32.00 33.00 -32.00 32.00 -97.00 -32.00 0.00 32.00 65.00 32.00 -33.00 32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 32.00 0.00 33.00 33.00 -65.00 0.00 -32.00 0.00 -32.00 32.00 0.00 64.00 0.00 32.00 -32.00 -32.00 0.00 32.00 0.00 32.00 32.00 0.00 32.00 -32.00 0.00 65.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 96.00 0.00 -32.00 0.00 32.00 -64.00 0.00 -32.00 32.00 -64.00 0.00 0.00 32.00 -33.00 0.00 0.00 32.00 -96.00 33.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 -64.00 64.00 32.00 32.00 -64.00 0.00 0.00 32.00 0.00 32.00 -64.00 -32.00 0.00 32.00 -193.00 65.00 0.00 64.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 -64.00 129.00 -64.00 96.00 -32.00 33.00 -33.00 0.00 -289.00 -33.00 -64.00 -32.00 32.00 -32.00 -64.00 32.00 0.00 32.00 -33.00 0.00 -32.00 0.00 0.00 33.00 -96.00 -33.00 -32.00 65.00 -65.00 32.00 0.00 64.00 -64.00 64.00 -32.00 -32.00 -32.00 32.00 -32.00 65.00 -32.00 -32.00 -33.00 64.00 -64.00 32.00 0.00 32.00 32.00 32.00 -64.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -33.00 -32.00 33.00 65.00 -33.00 64.00 -32.00 -32.00 -32.00 64.00 -96.00 0.00 0.00 32.00 0.00 32.00 -33.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 33.00 0.00 32.00 0.00 32.00 -32.00 0.00 -96.00 96.00 -97.00 65.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 -32.00 65.00 -65.00 32.00 33.00 0.00 -33.00 32.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -96.00 64.00 -65.00 -64.00 -64.00 32.00 -32.00 0.00 -64.00 -64.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -64.00 0.00 0.00 32.00 -97.00 97.00 0.00 32.00 -32.00 -32.00 0.00 64.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 97.00 -32.00 32.00 -65.00 32.00 0.00 -32.00 -32.00 -32.00 -32.00 96.00 0.00 -32.00 -32.00 0.00 -32.00 64.00 32.00 32.00 -32.00 65.00 -65.00 96.00 0.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -64.00 0.00 0.00 33.00 -33.00 -33.00 0.00 33.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 -32.00 -32.00 32.00 -64.00 0.00 -33.00 0.00 -64.00 0.00 -64.00 -32.00 -64.00 32.00 -65.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 65.00 -32.00 0.00 -33.00 32.00 -64.00 0.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -225.00 -129.00 -161.00 33.00 -64.00 64.00 0.00 96.00 -65.00 0.00 33.00 32.00 -33.00 97.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -97.00 0.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 65.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 32.00 32.00 -129.00 32.00 -32.00 -64.00 0.00 -32.00 -32.00 32.00 -32.00 -64.00 0.00 -97.00 -97.00 -64.00 0.00 -64.00 97.00 0.00 32.00 -32.00 64.00 0.00 0.00 -33.00 65.00 0.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -33.00 32.00 -64.00 64.00 -32.00 0.00 -64.00 65.00 -33.00 0.00 -64.00 32.00 -32.00 161.00 -161.00 0.00 -161.00 0.00 -32.00 32.00 -32.00 0.00 -128.00 0.00 -97.00 -97.00 -32.00 -32.00 -64.00 -64.00 0.00 32.00 -129.00 -97.00 -96.00 -64.00 0.00 0.00 -33.00 32.00 -96.00 -64.00 -97.00 -32.00 0.00 0.00 -32.00 64.00 -32.00 64.00 -32.00 0.00 -32.00 33.00 -32.00 32.00 -32.00 0.00 -97.00 0.00 -32.00 0.00 -32.00 0.00 -97.00 0.00 -64.00 32.00 0.00 0.00 -96.00 0.00 -33.00 -32.00 0.00 -65.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 65.00 0.00 0.00 -32.00 0.00 32.00 32.00 0.00 64.00 -32.00 0.00 -64.00 -32.00 -32.00 64.00 -64.00 0.00 -33.00 -96.00 -96.00 64.00 -32.00 32.00 -97.00 -32.00 -32.00 -32.00 0.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -64.00 64.00 32.00 33.00 -32.00 -33.00 -33.00 -64.00 -64.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 -64.00 -64.00 -32.00 -32.00 32.00 -64.00 32.00 -33.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 64.00 96.00 97.00 32.00 32.00 -32.00 32.00 0.00 64.00 -64.00 65.00 0.00 32.00 -32.00 0.00 -97.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 -32.00 -32.00 -64.00 0.00 -65.00 -32.00 -32.00 -64.00 -32.00 -33.00 -32.00 -192.00 -64.00 -33.00 -97.00 0.00 32.00 -64.00 -32.00 -32.00 -64.00 0.00 -32.00 32.00 -33.00 0.00 0.00 -32.00 -32.00 -64.00 -64.00 0.00 -96.00 -65.00 64.00 -128.00 -64.00 -65.00 -65.00 33.00 -64.00 32.00 -32.00 0.00 0.00 -65.00 -97.00 0.00 33.00 -96.00 -33.00 -64.00 -64.00 -33.00 -96.00 33.00 -161.00 -33.00 -65.00 -32.00 0.00 -96.00 0.00 -32.00 -64.00 0.00 -96.00 -65.00 -97.00 0.00 -64.00 -32.00 64.00 -64.00 32.00 32.00 33.00 0.00 64.00 -96.00 -32.00 -65.00 -32.00 0.00 -33.00 0.00 97.00 -64.00 64.00 -129.00 32.00 -32.00 -64.00 -64.00 32.00 -96.00 -32.00 -33.00 -64.00 -32.00 -161.00 -96.00 32.00 -97.00 0.00 -128.00 129.00 -225.00 0.00 -33.00 0.00 -32.00 -65.00 -64.00 -96.00 0.00 0.00 -32.00 32.00 -64.00 -96.00 -65.00 32.00 -32.00 225.00 -64.00 32.00 -32.00 -64.00 -129.00 -97.00 32.00 -64.00 -32.00 0.00 -32.00 129.00 -97.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 -65.00 -32.00 -32.00 -32.00 32.00 -32.00 65.00 -129.00 64.00 -64.00 32.00 0.00 32.00 -65.00 129.00 -64.00 128.00 -129.00 -32.00 -32.00 -96.00 -96.00 -129.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -64.00 32.00 -65.00 -32.00 -64.00 64.00 -64.00 32.00 -65.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 96.00 -32.00 0.00 -32.00 -64.00 -97.00 -32.00 -64.00 -64.00 32.00 0.00 -32.00 0.00 -32.00 96.00 -65.00 32.00 -64.00 97.00 -32.00 96.00 -32.00 97.00 -32.00 96.00 -33.00 32.00 -32.00 65.00 -32.00 64.00 -128.00 64.00 -33.00 161.00 -96.00 32.00 -129.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 -161.00 64.00 -64.00 32.00 -65.00 0.00 -32.00 32.00 -193.00 129.00 -161.00 32.00 -64.00 -32.00 -96.00 97.00 -129.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 -97.00 0.00 -64.00 -33.00 0.00 -96.00 -64.00 64.00 -97.00 0.00 -64.00 0.00 -64.00 -128.00 0.00 0.00 -32.00 32.00 -33.00 32.00 -96.00 0.00 -64.00 64.00 -33.00 0.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 64.00 -32.00 -32.00 -65.00 64.00 -32.00 0.00 -96.00 -32.00 -32.00 -32.00 0.00 -32.00 -65.00 -32.00 -64.00 96.00 -96.00 32.00 -65.00 33.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 0.00 -64.00 96.00 -32.00 32.00 -32.00 33.00 0.00 32.00 0.00 64.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 33.00 -32.00 96.00 -33.00 32.00 -32.00 65.00 0.00 64.00 -64.00 64.00 -32.00 65.00 -129.00 0.00 -64.00 -65.00 -32.00 -64.00 -32.00 -225.00 96.00 -65.00 0.00 -96.00 64.00 -225.00 -32.00 -32.00 0.00 -32.00 64.00 -97.00 33.00 32.00 -161.00 0.00 -64.00 33.00 -65.00 32.00 -64.00 -65.00 -96.00 97.00 -65.00 64.00 -64.00 -32.00 -64.00 -32.00 -33.00 -32.00 -32.00 0.00 -64.00 0.00 -64.00 32.00 -33.00 0.00 -64.00 -32.00 -64.00 64.00 -32.00 0.00 -129.00 -32.00 -32.00 -64.00 -32.00 0.00 -32.00 -33.00 0.00 65.00 -97.00 64.00 -32.00 64.00 -64.00 -32.00 -65.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 64.00 -161.00 -32.00 -64.00 32.00 -32.00 32.00 -32.00 32.00 -97.00 32.00 -32.00 32.00 0.00 97.00 -32.00 128.00 -32.00 193.00 0.00 33.00 -97.00 -33.00 -64.00 33.00 -64.00 -33.00 -65.00 -96.00 33.00 -225.00 96.00 -129.00 -32.00 0.00 -161.00 32.00 -64.00 0.00 -32.00 -32.00 -65.00 -64.00 -64.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -65.00 33.00 -32.00 -33.00 -64.00 -96.00 -64.00 -32.00 0.00 -65.00 -32.00 -32.00 -65.00 -32.00 32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 129.00 -32.00 0.00 -33.00 -32.00 0.00 -97.00 -32.00 -32.00 0.00 -97.00 -32.00 33.00 -64.00 32.00 -32.00 -65.00 -97.00 -32.00 0.00 65.00 -32.00 32.00 -96.00 -32.00 -33.00 0.00 -64.00 -97.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -33.00 64.00 -32.00 0.00 -32.00 33.00 -96.00 0.00 -65.00 32.00 -64.00 -32.00 -64.00 -65.00 -32.00 0.00 -33.00 -32.00 -64.00 64.00 -32.00 -32.00 -32.00 0.00 -32.00 -64.00 -65.00 0.00 -64.00 64.00 -32.00 32.00 0.00 0.00 -64.00 97.00 -97.00 64.00 -32.00 32.00 -32.00 33.00 -65.00 128.00 -32.00 65.00 0.00 192.00 -32.00 161.00 -64.00 97.00 0.00 96.00 -97.00 0.00 -64.00 -32.00 -64.00 -32.00 0.00 -65.00 0.00 -64.00 64.00 -128.00 32.00 -65.00 -32.00 -64.00 -32.00 -96.00 -32.00 -129.00 64.00 -64.00 0.00 -65.00 -64.00 -32.00 -32.00 -64.00 32.00 -65.00 -97.00 33.00 -64.00 -33.00 -64.00 33.00 -32.00 64.00 32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 64.00 -32.00 33.00 -64.00 -33.00 -32.00 0.00 -32.00 65.00 -33.00 0.00 -32.00 -65.00 -32.00 -64.00 -64.00 -96.00 32.00 -33.00 -32.00 65.00 -32.00 161.00 -65.00 96.00 -160.00 64.00 -33.00 0.00 -64.00 -32.00 -96.00 -32.00 -33.00 -32.00 -64.00 0.00 -64.00 64.00 -32.00 65.00 32.00 64.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 161.00 96.00 161.00 64.00 64.00 -32.00 97.00 32.00 96.00 -32.00 225.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 -32.00 0.00 -97.00 -33.00 -32.00 -32.00 -64.00 32.00 -97.00 0.00 -32.00 -64.00 -64.00 32.00 -32.00 32.00 -65.00 -32.00 -64.00 -32.00 -32.00 -64.00 0.00 -32.00 -64.00 -65.00 -65.00 0.00 -64.00 -32.00 -32.00 0.00 -96.00 -32.00 -129.00 -64.00 -161.00 32.00 -64.00 -32.00 -97.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 -65.00 -96.00 -32.00 -64.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 -64.00 -96.00 -32.00 -33.00 -32.00 -32.00 -33.00 -32.00 -96.00 0.00 -161.00 0.00 -32.00 -96.00 -64.00 0.00 -32.00 0.00 -129.00 -65.00 -32.00 -32.00 0.00 -96.00 -32.00 -65.00 -97.00 -32.00 -128.00 0.00 -65.00z\"\n          },\n          pi: {\n            name: \"PI\",\n            path: \"M138535.00 77489.00l-32.00 -193.00 32.00 -64.00 0.00 -65.00 65.00 0.00 32.00 0.00 32.00 -96.00 32.00 -32.00 0.00 -32.00 64.00 -33.00 32.00 -96.00 33.00 -96.00 32.00 -33.00 64.00 -192.00 -64.00 -65.00 32.00 0.00 0.00 -64.00 32.00 -129.00 0.00 -32.00 64.00 -64.00 0.00 -65.00 32.00 -96.00 0.00 -32.00 33.00 -64.00 -33.00 -97.00 -32.00 -32.00 -32.00 -32.00 0.00 -129.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 -97.00 0.00 -32.00 32.00 -128.00 0.00 -33.00 33.00 -32.00 64.00 -32.00 32.00 -96.00 0.00 -33.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 -32.00 -64.00 0.00 -33.00 -32.00 -32.00 32.00 -32.00 -64.00 -32.00 64.00 -97.00 -32.00 -128.00 32.00 -97.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 -64.00 -32.00 -32.00 -32.00 -33.00 32.00 -32.00 -32.00 -64.00 0.00 -64.00 64.00 -65.00 -32.00 -64.00 64.00 -32.00 0.00 -32.00 32.00 -97.00 65.00 -32.00 0.00 -32.00 64.00 -32.00 -32.00 -64.00 32.00 -33.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 0.00 -65.00 0.00 -32.00 -97.00 -128.00 -32.00 -65.00 -64.00 -64.00 -33.00 -32.00 -64.00 0.00 -64.00 -32.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 33.00 -65.00 -33.00 0.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 -32.00 -64.00 0.00 -33.00 64.00 0.00 0.00 -64.00 -32.00 -64.00 0.00 -64.00 32.00 -97.00 -32.00 0.00 0.00 -96.00 -32.00 -97.00 32.00 0.00 32.00 -32.00 -64.00 -64.00 -32.00 -33.00 -32.00 -96.00 -32.00 -32.00 0.00 -129.00 0.00 -64.00 32.00 0.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 -33.00 -32.00 33.00 -64.00 -33.00 -65.00 0.00 -64.00 -96.00 -64.00 -32.00 -97.00 -65.00 -64.00 0.00 -32.00 -32.00 -97.00 -32.00 -64.00 64.00 -64.00 0.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 65.00 -32.00 -32.00 -32.00 32.00 -33.00 32.00 -64.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 -64.00 -33.00 -32.00 -32.00 32.00 -64.00 64.00 -32.00 33.00 -64.00 0.00 -33.00 32.00 0.00 96.00 -96.00 64.00 32.00 33.00 -128.00 64.00 -33.00 64.00 0.00 -32.00 -64.00 64.00 -32.00 65.00 0.00 96.00 -225.00 32.00 -32.00 -32.00 -33.00 32.00 -96.00 32.00 -64.00 33.00 0.00 0.00 -32.00 96.00 32.00 64.00 -65.00 -128.00 -64.00 0.00 -32.00 128.00 -96.00 32.00 -33.00 0.00 -64.00 33.00 -32.00 -33.00 -64.00 33.00 -33.00 64.00 -96.00 -32.00 -32.00 32.00 -97.00 -32.00 -128.00 32.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 -32.00 -32.00 65.00 -33.00 32.00 0.00 32.00 -32.00 -32.00 -64.00 64.00 -32.00 0.00 -32.00 0.00 -97.00 64.00 -64.00 0.00 -97.00 65.00 -64.00 0.00 -193.00 257.00 -225.00 -32.00 -64.00 32.00 -32.00 32.00 -65.00 64.00 0.00 32.00 -64.00 -32.00 -96.00 32.00 -65.00 33.00 -64.00 -33.00 -64.00 65.00 -129.00 0.00 -96.00 32.00 -33.00 -64.00 -96.00 64.00 -64.00 32.00 0.00 32.00 0.00 0.00 -32.00 -96.00 -65.00 64.00 -96.00 32.00 -32.00 0.00 -33.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 33.00 0.00 64.00 -33.00 0.00 -32.00 -97.00 -64.00 97.00 -32.00 0.00 -32.00 -64.00 -33.00 -33.00 -64.00 33.00 0.00 32.00 -32.00 0.00 -64.00 64.00 -32.00 32.00 -65.00 -32.00 -96.00 64.00 -32.00 0.00 -65.00 32.00 32.00 33.00 -32.00 -33.00 -32.00 33.00 -64.00 -33.00 -64.00 33.00 -33.00 0.00 33.00 32.00 0.00 0.00 -33.00 -32.00 -64.00 32.00 -64.00 64.00 -32.00 0.00 -33.00 0.00 -64.00 32.00 0.00 65.00 -32.00 -65.00 -32.00 0.00 -32.00 32.00 0.00 65.00 32.00 32.00 0.00 -32.00 -64.00 32.00 -33.00 64.00 0.00 32.00 -32.00 0.00 -32.00 32.00 0.00 33.00 -32.00 0.00 -64.00 32.00 -65.00 32.00 0.00 64.00 32.00 129.00 -128.00 32.00 -64.00 64.00 -33.00 97.00 0.00 32.00 0.00 64.00 -32.00 97.00 32.00 64.00 -64.00 32.00 -32.00 32.00 0.00 65.00 32.00 0.00 32.00 32.00 0.00 64.00 -64.00 96.00 -32.00 33.00 -97.00 96.00 -64.00 32.00 32.00 65.00 0.00 32.00 -32.00 193.00 -64.00 96.00 32.00 32.00 0.00 65.00 32.00 128.00 -96.00 64.00 0.00 65.00 -65.00 32.00 0.00 64.00 0.00 65.00 -32.00 96.00 -32.00 32.00 32.00 32.00 -32.00 32.00 -64.00 33.00 -65.00 32.00 -64.00 32.00 -32.00 64.00 32.00 65.00 -32.00 32.00 -64.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 129.00 -64.00 32.00 -64.00 128.00 32.00 32.00 32.00 193.00 -64.00 65.00 128.00 64.00 32.00 32.00 0.00 32.00 0.00 65.00 0.00 32.00 -160.00 32.00 -33.00 32.00 -128.00 32.00 0.00 65.00 -32.00 32.00 -33.00 96.00 -32.00 97.00 -161.00 0.00 -32.00 96.00 -64.00 32.00 -32.00 32.00 -97.00 161.00 -32.00 32.00 0.00 33.00 -128.00 64.00 -65.00 64.00 0.00 0.00 -32.00 129.00 -64.00 128.00 -32.00 97.00 -97.00 64.00 -64.00 97.00 -32.00 64.00 0.00 161.00 -65.00 96.00 65.00 32.00 0.00 97.00 -161.00 64.00 -64.00 0.00 -32.00 -32.00 -97.00 32.00 -64.00 32.00 -64.00 0.00 -97.00 64.00 0.00 65.00 0.00 161.00 -193.00 0.00 -129.00 64.00 -32.00 64.00 0.00 0.00 -32.00 0.00 -96.00 0.00 -32.00 65.00 -97.00 128.00 -64.00 32.00 -97.00 32.00 -32.00 33.00 0.00 0.00 97.00 32.00 0.00 32.00 0.00 32.00 -65.00 -96.00 -128.00 0.00 -32.00 0.00 -33.00 32.00 0.00 96.00 0.00 64.00 97.00 33.00 0.00 32.00 -64.00 0.00 -129.00 32.00 -64.00 64.00 0.00 32.00 -33.00 225.00 -32.00 65.00 -64.00 64.00 0.00 64.00 32.00 0.00 64.00 65.00 33.00 32.00 0.00 32.00 -65.00 32.00 -32.00 161.00 32.00 129.00 -96.00 160.00 -32.00 32.00 -65.00 33.00 -32.00 32.00 -32.00 96.00 64.00 65.00 -64.00 32.00 0.00 128.00 0.00 65.00 -32.00 32.00 0.00 0.00 32.00 32.00 32.00 129.00 -32.00 64.00 32.00 96.00 32.00 97.00 97.00 96.00 32.00 65.00 64.00 32.00 0.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 97.00 33.00 32.00 160.00 64.00 33.00 33.00 32.00 64.00 32.00 64.00 128.00 65.00 0.00 -33.00 65.00 -32.00 96.00 32.00 64.00 0.00 65.00 -32.00 32.00 0.00 0.00 -96.00 129.00 32.00 64.00 -129.00 193.00 32.00 128.00 -32.00 97.00 -64.00 32.00 -64.00 32.00 0.00 193.00 -33.00 161.00 33.00 96.00 64.00 32.00 0.00 65.00 0.00 128.00 -64.00 97.00 -97.00 96.00 0.00 65.00 64.00 64.00 0.00 129.00 -32.00 32.00 0.00 64.00 -64.00 32.00 -129.00 161.00 -64.00 129.00 -161.00 32.00 -96.00 0.00 -32.00 0.00 -32.00 32.00 -193.00 96.00 -129.00 0.00 -64.00 0.00 -97.00 65.00 -128.00 -65.00 -32.00 0.00 -33.00 32.00 -32.00 65.00 -32.00 -32.00 -96.00 32.00 -97.00 -65.00 -96.00 0.00 -32.00 97.00 -161.00 0.00 -97.00 32.00 -32.00 96.00 -96.00 0.00 -32.00 -32.00 -33.00 -64.00 33.00 -32.00 -33.00 32.00 -96.00 32.00 -129.00 -32.00 -64.00 0.00 -64.00 -32.00 -32.00 -32.00 -65.00 0.00 -32.00 -32.00 0.00 -97.00 -32.00 -96.00 -32.00 -97.00 -129.00 -96.00 0.00 -65.00 -64.00 -32.00 -32.00 -32.00 -193.00 0.00 -32.00 -64.00 -32.00 -64.00 -33.00 -129.00 0.00 -64.00 -64.00 -33.00 -129.00 -96.00 -96.00 0.00 -32.00 32.00 -32.00 64.00 -32.00 0.00 -33.00 33.00 -32.00 0.00 -32.00 0.00 -96.00 -33.00 -33.00 -64.00 -64.00 -64.00 -64.00 0.00 -64.00 -32.00 -129.00 -32.00 -32.00 0.00 -65.00 96.00 -160.00 -96.00 -193.00 32.00 -97.00 -32.00 -64.00 -33.00 -161.00 33.00 -64.00 0.00 -32.00 96.00 0.00 0.00 -65.00 -64.00 -225.00 32.00 -160.00 0.00 -32.00 -32.00 -33.00 -32.00 -32.00 0.00 -64.00 32.00 -32.00 32.00 -65.00 161.00 -32.00 64.00 0.00 32.00 -64.00 32.00 -97.00 97.00 -64.00 32.00 -193.00 96.00 -96.00 0.00 -32.00 32.00 -129.00 33.00 -32.00 128.00 -32.00 65.00 -65.00 32.00 -128.00 32.00 -32.00 128.00 -33.00 65.00 -32.00 0.00 -64.00 128.00 -64.00 65.00 -32.00 32.00 -65.00 32.00 -160.00 0.00 -65.00 0.00 -32.00 -64.00 -161.00 0.00 -64.00 128.00 -161.00 0.00 -96.00 -32.00 -161.00 -32.00 -96.00 -32.00 -193.00 -65.00 -97.00 -32.00 0.00 0.00 -64.00 0.00 -129.00 -96.00 -225.00 0.00 -64.00 32.00 -161.00 -64.00 -64.00 0.00 -32.00 -129.00 -129.00 0.00 -32.00 0.00 -129.00 -32.00 -96.00 -161.00 -161.00 -32.00 0.00 -32.00 -96.00 0.00 -97.00 96.00 -96.00 33.00 -65.00 0.00 -64.00 -97.00 -64.00 -32.00 -32.00 -32.00 -65.00 32.00 -64.00 64.00 -64.00 65.00 -33.00 0.00 -32.00 32.00 -32.00 160.00 -225.00 33.00 -64.00 32.00 -64.00 0.00 -33.00 -32.00 -128.00 64.00 -97.00 0.00 -96.00 32.00 0.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 -96.00 -64.00 -33.00 -64.00 33.00 -129.00 -65.00 -64.00 -193.00 -129.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 -64.00 0.00 0.00 -32.00 0.00 -129.00 0.00 -96.00 -97.00 -161.00 0.00 -64.00 -32.00 -161.00 0.00 -96.00 32.00 -97.00 193.00 -225.00 32.00 -32.00 32.00 -32.00 193.00 0.00 0.00 -32.00 -96.00 -65.00 32.00 -64.00 32.00 -32.00 97.00 -32.00 64.00 -65.00 0.00 -96.00 64.00 -193.00 32.00 -32.00 65.00 -193.00 64.00 0.00 32.00 32.00 32.00 0.00 32.00 -96.00 33.00 -97.00 225.00 -161.00 64.00 -64.00 0.00 -96.00 0.00 -32.00 0.00 -65.00 193.00 -321.00 32.00 -32.00 32.00 -33.00 -32.00 -64.00 -32.00 -96.00 32.00 -32.00 32.00 -65.00 0.00 -64.00 -64.00 -129.00 0.00 -32.00 0.00 -32.00 32.00 -64.00 96.00 -97.00 97.00 -128.00 64.00 0.00 32.00 -65.00 0.00 -32.00 33.00 -96.00 96.00 -65.00 64.00 -32.00 65.00 -64.00 128.00 -161.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -65.00 97.00 -64.00 0.00 -96.00 32.00 -65.00 32.00 32.00 32.00 0.00 0.00 97.00 65.00 64.00 32.00 0.00 32.00 0.00 64.00 -32.00 65.00 -96.00 32.00 0.00 32.00 0.00 0.00 64.00 32.00 32.00 64.00 -32.00 33.00 -64.00 0.00 -65.00 96.00 32.00 64.00 0.00 129.00 -96.00 32.00 32.00 129.00 64.00 32.00 0.00 64.00 -32.00 161.00 -64.00 161.00 32.00 32.00 -32.00 0.00 32.00 32.00 -64.00 -32.00 -97.00 64.00 -32.00 0.00 -32.00 161.00 -32.00 64.00 -129.00 64.00 -32.00 0.00 -32.00 0.00 -64.00 33.00 -65.00 32.00 -32.00 64.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -129.00 0.00 0.00 -65.00 32.00 -32.00 65.00 -64.00 161.00 0.00 64.00 -32.00 161.00 -32.00 96.00 0.00 64.00 -32.00 65.00 -97.00 32.00 0.00 0.00 -32.00 32.00 -97.00 32.00 -64.00 32.00 0.00 65.00 32.00 32.00 0.00 0.00 -161.00 0.00 -32.00 64.00 -64.00 0.00 -96.00 0.00 -33.00 32.00 -32.00 65.00 -32.00 64.00 -32.00 96.00 -129.00 32.00 -64.00 129.00 -96.00 64.00 -32.00 33.00 -161.00 0.00 -32.00 96.00 -97.00 -32.00 -96.00 -32.00 -33.00 -129.00 -96.00 -32.00 -32.00 -64.00 -97.00 -65.00 -64.00 32.00 -128.00 0.00 -97.00 97.00 -32.00 0.00 -32.00 -32.00 -65.00 0.00 -160.00 96.00 -97.00 65.00 -64.00 64.00 32.00 64.00 129.00 161.00 128.00 96.00 32.00 33.00 0.00 192.00 193.00 129.00 65.00 0.00 32.00 129.00 96.00 193.00 97.00 32.00 0.00 96.00 -32.00 32.00 0.00 97.00 64.00 128.00 0.00 65.00 -64.00 64.00 0.00 161.00 32.00 32.00 32.00 32.00 -32.00 64.00 32.00 97.00 -32.00 128.00 64.00 33.00 0.00 128.00 64.00 32.00 -32.00 33.00 0.00 0.00 129.00 32.00 0.00 0.00 32.00 96.00 64.00 64.00 0.00 65.00 0.00 0.00 65.00 64.00 96.00 0.00 64.00 32.00 65.00 -32.00 0.00 32.00 32.00 -32.00 64.00 0.00 32.00 -32.00 65.00 32.00 0.00 0.00 96.00 -64.00 32.00 0.00 32.00 -65.00 0.00 0.00 65.00 -64.00 64.00 -96.00 96.00 -32.00 65.00 0.00 96.00 -290.00 515.00 -64.00 160.00 0.00 32.00 -64.00 65.00 0.00 64.00 -33.00 64.00 0.00 33.00 97.00 -33.00 0.00 65.00 0.00 96.00 32.00 0.00 32.00 65.00 161.00 0.00 32.00 0.00 0.00 32.00 0.00 96.00 0.00 64.00 64.00 65.00 33.00 128.00 0.00 32.00 64.00 -32.00 64.00 0.00 -96.00 32.00 -32.00 33.00 0.00 160.00 -65.00 97.00 -128.00 0.00 0.00 32.00 -33.00 32.00 0.00 32.00 65.00 33.00 64.00 32.00 64.00 160.00 -32.00 225.00 -32.00 33.00 32.00 32.00 65.00 32.00 96.00 0.00 64.00 0.00 65.00 64.00 96.00 0.00 97.00 65.00 0.00 32.00 -65.00 0.00 -32.00 32.00 -32.00 161.00 64.00 64.00 -64.00 96.00 -161.00 161.00 0.00 32.00 64.00 -64.00 0.00 32.00 33.00 0.00 32.00 97.00 0.00 32.00 32.00 32.00 32.00 32.00 0.00 32.00 32.00 65.00 32.00 64.00 65.00 64.00 64.00 129.00 -64.00 161.00 -32.00 0.00 0.00 32.00 -33.00 0.00 0.00 32.00 -32.00 32.00 32.00 64.00 33.00 65.00 -97.00 64.00 0.00 32.00 32.00 0.00 65.00 -32.00 64.00 -32.00 64.00 0.00 64.00 -32.00 33.00 32.00 32.00 -32.00 0.00 32.00 64.00 32.00 32.00 0.00 97.00 32.00 96.00 0.00 32.00 32.00 0.00 32.00 -64.00 65.00 32.00 64.00 -64.00 193.00 -32.00 32.00 64.00 97.00 0.00 64.00 64.00 32.00 129.00 32.00 -64.00 64.00 -161.00 258.00 64.00 386.00 0.00 64.00 0.00 32.00 -64.00 32.00 -64.00 129.00 -65.00 64.00 0.00 32.00 0.00 129.00 -64.00 128.00 0.00 33.00 0.00 128.00 -64.00 97.00 0.00 128.00 -65.00 65.00 -32.00 96.00 -32.00 0.00 -32.00 97.00 -64.00 0.00 -33.00 0.00 33.00 32.00 64.00 0.00 0.00 32.00 0.00 32.00 -32.00 96.00 0.00 65.00 128.00 64.00 97.00 129.00 32.00 32.00 -129.00 161.00 -128.00 128.00 -32.00 65.00 0.00 32.00 -65.00 32.00 0.00 32.00 65.00 32.00 128.00 32.00 0.00 32.00 -64.00 33.00 -32.00 96.00 0.00 32.00 -65.00 32.00 33.00 161.00 -65.00 64.00 97.00 129.00 -32.00 64.00 64.00 97.00 0.00 64.00 32.00 0.00 32.00 0.00 0.00 32.00 32.00 32.00 32.00 -64.00 65.00 32.00 161.00 225.00 32.00 -32.00 32.00 0.00 0.00 64.00 64.00 33.00 0.00 96.00 -32.00 129.00 161.00 0.00 0.00 64.00 32.00 0.00 0.00 32.00 32.00 32.00 0.00 65.00 129.00 64.00 64.00 -64.00 32.00 0.00 32.00 96.00 65.00 -32.00 0.00 96.00 128.00 65.00 32.00 96.00 33.00 -32.00 32.00 0.00 64.00 96.00 64.00 0.00 32.00 0.00 33.00 65.00 -33.00 96.00 33.00 129.00 -97.00 64.00 97.00 64.00 32.00 0.00 32.00 65.00 -64.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 64.00 32.00 0.00 64.00 -32.00 96.00 -65.00 33.00 -32.00 96.00 32.00 32.00 65.00 97.00 32.00 64.00 -32.00 32.00 -97.00 0.00 -32.00 32.00 0.00 32.00 32.00 65.00 32.00 32.00 33.00 32.00 32.00 64.00 0.00 33.00 -65.00 64.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 65.00 -32.00 32.00 32.00 64.00 0.00 64.00 97.00 65.00 0.00 128.00 32.00 65.00 32.00 64.00 -32.00 129.00 -32.00 64.00 -97.00 32.00 -32.00 32.00 32.00 64.00 33.00 129.00 64.00 96.00 -32.00 65.00 32.00 128.00 32.00 129.00 -32.00 161.00 32.00 96.00 64.00 161.00 -32.00 96.00 97.00 97.00 0.00 257.00 -33.00 97.00 -32.00 32.00 0.00 32.00 -64.00 64.00 0.00 97.00 0.00 32.00 0.00 32.00 96.00 -32.00 65.00 64.00 64.00 225.00 64.00 129.00 -32.00 96.00 0.00 65.00 0.00 32.00 0.00 32.00 0.00 128.00 0.00 97.00 129.00 161.00 64.00 161.00 32.00 32.00 65.00 32.00 32.00 32.00 0.00 64.00 0.00 65.00 0.00 32.00 -32.00 160.00 -65.00 33.00 0.00 64.00 33.00 161.00 0.00 161.00 0.00 64.00 32.00 128.00 0.00 65.00 0.00 64.00 193.00 193.00 64.00 161.00 0.00 32.00 64.00 64.00 0.00 32.00 -64.00 129.00 32.00 32.00 96.00 97.00 258.00 0.00 96.00 96.00 97.00 64.00 32.00 32.00 193.00 33.00 225.00 32.00 128.00 0.00 65.00 32.00 32.00 32.00 64.00 64.00 0.00 32.00 32.00 97.00 33.00 32.00 32.00 97.00 32.00 32.00 64.00 0.00 64.00 -65.00 65.00 -32.00 96.00 32.00 0.00 33.00 -64.00 64.00 -32.00 32.00 -65.00 64.00 -32.00 65.00 -32.00 0.00 -64.00 32.00 0.00 128.00 -32.00 65.00 64.00 160.00 -32.00 65.00 0.00 225.00 96.00 32.00 0.00 32.00 -96.00 32.00 0.00 33.00 -32.00 -33.00 0.00 65.00 32.00 0.00 0.00 32.00 -64.00 64.00 0.00 32.00 -65.00 129.00 -64.00 32.00 0.00 32.00 -97.00 129.00 33.00 64.00 -65.00 193.00 0.00 64.00 -32.00 33.00 -32.00 160.00 -32.00 257.00 32.00 129.00 -32.00 64.00 -129.00 65.00 32.00 64.00 -64.00 257.00 -482.00 193.00 -32.00 64.00 -65.00 33.00 -161.00 32.00 -32.00 64.00 0.00 64.00 97.00 258.00 32.00 32.00 161.00 193.00 0.00 32.00 32.00 32.00 0.00 32.00 0.00 64.00 0.00 97.00 0.00 32.00 -97.00 193.00 -64.00 193.00 32.00 193.00 97.00 96.00 128.00 32.00 258.00 97.00 32.00 0.00 32.00 32.00 64.00 64.00 0.00 33.00 32.00 96.00 0.00 64.00 -32.00 386.00 0.00 32.00 0.00 65.00 -161.00 289.00 -32.00 96.00 -64.00 161.00 -32.00 129.00 32.00 64.00 32.00 32.00 0.00 65.00 -32.00 32.00 0.00 32.00 -161.00 -64.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -64.00 0.00 -33.00 32.00 0.00 65.00 -32.00 32.00 -64.00 0.00 -32.00 64.00 -32.00 32.00 -33.00 64.00 0.00 33.00 -96.00 0.00 -32.00 32.00 -32.00 32.00 -97.00 32.00 -32.00 32.00 -64.00 32.00 32.00 129.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 0.00 65.00 -129.00 32.00 0.00 32.00 -32.00 32.00 32.00 129.00 -96.00 96.00 -97.00 0.00 0.00 -32.00 -32.00 -64.00 -32.00 -32.00 -97.00 0.00 -32.00 64.00 32.00 0.00 0.00 96.00 -32.00 0.00 -32.00 33.00 0.00 64.00 0.00 64.00 -32.00 64.00 -64.00 65.00 -65.00 -65.00 -96.00 -64.00 -32.00 -32.00 0.00 -32.00 -65.00 -64.00 -64.00 32.00 -32.00 0.00 -32.00 96.00 -161.00 32.00 -32.00 97.00 -32.00 161.00 -129.00 -33.00 0.00 97.00 -32.00 96.00 -32.00 32.00 -32.00 0.00 -33.00 65.00 -64.00 32.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 0.00 64.00 -65.00 129.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 0.00 65.00 32.00 96.00 -64.00 64.00 -64.00 0.00 -32.00 32.00 -65.00 33.00 -161.00 0.00 -96.00 128.00 -32.00 32.00 -129.00 65.00 -96.00 0.00 -32.00 0.00 -65.00 0.00 0.00 32.00 -64.00 64.00 -32.00 97.00 -64.00 128.00 -65.00 161.00 -32.00 -32.00 -129.00 161.00 -64.00 64.00 -64.00 0.00 -32.00 96.00 -32.00 0.00 0.00 33.00 -33.00 32.00 0.00 64.00 -32.00 64.00 -32.00 0.00 -32.00 129.00 -64.00 32.00 0.00 129.00 -97.00 32.00 -32.00 -64.00 -64.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 64.00 -64.00 0.00 0.00 64.00 -32.00 0.00 -193.00 32.00 0.00 65.00 -32.00 64.00 -225.00 0.00 0.00 32.00 -33.00 129.00 0.00 96.00 0.00 129.00 -128.00 96.00 -65.00 65.00 -32.00 0.00 -96.00 96.00 0.00 96.00 -97.00 97.00 -64.00 289.00 -64.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 65.00 -96.00 32.00 -33.00 64.00 -32.00 32.00 -32.00 0.00 -64.00 -64.00 -65.00 0.00 -32.00 0.00 -64.00 -97.00 -129.00 97.00 -128.00 -64.00 -65.00 32.00 -64.00 0.00 -64.00 0.00 -161.00 96.00 -96.00 32.00 -97.00 0.00 -193.00 0.00 -64.00 32.00 -64.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 32.00 -97.00 65.00 -32.00 32.00 -96.00 0.00 -97.00 32.00 -32.00 0.00 -32.00 64.00 -161.00 97.00 0.00 128.00 -32.00 0.00 -32.00 33.00 -129.00 64.00 -96.00 64.00 -32.00 32.00 0.00 129.00 -32.00 32.00 -65.00 32.00 -32.00 32.00 -96.00 -32.00 -65.00 32.00 -32.00 33.00 32.00 64.00 -32.00 64.00 -128.00 32.00 -129.00 -32.00 -96.00 32.00 -97.00 -32.00 -32.00 32.00 -32.00 65.00 -97.00 128.00 -32.00 -32.00 -64.00 32.00 -65.00 0.00 -96.00 32.00 -64.00 0.00 0.00 -32.00 -97.00 -32.00 -32.00 -32.00 0.00 32.00 0.00 97.00 -64.00 64.00 -64.00 64.00 -65.00 32.00 0.00 97.00 -32.00 32.00 -193.00 32.00 -64.00 0.00 0.00 -96.00 -65.00 -97.00 0.00 -96.00 -32.00 -65.00 -32.00 0.00 -64.00 65.00 -32.00 0.00 -32.00 0.00 -97.00 -129.00 -64.00 -32.00 -97.00 0.00 -96.00 -64.00 0.00 -33.00 -32.00 -64.00 -32.00 -128.00 0.00 -65.00 32.00 -96.00 -32.00 -32.00 0.00 -33.00 -65.00 -64.00 -64.00 -32.00 -96.00 32.00 -33.00 0.00 -193.00 32.00 0.00 -96.00 -32.00 0.00 -64.00 0.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 -33.00 0.00 0.00 -33.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 65.00 -65.00 -65.00 -64.00 0.00 -64.00 161.00 -97.00 64.00 -32.00 -32.00 -32.00 -64.00 -64.00 0.00 -32.00 0.00 -65.00 32.00 -128.00 0.00 -32.00 64.00 -33.00 0.00 -32.00 0.00 -32.00 -128.00 -32.00 0.00 -64.00 -32.00 -65.00 -97.00 -32.00 0.00 -96.00 0.00 -97.00 -96.00 -96.00 -161.00 -32.00 -64.00 -129.00 -161.00 -64.00 -32.00 -32.00 0.00 -65.00 -32.00 -96.00 32.00 -64.00 32.00 -129.00 129.00 -64.00 64.00 -33.00 0.00 -96.00 32.00 -32.00 0.00 -97.00 96.00 -96.00 129.00 -64.00 32.00 -193.00 161.00 -97.00 64.00 -289.00 97.00 -97.00 32.00 -64.00 64.00 -64.00 129.00 -97.00 64.00 -160.00 257.00 0.00 65.00 32.00 128.00 0.00 129.00 64.00 32.00 -32.00 0.00 0.00 32.00 -32.00 65.00 96.00 32.00 129.00 225.00 0.00 64.00 0.00 32.00 0.00 65.00 64.00 192.00 64.00 33.00 33.00 32.00 192.00 64.00 33.00 64.00 32.00 0.00 64.00 0.00 64.00 65.00 65.00 32.00 64.00 64.00 0.00 32.00 -64.00 65.00 0.00 64.00 -32.00 64.00 -97.00 32.00 0.00 65.00 -64.00 0.00 0.00 32.00 0.00 64.00 64.00 0.00 32.00 32.00 0.00 32.00 -64.00 129.00 96.00 96.00 65.00 33.00 32.00 64.00 -32.00 129.00 -97.00 64.00 -32.00 96.00 0.00 65.00 -161.00 0.00 -128.00 0.00 -32.00 32.00 -65.00 96.00 32.00 65.00 0.00 96.00 -32.00 225.00 -96.00 129.00 -193.00 193.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 64.00 0.00 129.00 -64.00 64.00 -97.00 65.00 -64.00 64.00 -32.00 32.00 -33.00 97.00 -64.00 64.00 -32.00 161.00 0.00 32.00 -96.00 0.00 -129.00 0.00 -129.00 -65.00 -64.00 -32.00 -64.00 0.00 -32.00 65.00 -33.00 128.00 33.00 161.00 0.00 32.00 -65.00 64.00 -32.00 33.00 -96.00 321.00 -33.00 64.00 -32.00 33.00 -96.00 0.00 -32.00 32.00 -65.00 128.00 -32.00 65.00 -32.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 -64.00 -32.00 -97.00 -65.00 -32.00 0.00 -96.00 65.00 -32.00 0.00 -97.00 -33.00 -96.00 -64.00 -97.00 -193.00 -32.00 -32.00 -32.00 -32.00 -64.00 -32.00 -65.00 0.00 -32.00 32.00 -193.00 225.00 -32.00 32.00 -96.00 32.00 -129.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 65.00 -65.00 64.00 -96.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -128.00 -96.00 -129.00 0.00 -64.00 32.00 -65.00 128.00 -32.00 32.00 -64.00 33.00 -64.00 0.00 -32.00 0.00 -65.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 64.00 193.00 -32.00 96.00 0.00 33.00 -96.00 32.00 -129.00 -32.00 -64.00 32.00 -32.00 32.00 -97.00 32.00 -32.00 32.00 0.00 97.00 -97.00 0.00 -32.00 0.00 -96.00 193.00 0.00 96.00 -32.00 32.00 -32.00 32.00 -129.00 97.00 -32.00 -65.00 -32.00 0.00 -97.00 97.00 -64.00 0.00 -32.00 32.00 -32.00 0.00 -97.00 97.00 -193.00 -161.00 0.00 -32.00 -32.00 0.00 -96.00 -33.00 -33.00 0.00 -64.00 0.00 -64.00 -96.00 -64.00 -32.00 -33.00 -32.00 -64.00 -32.00 -32.00 -33.00 -64.00 0.00 -97.00 33.00 -32.00 -33.00 -96.00 0.00 -97.00 0.00 -257.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -129.00 0.00 -32.00 -32.00 -64.00 -161.00 0.00 -32.00 -97.00 -32.00 -161.00 -32.00 -161.00 -129.00 -64.00 -289.00 0.00 -33.00 -32.00 -32.00 -32.00 -64.00 -64.00 0.00 -65.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -33.00 -32.00 -225.00 -32.00 -96.00 32.00 -65.00 0.00 -96.00 -32.00 -64.00 64.00 -97.00 128.00 -128.00 33.00 -32.00 0.00 -65.00 -129.00 -96.00 -32.00 -97.00 32.00 -160.00 -32.00 -65.00 -129.00 -96.00 -64.00 -129.00 -64.00 -32.00 -33.00 -32.00 -96.00 -64.00 -32.00 -33.00 0.00 -160.00 -32.00 -33.00 -129.00 -96.00 -64.00 -96.00 0.00 -65.00 0.00 -128.00 0.00 -97.00 -65.00 -96.00 -64.00 -65.00 -32.00 0.00 -161.00 97.00 -64.00 0.00 -97.00 96.00 -64.00 32.00 -96.00 0.00 -65.00 0.00 -32.00 0.00 -64.00 97.00 32.00 64.00 32.00 97.00 -32.00 96.00 -64.00 64.00 -225.00 129.00 -225.00 -32.00 -193.00 -97.00 -225.00 65.00 -97.00 32.00z\"\n          },\n          ce: {\n            name: \"CE\",\n            path: \"M160014.00 43760.00l0.00 -64.00 64.00 -65.00 0.00 -32.00 64.00 -160.00 290.00 -515.00 0.00 -96.00 32.00 -65.00 96.00 -96.00 64.00 -64.00 0.00 -65.00 65.00 0.00 0.00 -32.00 64.00 -32.00 0.00 -96.00 -32.00 0.00 32.00 -65.00 0.00 -32.00 32.00 -64.00 -32.00 -32.00 32.00 0.00 -32.00 -65.00 0.00 -64.00 -64.00 -96.00 0.00 -65.00 -65.00 0.00 -64.00 0.00 -96.00 -64.00 0.00 -32.00 -32.00 0.00 0.00 -129.00 225.00 -128.00 32.00 -33.00 64.00 -32.00 129.00 32.00 193.00 0.00 64.00 -32.00 257.00 32.00 97.00 33.00 32.00 -33.00 32.00 33.00 129.00 0.00 257.00 -33.00 64.00 -32.00 129.00 -32.00 64.00 -32.00 193.00 0.00 32.00 -64.00 32.00 32.00 97.00 0.00 0.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 32.00 0.00 32.00 96.00 65.00 -32.00 64.00 0.00 97.00 -32.00 96.00 -96.00 64.00 0.00 129.00 0.00 225.00 0.00 64.00 -33.00 129.00 33.00 257.00 -33.00 97.00 -32.00 32.00 -32.00 160.00 -64.00 65.00 -65.00 0.00 -64.00 96.00 -32.00 193.00 96.00 97.00 33.00 160.00 0.00 129.00 0.00 225.00 -33.00 193.00 33.00 129.00 0.00 0.00 -33.00 193.00 33.00 160.00 32.00 -32.00 -32.00 161.00 96.00 32.00 32.00 97.00 -32.00 0.00 -32.00 160.00 0.00 97.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 0.00 65.00 0.00 96.00 32.00 32.00 -32.00 -64.00 0.00 32.00 -32.00 161.00 97.00 64.00 0.00 -64.00 -33.00 -65.00 0.00 65.00 0.00 161.00 65.00 -65.00 -32.00 129.00 32.00 32.00 64.00 96.00 32.00 33.00 0.00 32.00 32.00 32.00 0.00 32.00 0.00 129.00 97.00 128.00 96.00 65.00 32.00 128.00 97.00 97.00 32.00 128.00 129.00 32.00 0.00 97.00 64.00 129.00 0.00 64.00 32.00 64.00 64.00 32.00 33.00 32.00 0.00 65.00 -33.00 64.00 33.00 64.00 96.00 65.00 96.00 32.00 33.00 64.00 0.00 97.00 64.00 160.00 96.00 161.00 65.00 97.00 128.00 128.00 32.00 97.00 32.00 96.00 97.00 64.00 32.00 97.00 -32.00 96.00 32.00 97.00 97.00 32.00 32.00 32.00 0.00 64.00 32.00 65.00 32.00 96.00 0.00 32.00 0.00 65.00 64.00 64.00 65.00 193.00 225.00 96.00 160.00 32.00 0.00 0.00 33.00 97.00 64.00 64.00 0.00 32.00 0.00 33.00 0.00 32.00 96.00 96.00 129.00 97.00 64.00 0.00 -32.00 64.00 65.00 64.00 0.00 65.00 -33.00 32.00 0.00 32.00 -32.00 64.00 0.00 161.00 97.00 64.00 128.00 64.00 32.00 0.00 65.00 33.00 0.00 32.00 128.00 64.00 65.00 97.00 0.00 96.00 96.00 64.00 64.00 97.00 33.00 64.00 0.00 32.00 0.00 32.00 32.00 161.00 193.00 32.00 64.00 97.00 96.00 64.00 0.00 129.00 65.00 193.00 193.00 32.00 32.00 96.00 32.00 129.00 0.00 64.00 32.00 64.00 0.00 65.00 32.00 64.00 32.00 32.00 33.00 32.00 0.00 65.00 32.00 32.00 0.00 64.00 0.00 32.00 32.00 65.00 -32.00 64.00 0.00 0.00 -32.00 0.00 -33.00 -32.00 -32.00 64.00 65.00 161.00 289.00 0.00 32.00 161.00 225.00 160.00 257.00 97.00 129.00 129.00 96.00 64.00 65.00 32.00 32.00 -64.00 -32.00 32.00 32.00 32.00 0.00 0.00 -32.00 32.00 0.00 64.00 0.00 33.00 32.00 64.00 96.00 128.00 161.00 33.00 32.00 96.00 129.00 32.00 32.00 65.00 97.00 128.00 192.00 32.00 33.00 129.00 225.00 129.00 64.00 225.00 257.00 32.00 32.00 128.00 129.00 97.00 64.00 32.00 32.00 129.00 129.00 193.00 193.00 128.00 96.00 193.00 129.00 64.00 0.00 129.00 97.00 64.00 0.00 32.00 0.00 65.00 32.00 32.00 -32.00 32.00 128.00 -32.00 0.00 64.00 97.00 64.00 128.00 65.00 129.00 96.00 96.00 65.00 32.00 32.00 33.00 96.00 128.00 64.00 65.00 65.00 64.00 225.00 193.00 128.00 64.00 129.00 32.00 64.00 -32.00 129.00 -64.00 32.00 32.00 64.00 64.00 0.00 32.00 65.00 0.00 257.00 129.00 161.00 32.00 64.00 32.00 32.00 32.00 0.00 -32.00 0.00 32.00 65.00 0.00 64.00 33.00 128.00 96.00 65.00 97.00 32.00 64.00 64.00 225.00 65.00 161.00 -33.00 32.00 -450.00 96.00 -450.00 97.00 -96.00 32.00 -804.00 193.00 -65.00 193.00 -32.00 160.00 -96.00 258.00 -161.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 129.00 -161.00 161.00 -32.00 257.00 -65.00 96.00 0.00 65.00 33.00 32.00 0.00 64.00 -33.00 97.00 0.00 64.00 33.00 64.00 0.00 32.00 -33.00 0.00 -32.00 33.00 -64.00 64.00 -129.00 96.00 -64.00 32.00 -32.00 97.00 0.00 32.00 -32.00 32.00 32.00 97.00 -32.00 64.00 -97.00 129.00 0.00 32.00 0.00 32.00 -32.00 161.00 -32.00 32.00 -32.00 64.00 -64.00 32.00 -65.00 0.00 -64.00 129.00 -64.00 32.00 -161.00 96.00 0.00 33.00 -32.00 32.00 0.00 64.00 -65.00 64.00 -96.00 193.00 -97.00 33.00 -96.00 96.00 -32.00 32.00 0.00 129.00 -32.00 96.00 0.00 64.00 64.00 -32.00 64.00 0.00 0.00 32.00 65.00 0.00 -65.00 129.00 -64.00 129.00 -161.00 160.00 0.00 33.00 -64.00 64.00 32.00 64.00 -64.00 193.00 -65.00 64.00 -32.00 65.00 -64.00 64.00 0.00 64.00 0.00 33.00 -64.00 32.00 -32.00 0.00 -33.00 32.00 -64.00 32.00 -193.00 161.00 -32.00 64.00 0.00 161.00 -32.00 32.00 -32.00 0.00 -65.00 64.00 0.00 32.00 -64.00 0.00 -64.00 65.00 -64.00 -32.00 -97.00 0.00 -32.00 -65.00 0.00 65.00 -97.00 64.00 -32.00 -32.00 -32.00 -65.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 -32.00 32.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 -96.00 97.00 -64.00 32.00 32.00 64.00 -65.00 64.00 -32.00 0.00 -32.00 97.00 -32.00 64.00 0.00 32.00 -129.00 129.00 0.00 64.00 -128.00 32.00 0.00 97.00 32.00 32.00 0.00 32.00 -32.00 32.00 -32.00 65.00 -65.00 -33.00 -32.00 97.00 -32.00 32.00 -64.00 32.00 0.00 32.00 32.00 0.00 0.00 65.00 0.00 32.00 -65.00 64.00 0.00 64.00 33.00 97.00 64.00 32.00 -32.00 32.00 -32.00 0.00 0.00 64.00 -65.00 0.00 0.00 33.00 -32.00 32.00 -32.00 0.00 32.00 32.00 32.00 0.00 32.00 0.00 0.00 32.00 33.00 0.00 128.00 0.00 32.00 0.00 65.00 -32.00 64.00 64.00 -32.00 0.00 -161.00 129.00 0.00 32.00 0.00 32.00 -64.00 32.00 0.00 97.00 -129.00 128.00 -64.00 65.00 -32.00 64.00 32.00 32.00 -64.00 97.00 0.00 32.00 -33.00 32.00 0.00 32.00 -64.00 32.00 64.00 65.00 0.00 64.00 -64.00 64.00 -32.00 32.00 -32.00 32.00 0.00 65.00 64.00 32.00 0.00 64.00 -32.00 32.00 -64.00 33.00 32.00 0.00 -32.00 0.00 -32.00 96.00 0.00 32.00 32.00 97.00 32.00 32.00 0.00 64.00 32.00 32.00 0.00 32.00 0.00 32.00 64.00 0.00 32.00 65.00 65.00 32.00 0.00 64.00 -65.00 -32.00 -64.00 0.00 32.00 32.00 0.00 32.00 -64.00 33.00 -32.00 32.00 -32.00 32.00 -65.00 64.00 33.00 32.00 0.00 33.00 -33.00 32.00 0.00 32.00 -32.00 32.00 -64.00 32.00 -64.00 0.00 0.00 64.00 -65.00 0.00 -32.00 0.00 0.00 33.00 -129.00 32.00 -32.00 32.00 32.00 32.00 0.00 64.00 33.00 65.00 -65.00 32.00 32.00 64.00 65.00 0.00 0.00 32.00 32.00 32.00 -32.00 0.00 -32.00 65.00 -33.00 0.00 -32.00 32.00 32.00 32.00 33.00 0.00 96.00 64.00 64.00 33.00 33.00 0.00 96.00 32.00 0.00 64.00 97.00 32.00 0.00 32.00 -33.00 65.00 33.00 32.00 32.00 32.00 32.00 32.00 0.00 32.00 -32.00 97.00 -32.00 64.00 -33.00 32.00 0.00 129.00 -32.00 32.00 32.00 32.00 -32.00 32.00 0.00 65.00 97.00 -33.00 96.00 0.00 32.00 33.00 65.00 0.00 32.00 32.00 -32.00 64.00 32.00 32.00 0.00 64.00 64.00 33.00 32.00 32.00 64.00 32.00 129.00 -64.00 32.00 32.00 -32.00 32.00 32.00 64.00 32.00 0.00 0.00 64.00 33.00 97.00 -33.00 64.00 -32.00 32.00 0.00 65.00 0.00 32.00 0.00 32.00 -64.00 64.00 -64.00 97.00 -33.00 96.00 -32.00 32.00 -32.00 65.00 64.00 0.00 0.00 96.00 -64.00 0.00 0.00 32.00 -32.00 32.00 0.00 33.00 -193.00 32.00 0.00 32.00 32.00 32.00 32.00 64.00 -64.00 65.00 -32.00 64.00 32.00 32.00 -64.00 0.00 32.00 32.00 0.00 65.00 -32.00 32.00 32.00 32.00 -32.00 32.00 0.00 32.00 -97.00 32.00 -32.00 33.00 -96.00 0.00 -32.00 32.00 0.00 96.00 -33.00 32.00 0.00 32.00 0.00 33.00 -32.00 0.00 -64.00 32.00 32.00 32.00 -32.00 32.00 -32.00 64.00 -32.00 0.00 -33.00 0.00 -64.00 33.00 -32.00 -33.00 0.00 33.00 -32.00 32.00 -64.00 0.00 -65.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 64.00 64.00 32.00 0.00 64.00 -32.00 97.00 -64.00 0.00 -64.00 0.00 -33.00 0.00 -64.00 -32.00 -64.00 64.00 0.00 96.00 -65.00 33.00 -32.00 -33.00 -64.00 0.00 0.00 65.00 -32.00 0.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 -32.00 64.00 32.00 65.00 -32.00 64.00 -32.00 64.00 -32.00 32.00 0.00 33.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 -96.00 -32.00 0.00 -32.00 -32.00 -97.00 -32.00 0.00 -32.00 32.00 -129.00 -32.00 -64.00 97.00 -129.00 96.00 -32.00 -32.00 64.00 -64.00 -32.00 -65.00 0.00 -64.00 -32.00 -129.00 -32.00 -64.00 0.00 -64.00 -97.00 -65.00 -32.00 -96.00 -64.00 -32.00 -129.00 0.00 -64.00 -97.00 -97.00 -32.00 -64.00 32.00 -64.00 0.00 -32.00 32.00 -65.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 -96.00 -32.00 0.00 -32.00 -32.00 -33.00 -32.00 33.00 -129.00 0.00 0.00 -65.00 32.00 -32.00 0.00 -96.00 32.00 -33.00 65.00 -64.00 32.00 0.00 -32.00 -32.00 -32.00 0.00 -33.00 -32.00 -64.00 -97.00 -32.00 -128.00 0.00 -32.00 -64.00 -33.00 -129.00 -128.00 -64.00 -64.00 -129.00 -97.00 -32.00 0.00 -64.00 -32.00 -129.00 -64.00 -32.00 0.00 -129.00 -33.00 -64.00 -64.00 -32.00 -64.00 -65.00 -64.00 -32.00 0.00 -128.00 -97.00 -97.00 -64.00 -64.00 -64.00 -64.00 -97.00 -33.00 0.00 -32.00 -32.00 -96.00 0.00 -97.00 -64.00 -64.00 -65.00 -32.00 0.00 -96.00 32.00 -97.00 0.00 -225.00 33.00 -161.00 32.00 -64.00 0.00 -64.00 0.00 -65.00 0.00 -96.00 -32.00 -32.00 32.00 -161.00 64.00 -64.00 -32.00 -33.00 0.00 -225.00 257.00 -96.00 32.00 -129.00 -32.00 -64.00 64.00 -257.00 0.00 -354.00 65.00 -450.00 96.00 -129.00 -193.00 -32.00 -32.00 -64.00 0.00 -129.00 -64.00 -257.00 64.00 -225.00 0.00 -386.00 0.00 -225.00 32.00 64.00 -257.00 -32.00 -64.00 129.00 -65.00 32.00 -64.00 -32.00 -129.00 32.00 -257.00 32.00 -160.00 32.00 -33.00 0.00 -64.00 65.00 -193.00 -33.00 -64.00 97.00 -129.00 0.00 -32.00 64.00 -32.00 65.00 -129.00 0.00 -32.00 64.00 -64.00 0.00 -32.00 -32.00 0.00 0.00 -65.00 32.00 33.00 0.00 -33.00 96.00 -32.00 0.00 -32.00 -96.00 -32.00 0.00 -225.00 32.00 -65.00 -64.00 -160.00 32.00 -65.00 0.00 -128.00 64.00 -32.00 32.00 0.00 32.00 -65.00 65.00 -64.00 32.00 -32.00 64.00 -64.00 0.00 -33.00 -96.00 -32.00 -65.00 32.00 -64.00 65.00 -64.00 0.00 -32.00 -32.00 -32.00 -97.00 -33.00 -32.00 -32.00 -97.00 0.00 -32.00 -64.00 -64.00 -32.00 -32.00 -65.00 -32.00 -128.00 0.00 -225.00 -32.00 -193.00 -33.00 -32.00 -32.00 -97.00 -64.00 -96.00 -96.00 -258.00 0.00 -96.00 -97.00 -32.00 -32.00 64.00 -129.00 0.00 -32.00 -64.00 -64.00 0.00 -32.00 -64.00 -161.00 -193.00 -193.00 0.00 -64.00 0.00 -65.00 -32.00 -128.00 0.00 -64.00 0.00 -161.00 -33.00 -161.00 0.00 -64.00 65.00 -33.00 32.00 -160.00 0.00 -32.00 0.00 -65.00 0.00 -64.00 -32.00 -32.00 -65.00 -32.00 -32.00 -32.00 -64.00 -161.00 -129.00 -161.00 0.00 -97.00 0.00 -128.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 32.00 -96.00 -64.00 -129.00 -64.00 -225.00 -65.00 -64.00 -96.00 32.00 0.00 -32.00 0.00 -32.00 0.00 -97.00 64.00 -64.00 0.00 -32.00 32.00 -32.00 33.00 -97.00 0.00 -257.00 -97.00 -97.00 32.00 -96.00 -64.00 -161.00 -32.00 -96.00 32.00 -161.00 -32.00 -129.00 -32.00 -128.00 32.00 -65.00 -64.00 -96.00 -33.00 -129.00 -32.00 -64.00 32.00 -32.00 97.00 -32.00 32.00 -64.00 32.00 -129.00 -32.00 -64.00 -32.00 -65.00 0.00 -128.00 -97.00 -65.00 0.00 -64.00 -32.00 -64.00 32.00 -32.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 65.00 -64.00 0.00 -33.00 -32.00 -64.00 -33.00 -32.00 -32.00 -32.00 -32.00 -65.00 0.00 -32.00 32.00 -32.00 97.00 0.00 32.00 -32.00 -32.00 -64.00 -65.00 -97.00 -32.00 -32.00 32.00 -96.00 65.00 -33.00 32.00 -96.00 0.00 -64.00 -64.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 64.00 -32.00 -32.00 -65.00 -32.00 0.00 -97.00 -64.00 97.00 -64.00 -33.00 -129.00 33.00 -96.00 -33.00 -65.00 -32.00 0.00 -64.00 0.00 -64.00 -96.00 -32.00 0.00 -33.00 32.00 -32.00 -96.00 -128.00 -65.00 0.00 -96.00 -65.00 32.00 -32.00 -96.00 -32.00 0.00 -64.00 64.00 -129.00 -64.00 0.00 -65.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 -161.00 0.00 32.00 -129.00 0.00 -96.00 -64.00 -33.00 0.00 -64.00 -32.00 0.00 -32.00 32.00 -161.00 -225.00 -65.00 -32.00 -32.00 64.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -64.00 -64.00 -97.00 32.00 -64.00 -97.00 -129.00 65.00 -64.00 -33.00 -161.00 65.00 -32.00 0.00 -32.00 32.00 -96.00 64.00 -33.00 0.00 -32.00 -128.00 -32.00 -65.00 -32.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 -65.00 128.00 -128.00 129.00 -161.00 -32.00 -32.00 -97.00 -129.00 -128.00 -64.00 0.00 -65.00 32.00 -96.00 0.00 -32.00 0.00 -32.00 -64.00 0.00 -33.00 -32.00 33.00 0.00 64.00 0.00 32.00 -97.00 32.00 0.00 32.00 -96.00 65.00 -65.00 0.00 -128.00 64.00 -97.00 0.00 -128.00 0.00 -33.00 64.00 -128.00 0.00 -129.00 0.00 -32.00 65.00 -64.00 64.00 -129.00 64.00 -32.00 0.00 -32.00 0.00 -64.00 -64.00 -386.00 161.00 -258.00 64.00 -64.00 -129.00 -32.00 -64.00 -32.00 0.00 -64.00 -64.00 -97.00 32.00 -32.00 64.00 -193.00 -32.00 -64.00 64.00 -65.00 0.00 -32.00 -32.00 -32.00 -96.00 0.00 -97.00 -32.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 -64.00 32.00 -64.00 0.00 -64.00 32.00 -65.00 32.00 -32.00 0.00 0.00 -32.00 97.00 -64.00 -33.00 -65.00 -32.00 -64.00 32.00 -32.00 0.00 -32.00 33.00 0.00 0.00 -32.00 32.00 0.00 64.00 -161.00 -64.00 -129.00 -65.00 -64.00 -32.00 -64.00 -32.00 -65.00 0.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -97.00 -33.00 0.00 0.00 -32.00 -64.00 64.00 0.00 -32.00 161.00 -161.00 64.00 -96.00 -64.00 -64.00 32.00 -161.00 32.00 -32.00 65.00 0.00 0.00 -32.00 -97.00 -65.00 -96.00 0.00 -65.00 -64.00 -64.00 0.00 -96.00 0.00 -65.00 -32.00 -32.00 -32.00 32.00 -33.00 32.00 -225.00 -64.00 -160.00 -64.00 -32.00 -65.00 -33.00 0.00 -32.00 33.00 -32.00 0.00 -32.00 128.00 0.00 65.00 -97.00 0.00 -160.00 32.00 -33.00 96.00 -32.00 -64.00 0.00 -64.00 32.00 0.00 -32.00 -33.00 -128.00 -64.00 -65.00 0.00 -64.00 0.00 -96.00 0.00 -32.00 -32.00 0.00 -161.00 0.00 -32.00 -65.00 -32.00 0.00 0.00 -96.00 0.00 -65.00 -97.00 33.00 0.00 -33.00 33.00 -64.00z\"\n          },\n          rn: {\n            name: \"RN\",\n            path: \"M173454.00 58068.00l0.00 -32.00 64.00 -32.00 32.00 -32.00 32.00 -97.00 65.00 33.00 32.00 -65.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -97.00 128.00 -32.00 0.00 -64.00 129.00 -129.00 0.00 -32.00 32.00 -64.00 32.00 -97.00 32.00 0.00 65.00 -64.00 -32.00 -64.00 64.00 -32.00 96.00 -97.00 32.00 0.00 33.00 -32.00 32.00 32.00 32.00 -32.00 0.00 64.00 32.00 0.00 0.00 32.00 32.00 65.00 32.00 32.00 97.00 -64.00 0.00 -65.00 32.00 65.00 97.00 0.00 64.00 32.00 64.00 -65.00 64.00 0.00 0.00 -32.00 65.00 -64.00 32.00 0.00 32.00 -32.00 0.00 -161.00 32.00 -64.00 193.00 -161.00 64.00 -32.00 33.00 -32.00 32.00 0.00 64.00 -32.00 0.00 -33.00 0.00 -64.00 64.00 -64.00 32.00 -65.00 65.00 -64.00 64.00 -193.00 -32.00 -64.00 64.00 -64.00 0.00 -33.00 161.00 -160.00 64.00 -129.00 65.00 -129.00 -65.00 0.00 0.00 -32.00 -64.00 0.00 -64.00 32.00 0.00 -64.00 32.00 -96.00 0.00 -129.00 32.00 -32.00 96.00 -96.00 97.00 -33.00 96.00 -193.00 65.00 -64.00 0.00 -64.00 32.00 -32.00 0.00 -33.00 161.00 -96.00 64.00 -32.00 64.00 -129.00 65.00 0.00 64.00 -32.00 32.00 -64.00 32.00 -32.00 32.00 -161.00 0.00 -32.00 0.00 -32.00 97.00 -129.00 32.00 -64.00 -32.00 -97.00 32.00 -32.00 0.00 -32.00 32.00 -97.00 64.00 -32.00 129.00 -96.00 64.00 -64.00 32.00 -33.00 33.00 0.00 0.00 -32.00 -33.00 -64.00 0.00 -64.00 33.00 -97.00 0.00 -64.00 -33.00 -32.00 0.00 -65.00 65.00 -96.00 32.00 -257.00 161.00 -161.00 32.00 -129.00 32.00 -32.00 32.00 -32.00 161.00 -64.00 96.00 -258.00 32.00 -160.00 65.00 -193.00 804.00 -193.00 96.00 -32.00 450.00 -97.00 450.00 -96.00 33.00 -32.00 32.00 64.00 96.00 161.00 64.00 64.00 129.00 129.00 96.00 64.00 33.00 0.00 96.00 32.00 64.00 -32.00 65.00 -32.00 64.00 0.00 64.00 32.00 129.00 64.00 64.00 32.00 65.00 -32.00 128.00 -64.00 97.00 0.00 32.00 0.00 32.00 -32.00 32.00 -32.00 193.00 128.00 97.00 32.00 96.00 0.00 96.00 97.00 97.00 128.00 193.00 193.00 161.00 65.00 96.00 64.00 64.00 -32.00 -32.00 32.00 65.00 64.00 32.00 -32.00 32.00 -32.00 32.00 0.00 0.00 96.00 64.00 33.00 97.00 -33.00 193.00 33.00 32.00 -65.00 64.00 32.00 32.00 -32.00 32.00 0.00 33.00 0.00 128.00 32.00 32.00 -32.00 129.00 0.00 96.00 -64.00 97.00 0.00 225.00 32.00 161.00 32.00 160.00 65.00 97.00 0.00 32.00 -33.00 64.00 33.00 97.00 32.00 0.00 32.00 96.00 -64.00 65.00 0.00 160.00 32.00 418.00 0.00 129.00 -32.00 129.00 -65.00 96.00 -64.00 97.00 0.00 96.00 -64.00 129.00 0.00 32.00 -33.00 96.00 0.00 161.00 0.00 193.00 65.00 128.00 64.00 129.00 0.00 129.00 32.00 128.00 -32.00 32.00 32.00 33.00 0.00 64.00 32.00 64.00 33.00 193.00 32.00 32.00 32.00 65.00 0.00 257.00 64.00 32.00 32.00 32.00 -32.00 64.00 0.00 0.00 -32.00 226.00 129.00 160.00 32.00 129.00 64.00 96.00 0.00 97.00 129.00 32.00 64.00 64.00 32.00 129.00 97.00 129.00 160.00 32.00 65.00 32.00 32.00 32.00 96.00 64.00 258.00 32.00 64.00 65.00 64.00 64.00 32.00 64.00 65.00 0.00 64.00 65.00 96.00 32.00 0.00 0.00 161.00 32.00 32.00 64.00 65.00 32.00 32.00 0.00 -32.00 0.00 96.00 33.00 64.00 0.00 33.00 32.00 32.00 0.00 96.00 32.00 64.00 32.00 97.00 32.00 0.00 0.00 32.00 0.00 129.00 32.00 96.00 32.00 0.00 0.00 193.00 0.00 32.00 33.00 65.00 64.00 0.00 0.00 32.00 -32.00 225.00 0.00 64.00 32.00 32.00 0.00 97.00 32.00 64.00 32.00 0.00 0.00 32.00 0.00 322.00 32.00 64.00 33.00 32.00 32.00 -32.00 32.00 0.00 0.00 96.00 0.00 97.00 0.00 32.00 0.00 64.00 32.00 129.00 97.00 0.00 32.00 96.00 32.00 0.00 0.00 33.00 32.00 64.00 -32.00 129.00 32.00 96.00 0.00 32.00 32.00 0.00 0.00 97.00 0.00 257.00 0.00 32.00 32.00 225.00 0.00 -32.00 32.00 32.00 0.00 32.00 33.00 97.00 32.00 64.00 32.00 0.00 32.00 32.00 96.00 0.00 0.00 32.00 33.00 258.00 0.00 96.00 -33.00 32.00 33.00 129.00 32.00 96.00 32.00 32.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 32.00 32.00 129.00 64.00 193.00 0.00 97.00 0.00 64.00 0.00 64.00 -32.00 32.00 -64.00 32.00 -97.00 33.00 -32.00 0.00 -32.00 0.00 -65.00 64.00 -96.00 32.00 -32.00 0.00 -129.00 -129.00 -32.00 0.00 -32.00 33.00 -32.00 0.00 -32.00 128.00 -65.00 0.00 -64.00 97.00 -32.00 0.00 -64.00 32.00 -129.00 -32.00 -32.00 0.00 -32.00 -65.00 -33.00 -96.00 -32.00 0.00 -32.00 64.00 -128.00 0.00 -97.00 64.00 -257.00 0.00 -64.00 -32.00 -97.00 -128.00 -64.00 -32.00 -97.00 -65.00 -32.00 0.00 -96.00 -32.00 -65.00 0.00 0.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -64.00 0.00 -32.00 0.00 -33.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 0.00 -32.00 -97.00 0.00 -32.00 -32.00 0.00 -32.00 -64.00 -64.00 -65.00 0.00 -32.00 0.00 -64.00 -33.00 -96.00 -32.00 -33.00 0.00 0.00 32.00 -32.00 0.00 -64.00 -32.00 -97.00 97.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -225.00 32.00 -32.00 32.00 -354.00 0.00 -418.00 32.00 -96.00 -32.00 -65.00 0.00 -128.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -65.00 -129.00 -32.00 -64.00 -64.00 -65.00 -129.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 -64.00 33.00 -33.00 0.00 -32.00 32.00 -64.00 0.00 -32.00 0.00 -64.00 0.00 -129.00 32.00 -193.00 0.00 -32.00 0.00 -129.00 32.00 -32.00 -161.00 -64.00 -32.00 -97.00 -32.00 -32.00 0.00 0.00 -64.00 0.00 -33.00 0.00 -32.00 64.00 -96.00 0.00 -161.00 0.00 -32.00 -64.00 -64.00 -64.00 -65.00 -161.00 97.00 -96.00 32.00 -161.00 -64.00 -161.00 321.00 -129.00 0.00 -192.00 -32.00 -33.00 161.00 0.00 64.00 -96.00 161.00 -32.00 64.00 0.00 65.00 32.00 96.00 0.00 96.00 32.00 0.00 97.00 65.00 64.00 32.00 32.00 96.00 32.00 32.00 64.00 33.00 33.00 0.00 32.00 32.00 0.00 193.00 32.00 128.00 0.00 32.00 -64.00 -32.00 -33.00 32.00 -64.00 -96.00 -161.00 -64.00 -32.00 -32.00 -64.00 32.00 32.00 64.00 -96.00 193.00 -32.00 225.00 -65.00 64.00 65.00 97.00 64.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 32.00 32.00 32.00 33.00 97.00 -33.00 193.00 -32.00 32.00 -96.00 32.00 -64.00 64.00 -65.00 0.00 -32.00 33.00 -32.00 32.00 32.00 64.00 0.00 32.00 -193.00 289.00 -32.00 0.00 -97.00 0.00 -96.00 -32.00 -161.00 0.00 -96.00 258.00 -32.00 0.00 -129.00 -65.00 -96.00 -161.00 32.00 -96.00 0.00 -64.00 64.00 -97.00 64.00 -225.00 -193.00 32.00 0.00 -257.00 -321.00 -289.00 -161.00 64.00 -161.00 64.00 -32.00 0.00 -128.00 65.00 -97.00 96.00 0.00 -32.00 32.00 -32.00 -64.00 0.00 0.00 -32.00 -32.00 -65.00 0.00 -64.00 -32.00 -96.00 -33.00 -65.00 -64.00 0.00 -161.00 129.00 -32.00 32.00 -96.00 32.00 -64.00 32.00 -226.00 65.00 -32.00 0.00 -96.00 128.00 -193.00 129.00 -193.00 0.00 -96.00 -64.00 0.00 -65.00 -33.00 -32.00 0.00 -32.00 -64.00 -64.00 32.00 -65.00 0.00 -128.00 -64.00 -32.00 -64.00 -65.00 32.00 -64.00 -129.00 -32.00 -128.00 64.00 -258.00 -32.00 -64.00 0.00 -354.00 64.00 65.00 -160.00 -33.00 -33.00 33.00 -64.00 -33.00 -64.00 0.00 -129.00 0.00 -64.00 -32.00 0.00 0.00 -64.00 32.00 -129.00 -32.00 -32.00 0.00 -32.00 65.00 -97.00 32.00 0.00 96.00 0.00 32.00 0.00 97.00 0.00 96.00 -96.00 32.00 -290.00 33.00 -96.00 -33.00 -32.00 -32.00 -65.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 65.00 -65.00 0.00 -128.00 32.00 -97.00 32.00 0.00 129.00 -64.00 32.00 -32.00 32.00 -97.00 64.00 -32.00 97.00 32.00 64.00 0.00 0.00 -160.00 97.00 -97.00 64.00 -64.00 32.00 0.00 32.00 -32.00 97.00 -33.00 64.00 -32.00 0.00 -64.00 96.00 -32.00 32.00 -32.00 33.00 -97.00 -33.00 0.00 -64.00 -32.00 64.00 -161.00 -32.00 -64.00 0.00 -64.00 -32.00 -161.00 32.00 -32.00 -96.00 0.00 -64.00 -32.00 -97.00 32.00 -32.00 -64.00 -64.00 -33.00 -32.00 0.00 -33.00 33.00 -32.00 64.00 -32.00 64.00 -64.00 0.00 -65.00 -32.00 -32.00 32.00 -128.00 32.00 -97.00 97.00 -96.00 0.00 -32.00 0.00 -65.00 128.00 -64.00 0.00 -96.00 0.00 -97.00 0.00 -32.00 33.00 0.00 128.00 -129.00 32.00 -32.00 -32.00 -64.00 0.00 0.00 32.00 -97.00 0.00 -64.00 0.00 0.00 65.00 -96.00 0.00 -65.00 -33.00 -64.00 33.00 -64.00 64.00 -97.00 0.00 -96.00 0.00 -32.00 64.00 -161.00 0.00 -97.00 -32.00 -32.00 -32.00 -32.00 0.00 -161.00 96.00 -32.00 32.00 0.00 65.00 -32.00 0.00 -64.00 64.00 64.00 32.00 -64.00 32.00 64.00 65.00 -32.00 32.00 0.00 64.00 32.00 65.00 32.00 0.00 -96.00 0.00 -97.00 0.00 -64.00 0.00 -64.00 96.00 32.00 32.00 -32.00 0.00 -65.00 32.00 -32.00 65.00 32.00 32.00 -32.00 64.00 0.00 32.00 -64.00 32.00 -32.00 32.00 -129.00 -64.00 0.00 129.00 32.00 32.00 -32.00 32.00 -64.00 0.00 -64.00 64.00 -65.00 33.00 -64.00 0.00 -64.00 -65.00 0.00 -32.00 -33.00 32.00 -32.00 65.00 -32.00 32.00 -161.00 0.00 33.00 32.00 -65.00 64.00 32.00 97.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 32.00 -64.00 -64.00 -33.00 0.00 -64.00 -33.00 0.00 0.00 64.00 -32.00 0.00 0.00 33.00 -32.00 0.00 -32.00 32.00 -32.00 96.00 -64.00 32.00 -33.00 65.00 -64.00 64.00 -32.00 0.00 -64.00 0.00 -65.00 -129.00 -64.00 32.00 -129.00 0.00 -64.00 -64.00 -129.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 -161.00 97.00 0.00 -97.00 -96.00 0.00 -32.00 -64.00 -65.00 -64.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -33.00 -33.00 -32.00 0.00 0.00 -64.00 -32.00 -32.00 -32.00 -64.00 -32.00 -33.00 -32.00 -32.00 -33.00 0.00 -96.00 32.00 -96.00 -64.00 -33.00 -32.00 -64.00 0.00 -96.00 32.00 32.00 -96.00 -32.00 -65.00 64.00 -96.00 64.00 -97.00 -64.00 33.00 -64.00 32.00 -32.00 0.00 -65.00 64.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 -33.00 0.00 -32.00 32.00 32.00 32.00 -96.00 0.00 -64.00 -32.00 -33.00 -97.00 0.00 -64.00 65.00 -64.00 0.00 -32.00 0.00 -65.00 -32.00 0.00z\"\n          },\n          al: {\n            name: \"AL\",\n            path: \"M175061.00 72955.00l161.00 -160.00 97.00 -33.00 128.00 -128.00 0.00 -64.00 0.00 -33.00 64.00 -128.00 97.00 -97.00 96.00 -96.00 33.00 -32.00 64.00 0.00 64.00 0.00 64.00 -33.00 33.00 0.00 64.00 0.00 32.00 -64.00 64.00 0.00 65.00 0.00 32.00 0.00 64.00 -32.00 32.00 -96.00 65.00 -65.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -64.00 129.00 -129.00 32.00 -64.00 64.00 -33.00 32.00 33.00 32.00 -97.00 0.00 -32.00 65.00 -32.00 64.00 -65.00 32.00 -64.00 32.00 -32.00 33.00 -193.00 -33.00 -32.00 65.00 -64.00 0.00 -65.00 -32.00 -32.00 96.00 -64.00 32.00 0.00 97.00 -97.00 32.00 0.00 32.00 0.00 32.00 -32.00 64.00 65.00 0.00 64.00 32.00 32.00 33.00 0.00 0.00 32.00 32.00 32.00 32.00 65.00 64.00 64.00 0.00 32.00 32.00 64.00 65.00 33.00 0.00 64.00 0.00 32.00 -32.00 32.00 -33.00 32.00 0.00 32.00 65.00 -32.00 0.00 65.00 128.00 -65.00 0.00 32.00 -32.00 33.00 32.00 32.00 65.00 32.00 128.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 65.00 -64.00 64.00 -32.00 96.00 32.00 97.00 -96.00 64.00 32.00 32.00 0.00 65.00 32.00 96.00 0.00 0.00 32.00 0.00 96.00 -32.00 33.00 129.00 128.00 96.00 0.00 64.00 0.00 97.00 65.00 64.00 64.00 322.00 129.00 32.00 64.00 64.00 0.00 0.00 32.00 0.00 32.00 64.00 64.00 97.00 129.00 64.00 64.00 32.00 32.00 65.00 65.00 0.00 32.00 0.00 32.00 32.00 64.00 32.00 0.00 0.00 65.00 0.00 32.00 0.00 32.00 0.00 32.00 96.00 -96.00 65.00 -32.00 193.00 128.00 -65.00 65.00 0.00 64.00 0.00 32.00 32.00 32.00 97.00 -64.00 64.00 -32.00 65.00 -97.00 32.00 0.00 128.00 65.00 33.00 32.00 96.00 128.00 -32.00 97.00 32.00 64.00 0.00 -64.00 32.00 64.00 129.00 0.00 96.00 161.00 129.00 64.00 96.00 97.00 32.00 0.00 33.00 -33.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 -64.00 96.00 -65.00 0.00 -32.00 -32.00 -32.00 64.00 -128.00 65.00 -65.00 32.00 0.00 96.00 -32.00 -32.00 0.00 32.00 -32.00 97.00 0.00 32.00 32.00 32.00 64.00 193.00 0.00 193.00 -96.00 289.00 32.00 64.00 32.00 97.00 129.00 64.00 32.00 0.00 -32.00 32.00 32.00 32.00 0.00 0.00 32.00 33.00 32.00 32.00 -32.00 0.00 32.00 32.00 -32.00 0.00 32.00 32.00 0.00 0.00 32.00 0.00 33.00 64.00 -33.00 33.00 0.00 64.00 -32.00 32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -129.00 321.00 -96.00 33.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 32.00 0.00 32.00 32.00 32.00 -32.00 32.00 -32.00 33.00 0.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 64.00 0.00 0.00 64.00 32.00 32.00 33.00 -64.00 32.00 32.00 64.00 0.00 64.00 -32.00 65.00 32.00 32.00 -32.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 64.00 32.00 32.00 0.00 32.00 -32.00 33.00 -64.00 32.00 -32.00 32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 65.00 -33.00 32.00 33.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 -32.00 32.00 32.00 97.00 -32.00 0.00 -33.00 -65.00 -32.00 0.00 -64.00 -32.00 -32.00 -64.00 0.00 0.00 -64.00 0.00 -33.00 -32.00 -32.00 0.00 -64.00 96.00 0.00 65.00 0.00 64.00 -64.00 0.00 -65.00 32.00 0.00 32.00 -32.00 32.00 -96.00 32.00 0.00 33.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 0.00 32.00 0.00 0.00 -33.00 64.00 -32.00 64.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -65.00 -64.00 -32.00 -32.00 -64.00 32.00 -64.00 193.00 -65.00 96.00 -128.00 161.00 -32.00 129.00 32.00 64.00 -65.00 64.00 0.00 33.00 0.00 32.00 0.00 0.00 -32.00 64.00 -32.00 32.00 -32.00 64.00 0.00 33.00 0.00 32.00 -64.00 0.00 -33.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 32.00 129.00 -32.00 64.00 65.00 32.00 0.00 65.00 0.00 32.00 -65.00 64.00 32.00 64.00 -64.00 33.00 0.00 32.00 64.00 0.00 -32.00 0.00 65.00 -32.00 64.00 32.00 32.00 -32.00 32.00 32.00 0.00 32.00 32.00 64.00 33.00 65.00 32.00 64.00 -32.00 32.00 0.00 32.00 0.00 32.00 -33.00 65.00 33.00 32.00 -65.00 96.00 0.00 65.00 -64.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 64.00 -65.00 97.00 0.00 32.00 -64.00 32.00 -32.00 32.00 0.00 33.00 0.00 32.00 -64.00 64.00 0.00 32.00 -33.00 32.00 -32.00 0.00 65.00 65.00 -65.00 64.00 0.00 0.00 32.00 32.00 -32.00 0.00 32.00 32.00 33.00 0.00 -33.00 65.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 -32.00 65.00 32.00 0.00 0.00 32.00 32.00 32.00 97.00 0.00 0.00 -32.00 64.00 0.00 32.00 0.00 32.00 0.00 32.00 64.00 225.00 64.00 258.00 65.00 32.00 0.00 64.00 0.00 129.00 64.00 64.00 -32.00 64.00 32.00 65.00 0.00 32.00 0.00 128.00 0.00 97.00 64.00 0.00 65.00 0.00 32.00 -64.00 64.00 -33.00 97.00 -32.00 96.00 -32.00 32.00 -96.00 97.00 -65.00 96.00 -32.00 32.00 -32.00 97.00 0.00 64.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -64.00 65.00 0.00 32.00 0.00 32.00 -65.00 64.00 0.00 32.00 -64.00 33.00 0.00 96.00 -32.00 32.00 -32.00 0.00 0.00 97.00 0.00 32.00 -32.00 64.00 -65.00 32.00 -32.00 32.00 0.00 33.00 -32.00 64.00 -64.00 32.00 0.00 32.00 -33.00 97.00 -96.00 96.00 -64.00 32.00 -65.00 97.00 -64.00 32.00 -32.00 32.00 32.00 0.00 -96.00 32.00 -33.00 32.00 0.00 32.00 -96.00 33.00 -32.00 32.00 -97.00 96.00 -32.00 65.00 -32.00 160.00 -64.00 129.00 -65.00 0.00 0.00 64.00 -32.00 0.00 -96.00 97.00 -32.00 64.00 -129.00 96.00 0.00 97.00 -64.00 0.00 -65.00 64.00 0.00 32.00 -64.00 33.00 -64.00 64.00 -32.00 0.00 -65.00 96.00 -64.00 65.00 -32.00 64.00 -64.00 96.00 0.00 65.00 0.00 96.00 -65.00 0.00 -64.00 97.00 -32.00 -33.00 32.00 0.00 0.00 -32.00 -32.00 0.00 -129.00 32.00 -128.00 161.00 -33.00 0.00 -96.00 97.00 -32.00 64.00 32.00 -32.00 -193.00 225.00 -96.00 161.00 -65.00 96.00 -64.00 161.00 -193.00 161.00 -96.00 193.00 -65.00 96.00 -128.00 193.00 -129.00 225.00 -64.00 64.00 0.00 65.00 -64.00 64.00 -65.00 -32.00 -64.00 64.00 -129.00 161.00 -32.00 64.00 -64.00 64.00 0.00 33.00 -64.00 -33.00 -65.00 33.00 -64.00 64.00 -64.00 129.00 -129.00 64.00 -129.00 161.00 -160.00 128.00 -97.00 129.00 -32.00 64.00 0.00 64.00 0.00 97.00 32.00 32.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -129.00 193.00 -193.00 418.00 -32.00 32.00 -32.00 33.00 -32.00 -33.00 -32.00 -64.00 -97.00 -193.00 -32.00 -96.00 -32.00 0.00 -97.00 -65.00 -32.00 -32.00 -96.00 65.00 0.00 32.00 -32.00 0.00 -97.00 32.00 -32.00 0.00 0.00 -32.00 32.00 0.00 -128.00 0.00 -32.00 32.00 -97.00 -64.00 32.00 -129.00 -32.00 -129.00 0.00 -160.00 -32.00 -65.00 -64.00 -96.00 -33.00 -64.00 -96.00 -65.00 0.00 -32.00 -32.00 -32.00 -32.00 -32.00 -33.00 0.00 -32.00 0.00 -64.00 64.00 -96.00 0.00 -33.00 32.00 -64.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 -64.00 -64.00 -32.00 -32.00 0.00 32.00 -33.00 0.00 -32.00 -97.00 -32.00 -32.00 0.00 -161.00 -32.00 -32.00 -32.00 -96.00 -64.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 -65.00 0.00 -64.00 -65.00 -161.00 -32.00 -32.00 -64.00 -64.00 -97.00 -65.00 -64.00 -32.00 -96.00 0.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 0.00 -96.00 0.00 -33.00 0.00 -64.00 -32.00 -64.00 0.00 -32.00 -129.00 -65.00 -32.00 0.00 -32.00 0.00 -96.00 65.00 -33.00 0.00 -64.00 0.00 -128.00 -129.00 -258.00 -225.00 -96.00 -64.00 -225.00 -32.00 -129.00 0.00 -64.00 0.00 -32.00 -33.00 0.00 -32.00 -32.00 -64.00 -65.00 -97.00 -96.00 -96.00 -65.00 -32.00 -96.00 -32.00 -129.00 -97.00 -32.00 -32.00 -32.00 -32.00 -64.00 0.00 -97.00 -32.00 -128.00 -65.00 -32.00 -32.00 -193.00 -32.00 -386.00 -64.00 -97.00 0.00 -64.00 -32.00 -354.00 -225.00 0.00 -33.00 -32.00 -64.00 -32.00 -64.00 -64.00 -32.00 -129.00 -65.00 -161.00 -32.00 -32.00 0.00 -128.00 65.00 -33.00 0.00 -32.00 -97.00 -64.00 -64.00 -32.00 -65.00 -32.00 0.00 -65.00 0.00 0.00 -64.00 -32.00 0.00 -193.00 -161.00 -32.00 -32.00 -32.00 0.00 -96.00 32.00 -193.00 -64.00 -161.00 -32.00 -64.00 -64.00 32.00 -97.00 -65.00 -64.00 -64.00 -64.00 -32.00 0.00 -64.00 0.00 -65.00 -65.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -129.00 -32.00 -32.00 0.00 -32.00 32.00 -97.00 -32.00 -64.00 32.00 -96.00 -97.00 -97.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 -32.00 0.00 -64.00 -32.00 -33.00 -32.00 -96.00 -129.00 -129.00z\"\n          },\n          se: {\n            name: \"SE\",\n            path: \"M175061.00 80093.00l32.00 0.00 33.00 -64.00 32.00 -96.00 0.00 -65.00 0.00 -64.00 0.00 -64.00 32.00 -65.00 32.00 0.00 97.00 -32.00 32.00 64.00 64.00 0.00 32.00 0.00 64.00 33.00 65.00 0.00 32.00 -65.00 64.00 32.00 65.00 -64.00 32.00 32.00 32.00 32.00 96.00 -32.00 32.00 0.00 33.00 65.00 32.00 0.00 64.00 64.00 0.00 32.00 0.00 129.00 129.00 0.00 128.00 -65.00 161.00 -64.00 579.00 -225.00 -64.00 -547.00 0.00 -32.00 -33.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 65.00 0.00 0.00 -33.00 32.00 -32.00 0.00 32.00 0.00 -64.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 -32.00 -97.00 -161.00 -289.00 32.00 -32.00 -32.00 -65.00 96.00 -32.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 0.00 32.00 0.00 0.00 -32.00 32.00 -33.00 32.00 0.00 96.00 -64.00 33.00 -32.00 96.00 0.00 129.00 -64.00 -33.00 -33.00 0.00 -32.00 -128.00 -611.00 -64.00 -32.00 0.00 -32.00 32.00 -161.00 0.00 -64.00 -97.00 -129.00 -128.00 -257.00 0.00 -96.00 0.00 -32.00 0.00 -65.00 -32.00 -64.00 -226.00 -129.00 -32.00 32.00 -96.00 -32.00 -64.00 0.00 -33.00 0.00 0.00 -64.00 -64.00 0.00 -64.00 32.00 -32.00 0.00 -33.00 -32.00 -96.00 -193.00 -64.00 -32.00 0.00 -32.00 64.00 -97.00 0.00 -96.00 64.00 -64.00 0.00 -33.00 -32.00 -32.00 32.00 -64.00 32.00 -64.00 -32.00 -32.00 -32.00 0.00 -96.00 -33.00 -97.00 -96.00 0.00 -32.00 -32.00 0.00 -64.00 -129.00 0.00 -96.00 0.00 -97.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 64.00 -33.00 32.00 -64.00 65.00 -64.00 32.00 0.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 -64.00 -33.00 -33.00 -32.00 -32.00 -32.00 -64.00 -32.00 -32.00 -64.00 0.00 -97.00 0.00 -32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -33.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 -64.00 64.00 64.00 161.00 32.00 193.00 64.00 96.00 -32.00 32.00 0.00 32.00 32.00 193.00 161.00 32.00 0.00 0.00 64.00 65.00 0.00 32.00 0.00 32.00 65.00 64.00 64.00 32.00 97.00 33.00 0.00 128.00 -65.00 32.00 0.00 161.00 32.00 129.00 65.00 64.00 32.00 32.00 64.00 32.00 64.00 0.00 33.00 354.00 225.00 64.00 32.00 97.00 0.00 386.00 64.00 193.00 32.00 32.00 32.00 128.00 65.00 97.00 32.00 64.00 0.00 32.00 32.00 32.00 32.00 129.00 97.00 96.00 32.00 65.00 32.00 96.00 96.00 65.00 97.00 32.00 64.00 0.00 32.00 32.00 33.00 64.00 0.00 129.00 0.00 225.00 32.00 96.00 64.00 258.00 225.00 128.00 129.00 64.00 0.00 33.00 0.00 96.00 -65.00 32.00 0.00 32.00 0.00 129.00 65.00 0.00 32.00 32.00 64.00 0.00 64.00 0.00 33.00 0.00 96.00 0.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 32.00 96.00 65.00 64.00 64.00 97.00 32.00 64.00 161.00 32.00 64.00 65.00 65.00 0.00 32.00 64.00 0.00 32.00 0.00 32.00 0.00 32.00 32.00 33.00 96.00 64.00 32.00 32.00 161.00 32.00 32.00 0.00 97.00 32.00 0.00 32.00 -32.00 33.00 32.00 0.00 64.00 32.00 65.00 64.00 32.00 0.00 64.00 32.00 32.00 0.00 64.00 0.00 33.00 -32.00 96.00 0.00 64.00 -64.00 32.00 0.00 33.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 96.00 65.00 33.00 64.00 64.00 96.00 32.00 65.00 0.00 160.00 32.00 129.00 -32.00 129.00 97.00 64.00 32.00 -32.00 128.00 0.00 -32.00 0.00 0.00 32.00 32.00 0.00 97.00 -32.00 32.00 0.00 0.00 -32.00 96.00 -65.00 32.00 32.00 97.00 65.00 32.00 0.00 32.00 96.00 97.00 193.00 32.00 64.00 0.00 33.00 0.00 32.00 0.00 64.00 -32.00 -32.00 -161.00 32.00 -289.00 64.00 -386.00 161.00 -193.00 97.00 -161.00 128.00 -129.00 97.00 -225.00 96.00 -386.00 257.00 -160.00 161.00 -32.00 32.00 -418.00 418.00 -129.00 161.00 -129.00 193.00 -160.00 225.00 0.00 64.00 -129.00 161.00 -354.00 515.00 -128.00 257.00 32.00 32.00 -257.00 289.00 -258.00 322.00 -160.00 289.00 -129.00 386.00 -32.00 32.00 0.00 65.00 -64.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 64.00 -32.00 0.00 -97.00 96.00 -96.00 97.00 -129.00 96.00 -64.00 32.00 -32.00 0.00 -129.00 0.00 -64.00 0.00 -64.00 65.00 0.00 64.00 -161.00 0.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 0.00 32.00 32.00 -32.00 0.00 -32.00 -32.00 32.00 -64.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -65.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 0.00 65.00 -32.00 0.00 -32.00 0.00 32.00 64.00 -64.00 64.00 0.00 32.00 0.00 32.00 -64.00 -32.00 -65.00 0.00 33.00 -96.00 -33.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 0.00 -64.00 -97.00 0.00 -64.00 -65.00 -32.00 33.00 -32.00 -33.00 -65.00 0.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 0.00 -64.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 -65.00 -33.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 0.00 -33.00 -96.00 33.00 0.00 -33.00 -65.00 -32.00 32.00 0.00 65.00 0.00 -65.00 -32.00 -32.00 0.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 -65.00 0.00 0.00 32.00 -32.00 0.00 0.00 64.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 -32.00 32.00 0.00 0.00 -33.00 -32.00 0.00 -33.00 33.00 0.00 -65.00 -64.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -97.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 64.00 0.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 -64.00 -97.00 0.00 -64.00 64.00 -32.00 0.00 -32.00 32.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 32.00 0.00 -32.00 -65.00 32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 32.00 -97.00 -97.00 -32.00 32.00 -64.00 -32.00 -65.00 -64.00 -64.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 0.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 -64.00 0.00 -33.00 32.00 0.00 32.00 -96.00 0.00 -64.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -64.00 0.00 -32.00 -32.00 -33.00 -64.00 -32.00 0.00 65.00 -32.00 0.00 -33.00 -33.00 -32.00 -64.00 -128.00 -64.00 -32.00 -64.00 -33.00 -33.00 33.00 -64.00 0.00 -32.00 -97.00 -32.00 0.00 -65.00 -32.00 0.00 -32.00 33.00 0.00 -33.00 -65.00 -32.00 0.00 -96.00 -64.00 -97.00 0.00 -64.00 32.00 -64.00 32.00 -32.00 -32.00 -97.00 -32.00 0.00 32.00 -64.00 -32.00 -64.00 32.00 -33.00z\"\n          },\n          df: {\n            name: \"DF\",\n            path: \"M127474.00 104691.00l0.00 -33.00 65.00 -96.00 128.00 -32.00 33.00 -64.00 96.00 -129.00 32.00 0.00 32.00 -64.00 -32.00 -129.00 -32.00 -64.00 -64.00 32.00 -65.00 -32.00 0.00 -97.00 33.00 -128.00 32.00 -97.00 64.00 -96.00 64.00 0.00 0.00 -515.00 0.00 -64.00 708.00 0.00 96.00 0.00 1222.00 0.00 547.00 0.00 450.00 0.00 321.00 0.00 386.00 0.00 0.00 225.00 64.00 0.00 65.00 96.00 32.00 0.00 0.00 33.00 32.00 32.00 129.00 0.00 96.00 32.00 32.00 0.00 32.00 32.00 -32.00 32.00 -64.00 161.00 32.00 64.00 0.00 65.00 0.00 64.00 -32.00 32.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 65.00 -32.00 64.00 0.00 64.00 32.00 32.00 0.00 33.00 -32.00 0.00 0.00 64.00 0.00 -32.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 -32.00 97.00 -32.00 32.00 0.00 32.00 -33.00 0.00 0.00 64.00 -32.00 0.00 -32.00 33.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 32.00 0.00 0.00 33.00 -32.00 64.00 -32.00 0.00 32.00 0.00 0.00 64.00 32.00 32.00 -32.00 32.00 64.00 0.00 -32.00 33.00 0.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 -64.00 0.00 32.00 32.00 0.00 32.00 0.00 33.00 -32.00 0.00 0.00 32.00 0.00 32.00 0.00 64.00 0.00 32.00 0.00 32.00 32.00 0.00 0.00 33.00 32.00 0.00 0.00 32.00 65.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 -32.00 32.00 64.00 32.00 0.00 0.00 32.00 65.00 0.00 -33.00 32.00 33.00 0.00 0.00 33.00 -1480.00 0.00 -289.00 0.00 -643.00 32.00 -579.00 0.00 -386.00 0.00 -64.00 0.00 -257.00 0.00 -900.00 0.00 0.00 -32.00 32.00 -97.00 0.00 -96.00 32.00 -65.00 32.00 -96.00 -32.00 -32.00 64.00 -64.00 0.00 -65.00 0.00 -32.00 -64.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -65.00 -32.00 0.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 -33.00 -161.00 0.00 -64.00z\"\n          },\n          pe: {\n            name: \"PE\",\n            path: \"M160271.00 69901.00l96.00 0.00 129.00 -65.00 32.00 -32.00 96.00 -128.00 161.00 0.00 65.00 -33.00 32.00 -32.00 64.00 0.00 64.00 -64.00 -32.00 -96.00 0.00 -65.00 32.00 0.00 32.00 -32.00 65.00 0.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 65.00 -129.00 0.00 -64.00 64.00 0.00 32.00 32.00 32.00 0.00 64.00 -32.00 33.00 -65.00 32.00 0.00 32.00 -32.00 32.00 -96.00 0.00 -97.00 129.00 33.00 32.00 -161.00 32.00 -97.00 161.00 -32.00 32.00 -96.00 32.00 0.00 64.00 -32.00 65.00 64.00 0.00 32.00 32.00 32.00 96.00 64.00 65.00 65.00 64.00 -65.00 32.00 -64.00 0.00 -64.00 0.00 -64.00 32.00 -33.00 32.00 0.00 0.00 -96.00 -32.00 0.00 32.00 -64.00 97.00 0.00 32.00 32.00 32.00 64.00 0.00 32.00 97.00 0.00 96.00 -96.00 -32.00 -129.00 32.00 -32.00 0.00 -32.00 129.00 -32.00 0.00 -65.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -129.00 64.00 -32.00 32.00 -32.00 97.00 -32.00 32.00 -32.00 32.00 -32.00 96.00 0.00 0.00 -33.00 33.00 -64.00 32.00 -32.00 32.00 -64.00 64.00 0.00 32.00 -32.00 0.00 -65.00 33.00 -32.00 64.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 161.00 64.00 0.00 -32.00 32.00 -32.00 0.00 -65.00 -32.00 -32.00 -32.00 -64.00 32.00 -129.00 64.00 -161.00 32.00 -96.00 161.00 -289.00 0.00 -65.00 0.00 -32.00 32.00 -386.00 0.00 -64.00 -32.00 -96.00 0.00 -33.00 -64.00 -64.00 -32.00 -32.00 -32.00 0.00 -258.00 -97.00 -128.00 -32.00 -97.00 -96.00 -32.00 -193.00 64.00 -193.00 97.00 -193.00 0.00 -32.00 0.00 -97.00 0.00 -64.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -161.00 -193.00 -32.00 -32.00 -97.00 -258.00 0.00 -64.00 32.00 -64.00 161.00 -32.00 65.00 -33.00 32.00 -64.00 482.00 -193.00 225.00 -32.00 386.00 0.00 225.00 0.00 257.00 -64.00 129.00 64.00 64.00 0.00 32.00 32.00 129.00 193.00 450.00 -96.00 354.00 -65.00 257.00 0.00 64.00 -64.00 129.00 32.00 96.00 -32.00 225.00 -257.00 33.00 0.00 64.00 32.00 161.00 -64.00 32.00 -32.00 96.00 32.00 65.00 0.00 64.00 0.00 64.00 0.00 161.00 -32.00 225.00 -33.00 97.00 0.00 96.00 -32.00 32.00 0.00 64.00 65.00 97.00 64.00 96.00 0.00 32.00 32.00 33.00 0.00 64.00 97.00 64.00 64.00 97.00 64.00 128.00 97.00 32.00 0.00 65.00 64.00 32.00 64.00 64.00 64.00 129.00 33.00 32.00 0.00 129.00 64.00 64.00 32.00 32.00 0.00 129.00 97.00 64.00 64.00 129.00 128.00 64.00 33.00 0.00 32.00 32.00 128.00 64.00 97.00 33.00 32.00 32.00 0.00 32.00 32.00 -32.00 0.00 -65.00 64.00 -32.00 33.00 0.00 96.00 -32.00 32.00 0.00 65.00 129.00 0.00 32.00 -33.00 32.00 33.00 0.00 32.00 96.00 32.00 0.00 64.00 0.00 32.00 -32.00 32.00 65.00 0.00 32.00 -32.00 64.00 0.00 64.00 -32.00 97.00 32.00 64.00 97.00 129.00 0.00 64.00 32.00 32.00 96.00 97.00 65.00 0.00 64.00 32.00 64.00 32.00 129.00 0.00 64.00 32.00 65.00 -64.00 64.00 32.00 32.00 129.00 -96.00 64.00 -97.00 129.00 32.00 32.00 -32.00 32.00 0.00 32.00 97.00 0.00 32.00 96.00 32.00 33.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 -64.00 32.00 -64.00 -32.00 -65.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 0.00 33.00 -32.00 32.00 32.00 32.00 0.00 0.00 -65.00 64.00 0.00 32.00 33.00 65.00 -33.00 0.00 -96.00 64.00 -64.00 64.00 32.00 33.00 0.00 64.00 0.00 64.00 0.00 32.00 -97.00 0.00 -64.00 -64.00 -32.00 32.00 -64.00 32.00 0.00 0.00 32.00 65.00 0.00 64.00 0.00 32.00 -32.00 0.00 -33.00 32.00 33.00 64.00 -33.00 33.00 0.00 32.00 0.00 32.00 -64.00 32.00 -32.00 -32.00 -32.00 64.00 -32.00 32.00 0.00 0.00 -33.00 65.00 0.00 32.00 65.00 64.00 0.00 65.00 128.00 32.00 0.00 64.00 65.00 0.00 32.00 32.00 0.00 0.00 32.00 97.00 32.00 0.00 97.00 32.00 0.00 32.00 64.00 0.00 64.00 64.00 32.00 0.00 65.00 64.00 0.00 33.00 -65.00 0.00 65.00 32.00 -32.00 32.00 32.00 96.00 -32.00 65.00 32.00 64.00 -32.00 97.00 0.00 0.00 -65.00 32.00 -32.00 96.00 0.00 64.00 -64.00 97.00 0.00 32.00 64.00 64.00 0.00 32.00 0.00 33.00 -64.00 -33.00 -32.00 129.00 -33.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 64.00 96.00 32.00 -32.00 32.00 32.00 32.00 -32.00 33.00 32.00 0.00 65.00 0.00 32.00 32.00 0.00 -32.00 64.00 32.00 32.00 32.00 32.00 -64.00 97.00 96.00 0.00 -32.00 32.00 32.00 32.00 -32.00 64.00 32.00 129.00 64.00 64.00 32.00 33.00 65.00 -33.00 32.00 0.00 96.00 0.00 0.00 -32.00 65.00 0.00 32.00 -32.00 32.00 -32.00 64.00 -32.00 97.00 -65.00 64.00 -64.00 64.00 32.00 32.00 0.00 33.00 65.00 32.00 32.00 32.00 32.00 0.00 32.00 32.00 32.00 193.00 32.00 32.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 -65.00 0.00 -64.00 32.00 -32.00 129.00 -96.00 96.00 32.00 65.00 32.00 0.00 64.00 32.00 0.00 32.00 0.00 32.00 -32.00 64.00 32.00 32.00 -32.00 33.00 -32.00 64.00 -32.00 0.00 -65.00 96.00 -64.00 0.00 -96.00 65.00 0.00 64.00 0.00 32.00 0.00 -32.00 -33.00 -32.00 -32.00 32.00 -32.00 64.00 -32.00 97.00 -129.00 32.00 -32.00 64.00 -32.00 161.00 0.00 64.00 -96.00 32.00 0.00 33.00 0.00 32.00 32.00 0.00 64.00 32.00 0.00 0.00 64.00 64.00 65.00 0.00 -32.00 64.00 -33.00 0.00 -64.00 -32.00 -32.00 -64.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 -64.00 33.00 0.00 32.00 -96.00 32.00 0.00 64.00 -33.00 0.00 -64.00 0.00 -32.00 129.00 -32.00 0.00 -65.00 96.00 -64.00 32.00 64.00 33.00 -32.00 64.00 32.00 64.00 -32.00 32.00 -32.00 0.00 -64.00 97.00 -32.00 96.00 -65.00 97.00 -32.00 96.00 -32.00 0.00 -32.00 0.00 -97.00 32.00 -32.00 33.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -97.00 32.00 -32.00 0.00 -64.00 -32.00 -64.00 32.00 -32.00 97.00 -33.00 128.00 33.00 32.00 -33.00 33.00 0.00 64.00 33.00 32.00 -33.00 96.00 0.00 193.00 -96.00 -32.00 -64.00 32.00 -65.00 65.00 -96.00 96.00 0.00 32.00 0.00 97.00 0.00 32.00 -65.00 96.00 0.00 33.00 0.00 96.00 0.00 96.00 65.00 65.00 32.00 96.00 64.00 32.00 65.00 32.00 64.00 33.00 0.00 64.00 0.00 32.00 64.00 32.00 -32.00 32.00 32.00 65.00 32.00 96.00 0.00 65.00 33.00 0.00 32.00 32.00 64.00 64.00 0.00 0.00 -32.00 32.00 0.00 97.00 64.00 64.00 64.00 -64.00 97.00 64.00 0.00 0.00 32.00 -32.00 32.00 32.00 64.00 32.00 33.00 64.00 32.00 0.00 32.00 0.00 32.00 32.00 0.00 0.00 32.00 -64.00 65.00 -32.00 -33.00 -96.00 33.00 0.00 32.00 -129.00 32.00 -64.00 64.00 -97.00 0.00 -64.00 64.00 -97.00 0.00 -64.00 97.00 -96.00 64.00 -65.00 65.00 -32.00 96.00 -32.00 96.00 -64.00 33.00 0.00 32.00 0.00 32.00 0.00 64.00 64.00 65.00 32.00 32.00 0.00 32.00 32.00 64.00 32.00 32.00 65.00 65.00 0.00 96.00 64.00 64.00 -96.00 129.00 0.00 32.00 32.00 0.00 -32.00 64.00 -33.00 0.00 -32.00 33.00 0.00 32.00 -32.00 -32.00 -32.00 -33.00 -32.00 0.00 -32.00 33.00 -97.00 64.00 -32.00 -32.00 -32.00 32.00 -64.00 32.00 32.00 32.00 64.00 0.00 0.00 97.00 -96.00 32.00 -32.00 32.00 32.00 32.00 0.00 64.00 -193.00 129.00 -97.00 0.00 0.00 32.00 -64.00 0.00 0.00 32.00 32.00 0.00 32.00 0.00 -32.00 33.00 32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -96.00 32.00 -33.00 0.00 0.00 32.00 -32.00 97.00 65.00 0.00 0.00 32.00 96.00 -64.00 64.00 0.00 65.00 0.00 64.00 32.00 64.00 -32.00 97.00 0.00 32.00 32.00 32.00 -32.00 0.00 32.00 64.00 0.00 0.00 -65.00 65.00 -32.00 64.00 32.00 0.00 97.00 32.00 32.00 32.00 0.00 0.00 32.00 64.00 0.00 33.00 32.00 32.00 33.00 0.00 64.00 0.00 64.00 -32.00 97.00 0.00 64.00 64.00 96.00 -32.00 65.00 32.00 96.00 0.00 32.00 -32.00 0.00 -32.00 65.00 32.00 64.00 -65.00 32.00 0.00 32.00 33.00 32.00 64.00 33.00 96.00 -33.00 0.00 65.00 0.00 64.00 0.00 64.00 129.00 129.00 32.00 96.00 193.00 32.00 32.00 0.00 97.00 129.00 128.00 64.00 65.00 -32.00 96.00 0.00 32.00 0.00 32.00 -32.00 0.00 -64.00 97.00 -32.00 96.00 -97.00 33.00 -64.00 96.00 0.00 96.00 -64.00 225.00 -97.00 33.00 -64.00 64.00 0.00 64.00 0.00 65.00 32.00 32.00 -32.00 32.00 -64.00 32.00 -33.00 97.00 0.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 64.00 32.00 96.00 0.00 -32.00 -96.00 32.00 -33.00 97.00 -32.00 128.00 -32.00 65.00 -32.00 0.00 -64.00 -33.00 -33.00 -64.00 0.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 97.00 -64.00 0.00 -193.00 0.00 -129.00 32.00 -32.00 0.00 -64.00 32.00 -97.00 129.00 32.00 32.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 -97.00 32.00 -32.00 32.00 -32.00 64.00 -32.00 65.00 32.00 193.00 97.00 64.00 -33.00 32.00 33.00 64.00 -33.00 97.00 0.00 0.00 -32.00 32.00 -64.00 32.00 0.00 0.00 -64.00 -32.00 -33.00 32.00 -32.00 0.00 -160.00 0.00 -65.00 32.00 -32.00 65.00 0.00 64.00 -32.00 96.00 0.00 65.00 -32.00 32.00 32.00 257.00 0.00 32.00 0.00 32.00 32.00 97.00 64.00 32.00 0.00 64.00 0.00 32.00 -64.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 32.00 -33.00 161.00 -128.00 32.00 32.00 32.00 96.00 97.00 -32.00 161.00 0.00 96.00 0.00 32.00 0.00 64.00 -32.00 161.00 32.00 97.00 97.00 32.00 -32.00 32.00 0.00 64.00 64.00 97.00 0.00 32.00 32.00 32.00 -64.00 32.00 0.00 65.00 -65.00 64.00 0.00 64.00 0.00 32.00 -32.00 161.00 32.00 96.00 -64.00 0.00 -64.00 0.00 -32.00 33.00 -32.00 64.00 0.00 96.00 -33.00 65.00 33.00 32.00 0.00 32.00 0.00 96.00 -65.00 65.00 0.00 96.00 -64.00 32.00 0.00 33.00 -32.00 0.00 -32.00 32.00 0.00 96.00 -33.00 32.00 0.00 0.00 -32.00 65.00 -32.00 32.00 32.00 32.00 0.00 32.00 0.00 97.00 0.00 32.00 0.00 64.00 -64.00 32.00 -32.00 64.00 -64.00 0.00 -33.00 33.00 -32.00 64.00 0.00 32.00 0.00 64.00 0.00 65.00 32.00 128.00 -32.00 32.00 -32.00 65.00 0.00 -97.00 -129.00 32.00 -64.00 33.00 0.00 0.00 -32.00 32.00 -64.00 -65.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 -33.00 33.00 -96.00 0.00 -97.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -64.00 0.00 -65.00 32.00 -160.00 97.00 -33.00 128.00 33.00 64.00 0.00 33.00 64.00 64.00 32.00 32.00 0.00 32.00 -64.00 129.00 -65.00 32.00 -32.00 32.00 0.00 64.00 0.00 0.00 -32.00 0.00 -64.00 33.00 0.00 64.00 0.00 0.00 -32.00 -32.00 -32.00 64.00 0.00 32.00 0.00 32.00 0.00 33.00 0.00 96.00 -97.00 193.00 -64.00 64.00 32.00 129.00 32.00 64.00 32.00 32.00 0.00 65.00 -32.00 64.00 32.00 32.00 0.00 97.00 32.00 32.00 0.00 96.00 33.00 64.00 -33.00 33.00 -32.00 32.00 0.00 32.00 32.00 96.00 65.00 65.00 64.00 128.00 96.00 97.00 65.00 0.00 64.00 -32.00 64.00 32.00 65.00 0.00 32.00 64.00 64.00 64.00 97.00 33.00 0.00 96.00 -65.00 32.00 32.00 32.00 33.00 32.00 0.00 33.00 0.00 0.00 32.00 32.00 0.00 32.00 -65.00 96.00 65.00 65.00 -32.00 64.00 32.00 32.00 0.00 32.00 32.00 -32.00 0.00 -32.00 0.00 32.00 64.00 32.00 65.00 32.00 32.00 0.00 64.00 65.00 64.00 0.00 65.00 -65.00 96.00 -64.00 193.00 -32.00 0.00 -32.00 32.00 32.00 32.00 64.00 0.00 -32.00 65.00 32.00 64.00 32.00 96.00 -64.00 225.00 0.00 97.00 -64.00 0.00 0.00 32.00 32.00 64.00 0.00 33.00 0.00 32.00 32.00 0.00 0.00 160.00 64.00 65.00 0.00 96.00 0.00 32.00 -32.00 225.00 -32.00 129.00 0.00 97.00 -129.00 128.00 0.00 32.00 0.00 32.00 -96.00 225.00 -129.00 354.00 -32.00 97.00 0.00 96.00 -32.00 97.00 32.00 0.00 -96.00 160.00 -32.00 97.00 -32.00 64.00 0.00 32.00 64.00 32.00 -64.00 161.00 0.00 32.00 32.00 0.00 32.00 33.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 65.00 64.00 -129.00 289.00 -32.00 129.00 -32.00 64.00 -33.00 65.00 0.00 32.00 0.00 64.00 -32.00 32.00 0.00 65.00 32.00 64.00 -32.00 32.00 0.00 64.00 0.00 33.00 -32.00 0.00 -32.00 -33.00 -32.00 33.00 -32.00 32.00 -33.00 64.00 -32.00 32.00 0.00 64.00 0.00 33.00 -96.00 160.00 -32.00 32.00 32.00 97.00 -64.00 32.00 -33.00 64.00 33.00 65.00 0.00 32.00 -33.00 32.00 -32.00 64.00 32.00 65.00 -96.00 128.00 0.00 65.00 32.00 0.00 -32.00 64.00 -32.00 0.00 -97.00 128.00 0.00 97.00 33.00 96.00 0.00 33.00 -65.00 32.00 -64.00 193.00 0.00 -65.00 -97.00 -64.00 -128.00 0.00 -32.00 0.00 -65.00 0.00 -64.00 -32.00 -64.00 32.00 -129.00 -64.00 -64.00 0.00 -32.00 0.00 -258.00 -65.00 -225.00 -64.00 -32.00 -64.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 0.00 32.00 -97.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -65.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -65.00 0.00 0.00 33.00 -32.00 -33.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -64.00 0.00 -65.00 65.00 0.00 -65.00 -32.00 32.00 -32.00 33.00 -64.00 0.00 -32.00 64.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 64.00 -97.00 0.00 -64.00 65.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 64.00 -96.00 0.00 -32.00 65.00 -65.00 -33.00 -32.00 33.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 -65.00 -32.00 -64.00 -33.00 -32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 0.00 -65.00 0.00 32.00 -32.00 -64.00 -33.00 0.00 -64.00 64.00 -64.00 -32.00 -32.00 65.00 -65.00 0.00 -32.00 0.00 -64.00 -65.00 -129.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 0.00 33.00 -32.00 64.00 -33.00 0.00 -64.00 0.00 -32.00 32.00 -64.00 32.00 0.00 32.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -64.00 65.00 -129.00 -32.00 -161.00 32.00 -96.00 128.00 -193.00 65.00 -32.00 64.00 32.00 64.00 64.00 32.00 32.00 65.00 -32.00 32.00 0.00 32.00 -64.00 64.00 -64.00 32.00 0.00 33.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 0.00 -32.00 96.00 -32.00 32.00 -32.00 0.00 0.00 65.00 -64.00 64.00 -65.00 0.00 -96.00 0.00 0.00 64.00 32.00 32.00 0.00 33.00 0.00 64.00 64.00 0.00 32.00 32.00 0.00 64.00 65.00 32.00 0.00 33.00 -97.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -33.00 -65.00 33.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 32.00 -33.00 64.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 0.00 32.00 32.00 33.00 -32.00 32.00 -32.00 32.00 -65.00 -32.00 -64.00 32.00 -64.00 0.00 -32.00 -32.00 -33.00 64.00 -32.00 -32.00 0.00 -64.00 -64.00 0.00 0.00 32.00 -64.00 32.00 0.00 32.00 -33.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 65.00 0.00 32.00 -32.00 32.00 -33.00 32.00 -321.00 96.00 0.00 129.00 32.00 0.00 0.00 32.00 0.00 32.00 -32.00 0.00 -64.00 32.00 -33.00 0.00 -64.00 33.00 0.00 -33.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -64.00 -32.00 -97.00 -129.00 -64.00 -32.00 -289.00 -32.00 -193.00 96.00 -193.00 0.00 -32.00 -64.00 -32.00 -32.00 -97.00 0.00 -32.00 32.00 32.00 0.00 -96.00 32.00 -32.00 0.00 -65.00 65.00 -64.00 128.00 32.00 32.00 0.00 32.00 -96.00 65.00 0.00 64.00 32.00 32.00 0.00 32.00 -32.00 0.00 -33.00 33.00 -32.00 0.00 -96.00 -97.00 -129.00 -64.00 -96.00 -161.00 -129.00 0.00 -32.00 -64.00 0.00 64.00 -32.00 -64.00 32.00 -97.00 -96.00 -128.00 -33.00 -32.00 -128.00 -65.00 -32.00 0.00 -65.00 97.00 -64.00 32.00 -97.00 64.00 -32.00 -32.00 0.00 -32.00 0.00 -64.00 65.00 -65.00 -193.00 -128.00 -65.00 32.00 -96.00 96.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 0.00 -32.00 -64.00 0.00 -32.00 0.00 -32.00 -65.00 -65.00 -32.00 -32.00 -64.00 -64.00 -97.00 -129.00 -64.00 -64.00 0.00 -32.00 0.00 -32.00 -64.00 0.00 -32.00 -64.00 -322.00 -129.00 -64.00 -64.00 -97.00 -65.00 -64.00 0.00 -96.00 0.00 -129.00 -128.00 32.00 -33.00 0.00 -96.00 0.00 -32.00 -96.00 0.00 -65.00 -32.00 -32.00 0.00 -64.00 -32.00 -97.00 96.00 -96.00 -32.00 -64.00 32.00 -65.00 64.00 -32.00 65.00 32.00 32.00 -32.00 32.00 -128.00 0.00 -65.00 -32.00 -32.00 -32.00 32.00 -33.00 0.00 -32.00 -128.00 65.00 0.00 -65.00 -65.00 32.00 0.00 -32.00 33.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 -65.00 -33.00 -32.00 -64.00 0.00 -32.00 -64.00 -64.00 -32.00 -65.00 -32.00 -32.00 0.00 -32.00 -33.00 0.00 -32.00 -32.00 0.00 -64.00 -64.00 -65.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -97.00 97.00 -32.00 0.00 -96.00 64.00 32.00 32.00 0.00 65.00 -65.00 64.00 33.00 32.00 -33.00 193.00 -32.00 32.00 -32.00 64.00 -64.00 65.00 -65.00 32.00 0.00 32.00 -32.00 97.00 -32.00 -33.00 -64.00 33.00 -32.00 64.00 -129.00 129.00 -32.00 64.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -65.00 65.00 -32.00 96.00 -64.00 32.00 -32.00 0.00 -65.00 0.00 -64.00 0.00 -32.00 64.00 -64.00 0.00 -33.00 0.00 -64.00 33.00 -64.00 0.00 -64.00 0.00 -33.00 32.00 -96.00 96.00 -97.00 97.00 -64.00 128.00 0.00 33.00 0.00 64.00 -128.00 128.00 -97.00 33.00 -161.00 160.00 -64.00 -193.00 -161.00 -353.00 32.00 -65.00 -64.00 -160.00 -64.00 -97.00 -32.00 -32.00 -32.00 -32.00 -33.00 -129.00 97.00 -96.00 -64.00 0.00 -33.00 -64.00 33.00 -65.00 96.00 -64.00 32.00 -32.00 0.00 -32.00 -32.00 -97.00 -96.00 -96.00 0.00 -65.00 -97.00 0.00 -64.00 32.00 -32.00 0.00 -129.00 129.00 -97.00 97.00 -96.00 -33.00 -64.00 -32.00 -65.00 -32.00 -128.00 -96.00 -97.00 -97.00 -64.00 -96.00 -32.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 129.00 -97.00 32.00 -64.00 32.00 -129.00 -64.00 -64.00 -129.00 -96.00 -193.00 -33.00 -96.00 33.00 -161.00 257.00 -32.00 64.00 0.00 290.00 -64.00 128.00 -33.00 0.00 -64.00 32.00 -128.00 -64.00 -65.00 -129.00 -32.00 -64.00 0.00 -96.00 -32.00 -161.00 -32.00 -97.00 -65.00 -64.00 -96.00 -32.00 -129.00 -129.00 -128.00 -96.00 -32.00 -32.00 -33.00 0.00 -225.00 -32.00 -64.00 0.00 -64.00 32.00 -193.00 32.00 -97.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 -32.00 -65.00 -129.00 -128.00 -64.00 -65.00 -64.00 -32.00 0.00 -128.00 -33.00 -129.00 -32.00 -161.00 -32.00 -128.00 -32.00 0.00 -32.00 -65.00 -65.00 -32.00 33.00 -32.00 32.00 -96.00 32.00 -97.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -33.00 -65.00 0.00 -32.00 0.00 -161.00 33.00 -32.00 -33.00 -64.00 -32.00 -32.00 -64.00 -32.00 -32.00 -97.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 -32.00 -33.00 -65.00 0.00 -128.00 0.00 -65.00 0.00 -64.00 -64.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -33.00 0.00 -128.00 32.00 -32.00 0.00 -33.00 96.00 -64.00 0.00 -64.00 0.00 -32.00 33.00 0.00 64.00 -97.00 64.00 -193.00 64.00 -32.00 33.00 -128.00 32.00 -33.00 32.00 -32.00 32.00 0.00 32.00 -193.00 64.00 -96.00 0.00 -97.00 33.00 -64.00 0.00 -128.00 0.00 -33.00 96.00 65.00 129.00 32.00 161.00 0.00 32.00 0.00 64.00 32.00 96.00 -32.00 33.00 -32.00 32.00 -32.00 32.00 -65.00 0.00 -225.00 -32.00 -193.00 128.00 -64.00 0.00 -64.00 -32.00 -258.00 64.00 -96.00 33.00 -32.00 32.00 0.00 64.00 0.00 32.00 0.00 32.00 96.00 193.00 32.00 129.00 -96.00 193.00 -64.00 32.00 -33.00 96.00 -32.00 33.00 -193.00 225.00 -96.00 32.00 -64.00 32.00 -33.00 0.00 -160.00 0.00 -129.00 0.00 -64.00 64.00 -65.00 65.00 -192.00 96.00 -97.00 0.00 -64.00 0.00 -32.00 -64.00 -97.00 -64.00 -96.00 -97.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 -64.00 0.00 -32.00 32.00 -97.00 97.00 -64.00 192.00 -32.00 161.00 32.00 129.00 -32.00 96.00 -64.00 354.00 -65.00 64.00 -64.00 193.00 0.00 32.00 0.00 97.00 -129.00 128.00 -32.00 0.00 -96.00 -32.00 -97.00 -96.00 -64.00 0.00 -64.00 64.00 -97.00 193.00 -64.00 96.00 -32.00 -32.00 -97.00 -32.00 -32.00 0.00 -32.00 0.00 -97.00 32.00 -32.00 32.00 -32.00 129.00 -32.00 0.00 -64.00 64.00 -32.00 33.00 -33.00 0.00 -64.00 0.00 -161.00 64.00 -128.00 -32.00 -129.00 -32.00 -161.00 -97.00 -32.00 -32.00 -128.00 0.00 -129.00 64.00 32.00 -64.00 32.00 -64.00 0.00 -97.00 65.00 -32.00 32.00 0.00 0.00 -32.00 0.00 -64.00 -32.00 -65.00 64.00 -64.00 -32.00 -64.00 32.00 -33.00 -97.00 -128.00 33.00 -32.00 32.00 0.00 0.00 -32.00 96.00 32.00 64.00 -32.00 0.00 -33.00 0.00 -32.00 97.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 0.00 0.00 -65.00 -32.00 -64.00 64.00 -96.00 0.00 -33.00 32.00 -64.00 0.00 -32.00 0.00 -64.00 32.00 -65.00 -64.00 -32.00 -32.00 -64.00 -97.00 0.00 -32.00 0.00 -96.00 -64.00 -64.00 -33.00 -33.00 0.00 0.00 -64.00 -32.00 0.00 -64.00 -32.00 -64.00 32.00 0.00 -32.00 -65.00 0.00 -32.00 -64.00 -64.00 -32.00 32.00 -65.00 -32.00 -32.00 0.00 -96.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00 -64.00 -33.00 -65.00 -32.00 -64.00 0.00 -161.00 -64.00 0.00 0.00 -128.00 -97.00 -32.00 0.00 -65.00 -64.00 -64.00 0.00 -96.00 0.00 -33.00 -32.00 0.00 -64.00 -64.00 0.00 -64.00 -129.00 32.00 -64.00 0.00 0.00 -64.00 -97.00 -33.00 -64.00 33.00 -32.00 0.00 -97.00 64.00 -64.00 -32.00 32.00 -129.00 -32.00 -128.00 -32.00 0.00 -64.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -96.00 0.00 -33.00 -65.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -64.00 0.00 -33.00 32.00 -32.00 0.00 -32.00 32.00 -64.00 -225.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 32.00 -96.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -97.00 0.00 -64.00 64.00 -65.00 33.00 -32.00 0.00 -96.00 -65.00 -97.00 0.00 -128.00 -96.00z\"\n          },\n          ma: {\n            name: \"MA\",\n            path: \"M125256.00 53503.00l932.00 -772.00 450.00 -322.00 33.00 -64.00 96.00 -64.00 -32.00 -65.00 32.00 -32.00 32.00 0.00 32.00 32.00 97.00 -64.00 900.00 -707.00 64.00 -65.00 547.00 -450.00 97.00 -64.00 160.00 -129.00 386.00 -321.00 611.00 -482.00 64.00 -97.00 65.00 -64.00 96.00 32.00 64.00 0.00 33.00 64.00 32.00 -32.00 64.00 32.00 64.00 0.00 65.00 0.00 96.00 32.00 129.00 -96.00 64.00 -96.00 64.00 -33.00 65.00 -32.00 32.00 -32.00 128.00 -161.00 65.00 -193.00 160.00 -160.00 65.00 -97.00 64.00 -96.00 0.00 -65.00 64.00 -64.00 0.00 -64.00 65.00 -65.00 -32.00 0.00 32.00 -64.00 0.00 -64.00 32.00 -32.00 -32.00 -32.00 128.00 -65.00 32.00 -64.00 33.00 0.00 32.00 0.00 0.00 -64.00 64.00 32.00 32.00 -65.00 32.00 0.00 65.00 -96.00 32.00 0.00 32.00 0.00 -32.00 -129.00 32.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 32.00 -32.00 -32.00 -33.00 64.00 -32.00 33.00 32.00 32.00 -32.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 -65.00 -33.00 -64.00 33.00 -32.00 0.00 -32.00 64.00 -65.00 0.00 -32.00 0.00 -64.00 32.00 0.00 0.00 -64.00 32.00 -33.00 65.00 0.00 -33.00 33.00 33.00 0.00 0.00 -33.00 64.00 0.00 0.00 -32.00 32.00 0.00 0.00 -32.00 32.00 -32.00 64.00 0.00 0.00 -32.00 97.00 -65.00 32.00 -64.00 64.00 0.00 33.00 0.00 32.00 -64.00 32.00 0.00 32.00 -64.00 32.00 32.00 0.00 -65.00 32.00 0.00 0.00 -32.00 0.00 -64.00 32.00 0.00 33.00 -32.00 0.00 -97.00 64.00 -32.00 64.00 -64.00 32.00 32.00 0.00 -32.00 0.00 -97.00 32.00 0.00 33.00 0.00 32.00 0.00 32.00 0.00 32.00 -96.00 64.00 -32.00 33.00 -65.00 -33.00 -64.00 65.00 -32.00 0.00 -32.00 0.00 -64.00 64.00 -33.00 0.00 -32.00 0.00 -64.00 0.00 -64.00 32.00 -65.00 0.00 -64.00 -32.00 -32.00 64.00 -32.00 0.00 -65.00 -32.00 -128.00 97.00 -65.00 -32.00 -32.00 -33.00 32.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 33.00 -32.00 -33.00 -32.00 33.00 0.00 -33.00 0.00 33.00 -32.00 -33.00 -33.00 33.00 -32.00 32.00 -64.00 32.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -64.00 64.00 -32.00 0.00 -33.00 65.00 0.00 32.00 -32.00 64.00 -32.00 -32.00 -32.00 64.00 0.00 -64.00 -97.00 0.00 -32.00 64.00 0.00 0.00 32.00 32.00 0.00 -32.00 -128.00 97.00 32.00 0.00 -64.00 -33.00 0.00 0.00 -32.00 33.00 0.00 -33.00 -33.00 65.00 0.00 -32.00 -64.00 -33.00 0.00 0.00 -64.00 33.00 0.00 0.00 -32.00 0.00 32.00 32.00 -32.00 -32.00 -65.00 0.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -96.00 32.00 32.00 32.00 -32.00 32.00 -33.00 -32.00 0.00 32.00 0.00 32.00 -32.00 33.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 0.00 64.00 -64.00 32.00 -32.00 32.00 32.00 0.00 32.00 64.00 -32.00 0.00 -32.00 -32.00 -33.00 32.00 0.00 33.00 65.00 32.00 0.00 0.00 -32.00 0.00 -65.00 64.00 32.00 32.00 -64.00 32.00 0.00 65.00 0.00 0.00 -64.00 -65.00 -32.00 65.00 -65.00 -65.00 -64.00 33.00 0.00 32.00 0.00 32.00 0.00 0.00 -128.00 32.00 -33.00 32.00 33.00 32.00 0.00 32.00 -65.00 -32.00 -32.00 32.00 -32.00 65.00 0.00 32.00 32.00 0.00 -32.00 0.00 -32.00 -64.00 -32.00 64.00 -33.00 0.00 -32.00 -97.00 -64.00 65.00 0.00 64.00 64.00 32.00 -32.00 -32.00 -96.00 64.00 0.00 33.00 0.00 32.00 -65.00 -32.00 -32.00 0.00 -64.00 -65.00 32.00 -32.00 -64.00 32.00 0.00 32.00 0.00 33.00 0.00 32.00 -65.00 32.00 0.00 0.00 97.00 32.00 0.00 32.00 -32.00 -32.00 -129.00 96.00 -32.00 33.00 32.00 0.00 -96.00 32.00 -32.00 -32.00 -65.00 0.00 -96.00 64.00 -32.00 -32.00 -32.00 64.00 -65.00 -64.00 -32.00 0.00 -32.00 32.00 -32.00 64.00 32.00 32.00 -64.00 -32.00 -33.00 -32.00 0.00 0.00 -32.00 64.00 0.00 0.00 -32.00 -32.00 -32.00 -64.00 0.00 0.00 -64.00 0.00 -33.00 64.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -64.00 32.00 0.00 -64.00 -65.00 -32.00 0.00 0.00 -32.00 64.00 -32.00 64.00 0.00 32.00 32.00 33.00 -32.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 64.00 32.00 64.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 64.00 0.00 65.00 64.00 32.00 -32.00 32.00 0.00 -64.00 -32.00 32.00 0.00 0.00 -32.00 -64.00 32.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 -33.00 0.00 0.00 -32.00 0.00 -97.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -64.00 32.00 -32.00 -64.00 0.00 -64.00 0.00 -65.00 0.00 -64.00 -32.00 0.00 -33.00 32.00 -32.00 -96.00 0.00 -32.00 0.00 -32.00 -64.00 32.00 0.00 -32.00 -32.00 -65.00 64.00 -96.00 64.00 -32.00 0.00 -32.00 65.00 32.00 0.00 -32.00 0.00 -33.00 64.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 32.00 0.00 65.00 128.00 32.00 -32.00 0.00 -129.00 64.00 -32.00 32.00 0.00 64.00 0.00 65.00 -32.00 161.00 -32.00 -33.00 -129.00 65.00 -32.00 32.00 0.00 32.00 -64.00 -32.00 -32.00 -32.00 -32.00 0.00 -65.00 32.00 -32.00 32.00 0.00 32.00 32.00 65.00 0.00 225.00 -64.00 0.00 -32.00 -65.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -64.00 0.00 -64.00 32.00 -65.00 -32.00 0.00 0.00 -32.00 0.00 -96.00 0.00 -97.00 64.00 -64.00 33.00 -64.00 32.00 -65.00 0.00 -32.00 -65.00 -32.00 -96.00 129.00 -32.00 0.00 -64.00 -33.00 0.00 -32.00 0.00 -64.00 128.00 -96.00 32.00 -33.00 0.00 -64.00 0.00 -96.00 32.00 -33.00 33.00 -160.00 -65.00 -65.00 0.00 -32.00 97.00 -32.00 32.00 64.00 64.00 33.00 64.00 -33.00 33.00 -96.00 64.00 0.00 64.00 -32.00 0.00 -32.00 65.00 -129.00 64.00 -64.00 96.00 -32.00 65.00 -65.00 -65.00 -32.00 0.00 -32.00 97.00 -97.00 32.00 -32.00 0.00 -96.00 -32.00 -64.00 0.00 -97.00 32.00 -64.00 32.00 -32.00 64.00 -97.00 0.00 -96.00 65.00 -161.00 64.00 -289.00 -32.00 -129.00 -64.00 0.00 0.00 -32.00 160.00 -225.00 -32.00 -65.00 -32.00 -32.00 -32.00 -64.00 -161.00 -32.00 -96.00 32.00 -32.00 0.00 -33.00 -32.00 -64.00 64.00 -32.00 -32.00 -32.00 -161.00 32.00 -128.00 32.00 -33.00 32.00 -32.00 65.00 0.00 128.00 0.00 97.00 -32.00 64.00 32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 33.00 0.00 96.00 -32.00 64.00 -65.00 33.00 -64.00 0.00 -64.00 -33.00 -32.00 0.00 -33.00 0.00 -96.00 65.00 -97.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 96.00 -32.00 -64.00 -289.00 0.00 -65.00 -65.00 -64.00 -32.00 -32.00 -64.00 -65.00 193.00 -160.00 0.00 -33.00 -97.00 -64.00 129.00 -96.00 32.00 -129.00 32.00 -32.00 33.00 -96.00 32.00 -65.00 0.00 -32.00 -129.00 32.00 0.00 -32.00 0.00 -96.00 -96.00 0.00 -65.00 -161.00 129.00 -129.00 -64.00 -128.00 96.00 -97.00 97.00 -32.00 32.00 0.00 0.00 32.00 128.00 -32.00 0.00 -193.00 32.00 -32.00 0.00 64.00 33.00 -32.00 0.00 -64.00 32.00 -64.00 32.00 0.00 0.00 32.00 0.00 64.00 64.00 96.00 0.00 -32.00 -32.00 -64.00 0.00 -96.00 0.00 -65.00 32.00 -64.00 32.00 0.00 65.00 -129.00 0.00 32.00 0.00 -64.00 0.00 -32.00 32.00 0.00 32.00 32.00 0.00 64.00 32.00 0.00 0.00 -128.00 0.00 -32.00 32.00 32.00 0.00 -65.00 129.00 0.00 0.00 65.00 -64.00 0.00 0.00 32.00 32.00 -32.00 32.00 32.00 0.00 64.00 32.00 0.00 0.00 32.00 -64.00 33.00 0.00 -33.00 -65.00 0.00 -32.00 0.00 97.00 0.00 0.00 97.00 -32.00 0.00 -33.00 64.00 33.00 -32.00 64.00 -32.00 32.00 0.00 0.00 -32.00 0.00 32.00 0.00 96.00 0.00 33.00 -96.00 0.00 -65.00 32.00 32.00 32.00 -32.00 32.00 -32.00 32.00 64.00 -32.00 0.00 32.00 0.00 32.00 33.00 -32.00 -33.00 -32.00 33.00 -64.00 64.00 0.00 0.00 32.00 32.00 -32.00 64.00 0.00 -32.00 64.00 0.00 32.00 32.00 0.00 -32.00 64.00 0.00 97.00 -32.00 32.00 32.00 32.00 -32.00 129.00 32.00 32.00 32.00 -32.00 33.00 -161.00 0.00 -32.00 128.00 -257.00 32.00 32.00 -32.00 -32.00 64.00 -129.00 33.00 0.00 0.00 -32.00 64.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 96.00 -97.00 32.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 -32.00 96.00 -33.00 -32.00 0.00 32.00 0.00 33.00 0.00 -33.00 0.00 33.00 33.00 32.00 160.00 -32.00 65.00 0.00 -32.00 0.00 32.00 -65.00 64.00 0.00 32.00 0.00 32.00 -128.00 33.00 0.00 32.00 -129.00 128.00 0.00 32.00 -32.00 33.00 32.00 0.00 32.00 0.00 -32.00 64.00 -32.00 0.00 0.00 32.00 64.00 -32.00 0.00 -97.00 65.00 -96.00 64.00 -32.00 32.00 0.00 32.00 32.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 32.00 0.00 0.00 33.00 -64.00 0.00 0.00 32.00 64.00 -32.00 32.00 -33.00 32.00 -32.00 0.00 32.00 -64.00 97.00 64.00 -32.00 -32.00 64.00 -32.00 32.00 -32.00 32.00 -65.00 65.00 -64.00 0.00 64.00 32.00 0.00 32.00 -64.00 0.00 -32.00 0.00 32.00 0.00 32.00 0.00 -32.00 64.00 32.00 32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 -32.00 96.00 0.00 96.00 -65.00 0.00 32.00 -96.00 65.00 0.00 64.00 32.00 -32.00 64.00 -97.00 0.00 65.00 -160.00 128.00 0.00 32.00 128.00 0.00 -32.00 33.00 -32.00 32.00 32.00 32.00 0.00 -64.00 32.00 -33.00 65.00 -160.00 32.00 -161.00 0.00 -32.00 64.00 64.00 32.00 64.00 -32.00 97.00 -32.00 64.00 64.00 -161.00 -64.00 -192.00 64.00 -65.00 65.00 -32.00 32.00 32.00 0.00 32.00 32.00 -32.00 -32.00 65.00 -32.00 32.00 -33.00 96.00 0.00 32.00 65.00 65.00 -107.00 160.00 10.00 0.00 0.00 25.00 32.00 -25.00 0.00 -32.00 33.00 0.00 32.00 0.00 -32.00 -32.00 32.00 -64.00 32.00 32.00 -32.00 64.00 32.00 0.00 32.00 64.00 -96.00 65.00 -65.00 -32.00 0.00 32.00 32.00 -32.00 65.00 32.00 64.00 -32.00 0.00 32.00 32.00 -32.00 -32.00 0.00 -32.00 -129.00 64.00 -129.00 32.00 -128.00 0.00 -32.00 32.00 0.00 0.00 32.00 0.00 32.00 65.00 -129.00 0.00 -64.00 32.00 0.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 -64.00 -32.00 129.00 -33.00 96.00 0.00 32.00 33.00 32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 64.00 0.00 -32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -64.00 65.00 -33.00 64.00 -32.00 32.00 0.00 64.00 -32.00 0.00 32.00 65.00 -64.00 64.00 -32.00 0.00 32.00 0.00 32.00 -32.00 64.00 0.00 33.00 96.00 64.00 97.00 0.00 64.00 -32.00 64.00 32.00 65.00 -97.00 0.00 -32.00 64.00 -32.00 96.00 32.00 33.00 0.00 -33.00 32.00 -64.00 0.00 -64.00 33.00 0.00 32.00 0.00 32.00 -32.00 32.00 32.00 0.00 96.00 64.00 32.00 -128.00 65.00 -32.00 32.00 -33.00 0.00 0.00 64.00 -64.00 0.00 -32.00 32.00 -64.00 -64.00 32.00 0.00 -32.00 32.00 32.00 0.00 32.00 32.00 32.00 -32.00 64.00 0.00 33.00 -32.00 64.00 -64.00 96.00 -32.00 32.00 -33.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -65.00 0.00 65.00 -32.00 32.00 0.00 -32.00 -32.00 -33.00 0.00 -64.00 32.00 32.00 32.00 0.00 -32.00 -32.00 0.00 -96.00 129.00 -97.00 32.00 97.00 0.00 -33.00 64.00 -96.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -193.00 0.00 -128.00 32.00 -97.00 0.00 -64.00 33.00 -64.00 32.00 32.00 0.00 -32.00 0.00 -33.00 -65.00 0.00 33.00 -32.00 32.00 -32.00 32.00 64.00 32.00 0.00 0.00 65.00 0.00 128.00 0.00 32.00 -32.00 33.00 0.00 -33.00 -64.00 97.00 -33.00 128.00 0.00 65.00 33.00 0.00 0.00 32.00 0.00 64.00 0.00 32.00 -65.00 65.00 0.00 96.00 0.00 32.00 0.00 32.00 0.00 33.00 0.00 32.00 -32.00 -32.00 32.00 96.00 32.00 0.00 0.00 -64.00 0.00 -32.00 0.00 32.00 33.00 32.00 -33.00 64.00 0.00 65.00 -64.00 32.00 32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 32.00 0.00 0.00 -28.00 -225.00 28.00 0.00 -32.00 -32.00 160.00 -65.00 65.00 -32.00 64.00 32.00 -64.00 65.00 -32.00 32.00 -33.00 32.00 33.00 32.00 0.00 -64.00 -65.00 0.00 -32.00 32.00 -32.00 96.00 0.00 -32.00 32.00 65.00 -32.00 128.00 0.00 32.00 -32.00 65.00 -97.00 0.00 -64.00 0.00 -32.00 -32.00 -64.00 32.00 -161.00 32.00 -32.00 96.00 -33.00 0.00 33.00 0.00 -33.00 32.00 -32.00 33.00 32.00 -33.00 33.00 33.00 32.00 -65.00 96.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 0.00 161.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 32.00 0.00 0.00 -32.00 32.00 32.00 32.00 -64.00 32.00 32.00 0.00 32.00 33.00 33.00 -33.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -64.00 32.00 -65.00 65.00 -96.00 64.00 -32.00 0.00 32.00 -32.00 32.00 129.00 -97.00 32.00 0.00 -32.00 129.00 -65.00 -32.00 -32.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 -64.00 33.00 0.00 32.00 -32.00 64.00 -64.00 0.00 0.00 32.00 32.00 -32.00 64.00 0.00 32.00 -96.00 65.00 -33.00 0.00 33.00 0.00 32.00 32.00 0.00 -32.00 32.00 -33.00 32.00 -32.00 -32.00 -64.00 32.00 0.00 64.00 32.00 33.00 -32.00 32.00 -32.00 96.00 32.00 -64.00 64.00 -64.00 -32.00 -65.00 0.00 -32.00 32.00 0.00 32.00 32.00 33.00 0.00 64.00 -64.00 0.00 -64.00 32.00 -65.00 64.00 -32.00 -32.00 64.00 0.00 33.00 0.00 32.00 -32.00 64.00 -32.00 64.00 -32.00 33.00 32.00 -33.00 32.00 -32.00 0.00 65.00 -32.00 32.00 0.00 32.00 -97.00 32.00 97.00 0.00 32.00 -64.00 0.00 32.00 32.00 64.00 -96.00 129.00 32.00 32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 64.00 -33.00 -32.00 0.00 65.00 -128.00 32.00 -32.00 0.00 32.00 64.00 -64.00 0.00 -33.00 -32.00 33.00 -64.00 32.00 0.00 -32.00 64.00 -65.00 32.00 32.00 0.00 -96.00 0.00 -32.00 64.00 0.00 33.00 0.00 0.00 -32.00 32.00 0.00 0.00 -33.00 -32.00 0.00 32.00 -32.00 128.00 -32.00 65.00 97.00 -33.00 96.00 -32.00 64.00 -32.00 33.00 -64.00 -97.00 32.00 64.00 0.00 33.00 -32.00 0.00 0.00 32.00 -64.00 32.00 0.00 -64.00 0.00 64.00 -33.00 0.00 -64.00 32.00 0.00 96.00 -64.00 129.00 32.00 32.00 0.00 64.00 -32.00 0.00 -32.00 -32.00 64.00 97.00 0.00 32.00 -64.00 96.00 64.00 0.00 32.00 65.00 -32.00 64.00 32.00 -32.00 64.00 0.00 0.00 96.00 -32.00 65.00 -64.00 -32.00 -32.00 64.00 -32.00 -32.00 32.00 32.00 0.00 32.00 0.00 -32.00 32.00 -32.00 129.00 64.00 0.00 -32.00 -33.00 0.00 33.00 -64.00 0.00 -97.00 -65.00 -96.00 0.00 -33.00 65.00 -64.00 0.00 -64.00 96.00 -129.00 32.00 0.00 0.00 -32.00 32.00 32.00 -32.00 64.00 0.00 97.00 -32.00 32.00 32.00 32.00 32.00 65.00 32.00 32.00 -96.00 -129.00 64.00 -32.00 0.00 -64.00 32.00 -33.00 33.00 33.00 0.00 32.00 -33.00 0.00 0.00 32.00 33.00 32.00 -33.00 -32.00 0.00 -32.00 33.00 32.00 32.00 -32.00 -65.00 -65.00 33.00 -64.00 32.00 -32.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 -32.00 32.00 0.00 -32.00 -32.00 -96.00 0.00 -32.00 -64.00 64.00 -64.00 64.00 -33.00 0.00 -32.00 65.00 32.00 -33.00 0.00 0.00 65.00 0.00 -65.00 65.00 0.00 -32.00 -32.00 -65.00 -32.00 -32.00 0.00 32.00 64.00 -32.00 0.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 33.00 -65.00 64.00 33.00 -64.00 0.00 0.00 32.00 64.00 -32.00 32.00 64.00 -32.00 -32.00 32.00 -32.00 -32.00 32.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 -97.00 -64.00 0.00 -32.00 65.00 -32.00 128.00 32.00 33.00 64.00 0.00 32.00 0.00 32.00 32.00 -32.00 0.00 32.00 0.00 97.00 0.00 32.00 0.00 64.00 0.00 65.00 0.00 -129.00 32.00 0.00 32.00 257.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 32.00 0.00 33.00 -65.00 0.00 -128.00 64.00 -129.00 64.00 0.00 32.00 -32.00 33.00 0.00 64.00 32.00 96.00 32.00 0.00 -32.00 0.00 -32.00 -160.00 32.00 0.00 64.00 -65.00 65.00 0.00 32.00 0.00 0.00 97.00 -65.00 32.00 0.00 64.00 -32.00 65.00 0.00 32.00 -32.00 64.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 -32.00 32.00 0.00 129.00 -32.00 0.00 0.00 32.00 32.00 -32.00 32.00 -129.00 32.00 0.00 32.00 32.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 65.00 -65.00 0.00 -32.00 32.00 -64.00 32.00 -65.00 32.00 33.00 32.00 32.00 -32.00 64.00 -32.00 0.00 64.00 32.00 0.00 32.00 0.00 -32.00 0.00 -161.00 65.00 33.00 64.00 64.00 -64.00 96.00 0.00 65.00 -33.00 64.00 0.00 64.00 -32.00 32.00 -64.00 129.00 0.00 32.00 -32.00 32.00 32.00 97.00 0.00 32.00 -64.00 -64.00 -33.00 32.00 -32.00 0.00 32.00 32.00 33.00 -64.00 64.00 64.00 -97.00 193.00 0.00 32.00 -64.00 0.00 -32.00 32.00 -64.00 0.00 0.00 65.00 -32.00 0.00 -33.00 64.00 33.00 -64.00 32.00 0.00 32.00 -65.00 32.00 32.00 32.00 -32.00 32.00 -32.00 -64.00 97.00 32.00 32.00 -64.00 64.00 64.00 -64.00 0.00 -65.00 32.00 -32.00 32.00 0.00 -32.00 161.00 32.00 64.00 33.00 65.00 0.00 -33.00 64.00 0.00 0.00 -96.00 0.00 -129.00 32.00 -32.00 64.00 -193.00 0.00 -161.00 33.00 -32.00 96.00 -32.00 64.00 97.00 0.00 32.00 33.00 -32.00 32.00 64.00 64.00 -32.00 0.00 -32.00 -32.00 -97.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -97.00 0.00 -32.00 129.00 -96.00 64.00 -65.00 32.00 0.00 32.00 33.00 33.00 -65.00 32.00 0.00 -32.00 -64.00 32.00 -32.00 32.00 0.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 32.00 0.00 0.00 32.00 32.00 -32.00 33.00 0.00 0.00 32.00 0.00 32.00 -33.00 0.00 33.00 33.00 0.00 32.00 0.00 32.00 0.00 -32.00 0.00 -32.00 -33.00 32.00 33.00 64.00 32.00 32.00 -97.00 65.00 32.00 0.00 65.00 -65.00 0.00 97.00 0.00 64.00 32.00 32.00 32.00 0.00 32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -64.00 32.00 -65.00 -32.00 -96.00 0.00 -97.00 0.00 -64.00 32.00 -32.00 0.00 -64.00 32.00 -33.00 32.00 -96.00 32.00 -32.00 -32.00 -64.00 0.00 32.00 0.00 -32.00 0.00 -1.00 -32.00 -32.00 16.00 0.00 -16.00 -32.00 32.00 -64.00 0.00 -32.00 32.00 0.00 32.00 32.00 -32.00 64.00 32.00 32.00 -32.00 33.00 -32.00 160.00 64.00 129.00 -32.00 64.00 -32.00 65.00 0.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 0.00 32.00 -32.00 64.00 32.00 0.00 0.00 -64.00 33.00 0.00 -33.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -33.00 65.00 33.00 32.00 -33.00 -97.00 -32.00 33.00 -96.00 64.00 64.00 0.00 32.00 0.00 32.00 -32.00 33.00 -65.00 32.00 65.00 -32.00 0.00 32.00 64.00 -65.00 0.00 -96.00 -64.00 -64.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 129.00 32.00 -97.00 32.00 32.00 32.00 65.00 -32.00 -33.00 -32.00 33.00 32.00 0.00 -32.00 32.00 0.00 32.00 32.00 -32.00 0.00 32.00 0.00 161.00 0.00 64.00 -64.00 97.00 64.00 -65.00 32.00 -96.00 -32.00 -32.00 64.00 -33.00 65.00 65.00 0.00 64.00 0.00 -64.00 96.00 0.00 32.00 -32.00 32.00 0.00 33.00 32.00 64.00 64.00 64.00 0.00 32.00 64.00 33.00 0.00 -33.00 -64.00 0.00 -32.00 33.00 -64.00 64.00 -33.00 32.00 65.00 -64.00 0.00 0.00 32.00 0.00 64.00 32.00 32.00 -32.00 -64.00 32.00 -32.00 32.00 64.00 64.00 0.00 -64.00 0.00 -32.00 -64.00 193.00 -32.00 -32.00 0.00 -65.00 0.00 0.00 -32.00 32.00 -33.00 97.00 -128.00 64.00 -32.00 65.00 64.00 -33.00 -97.00 65.00 65.00 -32.00 -65.00 0.00 -32.00 64.00 0.00 -32.00 0.00 -32.00 -32.00 64.00 -32.00 64.00 32.00 0.00 -32.00 -32.00 0.00 96.00 0.00 -32.00 0.00 65.00 0.00 32.00 0.00 32.00 64.00 -64.00 32.00 0.00 -32.00 -65.00 97.00 32.00 193.00 -64.00 -32.00 0.00 -129.00 -32.00 64.00 0.00 97.00 -96.00 -32.00 -97.00 0.00 64.00 0.00 97.00 64.00 32.00 0.00 -32.00 0.00 -64.00 0.00 -33.00 0.00 65.00 32.00 -32.00 32.00 -33.00 32.00 -64.00 33.00 64.00 0.00 -32.00 64.00 0.00 32.00 -64.00 32.00 -64.00 0.00 32.00 64.00 -32.00 65.00 32.00 64.00 0.00 96.00 32.00 33.00 0.00 -33.00 64.00 0.00 65.00 -32.00 64.00 65.00 32.00 64.00 0.00 -32.00 96.00 -129.00 0.00 -96.00 33.00 0.00 96.00 96.00 0.00 64.00 32.00 65.00 -32.00 32.00 32.00 0.00 32.00 -32.00 -64.00 -97.00 32.00 0.00 97.00 129.00 -33.00 64.00 -96.00 97.00 96.00 -32.00 33.00 -97.00 0.00 -64.00 -33.00 -32.00 -32.00 -129.00 0.00 -32.00 65.00 0.00 -33.00 -32.00 33.00 0.00 0.00 32.00 32.00 -32.00 32.00 -65.00 0.00 129.00 -32.00 129.00 32.00 0.00 0.00 64.00 32.00 -32.00 32.00 -32.00 -96.00 -33.00 64.00 -32.00 64.00 65.00 -32.00 -97.00 0.00 -32.00 129.00 -96.00 32.00 -33.00 32.00 0.00 32.00 33.00 0.00 -33.00 0.00 -32.00 0.00 129.00 -96.00 96.00 0.00 65.00 0.00 32.00 -64.00 0.00 64.00 0.00 32.00 -65.00 64.00 -64.00 0.00 -32.00 33.00 0.00 0.00 -32.00 0.00 32.00 0.00 32.00 -33.00 0.00 33.00 32.00 32.00 -128.00 32.00 -65.00 32.00 33.00 32.00 64.00 0.00 32.00 32.00 32.00 32.00 97.00 33.00 64.00 0.00 96.00 -65.00 97.00 -32.00 -32.00 -32.00 -65.00 -32.00 33.00 -32.00 -33.00 0.00 33.00 -65.00 0.00 0.00 -65.00 -32.00 65.00 -161.00 0.00 -32.00 -33.00 -32.00 0.00 32.00 0.00 32.00 65.00 -64.00 96.00 -32.00 0.00 -32.00 32.00 -65.00 -64.00 -64.00 64.00 64.00 -64.00 0.00 64.00 33.00 0.00 0.00 33.00 -33.00 0.00 -64.00 64.00 -32.00 0.00 0.00 32.00 64.00 0.00 32.00 32.00 -32.00 0.00 32.00 0.00 33.00 32.00 96.00 32.00 -64.00 65.00 -97.00 0.00 0.00 32.00 32.00 -32.00 65.00 32.00 64.00 -32.00 0.00 -65.00 0.00 -32.00 -64.00 0.00 -32.00 -32.00 0.00 -32.00 96.00 0.00 32.00 32.00 65.00 32.00 96.00 0.00 32.00 -32.00 32.00 0.00 0.00 97.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 32.00 0.00 32.00 32.00 -129.00 96.00 -32.00 33.00 -129.00 32.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 32.00 32.00 32.00 -32.00 0.00 32.00 -64.00 0.00 -32.00 65.00 -65.00 0.00 -64.00 32.00 129.00 -32.00 32.00 -33.00 64.00 0.00 64.00 -96.00 97.00 0.00 225.00 -64.00 0.00 32.00 -32.00 64.00 -65.00 32.00 -64.00 0.00 -32.00 32.00 64.00 -32.00 32.00 0.00 129.00 -96.00 0.00 64.00 64.00 0.00 -64.00 0.00 32.00 -64.00 32.00 -97.00 65.00 0.00 96.00 -32.00 32.00 -96.00 32.00 32.00 0.00 64.00 -32.00 32.00 -32.00 129.00 -32.00 0.00 -64.00 0.00 0.00 32.00 -32.00 0.00 0.00 97.00 64.00 -129.00 32.00 32.00 32.00 -32.00 32.00 -97.00 65.00 -64.00 0.00 32.00 -33.00 65.00 33.00 32.00 -33.00 -32.00 33.00 -97.00 -33.00 -64.00 0.00 -32.00 33.00 0.00 0.00 -32.00 32.00 0.00 -65.00 -33.00 0.00 -64.00 65.00 32.00 96.00 0.00 129.00 97.00 -32.00 32.00 -33.00 -32.00 -128.00 193.00 -32.00 64.00 64.00 129.00 -32.00 32.00 64.00 -32.00 32.00 -33.00 -32.00 0.00 0.00 -96.00 0.00 -32.00 129.00 -97.00 64.00 32.00 0.00 33.00 -129.00 64.00 33.00 64.00 -33.00 32.00 -32.00 0.00 65.00 97.00 0.00 32.00 0.00 32.00 64.00 65.00 64.00 -33.00 65.00 -64.00 32.00 -64.00 32.00 -32.00 64.00 64.00 0.00 64.00 -96.00 97.00 -97.00 64.00 -32.00 0.00 -64.00 64.00 -32.00 0.00 -33.00 32.00 33.00 -32.00 32.00 32.00 32.00 -32.00 32.00 0.00 32.00 0.00 0.00 32.00 0.00 33.00 0.00 32.00 32.00 32.00 0.00 -32.00 -32.00 -65.00 129.00 -64.00 0.00 64.00 32.00 -32.00 0.00 32.00 32.00 33.00 0.00 -33.00 0.00 -96.00 32.00 0.00 33.00 32.00 64.00 193.00 32.00 32.00 32.00 32.00 0.00 129.00 -64.00 -32.00 0.00 -65.00 -32.00 33.00 -32.00 -33.00 -33.00 33.00 0.00 32.00 33.00 -32.00 32.00 32.00 96.00 64.00 -32.00 64.00 32.00 -32.00 32.00 0.00 0.00 97.00 -64.00 32.00 64.00 64.00 32.00 0.00 33.00 -32.00 0.00 32.00 -33.00 97.00 -96.00 32.00 -32.00 32.00 0.00 225.00 0.00 193.00 64.00 -32.00 97.00 32.00 32.00 32.00 128.00 97.00 32.00 64.00 -32.00 0.00 -32.00 64.00 32.00 -32.00 32.00 0.00 33.00 0.00 64.00 96.00 64.00 33.00 -64.00 32.00 0.00 32.00 -32.00 0.00 0.00 -32.00 0.00 32.00 0.00 32.00 64.00 -32.00 0.00 -32.00 32.00 32.00 0.00 96.00 65.00 161.00 -33.00 -32.00 -32.00 64.00 32.00 -32.00 65.00 0.00 96.00 225.00 -32.00 32.00 32.00 33.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -97.00 32.00 97.00 0.00 64.00 64.00 0.00 32.00 -32.00 65.00 -65.00 96.00 -64.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 193.00 225.00 32.00 0.00 193.00 225.00 64.00 -32.00 32.00 -32.00 65.00 -32.00 128.00 0.00 32.00 0.00 161.00 -32.00 32.00 -32.00 129.00 -33.00 64.00 -32.00 65.00 -32.00 64.00 -32.00 64.00 -32.00 -32.00 -32.00 64.00 0.00 0.00 -32.00 97.00 -33.00 0.00 33.00 0.00 -33.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 32.00 -32.00 0.00 32.00 33.00 32.00 -33.00 0.00 33.00 32.00 -33.00 -32.00 -32.00 -64.00 0.00 0.00 -32.00 129.00 0.00 193.00 32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 -32.00 32.00 32.00 161.00 0.00 32.00 -32.00 0.00 -33.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -64.00 -32.00 -32.00 32.00 32.00 0.00 32.00 -64.00 0.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 32.00 65.00 0.00 -32.00 32.00 -129.00 32.00 -32.00 32.00 -64.00 33.00 32.00 0.00 64.00 -33.00 0.00 -32.00 64.00 32.00 97.00 0.00 -65.00 0.00 33.00 33.00 32.00 64.00 32.00 -97.00 96.00 0.00 258.00 33.00 96.00 64.00 -96.00 321.00 -97.00 161.00 97.00 -32.00 96.00 -161.00 161.00 -160.00 128.00 -226.00 33.00 -128.00 128.00 -161.00 32.00 -64.00 161.00 -129.00 161.00 -96.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 32.00 65.00 32.00 32.00 32.00 -64.00 -64.00 160.00 -354.00 65.00 -32.00 225.00 -96.00 160.00 -161.00 97.00 -32.00 129.00 64.00 96.00 64.00 225.00 483.00 64.00 96.00 65.00 32.00 32.00 -64.00 161.00 -96.00 64.00 -33.00 161.00 0.00 96.00 -32.00 32.00 0.00 0.00 32.00 32.00 0.00 129.00 33.00 32.00 0.00 161.00 0.00 547.00 160.00 96.00 65.00 289.00 128.00 418.00 225.00 129.00 65.00 193.00 64.00 482.00 257.00 257.00 129.00 161.00 0.00 -64.00 32.00 32.00 0.00 64.00 0.00 33.00 -32.00 -33.00 -65.00 -32.00 33.00 0.00 -33.00 32.00 -32.00 65.00 129.00 0.00 32.00 0.00 32.00 64.00 32.00 129.00 0.00 32.00 129.00 -32.00 32.00 -33.00 97.00 65.00 32.00 -32.00 -32.00 64.00 -97.00 -32.00 -161.00 -65.00 -64.00 -64.00 32.00 -32.00 -32.00 0.00 -32.00 64.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 -32.00 32.00 -33.00 32.00 0.00 96.00 33.00 322.00 353.00 225.00 161.00 129.00 97.00 96.00 0.00 0.00 32.00 193.00 -32.00 96.00 128.00 32.00 32.00 -32.00 -96.00 65.00 0.00 193.00 64.00 289.00 32.00 193.00 -96.00 32.00 -32.00 32.00 0.00 64.00 32.00 129.00 0.00 64.00 0.00 129.00 -129.00 32.00 0.00 32.00 0.00 0.00 97.00 33.00 64.00 0.00 -32.00 -33.00 0.00 33.00 -32.00 257.00 32.00 225.00 0.00 128.00 -32.00 97.00 0.00 64.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 129.00 225.00 32.00 64.00 32.00 -64.00 32.00 -64.00 -32.00 -65.00 64.00 -32.00 129.00 32.00 64.00 0.00 32.00 0.00 193.00 0.00 32.00 0.00 65.00 0.00 160.00 0.00 193.00 0.00 0.00 33.00 -32.00 -33.00 65.00 97.00 -65.00 64.00 -96.00 97.00 0.00 160.00 32.00 65.00 0.00 32.00 -97.00 32.00 0.00 97.00 -32.00 128.00 65.00 64.00 64.00 97.00 32.00 32.00 129.00 96.00 32.00 33.00 32.00 96.00 -96.00 97.00 0.00 32.00 -33.00 161.00 -64.00 32.00 -129.00 96.00 -32.00 64.00 -96.00 129.00 -64.00 32.00 -65.00 32.00 -32.00 32.00 0.00 33.00 0.00 96.00 -64.00 64.00 0.00 32.00 0.00 161.00 -32.00 0.00 -65.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 97.00 0.00 32.00 -32.00 0.00 -65.00 97.00 -64.00 32.00 -96.00 0.00 -161.00 32.00 -64.00 32.00 -161.00 0.00 -65.00 64.00 -32.00 32.00 0.00 65.00 129.00 0.00 32.00 0.00 0.00 32.00 0.00 32.00 0.00 32.00 -64.00 0.00 -32.00 32.00 -33.00 65.00 0.00 64.00 0.00 32.00 -64.00 32.00 -64.00 129.00 -161.00 32.00 0.00 32.00 -64.00 32.00 32.00 97.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 -161.00 -32.00 -161.00 64.00 -64.00 32.00 -32.00 0.00 -129.00 -64.00 -32.00 -32.00 -129.00 96.00 -64.00 0.00 -96.00 -32.00 0.00 65.00 -33.00 64.00 -64.00 32.00 -32.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 0.00 -65.00 96.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 -64.00 0.00 -97.00 -32.00 0.00 -32.00 -32.00 -32.00 65.00 0.00 96.00 -97.00 64.00 -32.00 65.00 0.00 32.00 0.00 32.00 0.00 32.00 -128.00 161.00 -65.00 64.00 -64.00 32.00 -96.00 65.00 -33.00 96.00 0.00 32.00 -32.00 65.00 -64.00 0.00 -97.00 128.00 -96.00 97.00 -32.00 64.00 0.00 32.00 0.00 32.00 64.00 129.00 0.00 64.00 -32.00 65.00 -32.00 32.00 32.00 96.00 32.00 64.00 -32.00 33.00 -32.00 32.00 -193.00 321.00 0.00 65.00 0.00 32.00 0.00 96.00 -64.00 64.00 -225.00 161.00 -33.00 97.00 -32.00 96.00 -32.00 0.00 -32.00 -32.00 -64.00 0.00 -65.00 193.00 -32.00 32.00 -64.00 193.00 0.00 96.00 -64.00 65.00 -97.00 32.00 -32.00 32.00 -32.00 64.00 96.00 65.00 0.00 32.00 -193.00 0.00 -32.00 32.00 -32.00 32.00 -193.00 225.00 -32.00 97.00 0.00 96.00 32.00 161.00 0.00 64.00 97.00 161.00 0.00 96.00 0.00 129.00 0.00 32.00 64.00 0.00 64.00 -32.00 32.00 0.00 0.00 32.00 193.00 129.00 65.00 64.00 -33.00 129.00 33.00 64.00 96.00 64.00 0.00 32.00 0.00 33.00 0.00 32.00 -32.00 0.00 0.00 96.00 -64.00 97.00 32.00 128.00 0.00 33.00 -32.00 64.00 -33.00 64.00 -160.00 225.00 -32.00 32.00 0.00 32.00 -65.00 33.00 -64.00 64.00 -32.00 64.00 32.00 65.00 32.00 32.00 97.00 64.00 0.00 64.00 -33.00 65.00 -96.00 96.00 0.00 97.00 32.00 96.00 32.00 0.00 161.00 161.00 32.00 96.00 0.00 129.00 0.00 32.00 129.00 129.00 0.00 32.00 64.00 64.00 -32.00 161.00 0.00 64.00 96.00 225.00 0.00 129.00 0.00 64.00 32.00 0.00 65.00 97.00 32.00 193.00 32.00 96.00 32.00 161.00 0.00 96.00 -128.00 161.00 0.00 64.00 64.00 161.00 0.00 32.00 0.00 65.00 -32.00 160.00 -32.00 65.00 -65.00 32.00 -128.00 64.00 0.00 64.00 -65.00 32.00 -128.00 33.00 -32.00 32.00 -32.00 128.00 -65.00 65.00 -128.00 32.00 -33.00 32.00 -32.00 129.00 0.00 32.00 -96.00 96.00 -32.00 193.00 -97.00 64.00 -32.00 97.00 -32.00 64.00 -64.00 0.00 -161.00 32.00 -32.00 65.00 -32.00 32.00 0.00 64.00 32.00 32.00 32.00 33.00 0.00 32.00 -32.00 160.00 64.00 225.00 0.00 65.00 -96.00 0.00 0.00 32.00 -33.00 64.00 33.00 161.00 32.00 64.00 -32.00 97.00 96.00 193.00 -96.00 160.00 0.00 65.00 32.00 32.00 32.00 129.00 0.00 64.00 64.00 64.00 64.00 64.00 33.00 33.00 0.00 96.00 0.00 32.00 -33.00 32.00 0.00 33.00 -64.00 32.00 -32.00 32.00 0.00 32.00 96.00 96.00 33.00 129.00 64.00 64.00 129.00 0.00 64.00 33.00 64.00 32.00 0.00 32.00 32.00 193.00 32.00 32.00 65.00 64.00 96.00 0.00 97.00 129.00 96.00 32.00 97.00 32.00 32.00 0.00 0.00 32.00 32.00 65.00 32.00 32.00 0.00 64.00 32.00 64.00 -32.00 129.00 -32.00 96.00 32.00 33.00 64.00 -33.00 32.00 33.00 0.00 32.00 -96.00 96.00 -32.00 32.00 0.00 97.00 -97.00 161.00 0.00 32.00 65.00 96.00 -32.00 97.00 32.00 96.00 -65.00 32.00 -32.00 32.00 0.00 33.00 65.00 32.00 -65.00 128.00 0.00 97.00 0.00 64.00 -96.00 129.00 -32.00 193.00 0.00 32.00 0.00 32.00 -32.00 96.00 -129.00 161.00 -161.00 64.00 -32.00 129.00 -64.00 64.00 -32.00 0.00 -129.00 32.00 -64.00 0.00 -65.00 -64.00 -96.00 0.00 -97.00 97.00 -128.00 64.00 -65.00 0.00 -32.00 0.00 -96.00 -64.00 -161.00 -33.00 -193.00 33.00 -32.00 0.00 -32.00 64.00 -97.00 64.00 -128.00 32.00 -193.00 -32.00 -64.00 129.00 -129.00 -32.00 0.00 96.00 -32.00 0.00 -65.00 32.00 -64.00 0.00 -96.00 -32.00 -65.00 32.00 0.00 33.00 -128.00 -65.00 -32.00 -64.00 -32.00 -64.00 -33.00 -33.00 -160.00 -64.00 -33.00 -32.00 -32.00 -97.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 -64.00 -96.00 -32.00 -97.00 -97.00 -96.00 -32.00 -64.00 -32.00 -129.00 32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -65.00 32.00 -128.00 0.00 -32.00 0.00 -65.00 64.00 -96.00 -64.00 -32.00 32.00 -33.00 32.00 -32.00 65.00 -160.00 32.00 -129.00 96.00 -161.00 -32.00 -32.00 32.00 -32.00 65.00 -32.00 0.00 -65.00 -33.00 0.00 -64.00 -64.00 -32.00 -64.00 0.00 -65.00 64.00 -225.00 32.00 -32.00 33.00 -64.00 0.00 -32.00 64.00 0.00 129.00 -32.00 64.00 -33.00 0.00 -64.00 -97.00 -96.00 0.00 -32.00 0.00 0.00 33.00 0.00 32.00 96.00 128.00 -32.00 65.00 -32.00 0.00 -32.00 0.00 0.00 -97.00 -33.00 0.00 -32.00 32.00 -32.00 97.00 -128.00 64.00 -65.00 97.00 0.00 32.00 0.00 96.00 0.00 32.00 -64.00 0.00 -64.00 32.00 0.00 129.00 -161.00 193.00 -65.00 0.00 -64.00 0.00 0.00 97.00 -32.00 64.00 -32.00 64.00 32.00 97.00 0.00 32.00 -64.00 64.00 -97.00 161.00 -32.00 0.00 -96.00 -65.00 -161.00 65.00 -64.00 0.00 -97.00 32.00 -64.00 64.00 -97.00 97.00 -128.00 32.00 -129.00 64.00 0.00 32.00 -64.00 0.00 -64.00 65.00 -33.00 128.00 -32.00 0.00 -161.00 32.00 -32.00 97.00 -32.00 32.00 -96.00 64.00 0.00 32.00 -97.00 161.00 -96.00 32.00 -32.00 33.00 -65.00 32.00 -32.00 0.00 -32.00 128.00 -32.00 33.00 -32.00 160.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -65.00 -128.00 -193.00 64.00 -32.00 -32.00 -128.00 -32.00 -32.00 64.00 -129.00 64.00 -32.00 32.00 0.00 32.00 -32.00 33.00 -32.00 64.00 -65.00 32.00 -64.00 -32.00 -32.00 32.00 -32.00 64.00 -33.00 65.00 -32.00 64.00 -32.00 32.00 -32.00 -32.00 -96.00 32.00 -65.00 32.00 -64.00 0.00 -32.00 0.00 -65.00 65.00 -64.00 0.00 -128.00 96.00 -65.00 -32.00 -32.00 0.00 -96.00 -32.00 -193.00 64.00 -32.00 32.00 -65.00 0.00 -32.00 -32.00 -96.00 64.00 -33.00 97.00 -96.00 32.00 -64.00 64.00 -32.00 0.00 0.00 -32.00 -65.00 -32.00 -32.00 0.00 -32.00 32.00 -64.00 64.00 -97.00 -32.00 -64.00 32.00 -32.00 0.00 -97.00 0.00 -64.00 33.00 -32.00 64.00 -129.00 128.00 -64.00 -32.00 -32.00 0.00 -32.00 65.00 0.00 64.00 -33.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -64.00 0.00 -32.00 33.00 32.00 64.00 -32.00 0.00 -65.00 -32.00 -32.00 0.00 0.00 32.00 65.00 32.00 -65.00 32.00 -32.00 0.00 0.00 64.00 0.00 33.00 -64.00 32.00 -32.00 64.00 32.00 64.00 0.00 33.00 -32.00 0.00 0.00 -33.00 -33.00 33.00 33.00 64.00 -33.00 64.00 33.00 32.00 -33.00 32.00 -32.00 -32.00 0.00 65.00 -64.00 32.00 32.00 96.00 -32.00 65.00 -64.00 32.00 0.00 64.00 -32.00 32.00 -33.00 0.00 33.00 64.00 64.00 33.00 0.00 32.00 -97.00 32.00 97.00 64.00 0.00 32.00 -64.00 33.00 -33.00 0.00 0.00 32.00 0.00 64.00 -32.00 32.00 -32.00 32.00 32.00 32.00 0.00 33.00 -32.00 32.00 -64.00 96.00 96.00 65.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 64.00 64.00 96.00 -32.00 33.00 0.00 96.00 -65.00 129.00 33.00 64.00 -33.00 64.00 -32.00 65.00 32.00 96.00 -32.00 64.00 -64.00 0.00 -32.00 65.00 -32.00 32.00 32.00 64.00 -257.00 225.00 0.00 193.00 -65.00 64.00 0.00 97.00 -64.00 64.00 0.00 97.00 0.00 32.00 -64.00 32.00 32.00 64.00 -32.00 32.00 -32.00 0.00 -65.00 33.00 32.00 32.00 -64.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 -32.00 65.00 -32.00 32.00 32.00 128.00 -32.00 97.00 32.00 32.00 -64.00 96.00 -33.00 33.00 33.00 64.00 -33.00 32.00 0.00 64.00 -32.00 33.00 -128.00 96.00 0.00 32.00 128.00 64.00 -64.00 65.00 -96.00 -32.00 0.00 32.00 -33.00 0.00 -32.00 64.00 -32.00 96.00 32.00 33.00 -32.00 32.00 -96.00 225.00 -65.00 0.00 -64.00 32.00 32.00 64.00 -64.00 0.00 -64.00 33.00 -33.00 128.00 -64.00 -32.00 -96.00 96.00 -32.00 0.00 0.00 33.00 -33.00 64.00 -64.00 32.00 -32.00 64.00 32.00 32.00 64.00 33.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 64.00 -32.00 33.00 32.00 32.00 -65.00 32.00 0.00 32.00 0.00 64.00 0.00 33.00 0.00 32.00 -64.00 64.00 32.00 64.00 32.00 97.00 0.00 32.00 65.00 64.00 32.00 97.00 96.00 64.00 0.00 64.00 33.00 65.00 -33.00 64.00 33.00 32.00 32.00 32.00 0.00 65.00 0.00 32.00 32.00 0.00 0.00 64.00 -32.00 0.00 0.00 64.00 0.00 129.00 32.00 32.00 32.00 96.00 32.00 33.00 64.00 64.00 -32.00 32.00 -32.00 0.00 32.00 97.00 0.00 96.00 32.00 0.00 -32.00 97.00 0.00 64.00 32.00 64.00 0.00 64.00 -64.00 0.00 0.00 33.00 32.00 64.00 0.00 32.00 32.00 0.00 0.00 64.00 33.00 0.00 -33.00 65.00 33.00 32.00 32.00 -32.00 32.00 32.00 64.00 32.00 64.00 0.00 33.00 32.00 64.00 64.00 32.00 65.00 97.00 128.00 0.00 32.00 0.00 65.00 32.00 0.00 -32.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 33.00 32.00 64.00 -64.00 32.00 0.00 32.00 -65.00 32.00 -32.00 97.00 0.00 32.00 -64.00 32.00 32.00 64.00 -64.00 65.00 0.00 64.00 32.00 64.00 -32.00 32.00 32.00 33.00 32.00 32.00 32.00 64.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 97.00 32.00 128.00 -64.00 97.00 64.00 32.00 -32.00 32.00 32.00 32.00 0.00 33.00 32.00 64.00 -32.00 32.00 32.00 64.00 0.00 32.00 0.00 33.00 -32.00 96.00 -64.00 32.00 -33.00 32.00 0.00 33.00 -32.00 128.00 0.00 32.00 -64.00 97.00 0.00 32.00 32.00 32.00 0.00 32.00 0.00 129.00 32.00 32.00 32.00 32.00 33.00 97.00 -33.00 64.00 0.00 32.00 -32.00 96.00 0.00 65.00 -64.00 64.00 0.00 32.00 -32.00 129.00 0.00 64.00 -32.00 0.00 64.00 65.00 -64.00 192.00 -32.00 33.00 -33.00 96.00 -32.00 96.00 -64.00 33.00 0.00 32.00 -32.00 32.00 -32.00 96.00 -32.00 0.00 -65.00 0.00 0.00 65.00 -32.00 64.00 32.00 193.00 -128.00 -64.00 -97.00 32.00 -32.00 32.00 -64.00 -97.00 -33.00 -289.00 -32.00 -32.00 -32.00 0.00 -64.00 32.00 -225.00 161.00 -193.00 -32.00 -129.00 32.00 -96.00 -129.00 -32.00 -32.00 -33.00 -32.00 -64.00 -32.00 -128.00 32.00 -161.00 32.00 -129.00 0.00 -64.00 -32.00 -64.00 64.00 -97.00 -64.00 -96.00 -32.00 -65.00 -225.00 -160.00 -193.00 -33.00 0.00 -96.00 -32.00 -32.00 -97.00 -32.00 -32.00 0.00 -161.00 -97.00 -128.00 32.00 -65.00 -32.00 -128.00 65.00 -65.00 -65.00 -64.00 0.00 -96.00 32.00 -32.00 0.00 -97.00 -96.00 -32.00 0.00 -32.00 64.00 -32.00 -64.00 -65.00 -32.00 0.00 32.00 -96.00 -64.00 -64.00 -33.00 -65.00 -128.00 65.00 -97.00 0.00 -96.00 -33.00 0.00 -32.00 32.00 -96.00 32.00 -32.00 -32.00 -65.00 -96.00 -64.00 -161.00 0.00 -64.00 0.00 0.00 -32.00 -33.00 -32.00 0.00 -65.00 -32.00 -128.00 193.00 -129.00 32.00 -64.00 0.00 -129.00 65.00 -96.00 0.00 -97.00 64.00 -32.00 193.00 -128.00 0.00 -33.00 -97.00 -32.00 0.00 -32.00 -64.00 -96.00 0.00 -33.00 64.00 -64.00 0.00 -64.00 -64.00 -32.00 -96.00 32.00 -33.00 -64.00 -64.00 -33.00 -64.00 0.00 -64.00 -64.00 -33.00 -32.00 0.00 -64.00 33.00 -65.00 32.00 -32.00 -97.00 -32.00 -64.00 -64.00 -32.00 0.00 -97.00 32.00 -128.00 0.00 -65.00 32.00 -32.00 32.00 0.00 32.00 -96.00 -32.00 0.00 -32.00 32.00 -96.00 -64.00 -97.00 -33.00 -32.00 -32.00 -32.00 -64.00 -65.00 -64.00 -96.00 0.00 -64.00 -32.00 0.00 -97.00 32.00 -32.00 -64.00 0.00 -33.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 -65.00 -97.00 32.00 -64.00 33.00 -64.00 -33.00 -65.00 0.00 -32.00 -64.00 32.00 -64.00 -32.00 0.00 -32.00 32.00 -97.00 -32.00 -64.00 -32.00 -32.00 -129.00 -32.00 -32.00 0.00 0.00 -64.00 0.00 -33.00 -32.00 33.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 -32.00 -65.00 32.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 -32.00 -65.00 -96.00 0.00 -161.00 65.00 -64.00 -33.00 -65.00 0.00 0.00 33.00 -32.00 0.00 -32.00 0.00 32.00 -65.00 -64.00 32.00 -64.00 -32.00 -65.00 0.00 0.00 32.00 -96.00 -64.00 0.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 0.00 0.00 -32.00 0.00 -33.00 65.00 -32.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 32.00 -64.00 -32.00 32.00 -32.00 97.00 0.00 0.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 32.00 64.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -64.00 32.00 -33.00 32.00 0.00 65.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 64.00 -32.00 -32.00 -65.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -64.00 64.00 -32.00 32.00 0.00 32.00 0.00 32.00 32.00 32.00 -32.00 65.00 -65.00 96.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 33.00 -32.00 -33.00 -33.00 33.00 -32.00 0.00 -96.00 32.00 -32.00 -32.00 -97.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 -32.00 -32.00 -32.00 -97.00 32.00 0.00 32.00 0.00 32.00 0.00 0.00 -96.00 65.00 -65.00 32.00 0.00 32.00 -32.00 -32.00 -64.00 -32.00 -32.00 32.00 -32.00 -64.00 0.00 32.00 -33.00 -32.00 0.00 -65.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 0.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 -33.00 32.00 0.00 -32.00 -32.00 0.00 32.00 0.00 0.00 -32.00 33.00 32.00 32.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 32.00 0.00 -64.00 0.00 32.00 32.00 0.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 0.00 0.00 -32.00 32.00 32.00 33.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -64.00 0.00 -65.00 64.00 0.00 0.00 -32.00 32.00 -32.00 32.00 64.00 33.00 -32.00 96.00 -96.00 -32.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 -32.00 -32.00 -96.00 32.00 32.00 64.00 -32.00 -32.00 -65.00 32.00 0.00 0.00 -32.00 0.00 -32.00 97.00 32.00 64.00 0.00 32.00 0.00 32.00 0.00 33.00 32.00 32.00 -64.00 32.00 -32.00 32.00 -64.00 96.00 -33.00 65.00 -32.00 64.00 -32.00 129.00 -64.00 128.00 64.00 65.00 0.00 64.00 -32.00 96.00 0.00 65.00 -32.00 64.00 -65.00 64.00 -64.00 65.00 -96.00 -33.00 -161.00 33.00 -97.00 64.00 -64.00 32.00 -32.00 -64.00 -64.00 -65.00 -32.00 0.00 -33.00 0.00 -32.00 97.00 -257.00 0.00 -64.00 32.00 -65.00 64.00 0.00 33.00 -32.00 0.00 -64.00 -65.00 -64.00 0.00 -65.00 0.00 -128.00 0.00 -32.00 -32.00 -33.00 0.00 -32.00 -32.00 -64.00 -129.00 -97.00 -128.00 -64.00 -65.00 -32.00 0.00 -64.00 0.00 -32.00 -64.00 -33.00 -32.00 -32.00 -64.00 0.00 0.00 -32.00 -65.00 -32.00 -96.00 0.00 -64.00 64.00 -33.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 64.00 -65.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 96.00 -32.00 0.00 0.00 -32.00 -33.00 32.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -97.00 32.00 -32.00 0.00 0.00 33.00 -32.00 0.00 -32.00 -65.00 -32.00 32.00 -33.00 33.00 -32.00 -33.00 0.00 -32.00 -64.00 32.00 0.00 65.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 0.00 32.00 0.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 65.00 -33.00 0.00 0.00 32.00 0.00 64.00 -64.00 32.00 32.00 32.00 -96.00 32.00 0.00 33.00 -32.00 -33.00 -32.00 97.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -96.00 0.00 0.00 -33.00 -65.00 -32.00 32.00 -32.00 -64.00 -32.00 0.00 -96.00 -96.00 -97.00 -129.00 0.00 64.00 -32.00 -64.00 -64.00 32.00 0.00 0.00 -33.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 32.00 -96.00 -32.00 32.00 -32.00 -96.00 -33.00 0.00 -64.00 32.00 0.00 -65.00 0.00 -96.00 -64.00 0.00 0.00 -32.00 -32.00 -32.00 -65.00 -65.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -64.00 -64.00 32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 -33.00 -33.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 64.00 -32.00 -64.00 0.00 32.00 -32.00 -32.00 -65.00 -32.00 -96.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -33.00 32.00 33.00 -64.00 0.00 -33.00 -65.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 0.00 0.00 -64.00 33.00 -32.00 -33.00 -33.00 0.00 -32.00 33.00 32.00 32.00 0.00 0.00 -64.00 -161.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 64.00 0.00 32.00 0.00 32.00 -33.00 -32.00 -32.00 -64.00 -64.00 -64.00 -32.00 -33.00 -65.00 -32.00 0.00 -64.00 0.00 0.00 33.00 32.00 64.00 64.00 0.00 0.00 32.00 -64.00 64.00 -64.00 -32.00 -32.00 -64.00 0.00 -32.00 32.00 -65.00 0.00 -96.00 -97.00 -64.00 33.00 -65.00 -33.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 -32.00 -32.00 -32.00 -129.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 -32.00 0.00 -160.00 -65.00 -65.00 -32.00 -161.00 0.00 -64.00 -64.00 0.00 -65.00 0.00 -96.00 32.00 -64.00 32.00 -129.00 -32.00 64.00 -128.00 65.00 -32.00 257.00 -97.00 0.00 -32.00 129.00 -64.00 32.00 -161.00 -32.00 -64.00 -65.00 -129.00 -193.00 -129.00 -32.00 -32.00 -225.00 0.00 -64.00 32.00 -97.00 161.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -97.00 -225.00 -96.00 -96.00 -193.00 -97.00 -64.00 -64.00 0.00 -64.00 0.00 -97.00 0.00 -32.00 160.00 -97.00 32.00 -32.00 65.00 0.00 96.00 32.00 65.00 33.00 64.00 -33.00 96.00 -128.00 32.00 -129.00 129.00 -161.00 64.00 -32.00 129.00 -128.00 32.00 -65.00 0.00 -32.00 32.00 -96.00 32.00 -65.00 0.00 -128.00 97.00 -193.00 32.00 -64.00 -32.00 -97.00 -64.00 -161.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 65.00 -193.00 96.00 -161.00 0.00 -225.00 0.00 -64.00 32.00 -32.00 -32.00 -97.00 97.00 -193.00 64.00 -96.00 0.00 -32.00 0.00 -97.00 0.00 -128.00 32.00 -32.00 0.00 -65.00 129.00 -193.00 32.00 0.00 32.00 -64.00 -96.00 -257.00 32.00 -32.00 32.00 -129.00 32.00 -129.00 32.00 -160.00 0.00 -32.00 129.00 -258.00 0.00 -64.00 0.00 -96.00 -32.00 -97.00 -65.00 -96.00 -64.00 -161.00 -64.00 -289.00 -32.00 -129.00 32.00 -129.00 0.00 -96.00 0.00 -32.00 -32.00 -129.00 -65.00 -96.00 97.00 -290.00 0.00 -321.00 -32.00 -32.00 -33.00 -161.00 -128.00 -290.00 -64.00 -64.00 -65.00 -129.00 32.00 -96.00 65.00 -225.00 0.00 -129.00 0.00 -64.00 -32.00 -129.00 0.00 -160.00 -65.00 -193.00 -289.00 -290.00 -32.00 0.00 -65.00 33.00 -193.00 -65.00 -225.00 -193.00 -96.00 -32.00 -257.00 -161.00 -129.00 0.00 -129.00 32.00 -160.00 0.00 -65.00 -64.00 -128.00 -161.00 0.00 -160.00 0.00 -32.00 0.00 -33.00 -32.00 -96.00 -32.00 -64.00 -226.00 -97.00 -32.00 0.00 -96.00 0.00 -161.00 -32.00 -64.00 0.00 -32.00 0.00 -161.00 161.00 -161.00 32.00 -129.00 -32.00 -321.00 -32.00 -64.00 -33.00 -97.00 -32.00 -64.00 -64.00 -32.00 0.00 -65.00 -32.00 -128.00 -65.00 -97.00 -64.00 -128.00 0.00 -161.00 -128.00 -64.00 -33.00 -483.00 65.00 -96.00 64.00 -161.00 -32.00 -96.00 64.00 -97.00 129.00 0.00 64.00 -32.00 97.00 0.00 96.00 -64.00 161.00 -97.00 96.00 -32.00 32.00 -96.00 -32.00 -33.00 -64.00 -64.00 -32.00 -128.00 -32.00 -65.00 32.00 -32.00 32.00 -32.00 129.00 -32.00 32.00 -97.00 -32.00 -32.00 32.00 -64.00 -32.00zm13890.00 -20450.00l0.00 -32.00 0.00 32.00zm2476.00 1286.00l0.00 -32.00 -32.00 -64.00 -32.00 64.00 -33.00 -32.00 33.00 32.00 32.00 -32.00 0.00 64.00 32.00 0.00zm1157.00 -353.00l0.00 -33.00 0.00 -64.00 33.00 -32.00 0.00 32.00 0.00 32.00 -33.00 32.00 33.00 0.00 64.00 225.00 -32.00 33.00 0.00 -33.00 -32.00 -128.00 0.00 -64.00 -33.00 0.00zm33.00 -33.00l-33.00 0.00 0.00 33.00 33.00 -33.00zm-2862.00 -353.00l32.00 0.00 -32.00 -33.00 0.00 33.00zm32.00 0.00l-32.00 64.00 -32.00 32.00 0.00 32.00 0.00 65.00 32.00 0.00 -32.00 -97.00 64.00 -32.00 32.00 -32.00 -32.00 -32.00zm4244.00 1993.00l32.00 0.00 0.00 22.00 33.00 -22.00 32.00 65.00 -65.00 32.00 -64.00 -32.00 48.00 -33.00 -16.00 0.00 0.00 -32.00zm-32.00 -418.00l-32.00 0.00 32.00 -32.00 0.00 32.00zm-5048.00 -1608.00l-64.00 33.00 -32.00 64.00 32.00 64.00 64.00 0.00 0.00 65.00 32.00 32.00 32.00 -32.00 33.00 64.00 0.00 64.00 0.00 32.00 0.00 -32.00 32.00 -64.00 -65.00 -64.00 -32.00 32.00 -32.00 -32.00 0.00 -65.00 -32.00 -32.00 -64.00 -32.00 32.00 -32.00 86.00 -65.00 -22.00 0.00zm6463.00 4245.00l0.00 -32.00 0.00 32.00 32.00 0.00 0.00 -32.00 0.00 32.00 -32.00 0.00zm-2026.00 -3859.00l0.00 -32.00 -32.00 -32.00 -64.00 0.00 -32.00 -32.00 0.00 32.00 96.00 32.00 -129.00 65.00 -32.00 0.00 0.00 -33.00 0.00 -32.00 0.00 65.00 32.00 0.00 97.00 -33.00 32.00 0.00 -32.00 33.00 -129.00 96.00 0.00 32.00 -32.00 0.00 -64.00 0.00 0.00 -32.00 0.00 96.00 -64.00 65.00 -33.00 0.00 0.00 -32.00 -32.00 64.00 -64.00 0.00 -129.00 -97.00 -32.00 -160.00 0.00 32.00 0.00 -32.00 64.00 -65.00 -64.00 0.00 -32.00 -32.00 32.00 -64.00 64.00 -32.00 33.00 32.00 32.00 32.00 96.00 32.00 0.00 -32.00 32.00 -32.00 97.00 96.00 0.00 -32.00 -97.00 -64.00 33.00 -32.00 0.00 -32.00 0.00 32.00 -65.00 0.00 32.00 -65.00 -64.00 33.00 -32.00 -33.00 64.00 -96.00 32.00 -32.00 65.00 0.00 32.00 32.00 64.00 0.00 32.00 64.00 0.00 32.00 32.00 0.00 -32.00 -64.00 0.00 -64.00 97.00 0.00 96.00 32.00 129.00 64.00 32.00 97.00 0.00 32.00 0.00 32.00 32.00 32.00 -96.00 32.00 -65.00 65.00 33.00 -161.00 -33.00 64.00 0.00 32.00 -32.00 0.00zm482.00 1094.00l33.00 -33.00 0.00 33.00 -33.00 0.00zm-5112.00 -1512.00l0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00zm5884.00 2573.00l0.00 -33.00 32.00 0.00 32.00 -32.00 0.00 32.00 -32.00 0.00 0.00 33.00 -32.00 0.00zm-4823.00 -2380.00l-32.00 65.00 32.00 0.00 0.00 -33.00 0.00 -32.00zm322.00 -128.00l32.00 -33.00 32.00 -32.00 -32.00 32.00 32.00 0.00 -32.00 33.00 -32.00 0.00zm3504.00 1414.00l33.00 0.00 -33.00 -96.00 33.00 -32.00 96.00 -64.00 32.00 -97.00 0.00 -32.00 97.00 -64.00 64.00 0.00 -64.00 -65.00 0.00 -32.00 96.00 -32.00 64.00 64.00 0.00 225.00 -32.00 33.00 -96.00 0.00 -65.00 32.00 -32.00 0.00 0.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 64.00 -32.00 33.00 -96.00 -33.00 32.00 33.00 0.00 32.00 -32.00 -32.00 -33.00 -33.00zm3859.00 4148.00l0.00 -64.00 32.00 0.00 32.00 -32.00 0.00 64.00 -32.00 -32.00 -32.00 64.00zm-4759.00 -4951.00l32.00 0.00 65.00 32.00 0.00 32.00 -33.00 0.00 -64.00 -64.00zm-2251.00 -33.00l33.00 -32.00 32.00 -64.00 -65.00 32.00 0.00 64.00zm4084.00 1994.00l0.00 -32.00 32.00 32.00 0.00 96.00 -32.00 -96.00zm836.00 1125.00l32.00 -96.00 32.00 64.00 -32.00 32.00 -32.00 0.00zm-1351.00 -1736.00l33.00 -32.00 64.00 -32.00 0.00 32.00 0.00 64.00 -97.00 -32.00zm-3183.00 -1286.00l32.00 -64.00 33.00 0.00 0.00 64.00 -33.00 32.00 -32.00 -32.00zm4405.00 3247.00l193.00 -96.00 -32.00 64.00 -96.00 32.00 -65.00 0.00zm-32.00 193.00l64.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 32.00 32.00 0.00 -32.00 32.00 0.00 64.00 0.00 33.00 -33.00 0.00 33.00 -33.00 -97.00 -32.00zm-2894.00 -3408.00l65.00 -64.00 32.00 -129.00 0.00 -32.00 64.00 0.00 0.00 32.00 0.00 32.00 -64.00 32.00 0.00 33.00 -65.00 96.00 0.00 64.00 -32.00 -64.00zm-3311.00 -1061.00l32.00 -64.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 64.00 -32.00 65.00 -64.00 -65.00 0.00 -64.00zm-97.00 -354.00l0.00 -32.00 64.00 -32.00 65.00 32.00 0.00 32.00 -32.00 0.00 32.00 65.00 -65.00 64.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -97.00zm5723.00 3441.00l32.00 32.00 33.00 0.00 -33.00 -32.00 -32.00 0.00zm-96.00 109.00l-32.00 19.00 96.00 65.00 64.00 -32.00 33.00 -65.00 -33.00 32.00 -64.00 33.00 -64.00 -33.00 0.00 -19.00zm-579.00 -1363.00l0.00 -97.00 32.00 -32.00 32.00 -64.00 33.00 0.00 64.00 64.00 0.00 32.00 -32.00 32.00 -129.00 97.00 0.00 -32.00zm-1029.00 -1158.00l-32.00 97.00 32.00 -65.00 0.00 -32.00zm-32.00 97.00l-96.00 -65.00 -33.00 0.00 97.00 65.00 64.00 160.00 32.00 0.00 -32.00 -32.00 -32.00 -128.00zm1833.00 2411.00l-32.00 -96.00 32.00 -97.00 32.00 0.00 32.00 0.00 0.00 -64.00 32.00 0.00 32.00 32.00 -32.00 32.00 32.00 97.00 -32.00 64.00 32.00 -32.00 -32.00 64.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00zm-4437.00 -3022.00l-32.00 0.00 -33.00 -32.00 -64.00 0.00 -96.00 32.00 -65.00 64.00 -32.00 0.00 97.00 -96.00 32.00 -65.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 64.00 32.00 0.00 32.00 65.00 32.00 32.00 97.00 -32.00 0.00 0.00 -33.00 0.00 65.00zm-643.00 96.00l-97.00 64.00 -64.00 -96.00 32.00 0.00 -32.00 -64.00 0.00 -65.00 32.00 0.00 -32.00 -32.00 32.00 -64.00 32.00 96.00 32.00 0.00 32.00 65.00 -32.00 -65.00 -32.00 -32.00 0.00 -64.00 32.00 -64.00 65.00 128.00 32.00 32.00 -32.00 97.00 32.00 32.00 -32.00 32.00zm4147.00 1351.00l32.00 -65.00 97.00 -128.00 0.00 -32.00 -161.00 225.00 -64.00 32.00 96.00 -32.00zm-578.00 -997.00l64.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 64.00zm32.00 -64.00l-32.00 0.00 0.00 32.00 32.00 -32.00zm-32.00 0.00l32.00 -33.00 -32.00 0.00 0.00 33.00z\"\n          },\n          pa: {\n            name: \"PA\",\n            path: \"M77219.00 21381.00l64.00 0.00 32.00 33.00 32.00 96.00 33.00 0.00 32.00 97.00 32.00 0.00 64.00 -33.00 32.00 33.00 0.00 64.00 33.00 0.00 64.00 -64.00 32.00 32.00 32.00 -65.00 64.00 0.00 33.00 33.00 32.00 -65.00 64.00 -64.00 64.00 64.00 129.00 -193.00 -32.00 -32.00 0.00 -64.00 32.00 -129.00 0.00 -32.00 32.00 -32.00 64.00 0.00 65.00 0.00 0.00 64.00 64.00 32.00 64.00 -64.00 65.00 32.00 32.00 -32.00 64.00 32.00 32.00 32.00 97.00 33.00 0.00 32.00 32.00 0.00 32.00 -65.00 0.00 -32.00 32.00 0.00 32.00 -64.00 0.00 32.00 65.00 0.00 32.00 0.00 32.00 97.00 0.00 32.00 32.00 -32.00 32.00 64.00 0.00 -64.00 32.00 -33.00 65.00 33.00 32.00 0.00 0.00 -129.00 64.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -160.00 65.00 -97.00 -33.00 -32.00 0.00 32.00 -96.00 -64.00 32.00 -32.00 -128.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -64.00 -32.00 -33.00 0.00 -64.00 64.00 -32.00 32.00 32.00 64.00 0.00 65.00 -32.00 64.00 64.00 32.00 -64.00 64.00 0.00 33.00 0.00 160.00 0.00 65.00 -64.00 -32.00 -33.00 -33.00 0.00 -32.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -65.00 129.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -33.00 32.00 -32.00 33.00 -64.00 32.00 -32.00 64.00 32.00 -32.00 129.00 128.00 0.00 0.00 -33.00 97.00 33.00 32.00 -33.00 32.00 33.00 0.00 32.00 65.00 32.00 32.00 32.00 128.00 -96.00 65.00 0.00 0.00 -33.00 64.00 33.00 96.00 32.00 33.00 64.00 0.00 32.00 0.00 65.00 32.00 64.00 0.00 32.00 96.00 32.00 64.00 0.00 65.00 -64.00 64.00 0.00 0.00 32.00 96.00 0.00 0.00 -64.00 33.00 -32.00 96.00 32.00 64.00 64.00 0.00 -32.00 97.00 64.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 64.00 -97.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 33.00 -33.00 -33.00 -64.00 33.00 -64.00 -33.00 -97.00 33.00 0.00 0.00 -64.00 -129.00 -64.00 32.00 -32.00 32.00 0.00 0.00 -33.00 65.00 0.00 32.00 33.00 32.00 -33.00 32.00 33.00 32.00 32.00 129.00 0.00 64.00 0.00 32.00 -65.00 0.00 -32.00 32.00 -32.00 32.00 0.00 33.00 0.00 32.00 0.00 0.00 -32.00 128.00 64.00 0.00 -64.00 33.00 -64.00 0.00 32.00 32.00 0.00 64.00 0.00 64.00 -32.00 33.00 32.00 32.00 -32.00 -32.00 -65.00 32.00 0.00 0.00 -96.00 64.00 32.00 32.00 -64.00 32.00 32.00 32.00 0.00 0.00 32.00 65.00 -32.00 64.00 32.00 64.00 -32.00 32.00 32.00 -32.00 0.00 65.00 0.00 -33.00 -64.00 33.00 0.00 32.00 64.00 0.00 32.00 64.00 32.00 64.00 0.00 0.00 -32.00 33.00 65.00 32.00 32.00 32.00 0.00 0.00 32.00 96.00 -32.00 0.00 -32.00 65.00 0.00 64.00 32.00 32.00 -32.00 64.00 -33.00 33.00 0.00 0.00 65.00 32.00 0.00 32.00 -32.00 64.00 32.00 0.00 -32.00 64.00 0.00 0.00 -65.00 -32.00 -32.00 65.00 -32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -64.00 32.00 -65.00 32.00 0.00 32.00 -32.00 -32.00 -96.00 32.00 -33.00 33.00 0.00 32.00 -32.00 32.00 0.00 129.00 -32.00 0.00 -32.00 32.00 -64.00 32.00 -33.00 -32.00 -64.00 64.00 -64.00 -32.00 -64.00 32.00 -33.00 -32.00 -32.00 0.00 -32.00 0.00 -96.00 32.00 0.00 129.00 -32.00 0.00 -33.00 64.00 -32.00 64.00 32.00 32.00 0.00 65.00 -96.00 0.00 -32.00 -65.00 -32.00 65.00 -33.00 0.00 -32.00 32.00 -64.00 32.00 32.00 64.00 -32.00 65.00 32.00 32.00 -96.00 128.00 64.00 65.00 0.00 -33.00 32.00 65.00 64.00 32.00 65.00 32.00 0.00 32.00 32.00 32.00 32.00 0.00 -96.00 97.00 -33.00 64.00 -96.00 64.00 0.00 33.00 -32.00 32.00 -32.00 96.00 32.00 32.00 -65.00 129.00 -32.00 0.00 -32.00 0.00 -64.00 32.00 0.00 64.00 32.00 33.00 -32.00 32.00 32.00 0.00 64.00 32.00 32.00 32.00 33.00 0.00 128.00 32.00 65.00 32.00 0.00 33.00 0.00 64.00 32.00 32.00 32.00 32.00 64.00 32.00 65.00 32.00 0.00 33.00 32.00 96.00 0.00 32.00 32.00 32.00 -64.00 33.00 -33.00 32.00 0.00 32.00 0.00 128.00 -32.00 65.00 65.00 0.00 32.00 64.00 32.00 32.00 32.00 97.00 0.00 32.00 0.00 0.00 32.00 64.00 -32.00 32.00 32.00 32.00 0.00 0.00 32.00 33.00 0.00 32.00 32.00 32.00 0.00 64.00 33.00 -32.00 0.00 32.00 32.00 0.00 32.00 32.00 32.00 0.00 -32.00 0.00 -32.00 65.00 -32.00 32.00 -33.00 32.00 -64.00 32.00 -32.00 32.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -65.00 96.00 32.00 97.00 33.00 0.00 -33.00 32.00 33.00 129.00 0.00 0.00 -65.00 32.00 0.00 64.00 -64.00 32.00 -32.00 65.00 64.00 32.00 0.00 32.00 32.00 64.00 97.00 97.00 0.00 32.00 -32.00 64.00 0.00 64.00 -33.00 32.00 -64.00 97.00 0.00 64.00 -96.00 65.00 32.00 96.00 -32.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 0.00 0.00 32.00 64.00 64.00 32.00 0.00 32.00 32.00 32.00 0.00 0.00 -64.00 97.00 0.00 64.00 -32.00 64.00 32.00 33.00 0.00 64.00 64.00 64.00 0.00 32.00 65.00 33.00 0.00 32.00 0.00 64.00 64.00 64.00 64.00 97.00 32.00 32.00 -96.00 96.00 -32.00 33.00 32.00 32.00 0.00 96.00 0.00 32.00 -32.00 32.00 64.00 33.00 0.00 32.00 0.00 64.00 64.00 32.00 33.00 0.00 64.00 64.00 0.00 0.00 32.00 33.00 -32.00 64.00 32.00 32.00 -32.00 32.00 0.00 0.00 64.00 32.00 0.00 0.00 -32.00 65.00 0.00 64.00 0.00 32.00 0.00 32.00 0.00 33.00 32.00 32.00 0.00 128.00 64.00 0.00 -32.00 65.00 0.00 32.00 -32.00 32.00 -32.00 64.00 32.00 97.00 -128.00 96.00 -65.00 64.00 -32.00 0.00 -96.00 -96.00 -65.00 0.00 -64.00 -32.00 -32.00 32.00 -32.00 -64.00 -193.00 0.00 -32.00 32.00 0.00 32.00 0.00 32.00 32.00 32.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 -32.00 -33.00 -128.00 -64.00 32.00 -64.00 0.00 -32.00 -32.00 0.00 -65.00 -65.00 -96.00 33.00 -32.00 -97.00 32.00 -32.00 -32.00 0.00 0.00 -64.00 -32.00 -33.00 -33.00 0.00 -32.00 -32.00 32.00 -32.00 -64.00 -96.00 -64.00 0.00 -97.00 0.00 -32.00 -65.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 64.00 -32.00 32.00 -64.00 0.00 -33.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 -64.00 -33.00 32.00 -32.00 -64.00 -64.00 32.00 -64.00 0.00 -33.00 -32.00 -32.00 -32.00 -64.00 -33.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 65.00 -64.00 0.00 -65.00 32.00 -32.00 64.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 32.00 0.00 0.00 32.00 33.00 0.00 32.00 64.00 32.00 64.00 32.00 33.00 97.00 32.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -33.00 0.00 0.00 -64.00 65.00 -32.00 0.00 -33.00 32.00 -64.00 32.00 0.00 32.00 -64.00 64.00 -32.00 33.00 -32.00 0.00 -33.00 -33.00 0.00 -32.00 0.00 -32.00 -64.00 -32.00 32.00 0.00 -64.00 96.00 -64.00 0.00 -65.00 33.00 -32.00 32.00 -32.00 -65.00 -32.00 0.00 -64.00 33.00 -33.00 32.00 -32.00 32.00 0.00 161.00 -32.00 64.00 32.00 0.00 32.00 64.00 0.00 32.00 33.00 33.00 32.00 32.00 32.00 32.00 64.00 32.00 0.00 32.00 32.00 65.00 0.00 0.00 65.00 96.00 32.00 225.00 32.00 32.00 -32.00 64.00 32.00 33.00 64.00 -33.00 32.00 33.00 33.00 64.00 96.00 129.00 32.00 64.00 0.00 32.00 -96.00 97.00 32.00 96.00 -32.00 64.00 32.00 65.00 0.00 64.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -33.00 32.00 33.00 65.00 -33.00 32.00 65.00 96.00 -32.00 97.00 0.00 0.00 -33.00 129.00 -32.00 96.00 32.00 257.00 0.00 193.00 97.00 193.00 -161.00 -64.00 -128.00 193.00 -193.00 193.00 0.00 192.00 64.00 129.00 -97.00 161.00 -193.00 257.00 -32.00 97.00 193.00 192.00 -128.00 258.00 -193.00 257.00 64.00 64.00 289.00 97.00 97.00 225.00 321.00 -32.00 33.00 0.00 64.00 32.00 32.00 32.00 32.00 257.00 289.00 32.00 65.00 32.00 96.00 -32.00 0.00 -32.00 65.00 32.00 32.00 -32.00 32.00 0.00 96.00 32.00 97.00 97.00 96.00 32.00 32.00 32.00 65.00 32.00 0.00 0.00 64.00 -32.00 32.00 0.00 32.00 -64.00 32.00 0.00 33.00 -32.00 32.00 -65.00 32.00 0.00 64.00 -32.00 0.00 32.00 32.00 -32.00 65.00 32.00 64.00 -64.00 32.00 32.00 129.00 -32.00 0.00 0.00 64.00 32.00 32.00 0.00 65.00 32.00 64.00 32.00 64.00 33.00 32.00 32.00 32.00 64.00 33.00 -32.00 64.00 64.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 0.00 33.00 -32.00 64.00 -32.00 0.00 32.00 161.00 32.00 32.00 0.00 32.00 0.00 32.00 32.00 64.00 0.00 129.00 32.00 32.00 33.00 32.00 0.00 32.00 32.00 0.00 -97.00 65.00 32.00 64.00 -32.00 32.00 0.00 32.00 32.00 33.00 0.00 32.00 129.00 32.00 97.00 0.00 0.00 -32.00 32.00 32.00 64.00 0.00 32.00 32.00 97.00 -32.00 32.00 0.00 96.00 -64.00 65.00 32.00 32.00 -32.00 96.00 32.00 64.00 -32.00 0.00 32.00 161.00 32.00 32.00 32.00 33.00 32.00 64.00 32.00 32.00 0.00 32.00 33.00 65.00 -33.00 0.00 -32.00 64.00 32.00 0.00 -32.00 32.00 0.00 129.00 32.00 64.00 -32.00 32.00 0.00 64.00 0.00 65.00 65.00 32.00 -97.00 128.00 64.00 0.00 33.00 33.00 0.00 0.00 32.00 64.00 0.00 32.00 -32.00 0.00 32.00 32.00 0.00 64.00 0.00 -32.00 32.00 32.00 0.00 33.00 32.00 32.00 0.00 0.00 32.00 64.00 -32.00 -32.00 32.00 -32.00 32.00 64.00 32.00 32.00 -32.00 32.00 32.00 -32.00 0.00 32.00 33.00 -32.00 32.00 32.00 32.00 0.00 32.00 65.00 -32.00 32.00 32.00 64.00 0.00 0.00 64.00 64.00 32.00 65.00 33.00 32.00 96.00 32.00 32.00 0.00 -96.00 32.00 -65.00 32.00 0.00 0.00 65.00 32.00 0.00 65.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 64.00 64.00 0.00 -32.00 32.00 65.00 65.00 0.00 32.00 -33.00 0.00 0.00 32.00 33.00 0.00 32.00 64.00 32.00 -32.00 32.00 -32.00 0.00 32.00 -32.00 64.00 -32.00 65.00 0.00 32.00 96.00 0.00 65.00 129.00 -33.00 64.00 33.00 32.00 -33.00 64.00 0.00 32.00 65.00 0.00 -32.00 -32.00 64.00 -32.00 32.00 32.00 32.00 0.00 64.00 -64.00 65.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 64.00 -32.00 32.00 64.00 0.00 96.00 0.00 65.00 65.00 -32.00 64.00 32.00 32.00 -65.00 64.00 33.00 0.00 64.00 33.00 -32.00 64.00 32.00 32.00 0.00 -32.00 64.00 0.00 32.00 -32.00 33.00 0.00 32.00 32.00 0.00 64.00 -32.00 0.00 -65.00 97.00 0.00 32.00 65.00 64.00 0.00 0.00 32.00 -32.00 128.00 0.00 32.00 32.00 -32.00 97.00 32.00 64.00 -32.00 0.00 32.00 -32.00 33.00 0.00 32.00 96.00 -32.00 32.00 32.00 65.00 0.00 32.00 -32.00 -32.00 -33.00 -65.00 -64.00 32.00 -32.00 65.00 0.00 64.00 32.00 32.00 64.00 32.00 33.00 33.00 0.00 32.00 -65.00 32.00 65.00 129.00 32.00 0.00 -32.00 64.00 -65.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 96.00 64.00 0.00 32.00 -96.00 97.00 32.00 64.00 32.00 32.00 64.00 -64.00 33.00 32.00 0.00 32.00 64.00 0.00 32.00 -129.00 64.00 -32.00 32.00 65.00 -32.00 64.00 32.00 96.00 -32.00 33.00 -64.00 32.00 32.00 64.00 64.00 0.00 33.00 -64.00 193.00 -32.00 96.00 96.00 32.00 -32.00 0.00 -32.00 97.00 0.00 32.00 32.00 32.00 96.00 -64.00 32.00 -65.00 33.00 0.00 128.00 33.00 0.00 96.00 32.00 32.00 65.00 -32.00 96.00 -64.00 64.00 0.00 33.00 32.00 64.00 64.00 0.00 257.00 -129.00 161.00 32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 0.00 97.00 33.00 96.00 64.00 64.00 32.00 65.00 -32.00 96.00 0.00 32.00 -32.00 32.00 -65.00 0.00 -64.00 -32.00 -32.00 0.00 -64.00 65.00 0.00 64.00 0.00 64.00 0.00 161.00 32.00 32.00 64.00 64.00 0.00 65.00 32.00 0.00 32.00 64.00 0.00 32.00 -32.00 32.00 0.00 32.00 32.00 97.00 33.00 32.00 32.00 32.00 0.00 129.00 -32.00 32.00 32.00 97.00 225.00 160.00 32.00 32.00 257.00 129.00 64.00 64.00 65.00 129.00 96.00 64.00 193.00 129.00 32.00 32.00 32.00 0.00 33.00 32.00 32.00 97.00 128.00 96.00 33.00 64.00 32.00 97.00 32.00 32.00 64.00 -32.00 97.00 64.00 0.00 32.00 -33.00 32.00 -32.00 193.00 -128.00 161.00 -32.00 97.00 0.00 64.00 32.00 64.00 0.00 65.00 -32.00 32.00 -65.00 64.00 32.00 32.00 -64.00 97.00 64.00 32.00 33.00 32.00 -65.00 161.00 32.00 128.00 0.00 65.00 0.00 32.00 -64.00 96.00 32.00 97.00 97.00 64.00 32.00 96.00 32.00 129.00 96.00 64.00 97.00 161.00 -32.00 32.00 -32.00 97.00 32.00 161.00 64.00 32.00 64.00 96.00 97.00 64.00 32.00 65.00 32.00 32.00 0.00 96.00 32.00 65.00 97.00 32.00 -32.00 193.00 64.00 64.00 96.00 64.00 33.00 33.00 0.00 160.00 32.00 161.00 32.00 129.00 128.00 353.00 33.00 32.00 128.00 33.00 129.00 -33.00 96.00 33.00 32.00 32.00 33.00 64.00 32.00 64.00 353.00 258.00 33.00 128.00 64.00 65.00 96.00 64.00 65.00 0.00 64.00 64.00 32.00 64.00 0.00 129.00 -64.00 129.00 0.00 96.00 64.00 129.00 32.00 32.00 -128.00 193.00 64.00 64.00 -32.00 97.00 64.00 96.00 64.00 64.00 0.00 65.00 0.00 32.00 129.00 193.00 64.00 32.00 65.00 0.00 96.00 -64.00 129.00 -33.00 160.00 0.00 65.00 65.00 32.00 161.00 0.00 96.00 0.00 96.00 0.00 33.00 32.00 64.00 32.00 64.00 0.00 97.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 64.00 -96.00 161.00 0.00 65.00 0.00 64.00 64.00 32.00 -129.00 161.00 -32.00 64.00 65.00 0.00 64.00 0.00 96.00 -32.00 97.00 -32.00 32.00 0.00 64.00 -65.00 32.00 33.00 65.00 64.00 64.00 32.00 64.00 96.00 32.00 65.00 -32.00 128.00 -32.00 0.00 -64.00 0.00 -32.00 33.00 -32.00 32.00 0.00 32.00 0.00 64.00 96.00 97.00 0.00 160.00 32.00 33.00 -32.00 96.00 -64.00 64.00 32.00 32.00 32.00 33.00 96.00 -65.00 65.00 65.00 128.00 32.00 33.00 32.00 96.00 225.00 129.00 0.00 128.00 64.00 193.00 0.00 64.00 33.00 226.00 0.00 64.00 0.00 64.00 64.00 129.00 0.00 0.00 32.00 64.00 161.00 -32.00 96.00 0.00 64.00 32.00 33.00 32.00 0.00 129.00 64.00 96.00 -32.00 32.00 -65.00 0.00 -32.00 -64.00 -64.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 65.00 -33.00 128.00 -32.00 97.00 32.00 0.00 -32.00 32.00 -32.00 -32.00 -161.00 32.00 -32.00 32.00 0.00 64.00 32.00 0.00 33.00 0.00 128.00 0.00 32.00 33.00 0.00 32.00 32.00 0.00 -32.00 64.00 -128.00 64.00 -32.00 129.00 128.00 32.00 32.00 386.00 -32.00 129.00 -96.00 353.00 -354.00 64.00 -97.00 33.00 -64.00 0.00 -96.00 -33.00 -97.00 -32.00 -353.00 32.00 0.00 0.00 -161.00 33.00 -322.00 0.00 -128.00 0.00 -32.00 32.00 -33.00 32.00 -64.00 32.00 -32.00 322.00 -547.00 128.00 -128.00 193.00 -225.00 64.00 -65.00 129.00 -96.00 161.00 -161.00 96.00 -193.00 65.00 -225.00 64.00 -64.00 225.00 -225.00 32.00 -258.00 0.00 -32.00 32.00 -64.00 65.00 -96.00 32.00 -33.00 96.00 -96.00 65.00 -97.00 128.00 -160.00 64.00 -129.00 161.00 -257.00 193.00 -64.00 290.00 -33.00 96.00 -64.00 32.00 0.00 97.00 -64.00 96.00 -97.00 64.00 -96.00 32.00 -32.00 97.00 -129.00 32.00 0.00 0.00 -32.00 97.00 -129.00 32.00 -32.00 193.00 -161.00 64.00 -32.00 64.00 0.00 418.00 -128.00 161.00 -33.00 193.00 -96.00 354.00 -257.00 96.00 -129.00 97.00 -96.00 128.00 -97.00 97.00 -96.00 96.00 -193.00 97.00 -193.00 64.00 -129.00 96.00 -289.00 97.00 -129.00 32.00 -96.00 32.00 -257.00 96.00 -193.00 65.00 -129.00 128.00 -129.00 33.00 0.00 32.00 -32.00 225.00 -160.00 161.00 -65.00 321.00 -64.00 64.00 -32.00 161.00 -32.00 193.00 0.00 289.00 0.00 33.00 289.00 160.00 129.00 65.00 225.00 32.00 321.00 -32.00 97.00 -32.00 418.00 0.00 128.00 -65.00 193.00 225.00 0.00 161.00 65.00 32.00 0.00 32.00 0.00 33.00 -33.00 64.00 33.00 64.00 32.00 0.00 -32.00 97.00 32.00 32.00 32.00 289.00 -129.00 32.00 -32.00 65.00 64.00 64.00 -32.00 64.00 0.00 65.00 0.00 96.00 -64.00 64.00 64.00 65.00 65.00 0.00 -33.00 -33.00 -64.00 0.00 -32.00 33.00 -32.00 0.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 161.00 -32.00 32.00 64.00 32.00 0.00 -32.00 64.00 32.00 0.00 32.00 -32.00 33.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 96.00 65.00 65.00 225.00 64.00 96.00 129.00 225.00 193.00 290.00 225.00 321.00 32.00 32.00 32.00 33.00 32.00 -33.00 64.00 33.00 33.00 32.00 64.00 0.00 0.00 32.00 128.00 32.00 0.00 32.00 33.00 32.00 0.00 33.00 -33.00 32.00 -32.00 0.00 0.00 32.00 97.00 0.00 32.00 64.00 1704.00 772.00 64.00 128.00 193.00 97.00 129.00 96.00 64.00 32.00 64.00 0.00 33.00 0.00 0.00 -32.00 96.00 -32.00 129.00 0.00 64.00 32.00 32.00 -32.00 64.00 32.00 33.00 -32.00 64.00 0.00 32.00 32.00 64.00 65.00 33.00 0.00 96.00 64.00 129.00 0.00 64.00 32.00 64.00 0.00 65.00 -32.00 32.00 -32.00 160.00 -65.00 161.00 0.00 32.00 33.00 33.00 -33.00 96.00 33.00 32.00 32.00 32.00 -32.00 97.00 0.00 64.00 0.00 64.00 32.00 161.00 -65.00 161.00 65.00 64.00 64.00 65.00 0.00 32.00 32.00 32.00 32.00 32.00 33.00 32.00 128.00 -32.00 290.00 0.00 32.00 -193.00 160.00 -64.00 97.00 -32.00 257.00 -97.00 129.00 1126.00 386.00 1125.00 418.00 0.00 64.00 0.00 96.00 0.00 32.00 32.00 0.00 32.00 0.00 0.00 -64.00 32.00 0.00 0.00 -32.00 32.00 -64.00 33.00 -32.00 0.00 -65.00 0.00 -64.00 64.00 -64.00 64.00 32.00 65.00 -64.00 32.00 32.00 32.00 -65.00 0.00 -64.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 -33.00 0.00 -32.00 -32.00 32.00 0.00 -64.00 32.00 -32.00 65.00 0.00 96.00 0.00 32.00 96.00 0.00 33.00 0.00 32.00 64.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 32.00 97.00 -32.00 64.00 -32.00 96.00 -32.00 32.00 0.00 33.00 -32.00 64.00 32.00 0.00 32.00 -32.00 32.00 -32.00 32.00 64.00 33.00 0.00 64.00 -64.00 0.00 -97.00 0.00 -32.00 32.00 -32.00 -32.00 -97.00 0.00 -64.00 64.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -64.00 64.00 -64.00 65.00 32.00 0.00 32.00 0.00 32.00 -65.00 65.00 0.00 32.00 32.00 0.00 97.00 -32.00 32.00 32.00 -32.00 32.00 64.00 129.00 -32.00 96.00 32.00 -32.00 32.00 -64.00 0.00 -65.00 33.00 -32.00 0.00 -32.00 -33.00 -64.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 97.00 32.00 32.00 -64.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 64.00 0.00 65.00 32.00 -32.00 32.00 64.00 128.00 -32.00 33.00 -32.00 64.00 64.00 32.00 0.00 -32.00 32.00 0.00 97.00 -64.00 64.00 32.00 32.00 96.00 32.00 65.00 32.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 32.00 32.00 0.00 33.00 -32.00 128.00 32.00 0.00 32.00 32.00 32.00 -32.00 33.00 32.00 160.00 -289.00 -32.00 -96.00 32.00 -65.00 -32.00 -64.00 32.00 -32.00 0.00 -32.00 97.00 32.00 0.00 64.00 64.00 32.00 64.00 97.00 -32.00 64.00 0.00 32.00 32.00 32.00 33.00 0.00 -33.00 65.00 33.00 32.00 32.00 32.00 0.00 32.00 32.00 32.00 32.00 32.00 97.00 193.00 0.00 32.00 -33.00 97.00 65.00 -32.00 32.00 32.00 0.00 -64.00 0.00 -97.00 0.00 -129.00 -32.00 -225.00 32.00 -128.00 -64.00 -32.00 0.00 -32.00 64.00 -97.00 -32.00 0.00 160.00 -64.00 97.00 32.00 32.00 32.00 -32.00 129.00 0.00 32.00 -32.00 32.00 0.00 64.00 32.00 -64.00 32.00 64.00 0.00 -32.00 32.00 64.00 32.00 0.00 65.00 -64.00 0.00 -64.00 96.00 0.00 0.00 -32.00 -64.00 -32.00 0.00 -33.00 0.00 -32.00 128.00 0.00 33.00 0.00 96.00 -32.00 32.00 -32.00 97.00 32.00 96.00 32.00 -32.00 32.00 0.00 33.00 -32.00 -65.00 0.00 32.00 32.00 65.00 -32.00 0.00 0.00 64.00 0.00 32.00 64.00 -32.00 32.00 64.00 32.00 -32.00 33.00 32.00 32.00 -32.00 -65.00 -64.00 33.00 -32.00 32.00 32.00 0.00 -32.00 64.00 0.00 129.00 64.00 64.00 129.00 -64.00 64.00 0.00 32.00 -32.00 0.00 -65.00 -32.00 -32.00 32.00 -32.00 96.00 96.00 -32.00 -32.00 32.00 32.00 0.00 33.00 -32.00 0.00 -32.00 32.00 0.00 32.00 0.00 32.00 32.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 64.00 -64.00 0.00 -32.00 32.00 0.00 -32.00 32.00 65.00 -32.00 32.00 0.00 32.00 32.00 -32.00 0.00 32.00 0.00 -32.00 64.00 -32.00 32.00 32.00 193.00 -32.00 0.00 -33.00 64.00 33.00 129.00 0.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 64.00 0.00 -96.00 -32.00 0.00 0.00 -33.00 64.00 -160.00 32.00 64.00 0.00 32.00 0.00 -32.00 0.00 -64.00 0.00 -33.00 32.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 0.00 32.00 0.00 33.00 0.00 64.00 -32.00 0.00 -32.00 96.00 -32.00 0.00 32.00 0.00 32.00 65.00 32.00 32.00 96.00 -97.00 33.00 33.00 32.00 32.00 32.00 32.00 32.00 -32.00 0.00 32.00 32.00 -97.00 65.00 65.00 -33.00 32.00 33.00 -32.00 32.00 32.00 64.00 0.00 32.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -64.00 32.00 -97.00 -32.00 -129.00 64.00 33.00 -32.00 128.00 0.00 193.00 -32.00 97.00 0.00 32.00 32.00 0.00 32.00 -64.00 65.00 64.00 32.00 0.00 -64.00 -64.00 -33.00 0.00 0.00 -65.00 33.00 -32.00 0.00 -129.00 0.00 -64.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 96.00 -64.00 33.00 32.00 64.00 -65.00 32.00 0.00 64.00 0.00 0.00 33.00 65.00 128.00 -33.00 0.00 0.00 -32.00 -32.00 32.00 0.00 32.00 0.00 33.00 -32.00 32.00 32.00 0.00 -32.00 64.00 -64.00 32.00 0.00 32.00 32.00 33.00 32.00 -65.00 32.00 32.00 0.00 33.00 32.00 0.00 0.00 -33.00 33.00 33.00 0.00 32.00 -33.00 32.00 33.00 32.00 32.00 129.00 32.00 32.00 0.00 64.00 -32.00 0.00 -65.00 0.00 0.00 32.00 97.00 64.00 32.00 0.00 32.00 0.00 0.00 -32.00 0.00 -64.00 32.00 0.00 0.00 32.00 33.00 -32.00 -33.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 0.00 -64.00 65.00 -32.00 64.00 0.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 32.00 -32.00 -65.00 0.00 -32.00 0.00 -32.00 64.00 -64.00 32.00 32.00 0.00 32.00 33.00 0.00 0.00 -96.00 64.00 -33.00 -32.00 0.00 -65.00 0.00 0.00 -32.00 33.00 0.00 64.00 0.00 64.00 65.00 0.00 32.00 -32.00 32.00 0.00 32.00 32.00 -32.00 0.00 129.00 -128.00 0.00 96.00 32.00 32.00 32.00 -32.00 64.00 -32.00 0.00 0.00 32.00 -64.00 65.00 32.00 0.00 64.00 -65.00 32.00 32.00 -32.00 33.00 -64.00 64.00 0.00 64.00 32.00 0.00 0.00 -64.00 32.00 -32.00 0.00 32.00 64.00 -32.00 0.00 -65.00 33.00 0.00 32.00 97.00 -32.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 -65.00 32.00 0.00 65.00 0.00 32.00 33.00 32.00 0.00 -64.00 32.00 -65.00 32.00 -64.00 96.00 97.00 -64.00 32.00 0.00 32.00 32.00 32.00 0.00 -64.00 32.00 -32.00 0.00 -65.00 -32.00 0.00 0.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 -96.00 64.00 -32.00 65.00 0.00 32.00 64.00 -32.00 -97.00 32.00 -64.00 32.00 32.00 32.00 32.00 32.00 161.00 32.00 161.00 0.00 32.00 -32.00 64.00 0.00 33.00 0.00 -33.00 65.00 -64.00 32.00 -32.00 0.00 -64.00 -32.00 -97.00 32.00 -161.00 96.00 -32.00 32.00 32.00 32.00 97.00 65.00 32.00 -32.00 32.00 32.00 0.00 0.00 -64.00 32.00 0.00 0.00 32.00 32.00 -32.00 -32.00 -32.00 -64.00 0.00 -33.00 -129.00 0.00 -64.00 65.00 0.00 32.00 64.00 32.00 -32.00 -64.00 -64.00 64.00 -32.00 0.00 -33.00 32.00 0.00 65.00 33.00 0.00 32.00 -33.00 0.00 0.00 32.00 33.00 32.00 96.00 32.00 32.00 32.00 -32.00 32.00 32.00 33.00 32.00 32.00 0.00 32.00 32.00 32.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 -64.00 32.00 -32.00 -64.00 0.00 32.00 32.00 64.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -32.00 -32.00 -33.00 0.00 65.00 97.00 -97.00 32.00 32.00 32.00 33.00 0.00 32.00 64.00 0.00 65.00 -65.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 32.00 32.00 -64.00 32.00 -32.00 0.00 -33.00 33.00 65.00 64.00 32.00 0.00 -32.00 -32.00 96.00 0.00 32.00 -65.00 -32.00 65.00 32.00 0.00 65.00 0.00 96.00 -65.00 32.00 0.00 32.00 -32.00 0.00 97.00 33.00 32.00 32.00 0.00 32.00 0.00 64.00 -129.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 0.00 -32.00 32.00 -32.00 65.00 64.00 -32.00 33.00 0.00 32.00 0.00 128.00 32.00 97.00 0.00 32.00 0.00 -32.00 32.00 -97.00 0.00 33.00 0.00 -65.00 32.00 0.00 0.00 32.00 32.00 -64.00 -64.00 -64.00 32.00 -65.00 32.00 33.00 0.00 -97.00 32.00 -32.00 33.00 0.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 65.00 -33.00 64.00 0.00 64.00 33.00 0.00 32.00 33.00 32.00 32.00 -97.00 32.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 0.00 128.00 -32.00 33.00 64.00 0.00 65.00 -33.00 32.00 -64.00 64.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 64.00 0.00 33.00 -32.00 0.00 -32.00 32.00 32.00 32.00 32.00 -32.00 0.00 32.00 0.00 32.00 33.00 0.00 -33.00 32.00 -32.00 -32.00 32.00 64.00 33.00 33.00 -33.00 0.00 -32.00 0.00 32.00 -33.00 -64.00 33.00 -32.00 0.00 -32.00 64.00 128.00 -32.00 33.00 32.00 0.00 128.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 32.00 33.00 0.00 64.00 32.00 -32.00 0.00 32.00 -32.00 64.00 -32.00 0.00 32.00 32.00 32.00 65.00 0.00 -65.00 33.00 -64.00 64.00 32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 32.00 96.00 -32.00 65.00 32.00 0.00 96.00 -32.00 32.00 -33.00 0.00 -32.00 33.00 0.00 64.00 32.00 0.00 0.00 -64.00 65.00 32.00 0.00 -32.00 32.00 -65.00 -32.00 -128.00 -65.00 -32.00 33.00 0.00 0.00 -65.00 32.00 0.00 32.00 -32.00 64.00 0.00 0.00 129.00 32.00 96.00 0.00 64.00 32.00 33.00 33.00 0.00 -33.00 -97.00 0.00 -64.00 33.00 32.00 0.00 -64.00 64.00 -65.00 32.00 -32.00 32.00 0.00 -32.00 32.00 64.00 65.00 0.00 96.00 0.00 64.00 -64.00 65.00 0.00 64.00 32.00 0.00 32.00 0.00 65.00 0.00 64.00 64.00 32.00 -32.00 -64.00 -64.00 -97.00 0.00 0.00 -32.00 65.00 -32.00 0.00 -65.00 0.00 -96.00 32.00 -32.00 64.00 32.00 0.00 32.00 32.00 96.00 -32.00 33.00 32.00 0.00 0.00 -33.00 65.00 0.00 -65.00 -32.00 33.00 -32.00 -33.00 -64.00 -64.00 -64.00 64.00 -65.00 33.00 32.00 64.00 -64.00 32.00 32.00 0.00 -64.00 -32.00 32.00 -64.00 -32.00 64.00 -64.00 0.00 -32.00 32.00 -97.00 32.00 0.00 0.00 -32.00 32.00 64.00 -32.00 -64.00 97.00 -32.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 0.00 -65.00 64.00 -32.00 32.00 32.00 0.00 -32.00 33.00 0.00 64.00 0.00 64.00 -64.00 0.00 -32.00 32.00 0.00 65.00 32.00 32.00 32.00 0.00 161.00 -65.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 64.00 96.00 -32.00 -32.00 97.00 -64.00 32.00 -32.00 -32.00 32.00 64.00 -32.00 32.00 -32.00 -32.00 0.00 64.00 -97.00 0.00 97.00 0.00 64.00 -32.00 0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 32.00 32.00 97.00 -32.00 32.00 32.00 0.00 32.00 96.00 0.00 97.00 -64.00 0.00 -32.00 64.00 -97.00 161.00 -64.00 64.00 0.00 97.00 -64.00 64.00 0.00 64.00 0.00 32.00 32.00 -64.00 64.00 -32.00 32.00 -64.00 33.00 -32.00 0.00 -97.00 64.00 -96.00 161.00 -129.00 32.00 -97.00 0.00 -160.00 32.00 -65.00 32.00 -32.00 64.00 0.00 33.00 32.00 -33.00 65.00 0.00 32.00 0.00 96.00 0.00 32.00 0.00 33.00 0.00 32.00 -64.00 64.00 -64.00 193.00 -97.00 97.00 32.00 0.00 65.00 -33.00 64.00 97.00 0.00 32.00 32.00 0.00 -64.00 -161.00 32.00 -32.00 32.00 -161.00 32.00 0.00 33.00 32.00 32.00 193.00 -32.00 33.00 32.00 0.00 0.00 -65.00 32.00 0.00 -32.00 -32.00 0.00 -96.00 -32.00 -65.00 32.00 -64.00 32.00 -32.00 161.00 -97.00 32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 64.00 32.00 0.00 64.00 -128.00 97.00 0.00 96.00 32.00 64.00 0.00 33.00 32.00 0.00 64.00 64.00 -64.00 129.00 0.00 128.00 -32.00 97.00 -32.00 96.00 -32.00 0.00 -32.00 0.00 -97.00 32.00 -96.00 97.00 64.00 128.00 -129.00 129.00 65.00 161.00 96.00 0.00 0.00 96.00 0.00 32.00 129.00 -32.00 0.00 32.00 -32.00 65.00 -33.00 96.00 -32.00 32.00 -32.00 129.00 -129.00 96.00 97.00 64.00 0.00 33.00 -193.00 160.00 64.00 65.00 32.00 32.00 65.00 64.00 0.00 65.00 64.00 289.00 -96.00 32.00 0.00 32.00 32.00 32.00 0.00 32.00 -65.00 97.00 0.00 96.00 0.00 33.00 33.00 32.00 0.00 64.00 -33.00 64.00 -64.00 65.00 -96.00 32.00 -33.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -97.00 32.00 -128.00 0.00 -65.00 0.00 -32.00 32.00 -32.00 33.00 -32.00 128.00 32.00 161.00 32.00 32.00 64.00 -64.00 33.00 32.00 32.00 0.00 96.00 -32.00 161.00 32.00 32.00 64.00 32.00 32.00 32.00 65.00 -160.00 225.00 0.00 32.00 64.00 0.00 32.00 129.00 -64.00 289.00 -65.00 161.00 0.00 96.00 -64.00 97.00 -32.00 32.00 -32.00 64.00 0.00 97.00 32.00 64.00 0.00 96.00 -32.00 32.00 -97.00 97.00 0.00 32.00 65.00 32.00 -65.00 65.00 -96.00 32.00 -64.00 64.00 -65.00 129.00 0.00 32.00 -64.00 32.00 -64.00 0.00 -33.00 96.00 -64.00 33.00 -64.00 -33.00 -32.00 -64.00 -97.00 32.00 0.00 32.00 65.00 65.00 -33.00 160.00 -32.00 33.00 0.00 96.00 0.00 64.00 -32.00 33.00 -128.00 96.00 0.00 64.00 0.00 32.00 64.00 33.00 32.00 0.00 96.00 -129.00 65.00 32.00 0.00 32.00 -32.00 65.00 -33.00 64.00 -64.00 64.00 0.00 97.00 0.00 96.00 0.00 32.00 32.00 0.00 -32.00 65.00 0.00 64.00 32.00 64.00 -32.00 65.00 32.00 32.00 65.00 32.00 0.00 32.00 -225.00 64.00 -65.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 65.00 32.00 32.00 32.00 32.00 -32.00 64.00 -32.00 0.00 -65.00 32.00 33.00 129.00 -161.00 32.00 -65.00 32.00 -64.00 0.00 -32.00 0.00 -64.00 32.00 0.00 129.00 -32.00 32.00 -65.00 -128.00 -32.00 0.00 -32.00 32.00 0.00 64.00 0.00 32.00 -64.00 32.00 0.00 33.00 0.00 32.00 -65.00 -32.00 0.00 32.00 -64.00 32.00 -64.00 96.00 32.00 65.00 0.00 32.00 64.00 -32.00 0.00 32.00 0.00 32.00 32.00 96.00 33.00 -32.00 32.00 0.00 0.00 64.00 0.00 65.00 0.00 64.00 32.00 64.00 64.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 0.00 32.00 0.00 97.00 0.00 32.00 33.00 0.00 32.00 32.00 -32.00 0.00 0.00 32.00 64.00 -32.00 0.00 32.00 -32.00 0.00 64.00 32.00 -32.00 0.00 -32.00 32.00 -65.00 -64.00 -64.00 0.00 -32.00 32.00 32.00 0.00 0.00 32.00 32.00 33.00 -64.00 32.00 -64.00 -32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 -33.00 32.00 -32.00 -32.00 -64.00 0.00 -64.00 32.00 0.00 32.00 32.00 0.00 64.00 65.00 -32.00 0.00 32.00 64.00 32.00 32.00 0.00 32.00 -64.00 32.00 0.00 33.00 0.00 64.00 64.00 0.00 32.00 32.00 0.00 32.00 -64.00 0.00 0.00 32.00 32.00 0.00 32.00 33.00 -32.00 64.00 -64.00 -32.00 -32.00 32.00 0.00 32.00 64.00 32.00 -64.00 65.00 32.00 32.00 -64.00 32.00 0.00 96.00 32.00 65.00 -32.00 32.00 0.00 96.00 -33.00 -32.00 -96.00 32.00 32.00 129.00 -32.00 32.00 -32.00 0.00 0.00 -97.00 -32.00 0.00 -32.00 65.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 32.00 64.00 65.00 -32.00 0.00 64.00 32.00 32.00 -32.00 65.00 -33.00 0.00 -64.00 0.00 32.00 96.00 -32.00 32.00 -64.00 -64.00 -65.00 0.00 97.00 64.00 0.00 32.00 -64.00 33.00 64.00 32.00 0.00 32.00 0.00 32.00 -32.00 -32.00 -65.00 0.00 -32.00 32.00 32.00 32.00 -32.00 65.00 -32.00 0.00 -32.00 -33.00 -32.00 33.00 0.00 128.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 65.00 64.00 -65.00 65.00 65.00 32.00 0.00 64.00 -65.00 0.00 -32.00 0.00 -32.00 64.00 -64.00 -32.00 0.00 65.00 0.00 32.00 -32.00 0.00 -33.00 -65.00 -32.00 0.00 32.00 33.00 0.00 32.00 -64.00 32.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 -64.00 64.00 32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 32.00 0.00 -32.00 33.00 -32.00 32.00 -32.00 -32.00 0.00 96.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 65.00 -32.00 32.00 0.00 -32.00 0.00 32.00 -33.00 0.00 0.00 64.00 33.00 0.00 32.00 64.00 -65.00 0.00 33.00 33.00 -33.00 0.00 0.00 32.00 33.00 0.00 0.00 64.00 -97.00 -32.00 32.00 128.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 0.00 32.00 64.00 97.00 -64.00 0.00 32.00 32.00 -64.00 32.00 -32.00 32.00 -65.00 0.00 0.00 33.00 -64.00 32.00 0.00 64.00 -32.00 0.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 33.00 -32.00 32.00 32.00 64.00 -32.00 0.00 -32.00 64.00 -33.00 32.00 33.00 33.00 -33.00 32.00 33.00 0.00 -33.00 0.00 33.00 32.00 -33.00 32.00 -32.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 33.00 -32.00 32.00 32.00 -97.00 65.00 32.00 128.00 0.00 65.00 -64.00 32.00 32.00 32.00 0.00 64.00 -32.00 65.00 0.00 64.00 0.00 64.00 0.00 32.00 -64.00 33.00 0.00 64.00 0.00 32.00 -65.00 32.00 33.00 64.00 -33.00 65.00 -64.00 32.00 -32.00 96.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 97.00 0.00 32.00 -32.00 -32.00 -64.00 64.00 -64.00 32.00 0.00 97.00 -33.00 32.00 -32.00 0.00 0.00 64.00 0.00 32.00 -32.00 0.00 0.00 65.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 64.00 -33.00 0.00 -64.00 0.00 -32.00 64.00 -97.00 65.00 0.00 32.00 -64.00 0.00 -32.00 32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -64.00 0.00 0.00 33.00 -33.00 0.00 33.00 -33.00 -65.00 0.00 -32.00 33.00 0.00 64.00 -32.00 0.00 0.00 64.00 0.00 32.00 -64.00 65.00 0.00 32.00 -33.00 32.00 33.00 64.00 0.00 65.00 32.00 32.00 -32.00 32.00 32.00 64.00 0.00 32.00 -32.00 32.00 -33.00 -32.00 -64.00 32.00 32.00 33.00 -32.00 32.00 0.00 64.00 -32.00 32.00 0.00 32.00 -32.00 0.00 32.00 129.00 -32.00 0.00 -32.00 0.00 -65.00 96.00 -32.00 0.00 -32.00 65.00 -64.00 -32.00 0.00 64.00 -32.00 0.00 -33.00 0.00 -32.00 64.00 -128.00 65.00 32.00 32.00 -32.00 32.00 0.00 64.00 -32.00 64.00 32.00 0.00 -65.00 65.00 0.00 64.00 -64.00 64.00 0.00 65.00 -64.00 96.00 -65.00 97.00 -160.00 160.00 -65.00 193.00 -128.00 161.00 -32.00 32.00 -65.00 32.00 -64.00 33.00 -64.00 96.00 -129.00 96.00 -96.00 -32.00 -65.00 0.00 -64.00 0.00 -64.00 -32.00 -32.00 32.00 -33.00 -64.00 -64.00 0.00 -96.00 -32.00 -65.00 64.00 -64.00 97.00 -611.00 482.00 -386.00 321.00 -160.00 129.00 -97.00 64.00 -547.00 450.00 -64.00 65.00 -900.00 707.00 -97.00 64.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 32.00 65.00 -96.00 64.00 -33.00 64.00 -450.00 322.00 -932.00 772.00 0.00 32.00 0.00 32.00 32.00 32.00 64.00 32.00 65.00 0.00 0.00 32.00 193.00 0.00 128.00 32.00 32.00 0.00 65.00 129.00 128.00 32.00 65.00 0.00 160.00 0.00 225.00 32.00 65.00 0.00 96.00 -32.00 32.00 -32.00 65.00 0.00 32.00 -32.00 32.00 0.00 96.00 -32.00 97.00 32.00 32.00 -64.00 32.00 0.00 64.00 32.00 33.00 64.00 32.00 32.00 64.00 65.00 0.00 32.00 0.00 64.00 32.00 64.00 64.00 97.00 0.00 64.00 0.00 -32.00 33.00 32.00 96.00 129.00 32.00 32.00 65.00 32.00 64.00 32.00 161.00 32.00 96.00 0.00 64.00 65.00 33.00 32.00 64.00 32.00 193.00 129.00 0.00 64.00 0.00 96.00 -32.00 65.00 -97.00 193.00 -64.00 96.00 -64.00 32.00 -33.00 32.00 -32.00 0.00 -96.00 32.00 -225.00 -32.00 -65.00 32.00 -32.00 65.00 -32.00 64.00 0.00 129.00 0.00 32.00 32.00 225.00 0.00 32.00 32.00 32.00 65.00 97.00 128.00 128.00 0.00 32.00 65.00 97.00 0.00 32.00 0.00 97.00 -97.00 64.00 -193.00 32.00 -64.00 32.00 -64.00 64.00 -65.00 97.00 -32.00 64.00 0.00 65.00 32.00 32.00 129.00 32.00 96.00 128.00 0.00 65.00 -32.00 96.00 -64.00 65.00 -129.00 96.00 -160.00 64.00 -129.00 -32.00 -64.00 32.00 -65.00 65.00 -64.00 64.00 0.00 96.00 0.00 97.00 32.00 96.00 32.00 161.00 33.00 64.00 -33.00 33.00 0.00 32.00 33.00 64.00 64.00 32.00 64.00 32.00 32.00 32.00 32.00 97.00 -32.00 128.00 -32.00 33.00 -64.00 -33.00 -129.00 -96.00 -96.00 -32.00 -258.00 0.00 -32.00 32.00 -64.00 96.00 -32.00 65.00 -97.00 96.00 -64.00 32.00 -225.00 193.00 -64.00 129.00 -32.00 32.00 -65.00 97.00 0.00 96.00 -64.00 64.00 -32.00 97.00 0.00 64.00 64.00 193.00 0.00 129.00 -32.00 64.00 -32.00 64.00 -97.00 65.00 -257.00 64.00 -96.00 161.00 -65.00 64.00 -32.00 0.00 -161.00 64.00 -64.00 0.00 -64.00 0.00 -32.00 0.00 -129.00 0.00 -193.00 32.00 -64.00 32.00 -64.00 33.00 -129.00 64.00 -225.00 0.00 -64.00 96.00 -65.00 65.00 -193.00 128.00 -128.00 129.00 -193.00 96.00 -97.00 33.00 -32.00 0.00 -32.00 64.00 -96.00 96.00 -33.00 65.00 0.00 96.00 0.00 64.00 33.00 33.00 64.00 225.00 0.00 64.00 0.00 129.00 0.00 32.00 0.00 289.00 32.00 290.00 32.00 128.00 -32.00 97.00 -96.00 160.00 -33.00 129.00 -96.00 129.00 -96.00 128.00 -65.00 97.00 0.00 32.00 -64.00 64.00 -193.00 193.00 -129.00 161.00 -64.00 128.00 -64.00 33.00 -32.00 257.00 0.00 96.00 96.00 193.00 0.00 32.00 97.00 225.00 32.00 65.00 64.00 64.00 129.00 64.00 160.00 129.00 97.00 64.00 96.00 129.00 97.00 64.00 128.00 32.00 65.00 32.00 32.00 65.00 0.00 32.00 -32.00 64.00 -32.00 32.00 0.00 97.00 0.00 32.00 32.00 225.00 -32.00 129.00 0.00 128.00 -65.00 97.00 32.00 161.00 0.00 64.00 0.00 161.00 -32.00 64.00 -64.00 32.00 0.00 32.00 -32.00 32.00 0.00 97.00 -32.00 64.00 32.00 97.00 -32.00 160.00 -33.00 97.00 -32.00 64.00 -64.00 129.00 -96.00 193.00 -33.00 257.00 -32.00 96.00 -64.00 161.00 -64.00 64.00 -97.00 65.00 -128.00 64.00 -33.00 0.00 -128.00 193.00 -32.00 96.00 -33.00 65.00 -32.00 289.00 0.00 64.00 -64.00 97.00 -193.00 161.00 -32.00 96.00 -64.00 64.00 -33.00 129.00 -64.00 96.00 -225.00 322.00 -129.00 193.00 -96.00 128.00 -32.00 65.00 -97.00 32.00 -128.00 0.00 -193.00 64.00 -225.00 193.00 -65.00 32.00 -64.00 97.00 -64.00 64.00 -64.00 129.00 -33.00 96.00 -257.00 225.00 -32.00 97.00 0.00 64.00 -32.00 97.00 -64.00 128.00 -129.00 193.00 -32.00 32.00 0.00 64.00 0.00 33.00 -161.00 128.00 -129.00 161.00 -128.00 0.00 -32.00 193.00 -97.00 32.00 -64.00 64.00 -64.00 65.00 0.00 32.00 -33.00 128.00 0.00 33.00 0.00 128.00 0.00 32.00 -32.00 129.00 -128.00 129.00 -65.00 225.00 0.00 64.00 0.00 64.00 -32.00 0.00 0.00 32.00 64.00 97.00 33.00 96.00 -65.00 65.00 -32.00 64.00 0.00 96.00 -32.00 65.00 -32.00 64.00 -64.00 32.00 0.00 129.00 -65.00 96.00 0.00 97.00 -32.00 32.00 0.00 64.00 -193.00 225.00 -32.00 161.00 -32.00 97.00 -32.00 96.00 -32.00 32.00 -2926.00 -193.00 -1029.00 -64.00 -1158.00 -64.00 -739.00 -65.00 -3762.00 -257.00 -1737.00 -129.00 -257.00 0.00 -2154.00 -160.00 -2154.00 -161.00 -2476.00 -193.00 -2379.00 -193.00 -579.00 -32.00 -1254.00 -129.00 -3762.00 -289.00 -1736.00 -161.00 -547.00 -32.00 -1865.00 -161.00 -129.00 32.00 -64.00 0.00 -32.00 0.00 0.00 33.00 -96.00 64.00 -97.00 32.00 -32.00 0.00 -32.00 -64.00 0.00 -65.00 -32.00 -64.00 0.00 -161.00 0.00 -64.00 -32.00 0.00 -97.00 -257.00 -64.00 -97.00 -129.00 -32.00 -64.00 -32.00 -64.00 32.00 -33.00 0.00 -289.00 -32.00 -64.00 -32.00 -193.00 32.00 -65.00 -32.00 -64.00 -32.00 -64.00 -32.00 -32.00 -65.00 -65.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 -65.00 -32.00 -96.00 97.00 -129.00 0.00 -64.00 -32.00 -64.00 -65.00 -32.00 0.00 -97.00 -64.00 -32.00 -64.00 -97.00 -33.00 -96.00 -192.00 -97.00 -258.00 -321.00 -32.00 -32.00 -64.00 -32.00 -97.00 -32.00 -64.00 -33.00 -32.00 33.00 -161.00 32.00 -64.00 0.00 -32.00 -32.00 -32.00 -97.00 -161.00 -32.00 -161.00 0.00 -96.00 -97.00 -65.00 -32.00 -32.00 -32.00 32.00 -129.00 0.00 -128.00 -64.00 -64.00 -96.00 0.00 -65.00 0.00 -96.00 -65.00 -225.00 -128.00 -161.00 64.00 -129.00 0.00 -32.00 -96.00 32.00 -161.00 -64.00 -193.00 -64.00 -97.00 -32.00 -32.00 32.00 -225.00 -65.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 -97.00 64.00 -64.00 32.00 -97.00 -32.00 -32.00 -96.00 -64.00 0.00 -32.00 32.00 -64.00 0.00 -65.00 -129.00 -161.00 -32.00 -96.00 0.00 -32.00 97.00 -161.00 0.00 -32.00 0.00 -32.00 -65.00 -129.00 0.00 -64.00 0.00 -32.00 65.00 -97.00 32.00 -161.00 64.00 -160.00 0.00 -32.00 0.00 -65.00 -96.00 -160.00 -65.00 -33.00 -128.00 -32.00 -33.00 -32.00 -32.00 -64.00 -32.00 -258.00 -225.00 -192.00 -128.00 -258.00 -129.00 -128.00 0.00 -97.00 -32.00 -353.00 -32.00 -97.00 -161.00 -289.00 -32.00 -193.00 -65.00 -418.00 -32.00 -64.00 -64.00 -33.00 -64.00 0.00 -33.00 -32.00 -32.00 -225.00 0.00 -32.00 -128.00 -322.00 -129.00 -225.00 -161.00 -160.00 -128.00 -258.00 -33.00 -64.00 -257.00 -161.00 -64.00 -32.00 0.00 32.00 -64.00 -64.00 -97.00 -129.00 0.00 -64.00 -32.00 -161.00 32.00 -193.00 -64.00 -257.00 -96.00 -96.00 -33.00 -129.00 -64.00 -32.00 -32.00 -64.00 -64.00 -129.00 -33.00 0.00 -96.00 -32.00 -97.00 -97.00 -160.00 -289.00 -65.00 -64.00 -64.00 -65.00 -128.00 -32.00 -33.00 0.00 -32.00 -96.00 -64.00 -32.00 -129.00 -161.00 -128.00 -354.00 -33.00 -161.00 -64.00 -96.00 0.00 -418.00 64.00 -129.00 97.00 -96.00 96.00 -161.00 258.00 -225.00 96.00 -32.00 64.00 -97.00 33.00 -64.00 32.00 -161.00 32.00 -32.00 128.00 0.00 33.00 0.00 0.00 -32.00 64.00 -32.00 32.00 -64.00 1897.00 -4212.00 740.00 -1672.00 418.00 -901.00 321.00 -771.00 1415.00 -3087.00 1093.00 -2379.00 322.00 -708.00 193.00 -450.00 128.00 -322.00 354.00 -803.00 193.00 -450.00 32.00 -33.00 547.00 -1221.00 353.00 -772.00 161.00 -418.00 257.00 -515.00 258.00 -578.00 128.00 -290.00 -32.00 -32.00 -64.00 0.00 -65.00 -32.00 -96.00 -32.00 -32.00 -32.00 0.00 -32.00 193.00 -258.00 32.00 -64.00 0.00 -96.00 32.00 -65.00 96.00 -225.00 33.00 -32.00 96.00 -64.00 161.00 -32.00 321.00 -161.00 193.00 -129.00 129.00 -96.00 128.00 -129.00 129.00 -225.00 161.00 -257.00 32.00 -65.00 0.00 -32.00 -225.00 65.00 -64.00 0.00 -65.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -97.00 -32.00 -128.00 161.00 -129.00 32.00 -64.00 32.00 -33.00 32.00 0.00 64.00 -32.00 0.00 -32.00 97.00 -64.00 32.00 -97.00 0.00 -96.00 -32.00 -64.00 32.00 -33.00 64.00 -96.00 65.00 -64.00 0.00 -65.00 -65.00 -32.00 -32.00 -64.00 32.00 -64.00 33.00 -33.00 32.00 -128.00 -161.00 -65.00 0.00 -32.00 0.00 -64.00 64.00 -96.00 32.00 -33.00 65.00 -64.00 32.00 -32.00 -32.00 -64.00 0.00 0.00 32.00 -32.00 128.00 -33.00 33.00 -32.00 -33.00 -64.00 0.00 -97.00 33.00 -128.00 0.00 -97.00 -65.00 -32.00 -64.00 -96.00 -32.00 -97.00 -32.00 -64.00 0.00 -32.00 -32.00 0.00 -129.00 96.00 -129.00 97.00 -96.00 32.00 -97.00 0.00 -32.00 0.00 -96.00 -32.00 -97.00 -32.00 -32.00 -65.00 -64.00 -64.00 0.00 -129.00 64.00 -193.00 0.00 -64.00 0.00 -64.00 -32.00 -97.00 -129.00 -96.00 -64.00 -32.00 -32.00 -32.00 0.00 -193.00 -32.00 -32.00 -32.00 -33.00 -97.00 -64.00 -64.00 -32.00 -64.00 -193.00 32.00 -32.00 -32.00 -97.00 -225.00 -64.00 -65.00 -32.00 -96.00 64.00 -65.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 0.00 -32.00 0.00 -32.00 -65.00 -65.00 -96.00 97.00 -64.00 -129.00 -97.00 0.00 -64.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 -129.00 0.00 -32.00 -64.00 64.00 -33.00 -64.00 -32.00 32.00 -32.00 0.00 -32.00 -64.00 -64.00 32.00 -32.00 32.00 -33.00 0.00 -64.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 64.00 -33.00 0.00 0.00 -32.00 -128.00 0.00 -32.00 96.00 -97.00 -64.00 -96.00 -32.00 32.00 64.00 -64.00 32.00 -97.00 -96.00 -96.00 64.00 -32.00 -64.00 64.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 -33.00 0.00 -64.00 -65.00 0.00 -64.00 97.00 -64.00 -33.00 32.00 -64.00 0.00 -32.00 -193.00 64.00 -32.00 -64.00 0.00 -64.00 -65.00 32.00 -32.00 -32.00 -32.00 -65.00 -96.00 65.00 32.00 -129.00 -65.00 0.00 -32.00 -97.00 -32.00 0.00 -64.00 0.00 -97.00 -64.00 -32.00 32.00 -32.00 -64.00 32.00 -32.00 -64.00 -64.00 -32.00 32.00 0.00 32.00 -193.00 32.00 -32.00 -32.00 -97.00 64.00 -64.00 -96.00 -64.00 0.00 32.00 -65.00 -32.00 -64.00 -33.00 -64.00 0.00 -161.00 -64.00 32.00 -96.00 -32.00 0.00 32.00 -65.00 -32.00 -64.00 32.00 -32.00 0.00 0.00 -32.00 0.00 -64.00 -32.00 0.00 -32.00 0.00 -32.00 -65.00 -33.00 -32.00 -32.00 -96.00 -32.00 0.00 0.00 -32.00 -96.00 -33.00 0.00 -32.00 -97.00 -32.00 -64.00 0.00 -97.00 64.00 -32.00 -64.00 -32.00 32.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 -97.00 -32.00 -64.00 32.00 -32.00 0.00 0.00 -97.00 -96.00 -32.00 0.00 -64.00 32.00 -32.00 -65.00 0.00 -64.00 -65.00 0.00 -64.00 0.00 -64.00 32.00 -32.00 0.00 -97.00 97.00 -289.00 32.00 -32.00 0.00 -97.00 -64.00 -64.00 32.00 -97.00 0.00 -64.00 -32.00 -32.00 -129.00 -32.00 -32.00 -97.00 0.00 -32.00 -32.00 -64.00 -65.00 -32.00 -32.00 0.00 -193.00 128.00 -32.00 65.00 32.00 32.00 -64.00 64.00 -129.00 32.00 0.00 97.00 -32.00 32.00 -128.00 161.00 -33.00 32.00 -96.00 -129.00 -64.00 -32.00 -97.00 -161.00 -128.00 -32.00 -65.00 -128.00 -64.00 0.00 0.00 32.00 -257.00 32.00 32.00 -64.00 -97.00 -33.00 -32.00 -96.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -129.00 -97.00 -97.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 -64.00 33.00 -96.00 -33.00 -33.00 33.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -65.00 -32.00 0.00 -65.00 -128.00 -96.00 32.00 -97.00 -32.00 -64.00 96.00 -32.00 0.00 -32.00 -128.00 -97.00 -33.00 0.00 0.00 32.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -64.00 0.00 -65.00 -32.00 33.00 -32.00 -33.00 -33.00 33.00 -32.00 0.00 0.00 -33.00 -193.00 -128.00 0.00 -32.00 -32.00 -32.00 0.00 -33.00 -32.00 0.00 -64.00 -64.00 0.00 -32.00 -65.00 0.00 -64.00 -32.00 -96.00 -193.00 -65.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 -33.00 -96.00 -96.00 -97.00 -32.00 0.00 -32.00 -32.00 -129.00 -32.00 0.00 0.00 -32.00 -64.00 -64.00 0.00 -65.00 32.00 -32.00 0.00 -96.00 -32.00 -32.00 0.00 -97.00 64.00 0.00 32.00 -64.00 0.00 -32.00 0.00 -97.00 -32.00 -64.00 -32.00 -32.00 -32.00 -129.00 32.00 -161.00 -32.00 -32.00 -33.00 0.00 -32.00 -96.00 -96.00 -32.00 -65.00 -97.00 -64.00 -32.00 -32.00 32.00 0.00 -32.00 -96.00 0.00 0.00 -32.00 -129.00 -64.00 -129.00 -97.00 0.00 -225.00 32.00 -64.00 0.00 -32.00 0.00 -65.00 -32.00 0.00 -32.00 -161.00 0.00 -160.00 97.00 -193.00 0.00 -65.00 -33.00 -32.00 33.00 -289.00 -65.00 -64.00 -32.00 0.00 -32.00 -33.00 0.00 -128.00 -32.00 -64.00 0.00 -33.00 0.00 -1350.00 0.00 -4727.00zm60641.00 11254.00l0.00 -32.00 0.00 -32.00 32.00 0.00 64.00 0.00 -32.00 32.00 32.00 0.00 33.00 129.00 0.00 64.00 -33.00 -32.00 -64.00 -97.00 -32.00 -32.00zm-4373.00 -1768.00l-32.00 32.00 32.00 -32.00zm3858.00 1093.00l0.00 32.00 -32.00 0.00 0.00 -32.00 32.00 0.00zm-3986.00 -1061.00l32.00 0.00 -32.00 0.00 0.00 32.00 0.00 -32.00zm2057.00 514.00l32.00 0.00 0.00 32.00 -32.00 0.00 0.00 -32.00zm1351.00 643.00l-32.00 -32.00 32.00 -32.00 32.00 32.00 -32.00 0.00 32.00 32.00 -32.00 0.00zm-579.00 258.00l-32.00 0.00 32.00 0.00 0.00 -33.00 32.00 0.00 0.00 33.00 -32.00 0.00zm-6624.00 -1705.00l33.00 -32.00 32.00 32.00 -32.00 0.00 0.00 33.00 -33.00 32.00 0.00 -32.00 0.00 -33.00zm6913.00 1705.00l0.00 -65.00 32.00 -32.00 33.00 0.00 -33.00 32.00 0.00 97.00 -32.00 0.00 0.00 -32.00zm-3086.00 -1544.00l64.00 0.00 0.00 32.00 32.00 -32.00 32.00 32.00 -128.00 32.00 0.00 -64.00zm3022.00 1254.00l-32.00 32.00 -32.00 0.00 0.00 65.00 -129.00 96.00 32.00 -96.00 65.00 -129.00 0.00 -32.00 32.00 -32.00 32.00 32.00 32.00 32.00 0.00 32.00z\"\n          },\n          sp: {\n            name: \"SP\",\n            path: \"M104646.00 137841.00l-33.00 -32.00 0.00 -33.00 0.00 -32.00 33.00 -64.00 96.00 -129.00 97.00 -96.00 32.00 -32.00 193.00 -65.00 32.00 -32.00 64.00 -96.00 193.00 -97.00 32.00 0.00 32.00 -32.00 258.00 -64.00 128.00 -64.00 32.00 0.00 65.00 -129.00 160.00 -129.00 32.00 -64.00 258.00 -161.00 96.00 -32.00 129.00 -96.00 193.00 -65.00 96.00 -64.00 64.00 -32.00 97.00 -64.00 96.00 -97.00 161.00 -32.00 129.00 -64.00 96.00 -33.00 32.00 -32.00 33.00 0.00 32.00 -64.00 96.00 -96.00 32.00 -33.00 225.00 -160.00 32.00 -97.00 33.00 -32.00 64.00 -64.00 161.00 -225.00 128.00 -418.00 33.00 -97.00 160.00 -193.00 65.00 0.00 0.00 -32.00 64.00 -32.00 64.00 -97.00 225.00 -160.00 32.00 -97.00 0.00 -64.00 97.00 -225.00 96.00 -64.00 193.00 -65.00 32.00 -64.00 65.00 -64.00 128.00 -225.00 0.00 -33.00 0.00 -96.00 -64.00 -129.00 0.00 -96.00 -161.00 -129.00 -32.00 -64.00 64.00 -97.00 65.00 -128.00 64.00 -32.00 32.00 0.00 193.00 32.00 97.00 0.00 128.00 -64.00 32.00 -33.00 65.00 -96.00 96.00 -96.00 32.00 -97.00 32.00 -96.00 33.00 -129.00 192.00 -161.00 33.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -129.00 32.00 -161.00 -32.00 -32.00 -32.00 -193.00 -65.00 -96.00 -32.00 -32.00 32.00 -65.00 -32.00 -161.00 32.00 -64.00 32.00 -32.00 129.00 0.00 97.00 -32.00 32.00 0.00 32.00 -64.00 96.00 -33.00 65.00 -160.00 0.00 -97.00 64.00 -96.00 32.00 -97.00 129.00 -161.00 64.00 -32.00 193.00 0.00 32.00 0.00 193.00 -128.00 32.00 -65.00 32.00 -225.00 -64.00 -64.00 -32.00 -96.00 0.00 -161.00 32.00 -161.00 0.00 -32.00 0.00 -32.00 -64.00 -97.00 32.00 -160.00 161.00 -354.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 -32.00 225.00 -129.00 97.00 -96.00 32.00 -96.00 161.00 -258.00 64.00 -64.00 129.00 -96.00 64.00 -33.00 0.00 -32.00 161.00 -289.00 64.00 -32.00 32.00 -129.00 32.00 -32.00 32.00 0.00 97.00 -64.00 96.00 -65.00 290.00 -64.00 193.00 0.00 128.00 -32.00 97.00 -32.00 32.00 0.00 64.00 -32.00 65.00 -65.00 64.00 -32.00 161.00 -128.00 32.00 -65.00 64.00 -193.00 96.00 -225.00 129.00 -257.00 0.00 -64.00 161.00 -225.00 0.00 -33.00 64.00 0.00 32.00 0.00 65.00 -64.00 96.00 -64.00 0.00 -65.00 64.00 0.00 65.00 0.00 64.00 0.00 96.00 -96.00 33.00 -32.00 128.00 -32.00 97.00 -65.00 0.00 -32.00 64.00 0.00 257.00 -64.00 225.00 -64.00 32.00 0.00 65.00 -32.00 32.00 0.00 96.00 -161.00 65.00 -65.00 64.00 -32.00 96.00 -128.00 33.00 -65.00 64.00 0.00 96.00 0.00 65.00 -64.00 64.00 -32.00 96.00 0.00 65.00 -32.00 64.00 -32.00 64.00 32.00 97.00 32.00 96.00 32.00 193.00 225.00 97.00 32.00 0.00 65.00 96.00 0.00 64.00 32.00 33.00 0.00 128.00 -32.00 193.00 64.00 129.00 -64.00 96.00 0.00 129.00 32.00 32.00 32.00 32.00 0.00 97.00 -32.00 160.00 0.00 32.00 0.00 33.00 32.00 64.00 32.00 129.00 129.00 32.00 32.00 64.00 0.00 64.00 32.00 258.00 -32.00 257.00 96.00 64.00 32.00 97.00 0.00 96.00 0.00 97.00 -64.00 192.00 -32.00 33.00 0.00 160.00 0.00 32.00 0.00 161.00 32.00 322.00 0.00 64.00 0.00 0.00 -32.00 97.00 -32.00 128.00 -32.00 97.00 0.00 32.00 -32.00 128.00 32.00 97.00 32.00 64.00 128.00 32.00 33.00 129.00 128.00 96.00 0.00 386.00 32.00 97.00 -32.00 96.00 -64.00 97.00 -32.00 160.00 32.00 33.00 0.00 32.00 32.00 0.00 64.00 0.00 65.00 -65.00 32.00 -96.00 0.00 -64.00 64.00 -65.00 257.00 0.00 129.00 0.00 32.00 32.00 64.00 0.00 258.00 161.00 289.00 32.00 97.00 0.00 64.00 129.00 193.00 32.00 0.00 161.00 32.00 64.00 32.00 32.00 0.00 0.00 -32.00 193.00 -129.00 65.00 -64.00 128.00 -289.00 129.00 -258.00 32.00 -32.00 129.00 0.00 64.00 32.00 129.00 32.00 32.00 65.00 64.00 161.00 32.00 257.00 0.00 96.00 -32.00 547.00 32.00 32.00 289.00 193.00 65.00 0.00 32.00 -32.00 64.00 -129.00 0.00 -32.00 0.00 -64.00 0.00 -32.00 -64.00 -161.00 32.00 -161.00 -64.00 -96.00 0.00 -33.00 0.00 -96.00 64.00 -129.00 64.00 -64.00 33.00 -32.00 0.00 -32.00 -33.00 -65.00 33.00 -96.00 32.00 -32.00 96.00 -65.00 32.00 0.00 193.00 0.00 129.00 -32.00 96.00 -32.00 32.00 0.00 161.00 64.00 97.00 0.00 32.00 33.00 96.00 0.00 97.00 -33.00 128.00 -128.00 65.00 -32.00 128.00 0.00 97.00 32.00 96.00 0.00 129.00 0.00 161.00 -64.00 64.00 0.00 161.00 -33.00 128.00 33.00 32.00 0.00 65.00 0.00 32.00 0.00 64.00 -33.00 97.00 0.00 96.00 33.00 64.00 64.00 33.00 32.00 32.00 0.00 32.00 0.00 96.00 0.00 65.00 -32.00 32.00 0.00 32.00 -64.00 0.00 -33.00 -161.00 -160.00 0.00 -32.00 32.00 -161.00 -32.00 -32.00 32.00 -33.00 97.00 0.00 32.00 33.00 64.00 32.00 97.00 161.00 32.00 96.00 32.00 32.00 32.00 0.00 32.00 0.00 32.00 97.00 97.00 32.00 64.00 64.00 97.00 32.00 96.00 0.00 129.00 -64.00 32.00 -97.00 96.00 33.00 65.00 -97.00 32.00 -64.00 32.00 -64.00 0.00 -161.00 32.00 -32.00 32.00 0.00 129.00 96.00 32.00 161.00 64.00 96.00 129.00 65.00 32.00 0.00 97.00 -97.00 32.00 -64.00 0.00 -64.00 0.00 -65.00 32.00 -64.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 64.00 -97.00 32.00 0.00 65.00 33.00 160.00 -65.00 161.00 0.00 97.00 32.00 64.00 -32.00 96.00 -32.00 32.00 0.00 161.00 129.00 0.00 32.00 0.00 32.00 65.00 64.00 32.00 33.00 64.00 64.00 64.00 -32.00 65.00 0.00 96.00 -97.00 0.00 -96.00 64.00 -32.00 129.00 0.00 0.00 -33.00 64.00 -32.00 129.00 0.00 64.00 -64.00 65.00 0.00 32.00 -32.00 32.00 -32.00 0.00 32.00 96.00 96.00 65.00 65.00 32.00 64.00 0.00 32.00 0.00 32.00 -65.00 32.00 0.00 33.00 0.00 64.00 129.00 64.00 32.00 97.00 32.00 0.00 129.00 0.00 64.00 96.00 65.00 0.00 64.00 64.00 129.00 33.00 64.00 128.00 96.00 32.00 32.00 0.00 33.00 65.00 0.00 96.00 32.00 0.00 32.00 64.00 64.00 97.00 0.00 32.00 -64.00 161.00 -32.00 0.00 -65.00 96.00 -32.00 0.00 -32.00 65.00 0.00 96.00 -32.00 0.00 0.00 64.00 0.00 32.00 -32.00 0.00 32.00 33.00 -64.00 32.00 32.00 96.00 0.00 32.00 0.00 33.00 0.00 32.00 32.00 0.00 -32.00 64.00 32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 33.00 0.00 32.00 32.00 0.00 0.00 32.00 -32.00 32.00 0.00 32.00 96.00 65.00 65.00 0.00 32.00 64.00 96.00 32.00 97.00 96.00 64.00 0.00 64.00 33.00 129.00 32.00 32.00 64.00 32.00 0.00 0.00 64.00 32.00 65.00 -32.00 32.00 64.00 128.00 33.00 0.00 0.00 33.00 0.00 32.00 0.00 32.00 64.00 32.00 0.00 32.00 0.00 65.00 64.00 32.00 0.00 32.00 0.00 32.00 -32.00 64.00 0.00 65.00 -32.00 64.00 -32.00 32.00 0.00 32.00 -161.00 0.00 -64.00 -32.00 -32.00 32.00 0.00 32.00 -65.00 65.00 32.00 64.00 -32.00 0.00 -32.00 129.00 -32.00 32.00 -32.00 0.00 -32.00 96.00 -65.00 32.00 65.00 129.00 -65.00 129.00 -64.00 160.00 64.00 129.00 65.00 64.00 96.00 0.00 0.00 65.00 32.00 64.00 65.00 0.00 32.00 64.00 64.00 32.00 32.00 32.00 -32.00 97.00 0.00 64.00 -32.00 32.00 32.00 97.00 32.00 96.00 32.00 65.00 -32.00 96.00 32.00 0.00 32.00 32.00 97.00 32.00 0.00 33.00 -64.00 0.00 0.00 32.00 0.00 32.00 -65.00 32.00 97.00 96.00 -32.00 97.00 32.00 32.00 0.00 32.00 64.00 97.00 32.00 64.00 0.00 -32.00 32.00 0.00 97.00 0.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 65.00 64.00 -33.00 32.00 65.00 32.00 0.00 0.00 32.00 33.00 64.00 0.00 65.00 0.00 32.00 64.00 64.00 -32.00 32.00 32.00 0.00 32.00 64.00 0.00 33.00 32.00 64.00 64.00 32.00 33.00 32.00 -33.00 32.00 -32.00 33.00 32.00 64.00 -32.00 64.00 -32.00 0.00 32.00 64.00 0.00 33.00 -32.00 0.00 32.00 32.00 32.00 0.00 33.00 32.00 32.00 -32.00 0.00 32.00 64.00 -32.00 32.00 0.00 32.00 0.00 32.00 32.00 33.00 -32.00 64.00 32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 65.00 0.00 32.00 -32.00 32.00 0.00 32.00 -33.00 96.00 -32.00 0.00 -32.00 33.00 0.00 0.00 -32.00 64.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 65.00 0.00 128.00 32.00 32.00 -32.00 32.00 -33.00 65.00 0.00 32.00 0.00 -32.00 65.00 32.00 32.00 96.00 64.00 65.00 0.00 0.00 -32.00 32.00 32.00 32.00 64.00 64.00 -96.00 32.00 -32.00 33.00 -32.00 32.00 0.00 32.00 -65.00 32.00 0.00 64.00 0.00 0.00 65.00 0.00 32.00 0.00 32.00 0.00 32.00 33.00 32.00 32.00 65.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 32.00 64.00 32.00 0.00 -32.00 129.00 -64.00 0.00 32.00 64.00 32.00 65.00 0.00 64.00 32.00 32.00 0.00 32.00 0.00 0.00 33.00 0.00 32.00 32.00 32.00 0.00 64.00 33.00 32.00 -65.00 65.00 0.00 64.00 -32.00 32.00 32.00 64.00 32.00 32.00 65.00 65.00 0.00 32.00 -32.00 0.00 -33.00 32.00 0.00 32.00 -32.00 65.00 0.00 32.00 -32.00 32.00 32.00 32.00 0.00 32.00 -64.00 32.00 0.00 65.00 -64.00 0.00 -33.00 32.00 33.00 64.00 -33.00 0.00 -64.00 32.00 0.00 97.00 -64.00 32.00 -193.00 -32.00 0.00 64.00 -32.00 32.00 0.00 32.00 32.00 65.00 -32.00 64.00 0.00 32.00 0.00 32.00 0.00 97.00 0.00 32.00 -64.00 0.00 -33.00 32.00 -32.00 0.00 32.00 64.00 -96.00 97.00 0.00 32.00 -64.00 32.00 -33.00 64.00 33.00 65.00 32.00 0.00 32.00 0.00 64.00 96.00 0.00 32.00 32.00 32.00 -32.00 65.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 64.00 64.00 -32.00 65.00 64.00 32.00 0.00 64.00 65.00 97.00 32.00 32.00 32.00 0.00 32.00 64.00 32.00 32.00 0.00 32.00 0.00 33.00 0.00 32.00 -32.00 0.00 -96.00 -65.00 -33.00 33.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -64.00 -32.00 0.00 32.00 -32.00 0.00 -33.00 64.00 65.00 64.00 64.00 33.00 0.00 32.00 -96.00 32.00 -65.00 0.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 0.00 64.00 33.00 96.00 -33.00 65.00 65.00 64.00 32.00 32.00 96.00 64.00 0.00 0.00 33.00 -64.00 64.00 -128.00 32.00 -33.00 96.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 32.00 33.00 -64.00 160.00 32.00 32.00 -97.00 65.00 32.00 64.00 -32.00 -32.00 -32.00 64.00 -32.00 32.00 0.00 33.00 32.00 32.00 -32.00 32.00 32.00 64.00 -64.00 64.00 -32.00 0.00 32.00 33.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 32.00 0.00 32.00 0.00 32.00 32.00 0.00 0.00 33.00 33.00 0.00 32.00 64.00 64.00 0.00 -32.00 64.00 32.00 32.00 -32.00 97.00 0.00 32.00 96.00 32.00 0.00 32.00 33.00 0.00 32.00 32.00 96.00 33.00 0.00 -33.00 64.00 33.00 33.00 0.00 64.00 0.00 32.00 32.00 0.00 32.00 32.00 -32.00 64.00 0.00 33.00 32.00 -33.00 32.00 0.00 32.00 33.00 0.00 64.00 32.00 0.00 65.00 -32.00 32.00 161.00 64.00 0.00 64.00 64.00 -32.00 32.00 32.00 97.00 0.00 64.00 0.00 0.00 65.00 64.00 0.00 0.00 32.00 64.00 32.00 33.00 0.00 32.00 -32.00 0.00 64.00 -97.00 97.00 0.00 64.00 97.00 0.00 -65.00 64.00 97.00 97.00 -97.00 32.00 0.00 32.00 33.00 32.00 64.00 0.00 32.00 32.00 32.00 32.00 0.00 65.00 -64.00 32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -32.00 32.00 -96.00 32.00 0.00 32.00 -65.00 -32.00 -32.00 32.00 0.00 32.00 32.00 32.00 -32.00 33.00 32.00 32.00 65.00 0.00 32.00 96.00 64.00 0.00 0.00 32.00 64.00 32.00 0.00 -32.00 97.00 65.00 64.00 0.00 32.00 -33.00 0.00 33.00 32.00 0.00 65.00 96.00 32.00 -32.00 96.00 0.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -64.00 33.00 -65.00 128.00 0.00 65.00 33.00 32.00 -33.00 32.00 33.00 96.00 -65.00 0.00 0.00 32.00 32.00 0.00 0.00 33.00 33.00 32.00 32.00 64.00 96.00 32.00 32.00 -32.00 97.00 -32.00 96.00 32.00 65.00 -96.00 64.00 0.00 32.00 0.00 0.00 64.00 64.00 0.00 33.00 32.00 32.00 -64.00 160.00 -65.00 33.00 -32.00 32.00 32.00 161.00 -32.00 32.00 -32.00 0.00 32.00 32.00 97.00 0.00 32.00 -32.00 96.00 -32.00 33.00 64.00 32.00 64.00 -65.00 65.00 0.00 64.00 -64.00 96.00 -32.00 129.00 32.00 96.00 -64.00 97.00 32.00 32.00 -32.00 64.00 -32.00 0.00 -33.00 65.00 -32.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 65.00 0.00 64.00 -64.00 0.00 -33.00 64.00 -32.00 32.00 0.00 -32.00 65.00 0.00 32.00 64.00 0.00 0.00 32.00 0.00 64.00 33.00 0.00 0.00 32.00 0.00 65.00 32.00 0.00 64.00 -33.00 32.00 0.00 0.00 -32.00 0.00 -64.00 32.00 0.00 32.00 -64.00 33.00 0.00 64.00 0.00 0.00 -32.00 64.00 32.00 0.00 -32.00 65.00 32.00 0.00 64.00 32.00 32.00 32.00 0.00 64.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -161.00 64.00 0.00 33.00 -64.00 32.00 32.00 32.00 64.00 32.00 0.00 32.00 32.00 65.00 0.00 0.00 -32.00 -33.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -65.00 32.00 0.00 33.00 -32.00 0.00 -64.00 -33.00 0.00 0.00 -64.00 -64.00 -97.00 32.00 0.00 -32.00 0.00 -96.00 0.00 -33.00 0.00 -96.00 32.00 -96.00 32.00 -33.00 0.00 -64.00 -64.00 32.00 -128.00 129.00 -33.00 32.00 -32.00 96.00 -32.00 0.00 -32.00 33.00 0.00 32.00 -32.00 0.00 -32.00 64.00 0.00 64.00 32.00 33.00 -32.00 96.00 -33.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 -33.00 -96.00 -64.00 0.00 0.00 -32.00 -32.00 -33.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 97.00 32.00 96.00 -64.00 65.00 32.00 0.00 32.00 32.00 64.00 -32.00 0.00 -33.00 65.00 33.00 0.00 -65.00 64.00 0.00 32.00 -32.00 32.00 64.00 64.00 33.00 0.00 64.00 -32.00 161.00 -32.00 64.00 -96.00 64.00 0.00 32.00 -32.00 -32.00 0.00 65.00 -65.00 0.00 65.00 64.00 0.00 32.00 64.00 -96.00 64.00 -33.00 32.00 0.00 32.00 33.00 33.00 128.00 -33.00 32.00 0.00 33.00 -32.00 32.00 0.00 128.00 -96.00 65.00 32.00 64.00 -161.00 -32.00 -32.00 32.00 0.00 96.00 64.00 33.00 0.00 32.00 33.00 32.00 32.00 64.00 0.00 32.00 32.00 32.00 32.00 -32.00 96.00 65.00 0.00 32.00 0.00 96.00 -64.00 64.00 0.00 33.00 -64.00 64.00 0.00 32.00 -32.00 161.00 -32.00 96.00 32.00 33.00 -32.00 32.00 0.00 0.00 -33.00 32.00 -64.00 -32.00 -32.00 160.00 -97.00 33.00 0.00 64.00 -32.00 32.00 0.00 129.00 -32.00 64.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 -33.00 64.00 -64.00 32.00 0.00 65.00 -32.00 32.00 -32.00 32.00 0.00 64.00 -32.00 32.00 -33.00 65.00 33.00 96.00 -65.00 97.00 -32.00 64.00 -32.00 0.00 32.00 64.00 0.00 65.00 0.00 32.00 0.00 128.00 32.00 33.00 -32.00 96.00 -64.00 129.00 0.00 64.00 0.00 32.00 -97.00 64.00 -32.00 33.00 -32.00 32.00 0.00 32.00 32.00 64.00 0.00 32.00 0.00 65.00 -32.00 64.00 -32.00 0.00 -32.00 128.00 0.00 65.00 32.00 64.00 0.00 64.00 64.00 65.00 65.00 32.00 128.00 0.00 32.00 -32.00 65.00 32.00 32.00 32.00 0.00 0.00 32.00 0.00 64.00 64.00 0.00 33.00 32.00 32.00 0.00 32.00 33.00 32.00 64.00 -32.00 32.00 0.00 64.00 96.00 -32.00 32.00 32.00 33.00 -32.00 32.00 32.00 -32.00 97.00 0.00 32.00 0.00 96.00 32.00 0.00 32.00 33.00 32.00 -33.00 64.00 65.00 32.00 -32.00 0.00 -33.00 33.00 33.00 32.00 64.00 32.00 0.00 64.00 -129.00 32.00 65.00 65.00 -33.00 64.00 65.00 32.00 0.00 32.00 0.00 -64.00 64.00 0.00 32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 65.00 0.00 32.00 32.00 32.00 0.00 96.00 -128.00 -32.00 -33.00 32.00 0.00 32.00 33.00 65.00 32.00 32.00 -32.00 32.00 0.00 32.00 -33.00 64.00 -32.00 65.00 0.00 32.00 32.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 0.00 65.00 32.00 32.00 0.00 32.00 0.00 -32.00 64.00 32.00 0.00 0.00 97.00 32.00 0.00 32.00 0.00 -32.00 -65.00 0.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -32.00 33.00 32.00 64.00 -32.00 32.00 64.00 32.00 -32.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 65.00 0.00 -33.00 64.00 -32.00 96.00 65.00 33.00 -33.00 64.00 0.00 32.00 0.00 32.00 65.00 32.00 -32.00 33.00 0.00 0.00 64.00 32.00 32.00 32.00 0.00 32.00 32.00 -32.00 32.00 64.00 65.00 65.00 64.00 0.00 32.00 0.00 32.00 -33.00 32.00 -32.00 0.00 0.00 65.00 -32.00 32.00 -64.00 32.00 -32.00 0.00 0.00 32.00 32.00 0.00 -32.00 32.00 -97.00 0.00 -96.00 97.00 32.00 32.00 -65.00 0.00 -32.00 64.00 0.00 32.00 32.00 32.00 -32.00 33.00 65.00 0.00 0.00 32.00 0.00 32.00 -65.00 0.00 -64.00 129.00 -64.00 32.00 0.00 -32.00 -65.00 0.00 -96.00 64.00 0.00 32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -225.00 96.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 64.00 -32.00 33.00 -32.00 0.00 -96.00 32.00 0.00 -32.00 -33.00 0.00 0.00 -33.00 -32.00 0.00 32.00 -64.00 -32.00 -32.00 -64.00 0.00 -32.00 0.00 -64.00 64.00 -65.00 32.00 -64.00 65.00 -64.00 32.00 -97.00 -64.00 -96.00 64.00 -33.00 0.00 -128.00 64.00 -32.00 32.00 0.00 33.00 -97.00 64.00 -64.00 -64.00 -64.00 96.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -97.00 64.00 -64.00 65.00 32.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 0.00 32.00 0.00 32.00 -32.00 33.00 32.00 32.00 -32.00 64.00 32.00 0.00 0.00 32.00 -32.00 32.00 0.00 65.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 33.00 -32.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 -32.00 64.00 32.00 0.00 -32.00 32.00 32.00 32.00 -64.00 33.00 32.00 32.00 -65.00 32.00 33.00 64.00 -33.00 32.00 -64.00 0.00 -32.00 33.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -65.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 65.00 -32.00 32.00 32.00 32.00 32.00 0.00 0.00 96.00 97.00 0.00 96.00 33.00 -32.00 32.00 64.00 32.00 0.00 32.00 33.00 32.00 -33.00 32.00 97.00 -32.00 0.00 32.00 96.00 32.00 0.00 33.00 32.00 64.00 0.00 32.00 33.00 64.00 -33.00 0.00 97.00 33.00 64.00 64.00 32.00 0.00 33.00 32.00 32.00 32.00 -32.00 0.00 -65.00 0.00 -161.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -64.00 0.00 -33.00 33.00 -64.00 0.00 -32.00 0.00 32.00 -33.00 32.00 -64.00 -96.00 -32.00 -64.00 0.00 -97.00 64.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 -32.00 -65.00 -96.00 0.00 -33.00 65.00 -32.00 32.00 -96.00 0.00 -32.00 32.00 0.00 64.00 -32.00 32.00 -33.00 0.00 -32.00 33.00 0.00 32.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -65.00 64.00 -32.00 32.00 -96.00 0.00 -64.00 64.00 0.00 -32.00 -33.00 -32.00 -32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 0.00 0.00 33.00 0.00 64.00 32.00 32.00 32.00 32.00 65.00 -64.00 32.00 0.00 0.00 64.00 64.00 0.00 -64.00 0.00 -64.00 0.00 -33.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 97.00 0.00 32.00 32.00 0.00 -64.00 64.00 0.00 65.00 -32.00 -32.00 0.00 -97.00 -65.00 0.00 -32.00 32.00 32.00 -64.00 -32.00 0.00 -32.00 32.00 -64.00 32.00 96.00 32.00 -32.00 33.00 32.00 0.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -64.00 -33.00 -33.00 33.00 33.00 -65.00 -65.00 0.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 0.00 32.00 64.00 33.00 -32.00 64.00 32.00 0.00 0.00 64.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -96.00 32.00 -65.00 64.00 0.00 32.00 65.00 32.00 0.00 -32.00 0.00 32.00 0.00 65.00 32.00 0.00 -32.00 0.00 32.00 32.00 0.00 32.00 -32.00 0.00 -97.00 0.00 -32.00 64.00 -64.00 0.00 32.00 0.00 -32.00 -32.00 -32.00 64.00 0.00 -64.00 -65.00 0.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -97.00 32.00 -96.00 64.00 -97.00 129.00 0.00 32.00 -64.00 32.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -64.00 32.00 -64.00 97.00 0.00 161.00 32.00 96.00 32.00 96.00 32.00 0.00 65.00 0.00 0.00 65.00 -65.00 64.00 65.00 129.00 0.00 96.00 0.00 64.00 -33.00 -32.00 0.00 32.00 0.00 33.00 -64.00 32.00 -64.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00 -97.00 -32.00 -64.00 64.00 -32.00 0.00 -33.00 32.00 -32.00 0.00 0.00 32.00 -64.00 0.00 0.00 -64.00 -96.00 0.00 0.00 -64.00 -33.00 -33.00 -64.00 0.00 0.00 -64.00 -32.00 -32.00 -129.00 0.00 -32.00 32.00 -96.00 32.00 -32.00 0.00 -33.00 -32.00 33.00 -64.00 -65.00 0.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 -65.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -129.00 0.00 0.00 -32.00 -32.00 0.00 -160.00 32.00 0.00 -32.00 -65.00 -32.00 -161.00 0.00 -257.00 32.00 -353.00 97.00 -65.00 32.00 -32.00 64.00 -64.00 -32.00 -97.00 64.00 -32.00 33.00 0.00 32.00 -32.00 32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 -33.00 -97.00 33.00 -193.00 96.00 -64.00 32.00 0.00 65.00 -32.00 0.00 -32.00 32.00 96.00 -32.00 -32.00 32.00 -32.00 64.00 0.00 64.00 -64.00 32.00 0.00 33.00 32.00 0.00 -32.00 32.00 -33.00 0.00 -96.00 64.00 0.00 64.00 32.00 32.00 32.00 -32.00 0.00 32.00 32.00 0.00 -32.00 33.00 -32.00 32.00 -64.00 32.00 0.00 64.00 0.00 65.00 32.00 0.00 -64.00 0.00 -33.00 32.00 0.00 32.00 -32.00 -32.00 32.00 -32.00 -64.00 0.00 -161.00 0.00 -64.00 64.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 65.00 -32.00 64.00 0.00 -32.00 32.00 -64.00 -32.00 -33.00 -33.00 -32.00 -32.00 32.00 -32.00 33.00 0.00 -33.00 -32.00 0.00 -32.00 0.00 0.00 -96.00 64.00 -32.00 -32.00 -65.00 -32.00 -32.00 -97.00 -32.00 -64.00 0.00 -64.00 0.00 0.00 32.00 0.00 32.00 -33.00 -64.00 -32.00 0.00 -32.00 32.00 32.00 0.00 32.00 65.00 0.00 32.00 -64.00 0.00 0.00 32.00 0.00 32.00 32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 65.00 -32.00 0.00 32.00 -65.00 -96.00 -32.00 -193.00 32.00 -193.00 97.00 -515.00 225.00 -482.00 289.00 -386.00 193.00 -64.00 64.00 -97.00 33.00 -321.00 225.00 -225.00 128.00 -290.00 258.00 0.00 32.00 0.00 96.00 -32.00 32.00 -64.00 65.00 32.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 0.00 33.00 -32.00 -33.00 -32.00 33.00 0.00 32.00 -32.00 0.00 -97.00 32.00 -128.00 64.00 -65.00 64.00 -225.00 161.00 -193.00 129.00 -32.00 32.00 0.00 64.00 -64.00 32.00 -129.00 97.00 0.00 32.00 -128.00 32.00 -675.00 418.00 -33.00 0.00 0.00 32.00 -160.00 97.00 -33.00 64.00 -225.00 64.00 -193.00 129.00 -418.00 257.00 -160.00 129.00 -579.00 450.00 -322.00 322.00 -160.00 192.00 -32.00 97.00 -33.00 96.00 -96.00 0.00 0.00 33.00 32.00 96.00 32.00 32.00 0.00 32.00 0.00 65.00 -64.00 64.00 -32.00 129.00 0.00 32.00 32.00 0.00 0.00 32.00 0.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -97.00 64.00 -129.00 129.00 -257.00 193.00 -321.00 353.00 -32.00 0.00 0.00 -64.00 64.00 -64.00 289.00 -257.00 -32.00 -33.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -64.00 -32.00 0.00 32.00 0.00 33.00 0.00 32.00 -65.00 0.00 -32.00 32.00 -32.00 -32.00 -64.00 32.00 -65.00 32.00 -161.00 -129.00 -32.00 -32.00 -32.00 -64.00 -64.00 0.00 -64.00 -32.00 -33.00 -65.00 97.00 -32.00 32.00 -64.00 0.00 -64.00 32.00 0.00 32.00 -32.00 -64.00 -33.00 -64.00 -32.00 0.00 -32.00 -65.00 -64.00 0.00 -32.00 -64.00 -97.00 0.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 -97.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -32.00 0.00 -33.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -33.00 -32.00 -32.00 -64.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 33.00 0.00 64.00 -33.00 0.00 -32.00 -64.00 -32.00 0.00 0.00 32.00 -64.00 64.00 -32.00 64.00 -65.00 65.00 0.00 -65.00 32.00 0.00 0.00 -96.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 0.00 -32.00 -97.00 -97.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 -96.00 -32.00 -33.00 32.00 -64.00 0.00 -193.00 128.00 -32.00 129.00 0.00 64.00 -64.00 0.00 -33.00 33.00 -64.00 96.00 -32.00 32.00 -32.00 64.00 -32.00 0.00 -65.00 -64.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 -33.00 0.00 -32.00 -64.00 0.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 -33.00 0.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 33.00 0.00 0.00 -32.00 64.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 -32.00 32.00 0.00 0.00 32.00 32.00 -64.00 -32.00 0.00 32.00 -33.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -96.00 0.00 32.00 -32.00 -32.00 -65.00 32.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 -64.00 97.00 -65.00 32.00 -32.00 64.00 -32.00 0.00 -64.00 32.00 0.00 0.00 -65.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 32.00 -64.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 0.00 -33.00 -64.00 0.00 -32.00 -64.00 0.00 -32.00 -32.00 -32.00 -32.00 -65.00 -32.00 33.00 -33.00 -33.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -64.00 65.00 -65.00 0.00 0.00 32.00 -64.00 32.00 -32.00 64.00 -64.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -33.00 -65.00 -32.00 0.00 32.00 0.00 33.00 0.00 64.00 -32.00 -32.00 -32.00 -32.00 -129.00 32.00 -64.00 32.00 -32.00 0.00 0.00 -64.00 -32.00 0.00 -32.00 64.00 -65.00 32.00 -32.00 -96.00 -64.00 -33.00 -65.00 0.00 -32.00 -64.00 -32.00 -32.00 -64.00 64.00 -64.00 -64.00 -33.00 32.00 65.00 64.00 -32.00 0.00 -65.00 -32.00 -161.00 32.00 -32.00 0.00 0.00 33.00 -32.00 0.00 -32.00 -33.00 -32.00 0.00 -64.00 0.00 -65.00 65.00 -32.00 -65.00 -64.00 0.00 0.00 -32.00 -64.00 0.00 0.00 -64.00 -33.00 0.00 -64.00 32.00 32.00 -96.00 32.00 0.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 -64.00 -32.00 -33.00 0.00 -32.00 32.00 32.00 32.00 33.00 -32.00 -33.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 -65.00 -32.00 0.00 0.00 33.00 -64.00 0.00 0.00 -33.00 -32.00 0.00 -32.00 65.00 -65.00 -32.00 -32.00 -33.00 -128.00 0.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 33.00 0.00 32.00 -64.00 0.00 0.00 64.00 -129.00 0.00 -32.00 0.00 -64.00 -32.00 -33.00 0.00 -64.00 0.00 -96.00 -97.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 32.00 -64.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 32.00 -97.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 -64.00 -32.00 32.00 0.00 0.00 -33.00 -32.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 33.00 32.00 32.00 -65.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 -65.00 32.00 0.00 96.00 -32.00 0.00 -64.00 32.00 -32.00 33.00 -32.00 32.00 0.00 0.00 -32.00 0.00 -33.00 -32.00 0.00 32.00 -64.00 -32.00 -32.00 64.00 -64.00 32.00 -65.00 0.00 -32.00 -32.00 0.00 -32.00 65.00 -32.00 -33.00 0.00 -32.00 64.00 -96.00 64.00 -97.00 32.00 0.00 97.00 -96.00 -32.00 -32.00 -65.00 0.00 -32.00 -32.00 -96.00 0.00 0.00 -65.00 -32.00 0.00 -65.00 -64.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -33.00 -33.00 -32.00 33.00 -64.00 -33.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 -64.00 0.00 0.00 -33.00 -129.00 -96.00 -32.00 -32.00 65.00 -32.00 0.00 -65.00 0.00 -96.00 0.00 -64.00 64.00 -33.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -97.00 -64.00 0.00 -32.00 -32.00 -33.00 -32.00 33.00 -32.00 -33.00 -33.00 33.00 0.00 -33.00 -96.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 -96.00 -32.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 33.00 -33.00 -33.00 0.00 0.00 -32.00 -64.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 0.00 0.00 -33.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 0.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 -64.00 -32.00 -32.00 0.00 0.00 -32.00 64.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -33.00 -32.00 33.00 -33.00 -65.00 65.00 0.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -65.00 32.00 0.00 32.00 -64.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -33.00 -32.00 -32.00 -33.00 0.00 -96.00 -64.00 64.00 -32.00 -64.00 -32.00 -32.00 0.00 -64.00 -32.00 -33.00 32.00 0.00 32.00 -32.00 -64.00 -32.00 32.00 0.00 64.00 32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 64.00 -32.00 65.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 -64.00 -33.00 -64.00 0.00 -33.00 33.00 -32.00 -65.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 65.00 32.00 32.00 0.00 -32.00 -65.00 0.00 -32.00 32.00 -64.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -32.00 -33.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -65.00 -33.00 33.00 -32.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 65.00 -64.00 0.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -64.00 32.00 -32.00 -97.00 -64.00 -32.00 -32.00 32.00 -33.00 32.00 0.00 -32.00 -64.00 32.00 -32.00 0.00 -64.00 65.00 32.00 0.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 0.00 32.00 32.00 32.00 0.00 -32.00 -32.00 32.00 -33.00 -64.00 0.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 -32.00 97.00 -33.00 32.00 33.00 32.00 -33.00 -32.00 -32.00 0.00 -32.00 -97.00 -64.00 -96.00 0.00 0.00 -32.00 0.00 -65.00 32.00 33.00 32.00 -65.00 0.00 -64.00 -32.00 -64.00 0.00 -97.00 -64.00 -128.00 -32.00 -33.00 32.00 -64.00 -32.00 0.00 -33.00 -32.00 0.00 -32.00 0.00 -65.00 -96.00 -160.00 -32.00 -32.00 32.00 -33.00 -96.00 0.00 -33.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -64.00 -64.00 -32.00 -32.00 -32.00 64.00 -97.00 -32.00 -32.00 -32.00 -32.00 -65.00 0.00 -64.00 32.00 -64.00 -32.00 -65.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -97.00 32.00 -64.00 0.00 -32.00 -32.00 -33.00 -32.00 -32.00 32.00 -64.00 -64.00 -64.00 0.00 0.00 -97.00 0.00 -32.00 32.00 -64.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -97.00 -65.00 -64.00 -32.00 -96.00 0.00 -97.00 -96.00 0.00 -33.00 32.00 -32.00 33.00 -96.00 -33.00 -64.00 0.00 -33.00 -96.00 -64.00 -32.00 32.00 0.00 32.00 32.00 65.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -33.00 -97.00 -64.00 0.00 -96.00 -32.00 0.00 32.00 -97.00 97.00 -64.00 -32.00 -65.00 0.00 -64.00 96.00 -32.00 0.00 -64.00 0.00 -97.00 -32.00 -64.00 64.00 -96.00 32.00 -97.00 0.00 -64.00 -32.00 -65.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -129.00 -64.00 -64.00 32.00 -64.00 0.00 -32.00 64.00 -65.00 0.00 -96.00 0.00 -32.00 -64.00 -64.00 -64.00 0.00 -32.00 -97.00 -65.00 -64.00 32.00 -65.00 0.00 -32.00 33.00 0.00 96.00 -32.00 0.00 -32.00 64.00 -97.00 -32.00 -64.00 32.00 -96.00 -64.00 -32.00 0.00 -65.00 64.00 -64.00 -32.00 -32.00 -32.00 -32.00 -64.00 -32.00 -32.00 -65.00 -33.00 -128.00 -32.00 -65.00 65.00 -64.00 32.00 -64.00 -32.00 -97.00 -33.00 -32.00 -64.00 -64.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 32.00 -128.00 225.00 -97.00 33.00 -32.00 0.00 -32.00 0.00 -32.00 -33.00 -32.00 -32.00 -97.00 0.00 -96.00 0.00 -32.00 -32.00 32.00 -193.00 0.00 -32.00 0.00 -32.00 -97.00 -32.00 -32.00 -97.00 -32.00 -32.00 -64.00 -128.00 -193.00 -129.00 -32.00 -32.00 -129.00 0.00 -32.00 0.00 -64.00 32.00 -33.00 0.00 -64.00 -97.00 -96.00 0.00 -65.00 33.00 -64.00 0.00 -257.00 -129.00 -257.00 0.00 -193.00 -64.00 -97.00 -65.00 -64.00 -32.00 -97.00 -32.00 -32.00 0.00 -96.00 -64.00 -32.00 -129.00 -33.00 0.00 -64.00 -64.00 -64.00 -32.00 -97.00 32.00 -32.00 0.00 -128.00 -32.00 -65.00 0.00 -128.00 -32.00 -65.00 32.00 -64.00 0.00 -129.00 -65.00 -96.00 0.00 -96.00 129.00 -33.00 0.00 -128.00 64.00 -65.00 0.00 -32.00 -32.00 -128.00 32.00 -32.00 33.00 -65.00 -33.00 -96.00 -32.00 -129.00 -96.00 -64.00 -32.00 -161.00 0.00 -64.00 0.00 -97.00 64.00 -96.00 0.00 -32.00 -64.00 -32.00 -129.00 0.00 -32.00 -65.00 0.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 -354.00 96.00 -32.00 0.00 -97.00 -32.00 -64.00 -64.00 -32.00 -33.00 -32.00 -32.00 -193.00 -161.00 -97.00 0.00 -160.00 -96.00 -129.00 -32.00 -32.00 0.00 -129.00 0.00 -161.00 -97.00 -64.00 -32.00 -32.00 0.00 -64.00 32.00 -32.00 33.00 -65.00 96.00 -32.00 96.00 0.00 33.00 -32.00 128.00 0.00 32.00 32.00 193.00 -129.00 32.00 -64.00 33.00 -129.00 64.00 -32.00 0.00 0.00 -32.00 0.00 -129.00 -64.00 -96.00 -32.00 -32.00 -129.00 32.00 -64.00 32.00 -64.00 64.00 -97.00 -32.00 -225.00 0.00 -161.00 -64.00 -64.00 -32.00 -32.00 0.00 -32.00 -33.00 -65.00 0.00 0.00 33.00 -64.00 0.00 -161.00 96.00 -32.00 0.00 -96.00 -64.00 -65.00 -32.00 -32.00 0.00 -128.00 -129.00 -65.00 -97.00 -32.00 0.00 -64.00 33.00 -289.00 193.00 -193.00 64.00 -97.00 0.00 -128.00 -64.00 -129.00 -33.00 -32.00 -32.00 -32.00 0.00 -97.00 0.00 -161.00 65.00 -64.00 -33.00 -225.00 -160.00 -96.00 -33.00 -225.00 33.00 -33.00 32.00 -64.00 32.00 -64.00 32.00 0.00 32.00 -65.00 32.00 -64.00 65.00 -64.00 64.00 -129.00 32.00 -64.00 97.00 -32.00 -97.00 -32.00 -96.00zm39098.00 3826.00l0.00 32.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 0.00 32.00m-804.00 1672.00l0.00 -32.00 0.00 32.00 32.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00zm-4727.00 418.00l0.00 -32.00 0.00 32.00zm3827.00 -1447.00l32.00 0.00 -32.00 0.00zm836.00 -64.00l-32.00 0.00 32.00 -32.00 0.00 32.00 -32.00 0.00 32.00 0.00zm643.00 -804.00l0.00 -32.00 0.00 32.00zm-1929.00 1125.00l0.00 -32.00 0.00 32.00zm64.00 1640.00l0.00 -32.00 0.00 32.00zm1833.00 -2444.00l32.00 0.00 0.00 32.00 -32.00 0.00 0.00 -32.00zm-1962.00 2444.00l0.00 -32.00 0.00 32.00zm225.00 -321.00l-32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 97.00 32.00 -33.00 32.00 33.00 32.00 32.00 0.00 64.00 65.00 32.00 -65.00 32.00 32.00 32.00 0.00 33.00 33.00 -33.00 32.00 -32.00 -32.00 0.00 32.00 0.00 64.00 0.00 32.00 0.00 32.00 0.00 32.00 32.00 0.00 -32.00 33.00 0.00 32.00 -64.00 64.00 -96.00 -32.00 -65.00 -97.00 32.00 -64.00 -64.00 -96.00 -64.00 32.00 0.00 -32.00 -32.00 32.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -64.00 -32.00 -33.00 64.00 -192.00 32.00 -33.00 0.00 -96.00 32.00 -96.00 -32.00 -65.00 -96.00 0.00 -129.00 0.00 -32.00 32.00 0.00 65.00 -64.00 32.00 0.00 0.00 -32.00 64.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 0.00 161.00 -160.00 64.00 -33.00 0.00 -128.00 32.00 0.00 0.00 -32.00 33.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -96.00 0.00 -65.00 64.00 -32.00 64.00 32.00 33.00 33.00 96.00 0.00 0.00 32.00 64.00 0.00 33.00 32.00 32.00 0.00 32.00 32.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 65.00 32.00 0.00 -32.00 32.00 0.00 64.00 -32.00 64.00 32.00 0.00 0.00 33.00 -64.00 32.00 32.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 32.00 0.00 -32.00 32.00 -96.00 -32.00 -64.00 0.00 -65.00 64.00 32.00 0.00 0.00 33.00zm1158.00 -1512.00l32.00 0.00 -32.00 0.00zm-933.00 1319.00l0.00 -33.00 33.00 33.00 -33.00 0.00zm-8295.00 2700.00l32.00 0.00 -32.00 0.00zm9839.00 -4855.00l32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 32.00 0.00zm-193.00 65.00l-32.00 0.00 0.00 -33.00 32.00 0.00 0.00 33.00zm-3666.00 1961.00l33.00 0.00 -33.00 0.00zm901.00 322.00l0.00 -33.00 32.00 0.00 0.00 -32.00 0.00 32.00 0.00 33.00 -32.00 0.00zm-6560.00 2540.00l33.00 0.00 0.00 32.00 -33.00 0.00 0.00 -32.00zm33.00 96.00l0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00zm9678.00 -4759.00l0.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 0.00 32.00 0.00 32.00 -32.00 -32.00zm-4084.00 1865.00l0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00zm2026.00 -997.00l32.00 -32.00 32.00 0.00 0.00 32.00 -64.00 0.00zm-2315.00 1287.00l0.00 -32.00 32.00 0.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 0.00 0.00 -32.00zm2958.00 -1447.00l32.00 -32.00 32.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -32.00zm0.00 1157.00l64.00 -32.00 32.00 -32.00 0.00 32.00 129.00 64.00 -32.00 33.00 -64.00 -33.00 -65.00 65.00 -32.00 -65.00 -32.00 -32.00zm482.00 -1318.00l0.00 -32.00 97.00 32.00 0.00 32.00 -97.00 32.00 -96.00 97.00 0.00 -65.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 32.00 32.00 32.00 32.00 0.00 32.00 -32.00z\"\n          },\n          rj: {\n            name: \"RJ\",\n            path: \"M143583.00 140702.00l32.00 -32.00 0.00 -32.00 0.00 -32.00 65.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 32.00 -33.00 64.00 0.00 33.00 -32.00 -33.00 -64.00 65.00 -32.00 -32.00 -32.00 64.00 -33.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -64.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -64.00 -32.00 -32.00 32.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 0.00 65.00 0.00 32.00 0.00 32.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 64.00 -65.00 97.00 -64.00 32.00 -32.00 32.00 32.00 32.00 0.00 33.00 0.00 32.00 0.00 64.00 -96.00 64.00 64.00 97.00 -64.00 0.00 -33.00 32.00 -32.00 128.00 -64.00 33.00 0.00 96.00 -64.00 97.00 64.00 64.00 -32.00 64.00 -65.00 65.00 -32.00 64.00 -64.00 32.00 0.00 64.00 0.00 32.00 32.00 -32.00 64.00 32.00 0.00 0.00 33.00 33.00 0.00 0.00 32.00 96.00 -32.00 32.00 0.00 32.00 -33.00 32.00 -64.00 33.00 -32.00 32.00 0.00 64.00 0.00 0.00 32.00 32.00 0.00 32.00 0.00 65.00 0.00 225.00 -96.00 32.00 32.00 -32.00 32.00 32.00 0.00 0.00 -32.00 96.00 -64.00 65.00 0.00 0.00 32.00 64.00 -32.00 64.00 -129.00 65.00 0.00 0.00 -32.00 0.00 -32.00 -65.00 0.00 32.00 -33.00 -32.00 -32.00 0.00 -32.00 32.00 -64.00 65.00 0.00 -32.00 -32.00 96.00 -97.00 97.00 0.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 32.00 0.00 64.00 -32.00 32.00 -32.00 0.00 -65.00 32.00 0.00 33.00 -32.00 0.00 -32.00 0.00 -32.00 -65.00 -64.00 -64.00 -65.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -33.00 0.00 -32.00 32.00 -32.00 -65.00 -32.00 0.00 -64.00 0.00 -33.00 33.00 -96.00 -65.00 -64.00 32.00 0.00 33.00 -32.00 -65.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 -64.00 -64.00 32.00 -33.00 -32.00 0.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 32.00 65.00 -32.00 0.00 -32.00 0.00 0.00 -97.00 -32.00 0.00 32.00 -64.00 -32.00 0.00 -32.00 0.00 -65.00 -32.00 -32.00 0.00 0.00 32.00 -64.00 32.00 0.00 32.00 32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -65.00 0.00 -64.00 32.00 -32.00 33.00 -32.00 0.00 -32.00 32.00 -65.00 -32.00 -32.00 -33.00 -32.00 0.00 32.00 33.00 -96.00 128.00 -32.00 0.00 -32.00 -32.00 -65.00 0.00 -32.00 0.00 32.00 32.00 -32.00 0.00 0.00 -32.00 64.00 -64.00 -32.00 0.00 -32.00 0.00 -64.00 -65.00 -65.00 33.00 -32.00 -65.00 -64.00 129.00 -32.00 0.00 -32.00 -64.00 -33.00 -33.00 0.00 33.00 -32.00 32.00 -64.00 -65.00 -32.00 33.00 -32.00 -33.00 -32.00 0.00 0.00 -96.00 0.00 -32.00 32.00 -97.00 -32.00 -32.00 -33.00 32.00 -32.00 -32.00 -96.00 32.00 0.00 -64.00 32.00 -32.00 -32.00 -64.00 -32.00 -33.00 -32.00 0.00 -33.00 -32.00 -64.00 0.00 0.00 -64.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 32.00 -65.00 0.00 -32.00 -32.00 -128.00 -65.00 -65.00 -64.00 -64.00 -64.00 0.00 -65.00 -32.00 -128.00 0.00 32.00 -65.00 32.00 -32.00 32.00 0.00 32.00 -32.00 33.00 0.00 64.00 -32.00 64.00 0.00 65.00 -64.00 32.00 0.00 96.00 64.00 65.00 -32.00 64.00 32.00 64.00 0.00 32.00 32.00 0.00 -32.00 65.00 -64.00 0.00 -32.00 96.00 -33.00 0.00 -64.00 32.00 -32.00 97.00 -32.00 32.00 0.00 32.00 32.00 64.00 -32.00 32.00 32.00 97.00 -32.00 0.00 32.00 64.00 0.00 0.00 -32.00 65.00 -32.00 0.00 -33.00 96.00 -32.00 129.00 -128.00 32.00 32.00 0.00 -32.00 0.00 -32.00 32.00 -65.00 32.00 0.00 32.00 0.00 32.00 -32.00 65.00 32.00 32.00 0.00 96.00 0.00 0.00 65.00 32.00 0.00 33.00 0.00 32.00 -33.00 64.00 -64.00 32.00 32.00 65.00 0.00 64.00 0.00 32.00 32.00 32.00 -32.00 64.00 0.00 33.00 -64.00 0.00 32.00 32.00 -32.00 32.00 0.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 129.00 32.00 -33.00 33.00 33.00 32.00 -33.00 64.00 -32.00 0.00 -32.00 64.00 -32.00 0.00 32.00 33.00 0.00 64.00 -32.00 32.00 -64.00 32.00 0.00 32.00 0.00 33.00 0.00 32.00 -33.00 32.00 -64.00 32.00 32.00 32.00 -32.00 32.00 0.00 32.00 0.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 33.00 32.00 64.00 -32.00 0.00 -33.00 0.00 -32.00 64.00 32.00 0.00 33.00 32.00 -33.00 32.00 0.00 0.00 -64.00 33.00 0.00 128.00 -32.00 0.00 -32.00 97.00 0.00 64.00 64.00 32.00 -32.00 32.00 0.00 32.00 -32.00 33.00 0.00 0.00 -32.00 96.00 -32.00 32.00 0.00 65.00 -33.00 192.00 -64.00 33.00 -32.00 64.00 0.00 0.00 -64.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 -33.00 65.00 33.00 64.00 -33.00 64.00 -32.00 32.00 0.00 33.00 0.00 128.00 -96.00 32.00 0.00 33.00 0.00 0.00 32.00 32.00 32.00 -32.00 0.00 64.00 32.00 0.00 32.00 32.00 0.00 32.00 33.00 64.00 -97.00 65.00 0.00 32.00 0.00 32.00 -32.00 64.00 0.00 33.00 64.00 0.00 32.00 32.00 -32.00 0.00 -64.00 64.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 65.00 64.00 32.00 -32.00 0.00 64.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -64.00 32.00 0.00 33.00 -33.00 0.00 97.00 64.00 32.00 32.00 32.00 32.00 -32.00 161.00 -32.00 32.00 -64.00 32.00 0.00 32.00 32.00 0.00 32.00 65.00 0.00 64.00 0.00 64.00 0.00 129.00 -64.00 32.00 -33.00 64.00 0.00 129.00 -96.00 96.00 -64.00 0.00 -32.00 65.00 -33.00 32.00 0.00 32.00 33.00 64.00 0.00 32.00 -33.00 33.00 33.00 64.00 32.00 96.00 -32.00 65.00 0.00 32.00 -33.00 32.00 33.00 32.00 -33.00 32.00 33.00 0.00 32.00 32.00 32.00 33.00 0.00 32.00 32.00 32.00 0.00 32.00 -32.00 0.00 32.00 32.00 32.00 129.00 -96.00 32.00 0.00 0.00 32.00 64.00 32.00 32.00 0.00 65.00 0.00 0.00 64.00 0.00 65.00 -97.00 64.00 0.00 32.00 32.00 97.00 33.00 64.00 64.00 -32.00 0.00 -65.00 96.00 -32.00 65.00 0.00 64.00 0.00 0.00 32.00 129.00 -32.00 64.00 -96.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 64.00 -32.00 97.00 -32.00 32.00 0.00 128.00 -96.00 33.00 0.00 64.00 -33.00 193.00 -64.00 128.00 -128.00 0.00 -33.00 161.00 -64.00 257.00 -64.00 129.00 -65.00 32.00 -32.00 193.00 -96.00 193.00 -65.00 32.00 -32.00 97.00 -32.00 128.00 -32.00 65.00 -32.00 32.00 0.00 32.00 0.00 64.00 -32.00 0.00 -65.00 225.00 -96.00 322.00 -129.00 32.00 -32.00 322.00 -96.00 32.00 -65.00 32.00 0.00 96.00 -32.00 97.00 0.00 128.00 -32.00 0.00 -32.00 193.00 -64.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -32.00 -32.00 32.00 -32.00 -64.00 32.00 0.00 -32.00 -33.00 -65.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -65.00 0.00 -32.00 0.00 -32.00 -32.00 64.00 -64.00 -32.00 0.00 -32.00 -33.00 96.00 -128.00 33.00 -32.00 96.00 -65.00 -32.00 -32.00 0.00 -32.00 96.00 -32.00 0.00 -32.00 32.00 -33.00 0.00 -32.00 33.00 -32.00 64.00 0.00 32.00 -96.00 64.00 -32.00 33.00 -33.00 -65.00 -96.00 0.00 -32.00 -96.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -97.00 32.00 -32.00 32.00 32.00 65.00 0.00 32.00 -32.00 32.00 -32.00 -64.00 -32.00 -32.00 0.00 64.00 -32.00 0.00 -32.00 64.00 -32.00 -32.00 -65.00 32.00 -32.00 -32.00 -32.00 64.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -33.00 32.00 -64.00 0.00 -128.00 32.00 -33.00 33.00 -32.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -65.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 -64.00 32.00 -32.00 -64.00 -129.00 32.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -33.00 32.00 -32.00 32.00 -64.00 33.00 0.00 0.00 -64.00 0.00 -65.00 128.00 0.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 65.00 0.00 0.00 -32.00 96.00 -97.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 32.00 65.00 0.00 0.00 -32.00 -33.00 -32.00 -64.00 -65.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -33.00 0.00 -64.00 -64.00 0.00 -32.00 -64.00 -33.00 0.00 -32.00 64.00 -64.00 64.00 -32.00 33.00 32.00 32.00 0.00 0.00 -32.00 32.00 -32.00 64.00 -65.00 32.00 33.00 97.00 0.00 96.00 -33.00 32.00 -32.00 65.00 0.00 96.00 32.00 32.00 -32.00 97.00 32.00 0.00 -64.00 32.00 -32.00 0.00 32.00 32.00 -64.00 -32.00 -32.00 32.00 -33.00 0.00 -64.00 64.00 -32.00 -32.00 -32.00 32.00 -32.00 65.00 -32.00 32.00 -33.00 32.00 -32.00 -64.00 -64.00 64.00 -129.00 -32.00 -32.00 64.00 0.00 32.00 0.00 33.00 0.00 32.00 -32.00 64.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 0.00 65.00 -33.00 32.00 65.00 64.00 32.00 32.00 32.00 0.00 32.00 65.00 32.00 32.00 -32.00 -32.00 65.00 64.00 0.00 32.00 -33.00 96.00 0.00 33.00 0.00 0.00 33.00 64.00 0.00 0.00 64.00 32.00 -32.00 32.00 32.00 0.00 32.00 0.00 32.00 -32.00 97.00 32.00 64.00 0.00 32.00 65.00 -32.00 64.00 32.00 -32.00 0.00 -32.00 96.00 0.00 33.00 32.00 0.00 -32.00 96.00 -33.00 32.00 -32.00 0.00 32.00 97.00 65.00 32.00 0.00 128.00 32.00 0.00 0.00 65.00 -32.00 0.00 0.00 64.00 -32.00 32.00 64.00 32.00 -32.00 33.00 -32.00 0.00 0.00 32.00 32.00 64.00 0.00 64.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 0.00 64.00 33.00 0.00 0.00 33.00 32.00 0.00 -65.00 128.00 0.00 32.00 33.00 0.00 32.00 0.00 64.00 0.00 0.00 33.00 -64.00 32.00 0.00 32.00 64.00 0.00 0.00 -32.00 64.00 0.00 32.00 32.00 33.00 0.00 0.00 32.00 32.00 -32.00 32.00 0.00 0.00 32.00 64.00 32.00 0.00 32.00 32.00 0.00 33.00 0.00 32.00 0.00 96.00 65.00 97.00 -33.00 32.00 65.00 64.00 32.00 0.00 32.00 32.00 32.00 32.00 -64.00 33.00 64.00 96.00 -32.00 64.00 64.00 0.00 -64.00 32.00 0.00 33.00 32.00 64.00 0.00 32.00 0.00 0.00 65.00 64.00 32.00 65.00 32.00 32.00 32.00 64.00 0.00 64.00 -64.00 33.00 0.00 0.00 -32.00 32.00 32.00 32.00 -32.00 32.00 32.00 32.00 0.00 32.00 0.00 0.00 -32.00 32.00 32.00 33.00 0.00 128.00 32.00 32.00 0.00 33.00 32.00 32.00 0.00 0.00 32.00 32.00 -32.00 64.00 96.00 32.00 0.00 32.00 0.00 33.00 33.00 0.00 -33.00 32.00 0.00 32.00 0.00 32.00 -64.00 64.00 0.00 33.00 0.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 64.00 0.00 32.00 33.00 32.00 0.00 33.00 0.00 0.00 32.00 0.00 -32.00 32.00 0.00 0.00 -33.00 0.00 33.00 32.00 -33.00 -32.00 33.00 32.00 0.00 64.00 0.00 32.00 0.00 65.00 -33.00 32.00 -32.00 64.00 0.00 97.00 -32.00 32.00 -32.00 32.00 32.00 32.00 0.00 32.00 32.00 32.00 0.00 65.00 32.00 64.00 97.00 64.00 -32.00 65.00 0.00 32.00 0.00 32.00 96.00 0.00 65.00 32.00 32.00 32.00 0.00 32.00 -32.00 0.00 32.00 33.00 0.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 64.00 -32.00 129.00 32.00 96.00 -32.00 0.00 -65.00 161.00 -32.00 0.00 -64.00 32.00 -32.00 97.00 -97.00 128.00 -64.00 65.00 -32.00 32.00 -97.00 96.00 -32.00 129.00 0.00 161.00 97.00 193.00 32.00 64.00 64.00 32.00 64.00 0.00 33.00 32.00 0.00 -32.00 0.00 32.00 -65.00 354.00 0.00 193.00 97.00 354.00 128.00 578.00 33.00 161.00 0.00 129.00 -65.00 128.00 -32.00 65.00 -64.00 32.00 -193.00 96.00 -161.00 97.00 -225.00 160.00 -129.00 97.00 -225.00 96.00 -193.00 65.00 -225.00 96.00 -643.00 161.00 -257.00 64.00 -257.00 97.00 -193.00 96.00 -129.00 32.00 -96.00 65.00 -322.00 160.00 -225.00 193.00 -64.00 0.00 -64.00 65.00 -33.00 32.00 0.00 64.00 33.00 0.00 -33.00 32.00 33.00 32.00 -97.00 65.00 -32.00 0.00 -129.00 64.00 -96.00 96.00 -64.00 65.00 0.00 64.00 -33.00 96.00 -32.00 0.00 -32.00 33.00 -64.00 0.00 -64.00 32.00 -65.00 128.00 -32.00 33.00 -32.00 64.00 -32.00 0.00 -32.00 -64.00 -65.00 32.00 -64.00 64.00 -32.00 64.00 -64.00 193.00 -33.00 65.00 0.00 192.00 0.00 33.00 0.00 32.00 65.00 257.00 32.00 64.00 96.00 0.00 0.00 32.00 65.00 97.00 64.00 64.00 64.00 0.00 32.00 -32.00 -32.00 -32.00 65.00 0.00 0.00 -32.00 64.00 32.00 32.00 -32.00 0.00 -65.00 32.00 33.00 0.00 -33.00 32.00 33.00 -32.00 32.00 64.00 32.00 -32.00 32.00 -32.00 0.00 -32.00 64.00 0.00 -32.00 -32.00 0.00 32.00 64.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 -64.00 32.00 -32.00 65.00 0.00 32.00 0.00 32.00 0.00 32.00 -64.00 -32.00 0.00 32.00 -129.00 32.00 -64.00 129.00 0.00 64.00 0.00 32.00 32.00 -32.00 -32.00 32.00 0.00 33.00 -32.00 32.00 -33.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -64.00 64.00 -32.00 32.00 -33.00 97.00 0.00 64.00 33.00 64.00 32.00 0.00 0.00 32.00 32.00 33.00 32.00 -33.00 32.00 -32.00 0.00 32.00 -32.00 33.00 32.00 0.00 32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 32.00 0.00 0.00 32.00 0.00 65.00 -32.00 -65.00 -97.00 -32.00 33.00 -32.00 -65.00 -32.00 -160.00 -65.00 -997.00 -64.00 -354.00 -32.00 -289.00 0.00 -258.00 0.00 -64.00 32.00 -96.00 -32.00 -354.00 0.00 -225.00 0.00 -193.00 32.00 -32.00 32.00 0.00 65.00 -32.00 0.00 -32.00 0.00 -97.00 -33.00 -450.00 33.00 -289.00 32.00 -225.00 32.00 -161.00 -32.00 -193.00 0.00 -64.00 32.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 32.00 0.00 -65.00 -64.00 -128.00 -33.00 -129.00 0.00 -32.00 -32.00 0.00 -32.00 -96.00 0.00 64.00 -32.00 0.00 -64.00 32.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 32.00 0.00 33.00 -32.00 0.00 -64.00 -65.00 0.00 -32.00 -33.00 -32.00 0.00 -32.00 33.00 -32.00 -65.00 64.00 -32.00 0.00 -32.00 -64.00 -32.00 32.00 -32.00 32.00 0.00 32.00 32.00 32.00 -65.00 32.00 -64.00 65.00 -64.00 -32.00 -32.00 0.00 -32.00 64.00 -65.00 96.00 -64.00 -64.00 -32.00 -32.00 -32.00 64.00 -65.00 0.00 -32.00 32.00 -32.00 161.00 -96.00 0.00 -65.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 -33.00 -32.00 -32.00 0.00 -96.00 -32.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 32.00 65.00 -32.00 -33.00 -32.00 33.00 0.00 32.00 -32.00 32.00 -32.00 32.00 -65.00 -32.00 -32.00 -32.00 -64.00 32.00 0.00 32.00 -64.00 0.00 -161.00 32.00 0.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -32.00 33.00 -32.00 0.00 32.00 32.00 -64.00 32.00 -32.00 0.00 32.00 0.00 -96.00 64.00 0.00 32.00 -33.00 32.00 33.00 0.00 -65.00 97.00 0.00 32.00 32.00 32.00 33.00 -32.00 0.00 32.00 32.00 32.00 64.00 65.00 32.00 32.00 32.00 96.00 32.00 -32.00 -32.00 -96.00 -32.00 -32.00 0.00 -33.00 -64.00 0.00 -32.00 -64.00 32.00 -32.00 32.00 32.00 32.00 0.00 0.00 -32.00 64.00 -64.00 33.00 -33.00 32.00 0.00 64.00 65.00 64.00 0.00 33.00 0.00 -33.00 -32.00 33.00 -33.00 32.00 0.00 32.00 -32.00 0.00 32.00 32.00 -32.00 32.00 0.00 0.00 32.00 -32.00 33.00 -64.00 64.00 0.00 32.00 32.00 64.00 32.00 0.00 -32.00 33.00 -32.00 -33.00 -32.00 65.00 -33.00 -65.00 -64.00 0.00 -32.00 -32.00 -64.00 32.00 -65.00 65.00 32.00 32.00 33.00 -32.00 0.00 32.00 32.00 32.00 -32.00 -32.00 -33.00 0.00 0.00 32.00 33.00 32.00 96.00 0.00 -64.00 32.00 32.00 32.00 -32.00 0.00 -65.00 0.00 33.00 33.00 32.00 0.00 64.00 -33.00 32.00 33.00 -64.00 64.00 32.00 32.00 64.00 -32.00 65.00 0.00 0.00 32.00 0.00 -32.00 0.00 32.00 32.00 0.00 32.00 0.00 -32.00 0.00 -32.00 0.00 32.00 32.00 64.00 0.00 0.00 65.00 -64.00 0.00 0.00 32.00 0.00 -32.00 32.00 32.00 -32.00 64.00 32.00 32.00 -32.00 0.00 -32.00 0.00 0.00 32.00 32.00 32.00 32.00 -64.00 64.00 0.00 -32.00 0.00 32.00 32.00 -64.00 32.00 32.00 0.00 0.00 33.00 -32.00 0.00 -96.00 64.00 0.00 32.00 32.00 32.00 -32.00 0.00 -33.00 0.00 -128.00 0.00 -129.00 65.00 -128.00 0.00 -65.00 32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -65.00 -33.00 0.00 -32.00 -64.00 0.00 -32.00 -32.00 -96.00 -32.00 -65.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 -32.00 -33.00 32.00 33.00 32.00 -33.00 -32.00 -32.00 32.00 32.00 0.00 0.00 32.00 97.00 -32.00 0.00 32.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 129.00 0.00 64.00 32.00 -64.00 0.00 32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 128.00 0.00 64.00 0.00 0.00 33.00 33.00 0.00 32.00 32.00 64.00 32.00 -64.00 0.00 -225.00 0.00 -418.00 32.00 -97.00 32.00 -32.00 32.00 0.00 32.00 0.00 -32.00 -96.00 0.00 -65.00 32.00 -32.00 33.00 -128.00 32.00 -65.00 32.00 0.00 64.00 0.00 32.00 0.00 -32.00 -64.00 0.00 -32.00 0.00 32.00 0.00 0.00 -32.00 -64.00 -32.00 -65.00 -32.00 -353.00 0.00 -515.00 32.00 -386.00 64.00 -450.00 65.00 -161.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -65.00 -32.00 0.00 32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 0.00 65.00 -64.00 96.00 -33.00 32.00 33.00 65.00 64.00 64.00 0.00 96.00 32.00 65.00 0.00 32.00 -32.00 0.00 -64.00 0.00 -33.00 -64.00 -32.00 -65.00 -32.00 -32.00 -32.00 32.00 32.00 65.00 32.00 128.00 65.00 161.00 64.00 161.00 0.00 418.00 -32.00 193.00 -65.00 257.00 -32.00 32.00 0.00 32.00 32.00 161.00 65.00 0.00 64.00 32.00 -64.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -32.00 -33.00 -32.00 -32.00 -33.00 0.00 -32.00 -64.00 -96.00 -32.00 -32.00 -32.00 -65.00 0.00 0.00 -32.00 -64.00 0.00 -64.00 -65.00 -32.00 -32.00 -65.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 -96.00 -33.00 32.00 0.00 -32.00 -32.00 -65.00 -160.00 -96.00 0.00 -32.00 -33.00 32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 0.00 -65.00 32.00 0.00 -32.00 -32.00 -33.00 32.00 65.00 -64.00 32.00 -64.00 0.00 -32.00 -32.00 64.00 -32.00 32.00 -33.00 -32.00 -32.00 -97.00 0.00 -64.00 32.00 -32.00 33.00 -32.00 32.00 64.00 32.00 -32.00 64.00 0.00 32.00 32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 65.00 -32.00 0.00 -32.00 -33.00 32.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 64.00 -32.00 33.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 0.00 -97.00 32.00 -96.00 0.00 -32.00 0.00 -65.00 0.00 -64.00 32.00 -64.00 0.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 32.00 -32.00 32.00 0.00 33.00 -32.00 0.00 -33.00 96.00 -64.00 32.00 -32.00 -32.00 64.00 -96.00 -32.00 -33.00 32.00 -32.00 -32.00 -32.00 -64.00 32.00 -65.00 32.00 -32.00 33.00 0.00 32.00 32.00 32.00 -32.00 96.00 -64.00 0.00 0.00 65.00 -96.00 64.00 -129.00 64.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 -65.00 32.00 32.00 0.00 0.00 33.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -64.00 0.00 32.00 -65.00 -32.00 0.00 -161.00 65.00 -32.00 32.00 -32.00 -32.00 0.00 -32.00 -33.00 32.00 0.00 -32.00 33.00 0.00 32.00 -97.00 64.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 -64.00 -33.00 0.00 0.00 -33.00 -32.00 65.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 -33.00 0.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 0.00 32.00 -64.00 0.00 0.00 32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 -32.00 -65.00 64.00 0.00 -64.00 -32.00 0.00 0.00 -64.00 32.00 -32.00 32.00 -33.00 97.00 0.00 0.00 -64.00 32.00 32.00 32.00 -32.00 0.00 -32.00 32.00 -64.00 32.00 0.00 0.00 -33.00 -64.00 33.00 -32.00 -33.00 -64.00 33.00 0.00 32.00 0.00 -32.00 -32.00 -33.00 64.00 0.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 32.00 32.00 -32.00 0.00 32.00 32.00 -64.00 0.00 32.00 64.00 0.00 -32.00 96.00 32.00 -64.00 32.00 -32.00 33.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -33.00 -32.00 33.00 -32.00 -65.00 -65.00 -64.00 32.00 -32.00 -64.00 0.00 32.00 -32.00 0.00 0.00 65.00 -33.00 -33.00 0.00 33.00 -32.00 0.00 0.00 64.00 32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 64.00 0.00 0.00 33.00 -64.00 0.00 -32.00 64.00 32.00 32.00 64.00 0.00 -64.00 32.00 -64.00 -64.00 -32.00 32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 32.00 -33.00 -32.00 -32.00 0.00 -32.00 64.00 -64.00 64.00 -32.00 -32.00 -32.00 0.00 -65.00 0.00 -96.00 64.00 -32.00 0.00 -65.00 33.00 -32.00 0.00 0.00 32.00 -32.00 32.00 -64.00 32.00 32.00 -64.00 0.00 -32.00 -32.00 0.00 -65.00 32.00 0.00 -32.00 0.00 32.00 0.00 -32.00 -32.00 0.00 -96.00 32.00 0.00 -32.00 -32.00 0.00 -33.00 64.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -64.00 64.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 33.00 32.00 32.00 -32.00 0.00 -33.00 32.00 0.00 96.00 65.00 32.00 0.00 33.00 0.00 -33.00 -32.00 33.00 -33.00 0.00 0.00 32.00 0.00 32.00 33.00 0.00 -33.00 64.00 -32.00 0.00 0.00 32.00 32.00 33.00 -64.00 32.00 0.00 32.00 -32.00 0.00 32.00 0.00 32.00 0.00 -32.00 32.00 -32.00 0.00 0.00 64.00 32.00 32.00 32.00 33.00 -32.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 32.00 0.00 33.00 0.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -33.00 32.00 0.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 -96.00 33.00 0.00 0.00 64.00 96.00 0.00 0.00 32.00 32.00 0.00 -32.00 32.00 0.00 65.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -33.00 0.00 33.00 0.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -33.00 -65.00 65.00 0.00 -32.00 -64.00 -33.00 32.00 65.00 -32.00 32.00 32.00 -32.00 32.00 0.00 -64.00 64.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 32.00 0.00 -64.00 32.00 64.00 0.00 32.00 -32.00 0.00 32.00 32.00 0.00 32.00 -64.00 32.00 0.00 65.00 0.00 32.00 0.00 96.00 -32.00 -64.00 64.00 -64.00 161.00 -97.00 64.00 0.00 32.00 97.00 33.00 -32.00 -33.00 0.00 -32.00 32.00 0.00 32.00 -32.00 64.00 -128.00 97.00 -65.00 0.00 -32.00 96.00 -32.00 97.00 -32.00 0.00 -32.00 0.00 32.00 -33.00 32.00 -64.00 64.00 0.00 32.00 -32.00 65.00 32.00 32.00 97.00 32.00 32.00 -32.00 0.00 32.00 64.00 -32.00 97.00 64.00 -33.00 0.00 33.00 0.00 32.00 32.00 32.00 0.00 0.00 32.00 -32.00 33.00 -32.00 -65.00 -65.00 0.00 -32.00 0.00 -32.00 65.00 -32.00 32.00 -32.00 -32.00 -33.00 96.00 0.00 32.00 -96.00 129.00 -32.00 32.00 -32.00 0.00 -33.00 32.00 0.00 -96.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 32.00 0.00 -97.00 -32.00 -32.00 -32.00 32.00 -33.00 33.00 -64.00 0.00 32.00 32.00 -64.00 -32.00 -32.00 -33.00 0.00 33.00 0.00 32.00 -32.00 0.00 -65.00 -32.00 -96.00 32.00 0.00 32.00 0.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 -32.00 -33.00 -32.00 -32.00 0.00 -64.00 -64.00 -97.00 -33.00 33.00 0.00 -33.00 -64.00 0.00 -32.00 -32.00 -64.00 0.00 -33.00 -96.00 -32.00 0.00 -32.00 -97.00 32.00 33.00 -32.00 -33.00 -32.00 0.00 -32.00 -64.00 -32.00 32.00 -32.00 -96.00 -33.00 -97.00 0.00 0.00 -96.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -65.00zm15112.00 -3922.00l0.00 -33.00 32.00 0.00 0.00 33.00 -32.00 0.00zm-64.00 32.00l32.00 -32.00 32.00 32.00 -32.00 0.00 32.00 32.00 -64.00 0.00 0.00 -32.00zm-7042.00 3054.00l0.00 -32.00 0.00 32.00zm-1511.00 97.00l32.00 0.00 -32.00 0.00zm-2829.00 -161.00l0.00 32.00 0.00 -32.00zm-2701.00 418.00l0.00 32.00 32.00 0.00 -32.00 0.00 0.00 -32.00zm3858.00 -772.00l0.00 -32.00 0.00 32.00 32.00 0.00 0.00 32.00 -32.00 0.00 32.00 0.00 -32.00 0.00 0.00 -32.00zm-482.00 0.00l0.00 -32.00 32.00 0.00 -32.00 32.00zm3280.00 418.00l-33.00 0.00 0.00 -32.00 33.00 0.00 0.00 32.00zm-6688.00 354.00l0.00 32.00 0.00 -32.00zm96.00 643.00l-32.00 -32.00 -32.00 32.00 32.00 0.00 32.00 0.00zm-96.00 -289.00l32.00 0.00 -32.00 0.00zm546.00 450.00l0.00 -32.00 0.00 32.00zm-128.00 -900.00l32.00 0.00 -32.00 0.00 0.00 32.00 0.00 -32.00zm160.00 -161.00l33.00 0.00 32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 -32.00 0.00 32.00 -33.00 0.00 0.00 -32.00 33.00 0.00 0.00 -32.00 -33.00 0.00zm2894.00 -450.00l32.00 0.00 -32.00 0.00zm-3215.00 482.00l32.00 0.00 32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 -32.00 0.00 -32.00zm5048.00 96.00l32.00 0.00 -32.00 0.00zm-2701.00 -193.00l0.00 33.00 0.00 -33.00 0.00 33.00 0.00 -33.00zm3923.00 0.00l0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00zm-3055.00 -64.00l0.00 -32.00 0.00 32.00zm3537.00 0.00l32.00 0.00 -32.00 0.00zm-6463.00 1608.00l0.00 -32.00 32.00 0.00 -32.00 0.00 0.00 32.00zm-450.00 -933.00l0.00 -32.00 32.00 0.00 -32.00 0.00 0.00 32.00zm3408.00 -707.00l0.00 32.00 0.00 -32.00zm161.00 -129.00l0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00zm3344.00 225.00l32.00 0.00 0.00 -32.00 0.00 32.00 -32.00 0.00zm-6881.00 708.00l0.00 -32.00 0.00 32.00 0.00 32.00 0.00 -32.00zm354.00 64.00l32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -64.00 33.00 -33.00 32.00 -64.00 0.00 64.00 -32.00 65.00 -65.00 32.00 0.00 0.00 -32.00zm-129.00 -643.00l0.00 -32.00 32.00 0.00 0.00 -32.00 33.00 0.00 -33.00 32.00 0.00 32.00 -32.00 0.00zm5209.00 0.00l0.00 -32.00 0.00 32.00zm-5048.00 611.00l0.00 -32.00 32.00 0.00 0.00 32.00 -32.00 0.00zm6752.00 -643.00l32.00 0.00 0.00 32.00 0.00 -32.00 -32.00 0.00zm-3601.00 -386.00l32.00 0.00 -32.00 0.00zm-1029.00 289.00l0.00 -32.00 32.00 32.00 -32.00 0.00zm4405.00 129.00l32.00 0.00 0.00 32.00 -32.00 0.00 0.00 -32.00zm-6848.00 32.00l0.00 -32.00 32.00 0.00 0.00 32.00 0.00 -32.00 0.00 32.00 -32.00 0.00zm7266.00 -1479.00l0.00 -64.00 0.00 -32.00 32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 32.00zm-7491.00 1897.00l32.00 -32.00 32.00 32.00 -64.00 65.00 0.00 -65.00zm3022.00 -739.00l32.00 -32.00 64.00 -33.00 33.00 65.00 -65.00 32.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00zm547.00 0.00l0.00 -32.00 32.00 -33.00 32.00 -32.00 32.00 0.00 0.00 32.00 -32.00 33.00 -32.00 64.00 -32.00 -32.00zm3311.00 -708.00l0.00 32.00 0.00 33.00 32.00 -33.00 0.00 -32.00 -32.00 0.00zm-4791.00 1672.00l-32.00 0.00 32.00 -32.00 -32.00 -32.00 -64.00 32.00 32.00 -64.00 -32.00 -32.00 -64.00 0.00 -97.00 0.00 -64.00 32.00 32.00 32.00 -96.00 96.00 0.00 65.00 -65.00 0.00 33.00 -32.00 -65.00 0.00 0.00 -33.00 32.00 -32.00 33.00 -64.00 0.00 -32.00 -33.00 -32.00 -64.00 64.00 0.00 -64.00 -64.00 32.00 -32.00 -32.00 0.00 -32.00 64.00 -33.00 32.00 0.00 32.00 -32.00 32.00 0.00 33.00 -32.00 64.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 0.00 -33.00 97.00 -64.00 -33.00 97.00 33.00 0.00 0.00 32.00 32.00 0.00 32.00 -65.00 32.00 0.00 -32.00 -32.00 96.00 0.00 0.00 -32.00 32.00 0.00 0.00 -64.00 -32.00 0.00 97.00 -32.00 0.00 -32.00 32.00 0.00 0.00 32.00 96.00 0.00 0.00 32.00 65.00 0.00 0.00 32.00 32.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 0.00 0.00 32.00 32.00 0.00 33.00 -32.00 0.00 64.00 32.00 0.00 96.00 0.00 32.00 0.00 0.00 65.00 0.00 32.00 33.00 0.00 32.00 0.00 0.00 -32.00 32.00 0.00 0.00 -33.00 96.00 -32.00 32.00 32.00 -32.00 33.00 -64.00 32.00 32.00 32.00 -32.00 64.00 32.00 0.00 32.00 0.00 65.00 -64.00 0.00 32.00 32.00 64.00 96.00 0.00 -32.00 65.00 -64.00 0.00 -32.00 32.00 -65.00 0.00 32.00 -32.00 -32.00 -32.00 -32.00 -33.00 -96.00 33.00 -65.00 64.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 32.00 0.00 0.00 32.00 -64.00 32.00 0.00 -32.00 -32.00 -32.00 -97.00 32.00 -32.00 0.00 -64.00 0.00 -33.00 32.00z\"\n          },\n          es: {\n            name: \"ES\",\n            path: \"M157827.00 128806.00l0.00 -33.00 0.00 -32.00 0.00 -64.00 64.00 0.00 0.00 32.00 33.00 0.00 -33.00 -96.00 -32.00 -32.00 32.00 0.00 33.00 -33.00 -33.00 -32.00 33.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 -65.00 64.00 -32.00 -32.00 -32.00 32.00 0.00 33.00 -32.00 32.00 -32.00 -32.00 -32.00 0.00 32.00 -33.00 -32.00 33.00 -65.00 -65.00 0.00 -96.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -65.00 64.00 -96.00 0.00 -32.00 32.00 -32.00 65.00 0.00 0.00 -33.00 0.00 -32.00 -32.00 -96.00 32.00 -32.00 0.00 -97.00 32.00 -64.00 0.00 -161.00 0.00 -64.00 0.00 -65.00 -161.00 -32.00 -64.00 -160.00 0.00 -33.00 -65.00 0.00 33.00 -96.00 0.00 -32.00 64.00 -32.00 -32.00 -65.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 -32.00 65.00 -32.00 32.00 -32.00 0.00 -32.00 96.00 0.00 32.00 -33.00 -32.00 -32.00 32.00 -96.00 33.00 -32.00 0.00 -129.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 450.00 0.00 997.00 0.00 193.00 0.00 0.00 -33.00 32.00 -32.00 32.00 32.00 96.00 -64.00 32.00 -96.00 0.00 -33.00 33.00 -32.00 32.00 -64.00 32.00 -32.00 -32.00 0.00 64.00 -64.00 -32.00 -33.00 32.00 -64.00 0.00 -64.00 32.00 -32.00 32.00 -97.00 0.00 -32.00 33.00 -32.00 32.00 -32.00 0.00 -97.00 64.00 -64.00 -32.00 -64.00 0.00 -33.00 -32.00 -64.00 32.00 -32.00 32.00 -129.00 32.00 -32.00 129.00 0.00 64.00 -32.00 32.00 32.00 32.00 0.00 65.00 -96.00 0.00 -64.00 96.00 -33.00 32.00 33.00 65.00 -65.00 32.00 -32.00 0.00 -193.00 32.00 0.00 0.00 -32.00 -32.00 -64.00 32.00 0.00 32.00 -97.00 32.00 -64.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -65.00 -64.00 -32.00 0.00 -64.00 64.00 -32.00 -32.00 -32.00 32.00 -65.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 -32.00 -33.00 32.00 -96.00 32.00 -32.00 65.00 0.00 64.00 -32.00 32.00 -65.00 32.00 0.00 32.00 0.00 32.00 -32.00 33.00 -161.00 32.00 0.00 32.00 -32.00 32.00 0.00 32.00 0.00 0.00 -64.00 97.00 0.00 0.00 -32.00 96.00 -32.00 0.00 -32.00 -32.00 -65.00 -32.00 -64.00 32.00 -97.00 -32.00 -64.00 0.00 -64.00 96.00 32.00 97.00 32.00 161.00 0.00 0.00 -32.00 96.00 -129.00 0.00 -32.00 32.00 -32.00 -64.00 -32.00 0.00 -64.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 0.00 -32.00 128.00 -97.00 0.00 -32.00 33.00 -32.00 -65.00 -32.00 0.00 -65.00 32.00 -96.00 33.00 0.00 32.00 -32.00 32.00 0.00 32.00 -64.00 -32.00 -33.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 33.00 -32.00 -65.00 0.00 -32.00 -32.00 64.00 -32.00 65.00 0.00 0.00 -97.00 -65.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 32.00 0.00 33.00 -33.00 0.00 -64.00 -33.00 -32.00 33.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -65.00 -32.00 -32.00 -32.00 -32.00 32.00 -64.00 -64.00 0.00 0.00 -65.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 -32.00 -32.00 -64.00 0.00 -32.00 0.00 0.00 -32.00 0.00 -65.00 -32.00 33.00 0.00 -65.00 -33.00 0.00 -32.00 32.00 -32.00 -64.00 -96.00 0.00 0.00 -64.00 -32.00 0.00 -33.00 -32.00 33.00 -65.00 -65.00 -64.00 32.00 -32.00 0.00 -64.00 65.00 0.00 128.00 -97.00 32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 -65.00 0.00 -32.00 -64.00 0.00 0.00 -32.00 -96.00 -32.00 -33.00 -32.00 -32.00 0.00 0.00 -65.00 -32.00 -32.00 -32.00 -64.00 -64.00 -32.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 -32.00 -65.00 -32.00 -32.00 -96.00 32.00 -33.00 0.00 -64.00 -64.00 0.00 64.00 0.00 32.00 -32.00 33.00 -64.00 -97.00 -32.00 0.00 -33.00 -32.00 33.00 -32.00 -33.00 0.00 33.00 -64.00 -33.00 -65.00 65.00 -96.00 289.00 0.00 32.00 0.00 65.00 0.00 64.00 -32.00 32.00 64.00 32.00 32.00 0.00 32.00 64.00 97.00 65.00 0.00 64.00 0.00 161.00 0.00 96.00 0.00 290.00 0.00 64.00 -32.00 32.00 -33.00 32.00 33.00 32.00 -33.00 33.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -65.00 -32.00 33.00 -33.00 -65.00 -64.00 0.00 -193.00 0.00 -32.00 -32.00 -193.00 -32.00 -32.00 -161.00 -32.00 -32.00 -32.00 -64.00 0.00 -65.00 -65.00 -64.00 0.00 32.00 -32.00 -32.00 0.00 0.00 -32.00 -64.00 32.00 32.00 -32.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -33.00 0.00 -32.00 -32.00 -32.00 32.00 -257.00 32.00 0.00 0.00 -96.00 32.00 -290.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -160.00 -32.00 -129.00 0.00 -418.00 -33.00 -32.00 -32.00 64.00 -96.00 64.00 -32.00 65.00 -32.00 -97.00 0.00 0.00 -65.00 0.00 -64.00 65.00 0.00 0.00 -32.00 0.00 -64.00 0.00 -97.00 -33.00 -32.00 0.00 -129.00 33.00 -32.00 96.00 -96.00 161.00 -129.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -64.00 128.00 -65.00 65.00 0.00 0.00 -32.00 0.00 -32.00 96.00 -32.00 -32.00 64.00 32.00 0.00 32.00 -96.00 65.00 0.00 0.00 64.00 96.00 0.00 32.00 -96.00 32.00 -33.00 65.00 33.00 32.00 32.00 32.00 0.00 0.00 -32.00 0.00 -33.00 0.00 -64.00 32.00 0.00 32.00 32.00 32.00 0.00 65.00 -64.00 32.00 -32.00 32.00 0.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 64.00 65.00 0.00 64.00 32.00 0.00 64.00 32.00 0.00 32.00 33.00 32.00 0.00 65.00 0.00 32.00 0.00 96.00 32.00 33.00 32.00 128.00 -32.00 -32.00 -225.00 -611.00 -579.00 32.00 -32.00 32.00 0.00 32.00 -65.00 33.00 65.00 32.00 0.00 32.00 32.00 32.00 -32.00 97.00 -129.00 32.00 0.00 32.00 32.00 32.00 -32.00 32.00 -32.00 32.00 32.00 33.00 0.00 32.00 64.00 -32.00 65.00 64.00 -32.00 32.00 0.00 0.00 32.00 32.00 0.00 -32.00 96.00 32.00 0.00 32.00 0.00 65.00 32.00 32.00 -32.00 64.00 0.00 64.00 0.00 0.00 65.00 32.00 32.00 97.00 -65.00 32.00 33.00 32.00 -33.00 65.00 33.00 32.00 -33.00 32.00 -64.00 96.00 -32.00 0.00 -64.00 65.00 -33.00 -32.00 -32.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 64.00 0.00 64.00 0.00 0.00 -97.00 97.00 0.00 96.00 -64.00 97.00 -64.00 32.00 0.00 64.00 96.00 97.00 0.00 96.00 96.00 32.00 -64.00 129.00 32.00 64.00 0.00 129.00 0.00 0.00 32.00 64.00 0.00 32.00 -32.00 64.00 32.00 33.00 -32.00 64.00 0.00 64.00 65.00 32.00 0.00 33.00 64.00 64.00 -32.00 0.00 32.00 96.00 64.00 33.00 0.00 64.00 32.00 128.00 65.00 772.00 482.00 547.00 354.00 128.00 96.00 32.00 32.00 1062.00 676.00 64.00 32.00 32.00 32.00 0.00 64.00 0.00 32.00 -161.00 322.00 0.00 32.00 -64.00 225.00 -64.00 161.00 0.00 225.00 0.00 32.00 0.00 161.00 32.00 64.00 -65.00 193.00 -32.00 322.00 -32.00 385.00 0.00 258.00 64.00 546.00 97.00 708.00 32.00 353.00 64.00 354.00 33.00 322.00 -33.00 289.00 -160.00 482.00 -193.00 450.00 -161.00 354.00 0.00 96.00 -64.00 33.00 -33.00 0.00 -64.00 0.00 -161.00 64.00 -193.00 96.00 -96.00 65.00 -225.00 193.00 -193.00 193.00 -129.00 128.00 -32.00 64.00 0.00 65.00 -32.00 96.00 -64.00 97.00 -32.00 64.00 -33.00 32.00 0.00 32.00 -32.00 33.00 0.00 64.00 -96.00 64.00 -64.00 32.00 -33.00 65.00 0.00 32.00 33.00 32.00 -33.00 32.00 -32.00 64.00 0.00 32.00 -32.00 65.00 0.00 32.00 -32.00 129.00 -129.00 32.00 -32.00 64.00 97.00 97.00 0.00 160.00 -65.00 225.00 0.00 97.00 -32.00 32.00 0.00 96.00 -32.00 65.00 -64.00 128.00 -97.00 97.00 -32.00 96.00 0.00 32.00 -64.00 33.00 0.00 -33.00 0.00 -32.00 -32.00 -64.00 -65.00 0.00 -64.00 32.00 -32.00 64.00 32.00 33.00 -32.00 32.00 64.00 0.00 0.00 32.00 -64.00 0.00 32.00 0.00 32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 64.00 -32.00 33.00 0.00 -33.00 0.00 0.00 32.00 33.00 0.00 -33.00 0.00 0.00 32.00 33.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 97.00 -32.00 32.00 -97.00 161.00 -32.00 128.00 0.00 33.00 -128.00 257.00 -65.00 161.00 0.00 32.00 -32.00 0.00 -32.00 96.00 -129.00 193.00 0.00 97.00 -96.00 128.00 -32.00 65.00 32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -65.00 0.00 33.00 -33.00 -33.00 0.00 -64.00 -32.00 0.00 32.00 -32.00 33.00 32.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 -32.00 -32.00 64.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -33.00 32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 64.00 -32.00 -32.00 32.00 32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 97.00 -64.00 129.00 32.00 32.00 -32.00 0.00 0.00 32.00 -33.00 0.00 0.00 32.00 -32.00 0.00 -64.00 0.00 -96.00 129.00 -33.00 64.00 0.00 32.00 -32.00 64.00 32.00 0.00 -32.00 33.00 -32.00 -33.00 -64.00 33.00 -64.00 128.00 -33.00 0.00 0.00 32.00 -32.00 0.00 0.00 -64.00 32.00 -32.00 -32.00 -32.00 -96.00 -65.00 32.00 -64.00 32.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 32.00 32.00 33.00 -65.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 0.00 32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -65.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 32.00 0.00 -32.00 32.00 32.00 0.00 32.00 -32.00 0.00 32.00 -32.00 -32.00 0.00 -64.00 32.00 -32.00 33.00 -65.00 64.00 0.00 32.00 0.00 32.00 0.00 32.00 -64.00 32.00 0.00 65.00 -96.00 96.00 -33.00 65.00 0.00 32.00 -32.00 96.00 0.00 129.00 32.00 64.00 -32.00 0.00 0.00 32.00 -32.00 129.00 -64.00 32.00 -129.00 418.00 -129.00 64.00 -32.00 65.00 -96.00 64.00 -64.00 96.00 -129.00 225.00 -32.00 97.00 0.00 129.00 0.00 96.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 0.00 -65.00 -32.00 -96.00 -32.00 0.00 -65.00 0.00 -64.00 32.00 -64.00 -97.00 -65.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -97.00 32.00 -64.00 0.00 -32.00 32.00 -65.00 33.00 -32.00 0.00 -64.00 0.00 -32.00 0.00 32.00 -33.00 -32.00 33.00 0.00 -33.00 0.00 33.00 -32.00 0.00 0.00 32.00 0.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 -33.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 -64.00 0.00 -32.00 64.00 -32.00 0.00 -32.00 0.00 0.00 33.00 -33.00 -33.00 -32.00 0.00 -32.00 0.00 -64.00 -96.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 -128.00 -32.00 -33.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 0.00 32.00 -33.00 0.00 -64.00 64.00 -64.00 0.00 -32.00 -32.00 -65.00 -32.00 -64.00 -32.00 0.00 -65.00 -32.00 0.00 -64.00 0.00 -33.00 -32.00 -32.00 0.00 0.00 64.00 -64.00 -64.00 -96.00 32.00 -33.00 -64.00 -32.00 64.00 -32.00 -32.00 0.00 -32.00 -64.00 -32.00 -32.00 -65.00 -97.00 33.00 -96.00 -65.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -33.00 0.00 -32.00 -32.00 -64.00 0.00 0.00 32.00 -64.00 0.00 0.00 -32.00 64.00 -32.00 0.00 -33.00 -64.00 0.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 65.00 -128.00 -32.00 0.00 0.00 -33.00 -33.00 0.00 0.00 -64.00 33.00 0.00 0.00 32.00 32.00 0.00 0.00 -64.00 -32.00 -64.00 0.00 -32.00 32.00 0.00 32.00 -33.00 -64.00 -32.00 32.00 -32.00 0.00 -64.00 32.00 0.00 0.00 -65.00 -32.00 0.00 0.00 -128.00 -65.00 -32.00 -32.00 -97.00 32.00 0.00 33.00 -32.00 32.00 -96.00 -32.00 0.00 0.00 -33.00 32.00 -96.00 32.00 0.00 -64.00 -32.00 -65.00 32.00 0.00 -32.00 -32.00 -64.00 32.00 -97.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 32.00 0.00 -64.00 -64.00 0.00 0.00 -33.00 -33.00 0.00 -96.00 0.00 -32.00 33.00 -64.00 0.00 32.00 -65.00 -32.00 32.00 -65.00 -32.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 -32.00 -65.00 -65.00 33.00 -32.00 0.00zm7170.00 -1190.00l32.00 0.00 -32.00 0.00zm-64.00 450.00l0.00 -32.00 0.00 32.00zm-64.00 -96.00l-32.00 0.00 32.00 0.00zm-547.00 321.00l-64.00 0.00 -32.00 0.00 0.00 -32.00 -33.00 96.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 32.00 0.00 32.00 0.00 -32.00 33.00 65.00 32.00 32.00 -32.00 -65.00 0.00 33.00 -65.00 32.00 -32.00 64.00 32.00 0.00 -32.00zm579.00 -225.00l0.00 -32.00 0.00 32.00zm386.00 -1157.00l32.00 0.00 -32.00 0.00z\"\n          },\n          sc: {\n            name: \"SC\",\n            path: \"M101205.00 160059.00l0.00 -33.00 -32.00 -32.00 32.00 -32.00 161.00 -32.00 0.00 -32.00 -97.00 32.00 -32.00 -64.00 32.00 0.00 65.00 -32.00 0.00 -33.00 0.00 -32.00 -65.00 -32.00 0.00 -32.00 33.00 0.00 32.00 64.00 32.00 0.00 96.00 -32.00 -128.00 -96.00 0.00 -33.00 32.00 -64.00 64.00 64.00 65.00 0.00 -33.00 -32.00 -32.00 0.00 -64.00 -64.00 -32.00 -64.00 64.00 0.00 64.00 64.00 33.00 64.00 64.00 -32.00 -32.00 -32.00 -65.00 -32.00 -32.00 -129.00 32.00 32.00 65.00 65.00 32.00 -33.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -64.00 64.00 0.00 32.00 64.00 65.00 -64.00 -65.00 -65.00 97.00 0.00 32.00 0.00 0.00 -32.00 -97.00 -64.00 33.00 0.00 0.00 -64.00 64.00 32.00 64.00 -32.00 0.00 -32.00 -32.00 -65.00 0.00 -32.00 129.00 64.00 32.00 0.00 32.00 0.00 -64.00 -32.00 -65.00 -64.00 65.00 -32.00 32.00 -32.00 -32.00 -33.00 32.00 -64.00 -97.00 -32.00 32.00 -32.00 33.00 -64.00 -65.00 0.00 0.00 -33.00 161.00 33.00 0.00 -33.00 -32.00 -32.00 -32.00 -32.00 -97.00 0.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 -32.00 -65.00 -32.00 -32.00 0.00 -32.00 32.00 32.00 32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -64.00 0.00 -32.00 64.00 -33.00 0.00 -32.00 -64.00 0.00 0.00 32.00 -64.00 0.00 -65.00 -64.00 65.00 32.00 32.00 -32.00 32.00 0.00 0.00 -64.00 -32.00 -32.00 -32.00 -65.00 -33.00 65.00 -64.00 0.00 32.00 -65.00 -64.00 -32.00 0.00 -64.00 32.00 64.00 64.00 -32.00 33.00 -64.00 -65.00 -65.00 0.00 -32.00 32.00 0.00 33.00 65.00 64.00 -65.00 -64.00 -32.00 0.00 -32.00 64.00 0.00 -32.00 -64.00 0.00 -33.00 0.00 33.00 -65.00 0.00 0.00 -33.00 -32.00 0.00 -64.00 -32.00 32.00 -32.00 32.00 32.00 0.00 -64.00 32.00 0.00 33.00 -64.00 -33.00 -32.00 33.00 0.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -129.00 64.00 0.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 -33.00 0.00 65.00 -32.00 -32.00 -32.00 -65.00 -32.00 65.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -64.00 -64.00 0.00 0.00 -97.00 32.00 0.00 0.00 32.00 32.00 -32.00 64.00 32.00 -32.00 -64.00 32.00 -32.00 32.00 0.00 -32.00 -65.00 32.00 0.00 -32.00 -32.00 -32.00 65.00 0.00 -65.00 -32.00 0.00 64.00 -32.00 32.00 32.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 32.00 0.00 0.00 -65.00 -32.00 0.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 -64.00 -32.00 0.00 -65.00 32.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 -32.00 -32.00 -32.00 32.00 0.00 0.00 -65.00 65.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 0.00 -32.00 64.00 -97.00 32.00 -64.00 32.00 -64.00 0.00 -65.00 0.00 -32.00 65.00 32.00 32.00 0.00 64.00 0.00 97.00 -32.00 32.00 97.00 32.00 0.00 97.00 64.00 0.00 32.00 128.00 0.00 129.00 32.00 96.00 -32.00 32.00 0.00 32.00 0.00 97.00 -64.00 64.00 0.00 32.00 -32.00 193.00 -129.00 32.00 -32.00 65.00 64.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 32.00 65.00 0.00 32.00 32.00 32.00 0.00 129.00 -64.00 0.00 64.00 32.00 0.00 64.00 97.00 0.00 32.00 32.00 32.00 0.00 32.00 32.00 0.00 65.00 65.00 128.00 64.00 0.00 32.00 32.00 0.00 65.00 64.00 64.00 0.00 32.00 33.00 32.00 0.00 33.00 -33.00 32.00 0.00 32.00 65.00 32.00 32.00 32.00 32.00 64.00 32.00 33.00 0.00 32.00 32.00 32.00 32.00 64.00 0.00 129.00 -64.00 96.00 -32.00 193.00 -129.00 193.00 97.00 64.00 -32.00 33.00 0.00 64.00 -32.00 32.00 32.00 64.00 0.00 33.00 0.00 32.00 0.00 32.00 0.00 128.00 -65.00 33.00 0.00 64.00 0.00 64.00 0.00 32.00 0.00 32.00 33.00 33.00 0.00 64.00 -33.00 64.00 33.00 32.00 0.00 33.00 -33.00 32.00 0.00 32.00 -32.00 64.00 32.00 32.00 65.00 33.00 -32.00 32.00 32.00 32.00 0.00 96.00 -32.00 97.00 96.00 64.00 32.00 32.00 32.00 0.00 32.00 64.00 33.00 33.00 32.00 0.00 32.00 32.00 0.00 32.00 0.00 32.00 32.00 64.00 -64.00 65.00 32.00 32.00 -32.00 32.00 32.00 64.00 -32.00 97.00 -32.00 128.00 96.00 65.00 0.00 64.00 97.00 32.00 0.00 32.00 0.00 32.00 0.00 97.00 0.00 32.00 0.00 64.00 -33.00 32.00 -32.00 33.00 32.00 32.00 33.00 32.00 0.00 64.00 -33.00 65.00 65.00 32.00 -65.00 32.00 65.00 64.00 -32.00 97.00 0.00 96.00 96.00 0.00 32.00 32.00 0.00 65.00 -32.00 32.00 0.00 32.00 0.00 32.00 32.00 96.00 0.00 97.00 -32.00 64.00 -64.00 129.00 128.00 64.00 0.00 65.00 0.00 32.00 32.00 64.00 0.00 64.00 33.00 0.00 96.00 32.00 32.00 33.00 0.00 32.00 65.00 64.00 0.00 32.00 32.00 32.00 0.00 32.00 32.00 65.00 32.00 0.00 32.00 64.00 0.00 0.00 32.00 32.00 65.00 129.00 -33.00 0.00 33.00 64.00 0.00 65.00 32.00 32.00 -32.00 96.00 64.00 129.00 0.00 96.00 32.00 0.00 32.00 32.00 32.00 32.00 0.00 65.00 -64.00 64.00 32.00 97.00 -64.00 96.00 32.00 64.00 0.00 258.00 -64.00 128.00 32.00 64.00 0.00 129.00 -97.00 97.00 65.00 64.00 64.00 64.00 0.00 97.00 0.00 64.00 0.00 257.00 0.00 97.00 -32.00 64.00 32.00 32.00 64.00 32.00 33.00 -32.00 64.00 64.00 0.00 33.00 0.00 32.00 32.00 32.00 64.00 0.00 65.00 64.00 64.00 32.00 96.00 129.00 65.00 -32.00 64.00 64.00 -32.00 32.00 -32.00 0.00 -65.00 -64.00 -64.00 64.00 -64.00 65.00 0.00 64.00 -32.00 64.00 0.00 97.00 -33.00 32.00 0.00 0.00 33.00 64.00 -33.00 32.00 33.00 97.00 0.00 0.00 -65.00 32.00 0.00 0.00 -32.00 64.00 0.00 32.00 -32.00 97.00 0.00 0.00 -32.00 32.00 -32.00 -32.00 -65.00 64.00 -32.00 0.00 -64.00 0.00 -32.00 32.00 -32.00 -64.00 -33.00 0.00 -32.00 32.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 -64.00 -32.00 0.00 -32.00 -65.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 64.00 -33.00 -32.00 -32.00 32.00 -32.00 -64.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 32.00 -32.00 -96.00 -32.00 -33.00 -65.00 0.00 -32.00 65.00 -32.00 -32.00 -32.00 0.00 -32.00 64.00 32.00 0.00 -65.00 32.00 -32.00 96.00 -32.00 -32.00 -32.00 -32.00 -32.00 64.00 -64.00 0.00 -33.00 -32.00 0.00 32.00 -64.00 33.00 0.00 0.00 -32.00 96.00 -32.00 32.00 -32.00 32.00 -65.00 33.00 0.00 32.00 0.00 64.00 0.00 64.00 -32.00 32.00 0.00 0.00 -32.00 65.00 -32.00 32.00 32.00 32.00 0.00 0.00 -32.00 64.00 0.00 65.00 -32.00 32.00 -32.00 32.00 -33.00 0.00 -64.00 32.00 0.00 32.00 -96.00 97.00 64.00 32.00 32.00 257.00 -96.00 32.00 32.00 97.00 64.00 0.00 97.00 96.00 0.00 32.00 64.00 33.00 0.00 32.00 -64.00 -65.00 -129.00 33.00 -32.00 32.00 0.00 96.00 96.00 0.00 161.00 64.00 0.00 33.00 0.00 32.00 -32.00 32.00 -97.00 32.00 -96.00 32.00 0.00 97.00 129.00 32.00 32.00 32.00 -32.00 32.00 -97.00 64.00 -32.00 33.00 -32.00 32.00 -32.00 193.00 -32.00 32.00 32.00 0.00 96.00 64.00 0.00 64.00 0.00 33.00 -32.00 -97.00 -193.00 129.00 -64.00 32.00 -32.00 64.00 -97.00 32.00 -64.00 32.00 -32.00 65.00 -32.00 32.00 -33.00 32.00 0.00 -64.00 -128.00 64.00 -65.00 32.00 -64.00 65.00 -64.00 128.00 32.00 64.00 0.00 97.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -65.00 -32.00 0.00 -32.00 0.00 -64.00 33.00 -33.00 0.00 -32.00 -33.00 0.00 -96.00 97.00 -97.00 32.00 0.00 32.00 97.00 32.00 0.00 0.00 64.00 0.00 32.00 129.00 -64.00 64.00 -32.00 32.00 32.00 32.00 -32.00 33.00 32.00 64.00 0.00 -32.00 0.00 32.00 32.00 0.00 -64.00 32.00 0.00 0.00 32.00 64.00 0.00 0.00 32.00 0.00 -32.00 65.00 32.00 -33.00 32.00 33.00 33.00 32.00 64.00 64.00 0.00 32.00 0.00 32.00 0.00 33.00 -32.00 0.00 32.00 160.00 96.00 33.00 65.00 -33.00 64.00 0.00 32.00 33.00 -32.00 0.00 32.00 32.00 32.00 64.00 32.00 32.00 33.00 32.00 -33.00 32.00 33.00 0.00 -33.00 -64.00 0.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 -32.00 -65.00 64.00 0.00 0.00 -64.00 97.00 -64.00 96.00 -32.00 65.00 -33.00 64.00 33.00 0.00 -65.00 0.00 -32.00 96.00 32.00 0.00 65.00 33.00 64.00 32.00 -32.00 32.00 0.00 32.00 32.00 64.00 0.00 0.00 32.00 33.00 32.00 32.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -65.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 32.00 -32.00 32.00 -32.00 32.00 32.00 64.00 -32.00 32.00 32.00 -32.00 97.00 0.00 32.00 65.00 -65.00 64.00 97.00 32.00 -64.00 32.00 32.00 97.00 -65.00 32.00 -96.00 32.00 96.00 0.00 33.00 0.00 -33.00 32.00 -32.00 32.00 0.00 32.00 0.00 65.00 -32.00 32.00 0.00 32.00 0.00 97.00 64.00 32.00 -32.00 -32.00 -64.00 0.00 -32.00 64.00 0.00 0.00 -32.00 96.00 32.00 32.00 32.00 0.00 96.00 -32.00 65.00 129.00 -129.00 -64.00 -32.00 32.00 -32.00 64.00 -32.00 32.00 32.00 -32.00 32.00 32.00 32.00 97.00 -32.00 32.00 32.00 32.00 32.00 32.00 -32.00 129.00 32.00 -32.00 32.00 32.00 33.00 32.00 32.00 32.00 0.00 32.00 32.00 32.00 0.00 0.00 -64.00 33.00 32.00 0.00 64.00 -65.00 32.00 32.00 0.00 33.00 -32.00 0.00 64.00 32.00 65.00 32.00 0.00 32.00 -33.00 32.00 97.00 64.00 32.00 0.00 -32.00 33.00 -32.00 32.00 96.00 32.00 0.00 0.00 -64.00 -32.00 0.00 0.00 -32.00 32.00 0.00 32.00 64.00 64.00 32.00 0.00 97.00 65.00 0.00 64.00 0.00 -64.00 64.00 32.00 64.00 32.00 0.00 64.00 -64.00 65.00 32.00 32.00 64.00 64.00 0.00 -64.00 65.00 32.00 0.00 32.00 32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 0.00 32.00 33.00 0.00 0.00 32.00 0.00 32.00 64.00 -32.00 0.00 -64.00 32.00 0.00 0.00 64.00 -32.00 32.00 64.00 32.00 32.00 0.00 0.00 -32.00 0.00 32.00 33.00 0.00 32.00 65.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 -65.00 64.00 97.00 65.00 32.00 32.00 -64.00 -32.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 -32.00 -32.00 0.00 -33.00 32.00 0.00 32.00 65.00 0.00 -32.00 33.00 32.00 32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 32.00 -33.00 0.00 -32.00 0.00 32.00 -32.00 -64.00 32.00 0.00 32.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 32.00 32.00 65.00 -65.00 32.00 -64.00 64.00 0.00 32.00 0.00 0.00 64.00 33.00 -32.00 32.00 0.00 32.00 -32.00 0.00 32.00 0.00 -64.00 64.00 32.00 32.00 -64.00 0.00 32.00 32.00 32.00 0.00 -32.00 33.00 0.00 64.00 0.00 0.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 32.00 0.00 -32.00 32.00 0.00 0.00 -33.00 33.00 0.00 32.00 -32.00 96.00 -64.00 32.00 0.00 32.00 0.00 0.00 32.00 33.00 -32.00 -33.00 -32.00 65.00 0.00 0.00 -32.00 -32.00 0.00 32.00 0.00 -32.00 -33.00 0.00 -32.00 32.00 -32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -32.00 -32.00 0.00 65.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 64.00 -33.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 0.00 64.00 -32.00 33.00 -32.00 64.00 0.00 0.00 -32.00 64.00 0.00 32.00 -33.00 33.00 0.00 32.00 33.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 0.00 0.00 32.00 32.00 -65.00 32.00 0.00 -32.00 0.00 32.00 -32.00 65.00 32.00 32.00 -32.00 32.00 65.00 32.00 0.00 0.00 -33.00 64.00 0.00 33.00 -32.00 0.00 65.00 64.00 64.00 32.00 -32.00 32.00 0.00 32.00 -65.00 33.00 0.00 32.00 65.00 32.00 0.00 64.00 0.00 0.00 -32.00 32.00 0.00 33.00 -33.00 32.00 0.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 0.00 -64.00 -32.00 675.00 0.00 515.00 0.00 161.00 0.00 0.00 -32.00 32.00 0.00 32.00 0.00 0.00 -32.00 96.00 -65.00 32.00 33.00 33.00 32.00 0.00 32.00 32.00 0.00 0.00 32.00 32.00 0.00 32.00 0.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 96.00 -64.00 290.00 32.00 64.00 32.00 32.00 0.00 225.00 65.00 225.00 64.00 0.00 32.00 0.00 129.00 0.00 32.00 -32.00 32.00 32.00 -32.00 161.00 64.00 97.00 64.00 32.00 0.00 -32.00 33.00 -33.00 0.00 33.00 -33.00 64.00 -32.00 32.00 -128.00 225.00 -97.00 193.00 -32.00 161.00 -128.00 225.00 -33.00 128.00 0.00 97.00 -96.00 128.00 -64.00 161.00 -97.00 193.00 -32.00 97.00 -32.00 32.00 -64.00 193.00 -33.00 257.00 0.00 96.00 33.00 65.00 -33.00 96.00 33.00 161.00 32.00 32.00 32.00 32.00 64.00 32.00 0.00 -64.00 64.00 32.00 33.00 65.00 32.00 32.00 96.00 0.00 32.00 -65.00 0.00 33.00 65.00 0.00 -32.00 64.00 32.00 0.00 -32.00 0.00 -33.00 32.00 -32.00 129.00 -96.00 0.00 -32.00 32.00 -33.00 193.00 -32.00 128.00 32.00 65.00 -32.00 32.00 65.00 64.00 32.00 -32.00 -32.00 64.00 0.00 97.00 32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 -33.00 32.00 65.00 97.00 64.00 32.00 32.00 0.00 0.00 -32.00 32.00 -33.00 33.00 33.00 0.00 -33.00 32.00 0.00 0.00 33.00 32.00 64.00 32.00 0.00 -32.00 32.00 32.00 32.00 -32.00 0.00 0.00 64.00 -32.00 33.00 -32.00 96.00 -33.00 32.00 33.00 65.00 -33.00 0.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 0.00 64.00 32.00 97.00 97.00 96.00 64.00 64.00 64.00 0.00 32.00 0.00 65.00 -32.00 0.00 -32.00 32.00 -64.00 0.00 -32.00 32.00 -33.00 32.00 33.00 32.00 -65.00 32.00 32.00 -64.00 65.00 64.00 96.00 65.00 0.00 32.00 0.00 0.00 -32.00 0.00 -32.00 32.00 64.00 32.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 -32.00 33.00 -33.00 64.00 33.00 96.00 32.00 0.00 64.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 -33.00 0.00 -64.00 32.00 0.00 -32.00 64.00 -33.00 0.00 -32.00 -64.00 -64.00 -64.00 -32.00 -97.00 32.00 -32.00 32.00 -64.00 32.00 -64.00 65.00 0.00 -33.00 -65.00 65.00 -32.00 0.00 -32.00 0.00 0.00 128.00 -32.00 33.00 0.00 96.00 64.00 129.00 32.00 64.00 65.00 32.00 0.00 -32.00 32.00 0.00 32.00 -32.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 -32.00 32.00 0.00 33.00 -32.00 0.00 128.00 32.00 32.00 64.00 0.00 -32.00 33.00 0.00 32.00 -32.00 0.00 0.00 32.00 0.00 32.00 32.00 64.00 -32.00 65.00 0.00 -33.00 -32.00 -32.00 0.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 129.00 0.00 32.00 32.00 32.00 -64.00 0.00 0.00 32.00 32.00 0.00 -32.00 65.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 -32.00 -32.00 0.00 -96.00 32.00 -32.00 64.00 -33.00 64.00 0.00 97.00 -32.00 32.00 65.00 161.00 0.00 64.00 96.00 64.00 -32.00 65.00 64.00 64.00 129.00 32.00 0.00 32.00 32.00 65.00 -32.00 32.00 32.00 0.00 -32.00 32.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 0.00 -64.00 -32.00 0.00 -64.00 0.00 -64.00 32.00 32.00 0.00 -32.00 64.00 0.00 65.00 -33.00 32.00 -32.00 -32.00 0.00 32.00 32.00 32.00 65.00 32.00 96.00 32.00 0.00 64.00 0.00 33.00 32.00 64.00 0.00 64.00 -32.00 64.00 32.00 65.00 33.00 64.00 -33.00 64.00 0.00 33.00 -32.00 32.00 65.00 64.00 -33.00 96.00 65.00 65.00 32.00 128.00 -32.00 33.00 0.00 -33.00 -32.00 0.00 -33.00 33.00 -32.00 64.00 32.00 64.00 33.00 32.00 0.00 -32.00 64.00 0.00 0.00 64.00 -32.00 65.00 -32.00 0.00 -33.00 64.00 -96.00 64.00 0.00 65.00 -32.00 32.00 0.00 32.00 32.00 32.00 -32.00 32.00 -32.00 97.00 0.00 96.00 64.00 65.00 32.00 -33.00 64.00 65.00 -32.00 32.00 0.00 -32.00 -32.00 32.00 0.00 64.00 0.00 64.00 -32.00 0.00 -32.00 65.00 -32.00 32.00 0.00 32.00 -33.00 64.00 0.00 32.00 33.00 0.00 -33.00 0.00 0.00 33.00 33.00 0.00 0.00 32.00 -33.00 0.00 -32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 -32.00 32.00 0.00 33.00 -64.00 128.00 0.00 32.00 32.00 0.00 0.00 33.00 -32.00 32.00 0.00 32.00 0.00 32.00 0.00 64.00 64.00 32.00 0.00 -32.00 32.00 32.00 -160.00 97.00 -129.00 225.00 -32.00 129.00 32.00 32.00 32.00 0.00 -32.00 32.00 -97.00 128.00 -64.00 97.00 -32.00 129.00 0.00 32.00 32.00 0.00 -32.00 32.00 -64.00 96.00 -32.00 97.00 0.00 128.00 96.00 0.00 0.00 33.00 32.00 32.00 -32.00 0.00 -64.00 64.00 0.00 32.00 32.00 0.00 -32.00 64.00 -65.00 33.00 -64.00 64.00 32.00 32.00 -32.00 32.00 -32.00 0.00 -97.00 65.00 0.00 64.00 33.00 32.00 -65.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -64.00 32.00 -258.00 97.00 -418.00 225.00 -386.00 257.00 -514.00 322.00 -482.00 385.00 -129.00 129.00 -64.00 32.00 -225.00 193.00 -225.00 225.00 -386.00 418.00 -32.00 32.00 -611.00 708.00 -322.00 450.00 -96.00 0.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 65.00 -32.00 -32.00 0.00 0.00 -33.00 0.00 33.00 -33.00 -33.00 0.00 -32.00 -32.00 -32.00 -64.00 32.00 -32.00 0.00 -97.00 -64.00 -32.00 0.00 -64.00 0.00 0.00 -32.00 -32.00 32.00 0.00 -32.00 -32.00 -32.00 -32.00 0.00 -33.00 0.00 -32.00 0.00 0.00 -33.00 32.00 -32.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 -65.00 -65.00 0.00 -96.00 -32.00 -64.00 -32.00 -65.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -64.00 0.00 -33.00 32.00 -32.00 64.00 -64.00 32.00 -64.00 33.00 -32.00 -33.00 -129.00 65.00 -32.00 32.00 -97.00 0.00 0.00 32.00 -32.00 0.00 -96.00 32.00 -65.00 0.00 -32.00 0.00 -32.00 0.00 32.00 129.00 32.00 0.00 65.00 64.00 64.00 64.00 64.00 0.00 129.00 193.00 -64.00 -32.00 -65.00 0.00 32.00 -32.00 0.00 -32.00 -96.00 0.00 32.00 -32.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 -32.00 -33.00 -65.00 0.00 -32.00 -32.00 32.00 0.00 -64.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 32.00 0.00 64.00 -32.00 0.00 0.00 -32.00 -33.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -97.00 33.00 0.00 -65.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 96.00 -64.00 33.00 0.00 -33.00 -32.00 -32.00 0.00 32.00 -33.00 -32.00 0.00 97.00 -32.00 0.00 -32.00 -32.00 -32.00 -65.00 0.00 65.00 -64.00 0.00 32.00 64.00 0.00 -32.00 32.00 64.00 0.00 0.00 32.00 96.00 0.00 -32.00 64.00 -32.00 0.00 0.00 33.00 0.00 32.00 97.00 -65.00 -33.00 65.00 65.00 -32.00 -32.00 -33.00 32.00 -32.00 -32.00 32.00 0.00 -96.00 0.00 -32.00 32.00 0.00 -32.00 0.00 0.00 -64.00 -33.00 0.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 65.00 -32.00 64.00 0.00 -32.00 0.00 0.00 32.00 -64.00 32.00 0.00 32.00 64.00 0.00 -32.00 0.00 32.00 33.00 0.00 32.00 64.00 -65.00 0.00 65.00 32.00 -32.00 33.00 0.00 32.00 0.00 32.00 -33.00 32.00 33.00 64.00 0.00 -32.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 65.00 0.00 0.00 -32.00 0.00 -65.00 -33.00 -32.00 97.00 0.00 32.00 0.00 0.00 32.00 32.00 -32.00 -32.00 -64.00 32.00 0.00 64.00 0.00 33.00 0.00 -33.00 0.00 0.00 -64.00 33.00 -33.00 -33.00 0.00 0.00 -64.00 65.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 0.00 32.00 0.00 -32.00 -32.00 64.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -33.00 0.00 -96.00 32.00 0.00 32.00 0.00 -32.00 -96.00 0.00 225.00 -97.00 0.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 0.00 -97.00 32.00 65.00 -64.00 0.00 -65.00 32.00 -32.00 32.00 32.00 0.00 -64.00 0.00 -32.00 32.00 32.00 64.00 -32.00 -64.00 -32.00 -32.00 -33.00 -64.00 -32.00 0.00 -96.00 32.00 0.00 0.00 -65.00 32.00 0.00 -96.00 0.00 -33.00 -32.00 65.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -33.00 32.00 0.00 0.00 -32.00 32.00 0.00 -64.00 0.00 -32.00 32.00 0.00 -64.00 -97.00 32.00 33.00 -32.00 32.00 -32.00 0.00 -32.00 32.00 0.00 0.00 -32.00 -64.00 32.00 32.00 -129.00 -32.00 0.00 0.00 -32.00 0.00 -96.00 64.00 32.00 0.00 -65.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 32.00 0.00 -32.00 64.00 32.00 32.00 -32.00 0.00 -33.00 32.00 0.00 -64.00 -32.00 0.00 -64.00 32.00 -64.00 65.00 0.00 32.00 -33.00 0.00 33.00 32.00 32.00 32.00 0.00 32.00 -32.00 32.00 32.00 -64.00 96.00 32.00 0.00 0.00 32.00 65.00 -32.00 -33.00 -32.00 33.00 -64.00 0.00 -65.00 0.00 -32.00 64.00 0.00 -32.00 0.00 96.00 0.00 0.00 65.00 32.00 0.00 0.00 -33.00 0.00 -32.00 33.00 -32.00 64.00 0.00 -32.00 -32.00 -32.00 0.00 0.00 -64.00 -33.00 0.00 0.00 -32.00 33.00 0.00 32.00 -33.00 64.00 -32.00 -32.00 0.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 -65.00 32.00 0.00 33.00 -32.00 0.00 64.00 32.00 33.00 32.00 0.00 64.00 -65.00 0.00 65.00 129.00 -33.00 64.00 0.00 32.00 0.00 0.00 33.00 32.00 0.00 33.00 -33.00 32.00 -32.00 -32.00 -64.00 -65.00 0.00 0.00 -64.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 -96.00 -65.00 -32.00 -32.00 0.00 32.00 -65.00 65.00 -64.00 -65.00 -64.00 33.00 -32.00 -33.00 0.00 0.00 -33.00 -96.00 33.00 -32.00 -33.00 32.00 -32.00 0.00 -128.00 -32.00 0.00 0.00 32.00 -64.00 32.00 32.00 0.00 -32.00 64.00 32.00 32.00 -32.00 33.00 -33.00 -33.00 -32.00 -32.00 -32.00 0.00 -32.00 -96.00 -32.00 0.00 0.00 64.00 32.00 32.00 -64.00 -32.00 -65.00 97.00 -32.00 -33.00 32.00 -32.00 -128.00 0.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 -65.00 -33.00 97.00 -32.00 32.00 0.00 -32.00 0.00 -64.00 -32.00 -33.00 32.00 -64.00 -32.00 0.00 32.00 32.00 65.00 -32.00 0.00 -32.00 32.00 -32.00 0.00 -97.00 -65.00 -32.00 0.00 -32.00 33.00 32.00 32.00 32.00 32.00 -64.00 32.00 -32.00 -64.00 -32.00 -65.00 -32.00 0.00 -33.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -64.00 33.00 -65.00 -33.00 -32.00 33.00 -32.00 64.00 -32.00 32.00 -129.00 0.00 -32.00 0.00 -64.00 -32.00 -65.00 64.00 -64.00 -64.00 -64.00 0.00 0.00 -32.00 32.00 -65.00 32.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 -65.00 32.00 -32.00 65.00 -32.00 0.00 64.00 96.00 33.00 64.00 -97.00 33.00 -32.00 -33.00 0.00 -96.00 -64.00 -97.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 -32.00 0.00 -64.00 65.00 -32.00 32.00 -33.00 -32.00 -64.00 -129.00 0.00 -32.00 -96.00 64.00 32.00 32.00 32.00 0.00 0.00 32.00 -97.00 33.00 -64.00 -33.00 -32.00 0.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 -65.00 0.00 -32.00 32.00 -32.00 0.00 32.00 97.00 -32.00 0.00 -32.00 32.00 0.00 -65.00 0.00 -128.00 -32.00 -32.00 -32.00 0.00 -33.00 32.00 -32.00 96.00 -32.00 0.00 -32.00 0.00 -32.00 -64.00 -129.00 0.00 -64.00 0.00 -32.00 -32.00 -65.00 -64.00 -64.00 0.00 -129.00 0.00 -96.00 -33.00 -32.00 0.00 -32.00 0.00 0.00 97.00 -32.00 0.00 -33.00 0.00 -32.00 -32.00 -64.00 -32.00 -64.00 -97.00 -65.00 -64.00 -32.00 0.00 -64.00 64.00 -64.00 0.00 -33.00 -64.00 33.00 -65.00 -97.00 -96.00 -96.00 -32.00 32.00 -97.00 -65.00 -96.00 -32.00 -32.00 -64.00 -32.00 0.00 -97.00 -32.00 0.00 -64.00 0.00 -161.00 -96.00 -32.00 0.00 0.00 -97.00 0.00 -96.00 -32.00 -32.00 0.00 -32.00 -33.00 -33.00 -32.00 65.00 -64.00 -32.00 0.00 -33.00 32.00 -64.00 -32.00 -96.00 32.00 -65.00 -32.00 0.00 0.00 -32.00 -129.00 32.00 0.00 -32.00 -64.00 -96.00 -32.00 0.00 -97.00 96.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 -97.00 -32.00 -64.00 -32.00 -32.00 -97.00 -32.00 32.00 -32.00 65.00 -32.00 32.00 -65.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 -64.00 -65.00 -161.00 -32.00 32.00 -32.00 -64.00 -64.00 32.00 -65.00 -32.00 -32.00 -65.00 0.00 -128.00 -64.00 -32.00 -64.00 -33.00 -32.00 -32.00 32.00 -32.00 96.00 -64.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 -32.00 0.00 -97.00 -97.00 -64.00 -64.00 -64.00 0.00 -65.00 0.00 -64.00 0.00 -32.00 -97.00 0.00 -32.00 -32.00 32.00 -97.00 -32.00 -32.00 -64.00 -32.00 -32.00 0.00 -97.00 32.00 -32.00 0.00 0.00 -32.00 -32.00 -97.00 0.00 -32.00 -96.00 0.00 -97.00 -64.00 -64.00 -64.00 -97.00 0.00 -64.00 -32.00 -32.00 32.00 -32.00 32.00 -32.00 -32.00 -33.00 -65.00 -96.00 -64.00 0.00 -64.00 -32.00 -65.00 -64.00 33.00 -97.00 -33.00 0.00 -64.00 32.00 -32.00 -32.00 -32.00 0.00 -64.00 0.00 -33.00 -32.00 0.00 -64.00 -32.00 -97.00 65.00 -64.00 -65.00 -64.00 -32.00 32.00 -128.00 0.00 -33.00 -65.00 -32.00 -64.00 32.00 -32.00 33.00 -32.00 32.00 -32.00 64.00 -65.00 0.00 0.00 -32.00 0.00 -64.00 -96.00 -97.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -33.00 -32.00 0.00 -129.00 -32.00 0.00 -32.00 -64.00 -96.00 0.00 -129.00 32.00 -64.00 -32.00 0.00 32.00 -32.00 0.00 0.00 32.00 -33.00 64.00 -32.00 0.00 -32.00 -32.00 -32.00 -64.00 32.00 -129.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 0.00 -65.00 96.00 -64.00 0.00 -32.00 -32.00 64.00 -193.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -64.00 0.00 0.00 97.00 -33.00 32.00 -32.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -65.00 32.00 -64.00 0.00 -32.00 -64.00 -32.00 -65.00 0.00 -32.00 32.00 -32.00 96.00 -32.00 33.00 -32.00 0.00 -65.00 -65.00 -64.00 -32.00 0.00 -32.00 -161.00 32.00 -64.00 0.00 0.00 64.00 64.00 65.00 0.00 32.00 0.00 32.00 -32.00 0.00 -32.00 0.00 -96.00 -96.00 -65.00 32.00 -64.00 32.00 -32.00 -32.00 64.00 -161.00 0.00 -32.00 -64.00 0.00 -97.00 0.00 0.00 32.00 -32.00 32.00 32.00 97.00 0.00 32.00 -64.00 0.00 -64.00 -97.00 0.00 -160.00 -32.00 -33.00 -33.00 0.00 -64.00 33.00 -64.00 32.00 -64.00 0.00 -33.00 -32.00 129.00 -97.00 0.00 -32.00 0.00 -32.00 -96.00 -97.00 -97.00 0.00 -64.00 0.00 -65.00 -32.00 0.00 -32.00 0.00 -32.00 33.00 0.00 32.00 0.00 161.00 0.00 32.00 0.00 0.00 -65.00 -65.00 -32.00 -96.00 0.00 -64.00 32.00 -33.00 -32.00 -64.00 -32.00 0.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -65.00 -32.00 0.00 -96.00 65.00 -33.00 0.00 -32.00 0.00 -96.00 -32.00 -64.00 32.00 -65.00 0.00 -32.00 -32.00 0.00 -65.00 0.00 -64.00 0.00 -32.00 -64.00 -32.00 -32.00 32.00 -65.00 0.00 -64.00 32.00 -32.00 0.00 -32.00 0.00 32.00 -161.00 -32.00 -32.00 -32.00 0.00 -33.00 32.00 -64.00 65.00 -32.00 96.00 -32.00 64.00 -32.00 32.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 -64.00 -96.00 -32.00 0.00 -129.00 -32.00 0.00 -32.00 65.00 -65.00 96.00 -32.00 32.00 -32.00 -96.00 -64.00 -32.00 32.00 -65.00 0.00 -96.00 0.00 -32.00 0.00 0.00 32.00 0.00 64.00 32.00 65.00 32.00 64.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -65.00 -64.00 -64.00 -32.00 -64.00 -65.00 -32.00 0.00 -65.00 65.00 -64.00 32.00 -32.00 -97.00 32.00 -128.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 0.00 32.00 33.00 128.00 -33.00 33.00 -32.00 0.00 -32.00 -33.00 -32.00 -32.00 -96.00 -96.00 0.00 -65.00 0.00 -32.00 32.00 -96.00 0.00 -32.00 -32.00 0.00 -33.00 0.00 -160.00 96.00 0.00 32.00 0.00 32.00 0.00 65.00 0.00 32.00 -97.00 0.00 -161.00 -32.00 -64.00 -97.00 -64.00 32.00 -32.00 0.00 -97.00 0.00 -32.00 33.00 -96.00 32.00 -33.00 32.00 -32.00 0.00 -64.00 -32.00 -64.00 -97.00 -32.00 0.00 -33.00 0.00 -32.00 32.00 0.00 97.00 -64.00 64.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 -97.00 -33.00 -64.00 -32.00 0.00 -32.00 32.00 -64.00 65.00 -32.00 32.00 0.00 -32.00 -65.00 -33.00 0.00 -32.00 32.00 -96.00 0.00 -32.00 -32.00 0.00 0.00 -33.00 -32.00 0.00 -64.00 0.00 -32.00 -32.00 -33.00 0.00 -64.00 0.00 -32.00 0.00 -64.00 32.00 -32.00 0.00 -33.00 0.00 0.00 -32.00 0.00 -128.00 -32.00 -32.00 -32.00 0.00 -128.00 64.00 0.00 32.00 -65.00 32.00 -96.00 32.00 -32.00 0.00 -33.00 -32.00 0.00 -128.00 -96.00 -33.00 -32.00 0.00 -32.00 97.00 0.00 161.00 -32.00 32.00 -65.00 -32.00 -32.00 -33.00 -32.00 0.00 0.00 -96.00 32.00 -32.00 64.00 -97.00 0.00 -64.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -129.00 96.00 -32.00 0.00 -32.00 -32.00 0.00 -96.00 96.00 -129.00 33.00 -64.00 -33.00 -32.00 -32.00 0.00 -96.00 0.00 -32.00 0.00 -97.00 96.00 0.00 32.00 0.00 32.00 32.00 97.00 0.00 32.00 0.00 64.00 -193.00 65.00 -96.00 32.00 -32.00 0.00 0.00 -32.00 -64.00 -129.00 -33.00 -32.00 -32.00 32.00 -32.00 0.00 0.00 32.00 -32.00 161.00 -32.00 32.00 -65.00 0.00 -160.00 -96.00 -32.00 0.00 -65.00 32.00 -193.00 96.00 -64.00 97.00 -32.00 0.00 -32.00 0.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 96.00 -161.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -33.00 -96.00 0.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 -64.00 -32.00 -32.00 -33.00 32.00 -32.00 0.00 -64.00 64.00 -32.00 97.00 -32.00 64.00 -225.00 64.00 -65.00 -32.00 -32.00 -64.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 0.00 64.00 0.00 32.00 0.00 32.00 64.00 65.00 0.00 32.00 0.00 64.00 0.00 32.00 -64.00 0.00 -33.00 0.00 -64.00 -32.00 -96.00 -96.00 -32.00 0.00 -65.00 0.00 -128.00 64.00 -33.00 0.00 -64.00 0.00 -32.00 0.00 -64.00 161.00 -33.00 0.00 -32.00 -32.00 0.00 -97.00 0.00 -64.00 -32.00 -32.00 0.00 -32.00 -64.00 -33.00 -32.00 0.00 -65.00 0.00 -32.00 33.00 -64.00 32.00 -32.00 32.00 -32.00 0.00 -65.00 32.00 -64.00 0.00 -64.00 -161.00 -65.00 -32.00 -128.00 97.00 -32.00 32.00 -33.00 0.00 -32.00 0.00 -32.00 -32.00zm24919.00 1607.00l0.00 -32.00 0.00 32.00zm0.00 997.00l0.00 -32.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -33.00 0.00 -32.00 64.00 -96.00 65.00 -32.00 96.00 32.00 -32.00 -161.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 -32.00 -64.00 -32.00 0.00 -33.00 64.00 -32.00 33.00 -32.00 32.00 -32.00 96.00 32.00 0.00 -32.00 -32.00 -32.00 32.00 -32.00 32.00 -33.00 -64.00 -32.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 64.00 -32.00 0.00 -32.00 -32.00 -33.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -64.00 32.00 -32.00 32.00 0.00 0.00 -32.00 32.00 0.00 0.00 -65.00 -96.00 0.00 -33.00 32.00 33.00 -32.00 64.00 -32.00 32.00 -64.00 96.00 32.00 97.00 0.00 32.00 -32.00 129.00 -32.00 96.00 -33.00 0.00 -64.00 -32.00 -32.00 32.00 64.00 -32.00 -96.00 0.00 -32.00 32.00 32.00 32.00 -32.00 33.00 -33.00 0.00 33.00 0.00 96.00 32.00 0.00 32.00 97.00 32.00 64.00 96.00 32.00 33.00 -64.00 32.00 32.00 0.00 32.00 -65.00 32.00 0.00 65.00 0.00 96.00 -96.00 32.00 -96.00 161.00 -65.00 96.00 0.00 97.00 0.00 32.00 0.00 32.00 32.00 -32.00 33.00 0.00 -33.00 64.00 0.00 32.00 -32.00 33.00 -32.00 64.00 0.00 32.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -97.00 97.00 -32.00 64.00 -32.00 129.00 -97.00 128.00 0.00 32.00 -32.00 65.00 0.00 64.00 32.00 0.00 0.00 32.00 33.00 0.00 32.00 0.00 0.00 32.00 64.00 0.00 0.00 33.00 -32.00 0.00 -32.00 32.00 0.00 32.00 32.00 0.00 -32.00 32.00 -65.00 32.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -64.00 32.00 -32.00 32.00 -32.00 129.00 0.00 32.00 -97.00 64.00 0.00 -32.00 -32.00 0.00 32.00 -64.00 32.00 -32.00 -64.00 -65.00 32.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 -33.00 64.00 0.00 32.00 -64.00 32.00 -32.00 -32.00 -129.00 64.00 -96.00 -32.00 0.00 -32.00 0.00 0.00 32.00 -32.00 0.00zm32.00 -1093.00l-32.00 0.00 32.00 0.00 0.00 -32.00 0.00 32.00 0.00 32.00 0.00 -32.00z\"\n          },\n          pb: {\n            name: \"PB\",\n            path: \"M172553.00 61123.00l32.00 -32.00 129.00 -32.00 0.00 -33.00 32.00 0.00 65.00 0.00 0.00 -64.00 64.00 0.00 64.00 -32.00 32.00 -32.00 0.00 -32.00 33.00 -32.00 0.00 -33.00 -33.00 -32.00 65.00 -64.00 32.00 -32.00 32.00 -32.00 64.00 -33.00 0.00 -32.00 -32.00 -32.00 64.00 0.00 65.00 32.00 0.00 -64.00 -65.00 -32.00 -32.00 -65.00 -64.00 0.00 0.00 -32.00 0.00 -32.00 -32.00 -32.00 0.00 -64.00 -32.00 -32.00 -32.00 -97.00 0.00 -32.00 32.00 -96.00 32.00 0.00 -32.00 0.00 64.00 -33.00 32.00 -32.00 0.00 -64.00 -64.00 -32.00 0.00 -65.00 32.00 -32.00 32.00 -32.00 64.00 -64.00 0.00 -64.00 -64.00 -65.00 64.00 -32.00 0.00 -32.00 33.00 -32.00 0.00 -32.00 64.00 -97.00 -32.00 -32.00 32.00 -64.00 64.00 -65.00 129.00 -128.00 0.00 -97.00 64.00 -32.00 0.00 -32.00 0.00 -32.00 161.00 -129.00 32.00 0.00 -64.00 -64.00 -65.00 32.00 -32.00 0.00 -128.00 0.00 -33.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 32.00 0.00 32.00 -32.00 0.00 -33.00 65.00 0.00 0.00 -64.00 32.00 0.00 32.00 -32.00 96.00 0.00 -32.00 -32.00 32.00 -32.00 33.00 0.00 64.00 32.00 32.00 0.00 32.00 32.00 65.00 -64.00 32.00 0.00 64.00 -32.00 64.00 -33.00 -64.00 97.00 -64.00 96.00 32.00 65.00 -32.00 96.00 96.00 -32.00 64.00 0.00 33.00 32.00 96.00 64.00 96.00 -32.00 33.00 0.00 32.00 32.00 32.00 33.00 32.00 64.00 32.00 32.00 0.00 64.00 32.00 0.00 33.00 33.00 32.00 0.00 32.00 0.00 32.00 0.00 32.00 0.00 65.00 64.00 32.00 64.00 96.00 0.00 0.00 97.00 161.00 -97.00 32.00 0.00 64.00 -32.00 32.00 32.00 129.00 0.00 64.00 64.00 129.00 0.00 64.00 -32.00 65.00 129.00 64.00 0.00 32.00 0.00 64.00 -64.00 33.00 -65.00 64.00 -32.00 32.00 -96.00 32.00 -32.00 32.00 0.00 0.00 -33.00 32.00 0.00 0.00 -64.00 33.00 0.00 0.00 64.00 64.00 33.00 -32.00 64.00 32.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 -32.00 -97.00 65.00 -64.00 -33.00 -32.00 161.00 0.00 32.00 -32.00 32.00 -65.00 33.00 -32.00 0.00 32.00 64.00 65.00 64.00 0.00 65.00 -33.00 64.00 -64.00 64.00 0.00 32.00 -32.00 -32.00 -32.00 0.00 -129.00 129.00 64.00 32.00 -32.00 64.00 -32.00 0.00 -32.00 32.00 -64.00 -32.00 -32.00 32.00 -65.00 65.00 -32.00 32.00 0.00 -32.00 -32.00 64.00 -96.00 64.00 0.00 97.00 0.00 96.00 0.00 -32.00 0.00 -32.00 -65.00 0.00 -64.00 32.00 -32.00 -64.00 -65.00 64.00 -32.00 -64.00 -32.00 64.00 -64.00 32.00 0.00 0.00 -65.00 32.00 -32.00 161.00 -96.00 32.00 0.00 32.00 32.00 97.00 32.00 161.00 0.00 32.00 -64.00 96.00 0.00 97.00 0.00 64.00 -64.00 64.00 -33.00 65.00 33.00 96.00 0.00 0.00 -65.00 64.00 0.00 97.00 0.00 0.00 -32.00 64.00 0.00 32.00 32.00 129.00 -32.00 0.00 -128.00 32.00 -33.00 97.00 0.00 96.00 0.00 64.00 0.00 65.00 -128.00 32.00 0.00 96.00 0.00 97.00 -97.00 128.00 -32.00 32.00 -32.00 65.00 32.00 64.00 0.00 32.00 -64.00 32.00 -64.00 33.00 -33.00 32.00 0.00 64.00 33.00 32.00 64.00 97.00 -32.00 64.00 32.00 96.00 0.00 -32.00 32.00 32.00 161.00 0.00 64.00 32.00 64.00 -64.00 161.00 64.00 32.00 33.00 0.00 -33.00 97.00 -32.00 32.00 -96.00 32.00 0.00 64.00 -64.00 32.00 -97.00 33.00 -32.00 32.00 -32.00 0.00 -64.00 64.00 -97.00 97.00 0.00 160.00 -64.00 0.00 -97.00 -32.00 -64.00 32.00 -32.00 97.00 -32.00 32.00 -129.00 64.00 -32.00 0.00 -32.00 97.00 0.00 128.00 -65.00 65.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 64.00 32.00 65.00 33.00 32.00 -33.00 96.00 -32.00 290.00 -96.00 96.00 -97.00 0.00 -32.00 0.00 -96.00 0.00 -32.00 0.00 -65.00 97.00 0.00 32.00 32.00 32.00 -32.00 129.00 0.00 64.00 32.00 0.00 0.00 64.00 0.00 129.00 33.00 64.00 -33.00 64.00 33.00 33.00 -65.00 160.00 354.00 -64.00 64.00 0.00 258.00 32.00 128.00 -64.00 129.00 32.00 -32.00 64.00 64.00 65.00 64.00 32.00 0.00 128.00 -32.00 65.00 64.00 64.00 0.00 32.00 33.00 32.00 0.00 65.00 96.00 64.00 193.00 0.00 193.00 -129.00 96.00 -128.00 32.00 0.00 226.00 -65.00 64.00 -32.00 96.00 -32.00 32.00 -32.00 161.00 -129.00 64.00 0.00 33.00 65.00 32.00 96.00 0.00 64.00 32.00 65.00 0.00 32.00 64.00 0.00 -32.00 32.00 0.00 32.00 97.00 -96.00 128.00 -65.00 32.00 0.00 161.00 -64.00 161.00 -64.00 321.00 289.00 0.00 257.00 193.00 -32.00 -64.00 225.00 -64.00 97.00 0.00 64.00 -32.00 96.00 96.00 161.00 129.00 65.00 32.00 0.00 96.00 -258.00 161.00 0.00 96.00 32.00 97.00 0.00 32.00 0.00 193.00 -289.00 0.00 -32.00 -32.00 -64.00 32.00 -32.00 32.00 -33.00 65.00 0.00 64.00 -64.00 96.00 -32.00 32.00 -32.00 33.00 -193.00 -33.00 -97.00 -32.00 -32.00 -32.00 -32.00 -32.00 0.00 0.00 -32.00 -32.00 0.00 -64.00 -32.00 -65.00 -97.00 65.00 -64.00 32.00 -225.00 96.00 -193.00 -32.00 -64.00 64.00 -32.00 32.00 32.00 161.00 64.00 64.00 96.00 33.00 -32.00 64.00 32.00 0.00 -32.00 -32.00 -128.00 0.00 -193.00 -32.00 -32.00 -33.00 0.00 -64.00 -33.00 -32.00 -32.00 -32.00 -96.00 -64.00 -32.00 -97.00 -65.00 -32.00 0.00 0.00 -96.00 -32.00 -96.00 0.00 -65.00 32.00 -64.00 96.00 -161.00 0.00 -64.00 33.00 -161.00 192.00 32.00 129.00 0.00 161.00 -321.00 161.00 64.00 96.00 -32.00 161.00 -97.00 64.00 65.00 64.00 64.00 0.00 32.00 0.00 161.00 -64.00 96.00 0.00 32.00 0.00 33.00 0.00 64.00 32.00 0.00 97.00 32.00 64.00 32.00 32.00 161.00 129.00 -32.00 32.00 0.00 193.00 0.00 129.00 -32.00 64.00 0.00 32.00 0.00 64.00 0.00 32.00 -32.00 33.00 0.00 64.00 -33.00 32.00 -32.00 32.00 0.00 0.00 32.00 32.00 0.00 0.00 -32.00 65.00 129.00 64.00 64.00 129.00 32.00 0.00 65.00 0.00 32.00 32.00 32.00 128.00 32.00 65.00 0.00 96.00 32.00 418.00 -32.00 354.00 0.00 32.00 -32.00 225.00 -32.00 32.00 0.00 32.00 0.00 32.00 -32.00 97.00 -97.00 64.00 32.00 32.00 0.00 0.00 -32.00 33.00 0.00 96.00 32.00 64.00 33.00 32.00 0.00 65.00 0.00 64.00 64.00 0.00 32.00 32.00 32.00 97.00 0.00 0.00 32.00 32.00 0.00 32.00 -64.00 32.00 0.00 32.00 0.00 32.00 0.00 0.00 -32.00 33.00 32.00 32.00 0.00 64.00 0.00 32.00 32.00 0.00 -32.00 32.00 32.00 33.00 0.00 32.00 0.00 32.00 -32.00 32.00 0.00 64.00 32.00 32.00 -32.00 0.00 32.00 65.00 0.00 96.00 32.00 32.00 0.00 97.00 65.00 64.00 32.00 97.00 128.00 64.00 32.00 257.00 0.00 97.00 -64.00 128.00 0.00 32.00 -64.00 32.00 0.00 33.00 96.00 32.00 65.00 32.00 0.00 129.00 32.00 64.00 -32.00 32.00 0.00 64.00 -97.00 65.00 0.00 32.00 -128.00 32.00 0.00 32.00 -33.00 32.00 0.00 129.00 129.00 32.00 0.00 96.00 -32.00 65.00 -64.00 32.00 0.00 32.00 0.00 97.00 -33.00 64.00 -32.00 32.00 -32.00 32.00 32.00 0.00 547.00 0.00 161.00 65.00 160.00 32.00 65.00 64.00 32.00 -32.00 32.00 0.00 64.00 32.00 65.00 -32.00 32.00 32.00 32.00 -32.00 96.00 32.00 0.00 0.00 65.00 -32.00 0.00 64.00 0.00 32.00 0.00 0.00 96.00 0.00 161.00 65.00 161.00 0.00 64.00 96.00 96.00 64.00 33.00 65.00 32.00 -33.00 64.00 -32.00 64.00 0.00 32.00 32.00 97.00 65.00 64.00 -32.00 32.00 -65.00 33.00 32.00 0.00 0.00 32.00 33.00 0.00 0.00 -32.00 32.00 0.00 0.00 32.00 0.00 64.00 0.00 32.00 -32.00 0.00 0.00 32.00 -33.00 0.00 0.00 -32.00 -32.00 -32.00 0.00 32.00 32.00 97.00 33.00 0.00 32.00 -65.00 64.00 -64.00 0.00 -96.00 -32.00 -65.00 64.00 0.00 0.00 193.00 0.00 129.00 -64.00 32.00 0.00 64.00 32.00 65.00 32.00 32.00 -32.00 128.00 64.00 65.00 0.00 96.00 65.00 64.00 64.00 0.00 0.00 33.00 0.00 225.00 -32.00 64.00 -32.00 129.00 32.00 128.00 0.00 97.00 0.00 64.00 32.00 32.00 -32.00 64.00 32.00 65.00 -32.00 128.00 32.00 65.00 -32.00 64.00 -32.00 96.00 0.00 290.00 0.00 32.00 32.00 32.00 -32.00 32.00 -32.00 32.00 32.00 129.00 -65.00 64.00 -32.00 97.00 -32.00 0.00 -32.00 0.00 -64.00 -32.00 -65.00 32.00 -96.00 -65.00 -32.00 65.00 -32.00 0.00 0.00 -32.00 -33.00 0.00 -32.00 0.00 -32.00 -33.00 -32.00 -32.00 -96.00 65.00 -33.00 0.00 -64.00 -97.00 -64.00 -64.00 0.00 -32.00 -32.00 -65.00 32.00 -64.00 0.00 -64.00 -97.00 -65.00 -128.00 -96.00 -65.00 -64.00 -96.00 -65.00 -32.00 -32.00 -32.00 0.00 -33.00 32.00 -64.00 33.00 -96.00 -33.00 -32.00 0.00 -97.00 -32.00 -32.00 0.00 -64.00 -32.00 -65.00 32.00 -32.00 0.00 -64.00 -32.00 -129.00 -32.00 -64.00 -32.00 -193.00 64.00 -96.00 97.00 -33.00 0.00 -32.00 0.00 -32.00 0.00 -64.00 0.00 32.00 32.00 0.00 32.00 -64.00 0.00 -33.00 0.00 0.00 64.00 0.00 32.00 -64.00 0.00 -32.00 0.00 -32.00 32.00 -129.00 65.00 -32.00 64.00 -32.00 0.00 -64.00 -32.00 -33.00 -64.00 -64.00 0.00 -128.00 -33.00 -97.00 33.00 -32.00 160.00 0.00 65.00 32.00 64.00 -32.00 32.00 -32.00 32.00 -32.00 32.00 0.00 97.00 -33.00 96.00 -32.00 33.00 0.00 32.00 32.00 32.00 65.00 -32.00 -32.00 64.00 0.00 32.00 -33.00 0.00 -32.00 64.00 97.00 129.00 -65.00 0.00 -32.00 32.00 -128.00 32.00 -65.00 -32.00 -64.00 0.00 -32.00 0.00 -64.00 0.00 -33.00 32.00 0.00 33.00 -64.00 64.00 -32.00 32.00 -64.00 64.00 -32.00 0.00 -97.00 0.00 -32.00 0.00 -32.00 0.00 -32.00 -32.00 -65.00 32.00 0.00 32.00 -32.00 0.00 -96.00 33.00 -32.00 0.00 0.00 32.00 -33.00 32.00 -32.00 0.00 -96.00 64.00 -65.00 0.00 -96.00 65.00 -32.00 0.00 -32.00 0.00 -65.00 -33.00 -96.00 33.00 -64.00 0.00 -33.00 32.00 0.00 32.00 0.00 64.00 -96.00 64.00 -161.00 -32.00 -32.00 32.00 -64.00 0.00 -64.00 0.00 -65.00 65.00 -32.00 0.00 -32.00 64.00 -32.00 -32.00 -97.00 0.00 -64.00 -64.00 -32.00 0.00 -32.00 32.00 -97.00 -97.00 -161.00 -32.00 -64.00 32.00 -32.00 0.00 -96.00 0.00 -161.00 0.00 -97.00 32.00 -32.00 -96.00 -32.00 -32.00 -161.00 128.00 -32.00 33.00 0.00 32.00 64.00 32.00 0.00 32.00 -32.00 64.00 -64.00 0.00 -32.00 0.00 -97.00 -64.00 -32.00 -32.00 -32.00 0.00 -257.00 0.00 -32.00 -32.00 -65.00 32.00 -96.00 0.00 -64.00 32.00 -65.00 0.00 -32.00 32.00 0.00 65.00 0.00 160.00 -32.00 32.00 32.00 33.00 0.00 64.00 -32.00 0.00 -32.00 64.00 0.00 32.00 -97.00 0.00 -64.00 33.00 -32.00 -33.00 -64.00 33.00 -193.00 -97.00 -65.00 -32.00 -64.00 32.00 -32.00 32.00 -32.00 32.00 32.00 97.00 -32.00 64.00 32.00 32.00 -32.00 32.00 -32.00 -32.00 -129.00 -32.00 -32.00 97.00 0.00 64.00 -32.00 32.00 0.00 129.00 0.00 193.00 -97.00 64.00 -32.00 32.00 0.00 32.00 32.00 0.00 0.00 64.00 64.00 0.00 33.00 33.00 0.00 64.00 -65.00 32.00 -128.00 32.00 -97.00 32.00 -32.00 33.00 32.00 96.00 -96.00 0.00 -64.00 -32.00 0.00 32.00 32.00 32.00 -32.00 0.00 0.00 32.00 -97.00 0.00 -32.00 33.00 -32.00 64.00 -32.00 32.00 -65.00 -32.00 -64.00 0.00 -64.00 0.00 -33.00 64.00 -225.00 97.00 -96.00 64.00 -96.00 0.00 -33.00 64.00 -96.00 97.00 -97.00 32.00 0.00 64.00 -32.00 32.00 -32.00 0.00 -96.00 0.00 -65.00 32.00 -128.00 -64.00 -97.00 -129.00 -32.00 0.00 -193.00 -32.00 -32.00 -96.00 -129.00 -129.00 0.00 -64.00 0.00 -64.00 0.00 -65.00 -96.00 33.00 -64.00 -33.00 -33.00 -32.00 0.00 -32.00 65.00 -32.00 -32.00 -64.00 32.00 -65.00 32.00 0.00 0.00 -32.00 -32.00 -96.00 32.00 -65.00 -64.00 -96.00 0.00 -64.00 32.00 -97.00 0.00 -64.00 0.00 -64.00 -32.00 -33.00 -33.00 -32.00 -64.00 0.00 0.00 -32.00 -32.00 0.00 -32.00 -32.00 0.00 -97.00 -64.00 -32.00 -65.00 32.00 0.00 65.00 -64.00 0.00 0.00 -32.00 -32.00 32.00 -32.00 -32.00 -97.00 0.00 -64.00 32.00 -64.00 -32.00 -65.00 0.00 -64.00 0.00 -96.00 64.00 0.00 -32.00 -65.00 0.00 32.00 -97.00 0.00 -32.00 33.00 0.00 96.00 -32.00 32.00 -32.00 32.00 0.00 0.00 -32.00 -32.00 -32.00 32.00 -33.00 -32.00 0.00 -32.00 0.00 0.00 -32.00 64.00 0.00 0.00 -32.00 97.00 0.00 193.00 -129.00 0.00 -64.00 -32.00 -32.00 32.00 -32.00 96.00 -32.00 0.00 -97.00 -64.00 0.00 -32.00 -32.00 64.00 -32.00 32.00 -32.00 32.00 32.00 97.00 -64.00 32.00 -33.00 32.00 0.00 32.00 33.00 32.00 32.00 0.00 -32.00 32.00 -33.00 33.00 0.00 32.00 -64.00 -32.00 0.00 0.00 -32.00 96.00 -129.00 -64.00 -64.00 0.00 -96.00 -65.00 -65.00 -32.00 -32.00 -32.00 -64.00 0.00 -32.00 -32.00 -32.00 -64.00 -65.00 0.00 -64.00 0.00 -32.00 0.00 -32.00 64.00 -33.00 32.00 -96.00 32.00 -96.00 65.00 -65.00 96.00 -64.00 64.00 -97.00 97.00 0.00 64.00 -64.00 97.00 0.00 64.00 -64.00 129.00 -32.00 0.00 -32.00 96.00 -33.00 32.00 33.00 64.00 -65.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 0.00 -32.00 -64.00 -32.00 -32.00 -33.00 -32.00 -64.00 32.00 -32.00 0.00 -32.00 -64.00 0.00 64.00 -97.00 -64.00 -64.00 -97.00 -64.00 -32.00 0.00 0.00 32.00 -64.00 0.00 -32.00 -64.00 0.00 -32.00 -65.00 -33.00 -96.00 0.00 -65.00 -32.00 -32.00 -32.00 -32.00 32.00 -32.00 -64.00 -64.00 0.00 -33.00 0.00 -32.00 -64.00 -32.00 -65.00 -96.00 -64.00 -65.00 -32.00 -96.00 -65.00 -96.00 0.00 -33.00 0.00 -96.00 0.00 -32.00 65.00 -97.00 0.00 -32.00 0.00 -96.00 0.00 -65.00 96.00 -32.00 65.00 32.00 64.00 -193.00 96.00 -96.00 0.00 -32.00 33.00 -64.00 -33.00 -33.00 0.00 -32.00 33.00 -128.00 -33.00 -97.00 33.00 -32.00 32.00 32.00 64.00 0.00 64.00 -32.00 32.00 -32.00 97.00 -32.00 0.00 -32.00 32.00 0.00 32.00 -33.00 32.00 -32.00 32.00 0.00 97.00 0.00 32.00 -96.00 32.00 -97.00 32.00 -96.00 65.00 -97.00 32.00 0.00 64.00 -32.00 32.00 -64.00 32.00 -64.00 -32.00 -33.00 32.00 -32.00 -64.00 -96.00 64.00 0.00 65.00 -129.00 32.00 0.00 32.00 0.00 64.00 -64.00 33.00 -32.00 0.00 -32.00 96.00 -33.00 0.00 -32.00 64.00 -32.00 32.00 0.00 33.00 -32.00 32.00 64.00 32.00 32.00 32.00 0.00 64.00 -64.00 33.00 0.00 32.00 -64.00 -65.00 0.00 -64.00 -32.00 0.00 0.00 -64.00 -32.00 -32.00 -33.00 0.00 -32.00 0.00 -64.00 96.00 -161.00 0.00 -64.00 32.00 -32.00 32.00 -97.00 129.00 -64.00 32.00 -32.00 32.00 32.00 32.00 32.00 33.00 -32.00 0.00 -64.00 0.00 -65.00 0.00 0.00 96.00 -96.00 64.00 0.00 65.00 -64.00 32.00 -33.00 32.00 -32.00 32.00 -64.00 -32.00 -32.00 32.00 -32.00 0.00 -32.00 0.00 0.00 -64.00 -65.00 -32.00 -96.00 -32.00 -129.00 96.00 -32.00 32.00 0.00 64.00 0.00 65.00 32.00 64.00 0.00 32.00 -32.00 32.00 -193.00 -32.00 -32.00 -32.00 0.00 -32.00 -32.00 -32.00 -32.00 -32.00 -33.00 -65.00 -32.00 0.00 -64.00 -32.00 -64.00 64.00 -97.00 65.00 -64.00 32.00 -32.00 32.00 -32.00 32.00 -65.00 0.00 0.00 32.00 -96.00 0.00 -32.00 0.00 -65.00 33.00 -32.00 -33.00 -64.00 -64.00 -32.00 -129.00 32.00 -64.00 -32.00 -32.00 32.00 -32.00 -96.00 0.00 64.00 -97.00 -32.00 -32.00 -32.00 -32.00 32.00 -64.00 -32.00 0.00 0.00 -32.00 0.00 -65.00 -33.00 -32.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -64.00 -96.00 -33.00 32.00 -32.00 32.00 0.00 32.00 -32.00 32.00 -129.00 33.00 33.00 32.00 -33.00 64.00 -32.00 0.00 -64.00 0.00 -32.00 -64.00 -97.00 0.00 -64.00 64.00 -96.00 0.00 -32.00 32.00 0.00 65.00 -97.00 0.00 -64.00 32.00 -65.00 -32.00 -96.00 32.00 -32.00 -32.00 -32.00 32.00 0.00 -65.00 -33.00 65.00 -64.00 0.00 0.00 -65.00 -64.00 -32.00 0.00 -64.00 -32.00 -64.00 -32.00 0.00 0.00 -97.00 -97.00 -32.00 0.00 -32.00 -32.00 0.00 0.00 -32.00 -64.00 -65.00 -32.00 0.00 -65.00 -128.00 -64.00 0.00 -32.00 -65.00 -65.00 0.00 0.00 -32.00 33.00 -32.00 0.00 -96.00 32.00 -32.00 96.00 0.00 32.00 -33.00 97.00 -32.00 0.00 -32.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -65.00 -32.00 -32.00 64.00 0.00 -32.00 -32.00 32.00 -64.00 64.00 -65.00 -32.00 -64.00 -32.00 -32.00 0.00 -32.00 193.00 -32.00 0.00 -33.00 32.00 -32.00 0.00 -32.00 64.00 0.00 0.00 -96.00 -64.00 0.00 32.00 -65.00 32.00 -32.00 33.00 -96.00 64.00 -97.00 64.00 -64.00 0.00 -32.00 0.00 -32.00 0.00 -65.00 32.00 -32.00 33.00 -64.00 -33.00 -97.00 0.00 -64.00 -32.00 0.00 -32.00 -64.00 32.00 -32.00 -32.00 -32.00 -129.00 64.00 -64.00 -32.00 -32.00 -32.00 -64.00 -33.00 0.00 -64.00 -32.00 -32.00 32.00 -64.00 -32.00 -32.00 -65.00 0.00 -32.00 -33.00 -96.00 0.00 -97.00 33.00 0.00 -65.00 32.00 -32.00 -32.00 -32.00 32.00 -32.00 0.00 -129.00 33.00 -32.00 32.00 -64.00 32.00 -97.00 0.00 -32.00 -32.00 -32.00 -32.00 -32.00 -33.00 -32.00 33.00 -65.00 0.00 -32.00 -97.00 -32.00 0.00 -64.00 -96.00 -32.00 -33.00 0.00 -64.00 -33.00 -96.00 -64.00 -33.00 0.00 -32.00 -32.00 32.00 -32.00 33.00 0.00 32.00 -65.00 32.00 0.00 -32.00 -32.00 0.00 -32.00 -65.00 0.00 -32.00 -64.00 65.00 -32.00 -33.00 -65.00 0.00 -64.00 -32.00 -32.00z\"\n          }\n        }\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"ca_lcc\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 867.2308867877658,\n          bbox: [{\n            y: -10408206.406521406,\n            x: -2874590.5560752787\n          }, {\n            y: -4979679.615160914,\n            x: 2759058.0911967778\n          }],\n          left: 0\n        }],\n        paths: {\n          \"CA-NT\": {\n            path: \"M340.43,125.99l5.05,-2.26l0.92,-0.14l1.84,0.57l2.33,-0.98l0.54,-0.9l1.17,-1.01l2.46,-0.96l1.23,0.01l1.01,1.79l0.53,0.4l-1.93,8.61l-1.55,0.59l-2.09,-1.15l-0.06,-0.73l-1.16,-1.56l-1.32,0.13l-0.23,1.13l-0.75,0.07l-0.24,1.09l-1.34,-0.24l-0.23,-1.68l-1.46,-1.53l-3.25,0.54l-0.46,0.38l-1.74,0.41l-0.1,-1.27l0.65,-0.58l0.17,-0.74ZM104.46,307.55l0.14,-0.94l0.91,-1.34l0.08,-0.7l1.08,-0.38l1.14,-1.29l0.69,-1.67l-0.23,-0.84l1.2,-1.51l0.56,-2.12l-0.07,-0.85l-0.74,-0.92l0.49,-1.16l11.83,-21.1l1.9,1.44l0.78,1.18l0.44,2.04l1.02,1.11l0.02,1.76l1.01,0.5l0.65,0.95l0.67,-0.55l-0.52,-1.74l0.25,-1.06l-0.44,-1.05l1.06,0.36l0.07,-0.5l-1.28,-1.24l0.06,-1.24l-1.48,-0.63l-0.42,-0.86l0.56,-0.17l0.07,-1.17l0.48,1.3l0.75,0.48l1.01,0.1l1.05,-0.56l-0.29,-0.39l-0.98,-0.28l0.02,-0.91l-0.75,-1.17l0.91,-2.19l0.82,3.03l1.3,1.4l0.43,-0.74l-0.92,-1.52l-0.27,-2.64l0.29,-0.58l0.65,0.02l-0.28,2.19l0.81,0.07l0.59,-1.89l0.54,0.43l0.23,1.25l1.1,1.25l0.63,-0.49l-0.11,-0.99l0.85,-2.21l1.62,-0.07l0.43,0.47l0.75,0.05l1.3,0.93l0.72,1.27l0.44,0.09l0.73,-0.37l0.45,-0.82l-0.22,-0.8l1.83,-2.02l0.7,0.3l-0.05,0.59l-1.04,0.83l0.39,1.34l1.04,1.47l0.86,0.25l-2.7,1.23l-1.24,1.17l-1.1,0.22l-1.67,1.68l-0.26,0.8l0.9,0.19l1.58,-1.41l2.09,0.22l0.77,-0.72l1.23,0.52l0.71,-0.84l1.16,0.21l1.48,1.15l1.16,-0.3l0.26,0.24l1.67,-1.31l0.74,-1.04l0.08,-0.68l0.93,-0.64l0.18,0.58l0.47,0.3l0.66,-0.09l0.71,0.91l1.31,0.19l0.55,-0.26l0.39,-0.67l0.78,0.93l0.89,-0.58l2.37,-0.04l1.07,-0.91l1.14,-0.33l1.48,0.09l0.6,-0.85l0.47,0.33l0.04,0.46l-0.7,1.79l0.73,0.45l0.61,-0.9l0.73,-0.09l1.56,-1.89l0.67,-0.18l0.03,-0.74l1.1,-0.2l0.29,0.66l0.93,-0.19l0.39,-0.56l0.33,0.91l1.18,-0.31l-0.38,1.09l0.76,0.43l-0.12,0.41l0.54,0.43l0.58,-0.35l1.12,0.71l1.2,-0.6l1.31,-1.78l0.48,-0.01l-0.43,1.39l0.64,0.69l-0.36,0.67l0.25,0.54l-0.99,0.13l-0.14,0.6l-0.58,0.26l-4.41,0.77l-1.71,-0.24l-0.99,0.6l-1.08,0.04l-1.03,1.21l-1.62,-0.04l-1.6,1.4l-0.18,-0.34l0.28,-0.83l-0.34,-0.45l-1.04,-0.22l-0.59,0.3l-0.57,-0.27l-0.48,0.2l-2.83,-0.93l-1.21,0.17l-0.7,-0.27l-2.29,1.84l-0.29,1.06l-2.52,0.0l-0.5,0.34l-0.53,-0.63l-1.66,0.06l-1.27,0.73l-0.17,0.49l-1.1,0.9l-0.12,0.66l-0.76,0.22l-0.47,-0.62l-1.16,0.22l-1.4,1.59l-0.26,0.73l-0.29,0.05l-0.26,-0.55l-1.06,0.01l-0.96,1.13l-0.25,1.27l0.56,1.44l1.19,1.93l1.0,0.53l0.66,-0.08l0.11,-0.38l-0.23,-0.69l-1.04,-0.58l0.38,-0.94l0.7,0.04l0.57,0.64l0.56,-0.31l0.06,-0.47l0.4,1.43l0.52,0.32l0.5,-0.48l0.99,1.02l1.61,-0.85l0.13,-0.44l-0.58,-1.64l-0.52,-0.17l-1.0,0.36l-0.35,-0.72l0.45,0.44l0.68,-0.28l-0.6,-1.73l0.72,-1.38l1.23,0.44l1.05,-0.46l0.45,0.71l0.75,-0.18l0.71,-0.64l0.65,0.9l1.17,-1.23l1.44,0.08l1.83,-0.69l1.41,-1.24l0.1,-0.41l0.78,-0.23l0.04,-0.44l0.67,0.77l-1.27,1.34l-0.23,0.67l0.81,0.22l-0.39,0.95l0.99,-0.0l1.07,-0.65l0.41,0.07l0.21,0.13l-0.46,0.86l0.88,0.61l-1.32,1.5l-0.51,1.19l0.07,0.7l0.58,0.3l0.61,-0.28l1.03,-2.43l1.66,-0.94l0.16,-0.62l1.48,-0.47l0.48,-0.61l-0.1,-0.43l2.35,-1.13l0.49,-0.85l1.42,-0.99l1.05,0.28l3.79,-0.03l1.01,-0.38l2.58,0.65l-1.07,2.79l1.07,1.23l0.82,0.1l0.27,-1.09l1.23,0.05l2.37,-1.56l2.78,-0.96l1.22,-3.31l1.85,-0.43l0.55,0.37l1.09,-0.16l2.12,0.3l0.7,0.51l0.27,-0.41l-0.24,-0.91l-2.64,-2.29l0.11,-0.52l0.3,0.3l0.53,-0.08l0.77,-1.23l-0.54,-0.44l-1.31,-0.01l1.01,-1.83l1.46,-1.04l1.82,4.77l0.72,3.82l-0.37,5.36l0.33,0.97l-0.74,1.57l-0.33,3.92l1.05,5.2l1.21,3.11l0.72,1.01l0.88,0.26l1.06,2.07l0.85,0.12l0.6,-0.52l0.05,-0.65l1.59,0.69l1.22,-1.47l-0.31,-0.47l0.38,-0.46l-0.67,-1.16l0.72,-1.05l-0.85,-0.79l-0.04,-0.56l0.56,-0.7l0.61,0.38l1.75,-0.43l-0.33,1.7l0.42,0.47l0.37,-0.09l1.3,-1.37l-0.48,-1.18l-1.07,-0.69l0.82,-0.42l0.51,-0.93l1.18,-0.99l2.01,0.05l0.56,-0.74l0.29,0.27l-0.34,0.03l-0.23,0.62l0.44,0.52l-0.71,0.35l0.09,1.35l-0.94,1.01l-0.57,1.34l1.06,1.48l0.76,0.13l0.57,-0.34l0.54,0.45l-0.13,0.38l-1.56,0.75l-0.73,1.21l-1.89,0.99l-0.47,0.95l-0.59,0.04l-0.25,0.44l0.29,1.05l0.86,0.84l1.12,0.58l0.72,0.01l0.23,0.41l0.53,0.01l0.32,-0.52l1.93,1.27l2.46,-0.33l0.26,-1.48l0.87,-0.15l1.02,0.51l0.3,-0.25l0.81,-1.37l0.11,-0.97l0.88,-1.02l0.45,-1.87l1.23,-0.68l0.86,1.2l0.75,-0.28l1.55,0.99l3.12,0.8l3.72,2.51l3.19,4.28l0.37,1.46l-10.78,31.16l10.4,16.31l12.52,18.3l13.34,18.03l12.32,15.52l14.94,3.76l6.82,13.72l2.18,2.36l1.96,1.15l30.79,11.84l26.18,8.95l-10.8,81.07l-27.95,-4.19l-23.5,-4.25l-29.2,-6.22l-23.2,-5.69l-28.76,-8.01l-22.8,-7.12l-28.52,-9.89l-16.81,-6.36l-0.18,-0.73l-0.43,-0.33l-0.96,0.05l0.81,-1.02l-0.28,-4.88l0.73,-2.33l-0.28,-0.79l-1.31,-0.57l0.24,-1.49l-0.61,-2.47l1.97,-1.43l0.22,-3.72l-2.24,-1.11l-1.04,0.62l-0.48,1.05l-2.45,-0.87l-2.01,0.56l-1.21,-1.31l-1.29,-0.74l-0.59,-1.26l-0.72,-0.6l-0.78,0.07l-1.01,1.06l-0.29,-0.29l0.24,-0.75l-0.52,-0.5l-1.06,-0.17l-0.38,0.32l-0.1,0.76l-0.41,0.1l-0.86,-0.35l-0.75,-1.07l-0.52,-0.06l-1.36,0.61l-0.34,-0.8l-0.94,-0.1l1.63,-5.05l-0.31,-0.69l-0.98,-0.18l1.04,-0.41l0.63,-1.24l0.92,-3.44l-0.25,-0.84l0.26,-1.46l-1.07,-1.73l-2.01,-0.66l-0.66,-0.99l-0.05,-0.94l-0.68,-0.72l-0.34,-1.54l-0.44,-0.46l0.4,-1.41l-0.03,-1.72l-0.37,-0.58l-0.73,-0.1l0.25,-1.73l-0.53,-1.26l0.32,-0.68l-0.79,-2.47l-1.51,-0.56l-1.12,0.7l-0.11,-1.18l-0.94,-0.95l-1.25,-0.18l-0.47,-0.89l0.84,-0.58l0.0,-2.28l0.95,-0.43l0.28,-0.54l-0.39,-0.69l0.37,-0.3l0.75,0.06l0.49,-0.54l-0.03,-0.8l-1.6,-2.55l0.39,-1.47l-0.5,-1.07l0.27,-0.98l-0.25,-2.15l0.4,0.06l0.76,-1.19l1.64,-1.3l0.21,-0.71l-0.47,-0.62l-0.8,-0.15l-0.3,-0.58l0.26,-2.13l-0.48,-0.59l-0.05,-1.15l-0.63,-0.54l0.74,-0.4l1.57,-0.07l0.77,-1.24l1.11,-0.59l0.08,-3.19l-0.8,-0.68l0.35,-1.33l-0.42,-0.38l-1.1,0.18l-0.14,-0.44l1.9,-0.06l0.56,-1.03l-1.49,-1.53l-0.71,-2.56l-0.55,-0.3l-0.74,-1.16l0.5,-1.17l-0.6,-0.74l-0.13,-1.41l0.94,-0.65l-0.02,-2.0l-0.29,-0.55l0.6,-0.72l-0.24,-2.3l-1.89,-2.03l-0.92,0.77l-0.7,0.12l-0.75,-0.01l-0.36,-0.61l-0.72,-0.22l1.94,-1.43l0.12,-0.41l-0.28,-0.82l-0.72,-0.5l-0.29,-0.98l-0.01,-2.24l-0.78,-0.71l-0.72,-1.79l-1.02,-0.87l-0.65,-0.13l0.0,-0.66l1.38,-0.32l0.62,-1.63l1.7,-0.39l0.34,-0.37l0.1,-1.36l-1.06,-0.79l0.65,-0.87l-0.01,-0.71l-0.29,-0.49l-0.9,-0.02l0.19,-0.45l0.87,-0.55l0.71,0.18l1.01,-1.21l2.29,-0.75l1.42,-1.78l1.31,-0.69l0.15,-4.09l-0.81,-1.96l0.67,-0.54l1.76,-0.15l0.42,-0.65l0.01,-0.78l-0.56,-0.46l-0.6,0.02l0.1,-0.75l-0.44,-0.59l-1.0,-0.06l-2.28,1.16l-0.4,-0.16l1.28,-1.17l0.11,-0.45l-0.33,-0.59l-1.96,-0.69l-1.63,-0.05l-0.64,0.46l-1.07,-0.82l0.77,-1.25l-0.44,-0.84l1.7,-0.84l1.09,-2.06l0.16,-0.66l-0.32,-0.69l-1.15,-0.51l1.43,-1.81l0.18,0.29l0.73,0.08l0.45,-1.72l0.97,-0.32l0.28,-0.51l-0.44,-0.81l-0.09,-1.21l0.41,-0.5l-0.11,-1.08l0.63,-0.31l0.59,-0.96l-0.12,-2.62l-0.75,-1.25l1.56,0.55l0.46,-0.15l0.06,-0.73l-16.24,-8.77ZM212.99,287.11l-0.0,-0.01l-0.45,-0.39l0.6,0.28l-0.15,0.13ZM212.05,286.55l-0.11,0.01l-0.06,-0.14l0.18,0.13ZM180.17,279.08l0.22,-0.13l-0.03,0.22l-0.19,-0.09ZM142.41,285.87l-0.69,-0.85l0.05,-0.26l0.51,-0.01l0.13,1.12ZM142.96,264.87l0.0,-0.21l0.23,0.0l-0.16,0.1l-0.07,0.11ZM156.61,271.56l-0.26,-0.16l-0.02,-0.28l0.35,0.17l-0.07,0.26ZM155.74,270.75l-0.15,0.03l0.11,-0.14l0.03,0.11ZM160.01,281.13l0.4,-0.64l0.34,-0.13l0.07,0.65l-0.81,0.12ZM202.48,297.51l-0.11,-0.08l0.06,-0.02l0.05,0.1ZM201.89,297.32l-0.66,-0.04l0.07,-0.32l0.01,-0.01l0.59,0.37ZM211.17,288.3l-0.48,-0.11l-0.4,0.32l-0.21,-0.52l1.07,-0.1l0.02,0.4ZM208.14,287.7l-0.36,0.28l-0.26,0.01l0.62,-0.56l-0.0,0.27ZM335.17,145.92l1.0,-0.91l-0.43,-1.22l0.64,-1.86l-0.24,-1.59l1.26,-2.2l0.25,0.64l0.45,0.13l0.76,-0.79l3.51,-1.13l0.74,0.23l1.64,-0.35l0.71,0.43l1.24,-0.7l1.27,-0.2l1.05,0.14l0.29,0.54l0.59,0.26l1.22,-0.62l3.04,0.79l-0.79,3.54l-1.13,0.52l-3.24,-0.04l-0.82,0.7l-0.06,0.82l0.87,1.98l2.92,0.26l-0.45,1.5l-0.01,1.69l-0.82,0.85l0.14,1.08l-0.89,0.91l-1.88,0.72l-1.37,0.04l-0.52,0.59l-1.94,-0.92l-0.98,0.55l-3.89,0.96l-1.46,-1.4l-0.3,-2.44l-0.41,-0.24l-0.64,0.19l-0.54,-0.49l-0.03,-1.17l-0.89,-0.46l0.16,-1.34ZM343.19,180.35l0.39,-0.57l0.14,-1.89l1.48,-0.35l-0.86,3.83l-1.15,-1.03ZM297.77,196.61l-2.26,-1.86l-0.55,-1.22l0.38,-0.82l0.76,-0.32l0.24,-0.76l2.05,-1.76l0.55,-0.25l6.65,1.88l3.36,-1.6l1.84,0.21l0.67,-1.17l1.68,-0.67l0.17,-0.56l-0.66,-0.53l-2.08,0.6l-1.88,-0.19l-1.9,0.31l-1.11,0.5l-5.82,-1.7l0.31,-0.79l2.82,-2.79l6.28,0.76l0.48,-0.28l0.79,0.65l4.2,0.37l0.7,-0.36l0.28,-0.91l-0.5,-0.5l-4.76,-0.77l-0.49,-0.35l-2.68,-0.05l-2.24,-1.68l0.21,-0.61l1.35,0.12l0.37,-0.43l0.07,-1.43l-0.97,-0.43l0.79,-1.37l0.84,-0.74l2.07,-0.37l2.45,1.3l1.29,0.19l3.33,1.91l1.21,-0.14l0.02,-0.84l-1.49,-0.63l-0.23,-0.8l-1.14,-1.05l-2.82,-0.86l-0.3,-0.94l0.64,-0.8l-0.1,-0.61l2.58,-1.59l2.72,0.22l1.32,-0.67l0.16,0.75l1.65,0.26l1.13,1.18l-0.07,1.46l-0.72,0.79l0.44,2.55l-0.57,0.6l0.33,1.25l2.02,0.22l2.23,-0.84l1.08,0.55l0.85,-0.19l0.3,1.16l1.82,1.55l-0.7,1.1l0.22,1.97l0.35,0.65l1.2,0.8l1.56,2.3l-1.85,0.28l-0.97,0.54l-0.56,1.29l0.4,0.38l0.83,-0.16l0.79,0.5l0.52,-0.36l1.19,0.13l-0.09,0.43l0.56,0.69l-0.19,1.08l0.36,0.37l-0.82,2.31l0.43,2.83l1.72,0.27l1.16,-0.38l1.83,0.08l0.43,0.89l2.08,0.36l-3.46,15.46l-0.59,0.13l-1.01,-0.67l-0.79,0.44l-0.17,0.72l-1.49,-0.26l-0.41,0.8l0.12,1.27l-2.4,1.0l-0.25,0.41l-1.6,0.27l-0.55,0.48l-0.67,-0.2l-1.85,1.17l-3.69,0.32l-1.41,0.46l-3.52,-0.48l-1.07,-0.47l-2.46,-1.54l-2.23,-3.46l-0.83,-2.35l0.38,-0.84l2.93,-1.35l0.8,0.07l0.73,-0.33l1.31,0.27l1.04,-0.25l0.62,0.52l0.49,-0.13l0.19,-0.89l0.89,-0.99l1.85,-0.47l4.43,0.55l1.47,0.89l1.64,-0.19l0.99,-1.0l1.23,-0.45l0.51,-0.83l1.59,-0.92l0.09,-0.52l1.0,-0.88l-0.22,-0.82l-0.77,-0.71l-1.12,-0.14l-1.02,1.34l-1.06,0.63l-0.85,-0.15l-0.16,-0.58l-0.45,-0.2l-1.17,0.94l-0.87,-0.44l-1.62,0.22l-0.26,-0.33l1.23,-0.9l-0.09,-0.91l-0.35,-0.68l-0.46,-0.1l-0.62,0.58l-0.13,0.67l-0.26,-0.06l0.48,-1.27l-0.3,-0.89l-0.59,-0.2l-0.98,1.81l-0.08,1.28l-0.92,0.5l-0.8,0.07l-0.1,-1.12l-0.35,-0.31l-0.9,1.31l-3.84,-0.33l0.32,-1.39l1.77,-0.52l0.23,-0.6l-0.46,-0.42l-1.17,0.31l1.46,-2.76l3.51,-1.68l-0.97,-0.99l-2.7,0.74l-0.38,-2.37l-0.69,-0.02l-0.22,0.35l-0.36,2.28l-1.44,2.63l-0.13,-1.23l-1.14,-1.28l-1.05,0.74l-0.08,0.77l0.95,0.5l0.21,1.76l-1.36,2.08l-3.46,1.29l-0.36,-0.05l-0.39,-0.67l0.23,-1.39l0.63,-1.29l-0.11,-1.68l-0.42,-0.25l-1.34,1.5l-0.77,-1.27l-0.59,-0.09l-0.29,0.56l0.11,2.33l-0.93,1.06l-2.19,-2.46l0.89,-0.36l0.57,-0.73l-0.26,-0.63l-1.29,0.17l0.63,-0.76l0.26,-1.45l-2.29,-0.11l-1.24,1.13l-0.81,-1.06l-0.74,-0.14ZM328.08,134.65l1.49,-0.41l0.93,-1.05l1.49,-0.48l-0.42,0.64l0.17,1.23l0.84,0.29l0.26,1.88l1.08,1.0l-0.13,1.05l0.28,0.68l-0.86,0.82l-2.45,0.83l-0.42,-0.22l-0.69,-1.15l0.02,-0.72l-1.13,-2.38l-0.46,-2.01ZM321.15,163.02l0.27,-0.55l1.37,-0.86l1.02,-0.17l0.95,0.34l2.18,0.1l1.23,1.73l-0.05,1.16l-1.23,1.11l-0.66,-0.6l-3.08,-0.94l-2.0,-1.32ZM323.52,255.67l3.92,1.28l-0.95,4.27l-0.31,-0.07l-0.4,-1.5l-1.62,-0.83l-0.69,-2.28l0.06,-0.87ZM325.57,263.35l0.07,-0.72l0.09,0.01l0.37,0.29l-0.13,0.59l-0.39,-0.16ZM261.06,269.52l0.42,-3.04l1.57,-3.05l1.05,-0.92l1.78,-0.91l0.8,-1.49l0.97,-0.67l0.88,0.18l2.34,-0.29l0.56,-0.55l0.36,-1.5l-0.12,-0.87l-0.52,-0.56l-1.2,-0.42l-0.42,-0.6l0.04,-1.02l0.95,-1.39l2.28,-1.24l0.66,-0.77l2.37,-0.69l2.57,-1.65l2.03,-1.97l0.89,0.17l2.38,-0.35l2.61,-1.39l0.63,0.1l5.36,-1.34l1.37,0.01l1.28,-0.38l0.6,-0.51l0.67,0.14l0.85,-0.48l1.59,-0.19l1.66,-0.82l0.38,0.01l1.58,1.5l0.76,4.13l-2.16,5.66l0.16,1.56l-1.74,-0.03l-1.07,0.84l-0.27,1.63l-2.29,1.2l0.2,1.21l1.64,0.68l0.59,-0.7l2.44,-0.63l0.2,0.37l0.74,0.2l-0.08,0.49l0.37,0.37l0.67,-0.09l1.89,-1.23l0.41,-0.92l0.07,-0.89l-0.92,-0.59l2.08,-2.47l1.62,-1.35l0.96,-0.15l2.61,1.86l1.36,1.71l1.28,0.45l2.21,2.46l0.69,0.37l0.24,1.29l1.27,0.82l-0.93,2.75l-1.69,1.01l0.02,0.76l-3.52,1.88l-0.22,0.43l0.3,0.81l0.71,0.42l-0.88,1.61l0.18,0.88l0.68,-0.03l0.87,-1.47l2.69,-1.14l0.94,2.06l0.72,-0.16l0.21,-2.62l0.87,-0.72l0.04,-0.5l0.91,0.33l0.54,-0.43l-0.08,-0.87l0.72,-0.65l0.55,0.58l-0.56,0.44l0.05,0.88l1.35,1.71l0.75,-0.09l0.09,-0.57l-1.02,-1.51l0.87,-0.51l1.37,2.93l-11.47,51.41l-17.46,-4.16l-0.48,0.29l-0.35,1.39l-1.14,0.12l0.0,0.67l1.45,0.6l-1.3,-0.38l-0.5,0.41l-0.91,-0.23l0.76,-2.9l-0.37,-0.69l-29.82,-8.44l-0.5,0.24l-0.86,2.55l1.84,5.57l-0.46,-0.2l-0.66,-1.15l-0.8,-0.68l-0.68,-1.43l0.13,-4.89l0.67,-0.69l1.4,-0.58l1.73,-0.24l3.39,0.25l3.67,-0.18l11.18,1.07l2.11,0.57l0.9,1.01l2.68,1.14l1.35,-0.09l2.98,1.9l0.67,-0.2l2.43,1.71l0.51,-0.14l0.14,-0.67l0.71,0.47l0.77,-0.34l-0.01,-0.27l0.91,0.22l0.56,-0.27l1.17,0.76l3.05,0.53l0.77,-0.31l0.11,-0.56l-0.29,-0.32l0.27,-0.48l-0.57,-0.96l-1.79,-0.31l-0.91,-0.68l-0.84,-3.09l-0.67,-0.2l-1.08,-0.99l-0.79,0.15l-1.03,-1.36l-0.64,-0.28l-0.62,0.15l-0.92,-1.37l-0.63,-0.24l-0.19,-0.8l-1.01,-0.25l-0.69,-0.96l-0.46,-0.05l-0.39,0.5l-0.67,-1.05l-1.73,-1.01l-1.72,0.58l-1.18,-0.69l-1.38,0.56l-2.51,-0.34l-1.32,0.15l-3.15,-0.78l-0.6,0.23l-1.02,-0.84l-2.18,-0.06l-0.63,-0.48l0.18,-0.65l-0.56,-0.52l-2.45,-0.59l-0.91,0.29l-2.02,-0.49l-1.54,-0.86l-0.61,0.03l-0.43,-0.55l-1.39,0.06l-0.5,-1.05l0.38,-0.76l-0.22,-0.93l-2.44,-4.15l-0.27,-2.19l0.33,-0.6l4.75,-1.74l2.29,0.35l2.83,-0.41l1.41,0.46l0.88,-0.42l0.18,-0.46l3.98,-0.43l0.61,0.62l0.81,-0.17l1.81,0.45l0.73,-0.44l-0.03,-0.61l-1.86,-1.16l1.71,-0.55l0.31,0.35l0.7,-0.0l0.31,0.56l1.18,0.74l1.71,-0.3l1.18,-0.56l0.16,-0.64l-0.7,-0.44l-1.42,0.43l-0.78,-0.08l-0.21,-0.12l0.61,-0.47l-0.15,-0.44l-1.08,-0.72l-1.49,-0.27l-2.81,0.29l-2.53,-0.28l-2.19,0.43l-1.56,-0.54l-1.22,0.36l-0.84,-0.12l0.4,-1.13l-1.05,-1.55l-1.28,0.93l0.11,0.7l0.6,0.3l-0.39,0.69l-0.78,-0.88l-0.84,0.41l-0.55,-0.45l-1.68,-0.36l-0.42,-1.04l0.66,-1.04l0.9,-0.41l2.39,0.85l0.28,-0.38l0.75,-0.09l0.25,-0.72l-1.15,-1.3l1.24,-0.2l0.19,-0.81l-2.72,-0.71l-0.79,0.27l-0.68,0.84l-0.48,-0.03l-0.46,-1.51l-0.75,-0.64l-1.98,-0.51l-0.99,0.87l-0.25,-0.31ZM315.48,268.17l-0.79,0.04l-0.04,-0.21l1.17,-0.51l-0.34,0.67ZM272.81,162.81l0.83,-0.98l0.4,0.17l1.08,-0.8l0.89,-1.79l1.46,-0.77l2.3,0.16l0.97,0.64l1.33,0.17l0.56,-0.22l1.24,-1.44l0.32,-0.92l1.48,-1.14l0.49,-1.02l0.58,0.19l1.16,-0.28l0.78,-0.61l1.48,-0.1l1.56,-0.97l0.35,-1.57l1.23,-0.32l0.64,-1.04l0.68,-0.38l0.26,-0.76l0.98,-0.09l1.12,-1.54l1.02,-0.11l0.51,-0.71l1.48,-0.62l1.35,-2.17l0.75,-0.51l1.03,0.44l1.58,-0.55l2.55,0.93l1.07,-0.28l-0.04,0.4l0.84,0.27l0.14,0.7l1.17,0.65l1.07,1.51l1.58,0.18l0.36,-0.74l0.35,0.46l0.67,0.06l0.37,-0.75l1.09,-0.81l-0.22,-0.81l-1.45,-0.48l-0.12,-0.94l0.79,-0.07l1.21,-0.74l0.09,-0.67l1.38,0.07l1.15,1.83l-0.1,0.87l1.46,1.39l1.01,2.22l-0.02,0.53l-0.69,0.76l-1.45,0.12l-0.9,0.65l-1.94,-0.05l-0.62,0.98l-0.64,0.2l0.11,2.98l1.96,2.78l-0.93,0.62l-1.65,-1.71l-0.48,0.02l-0.45,0.49l-0.12,0.76l0.52,1.85l0.62,0.63l-0.08,2.78l-0.62,0.28l-0.74,1.04l-1.46,0.65l-1.07,0.01l-1.18,-0.48l-0.84,0.41l-0.52,-0.36l-0.55,0.11l-0.74,0.87l0.06,1.54l-0.44,2.45l-1.34,0.94l-1.23,0.3l-0.84,-0.49l-0.11,-1.27l-0.95,-0.47l-0.42,-2.07l0.76,-1.8l0.88,-0.73l0.15,-1.62l0.62,-0.74l0.28,-1.2l1.64,-1.76l0.07,-1.13l-0.45,-0.66l-0.59,0.04l-1.03,0.98l-1.49,-0.63l-0.55,0.27l-0.13,1.02l-0.51,-0.31l-0.61,0.32l-0.14,0.98l0.37,1.03l-0.31,1.73l-0.91,0.0l-0.48,0.74l-0.29,-0.17l-0.19,-1.11l-0.79,-0.43l-0.42,0.57l-0.7,0.24l-0.39,1.07l0.58,0.56l0.06,0.56l0.6,0.37l-0.17,2.29l-0.72,0.92l-0.84,-0.26l-0.74,0.3l-0.8,2.2l-0.6,0.78l-0.74,0.29l-0.37,-0.38l0.36,-1.66l-0.29,-1.71l0.52,-2.6l-0.49,-0.23l-0.55,0.61l-0.44,-0.35l-0.66,0.27l0.04,0.99l-0.56,0.72l0.12,2.13l-0.47,-0.14l-0.42,0.38l0.02,0.74l-0.41,-0.17l-0.55,0.41l1.08,2.04l-0.1,0.91l-0.51,-0.34l-0.35,0.13l-0.82,1.1l0.04,0.39l-1.36,1.08l-0.71,0.02l0.1,-0.78l-0.48,-0.68l-2.02,1.61l0.77,-2.24l0.75,-0.9l0.0,-1.44l-0.38,-0.3l-0.92,0.11l0.1,-0.99l0.73,-0.78l0.03,-0.56l-0.3,-0.17l0.66,-0.56l-0.72,-1.92l-0.52,-0.12l-1.12,0.76l-1.06,2.34l-0.03,1.09l-1.31,0.08l-0.93,0.92l-0.14,-1.26l-1.81,-2.34l-1.81,-0.41l-0.67,1.27l-1.44,0.51l-0.88,-0.46l-0.12,-0.41l0.71,-0.41l1.49,-2.04l0.36,-1.31l-0.84,-1.36l-1.28,0.23ZM299.65,310.08l0.53,0.27l0.45,0.46l-0.39,-0.06l-0.6,-0.66ZM287.73,182.36l0.69,-0.85l4.73,-3.33l1.13,-1.26l1.85,-0.54l1.07,0.16l0.92,-1.24l1.31,-0.42l0.79,-0.83l0.46,-0.05l0.46,0.38l0.14,0.3l-1.31,2.19l-2.18,2.12l-0.18,0.62l-1.06,1.07l-0.32,1.05l-2.69,2.15l-0.04,0.48l-2.56,1.32l-0.81,-0.98l0.09,-0.48l-0.29,-0.32l-1.56,-0.66l-0.65,-0.89ZM219.97,246.31l1.41,-1.91l0.11,-1.2l0.58,-0.36l1.1,-0.08l-0.32,-0.78l0.18,-0.7l0.48,0.19l0.98,-0.52l0.27,-1.09l0.89,-0.57l1.76,-2.13l1.99,-0.91l0.69,0.17l0.33,-0.36l0.17,-0.64l-0.47,-0.74l1.39,-1.18l-0.11,-0.61l0.47,-0.8l0.25,-1.52l-0.23,-0.7l0.67,0.55l1.19,-0.31l0.51,0.29l0.98,-0.1l1.04,-0.37l0.42,-1.4l-0.51,-0.63l-0.15,-0.96l-0.68,-0.17l-0.06,-1.13l0.71,-0.76l0.69,0.02l0.56,-0.39l0.08,-0.6l2.32,-2.69l0.8,-0.47l0.23,-1.17l1.24,-0.65l0.8,0.03l0.34,-0.54l0.77,-0.34l0.67,-1.15l0.29,-1.31l1.55,-0.35l1.1,-1.28l0.25,-1.97l-0.31,-0.53l-1.33,-0.8l-0.1,-0.5l0.42,-1.09l-0.23,-3.55l0.64,-1.27l0.5,-3.11l-0.51,-0.66l0.56,-0.75l-0.26,-0.41l2.51,0.32l0.51,0.35l0.43,0.02l0.38,-0.41l3.46,0.81l1.3,-0.08l4.09,1.2l3.23,0.37l3.44,-0.17l2.16,1.86l0.32,0.91l-0.08,1.29l3.74,4.85l1.04,0.62l0.62,1.06l0.81,0.25l-0.47,1.0l-1.5,1.46l-0.24,1.04l0.36,0.8l0.74,-0.05l0.38,-1.36l0.97,-0.5l1.31,-1.55l1.19,0.38l0.28,0.38l-0.47,1.34l0.08,1.01l-0.57,0.34l-0.89,1.63l0.34,0.56l1.91,-0.18l1.59,-1.69l0.28,-0.77l-0.19,-1.06l0.98,-0.4l4.16,-0.06l3.39,2.19l2.27,4.11l1.8,5.75l0.49,0.47l1.16,3.45l1.44,1.82l0.81,3.18l-0.08,1.01l-3.31,1.88l-4.92,0.78l-6.1,2.78l-1.26,-0.07l-5.26,2.35l-1.45,0.23l-1.65,0.71l-0.85,0.83l-1.62,-0.12l-1.32,0.83l-2.03,0.7l-0.96,2.07l-1.6,1.95l-0.47,1.5l-0.93,0.52l-2.88,1.16l-1.62,-0.74l0.17,-0.63l-0.24,-0.33l-0.93,-0.17l-0.55,0.71l0.19,1.09l-0.34,1.5l-3.38,3.51l0.05,1.25l-1.16,2.65l-0.16,1.27l-1.86,2.66l-1.02,0.7l-2.7,0.45l-3.04,-0.02l-0.44,-0.37l0.33,-0.56l-0.21,-1.0l-1.09,-0.53l-4.34,3.08l-3.99,0.69l-1.69,1.33l-1.8,-0.62l-0.51,-1.09l-0.25,-2.74l0.46,-4.89l-0.17,-1.56l-0.39,-0.61l0.01,-2.66l-0.5,-1.41l-2.97,-3.64l-2.15,-3.79l1.11,0.8l0.52,-0.4l-0.02,-0.67l-0.4,-0.56l-1.67,-0.72l-3.23,-0.72ZM278.89,175.73l-0.49,-0.42l1.55,-0.55l-0.56,0.63l-0.51,0.34ZM280.89,173.14l-0.05,-0.52l0.37,-0.4l-0.17,0.44l-0.15,0.48ZM265.98,295.52l0.41,0.33l-0.56,-0.18l0.16,-0.15ZM192.19,266.74l0.3,-0.36l0.16,0.54l-0.24,0.16l-0.22,-0.33ZM134.49,262.69l0.12,-0.19l0.63,-0.37l-0.53,0.46l-0.22,0.1ZM133.01,267.08l0.28,0.07l0.02,0.08l-0.15,0.11l-0.14,-0.25ZM125.45,269.42l0.35,-0.18l0.08,0.44l-0.34,-0.04l-0.09,-0.22Z\",\n            name: \"Northwest Territories\"\n          },\n          \"CA-NU\": {\n            path: \"M694.57,496.77l1.45,-0.41l0.98,0.82l0.52,0.93l-1.78,-0.16l-1.15,-0.84l-0.03,-0.34ZM682.9,477.17l0.06,-0.73l3.09,-1.55l2.28,-0.08l0.16,0.84l0.97,-0.11l-0.26,0.99l0.67,0.87l0.04,0.63l-0.57,0.8l-0.1,1.41l-0.48,-0.03l0.2,-0.37l-0.27,-0.55l-1.47,0.05l0.01,-0.29l-0.54,-0.36l-0.45,0.12l-0.52,-0.72l-1.64,-0.3l-1.18,-0.63ZM458.86,294.89l0.69,-1.03l0.12,-1.87l1.28,-0.97l0.41,0.23l0.46,-0.24l0.63,-1.06l-0.01,-0.62l-0.42,-0.41l-1.24,0.36l-0.49,-0.37l-0.34,-2.89l1.12,-2.11l-0.36,-0.48l0.36,-0.77l0.19,-2.79l0.15,-0.21l0.4,0.29l0.51,-0.11l0.34,-0.95l0.36,-0.14l0.13,-0.53l-0.73,-1.03l0.18,-0.83l1.18,0.54l0.58,-0.22l0.23,-0.85l-0.26,-0.58l-0.78,-0.45l0.74,-1.97l-0.38,-1.61l0.2,-0.36l0.16,0.26l0.43,-0.14l0.13,-0.38l-0.61,-0.85l0.51,-1.54l0.66,-0.7l-0.26,-0.44l0.45,-0.65l1.17,-0.06l0.12,-0.59l-0.94,-0.51l0.61,-0.81l1.41,0.47l0.55,-0.15l-0.1,-0.83l-1.25,-0.66l0.98,-1.74l1.16,-0.95l0.58,-1.42l4.02,-4.37l3.91,-2.04l3.49,-1.3l3.4,-0.13l1.76,0.44l3.97,0.22l1.49,1.34l-0.09,0.41l-0.39,0.92l-3.07,3.29l-0.74,0.43l-2.77,4.99l-1.59,4.49l-0.2,1.53l-2.06,4.52l-0.33,3.11l0.51,1.79l2.87,3.81l0.14,1.36l-1.11,2.75l0.04,3.45l0.38,2.71l0.54,0.48l1.61,4.19l1.24,1.26l0.91,1.49l0.64,0.41l0.25,0.78l1.1,1.03l0.66,1.16l1.93,0.96l0.28,0.43l1.59,0.27l0.08,1.57l0.55,0.31l0.2,0.65l-2.26,-0.26l-0.56,0.35l0.02,0.82l-0.69,-0.12l-0.57,0.29l-0.32,1.27l-1.2,-0.52l-1.85,0.77l-2.42,2.82l-3.42,1.32l-0.38,0.55l0.31,0.43l1.16,0.27l2.86,-0.76l2.85,-2.34l0.68,-0.95l1.5,-0.2l0.49,-0.42l2.28,0.52l0.56,-0.55l1.03,-0.26l-0.01,0.92l-0.51,-0.15l-1.13,0.39l-0.26,0.55l0.37,0.38l0.72,0.05l-0.06,0.67l0.58,0.71l-0.13,1.79l0.47,0.27l1.12,-0.17l0.37,-0.35l0.27,-1.15l-0.68,-2.37l0.1,-2.05l0.82,-0.76l-0.04,-0.5l-0.91,-1.17l0.13,-2.54l1.28,-0.72l0.23,-0.74l-0.35,-1.93l-0.72,-1.15l0.29,-0.96l-0.4,-0.73l-0.68,-0.22l-1.26,0.21l-0.31,0.48l0.13,0.39l-2.62,-0.82l-1.39,-1.79l0.48,-0.3l0.08,-0.55l-1.02,-2.06l-1.5,-1.05l-1.25,-0.46l-0.18,-0.49l1.72,0.19l-0.23,-0.81l1.12,-0.21l0.48,-0.51l-0.02,-1.02l0.65,-0.24l0.14,-0.45l-0.74,-1.32l0.52,-0.49l-0.09,-0.29l0.52,-0.18l0.32,0.44l0.63,-0.18l0.36,0.3l0.76,-0.34l1.93,1.98l1.21,0.53l0.72,1.21l1.02,0.76l0.34,1.5l0.53,0.49l0.54,-0.31l0.08,-1.28l-0.27,-1.08l-1.09,-0.87l-0.64,-1.52l-1.33,-0.47l-0.71,-0.9l-0.0,-0.81l-1.53,-0.76l0.54,-1.17l1.87,-0.1l0.64,-0.59l-0.05,-0.63l-0.67,-0.07l-0.38,0.35l-1.49,-0.13l0.33,-1.4l-0.35,-0.45l-1.12,0.68l-0.92,1.29l-1.61,-0.64l-1.12,-1.0l-0.66,-1.5l0.66,-0.27l0.24,-0.59l-1.19,-0.53l-0.44,-0.77l-0.08,-5.9l0.49,-1.27l2.32,0.46l1.67,1.04l3.06,1.1l1.54,1.13l2.18,0.68l0.2,-0.85l-2.01,-0.88l-2.6,-2.11l-2.93,-1.53l-1.19,-2.97l0.69,0.09l1.09,0.74l2.84,0.74l3.94,0.35l1.4,0.94l0.52,0.05l-0.06,-0.89l-1.15,-1.13l-5.25,-1.25l-2.97,-1.77l-0.82,-0.05l0.2,-2.03l1.57,-1.49l0.77,1.62l0.99,0.68l0.83,1.15l0.84,-0.07l0.18,-0.55l-1.66,-2.02l-0.49,-1.37l2.49,-1.67l2.45,0.71l0.73,2.42l0.51,0.6l0.49,-0.02l0.26,-0.97l-0.7,-3.07l-2.15,-1.0l1.91,-1.63l2.87,-1.83l0.38,0.28l0.57,-0.11l1.13,-1.93l4.82,-0.43l3.3,0.19l0.59,1.49l1.44,2.07l0.89,6.25l0.6,0.57l3.37,1.48l0.54,1.24l-0.42,2.62l0.28,1.36l1.2,2.0l1.25,0.59l0.49,1.29l-0.61,0.42l-1.06,1.94l0.18,1.18l-1.25,1.2l-1.39,2.04l-0.34,1.34l-0.79,1.18l-0.04,1.01l-1.07,1.14l0.38,0.63l1.13,-0.55l2.05,-4.19l1.74,-1.68l0.11,2.17l-1.34,1.85l-0.46,2.25l-0.79,0.26l0.13,0.45l1.94,1.39l-1.92,0.38l-0.11,0.75l-0.36,0.26l-0.03,0.63l0.44,0.31l0.83,0.03l0.58,-0.33l-0.06,1.88l-0.86,1.26l0.58,0.45l1.15,-0.69l0.47,-0.93l-0.06,-0.85l2.28,-1.73l0.25,-0.81l-0.16,-0.79l-0.82,-1.04l0.64,-0.06l0.77,-0.91l-0.47,-1.72l0.91,1.53l1.09,1.07l2.0,0.71l0.49,-0.54l-0.57,-0.78l-1.4,-0.66l-1.82,-2.49l0.53,-1.32l1.11,-0.88l1.33,1.64l-0.92,2.02l0.13,0.74l0.38,0.31l0.78,-0.26l0.43,-1.15l0.58,1.55l0.67,0.07l0.1,-0.87l-0.64,-1.52l0.82,-2.03l1.77,2.05l0.46,0.15l-0.07,0.8l0.33,0.72l-0.27,2.67l-1.03,2.24l0.12,0.44l0.62,0.44l0.84,-0.43l2.21,0.77l1.42,1.23l0.72,-0.44l-0.01,-0.5l-0.63,-0.54l-0.3,-0.94l-1.23,-0.3l-0.95,-0.84l-0.11,-2.89l2.0,1.09l1.2,3.33l1.53,2.41l1.42,0.81l1.14,0.25l0.37,-0.6l-0.59,-0.47l0.48,0.2l0.58,1.0l0.46,0.13l0.31,-2.04l-1.44,-0.54l-1.99,-2.7l-0.61,-0.18l-0.64,0.23l-1.18,-2.89l-1.97,-0.89l-1.13,-0.9l0.56,-1.27l-0.33,-0.73l0.81,-0.64l0.44,2.37l1.08,1.41l0.7,-0.56l-0.73,-1.43l-0.1,-1.29l2.36,0.65l0.59,0.63l0.45,-0.3l0.77,0.27l0.81,0.75l0.4,1.14l-0.15,0.87l0.61,0.29l0.53,-0.9l-0.22,-0.98l1.64,-0.35l2.11,0.9l0.48,-0.21l-0.13,-0.5l-1.12,-0.76l-1.2,-0.4l-1.69,0.17l-2.01,-1.39l-2.94,-1.01l-2.16,-1.59l-0.28,-1.48l0.49,-1.71l1.39,-1.61l1.28,-1.14l1.2,-0.39l1.06,-1.18l4.48,-0.37l1.22,0.71l0.16,0.89l0.52,0.5l3.11,0.45l0.56,2.06l0.61,0.47l0.66,-0.47l-0.32,-1.5l0.42,-0.69l1.2,0.0l1.93,0.9l1.73,0.36l0.53,1.58l1.91,3.11l-0.46,1.49l-0.95,1.37l-1.27,-0.25l-1.24,0.22l-2.91,2.14l-0.33,2.1l-0.75,1.09l-0.57,1.79l0.33,0.81l0.78,-0.31l0.47,-1.7l0.92,-1.46l0.26,-1.54l1.99,-1.69l0.77,-0.14l1.76,0.58l-1.7,1.0l-0.48,0.63l-0.21,3.99l-0.7,2.19l-1.44,0.77l-0.11,0.52l0.48,0.33l1.63,-0.52l0.55,-0.64l0.71,-2.62l0.15,-3.33l0.29,-0.42l1.09,-0.08l0.82,-0.68l0.54,-2.42l0.9,0.32l3.87,-0.17l0.92,0.9l0.57,1.21l-0.42,1.07l0.42,1.07l-0.26,0.8l-0.87,0.45l-1.1,-0.35l-0.33,0.65l0.18,0.36l-0.7,1.29l-1.15,0.73l-0.96,-0.09l-1.97,0.84l-0.39,0.52l-0.05,0.38l0.57,0.42l1.94,-0.92l0.63,0.31l-2.65,3.27l0.23,0.7l0.55,-0.1l1.21,-0.98l0.84,-1.22l1.01,-0.72l0.43,-1.33l0.28,-0.26l0.18,0.33l-0.06,1.06l-0.66,1.24l-1.41,0.53l-0.65,1.37l-0.05,0.52l0.56,0.41l0.74,-1.25l0.85,-0.18l-0.53,1.24l1.43,0.31l0.32,0.72l-1.98,4.49l0.25,0.66l0.85,-0.17l2.17,-4.95l-0.15,-0.96l-1.06,-1.78l-0.01,-0.47l0.68,-0.48l0.26,-2.28l0.65,-0.31l0.66,-1.43l0.52,-0.2l-0.53,2.66l0.36,1.13l0.93,0.59l0.43,-0.58l-0.72,-1.5l0.55,-0.76l0.39,-2.23l0.37,-0.41l0.92,-0.21l0.43,0.98l-0.74,1.09l0.06,0.68l-0.45,0.44l-0.42,3.14l-1.76,1.59l0.33,0.71l1.37,-0.82l0.2,1.52l-0.65,0.95l0.69,0.42l-0.72,1.87l0.74,0.32l1.26,-3.14l-0.2,-1.04l0.42,-1.9l-0.07,-1.72l0.6,-1.12l0.55,0.31l-0.13,2.41l0.61,1.05l-0.18,0.66l0.58,0.46l0.39,-0.16l-0.77,1.79l0.2,3.3l-0.07,0.44l-0.93,0.89l0.27,0.63l0.51,-0.04l1.23,-1.01l-0.01,-3.42l0.96,-2.35l0.28,-0.01l1.43,0.77l-1.0,1.14l0.48,1.6l-0.11,1.13l-0.87,1.71l0.76,1.2l0.46,0.19l0.29,-0.41l-0.38,-1.22l0.66,-0.72l0.42,-2.32l-0.23,-1.02l0.78,-0.18l0.33,-0.81l-0.04,-1.56l-0.52,-1.67l0.81,-0.19l0.58,-0.61l-0.16,-0.92l-0.54,-0.67l1.11,-1.15l-0.11,-2.23l7.09,1.89l0.97,0.79l0.12,0.55l1.23,0.9l1.53,1.97l-1.07,2.38l-0.26,2.06l-2.63,-0.48l-1.51,1.0l-0.44,0.82l0.19,0.87l-0.24,1.05l-0.77,0.74l-0.04,1.35l-2.72,1.93l0.03,0.47l0.46,0.12l2.02,-0.83l1.04,-0.93l0.6,0.28l-0.84,1.94l0.09,1.23l-1.54,1.42l0.08,0.57l0.75,0.44l1.6,-1.56l0.59,-2.29l1.55,-0.85l2.23,-2.28l1.62,-0.61l0.77,0.51l0.62,-0.2l-0.0,-0.67l-0.92,-0.84l0.25,-2.25l1.7,-2.06l0.62,-0.05l0.53,0.36l1.43,3.01l-0.98,1.81l-0.07,2.43l-1.64,1.47l-0.4,2.01l-2.14,-0.37l-0.75,0.42l0.12,1.53l-0.72,1.26l0.05,0.94l-1.08,0.39l-0.32,0.54l0.45,0.64l1.24,-0.56l0.08,1.68l-0.36,0.59l0.22,0.65l0.57,-0.05l0.49,-0.64l0.37,-1.45l-0.25,-2.22l0.65,-1.71l0.81,-0.31l0.9,0.23l-0.19,4.5l0.55,1.12l-0.83,5.47l0.79,0.17l0.98,-2.69l0.33,-2.96l-0.27,-0.77l0.11,-3.1l0.14,-1.62l0.4,-0.4l-0.53,-0.75l0.08,-1.34l0.93,-0.58l2.43,-3.47l1.07,-0.64l1.83,-2.13l0.44,0.09l-0.04,0.76l-0.62,1.81l-1.33,1.96l-1.69,1.01l-0.07,0.82l0.88,1.5l-0.46,1.01l0.42,0.5l0.61,-0.15l0.97,-1.17l-1.02,-1.74l1.0,-0.35l1.13,0.25l0.37,-0.3l0.18,-1.3l0.55,-0.62l1.35,-0.47l0.09,-1.77l0.66,-0.58l0.5,0.19l1.08,-0.36l1.09,1.02l6.27,2.05l0.21,0.76l-0.55,2.69l-0.45,-1.59l-0.83,-0.0l-0.46,1.29l0.45,1.34l-0.14,0.57l-1.12,0.77l-0.93,0.17l-0.42,0.53l-0.79,0.14l-1.61,1.16l-0.33,0.68l-0.72,0.38l-1.14,1.37l-0.3,1.67l-1.25,0.89l-0.46,1.36l0.34,0.34l0.58,-0.1l0.52,-1.07l0.8,0.15l0.37,0.45l-1.04,0.07l-0.98,0.85l-0.5,0.68l0.03,0.85l-1.2,1.16l-0.21,0.6l0.46,0.49l0.96,-0.26l1.65,-2.93l0.65,-0.22l0.65,0.21l0.88,-0.75l0.06,-0.98l-0.74,-1.23l0.4,-1.35l2.94,-1.79l1.3,0.24l0.4,-0.8l1.63,-0.58l0.37,0.72l-0.53,0.89l0.08,1.44l-1.99,1.87l-1.36,3.53l-2.35,0.15l-0.71,1.11l-0.46,3.71l0.27,0.82l0.83,-0.16l0.05,-1.1l0.57,-1.29l0.07,-1.59l0.78,-0.3l0.92,0.36l1.01,-0.3l0.83,-2.49l0.58,-0.83l0.91,-0.9l1.8,0.0l0.48,-0.43l-0.19,-0.89l0.56,-1.42l1.19,-0.79l0.79,-1.54l-0.18,-0.51l-0.74,-0.16l-0.35,-0.46l0.18,-0.37l-0.26,-0.41l0.75,-2.17l0.49,0.45l1.52,0.28l3.74,3.23l0.67,1.14l1.26,1.04l1.76,3.93l-1.12,0.47l-3.27,-0.62l-1.87,0.61l-1.42,1.94l-0.35,1.64l-2.6,0.34l-3.44,3.23l-3.28,-0.02l-0.74,0.27l-1.66,1.03l-0.02,0.7l1.31,0.42l1.62,-1.27l2.97,0.23l1.92,-1.07l0.42,-0.83l1.07,-0.73l1.13,-0.24l4.87,1.63l0.88,-0.06l0.8,-0.75l3.89,-0.64l3.67,1.66l1.14,1.21l0.41,1.1l-0.24,1.15l-1.47,-0.47l-1.54,0.17l-0.56,0.6l-1.08,-0.35l-0.87,0.88l-1.11,-0.02l-4.61,-1.81l-1.08,0.52l-5.37,0.06l-1.45,2.21l0.35,0.67l0.58,-0.07l1.48,-1.85l4.11,0.37l1.46,-0.52l0.8,0.68l-3.61,0.22l-1.14,0.71l-1.28,0.14l-0.3,0.6l0.9,0.45l2.07,-0.62l-0.61,0.96l-2.12,0.83l-0.53,0.55l-0.09,0.5l0.49,0.46l0.8,-0.48l0.07,2.84l0.71,-0.2l0.37,-0.69l0.01,-2.02l2.87,-2.49l1.64,0.27l3.38,1.33l-1.21,0.42l-0.35,0.82l-1.72,-0.31l-1.14,0.25l-1.16,0.76l-0.11,0.8l0.63,0.33l1.37,-0.73l1.95,0.49l0.07,0.67l-2.9,0.05l-0.35,0.3l0.51,0.66l0.61,0.03l-1.58,0.41l-0.14,0.41l0.52,0.48l-0.14,0.2l-0.81,-0.28l-1.59,0.31l-0.85,-0.53l-2.17,-0.21l-0.71,0.41l-0.15,0.52l0.74,1.32l2.91,-0.38l-0.17,0.83l0.48,0.36l0.89,-0.69l1.43,0.15l0.92,-0.36l3.0,0.22l-1.22,1.14l-2.02,-0.24l-1.06,0.51l-0.38,0.94l-0.57,0.4l0.31,0.64l0.92,0.07l0.4,0.37l2.29,-0.4l0.45,-0.89l1.59,0.19l0.47,0.56l1.29,-0.08l0.56,2.64l0.45,-0.14l0.34,-0.74l-0.22,-2.22l1.09,-0.75l0.63,0.18l-0.53,0.96l0.8,2.28l-1.1,0.65l-0.51,0.76l-0.03,0.89l0.34,0.61l0.69,-0.03l0.43,-1.26l0.67,-0.18l0.14,0.43l-0.73,0.86l0.47,0.42l0.32,-0.1l0.96,-0.69l-0.06,-1.12l0.61,-0.89l0.58,0.43l0.56,-0.92l0.88,0.18l-0.89,0.38l-0.58,1.2l0.12,1.99l-1.14,-0.14l-0.59,0.34l0.1,0.64l0.48,0.23l1.36,0.22l0.58,-0.3l0.47,-1.62l-0.32,-0.9l1.34,-1.3l1.77,0.49l-0.19,1.15l0.27,0.98l-0.64,1.3l0.17,1.06l0.41,0.45l0.55,-0.08l0.1,-1.17l0.73,-1.16l0.3,0.93l-0.13,1.2l0.15,0.43l0.45,0.01l0.62,-0.83l-0.17,-2.76l1.41,-0.1l-0.74,0.51l-0.22,0.63l1.11,0.26l0.72,-0.6l0.55,0.95l-0.69,0.91l-0.07,2.22l-1.92,-0.02l-0.56,0.43l0.09,0.64l2.05,0.54l0.72,-0.18l0.32,0.77l0.47,0.14l0.42,-0.47l-0.33,-1.25l0.0,-2.22l1.35,-1.57l-0.2,1.04l1.08,1.38l0.16,3.19l0.5,1.59l0.65,0.46l0.41,-0.68l-0.7,-3.48l0.87,-1.12l0.11,-0.9l-0.49,-1.05l0.62,-0.77l1.07,-0.25l0.15,2.93l-0.33,1.24l0.53,0.72l1.28,0.62l1.09,1.89l0.65,0.25l0.41,-0.64l-0.92,-2.03l-1.79,-1.22l0.3,-2.6l1.38,-1.36l0.02,-1.16l0.51,-0.86l2.04,0.52l-0.69,0.76l-0.86,0.09l-0.59,0.55l0.16,0.62l0.72,0.08l-0.19,0.72l-0.71,0.32l0.09,1.47l0.5,0.36l0.55,-0.57l-0.9,2.0l0.42,1.53l0.37,0.23l0.54,-0.3l-0.09,-1.47l0.59,-0.57l0.05,-0.77l0.46,-0.59l0.38,0.45l-0.09,1.22l0.5,0.27l0.58,-0.27l0.26,-0.7l-0.35,-1.86l0.48,-0.44l1.86,0.93l-1.5,1.87l0.5,0.54l1.95,-1.32l0.24,-0.55l0.64,0.87l-0.19,1.03l0.5,0.16l1.03,-0.39l0.25,1.77l-0.68,0.8l-1.33,0.11l-0.36,0.33l0.23,0.43l1.32,0.31l1.94,-0.85l1.02,1.54l-0.3,0.73l-5.62,0.57l-0.51,0.47l0.32,0.64l3.99,-0.1l-0.41,0.42l-1.21,0.14l-1.79,1.38l-0.28,0.52l0.3,0.55l0.68,0.01l1.27,-1.17l2.68,-1.09l-2.83,2.39l-0.4,0.71l-0.09,1.02l0.38,1.42l0.39,0.36l0.78,-0.41l-0.06,-1.81l0.36,-0.86l1.17,-0.53l1.27,-1.21l1.42,-0.48l0.36,-1.11l0.95,0.13l0.52,-0.56l1.08,-0.44l0.37,0.8l-0.23,1.29l-1.16,1.76l-0.17,1.27l0.52,0.87l0.49,0.08l0.04,-1.63l1.16,-1.2l0.61,-1.4l-0.25,-2.7l0.37,0.19l0.65,-0.46l0.26,-0.66l-0.17,-0.83l0.79,0.36l0.48,1.0l-0.21,1.05l-1.18,1.04l-0.24,0.75l1.15,2.57l-0.16,0.48l-1.81,1.45l0.05,1.54l-1.36,0.35l-0.27,0.35l0.46,0.73l1.96,-0.42l0.72,-0.73l0.3,2.11l0.53,0.34l0.37,-0.19l0.23,-2.4l-0.53,-1.52l2.68,-2.39l1.05,2.86l0.25,3.22l0.61,0.48l0.64,-1.37l-0.29,-0.87l0.22,-1.52l-0.93,-2.78l0.9,-0.23l1.02,1.69l0.75,0.3l1.17,1.39l0.85,-0.11l-0.18,-1.16l-1.5,-1.3l-0.35,-0.7l0.01,-0.4l0.88,-0.85l-0.59,-1.65l0.99,-0.64l0.34,0.06l-0.0,2.25l0.25,0.44l0.75,0.09l0.21,0.46l0.45,0.11l0.51,-0.57l1.97,-0.44l-0.69,0.81l0.27,0.36l0.85,0.23l1.05,-0.23l2.61,2.39l0.07,0.53l-0.74,0.62l-0.1,0.59l-0.67,0.16l-0.62,-0.81l-1.02,-0.6l-1.28,0.03l-1.19,-0.43l-0.45,0.2l-0.05,1.01l-0.88,0.62l-0.15,0.45l0.34,0.4l0.77,0.13l0.56,-0.29l0.29,-0.8l1.16,-0.0l2.51,1.93l-0.79,0.38l-0.26,0.53l-0.94,0.21l-0.77,1.17l0.32,0.4l0.56,0.05l0.67,-0.53l2.09,-0.67l0.46,0.39l-0.13,0.23l-0.45,0.05l-0.34,0.53l-0.95,0.19l-0.36,1.09l-0.33,0.13l-1.31,-0.42l-0.75,0.49l-0.37,-1.07l-0.57,-0.48l-3.33,0.22l-0.77,0.93l0.09,0.59l1.19,0.3l0.67,-0.67l0.31,0.6l1.23,0.69l-0.19,0.37l-1.47,1.5l-0.57,-0.21l-1.12,-1.43l-0.84,0.01l-0.31,0.51l1.33,1.68l1.21,0.78l0.64,-0.08l0.73,-0.72l1.88,0.66l1.22,-0.23l0.27,0.77l0.7,0.14l0.04,0.78l0.47,0.13l-0.85,0.26l-0.63,0.76l-0.72,-0.45l-1.16,-0.01l-0.87,0.35l-0.62,-0.19l-0.59,0.4l-0.99,-1.4l-0.91,-0.43l-1.15,1.0l0.32,0.7l0.94,-0.35l1.44,1.67l2.47,-0.39l0.45,0.44l0.57,-0.05l-0.09,0.93l0.73,0.34l0.7,0.91l-0.79,0.63l-0.35,-0.32l-0.85,0.4l-1.78,-1.23l-0.7,-0.08l-0.18,0.94l0.63,0.72l2.55,1.16l-1.81,-0.21l-0.36,0.52l-0.82,0.15l1.03,2.77l-0.49,-0.42l-1.44,0.23l-2.78,-3.16l-0.84,-1.54l-0.5,-0.23l-0.52,0.4l0.32,1.56l1.97,2.25l0.15,0.61l-2.48,0.81l-0.08,0.55l0.87,0.62l0.76,-0.35l0.71,0.3l0.93,-0.36l0.34,0.34l0.03,0.84l-0.51,0.28l-0.81,-0.86l-0.68,-0.1l-0.31,0.51l0.26,1.11l0.97,0.67l-0.85,0.57l0.22,0.54l1.41,0.54l-0.12,0.47l0.51,0.46l1.03,0.41l-0.42,0.7l0.62,1.36l-0.54,0.45l0.71,1.05l0.88,-0.01l-0.39,0.45l0.28,2.2l-0.28,0.51l-0.72,-0.48l-0.97,0.83l0.81,-0.76l-0.09,-0.71l-0.28,-0.1l-0.91,0.15l-0.35,0.55l-0.37,-0.89l0.29,-1.65l-0.41,-0.45l-0.88,0.34l-0.39,1.72l-0.85,-0.15l-0.04,1.3l-0.79,-0.78l0.87,-1.93l-0.86,-0.2l-1.53,1.14l-0.49,-2.36l0.44,-1.52l-0.09,-0.98l-0.54,-0.34l-0.57,0.35l-0.21,1.79l-0.5,0.64l0.46,3.9l-0.35,-0.23l-0.25,-0.91l-0.71,-0.18l0.32,-0.69l-1.21,-0.53l-0.46,0.34l-0.08,0.5l-0.2,-0.12l-0.13,-0.62l0.76,-0.15l0.51,-0.78l-0.4,-0.58l-0.62,0.07l1.07,-1.21l1.3,-0.26l0.14,-1.53l-0.67,-0.44l-0.45,0.73l-1.47,0.31l-0.2,0.66l-1.39,0.65l-0.79,1.14l-0.68,-0.57l-0.39,-0.92l1.43,-0.95l0.34,-1.28l0.29,-0.01l0.24,-0.63l-0.5,-0.51l0.75,-0.49l0.05,-0.53l-0.45,-0.29l-1.35,0.38l-0.53,2.51l-1.2,0.35l-0.18,-0.92l0.55,-0.48l-0.03,-0.73l0.68,-0.76l1.26,-0.6l-0.05,-0.89l-0.6,-0.08l-1.44,0.68l-0.69,0.69l-0.34,0.97l-1.71,0.12l0.07,-1.83l-0.26,-0.33l-0.64,0.13l0.37,-2.25l2.59,-2.46l1.07,0.37l0.82,-0.31l-0.14,-0.66l-0.98,-0.6l-0.07,-3.39l0.88,-1.88l1.13,-1.23l0.17,-0.62l-0.43,-0.52l-1.04,0.55l-1.7,1.85l-0.54,2.08l0.28,1.6l-0.49,0.74l-0.53,0.21l-1.05,1.26l-0.61,-0.13l-0.68,1.47l-3.63,1.59l-0.61,-1.34l0.16,-0.77l1.74,-2.36l0.51,-2.99l-0.49,-1.87l-0.63,-0.04l-0.19,0.3l-0.42,4.19l-1.06,1.41l-0.79,0.5l-0.92,-0.13l-1.04,-1.14l0.36,-1.37l-0.28,-0.43l-0.47,0.19l-0.44,0.81l-1.47,-0.11l-0.31,-0.53l0.09,-0.6l-0.8,-0.16l0.76,-0.76l-0.28,-0.66l-0.57,-0.04l-1.29,1.36l-0.01,-1.4l-0.56,-0.34l-0.51,0.52l-0.5,-1.59l0.51,-0.99l-0.3,-0.45l-1.13,0.24l-1.9,-0.65l-0.33,0.65l1.6,1.05l-0.31,0.34l-1.32,0.44l-0.96,-0.27l-0.44,-0.62l-1.0,0.37l-0.97,-0.57l-0.35,0.72l-0.41,0.04l-0.88,0.98l0.65,0.65l2.65,-0.4l0.67,0.17l0.43,0.79l0.92,0.48l0.1,0.44l-1.41,-0.44l-0.43,0.14l-0.2,0.59l0.75,0.81l1.79,0.67l-0.75,0.54l-0.54,-0.39l-0.26,0.21l-0.91,-1.3l-1.66,-0.97l-0.49,0.25l-0.72,-0.19l-0.62,-1.05l-1.11,0.17l-0.48,0.54l0.16,0.52l1.09,0.64l0.41,0.86l0.93,0.76l0.75,1.19l-0.05,1.05l3.15,1.69l1.16,0.19l1.0,1.25l-0.47,0.3l-0.05,0.71l0.77,0.63l-0.39,0.18l-0.74,-0.28l-0.37,0.99l-0.95,0.19l-1.16,-0.82l-0.63,0.35l0.43,1.06l-0.27,0.32l-0.63,-0.16l-1.24,-1.61l-0.02,-1.8l-2.32,-0.81l-0.78,-1.44l-0.63,-0.01l-0.45,0.44l-0.58,-1.04l-0.78,-0.51l-0.46,0.21l-0.07,0.49l0.68,1.2l-2.72,1.06l0.31,0.64l1.36,0.11l1.7,-0.77l1.93,1.66l0.6,0.1l0.38,-0.45l-0.28,-0.56l0.87,0.64l0.01,0.33l-0.54,0.04l-0.39,0.57l-0.64,-0.57l-0.57,0.19l-0.0,0.66l0.71,0.87l-0.18,1.0l0.76,0.68l0.89,-0.25l0.01,0.91l0.43,0.29l-0.42,0.73l0.54,0.41l1.6,-0.08l0.54,-0.43l-0.36,0.54l0.05,1.05l0.82,0.33l0.16,0.5l-0.66,0.16l0.09,0.71l-0.45,0.82l0.21,0.56l0.59,0.06l-0.25,1.07l0.52,0.44l0.48,-0.36l0.63,-1.97l0.54,-0.28l0.22,-1.04l1.25,-0.75l0.34,0.18l0.51,-0.36l-0.01,-0.43l1.0,0.28l0.17,0.33l-0.46,0.83l0.21,0.36l-0.75,1.49l1.43,0.98l1.73,-0.66l0.42,0.5l-0.07,0.64l-1.38,0.37l-0.81,0.55l-0.19,0.59l0.48,0.5l0.61,0.1l0.61,-0.72l0.74,0.38l0.35,1.8l0.85,0.37l0.46,-0.4l0.55,0.1l0.19,1.06l-0.71,0.4l-0.23,1.29l0.55,0.26l0.7,-0.62l0.72,0.5l0.95,-0.02l0.51,0.75l-0.6,0.81l1.04,0.41l-0.1,0.9l1.14,2.04l0.78,-0.07l0.29,-0.88l-0.6,-0.62l-0.38,-2.84l-0.48,-0.75l0.52,0.19l0.2,0.82l0.71,0.45l1.39,0.04l0.33,0.84l0.58,-0.07l0.19,-0.62l0.31,0.19l0.21,1.48l-0.91,0.24l-0.16,0.68l1.08,0.23l0.57,1.18l0.44,0.07l0.46,-0.4l-0.13,-1.23l0.04,-0.29l0.53,1.04l0.72,-0.24l1.34,1.16l0.43,0.03l0.32,-0.41l-0.12,-0.55l-1.12,-1.21l0.19,-0.62l-0.72,-0.54l0.08,-0.66l-0.29,-0.39l0.28,-0.12l0.38,1.13l0.64,-0.23l-0.13,1.01l0.57,1.12l0.5,0.15l0.28,-0.49l-0.19,-1.12l0.42,0.49l0.19,1.22l-0.28,0.81l-0.75,0.64l0.96,2.23l0.44,0.16l1.17,-0.56l0.27,0.32l0.64,-0.18l0.3,0.54l0.57,-0.17l0.21,-0.59l0.53,-0.02l0.26,-0.45l0.94,-0.02l0.08,0.44l-1.15,0.7l-0.12,0.55l0.92,0.72l-0.06,0.57l-2.62,0.09l-0.89,0.66l-0.13,0.65l0.51,0.23l1.18,-0.44l-0.61,0.48l0.09,0.63l0.62,0.14l1.03,-0.41l0.67,0.31l-0.54,1.3l0.48,0.28l0.61,-0.22l0.29,-0.59l0.32,0.21l0.6,0.66l-0.19,0.32l0.26,0.52l-0.3,0.64l0.37,0.4l2.23,-0.34l0.04,0.74l0.46,0.02l0.61,-0.53l0.29,-0.81l0.34,0.24l0.56,-0.38l0.18,0.22l-1.53,1.95l0.09,0.7l-0.52,0.44l-0.03,0.88l0.95,0.96l1.69,0.18l0.45,-0.24l1.74,1.04l0.2,0.48l-0.47,0.7l0.53,0.51l1.11,2.71l-0.7,-0.07l-0.27,0.71l0.43,0.55l0.85,0.13l0.2,0.39l-0.88,0.25l0.13,0.61l0.9,0.27l-0.51,0.23l-1.11,-0.91l-1.52,-3.1l-1.23,-1.15l-0.37,-1.05l-1.5,-0.75l-1.36,-1.84l-1.5,-0.2l-0.37,0.51l2.03,1.66l0.73,1.05l1.02,0.59l-0.64,0.99l0.77,1.77l-0.59,0.67l0.78,0.94l0.8,-0.19l0.98,1.22l-0.73,-0.32l-0.46,0.27l0.06,0.47l-0.32,0.02l-0.27,0.66l0.9,0.88l0.37,0.84l0.53,0.26l0.95,-0.38l0.41,0.63l0.73,-0.1l-0.41,0.25l0.02,0.64l0.6,0.27l0.38,0.75l-0.06,1.3l1.26,0.59l-0.07,0.52l-0.77,0.16l-1.95,-0.91l-0.65,-0.89l-0.62,0.28l-0.04,0.62l-0.58,-0.65l-0.66,0.31l0.13,0.75l1.08,0.83l0.25,0.9l2.55,2.45l0.58,1.08l-1.04,1.6l-0.51,-0.36l-1.04,-1.83l-0.26,0.05l0.42,-1.04l-0.23,-0.6l-0.58,-0.02l0.44,-0.38l-0.29,-0.64l-0.56,0.01l-0.36,-1.34l-0.79,0.23l0.01,1.36l-1.22,0.77l-0.71,-1.25l-0.78,-0.08l0.19,-1.27l-0.76,-1.4l-0.61,0.13l-0.18,0.73l-0.45,-0.23l-0.42,0.2l-0.71,1.16l-0.47,-1.12l-0.77,0.16l-0.45,-0.76l-1.37,-0.58l-0.46,0.33l0.1,0.53l0.81,0.59l0.39,0.91l1.11,0.62l-0.01,0.38l-1.22,-0.65l-1.0,0.15l-1.14,-0.99l0.1,-0.36l-0.96,-1.06l-0.25,-1.14l-1.39,-0.99l0.13,-1.28l-0.27,-0.63l-0.71,0.03l-0.26,2.36l-0.41,-0.2l-0.42,0.46l0.11,0.93l0.59,0.94l-1.38,-1.03l0.36,-0.84l-0.65,-0.78l-0.28,-1.63l-0.55,-0.11l-0.39,0.37l0.37,2.04l-0.91,-0.42l-0.28,0.26l-1.34,-1.03l-0.81,-1.45l-0.68,0.04l-0.09,0.29l-0.63,-1.12l-0.82,-0.47l-0.87,-1.14l0.03,-0.36l-0.6,-0.38l-0.47,0.39l-0.36,-0.77l-1.44,-1.18l-0.47,0.04l0.07,0.87l1.36,1.69l0.37,1.43l1.98,3.03l-0.7,-0.34l-1.51,-1.66l-1.45,-0.62l-0.54,-0.85l-0.79,0.11l-1.1,-1.62l-0.52,0.0l-0.2,0.94l-0.57,-0.9l-0.72,-0.44l-0.63,-0.06l-0.22,0.29l-1.62,-0.51l-0.41,0.53l0.22,0.44l-1.37,-0.23l-0.86,0.53l0.28,0.7l1.76,1.39l-0.23,0.39l0.17,0.49l0.68,0.2l0.91,1.08l2.22,1.24l2.37,2.05l0.24,0.75l0.79,0.39l0.03,0.8l1.12,0.68l1.56,-0.11l-0.1,0.91l0.36,0.54l0.7,-0.17l0.29,-0.85l1.0,0.23l-0.45,0.99l0.92,1.52l0.5,-0.1l0.68,0.63l0.75,-1.18l0.81,-0.52l0.2,0.78l0.61,-0.08l0.53,0.41l-0.52,0.84l0.87,0.23l0.76,-0.65l-0.25,1.11l1.32,-0.23l-0.1,0.7l1.05,0.37l-0.12,0.95l0.64,0.13l0.45,0.65l1.61,-0.83l0.0,0.32l0.98,0.54l0.57,-0.07l0.86,0.74l0.78,0.84l0.17,1.5l0.47,0.27l0.64,-0.59l0.44,0.48l-0.91,0.86l0.36,0.76l1.38,0.89l0.73,-0.19l0.97,0.4l1.26,-0.01l0.43,-0.41l0.32,0.26l-0.68,1.24l0.31,0.86l-0.75,-0.65l-0.59,0.21l-0.04,0.81l1.15,0.98l0.1,0.93l0.59,0.08l1.36,1.14l-2.31,1.17l-1.19,-0.02l-1.96,-0.5l-0.18,-0.64l-0.76,0.1l-0.74,-0.72l-0.98,0.11l-0.95,-0.31l-1.0,0.15l-0.36,0.42l-1.57,-0.92l-0.43,0.51l-0.19,-0.76l-0.37,-0.24l-1.45,0.23l-1.14,-0.4l-0.65,0.6l-0.58,0.05l-0.88,-0.71l-0.48,0.37l-1.37,0.08l-0.3,-0.27l-4.39,0.62l-1.38,-0.54l-0.35,-0.62l-0.83,-0.02l-0.59,-0.69l-1.57,0.4l-1.67,-0.82l-0.9,-0.67l-0.37,-0.78l0.01,-1.34l-0.41,-0.53l-0.69,0.38l0.03,0.7l-0.84,-0.79l-0.43,0.1l-0.06,0.34l-0.5,-0.52l0.54,-0.05l0.56,-0.86l-0.33,-0.54l0.56,-0.63l-0.41,-0.62l-1.57,0.32l-0.59,-0.3l-0.84,0.31l-0.99,-0.56l-0.6,0.13l-0.08,0.55l0.4,0.55l-0.43,-0.42l-0.69,0.11l-0.75,1.07l-1.42,0.12l-2.52,-1.63l-2.54,0.01l0.2,-0.45l-0.42,-0.29l-1.26,-0.11l-0.19,-1.13l-0.44,-0.35l0.09,-0.64l0.92,-1.25l-1.32,-0.83l-0.81,0.48l-0.15,1.58l-1.2,-0.09l-0.26,1.25l-1.15,-0.07l-0.18,-1.19l-1.64,0.01l-0.98,-0.46l0.16,-0.38l-0.55,-0.5l0.38,-0.78l-0.43,-0.4l-0.72,0.02l-0.4,-2.19l1.07,-0.27l0.43,-1.0l1.14,-0.67l0.04,-0.69l0.85,-1.06l0.17,-1.27l-1.84,-0.43l-0.49,0.48l-0.77,-0.38l0.15,-1.01l-1.4,-0.33l-0.26,-0.37l-0.69,0.23l-1.64,-1.22l-0.78,0.57l-0.18,1.32l-0.58,0.16l-0.56,-0.73l-0.58,-0.07l0.18,-1.23l0.67,-0.43l0.15,-1.02l-1.09,0.32l-0.3,-0.9l-0.73,0.09l-0.09,1.16l-0.29,0.12l-0.5,1.5l-1.46,-0.6l-0.29,-0.72l0.3,-0.52l-0.12,-1.52l-0.29,-0.44l-0.46,0.04l-0.14,-0.85l-0.61,-0.22l-0.3,0.38l0.07,1.25l-0.64,-0.07l-0.3,-0.49l-0.38,-0.02l0.36,-0.74l-0.74,-1.53l-1.28,-0.25l-0.15,-0.78l-0.54,-0.29l-0.09,-0.5l-0.94,-0.22l-0.64,-0.63l-0.1,-0.62l-1.13,-0.55l0.59,-0.94l-0.47,-0.58l1.2,-2.13l-0.2,-0.61l-0.64,-0.11l-0.19,0.29l-0.44,-0.98l-0.45,-0.19l-0.61,0.96l0.68,1.51l-0.77,-1.17l-0.6,-0.01l-0.38,0.42l-0.59,-0.93l-0.67,-0.23l-0.44,0.46l0.28,1.74l-0.36,0.2l-1.32,-0.94l-0.59,0.55l-0.62,-0.56l-0.09,-1.88l-0.72,-0.6l-0.54,0.23l0.09,1.16l-0.44,0.47l-0.63,-0.22l-0.48,0.18l-0.14,0.48l-0.66,-0.0l0.04,0.68l-0.35,0.24l-0.37,-0.75l-1.23,-1.03l0.67,-1.75l0.44,0.01l0.34,-0.68l-1.19,-1.24l-0.75,0.01l-0.43,0.26l-0.01,0.6l-0.54,0.34l0.21,1.06l-0.35,-0.12l-0.46,0.42l-1.02,-0.08l-0.31,0.63l0.52,0.68l0.87,0.22l0.66,0.94l0.67,0.18l2.29,1.83l-0.87,0.05l-0.38,0.54l0.62,1.27l0.61,0.28l-1.02,1.15l-0.58,-0.18l-0.27,0.34l-0.81,-0.66l-0.63,0.17l-1.87,-1.07l-0.56,0.74l-1.02,-0.83l-1.61,-0.36l-0.69,-0.54l-0.47,0.19l-1.45,-0.83l-0.42,0.13l-0.24,0.53l0.31,1.11l0.3,0.69l0.95,0.49l-1.44,-0.25l-0.25,0.79l0.76,0.38l0.57,0.88l-1.41,-0.29l-0.61,0.68l-0.48,-0.21l-1.39,0.98l-0.7,-0.03l-0.16,0.85l-1.87,0.48l-0.17,0.38l-0.81,-0.01l-0.13,0.84l0.38,1.0l-1.71,-1.01l-0.65,0.23l-1.0,-0.62l-1.67,1.18l-0.35,-1.07l-0.42,-0.32l-0.55,0.21l-0.31,-0.61l-1.4,-0.53l-0.54,0.33l-0.11,0.67l-1.01,-0.4l0.3,-0.51l-0.13,-0.45l-1.38,0.16l0.23,-0.61l-1.02,-0.96l-0.17,-0.72l-0.74,-0.26l0.25,-0.48l-0.71,-1.26l0.18,-0.51l-0.36,-1.21l0.78,-1.48l-0.02,-0.51l-0.63,-0.89l-0.31,-1.18l1.12,-1.37l0.09,-0.51l1.93,-1.4l0.53,-0.81l1.09,-0.13l1.43,-1.19l0.04,-0.68l-1.92,-2.13l0.17,-0.67l0.89,0.2l0.6,-0.67l-0.27,-0.66l-0.98,-0.8l1.41,0.15l1.07,0.66l1.04,-0.06l0.45,-0.49l0.53,-0.05l0.56,0.41l0.84,-0.19l7.68,2.38l0.82,1.41l1.83,0.64l0.68,0.6l0.41,1.5l-0.5,0.55l-1.05,-0.06l-0.33,0.78l0.52,0.45l0.49,1.17l0.99,0.07l-0.49,0.9l0.31,0.61l0.65,0.05l0.66,0.87l0.44,0.03l0.79,-0.44l0.11,-0.67l-0.95,-1.79l-0.05,-1.5l-0.68,-0.39l0.15,-0.29l0.71,0.28l0.39,-0.55l-0.32,-0.58l0.51,-1.52l-0.13,-0.91l-0.6,-0.33l-0.65,0.41l-0.15,1.57l-1.94,-2.57l-1.32,-0.45l-0.48,-0.65l-1.23,-0.36l-0.25,-0.41l1.27,-0.02l0.51,-0.38l0.8,0.76l3.17,0.01l1.07,-0.93l0.1,-1.11l-0.32,-0.89l0.62,0.17l0.8,-0.53l0.54,0.15l0.59,-0.33l0.55,0.78l1.37,0.15l1.54,-1.96l0.16,-1.33l1.1,-0.55l0.05,-0.78l1.06,0.43l0.77,-0.72l0.75,0.05l0.97,1.1l0.83,-0.3l0.89,0.2l0.39,-0.27l-0.26,-1.16l-1.44,-2.04l-0.09,-0.93l-0.73,-0.35l0.12,-0.99l-0.68,-0.93l-1.2,-0.81l-1.56,-0.46l-2.13,-2.36l-1.97,-1.59l-0.53,-0.93l0.68,-1.51l1.82,-1.83l4.2,-6.04l0.47,-2.31l1.53,-1.58l1.19,-0.4l0.14,-0.56l-0.7,-1.39l0.54,-2.21l0.16,-2.48l0.69,-0.74l2.1,-0.9l0.84,-1.86l-0.22,-1.08l0.38,-0.95l-0.16,-0.63l-1.36,-0.67l-1.07,-2.69l-0.58,-0.53l0.34,-0.96l-0.93,-1.74l-0.87,-0.24l-0.62,-0.6l-0.11,-0.45l0.44,-0.66l-0.32,-1.05l-1.63,-1.76l-0.77,0.29l-0.32,-0.47l-0.38,-2.29l-1.67,-4.46l-0.46,-0.24l-0.81,0.54l-0.62,-0.91l-0.94,-0.19l0.26,-0.39l-0.17,-0.72l0.62,-0.33l-0.15,-0.42l-0.7,-0.39l-0.47,0.04l-0.49,0.94l0.06,0.55l-0.73,0.33l-0.21,0.76l-2.05,-0.67l-0.84,-1.08l0.22,-1.54l0.88,-0.77l-0.12,-0.73l-0.36,-0.28l0.16,-1.79l-0.79,-1.05l-3.03,-0.48l-0.5,0.19l-0.27,0.58l2.86,3.0l-0.06,0.55l-0.47,-0.39l-1.3,0.49l-1.25,-0.17l-0.57,-0.73l-0.57,-0.2l-0.41,-1.24l-1.53,-1.09l-0.07,-0.41l0.81,-0.62l0.17,-1.14l-0.42,-0.46l-0.73,-0.12l-0.42,-1.6l-0.71,-0.12l-0.51,0.29l-0.0,-0.54l-0.73,-0.08l0.55,-0.29l0.4,0.27l1.02,-0.53l0.24,-0.48l-0.4,-0.87l-1.32,-0.65l-0.99,0.48l-1.02,1.51l-0.14,2.43l-2.3,-2.24l-0.78,0.0l-0.62,0.99l0.62,1.23l-0.47,0.78l-1.31,1.23l-0.97,0.45l-0.55,1.14l-1.93,1.88l-1.75,0.63l-0.45,-1.23l0.57,-1.24l0.12,-1.44l-0.97,-0.74l-0.22,-1.81l1.19,-0.86l1.8,0.01l0.84,0.62l0.73,-0.12l1.19,-1.21l0.2,-0.69l1.15,-0.16l0.37,-0.54l0.02,-1.27l-0.53,-1.86l-0.96,-1.14l-2.45,-1.54l-1.7,-0.62l-1.39,0.45l-0.59,-1.14l-1.49,-1.35l-0.04,-0.67l0.74,-1.28l1.85,0.5l0.34,-1.26l-0.4,-0.58l-1.22,0.13l-0.53,-0.6l-1.73,0.58l-0.26,0.56l0.46,0.5l0.4,-0.08l-0.69,0.58l-0.11,1.06l-0.82,-0.16l0.33,-0.57l-0.16,-0.5l-0.93,0.3l-0.45,0.57l-0.34,-0.58l-0.92,-0.04l1.0,-0.68l0.53,0.26l0.58,-0.25l0.62,-1.2l-0.21,-0.88l-0.74,-0.19l0.81,-0.68l-0.14,-0.82l-0.48,-0.18l-1.25,0.55l0.09,-0.34l-0.49,-0.48l-0.69,0.29l-0.36,0.55l-0.66,-0.06l1.88,-1.51l0.2,-0.52l-0.5,-0.52l-3.53,2.22l-0.73,0.8l-1.32,-7.62l-0.89,-1.06l-0.81,-0.25l-0.68,0.2l-0.56,0.69l-1.16,-0.49l-0.31,0.65l-0.65,0.39l-1.01,-1.45l0.72,-0.54l-0.2,-0.6l-0.89,-0.28l-0.77,0.25l-1.43,-2.18l-0.46,0.15l-0.16,-0.38l-0.63,-0.11l-0.21,0.51l-0.39,0.0l0.02,-0.94l0.69,-0.19l0.23,-0.7l0.65,0.38l0.67,-0.32l-1.17,-2.05l-0.24,-0.18l-0.69,0.3l-0.48,-1.0l-0.73,0.09l-0.82,1.32l0.23,0.67l0.74,0.04l-0.47,1.38l-0.55,-0.77l-0.72,0.44l0.03,1.14l-0.75,0.13l0.01,0.65l-0.55,0.17l-0.47,0.63l-0.06,0.83l1.16,1.13l0.61,0.2l0.43,-0.39l1.24,1.09l0.8,-0.07l0.41,-0.55l0.33,0.25l1.65,2.55l0.39,2.11l0.69,1.33l-0.08,1.72l-0.52,0.66l-4.35,0.59l-1.6,0.86l-1.74,-2.45l-0.55,-0.05l-0.35,0.45l-0.46,-0.8l-1.34,-0.07l-0.86,0.48l-1.6,-1.01l-1.92,0.03l-0.77,-0.32l-0.65,0.27l-0.31,-0.61l-0.8,0.21l-2.96,-0.16l-1.17,-0.45l-0.6,0.18l-0.19,0.63l0.72,1.13l0.95,0.16l1.16,1.27l0.47,-0.07l0.5,-0.6l0.69,0.48l0.61,1.42l2.84,2.71l-0.04,0.5l-0.53,0.47l-1.01,-0.79l-0.79,-1.21l-0.86,-0.35l-1.72,-1.57l-0.61,-0.06l-0.07,-0.83l-0.56,-0.19l-0.79,0.22l-2.88,-2.78l-3.45,-1.36l-3.58,-2.36l-0.7,0.21l0.08,0.45l2.03,2.2l0.69,-0.04l3.53,1.7l1.43,1.03l1.4,1.69l1.11,0.35l-0.83,1.43l-0.97,-0.26l-0.92,1.2l-1.07,-0.71l-0.99,0.26l-1.64,-1.29l-0.67,0.01l-0.98,-0.6l-1.1,-1.1l-1.17,-0.16l-1.0,0.22l-0.47,0.65l-2.09,0.89l-3.02,-0.68l-2.06,0.14l-1.18,-0.39l-1.18,0.11l-0.91,-0.58l-0.1,-0.31l0.49,-0.65l-0.36,-0.74l-0.5,0.06l-0.78,1.02l-2.79,-0.72l-3.39,0.36l-0.74,0.52l0.03,1.0l-2.42,-1.57l-2.06,-2.53l-0.29,-2.53l0.45,-1.09l0.92,-0.54l0.59,-0.83l-0.18,-0.85l-0.58,-0.55l-0.52,0.04l-0.17,0.59l0.3,0.44l-1.61,1.29l-0.54,1.08l-0.07,-0.35l-0.83,-0.11l-0.42,-0.63l0.14,-0.5l-0.63,-0.54l-0.68,0.08l-0.91,0.67l-0.12,0.72l-0.56,0.29l-0.16,0.74l0.33,0.31l1.43,-0.04l0.14,1.23l-3.28,-0.82l-2.11,-0.01l-0.46,0.4l-3.84,-2.75l-2.22,-0.36l-1.4,-1.55l-0.77,-2.5l-2.1,-2.54l-0.99,-2.59l1.3,-0.38l0.48,-1.01l-2.06,-2.13l1.08,0.15l0.09,0.48l0.89,0.54l1.49,-0.44l0.64,0.29l1.33,-0.38l1.43,0.48l0.66,1.5l3.26,0.51l1.56,-0.59l2.27,0.19l0.39,-0.25l0.31,-1.1l1.65,0.38l0.43,-0.25l-0.01,-0.62l-2.26,-0.87l-3.09,-2.1l-0.64,-0.98l0.1,-1.55l-0.33,-0.37l-0.98,0.11l-0.93,1.12l-2.87,-0.63l-0.8,0.19l-8.42,-2.04l-0.92,-2.4l0.28,-1.64l-0.49,-1.28l1.6,-3.77l-0.7,-0.74l0.04,-0.56l-0.44,-0.27l-0.06,-0.61l-1.0,-1.53ZM474.89,330.28l0.28,0.24l0.75,0.17l-1.05,0.62l-0.53,-0.59l0.54,-0.44ZM473.1,330.1l-0.24,-0.03l-0.02,-0.02l0.2,-0.03l0.05,0.07ZM482.98,328.72l0.11,0.5l-0.87,0.03l-0.03,-0.17l0.79,-0.36ZM489.76,335.68l1.57,-0.65l1.38,0.68l-1.06,-0.2l-1.35,0.52l-0.55,-0.35ZM516.89,338.24l0.08,0.2l-0.05,0.1l-0.02,-0.01l0.0,-0.29ZM550.53,335.08l0.41,-0.09l-0.17,0.82l-0.12,-0.36l-0.11,-0.37ZM574.57,352.21l0.32,0.6l-0.22,0.09l-0.34,-0.24l0.25,-0.45ZM587.4,361.26l-0.15,0.27l-0.05,0.15l0.03,-0.41l0.16,-0.01ZM582.66,432.03l-0.03,0.04l0.02,-0.03l0.02,-0.01ZM595.94,436.99l0.4,0.28l0.14,0.44l-0.7,-0.42l0.16,-0.3ZM596.67,437.96l0.17,0.24l-0.2,0.4l-0.6,0.52l-0.32,-0.49l0.66,0.03l0.28,-0.7ZM596.17,440.05l0.05,1.42l-0.31,0.11l-0.08,-0.87l0.34,-0.66ZM595.8,441.61l-0.03,-0.02l0.04,-0.0l-0.01,0.02ZM601.28,436.5l-0.0,0.18l-0.07,0.04l0.01,-0.01l0.06,-0.21ZM601.6,439.23l-0.21,0.44l-0.21,-0.16l0.05,-0.3l0.37,0.02ZM602.6,440.59l-0.02,0.19l-0.36,0.35l-0.06,-0.15l0.44,-0.39ZM602.33,441.58l0.22,0.2l0.05,0.16l-0.23,-0.16l-0.03,-0.2ZM611.97,449.62l0.04,0.02l-0.04,0.01l0.01,-0.03ZM613.64,450.53l0.12,0.98l-0.1,0.01l-0.22,-0.97l0.21,-0.02ZM615.77,450.38l0.09,-0.01l-0.03,0.11l-0.01,-0.03l-0.04,-0.08ZM616.5,450.11l0.17,-0.03l-0.0,0.12l-0.01,0.01l-0.15,-0.11ZM620.7,451.92l0.0,0.12l-0.28,0.07l-0.0,-0.12l0.28,-0.07ZM662.94,449.05l1.26,0.8l0.05,0.79l0.54,0.66l0.04,0.32l-0.31,-0.09l-0.41,0.59l-0.41,-1.74l-0.76,-1.32ZM672.48,451.57l0.27,0.56l-0.74,0.85l0.19,-0.89l0.28,-0.52ZM677.96,454.27l-0.21,0.16l-0.02,-0.11l0.23,-0.04ZM650.02,390.37l0.52,0.43l0.09,0.2l-0.45,-0.05l-0.16,-0.58ZM680.59,409.03l0.0,0.01l-0.0,0.01l-0.0,-0.02ZM680.54,409.32l0.0,0.21l0.09,0.25l-0.18,-0.29l0.09,-0.18ZM678.47,399.02l0.0,-0.0l0.01,0.0l-0.01,-0.0ZM682.18,392.84l0.95,-0.04l0.73,0.46l-0.59,0.39l-0.21,0.76l-0.88,-1.57ZM630.85,349.97l0.11,-0.9l-0.31,-0.9l0.96,0.08l0.27,-0.33l0.26,0.38l-0.18,0.75l-1.1,0.92ZM634.0,348.94l0.23,-1.09l0.75,0.21l-0.06,0.86l-0.92,0.02ZM635.37,347.66l0.31,-0.27l0.31,-0.07l-0.19,0.29l-0.43,0.04ZM624.08,340.79l0.03,0.01l-0.01,-0.0l-0.02,-0.01ZM522.91,287.92l0.09,0.04l0.15,0.16l-0.08,-0.03l-0.17,-0.18ZM490.83,269.21l-0.1,0.22l-1.54,-0.13l0.29,-1.42l1.36,1.32ZM527.94,279.44l-0.04,-0.23l0.12,0.06l-0.09,0.17ZM541.95,291.93l-1.03,-0.78l-1.11,-1.72l0.33,-0.2l1.8,2.69ZM574.55,296.29l-0.01,-0.14l0.08,0.1l-0.07,0.04ZM622.27,341.79l0.57,-0.05l0.37,0.23l-0.06,0.02l-0.88,-0.2ZM621.25,347.63l0.29,-0.42l0.66,0.04l-0.11,0.11l-0.85,0.26ZM662.77,365.97l0.84,-0.66l-0.06,0.71l-0.78,-0.04ZM681.57,367.03l0.1,-0.68l0.41,0.51l0.69,-0.27l-0.11,0.28l-1.08,0.17ZM663.48,400.23l-0.06,0.03l-0.14,0.26l-0.08,-0.23l0.27,-0.06ZM653.19,413.28l0.02,-0.07l0.01,0.04l-0.03,0.03ZM663.75,417.21l0.03,-0.16l0.0,-0.05l0.04,0.06l-0.07,0.15ZM656.01,454.5l0.2,-0.08l0.01,0.01l-0.0,0.01l-0.21,0.05ZM656.44,456.3l0.17,-0.67l0.69,-0.27l0.05,0.1l-0.91,0.84ZM672.11,466.42l-0.48,-0.52l-0.04,-0.18l0.99,0.26l0.03,0.26l-0.5,0.19ZM626.92,462.69l-0.05,0.04l-0.35,0.13l0.03,-0.16l0.37,-0.02ZM618.61,456.15l-0.06,0.22l-0.83,-0.15l0.45,-0.09l0.44,0.02ZM539.29,319.83l-0.1,-0.03l0.05,-0.09l0.05,0.11l0.0,0.0ZM537.02,321.59l0.12,0.78l-0.07,0.39l-0.29,-0.51l0.24,-0.67ZM685.15,391.57l0.47,0.18l0.41,-0.3l0.22,0.37l1.2,0.21l-1.42,0.29l-0.89,-0.74ZM683.06,459.74l0.95,-0.38l0.19,-0.69l-0.69,-0.33l0.15,-0.41l0.86,0.39l1.28,-0.46l0.26,-0.4l0.66,0.36l-0.47,0.62l0.38,1.23l-0.58,0.69l-2.73,-0.08l-0.27,-0.54ZM683.43,471.03l0.28,-0.59l0.59,0.1l0.69,1.09l0.6,0.06l0.22,0.47l0.7,-0.01l0.58,0.61l-0.16,0.39l-2.13,-0.41l-0.78,-0.57l-0.58,-1.14ZM680.85,436.57l0.47,-0.31l1.46,3.68l-1.98,-3.03l0.04,-0.33ZM683.04,440.33l1.1,0.65l0.41,0.66l-0.53,-0.25l-0.98,-1.06ZM683.89,436.94l0.21,0.16l-0.01,0.29l-0.01,-0.01l-0.19,-0.44ZM681.52,458.42l0.32,-0.72l0.69,-0.02l-0.6,0.62l-0.41,0.12ZM681.24,433.57l-0.29,-1.01l0.41,-0.1l0.22,0.23l-0.35,0.88ZM677.29,433.02l0.03,-0.85l0.54,0.28l-0.04,0.5l0.66,0.32l-0.37,0.59l0.38,0.45l-0.62,-0.42l-0.88,0.54l-0.63,-0.2l-0.22,-0.27l0.18,-0.53l0.98,0.49l-0.01,-0.9ZM678.64,434.4l0.26,0.02l0.11,0.08l-0.11,-0.06l-0.26,-0.04ZM679.82,434.77l0.32,-0.34l0.23,0.91l-0.36,-0.42l-0.19,-0.15ZM677.96,474.7l0.38,-0.71l0.73,0.08l0.13,0.28l-0.56,0.47l-0.68,-0.12ZM674.37,366.72l0.0,-0.0l0.0,0.01l-0.01,-0.0ZM674.51,366.15l-0.12,-0.36l0.97,-1.19l-0.06,-0.72l0.92,-0.55l-1.2,2.63l-0.51,0.19ZM672.23,425.21l0.0,0.0l-0.0,0.01l-0.0,-0.01ZM672.34,425.47l0.06,0.1l-0.03,-0.05l-0.02,-0.05ZM672.48,425.69l0.47,0.19l0.17,0.69l-0.4,-0.49l-0.25,-0.39ZM665.91,422.18l0.01,-0.79l0.82,-1.94l0.42,0.21l0.54,-0.31l0.04,-0.39l0.41,0.37l-1.19,1.04l0.24,0.64l-0.74,0.27l-0.09,0.62l-0.45,0.28ZM665.53,363.97l0.62,-1.05l0.09,0.46l0.55,0.27l-1.26,0.31ZM666.87,363.64l0.66,-0.69l0.48,0.21l-0.28,0.26l-0.87,0.22ZM664.04,502.78l0.64,-0.0l0.65,0.75l1.14,0.57l0.12,0.96l-0.61,1.68l0.07,0.58l-0.8,0.31l-0.8,0.86l-0.19,0.67l-1.13,0.8l-0.48,-0.7l0.33,-6.17l1.05,-0.31ZM662.27,358.38l1.11,0.82l0.23,0.27l-1.19,0.41l-0.15,-1.5ZM639.48,351.75l0.24,-0.63l1.19,-0.11l0.22,0.76l-1.65,-0.02ZM626.89,465.68l0.24,0.01l-0.19,0.0l-0.05,-0.01ZM627.92,465.72l2.0,0.07l2.76,0.84l0.68,0.41l0.97,1.31l0.69,-0.06l0.94,1.07l-1.05,0.85l-1.68,0.11l-0.77,-0.35l-0.48,0.24l-1.03,-0.81l-0.22,-0.97l-0.56,-0.72l0.68,-0.55l-0.2,-0.75l-0.51,-0.21l-0.81,0.28l-1.42,-0.76ZM625.88,343.48l0.72,0.13l-0.17,0.02l-0.55,-0.16ZM624.15,326.73l0.98,-1.23l0.48,-0.09l0.38,0.33l-1.04,0.31l-0.41,0.62l-0.4,0.06ZM619.93,326.41l0.75,-1.58l0.99,0.23l0.78,-0.44l-0.08,-0.26l0.21,0.17l-0.66,1.38l-0.09,0.97l-1.9,-0.45ZM610.78,452.57l0.01,-0.01l0.0,0.02l-0.02,-0.01ZM597.11,474.23l0.51,-0.32l0.72,0.34l0.21,0.46l-0.8,-0.03l-0.64,-0.45ZM598.89,474.9l2.06,-0.45l1.01,0.13l0.33,0.51l-0.8,0.22l-2.61,-0.41ZM599.04,437.65l0.38,-0.55l0.19,-0.09l-0.03,0.69l-0.54,-0.05ZM599.87,438.39l0.12,0.08l0.02,0.12l-0.07,-0.09l-0.06,-0.1ZM599.82,439.43l0.16,1.13l-0.14,0.22l-0.37,-1.33l0.35,-0.02ZM585.61,305.0l0.49,-0.07l0.4,-0.5l-0.14,-2.55l0.52,-0.43l2.67,0.65l0.91,-0.13l-0.02,1.53l-1.36,0.55l-1.7,1.42l-0.5,0.98l-0.28,0.03l-0.2,-0.69l-0.77,-0.8ZM580.19,367.11l0.33,-1.37l0.49,0.37l-0.3,0.82l0.31,0.74l1.17,-0.11l2.88,1.01l0.66,-0.53l1.83,0.03l0.71,2.5l0.42,0.4l-0.04,0.79l-7.4,1.27l-1.1,-0.39l-2.06,-2.68l-0.25,-1.55l0.43,-0.5l1.6,-0.02l0.32,-0.8ZM579.32,359.58l1.96,2.07l-0.27,1.41l-0.22,-0.53l0.31,-0.6l-1.14,-0.8l-0.64,-1.55ZM575.3,680.75l0.71,-0.09l0.76,-0.89l1.39,-0.92l0.34,0.08l-0.66,2.13l-2.24,0.45l-0.3,-0.76ZM578.38,289.95l0.39,0.85l-0.26,1.18l-1.22,-0.22l-0.25,-0.33l0.39,-1.2l0.96,-0.29ZM575.01,293.4l0.88,-0.93l0.29,0.29l-0.34,1.92l-0.83,-1.28ZM575.89,294.88l0.04,0.13l-0.04,-0.01l-0.01,-0.11ZM576.25,295.51l0.29,0.14l0.49,-0.38l-0.04,-0.63l0.52,-1.05l0.6,0.68l-1.02,0.9l0.3,1.54l-1.02,-0.28l-0.11,-0.92ZM577.71,297.2l0.02,0.04l-0.01,0.07l-0.02,-0.0l0.0,-0.1ZM570.15,460.77l0.38,-0.61l-0.43,-0.34l-0.62,0.04l0.31,-0.59l1.82,0.42l0.62,-0.18l3.09,1.4l0.74,0.76l-0.23,0.36l0.17,0.58l0.75,0.13l-0.55,0.43l0.0,0.91l-0.96,-0.13l-0.54,-0.41l-0.77,0.13l-2.65,-2.31l-1.12,-0.6ZM576.82,357.19l-1.38,0.21l-0.52,-0.78l0.33,-0.71l0.51,0.07l0.41,0.98l0.65,0.23ZM560.26,382.27l0.11,-0.65l-1.23,-3.19l0.23,-2.62l1.91,-6.94l1.01,-2.27l2.5,-1.76l0.52,0.49l1.28,-0.04l1.21,-1.15l2.26,0.23l0.93,0.51l2.75,0.49l1.19,1.62l-0.56,4.02l0.68,1.8l0.66,0.84l0.13,1.72l0.65,2.21l-0.39,2.68l-0.44,1.07l-0.71,0.56l-0.35,1.08l-0.91,0.18l-0.45,1.05l-0.76,0.24l-1.47,1.26l-2.69,0.15l-0.82,0.68l-1.27,0.08l-0.77,0.51l-2.57,0.08l-0.66,-0.58l-1.19,-2.69l-0.61,-0.51l-0.18,-1.16ZM571.3,358.81l-0.19,-1.46l0.43,-1.64l0.63,0.35l1.03,-0.0l0.86,2.03l1.45,1.5l-0.81,0.96l0.08,0.44l0.56,0.32l-0.21,0.34l0.32,0.47l-0.51,0.17l-0.44,-0.99l-2.98,-1.7l-0.23,-0.79ZM574.04,604.16l0.73,-2.32l-0.16,-1.61l0.69,-1.52l0.45,2.41l-0.07,1.86l-0.87,0.26l-0.77,0.92ZM570.75,628.39l0.13,-0.06l0.12,-0.02l-0.25,0.08ZM564.25,610.37l-0.85,-0.98l2.24,-4.31l1.24,-1.58l-0.61,1.2l0.3,0.88l-2.31,4.8ZM567.46,604.71l1.4,-1.13l0.64,-4.24l-0.08,-1.98l0.95,0.11l0.62,1.43l1.16,0.56l-0.62,0.83l-0.22,2.21l-0.47,0.0l-0.39,0.59l-1.2,4.58l-1.11,2.0l-1.02,-0.49l1.41,-3.88l-0.43,-0.5l-0.62,-0.09ZM572.72,599.43l-0.23,-0.07l0.17,-0.06l0.06,0.13ZM451.74,52.32l0.69,-2.07l0.87,-1.1l0.71,0.31l1.18,-0.2l0.09,-0.56l-0.42,-0.79l0.2,-0.57l1.49,-0.25l0.44,-0.98l1.27,-0.56l1.13,0.37l0.59,-0.57l1.03,1.9l1.14,0.89l0.97,-2.42l-0.13,-0.8l0.36,0.02l0.47,-0.74l-0.15,-2.05l1.2,-1.41l1.7,-0.66l0.72,-0.65l0.67,0.63l1.12,-0.29l0.59,0.26l0.73,1.43l-0.5,1.08l0.12,0.63l2.5,2.18l0.46,0.04l0.18,-0.43l-0.18,-0.75l-0.41,-0.63l-1.05,-0.65l1.06,-0.68l-0.66,-1.47l1.06,-0.2l1.69,0.29l0.71,0.7l2.7,4.64l0.59,-0.18l0.12,-0.51l-1.58,-3.63l1.35,0.04l0.83,2.15l0.69,0.92l0.49,0.25l0.47,-0.07l0.05,-0.34l0.69,0.11l0.13,-0.43l-1.0,-3.09l-8.1,-3.86l-0.59,-1.77l0.89,-0.61l0.85,0.23l2.74,-0.54l0.65,-1.04l0.68,-0.19l0.14,-0.81l-0.52,-0.77l0.23,-0.71l-0.46,-0.49l0.04,-1.2l-0.21,-0.46l-1.37,-0.5l0.33,-0.48l3.71,-0.62l0.13,0.41l-1.0,0.36l0.04,0.88l1.63,0.69l0.67,1.21l0.65,0.08l0.39,-0.44l1.77,0.48l0.96,1.15l0.51,2.15l1.36,1.64l0.38,1.19l-0.14,0.89l-0.47,0.55l0.41,0.55l4.05,0.0l1.0,0.66l0.49,-0.54l-0.35,-1.06l-0.84,-0.9l-2.02,0.14l-1.84,-3.62l-0.12,-1.14l1.22,0.99l0.75,0.05l1.17,1.49l2.41,1.91l4.1,2.57l0.35,0.62l0.86,-0.19l1.45,0.79l2.48,3.92l1.54,0.16l0.34,-0.63l-2.22,-3.17l-0.22,-0.8l-0.88,-0.55l0.23,-0.64l-0.18,-0.59l-4.63,-1.93l-0.16,-0.54l0.33,-0.73l-0.41,-0.5l-1.54,0.07l-6.03,-5.79l0.48,-3.29l3.63,0.0l0.43,-0.38l-0.14,-0.58l-1.68,-0.41l-1.62,-1.6l-0.39,-1.53l0.72,-0.58l2.38,0.96l2.28,2.63l1.59,-0.26l0.26,-0.49l-0.18,-0.58l-2.24,-3.2l-0.35,-1.25l-1.46,-1.54l-0.34,-1.23l4.14,0.81l0.76,1.61l0.19,1.42l1.43,1.1l0.51,-0.09l0.22,-0.48l-0.81,-1.5l2.82,1.01l2.43,-0.47l0.41,-0.66l-0.27,-0.5l-5.43,-1.64l-0.3,-1.04l0.71,-0.14l0.3,-0.65l-0.29,-0.34l-2.51,-0.68l-0.23,-0.59l0.79,-1.16l2.42,-1.2l1.35,2.63l0.78,-0.03l0.59,-2.17l0.39,0.43l0.27,2.33l0.8,-0.12l1.24,0.61l0.34,-0.45l-0.34,-0.48l0.53,-0.41l-0.43,-1.1l0.49,-0.48l2.57,1.25l0.9,1.59l0.13,0.98l0.81,0.54l1.15,2.21l2.82,2.06l-0.64,1.76l-0.16,2.01l0.28,0.62l0.64,0.14l1.54,-4.56l0.82,-0.53l0.09,-0.91l-3.57,-2.25l-0.47,-1.1l0.86,-0.46l0.21,-0.66l-0.44,-0.52l-1.29,0.2l-1.4,-2.41l-3.04,-2.83l0.09,-0.45l0.51,0.21l3.22,-1.24l0.4,-0.6l2.24,0.0l0.84,0.42l0.87,-0.67l2.99,0.6l2.12,3.85l5.6,4.08l0.5,-0.02l0.35,-1.06l-0.25,-0.5l-2.6,-1.39l-1.16,-1.46l-0.66,-1.55l-0.82,-0.55l0.93,-2.75l0.94,-0.86l0.21,-0.66l-0.31,-0.32l0.66,-0.73l0.33,0.42l0.58,-0.12l0.55,-0.94l1.89,-0.25l-0.21,2.37l1.45,2.23l3.17,1.29l0.44,-0.09l0.08,-0.44l-0.32,-0.67l-2.17,-2.21l-0.72,-0.33l1.07,-2.17l0.76,-0.32l-0.02,-0.64l3.36,-0.89l0.25,0.77l-0.16,0.79l1.08,0.42l-0.26,1.14l0.82,0.44l1.53,-1.47l0.36,1.0l0.44,0.19l1.01,-0.24l0.54,-0.91l0.9,-0.0l0.12,1.19l0.42,0.61l0.63,-0.02l0.36,-0.73l1.05,-0.69l1.62,0.66l0.58,-0.43l0.83,0.39l0.41,-0.76l0.99,-0.16l0.25,0.88l-1.1,2.19l-0.01,0.58l-0.88,0.78l-0.27,0.81l-3.71,3.57l-0.63,1.19l0.04,0.97l0.69,0.28l4.24,-1.92l1.08,-2.01l0.53,-0.42l0.63,0.14l0.48,-0.34l-0.23,-1.32l2.08,-3.05l0.9,-0.26l0.01,0.92l0.38,0.63l0.51,0.26l1.13,-0.08l0.28,-0.66l-0.86,-0.58l0.4,-1.87l-0.55,-0.45l0.07,-0.42l0.32,-0.16l-0.04,0.76l0.89,0.38l0.38,1.03l1.55,1.42l0.62,-0.25l-0.07,-0.8l0.49,-1.52l2.18,-0.33l0.41,1.66l-1.15,1.1l-0.11,0.47l1.02,0.15l0.62,0.95l1.31,0.44l-0.36,0.73l0.51,0.63l1.45,0.06l0.29,3.25l-0.55,0.42l-0.1,0.83l0.64,0.3l1.14,-0.84l0.21,-1.24l0.48,0.03l0.3,-0.55l-0.29,-0.57l0.83,-0.34l0.18,0.89l0.7,0.19l0.38,-0.7l2.02,-0.25l1.13,0.69l1.62,2.11l0.87,2.8l-0.16,1.77l-2.15,2.42l0.02,0.55l0.73,0.42l-0.64,2.61l-0.85,0.33l0.11,1.15l-3.8,6.68l-1.76,-0.44l-0.22,0.57l1.28,1.46l-0.55,1.01l-1.28,0.23l-0.76,-0.54l-0.72,0.36l-1.27,-0.01l-0.3,0.67l0.18,0.31l-2.31,1.76l0.2,0.86l1.88,-0.26l-0.64,0.83l-0.79,-0.44l-0.64,1.01l-5.84,2.51l-1.85,1.28l-5.33,-3.26l-0.5,0.06l-0.04,0.5l0.48,0.66l4.34,2.87l-1.55,0.25l-0.34,0.49l0.3,0.49l1.32,0.48l5.23,-2.85l2.62,0.55l-4.8,5.09l-1.88,2.75l-1.32,1.21l-1.66,-0.02l-0.39,0.31l-0.02,0.82l0.35,0.28l-0.42,0.58l-1.26,0.96l-1.26,0.35l0.08,0.9l0.72,0.36l1.09,-0.38l-0.72,1.2l0.2,0.69l0.44,-0.06l1.45,-1.28l0.41,-1.48l6.21,-5.33l2.03,-2.24l4.49,-3.81l0.72,-1.07l4.02,-2.71l0.76,1.57l-0.35,2.33l-1.26,2.03l-0.71,2.08l-2.19,1.91l-1.19,3.4l-0.3,2.47l-1.61,3.14l-1.55,0.46l0.34,2.05l-0.77,0.57l-0.36,1.83l-0.98,1.24l-1.43,3.84l-0.67,0.72l0.32,1.06l-0.68,1.93l-0.1,3.45l-0.92,1.26l-2.31,0.46l0.03,-1.44l-0.89,-1.49l-2.64,-2.17l-0.38,-0.08l-0.38,0.36l0.14,0.81l1.88,1.85l0.82,1.29l-0.16,0.8l0.3,1.23l2.67,1.65l-0.45,1.72l-2.6,0.08l-1.58,0.99l-1.44,2.04l-0.7,0.21l-1.47,-1.63l-0.86,-0.0l-0.83,-0.69l-0.85,0.3l0.07,0.86l2.62,1.9l-0.48,0.51l-1.19,0.12l-0.35,0.47l0.77,1.03l0.96,-0.01l3.07,-1.02l2.02,-1.9l1.19,-0.7l0.66,0.72l0.23,0.78l-0.54,0.66l-0.02,1.17l-2.68,1.86l-0.36,1.03l0.33,1.04l0.6,0.04l0.84,-0.84l0.83,0.22l-0.4,2.42l-1.3,1.67l-2.93,2.44l-0.9,-0.33l-0.94,0.36l-1.35,-0.56l-0.77,-1.75l0.47,-0.44l-0.2,-0.64l-2.66,-0.1l-1.42,0.59l0.2,-0.41l-0.47,-0.57l-2.3,-0.44l-0.42,0.2l-0.3,0.53l-2.21,1.01l0.32,1.26l0.78,0.8l1.63,-0.58l3.73,0.62l0.69,-0.13l0.33,0.96l1.12,1.3l0.21,1.43l0.41,0.69l-0.5,1.48l-1.61,0.49l-0.93,-1.22l-0.33,-0.19l-0.59,0.3l0.45,2.43l-0.12,0.34l-0.89,0.37l-0.66,-0.18l-1.24,0.25l-1.1,-0.74l-0.31,-0.62l-0.62,0.0l-0.44,1.08l1.15,1.79l-0.21,0.79l-2.15,-0.19l-0.9,-0.82l-0.44,0.2l-0.53,-0.65l-0.64,0.63l-1.33,-1.41l-4.05,-0.14l-0.46,-0.58l-0.51,0.03l-0.28,1.22l0.64,0.86l-0.3,0.42l-0.86,-0.02l-0.22,0.67l1.3,2.66l-3.18,-0.69l-0.6,0.26l-0.39,0.65l0.22,0.47l1.21,0.71l1.1,-0.14l1.12,0.66l-0.49,0.59l0.08,0.44l0.44,0.09l3.25,-1.28l1.45,0.26l1.49,-0.62l1.32,0.83l4.41,-0.55l1.2,-0.53l1.11,0.11l-1.26,0.66l-0.1,0.75l0.31,0.47l0.67,0.07l0.02,0.42l0.59,0.44l0.77,1.4l-1.46,0.01l-1.23,0.59l-2.09,-0.73l-1.12,-0.06l-0.58,-0.48l-0.38,-1.44l-1.52,-0.97l-4.31,1.01l-1.15,-0.07l-4.77,0.77l-0.62,0.97l0.35,0.65l0.46,0.1l0.7,-0.57l6.41,-0.13l2.72,0.21l0.19,0.48l-2.7,0.07l-2.24,0.88l-1.48,1.32l-0.61,-0.12l-0.72,-0.81l-1.56,-0.2l-4.06,0.92l-0.19,0.66l0.5,0.31l4.62,-0.44l0.75,0.49l-0.94,1.6l-1.1,4.15l-0.03,0.51l0.54,0.79l0.8,-0.47l0.39,-2.12l1.23,-2.94l4.43,-2.33l4.73,0.72l-0.13,0.73l-2.01,0.85l-0.9,1.13l-0.08,0.88l0.29,0.32l0.63,-0.12l0.61,-0.84l1.87,-0.31l0.54,-0.49l2.04,-0.04l1.87,0.43l0.48,0.77l-0.26,0.33l0.16,0.57l0.54,0.13l-0.16,0.7l0.43,0.62l-0.38,0.68l0.23,1.43l1.14,0.67l-0.57,0.26l-0.76,1.35l-0.89,0.07l-0.87,0.75l-5.59,0.06l-1.11,0.86l0.08,0.94l2.26,-0.43l0.52,0.16l0.48,0.94l5.31,1.54l0.39,0.75l-0.13,0.36l-1.23,0.14l-0.8,2.86l-2.93,-0.69l-0.95,0.47l-1.44,-0.34l-1.6,1.33l0.25,1.1l1.78,0.65l1.58,0.05l0.82,0.41l2.64,-0.49l0.16,0.51l-0.99,2.88l-1.15,-0.73l-0.79,-0.01l-1.1,0.94l-0.29,1.21l-0.88,0.38l-0.63,0.78l-0.6,-0.06l-0.88,-0.8l-3.65,0.65l-1.84,-1.19l-0.57,0.14l-0.24,0.43l-0.02,0.42l0.34,0.23l-0.73,0.72l-0.18,1.02l0.75,1.01l0.95,0.24l1.04,0.92l0.27,1.05l-0.42,0.63l0.39,0.9l-0.39,0.57l0.16,0.44l1.02,0.12l0.38,0.87l0.56,0.18l-1.13,1.17l0.25,1.39l-0.2,0.81l-1.26,1.22l0.24,1.16l-1.23,0.63l-0.77,1.11l0.11,-1.32l-0.64,-0.26l-0.6,0.36l-1.19,2.16l-2.82,-0.37l-1.05,0.38l-0.61,0.81l-2.98,-0.37l-1.27,-0.5l-1.63,-1.58l-1.3,-0.54l-0.68,-1.26l-1.01,-0.6l-0.31,-1.56l-1.32,-1.07l-0.43,-1.42l-0.29,-0.22l-0.64,0.24l0.24,2.06l0.71,0.66l0.76,1.53l-0.06,2.42l1.63,1.42l1.5,-0.02l0.09,0.52l-3.2,1.07l-1.6,-0.46l-0.46,0.18l-0.12,0.9l1.53,0.94l0.27,1.65l0.43,0.54l1.08,-0.09l3.07,-3.13l5.01,1.29l-1.18,2.84l0.37,0.61l0.48,0.01l1.7,-3.12l1.38,-1.38l1.27,-0.05l1.22,0.52l0.91,0.89l0.32,1.24l-1.49,3.21l-0.19,0.79l0.27,0.89l1.89,-0.04l0.82,-0.37l-0.27,1.92l0.35,0.4l1.41,0.19l0.44,-0.3l-0.08,-1.12l0.68,-0.6l0.01,-1.33l0.73,-0.62l-0.09,-0.72l1.05,-0.56l1.16,1.38l0.04,0.8l0.39,0.52l-0.13,0.77l0.99,0.85l-0.07,2.9l0.31,0.97l-0.24,0.38l-1.04,0.33l-0.69,1.97l0.33,0.71l-0.92,0.7l-0.21,0.86l-0.61,-0.43l0.05,-1.71l-0.45,-0.35l-1.51,0.15l-0.69,3.59l-1.14,0.94l-0.29,2.39l-0.75,-0.32l-0.7,0.12l-2.66,2.3l-0.96,-0.18l-1.13,1.23l-0.98,0.15l-0.3,0.82l-1.1,-0.08l-0.18,-0.54l-0.48,-0.19l1.24,-4.05l-0.16,-1.17l-1.33,-1.41l-1.21,-0.5l-0.2,-1.19l-0.72,-0.08l-0.51,1.42l-0.87,0.76l-2.11,-0.3l-0.59,-0.37l0.35,-1.3l-0.28,-0.78l0.99,-1.03l0.15,-1.15l-0.47,-0.25l-2.08,1.67l-0.32,-0.04l-1.84,-3.27l-0.95,-0.99l-0.75,0.15l0.03,0.65l1.23,1.88l0.4,1.57l0.88,1.07l1.52,0.9l-0.52,1.16l0.66,1.67l-0.1,0.44l-0.44,0.49l-2.56,0.43l-1.64,-1.42l0.12,-0.88l-0.45,-2.08l-1.7,-2.06l-0.03,-2.0l-0.59,-0.34l-0.9,1.19l-0.1,0.63l1.8,3.15l0.5,1.84l-0.26,0.84l0.29,0.94l-2.22,-0.38l-0.42,-0.91l-0.57,-0.29l-1.04,-1.39l-0.45,-2.01l-1.12,-0.83l-0.73,0.15l-0.19,0.33l0.17,0.66l0.59,0.48l-0.19,1.8l0.47,1.2l-0.07,0.66l-1.88,0.31l-0.76,-0.7l-0.82,-2.14l-0.74,-0.65l-0.59,0.24l-0.18,1.75l0.76,2.51l3.36,2.1l-4.05,0.78l-0.17,-0.53l-0.43,-0.17l-0.86,0.21l-1.64,-0.98l-3.61,-0.7l-0.25,-1.66l0.81,-0.57l0.3,-0.93l-0.3,-0.71l-1.67,-1.83l-0.79,-0.43l-0.46,0.74l1.83,2.29l-1.82,1.26l-0.29,2.61l-1.72,-0.52l0.05,-1.03l-0.5,-0.56l-1.19,-0.11l0.11,-1.0l-0.59,-0.78l0.12,-1.27l-0.75,-0.92l-0.57,0.19l-0.14,0.44l-0.02,1.75l0.58,0.84l-0.25,1.32l0.65,0.8l-0.75,1.5l-1.01,-1.89l-0.62,0.25l-0.18,0.98l-2.32,-0.55l0.33,-0.54l-0.25,-0.93l0.28,-1.21l-0.99,-2.63l0.2,-0.93l-0.41,-1.49l0.36,-1.33l-0.23,-1.36l-0.79,0.13l-0.92,2.26l-0.1,0.53l0.67,2.07l-0.79,0.78l-0.49,2.29l0.22,1.08l-0.57,0.84l-0.11,-0.66l-0.58,-0.23l-0.42,0.57l-1.18,-1.48l0.11,-1.05l-0.38,-0.97l-0.57,-0.07l-0.37,0.33l0.17,-1.09l1.01,-1.13l-0.1,-1.25l0.32,-0.56l-0.45,-0.66l-0.35,-2.19l2.79,-2.17l0.25,-0.78l1.25,-0.68l1.04,-1.49l0.61,-0.15l0.32,-0.85l-0.2,-0.17l0.75,-0.3l0.28,0.5l0.43,0.05l1.28,-0.65l0.92,0.02l0.48,0.85l1.2,-0.21l0.63,-0.4l-0.14,-0.62l-0.41,-0.19l0.25,-0.54l1.25,-0.33l0.81,1.11l0.73,0.3l0.53,-0.34l-0.18,-0.78l0.93,-0.14l0.2,-0.7l-0.84,-0.43l-0.64,0.28l-1.51,-0.68l1.15,-0.62l0.08,-0.67l-0.57,-0.43l-1.12,-0.06l0.7,-0.83l0.75,0.04l0.55,-0.36l0.01,-0.73l-1.82,-0.26l-1.32,0.87l-1.48,-0.35l-0.47,-1.74l0.7,-1.17l-0.37,-1.65l-0.66,-0.37l-0.04,-0.64l-2.09,-1.62l0.29,-1.71l-0.14,-1.8l0.3,-0.38l4.54,-2.14l1.61,0.28l0.92,0.79l1.21,0.46l1.2,0.95l1.33,1.91l1.61,5.77l-0.33,1.08l0.42,0.53l1.03,-0.76l0.8,1.14l2.38,0.43l1.44,1.48l1.65,0.4l0.48,-0.5l-0.84,-2.1l1.03,0.34l1.46,-0.41l3.23,1.12l0.52,-0.45l-0.4,-1.35l-1.63,-0.75l-0.14,-0.42l0.98,-0.16l1.27,-1.23l1.88,-4.33l1.83,-6.33l0.09,-1.34l-0.47,-1.28l0.71,-0.25l0.53,-1.09l-0.41,-0.77l-0.98,0.14l-0.92,0.61l-0.61,1.05l-0.12,1.19l0.37,1.62l-0.9,1.02l-0.23,1.38l-0.6,1.09l-0.27,1.99l-0.61,1.04l-0.37,1.56l-1.97,2.55l-2.33,-0.54l-2.31,0.4l-0.26,-0.33l-0.08,-0.66l1.0,-1.0l0.92,-1.92l0.14,-1.11l-0.61,-0.9l-0.49,0.09l-0.15,1.91l-1.62,1.74l-1.72,-1.12l0.15,-0.94l-0.35,-0.58l0.6,-0.59l0.05,-0.81l0.62,-0.08l0.44,-0.46l1.34,-2.16l1.84,0.19l0.09,-0.86l-1.56,-0.74l-3.62,0.66l-0.97,0.87l-0.23,-0.84l-0.7,-0.2l2.79,-2.91l0.61,0.43l1.16,0.11l1.01,-1.06l0.9,0.03l0.58,-0.48l-0.36,-0.64l-1.58,0.15l-1.19,0.65l-1.0,-0.8l0.37,-1.3l0.65,-0.03l0.95,-0.82l2.33,0.9l1.11,-0.92l-0.44,-0.55l-0.9,0.06l-1.19,-0.63l-1.72,-0.03l-0.72,0.5l0.57,-2.56l0.98,-0.44l0.28,-0.54l-0.23,-0.79l-0.52,-0.12l-0.5,0.68l-0.25,-0.33l0.2,-3.37l0.68,-2.02l-0.18,-0.67l-0.66,0.0l-0.89,2.18l-0.59,2.68l0.15,1.9l-0.32,1.44l-1.81,4.32l-3.63,1.45l0.11,-1.87l0.67,-0.4l0.83,-1.75l0.41,-2.83l-0.04,-1.03l-0.37,-0.4l-0.67,0.41l-0.04,0.9l-0.73,1.09l-0.08,1.26l-0.67,1.11l-1.08,-0.3l-0.42,0.23l-1.1,2.26l-3.45,-0.05l0.31,-0.81l1.65,-0.52l0.28,-0.39l-1.13,-0.98l-1.15,0.28l-0.09,-5.02l1.57,-2.69l1.32,-0.03l0.39,-0.42l-0.33,-1.08l-1.04,0.08l0.62,-1.47l0.17,-1.64l1.42,-2.27l0.48,0.12l2.35,-0.99l1.53,-0.01l2.37,-2.21l0.85,-0.16l1.72,1.18l4.75,0.51l0.97,1.03l1.21,0.5l0.89,1.13l1.99,0.73l1.18,2.03l1.53,1.04l0.79,-0.62l0.15,-0.65l-1.92,-2.43l0.37,-0.4l1.19,-0.01l0.16,-0.57l-0.27,-0.62l-0.92,-0.38l-1.93,0.76l-1.58,-1.52l-0.61,-0.09l-0.1,-0.39l0.91,-0.22l2.98,0.45l1.97,-1.17l0.79,-0.05l0.09,0.45l0.67,0.02l0.5,-1.52l-0.55,-0.91l0.17,-1.61l0.84,-1.58l-0.1,-0.59l-0.67,-0.51l-1.85,1.66l-0.92,2.69l-1.66,0.83l-2.17,-1.17l-3.6,0.4l-1.43,-0.61l-1.58,0.21l-1.1,-1.32l-1.26,-0.6l-0.08,-0.74l1.05,-1.47l1.34,0.33l1.16,2.03l2.71,0.4l0.56,-0.33l0.25,-0.68l-0.33,-0.64l-0.61,0.03l-0.26,0.34l-0.56,-0.39l-0.26,-0.71l-1.22,-0.78l-0.23,-0.41l0.4,-1.06l-0.47,-1.01l-0.67,0.16l-0.43,0.84l-0.35,-0.07l-1.21,-5.65l-2.04,-1.92l-0.91,-2.61l-0.03,-0.89l-1.66,-1.68l-1.51,-0.72l-1.23,0.27l-2.7,-1.32l-0.09,-1.12l0.47,-0.6l-0.48,-1.66l0.37,-1.78l1.97,0.75l1.45,0.08l1.1,0.9l0.6,-0.29l0.24,-0.72l-1.65,-1.5l-4.23,-0.93l-0.35,-0.46l-0.61,-2.66l0.47,-4.47l2.35,-0.75l2.91,1.75l3.14,-0.45l2.65,0.1l1.03,0.35l3.45,4.54l4.84,5.13l1.18,2.97l0.03,0.75l0.56,0.75l0.96,0.24l0.19,1.07l-0.32,0.05l-0.22,0.65l0.89,0.78l0.73,-0.24l0.62,-1.11l3.9,1.55l0.52,-0.5l-0.27,-0.54l2.17,-1.37l0.92,-0.09l0.79,-1.85l-0.48,-0.53l-3.05,0.8l-0.37,0.49l-1.68,0.64l-2.12,-1.46l-0.81,0.08l0.02,-0.58l-0.53,-0.6l0.04,-1.36l-0.62,-2.0l0.96,-0.54l0.09,-0.76l-0.49,-0.5l-2.52,-0.73l-0.85,-0.65l-4.01,-5.71l-0.43,-1.05l-0.86,-0.81l5.09,-2.31l1.74,-0.36l5.59,-2.27l0.43,-0.66l-0.13,-0.55l0.89,-0.45l2.37,-0.55l0.44,-0.45l1.58,-0.11l1.62,-0.76l2.99,-0.42l0.23,-1.01l-0.41,-0.5l-3.52,-0.08l-4.6,0.68l1.16,-0.88l0.71,-1.03l1.4,-0.6l0.84,-0.99l1.04,-0.52l0.29,-0.62l0.83,-0.21l0.63,-0.71l2.75,-1.12l4.08,-0.95l0.42,-0.47l-0.0,-1.14l-0.91,-0.71l-1.88,0.69l-1.65,-0.24l-2.68,0.32l-0.66,0.63l-2.82,1.14l-0.11,-0.19l0.15,-1.32l-0.46,-1.97l1.55,-3.08l0.19,-1.3l-0.32,-0.5l1.14,-0.81l0.99,-2.7l0.8,-1.14l0.91,-0.61l0.61,-1.09l0.66,-0.3l1.11,-1.9l-0.06,-0.53l-0.48,-0.43l-0.63,0.05l-5.09,5.04l-1.84,3.71l0.04,2.02l-0.39,0.13l-2.57,-2.19l-0.49,-0.02l-0.14,0.47l0.33,0.8l1.88,2.04l-0.64,0.51l-0.25,1.54l0.06,0.71l0.78,0.53l-0.04,0.27l-0.2,0.65l-0.64,0.52l-0.02,1.11l-0.5,1.46l-1.21,0.92l-0.55,1.08l-1.23,0.78l-2.11,2.37l-1.33,1.04l-1.55,0.35l-3.58,2.05l-2.23,0.67l-0.65,-0.11l0.06,-2.17l0.77,-0.31l0.27,-0.76l2.99,-1.51l0.87,-1.09l0.66,-1.95l-0.54,-0.45l-1.04,-0.18l-2.27,2.07l-0.25,0.82l-2.99,1.38l-0.58,-0.01l-0.11,-0.89l0.76,-0.46l0.95,-1.9l-0.9,-0.83l-0.52,0.12l-1.54,2.61l-0.89,-0.11l0.15,1.78l0.62,2.07l-0.34,2.24l-2.15,0.9l-1.2,-0.45l-1.25,0.08l-0.92,0.72l-2.09,-0.77l-0.76,0.11l1.15,-1.99l-0.12,-0.47l-0.48,-0.02l-0.98,0.69l-1.13,1.77l-2.57,-1.54l0.71,-2.8l3.06,-6.53l0.63,-0.86l1.13,-0.52l0.72,-0.77l4.09,-1.21l0.43,-0.47l5.84,-2.19l1.42,-0.97l0.37,-0.58l-0.12,-0.6l-0.48,-0.14l-7.58,3.06l-4.34,1.05l-0.43,0.42l-0.62,-0.07l-1.71,0.85l-1.49,1.33l-1.05,1.9l-1.09,2.68l-1.81,2.83l-0.77,2.67l-1.52,-0.28l-0.8,-0.73l-1.03,-0.23l-2.28,-2.31l-1.42,-0.85l-1.98,-2.17l-0.26,-0.87l0.64,-0.61l0.91,-0.11l0.88,-0.71l1.83,-0.49l2.43,-0.05l1.09,0.46l2.12,-0.29l0.58,-0.47l1.5,-0.1l1.16,-0.81l0.66,-1.08l1.94,-0.42l-0.13,-1.51l2.72,-2.98l1.56,-0.98l0.47,-0.95l-0.22,-0.57l-1.33,-0.38l-1.3,0.38l-2.72,1.87l-1.35,1.52l-0.41,1.09l-0.82,0.68l-1.81,0.49l-1.83,1.16l-2.07,-0.21l-8.45,1.96l-1.29,-1.35l-0.66,-2.33l0.14,-0.8l1.09,-1.27l0.58,-0.03l0.69,0.86l0.67,0.17l2.71,-1.17l0.19,-0.56l-0.72,-0.69l-1.46,0.36l-2.15,-1.84l1.2,-0.55l0.75,-1.22l0.98,-0.29l0.81,-1.29l0.85,0.04l-0.24,-1.23l3.25,-0.87l0.58,0.55l1.55,-0.19l0.94,0.76l0.75,-0.39l-0.28,-0.99l-3.36,-1.64l-0.6,0.23l-0.4,-0.66l-0.6,-0.13l-1.12,1.08l-1.62,0.45l-2.23,1.52l-3.74,3.32l0.07,-0.73l-1.39,-1.38l2.95,-2.81l0.64,-0.09l0.27,-0.74l1.23,-0.42l0.23,-0.89l-0.39,-0.5l-1.5,0.07l-0.97,-1.81l-0.7,-0.3l-0.36,0.31l-0.09,0.95l-0.78,-0.45l-0.56,0.06l-0.44,1.08l-0.91,0.69l0.02,1.51l-1.09,0.35l-0.29,-1.24l-1.85,-0.94l0.27,-0.49ZM467.33,187.3l-0.02,0.69l0.08,0.54l-0.23,-0.5l0.17,-0.74ZM511.49,194.25l-0.08,0.23l-0.06,0.04l0.07,-0.21l0.07,-0.07ZM521.85,108.29l4.22,-0.05l-0.03,0.87l0.41,0.88l1.07,0.74l-3.95,0.26l-0.99,-1.01l-0.38,-1.53l-0.36,-0.16ZM462.51,44.67l-0.48,-0.1l0.11,-0.42l0.37,0.52ZM480.09,42.55l-0.16,-0.42l0.09,0.02l0.07,0.4ZM553.84,2.1l0.09,-0.04l0.0,0.03l-0.09,0.01ZM486.09,154.14l-1.65,1.09l-0.22,-0.13l0.52,-1.19l1.39,0.02l-0.04,0.21ZM569.87,660.89l-0.05,-0.21l0.07,-0.55l0.68,0.7l-0.69,0.06ZM569.08,481.26l0.24,0.11l-0.12,0.21l-0.05,-0.02l-0.08,-0.31ZM566.15,517.71l0.13,-0.53l1.96,-0.83l-0.06,0.3l-2.04,1.06ZM560.64,465.59l0.03,-1.29l0.44,0.78l0.6,0.12l1.39,-0.87l0.93,0.26l0.4,-0.27l1.43,-0.03l0.32,0.76l1.55,0.15l0.21,0.92l1.3,1.46l-0.31,1.54l-1.35,1.44l-1.17,0.57l-5.6,-4.82l-0.17,-0.72ZM567.82,657.04l0.59,-0.24l0.46,0.97l-0.38,0.0l-0.67,-0.73ZM567.16,481.62l0.8,-0.2l0.12,0.15l-0.37,0.09l-0.54,-0.03ZM563.99,454.06l0.28,-0.52l2.0,-0.55l-0.62,1.38l-1.66,-0.31ZM561.83,604.34l0.36,-1.75l1.39,-0.34l0.4,-0.87l1.27,-0.11l-2.77,2.78l-0.66,0.28ZM562.7,590.99l0.29,-0.1l0.15,0.19l-0.33,-0.12l-0.11,0.03ZM561.98,579.11l0.03,-0.21l0.16,-0.38l0.23,0.82l-0.42,-0.23ZM562.3,593.73l-0.14,-1.09l0.27,-0.29l0.22,0.48l-0.34,0.91ZM546.88,664.64l1.55,-2.5l0.88,0.0l1.25,-0.62l2.53,-0.61l3.06,0.13l4.08,4.11l1.48,3.29l-0.27,0.47l-0.49,-0.29l-2.64,-0.26l-2.99,-1.37l-2.11,-0.14l-5.37,-1.55l-0.96,-0.65ZM555.56,342.89l0.84,0.24l1.8,-0.44l0.34,1.06l-1.68,2.76l0.27,1.37l-1.29,0.66l-0.59,-0.32l-0.89,-1.38l-0.39,-3.32l0.49,-0.73l0.64,-0.27l0.47,0.38ZM551.05,487.28l1.41,0.39l0.98,-0.93l0.84,0.47l0.29,0.72l1.57,1.7l0.16,1.7l-0.27,2.48l-0.46,0.4l-1.52,6.75l-1.08,1.59l-1.24,-1.95l-1.17,-1.08l-1.25,-0.58l-0.94,-2.41l0.21,-4.01l1.63,-3.39l0.33,-1.37l0.54,-0.47ZM554.2,536.67l0.54,-0.67l0.8,0.1l-0.82,1.01l-0.52,-0.44ZM553.29,539.35l0.02,-0.17l0.05,0.01l0.01,0.12l-0.07,0.05ZM518.48,254.45l0.35,-1.71l-0.33,-1.57l1.93,-0.65l2.02,1.4l0.68,-0.02l0.3,-0.5l2.2,0.64l1.61,0.91l3.05,-0.36l0.81,-0.81l0.5,0.18l3.87,-0.8l1.86,1.09l2.86,0.73l0.78,0.87l0.71,0.07l0.33,0.39l0.94,1.57l0.34,1.25l0.99,0.64l1.02,-0.04l0.14,0.78l1.1,1.16l-0.17,0.91l0.28,0.48l1.0,0.89l1.32,0.27l-0.19,0.55l0.09,0.86l0.4,0.53l-0.16,0.98l0.84,0.64l0.74,-0.07l0.16,1.42l-1.02,0.76l-6.43,0.08l-0.92,-0.51l-5.12,0.35l-2.97,1.43l-3.27,2.62l-1.23,0.4l-1.03,-0.23l-2.95,-1.96l-1.55,-3.7l0.17,-1.66l-0.46,-0.82l0.3,-1.05l-0.47,-0.9l-0.74,-0.47l-0.91,0.24l-2.6,-0.56l-0.48,-0.67l-0.23,-3.22l0.77,-0.0l0.12,-0.63l-1.13,-1.22l-0.26,-0.96ZM542.49,343.15l1.11,-1.78l0.59,-1.7l1.13,-0.13l0.28,-0.54l0.91,-0.09l0.19,-0.59l-0.34,-0.9l0.25,-0.24l0.81,0.38l0.67,1.17l-0.8,1.23l-1.28,0.61l-1.46,1.61l-1.05,-0.25l-1.03,1.24ZM539.92,355.26l1.02,-3.29l1.77,-0.72l0.71,-1.13l-0.07,-1.13l0.47,-1.08l0.9,-0.14l0.14,-0.57l-0.89,-1.04l1.48,-1.21l0.9,-0.01l0.67,1.28l-0.6,1.55l-0.94,0.07l0.01,1.35l-0.55,0.73l0.12,0.8l-0.94,1.77l0.0,1.01l-0.47,0.5l-0.2,0.85l-2.02,0.99l-0.53,0.83l-0.81,-0.38l-0.16,-1.02ZM544.47,363.7l0.59,-0.78l0.44,-0.07l0.03,0.55l0.56,0.11l-0.77,0.79l-0.86,-0.6ZM546.32,361.77l-0.26,-0.61l-1.1,-0.61l2.08,0.52l-0.0,0.9l-0.72,-0.19ZM543.1,367.65l1.19,-0.44l0.95,0.97l-0.24,0.84l-0.95,1.27l-0.69,-0.65l-0.26,-1.98ZM491.6,444.1l0.6,-0.54l-0.26,-1.28l0.32,-1.1l-0.63,-1.23l0.66,-2.2l-0.44,-3.51l0.51,-1.23l-0.42,-0.97l0.42,-3.32l0.43,-0.97l-0.05,-1.17l0.6,-1.86l2.47,-2.98l0.48,-0.2l-0.15,1.45l0.49,1.08l0.82,-0.21l0.33,-0.69l1.19,0.7l-0.03,1.27l1.17,1.97l-0.29,0.44l-1.52,0.56l-0.23,0.9l0.81,0.97l1.34,0.7l0.53,0.65l-0.03,1.26l1.03,2.84l0.96,0.12l0.61,-0.39l0.52,-1.62l-0.04,-1.12l1.02,-2.43l0.72,0.33l-0.01,0.75l0.77,0.69l1.56,0.67l-0.42,1.38l1.36,1.37l1.5,0.21l0.63,0.62l0.85,-0.28l2.96,0.46l0.59,1.9l1.5,1.86l2.76,1.13l0.93,1.41l0.67,0.45l0.85,-0.02l0.66,0.61l1.7,-0.47l1.37,1.36l0.75,-0.07l2.34,2.78l0.66,0.36l0.28,3.89l1.81,2.28l-0.08,0.86l-2.81,1.51l-0.34,1.27l0.33,0.67l2.02,-0.2l1.22,-0.66l1.25,-0.19l0.59,-0.32l0.19,-0.61l0.65,-0.12l3.48,1.37l0.51,-0.57l-0.64,-1.28l0.26,-0.65l1.47,1.65l1.47,0.59l0.11,1.01l-1.42,-0.11l0.39,1.02l2.73,0.65l0.87,0.66l0.71,-0.04l0.09,0.37l-2.32,0.89l-0.92,1.85l-1.96,2.17l-0.72,0.34l-0.37,1.42l-0.79,-0.13l-3.55,-1.9l-1.25,0.09l-1.1,-1.13l-1.27,0.12l-1.57,-0.9l-1.68,0.2l-0.83,0.61l-0.91,-0.33l-0.6,-1.02l0.16,-0.59l1.17,-0.74l0.21,-0.8l-0.27,-1.3l-1.9,-1.28l-2.92,-0.04l-1.67,0.69l-0.24,-0.42l1.14,-2.21l0.1,-0.8l-0.5,-0.96l-0.43,-0.25l-0.73,0.12l-0.66,0.48l-0.31,0.78l-0.84,-0.15l-0.73,0.53l-0.52,-0.15l-0.94,0.53l-1.17,2.31l0.77,1.5l-0.29,1.2l0.41,0.83l-0.05,0.66l-0.67,-0.06l-0.56,0.37l-1.21,1.67l-0.65,0.42l-0.51,1.12l-0.85,-0.31l-0.98,0.2l-1.1,1.81l-0.45,3.06l-0.81,1.47l-0.8,0.38l-3.37,2.9l-1.45,0.7l-1.78,0.02l-0.58,-0.67l-0.59,-1.83l-0.22,-3.12l0.33,-1.21l-0.24,-1.47l0.26,-1.16l-0.27,-1.02l-0.84,-0.56l-0.08,-1.26l-0.32,-0.37l-0.44,0.22l-0.66,1.2l-1.18,0.2l-2.19,1.03l-2.41,-0.32l-1.34,0.23l-1.91,2.06l-1.94,0.07l-0.64,-0.91l0.24,-1.85l2.24,-3.9l3.46,-1.99l1.07,-0.94l1.19,-0.37l0.38,-0.61l-0.1,-1.44l-0.99,-1.14l0.06,-0.61l-0.61,-0.96l-0.15,-1.17l0.24,-0.73l-0.5,-0.71l0.07,-2.05l-0.31,-0.97l1.24,-4.08ZM537.12,125.64l0.14,-0.6l1.15,0.28l0.61,0.75l-0.27,0.43l-1.64,-0.85ZM528.13,339.23l0.71,0.43l0.53,-0.06l0.11,0.47l-1.79,0.18l0.44,-1.02ZM530.47,340.7l0.27,-1.09l-0.86,-1.08l0.03,-0.55l0.81,0.3l0.63,-0.45l0.4,0.44l-0.08,0.88l0.61,0.2l0.41,-0.54l0.84,0.27l1.61,-0.81l0.44,-1.19l1.15,0.08l0.29,0.86l0.7,0.66l-1.6,1.72l-1.98,0.49l-0.78,-0.68l-0.76,0.12l-0.17,0.63l1.17,2.24l-1.35,-0.46l-0.17,-1.79l-0.78,0.0l-0.15,0.27l-0.66,-0.53ZM532.8,452.93l0.06,-0.06l0.37,-0.01l-0.25,0.1l-0.18,-0.03ZM516.63,485.78l0.87,-1.45l0.09,-2.41l0.75,-1.27l0.74,-0.59l0.54,0.17l0.88,1.11l0.77,0.19l3.24,-2.28l2.59,0.08l1.19,-1.35l3.08,0.71l-0.52,1.61l0.24,2.58l-1.45,1.72l-1.8,1.19l-0.63,1.91l-1.56,1.53l-1.03,1.81l-2.6,2.52l-0.26,0.11l-0.58,-0.84l-1.09,-0.43l-1.39,0.44l-1.96,1.8l-0.27,-2.41l-1.84,-2.06l-0.26,-0.92l1.85,-2.17l0.41,-1.27ZM224.65,339.19l10.41,-29.67l1.43,2.96l1.64,2.0l1.52,0.57l0.36,0.5l3.12,1.81l3.61,2.71l0.69,2.27l2.5,3.21l4.41,3.07l1.14,1.59l2.02,0.19l0.43,0.79l2.55,1.27l0.89,-0.13l0.67,1.23l1.73,1.08l0.62,-0.07l0.17,-0.63l-0.85,-1.03l0.21,-0.64l-1.13,-1.74l0.59,0.14l1.77,1.79l0.95,0.0l0.47,-0.5l1.0,0.18l2.14,2.28l0.61,1.1l0.35,0.19l0.53,-0.22l0.79,1.3l0.41,1.51l1.35,1.18l0.3,2.21l1.24,1.35l-0.05,0.74l0.46,0.89l-0.07,0.62l-0.6,0.52l0.03,0.54l0.26,0.49l0.71,0.24l-1.13,1.23l-0.01,1.08l-1.03,-0.63l-0.84,0.22l-0.68,-0.89l-1.55,-0.09l-2.39,-1.42l-0.42,0.7l0.81,1.53l-0.59,0.64l-2.27,-1.38l-0.61,0.37l0.19,0.98l-1.03,1.69l0.38,0.97l-2.87,0.38l-0.52,0.95l0.32,0.62l1.43,0.7l1.04,1.98l1.06,0.54l1.96,0.14l0.6,0.93l0.85,0.09l1.0,1.43l1.4,0.13l2.17,1.57l4.2,0.81l1.85,1.27l1.7,0.16l3.18,0.9l0.95,-0.24l0.25,-0.72l0.94,0.49l1.06,-0.09l0.07,1.09l0.81,0.42l0.54,-0.25l0.08,-1.19l2.05,1.3l0.62,-0.31l0.42,0.25l1.94,-1.54l-0.35,0.83l0.24,0.61l0.99,-0.18l0.59,0.43l1.74,-0.54l1.01,-0.94l1.23,-0.17l1.5,-0.92l0.57,0.14l0.31,-0.29l0.65,1.06l0.47,0.09l0.44,-0.66l-0.3,-0.8l0.49,-0.26l0.42,0.71l-0.66,2.38l0.7,0.76l0.69,-0.72l0.52,1.18l-0.55,1.52l0.22,0.56l1.6,1.08l0.63,-0.33l0.33,-0.67l0.76,0.69l0.6,-0.12l1.0,0.42l0.28,0.85l0.0,2.79l-0.84,0.67l-0.12,0.8l0.98,1.49l0.07,1.06l0.49,0.24l0.68,-0.59l1.36,-4.64l0.36,0.04l-0.29,5.31l0.36,0.56l0.58,-0.02l0.67,-1.63l0.27,1.18l1.69,2.4l0.33,2.6l-0.33,0.29l0.04,1.02l-0.6,-0.47l-1.1,-0.12l-0.9,0.77l-1.36,-1.6l-0.54,-1.27l-0.48,-0.27l-0.55,0.44l0.28,2.54l0.33,0.43l0.59,-0.14l0.48,1.31l1.17,0.7l0.19,0.49l-0.23,1.01l-0.74,0.08l-0.16,0.66l1.74,0.69l0.16,3.35l0.73,0.24l0.29,-0.67l0.32,0.86l-0.15,0.65l0.75,2.08l0.66,0.37l0.18,1.47l0.96,2.27l0.74,0.41l0.48,-0.37l0.09,-0.75l-1.28,-2.85l-0.03,-0.89l-0.66,-0.99l-0.31,-2.38l-0.49,-0.66l0.48,-0.61l0.21,-2.19l0.49,0.43l-0.24,0.61l0.34,0.52l1.24,0.59l0.36,-0.6l-0.23,-0.74l0.57,-0.39l0.1,-0.95l0.64,0.96l0.49,1.67l0.49,0.32l0.53,-0.3l-0.3,-1.18l0.18,-0.47l-1.35,-3.35l0.9,-0.19l0.69,-0.85l0.05,-0.56l-1.44,-0.84l-0.69,-1.3l-0.43,-3.54l1.13,-2.31l-0.93,-2.27l-1.45,-2.39l0.26,-1.42l0.68,-1.28l2.24,-0.89l0.39,-1.05l-0.68,-0.64l0.69,-0.93l0.63,-0.21l0.86,0.6l0.74,0.1l1.65,-1.03l0.38,0.48l1.37,0.09l0.35,-0.46l0.93,0.57l0.62,-0.25l0.21,-1.44l0.26,0.42l0.57,-0.05l0.32,-0.89l0.43,1.38l0.69,0.24l0.69,-0.43l0.2,-0.67l-0.81,-1.03l0.71,-1.1l-0.12,-0.76l0.66,0.1l0.79,-0.65l0.8,0.72l1.59,-0.83l1.84,0.07l0.67,-1.61l-0.38,-1.27l1.23,-1.54l-0.22,-0.61l-0.74,-0.11l-0.53,0.38l-0.5,-0.59l-0.62,-0.1l-1.0,0.3l-0.34,0.5l-3.61,0.81l-0.52,0.97l-0.46,0.02l-0.28,0.38l0.2,1.07l0.66,0.53l-0.65,0.65l-0.46,-0.26l-0.34,-1.25l-0.49,-0.21l-0.5,0.58l-1.46,0.06l-1.41,1.66l-0.4,0.01l-0.33,-0.98l-1.25,-0.36l-0.53,-0.78l-1.51,0.09l-0.61,-0.36l-0.61,0.42l-0.6,1.52l0.93,1.49l-0.84,-0.05l-0.45,0.47l-0.33,-0.56l-1.33,-0.27l-1.07,0.49l0.27,-1.24l-0.47,-0.78l0.26,-0.86l-0.41,-0.83l-0.72,0.05l-1.0,0.75l-1.04,-0.05l0.58,-0.56l0.09,-0.69l1.44,-0.98l2.1,-3.01l0.98,-0.9l4.1,0.27l2.59,-0.6l1.16,0.09l3.15,-1.45l1.86,0.02l0.96,-0.62l2.17,-0.6l0.67,-0.76l1.17,1.06l1.42,0.59l1.74,3.52l-0.61,0.66l-0.14,0.69l0.7,3.02l-1.32,0.92l-0.26,0.97l0.52,0.49l1.0,-0.0l0.03,1.25l1.53,2.14l0.88,0.27l0.31,0.77l0.57,0.13l0.53,-0.37l1.16,0.24l-0.79,1.66l1.16,2.86l1.21,0.24l0.46,-0.19l1.07,0.69l1.32,-0.25l1.27,0.71l0.79,-0.27l0.41,-0.52l1.12,0.26l0.39,-0.42l0.19,-1.07l0.57,-0.48l-0.19,3.16l0.81,0.99l0.63,0.16l0.49,0.92l0.95,0.25l1.11,2.33l2.42,1.12l1.52,2.07l0.7,-0.17l-0.01,-0.87l0.36,-0.2l0.59,0.33l0.8,-0.29l0.82,1.22l0.68,0.04l0.28,0.41l1.29,0.55l1.18,-0.11l0.52,-0.62l0.64,0.15l0.55,-0.67l2.28,0.29l0.53,-0.76l1.37,-0.67l0.83,0.87l1.38,-0.92l1.71,0.31l0.54,0.61l1.44,0.15l0.6,0.42l0.77,-0.34l0.56,0.6l0.81,-0.12l1.67,1.07l0.52,0.98l1.97,0.13l0.21,0.38l0.58,0.14l0.45,-1.05l1.12,0.08l0.53,-0.78l0.56,0.3l1.55,0.02l0.61,-0.35l0.04,-0.64l-0.7,-1.42l-0.64,-0.13l-1.2,-1.65l0.07,-1.92l0.73,-0.05l2.04,3.21l1.0,3.57l0.85,0.32l0.5,1.26l0.89,0.26l1.78,2.05l1.65,-0.25l0.72,-0.84l0.28,0.6l0.67,-0.0l0.26,-0.78l0.73,-0.1l0.33,-0.55l-0.93,-1.05l0.67,-1.15l-0.81,-2.97l-0.64,-0.18l-0.52,0.86l-2.33,-3.23l-0.49,0.13l-0.27,0.64l-0.92,0.16l-0.57,0.49l-0.73,-0.22l-0.74,1.82l-0.41,-1.4l-1.23,-1.62l-0.18,-1.05l0.64,-0.33l0.37,-0.68l0.14,-1.19l-1.3,-1.23l0.07,-0.69l-0.36,-0.38l-0.66,-1.26l0.41,0.48l1.06,-0.68l1.19,1.44l0.43,0.11l0.47,-0.36l0.5,0.06l0.4,-0.68l0.79,0.34l0.56,-0.34l0.03,-0.46l0.72,0.42l0.51,-0.4l-0.15,-0.84l-0.96,-0.64l-0.64,-1.74l1.71,0.28l0.32,1.42l0.89,0.92l0.47,-0.05l0.35,-0.56l-0.24,-0.7l-0.5,-0.1l0.11,-0.26l0.79,0.01l0.99,0.7l0.68,1.19l0.03,0.84l1.08,0.66l-0.74,0.93l0.24,0.88l1.23,0.6l1.74,-0.66l-0.22,1.11l0.61,0.85l-0.35,0.88l-1.14,0.69l-0.38,0.64l0.03,0.7l0.42,0.48l1.07,0.06l0.37,-0.73l0.61,0.48l0.73,-0.14l0.31,-0.74l-0.45,-1.02l0.19,-0.25l1.55,-1.15l1.76,-0.78l-0.79,1.52l0.35,0.84l-1.82,5.69l0.01,2.01l-0.25,0.57l-0.9,0.08l-0.14,1.8l-0.91,0.95l-0.32,1.8l0.09,0.3l0.62,0.07l0.44,0.78l0.98,0.47l0.57,-0.12l-1.02,1.79l-0.33,1.54l0.46,0.47l0.47,-0.08l0.23,0.52l0.87,0.02l2.55,-2.56l0.6,0.59l0.53,-0.36l-2.48,3.23l0.46,0.54l1.33,-0.73l0.96,-0.12l-0.02,1.16l0.74,0.27l-0.27,1.34l0.61,1.06l-0.69,0.79l-0.87,0.03l0.12,-0.28l-0.45,-0.53l-2.25,0.7l-0.31,-1.15l0.38,-0.72l-0.29,-0.74l-0.73,0.33l-0.69,1.35l-0.98,-0.04l0.01,-1.45l-0.95,-0.71l-0.57,-0.04l-0.69,0.9l0.38,1.53l0.81,0.62l0.4,1.02l0.7,0.58l0.31,1.37l1.83,1.52l0.46,1.9l-0.39,1.29l0.13,0.48l0.5,-0.01l0.78,-1.17l0.96,-0.63l-0.09,-1.39l-0.49,-0.51l-0.53,0.65l-2.24,-4.1l0.51,-0.24l0.77,0.55l0.55,-0.22l0.47,0.8l1.82,0.12l0.73,-0.39l0.97,0.56l0.65,-0.4l0.57,-1.26l-0.84,-2.43l0.07,-1.43l0.7,-1.15l0.14,-0.87l0.71,-0.58l-0.14,-0.51l-1.05,-1.02l-0.44,-2.43l0.7,-0.87l-0.06,-0.95l-1.04,-2.12l-0.56,-0.29l-1.07,-1.42l1.36,-1.41l0.21,-0.93l-0.27,-1.18l1.24,-2.11l0.03,-0.92l0.63,-0.02l-0.22,0.42l0.57,0.39l1.08,-0.91l0.6,0.73l0.62,-0.1l0.82,0.61l0.65,-0.2l1.99,-2.51l2.93,-2.25l0.13,-2.08l0.63,-0.95l4.43,-2.67l0.26,-0.93l1.2,-0.67l0.06,-0.55l-1.85,0.31l-0.69,-0.28l0.28,-2.13l1.01,-2.08l-0.54,-1.2l0.06,-1.53l-1.1,-0.49l-0.47,0.16l0.2,-0.46l-0.32,-0.34l0.51,-0.56l-0.3,-0.73l-0.68,0.15l-0.7,0.78l-0.1,1.2l-1.12,1.89l-0.02,1.06l0.74,0.43l-0.87,0.88l-1.18,-0.03l-0.94,0.55l-1.22,-0.72l0.65,-2.28l-0.3,-1.43l0.72,0.73l0.33,-0.14l0.85,-1.72l1.24,-0.38l0.29,-0.39l-0.14,-0.89l1.26,-1.02l0.09,-0.46l-0.41,-0.23l-1.1,0.54l-0.6,0.05l-0.26,-0.32l0.56,-2.25l-0.16,-0.9l1.73,-0.7l1.06,0.47l0.5,-0.21l-1.04,1.68l0.19,2.01l0.66,0.2l2.1,-2.7l1.62,-1.46l-0.12,-0.8l-1.22,0.19l0.93,-1.77l0.02,-0.59l-1.2,-1.18l-0.99,0.12l-1.53,0.77l-0.3,1.01l-1.59,-0.04l-1.05,-0.37l-1.24,-2.45l-0.29,-1.53l-0.95,-1.18l-1.12,0.56l0.07,1.25l-0.59,0.55l-0.93,-1.15l-0.89,-0.01l-1.88,-1.41l-1.82,-2.33l-0.83,-0.12l-0.36,-0.39l-1.17,0.24l-0.59,-1.11l0.09,-2.18l-0.52,-0.53l-0.65,-0.09l-1.65,-3.41l-0.15,-2.09l0.34,-2.13l0.71,-1.18l0.85,-0.31l0.59,-2.41l0.75,0.08l0.47,-1.04l1.74,1.3l0.65,-0.46l-0.1,-0.52l-1.67,-1.17l0.04,-0.59l1.59,-1.2l0.19,-0.58l-1.22,-0.06l-2.0,1.53l-0.98,-1.14l-0.42,-1.41l-0.87,-0.86l1.19,-5.03l0.89,-1.31l-0.23,-0.76l-0.55,-0.21l-0.27,0.29l-0.14,-0.24l0.31,-0.26l0.85,0.13l0.12,-0.27l-0.49,-1.01l0.28,-1.34l-0.37,-0.46l1.13,-0.1l1.07,-2.14l0.99,-0.1l1.95,2.72l1.27,0.08l0.33,-1.37l0.76,-0.66l-0.68,-1.12l1.26,-2.02l-0.42,-0.25l-1.02,0.41l-1.72,-0.58l-0.59,-0.77l0.38,-0.56l-0.25,-0.28l1.28,-0.41l1.53,-1.72l1.55,0.02l0.34,-0.47l-0.12,-0.73l0.38,-1.08l0.84,-0.27l1.45,0.12l1.05,0.27l0.34,1.88l0.61,-0.01l0.76,-1.04l-0.31,2.51l0.32,0.45l0.51,-0.17l1.16,-2.14l0.4,0.3l0.63,-0.34l0.72,0.63l1.19,-0.48l0.0,0.99l-0.76,1.43l1.3,1.82l2.72,2.41l0.45,1.94l1.1,0.69l0.25,2.85l0.47,1.29l-0.08,2.48l-0.38,3.5l-0.66,-0.38l-0.44,0.47l0.1,0.49l0.69,1.08l1.05,0.33l0.69,0.64l-0.25,0.89l0.35,0.34l0.1,0.92l1.7,0.3l0.78,0.68l-0.29,0.6l0.79,1.63l-0.37,0.43l0.2,0.64l0.86,0.41l-0.09,0.39l1.05,1.48l-0.12,0.79l-0.65,0.57l0.7,0.38l0.22,0.75l0.7,0.16l0.82,-1.44l-0.19,-0.33l0.6,0.07l-0.26,0.55l0.2,2.13l0.6,0.35l0.28,-0.25l0.44,0.78l-3.08,0.37l-0.52,-0.86l-0.83,-0.4l-0.57,-1.55l-1.17,0.57l0.43,0.71l-1.34,0.59l0.57,0.61l-0.46,0.85l-0.77,0.42l-0.0,0.65l0.72,0.68l0.59,0.01l0.24,-0.49l0.78,-0.38l1.26,0.14l0.86,0.98l-0.74,0.34l-1.66,2.15l0.12,0.41l-2.03,1.16l-0.22,0.56l-0.65,0.01l-0.24,0.73l-1.93,1.83l0.19,0.52l2.03,0.54l0.79,-0.66l1.1,0.04l2.12,2.77l2.21,1.48l2.11,-2.04l0.1,-0.83l0.81,-0.86l1.28,0.51l-0.97,1.2l-1.68,0.68l0.02,0.7l0.44,0.23l1.49,-0.21l1.04,-0.74l0.63,0.96l1.39,-0.16l0.36,0.69l1.02,0.01l0.53,-1.03l1.52,0.89l0.09,0.25l-0.69,0.38l-0.48,-0.53l-0.61,-0.01l-0.41,0.4l0.45,0.62l-1.08,0.99l-0.25,1.61l-0.61,-0.4l0.37,-0.81l-0.42,-0.4l-0.47,0.11l-1.25,1.31l-1.69,-1.37l-0.67,0.29l0.54,1.02l1.59,1.16l3.04,3.5l0.72,0.43l-0.39,1.34l0.27,0.55l0.49,0.15l0.16,0.54l-0.27,0.74l1.3,0.85l-1.1,1.36l0.2,0.58l0.42,0.08l-0.15,0.92l0.34,0.75l-0.48,1.34l0.34,0.89l-0.25,0.79l0.36,0.47l-0.94,1.83l0.26,0.55l1.56,0.97l-0.66,0.52l-0.1,0.51l0.49,0.18l0.7,-0.25l0.29,1.8l0.46,0.61l0.83,-0.07l0.65,-0.63l-0.22,-1.21l1.21,-1.33l0.04,-1.2l0.65,-0.41l0.63,-1.78l-0.72,-0.82l-0.16,-0.8l0.66,-1.17l-0.11,0.74l0.35,0.5l0.54,-0.2l0.31,-0.62l0.2,-3.6l-0.48,-2.78l0.31,-1.38l1.95,-2.78l0.76,-1.95l0.81,-0.47l0.93,0.17l0.54,0.53l0.76,1.96l0.94,1.23l3.7,3.18l1.73,2.49l0.75,2.41l-0.07,2.09l1.18,3.88l0.07,1.43l-0.33,1.43l-0.41,0.53l-1.47,-0.53l0.0,-2.23l-0.28,-0.54l-0.57,0.02l-0.75,1.43l-0.66,0.47l-0.22,0.77l0.64,1.37l0.36,1.85l-0.72,1.8l0.07,1.19l0.8,3.46l0.92,1.49l0.26,1.46l0.61,0.85l1.03,0.56l2.33,3.5l1.5,1.53l0.14,1.62l0.55,0.42l-0.88,0.97l-0.09,1.63l0.52,0.42l0.28,-0.12l0.67,-1.15l0.35,1.43l0.77,-0.01l0.44,-2.43l0.17,0.71l0.65,0.14l0.43,-1.33l0.76,-0.29l-0.28,-1.39l0.74,-1.69l0.46,-0.2l0.65,0.81l1.18,0.53l0.87,-0.85l-0.27,-1.29l0.42,-0.51l0.1,-3.05l-0.63,-1.65l1.23,-3.16l1.2,-1.55l0.47,-1.25l1.64,-1.83l-0.14,-1.24l0.37,-0.46l-0.24,-1.07l0.4,-0.09l0.33,-0.65l-0.43,-0.61l0.05,-1.52l1.03,-2.63l-0.5,-0.76l-0.17,-3.02l0.49,-2.13l0.77,0.12l0.63,-0.55l0.3,0.42l1.19,0.27l0.47,-0.33l0.01,-0.4l1.54,-0.23l1.32,0.5l0.47,-0.39l0.12,-1.02l-0.57,-0.98l-0.96,-0.26l-0.63,0.3l-1.06,-0.4l0.51,0.1l0.69,-0.59l-0.1,-1.13l1.13,0.19l0.47,-0.25l-0.18,-1.05l-0.94,-0.34l0.68,-0.31l1.87,0.46l0.54,-0.81l-0.44,-0.59l-1.29,-0.2l-0.34,-0.92l-1.18,0.19l-0.77,-2.03l-1.4,0.16l-0.45,-0.44l-0.8,-0.13l-0.82,-1.5l0.81,-0.1l0.0,-0.83l-0.73,-0.45l0.12,-0.35l-0.34,-0.42l0.55,-0.16l0.45,-1.01l-0.72,-0.74l-0.72,0.27l0.02,-1.04l0.33,-0.57l0.63,-0.15l-1.18,-2.09l0.63,-0.72l-0.04,-1.08l0.77,-0.79l-0.07,-0.77l1.71,0.98l0.43,-0.68l0.88,-0.22l0.49,-0.61l3.23,-0.54l0.37,0.46l0.88,0.11l1.22,1.29l2.32,1.02l2.79,0.38l0.9,-0.59l1.61,0.41l1.0,-0.32l1.52,0.13l0.48,-0.34l0.15,0.26l-0.65,0.87l0.25,0.5l-0.91,0.6l0.36,0.36l0.88,0.07l0.55,0.68l-5.0,-0.84l-0.65,0.42l0.17,0.76l6.94,1.74l-0.26,0.19l0.21,0.47l1.55,1.36l-0.4,0.23l-0.32,1.25l0.49,0.56l1.98,-0.41l0.2,-0.61l1.62,0.05l2.08,1.18l0.9,-0.0l0.36,1.29l-1.11,0.95l-0.49,1.44l-0.68,0.07l-0.43,1.13l-2.03,1.16l-0.43,1.03l0.48,0.12l1.55,-0.74l0.91,-0.06l0.65,0.54l0.22,0.76l0.47,0.18l0.96,-0.97l1.12,1.62l0.07,2.62l-2.43,2.77l-1.12,-0.34l-0.42,0.56l0.02,0.92l-0.79,0.69l-0.64,-1.43l-1.22,-0.48l-0.47,-0.09l-0.46,0.43l0.73,1.2l-1.29,-0.23l-1.57,-1.04l-0.43,0.26l-0.18,0.63l0.8,0.9l-0.48,-0.02l-0.29,0.73l0.35,0.74l1.0,-0.01l1.03,0.92l-0.87,0.27l-0.13,0.58l0.6,0.71l0.78,0.37l0.54,-0.28l-0.48,2.01l0.5,0.77l1.45,0.33l0.14,0.4l-0.5,1.79l0.93,2.29l2.14,1.89l1.82,2.29l1.57,1.09l1.69,2.53l0.22,0.52l-0.41,1.74l-0.28,5.75l-0.53,0.8l0.05,0.96l-1.02,0.03l-0.28,0.58l-1.06,-0.37l-1.34,0.86l-0.5,1.2l0.16,0.41l-0.46,0.91l0.08,0.5l-0.63,1.14l0.07,0.98l-1.52,0.1l-0.06,0.63l-0.59,0.4l-0.65,1.2l-0.23,1.08l-1.73,0.03l-1.48,0.55l-0.36,1.57l-2.25,2.59l-0.38,0.05l-0.41,-0.12l-0.13,-0.75l-0.94,-1.23l-0.35,-1.01l-1.56,-0.52l-1.22,-1.46l0.84,-0.02l0.3,-0.94l-0.88,-1.37l0.48,-1.38l-0.41,-1.56l-0.42,-0.2l-0.33,0.34l-0.11,1.16l-0.7,0.65l-0.47,1.48l-0.76,-0.18l0.05,-1.01l-0.3,-0.35l0.54,-0.56l-1.46,-1.06l-0.06,-2.04l-3.54,-0.91l-0.73,-0.56l-0.69,0.1l-0.05,1.03l0.57,0.63l-0.96,0.18l-1.62,1.09l-0.24,1.14l0.19,0.5l0.92,0.71l1.52,-0.57l0.86,-1.83l0.42,-0.12l0.25,0.31l-0.33,0.39l0.98,0.58l-0.37,0.78l0.37,0.41l2.33,0.87l-0.55,0.56l-0.01,0.63l1.17,0.78l1.2,-0.25l-0.39,1.76l2.5,2.69l0.45,0.81l0.25,1.95l0.7,0.44l0.56,1.17l-1.31,0.22l-1.3,-0.9l-0.32,-0.92l-0.59,-0.46l-1.33,0.72l-0.35,-1.24l-1.17,-0.96l-0.48,0.19l-0.76,1.63l2.26,2.97l-1.28,-0.84l-1.45,-0.18l-0.77,-0.79l-1.0,0.26l-1.07,-1.4l-0.6,0.07l-0.34,1.21l-0.78,-4.09l-0.84,-1.71l-0.66,-0.37l-0.86,0.23l-1.97,1.36l-0.9,-0.22l-1.74,0.35l-1.03,-0.32l-0.59,-0.68l-0.45,0.07l-0.33,0.62l-1.44,-0.65l-0.35,0.93l-0.6,-0.32l-0.75,0.2l-0.14,0.54l0.61,0.87l-0.56,0.05l-0.22,0.59l1.71,2.75l2.48,0.54l3.71,1.93l-0.76,1.22l-0.06,1.4l-0.48,0.53l-1.03,0.33l-0.22,1.04l-1.73,0.86l-0.59,2.04l0.31,1.26l-0.58,1.19l-1.1,0.64l-1.09,1.77l-1.33,0.59l-0.29,0.88l-0.53,0.25l-0.28,0.57l0.29,1.02l-2.17,1.42l-4.42,0.04l-1.02,-0.44l-1.24,-0.93l-0.92,-1.6l-1.21,-1.3l-1.96,-1.11l1.98,0.37l0.47,-0.37l-0.12,-0.47l-3.93,-1.49l-0.91,0.15l-1.03,-0.58l-0.37,-0.92l-1.22,-0.74l-0.92,-1.12l-0.79,-0.14l-1.45,-1.41l-2.52,-0.27l-0.57,0.23l0.01,0.69l1.88,1.05l0.14,0.7l-2.03,-1.36l-1.24,0.26l0.05,-0.62l-0.46,-0.37l-1.47,0.42l-6.35,-0.91l-1.26,-0.56l-1.67,0.63l0.02,0.64l3.84,2.87l0.66,-0.16l0.12,-0.54l-0.83,-1.67l4.33,0.96l4.62,1.73l1.79,1.3l1.04,1.58l1.15,0.81l0.64,2.1l1.78,1.27l1.28,2.27l1.01,-0.19l0.6,0.41l6.81,0.99l1.16,-0.43l1.53,0.37l0.72,-0.68l1.26,0.62l1.23,-0.17l2.44,0.59l-0.02,0.57l0.92,0.98l-0.42,0.83l0.18,0.8l-1.03,1.03l0.2,0.74l-0.68,0.55l-0.63,1.25l-0.46,2.22l-0.67,0.57l-0.74,-0.22l-0.3,0.43l0.01,2.02l-0.48,1.22l-1.97,1.13l-0.52,3.2l-1.35,1.99l-0.11,0.53l0.4,0.72l-0.74,0.93l-0.94,-0.04l-2.19,1.87l-1.48,0.78l-0.44,0.77l-1.35,-0.65l-0.63,0.19l-1.4,-1.05l-1.02,-2.09l-0.48,0.02l-0.39,0.58l1.13,2.58l-0.8,-0.25l-0.43,-0.5l-0.74,0.08l-0.86,-0.94l-0.48,0.08l-0.22,0.53l-0.47,-0.49l-0.61,-0.01l-0.37,-0.42l0.39,-0.09l0.34,-0.6l-0.14,-1.56l-0.38,-0.69l-0.64,0.01l-0.79,1.51l-0.87,0.09l-1.12,0.66l-0.05,0.72l0.93,0.65l0.44,-0.18l0.48,1.07l-0.19,0.66l-0.41,-0.19l-0.73,0.47l-0.86,-0.9l-0.72,0.05l-0.46,0.46l1.37,1.56l0.33,1.12l1.01,1.2l-0.95,0.21l-0.29,0.68l0.41,0.36l-0.92,1.77l-0.74,-0.24l-0.59,0.62l-0.56,0.01l-0.23,-0.94l-1.65,-0.78l-0.76,0.87l-0.04,0.64l0.69,0.29l0.5,-0.22l0.07,0.37l-1.46,0.62l-1.33,0.1l-1.96,-1.32l-0.77,0.03l-1.06,-1.28l-1.28,-0.65l-1.21,0.15l0.04,-0.54l-0.47,-0.6l-0.51,0.06l-0.35,0.5l-1.27,-0.1l0.67,-0.57l-0.27,-0.54l-1.23,-0.2l-0.67,1.26l-2.38,-0.59l-0.99,-0.97l-1.95,-0.67l-0.56,-0.85l-1.09,-0.11l-0.4,-0.69l-0.98,0.04l-0.68,-0.73l-2.44,-1.09l-1.31,-1.52l-0.1,-1.25l-0.75,-0.16l-0.38,-0.56l-0.65,0.04l-0.08,0.58l0.7,0.89l0.13,1.06l0.71,1.09l-0.06,0.3l-1.2,-0.06l-0.41,0.49l-0.05,0.4l0.61,0.58l0.54,1.53l2.55,1.43l1.53,-0.47l0.27,-0.5l-1.31,-0.78l-0.63,-1.04l0.13,-0.26l2.22,1.83l1.8,0.9l1.13,0.19l1.16,0.98l0.55,0.05l0.82,-0.64l0.64,1.4l1.31,0.07l0.51,0.42l-0.34,1.0l-0.74,-0.38l-0.82,1.21l-1.45,0.8l0.07,0.56l0.82,0.62l1.5,-0.61l0.41,0.38l0.63,-0.18l0.29,-1.37l1.35,-0.48l0.53,-0.63l1.38,-0.66l1.17,1.1l0.19,1.32l1.74,1.14l-0.1,0.55l0.37,0.42l1.93,-0.08l0.94,0.83l0.59,-0.3l0.22,0.25l-0.31,0.34l0.34,0.65l2.0,0.84l-0.34,0.61l0.51,1.75l-0.36,0.9l0.41,0.47l-0.04,1.6l0.25,0.32l-0.84,0.97l-0.23,0.91l-2.1,-0.17l-1.55,1.08l-0.28,0.73l-0.67,0.49l-1.01,0.17l-0.08,0.61l-6.01,-1.84l-0.48,0.42l0.11,0.84l-1.42,-0.68l-1.4,0.44l-0.18,1.01l1.52,1.96l-0.01,0.45l1.0,0.46l2.05,0.27l0.42,0.21l-0.02,0.44l-0.74,0.94l-0.91,-0.27l-0.08,-0.97l-0.79,-0.23l-0.79,0.25l-0.1,0.46l-0.81,0.57l-0.29,-0.1l-0.11,-0.96l-0.66,0.08l-0.71,-0.69l-0.56,0.33l0.62,1.7l-0.15,1.0l-1.28,0.07l-0.16,1.92l-0.88,0.18l-0.01,0.68l1.78,0.63l-0.08,0.63l-0.47,-0.64l-0.62,-0.04l-0.47,-0.48l-3.58,-1.19l-0.51,0.14l0.08,0.53l0.58,0.48l3.52,2.17l-0.17,0.39l-0.49,-0.41l-0.97,-0.02l-0.42,0.2l0.01,0.34l-0.95,0.34l-0.3,0.85l0.81,0.74l-0.33,0.5l-0.6,0.02l-0.24,0.51l-1.17,-0.68l-0.29,0.48l-0.38,-0.11l-0.51,0.37l0.15,0.47l0.91,0.72l-0.58,0.06l-0.12,0.57l-1.72,-0.71l-0.48,0.61l0.55,0.71l-0.52,0.41l0.0,0.75l1.48,0.65l0.15,0.47l-0.35,0.17l-0.06,0.59l0.5,0.75l-0.94,0.27l-2.33,2.14l-0.8,0.09l-1.42,2.04l0.19,1.66l0.96,0.33l0.02,0.67l-0.63,0.23l-1.46,-0.58l-0.43,0.57l0.86,1.7l-0.83,1.09l0.32,1.46l-0.9,0.8l-1.03,2.78l-1.06,0.83l-0.64,1.83l0.06,0.76l-0.95,1.43l-0.28,1.75l-1.44,-0.29l-0.49,0.23l-0.08,0.62l-0.78,0.49l1.17,0.74l0.47,1.38l-1.03,2.38l0.22,1.29l-0.39,0.88l0.08,1.0l-0.53,0.41l-0.4,1.05l-33.99,-2.48l-33.79,-3.8l10.54,-78.34l0.16,-3.27l-1.13,-0.63l-11.88,-3.86l-18.57,-6.61l-25.7,-9.97l-1.81,-1.05l-2.03,-2.19l-7.01,-13.93l-14.83,-3.67l-12.27,-15.45l-13.32,-18.01l-12.5,-18.28l-10.27,-16.15ZM431.55,497.53l0.31,-0.12l0.17,0.01l-0.2,0.26l-0.28,-0.15ZM459.97,461.11l0.41,0.12l0.06,0.53l-0.42,-0.04l-0.04,-0.61ZM466.33,460.55l0.16,0.24l-0.01,0.0l-0.15,-0.24ZM457.44,422.81l-0.21,0.13l-0.28,-0.01l0.49,-0.12ZM510.55,414.28l0.09,0.15l-0.04,0.09l-0.06,-0.23ZM452.71,352.12l0.03,0.15l-0.01,0.1l-0.08,-0.08l0.07,-0.17ZM410.05,384.51l0.12,0.01l-0.05,0.33l-0.07,-0.28l-0.01,-0.06ZM408.32,373.23l-0.03,-0.49l0.36,-0.47l-0.09,0.57l-0.23,0.4ZM318.64,387.32l0.17,-0.15l0.1,-0.2l-0.02,0.64l-0.25,-0.3ZM318.94,386.46l-0.03,-0.21l0.0,-0.15l0.04,0.09l-0.01,0.27ZM321.06,364.45l0.05,-0.18l0.03,-0.08l0.11,0.08l-0.19,0.18ZM329.96,363.12l-0.02,-0.07l0.05,-0.02l-0.02,0.09ZM343.89,363.99l-0.01,-0.29l0.6,-0.07l-0.05,0.13l-0.54,0.22ZM393.29,373.56l-0.08,-0.14l0.13,-0.03l-0.03,0.08l-0.02,0.08ZM393.36,373.34l0.07,-0.35l0.01,-0.02l-0.02,0.16l-0.07,0.2ZM431.18,350.11l0.25,-0.55l0.38,-0.32l-0.44,0.76l-0.19,0.11ZM427.74,295.54l-0.28,-0.5l-1.09,0.54l-2.24,-0.49l-0.57,0.24l-0.05,-0.78l0.27,-0.75l4.16,-0.81l0.19,0.78l0.47,0.35l-0.54,0.32l0.1,1.06l-0.41,0.05ZM524.18,151.95l-0.31,-0.7l1.09,-0.68l0.05,0.73l-0.83,0.65ZM520.3,200.25l0.21,-1.47l1.52,-2.11l0.89,-2.29l0.45,0.01l0.45,0.38l-0.01,0.52l-1.54,2.07l-0.21,0.77l0.31,1.0l0.68,0.66l-1.45,0.22l-0.62,0.7l0.01,0.56l-0.7,-1.0ZM420.43,181.62l0.62,-0.87l-0.12,-0.26l0.61,1.02l0.74,-0.23l0.77,0.53l0.67,-0.11l0.25,-0.84l-0.59,-0.28l0.66,-0.4l-0.11,-0.59l-1.42,-0.84l-0.59,-0.77l-0.57,-0.08l-0.08,-0.91l0.74,-0.14l0.39,-0.81l0.69,0.51l0.79,-0.67l0.42,0.07l0.53,-0.75l-0.33,-0.56l1.43,-0.16l1.18,-0.54l0.61,0.36l1.21,0.1l1.1,1.39l1.08,0.31l0.38,0.43l2.24,0.35l0.31,1.19l0.93,0.15l0.49,0.77l1.0,-0.0l0.77,-1.07l1.13,0.45l0.38,1.24l1.53,1.97l0.6,1.46l-0.84,3.95l-2.07,2.49l0.7,1.8l0.78,-0.03l0.3,-0.47l-0.59,-0.65l1.22,-0.88l1.63,-2.96l-0.03,-0.57l1.81,0.83l1.15,-0.54l0.96,0.52l1.39,-0.57l0.88,-1.01l2.88,-0.6l2.66,1.15l0.56,1.25l1.55,0.93l0.21,1.53l-0.52,0.16l-1.29,-0.61l-0.43,-0.79l-0.69,0.17l-0.29,0.65l-1.37,-0.9l-1.24,0.23l-0.33,0.39l1.0,1.43l2.43,0.35l1.98,0.83l0.76,0.64l0.58,-0.43l6.3,2.56l0.54,1.01l-0.8,1.13l-6.11,0.17l-0.27,0.43l-3.55,-0.91l-0.51,-0.68l-2.16,-1.05l-0.47,0.09l0.11,0.74l1.8,1.17l-0.87,1.04l0.22,0.54l0.63,0.1l0.57,-0.36l2.53,0.82l-0.13,0.53l-0.68,0.38l0.4,0.61l-1.39,-0.03l-0.63,0.45l0.06,0.61l0.45,0.23l-0.04,0.35l0.66,0.74l-1.13,0.97l0.03,1.86l0.32,0.37l0.54,-0.31l0.36,-1.43l1.24,-1.45l0.61,0.3l0.94,-0.69l-0.48,1.34l0.07,0.44l0.69,0.2l1.1,-1.51l0.31,0.54l0.62,0.17l0.44,-0.38l0.16,-0.85l0.75,0.45l0.75,1.32l-0.52,1.8l0.14,0.99l0.86,0.09l1.06,-1.42l0.76,0.96l0.76,0.34l0.09,0.43l-0.48,2.76l-0.64,0.38l-1.29,-0.1l-0.85,1.01l-0.08,0.71l0.79,0.81l0.97,-0.17l0.63,-0.76l0.88,0.04l0.58,2.19l1.33,1.51l1.1,-0.18l0.32,-0.42l0.04,-1.11l-0.83,-2.81l0.71,-0.81l0.06,-0.55l1.86,2.58l0.66,0.4l-0.56,0.98l0.98,0.87l1.65,-1.92l1.04,-0.67l1.11,1.8l-0.58,0.81l0.39,0.39l1.01,-0.17l0.45,-1.42l-0.54,-1.26l0.93,-1.27l0.7,0.48l0.36,1.04l1.75,1.74l1.38,0.04l0.9,0.88l-1.19,1.0l-0.12,0.48l0.43,0.23l1.29,-0.23l1.3,-1.0l1.02,-0.18l2.85,0.31l0.41,-0.42l-0.27,-0.56l-1.61,-0.38l-0.79,-0.85l-1.13,-0.39l0.55,-0.49l1.65,-0.56l0.47,-0.54l0.83,0.38l0.6,-0.27l0.78,0.21l0.5,-0.41l-0.36,-0.56l1.46,-1.38l0.81,-0.05l1.7,0.61l0.43,-0.3l0.0,-0.65l-0.7,-0.24l-0.07,-0.44l1.79,-0.55l0.71,-1.27l1.02,-0.43l0.51,-0.91l0.4,-0.06l0.8,0.56l0.66,-0.16l0.98,1.09l1.24,-0.18l0.48,0.26l2.88,-2.17l1.62,-0.66l6.9,0.84l-0.86,2.39l0.34,0.6l1.83,0.38l2.8,-0.86l0.35,0.42l0.67,0.03l1.39,0.89l-0.02,0.68l0.38,0.41l-1.7,1.15l-0.16,0.44l0.43,0.53l3.83,-0.52l0.4,1.14l0.81,0.46l-0.08,0.99l-0.45,0.8l0.23,0.56l0.68,0.19l-0.62,1.94l-1.15,0.29l-0.61,0.94l-0.12,0.99l-2.38,1.5l-0.22,0.7l1.13,1.01l0.06,0.7l-0.74,0.86l0.17,0.93l1.8,1.16l0.1,0.54l-0.72,0.82l0.74,1.02l-0.36,0.53l0.43,1.62l-0.33,0.76l-1.04,-0.02l-0.56,0.57l-3.59,0.03l-1.4,0.66l-2.42,2.46l-1.63,-0.24l-1.11,-0.67l-0.68,-0.05l-0.22,-1.01l-0.56,-0.28l-0.45,0.28l-0.09,0.71l-0.43,0.48l-0.82,-0.18l-1.04,-0.65l-1.16,-2.26l-0.11,-1.45l0.42,-1.04l-0.51,-1.31l-0.9,-0.15l-0.82,-0.5l-0.89,-1.16l-0.53,-0.06l-0.57,0.68l0.32,1.3l1.36,1.75l-0.71,4.18l-0.5,0.52l-2.57,0.31l-1.28,0.93l-2.03,0.15l-0.77,-0.44l-0.91,0.47l-0.44,-1.19l0.03,-2.55l-0.49,-0.71l-0.63,0.38l-0.32,1.27l0.34,2.55l-0.53,0.71l-0.65,-0.02l-0.94,-3.83l-0.66,-0.63l-0.53,0.61l0.54,3.14l-0.46,0.77l-2.58,0.37l0.09,-1.23l-0.56,-0.82l-0.08,-0.83l-0.51,-0.24l-0.56,0.5l0.04,1.45l-0.61,1.23l-1.4,-0.97l-0.61,-1.79l-0.72,-0.27l-0.32,0.41l0.07,1.69l0.93,1.46l-1.06,0.13l-0.41,-0.89l-0.68,-0.07l-0.22,0.84l-0.85,0.11l-0.38,-0.69l0.36,-0.58l-0.42,-0.53l-0.88,0.34l-0.4,1.26l-0.87,0.51l-0.26,-1.09l-0.49,-0.31l-0.81,0.91l-0.89,0.1l-0.26,-0.49l-0.7,-0.14l-0.33,0.53l-1.38,-0.34l-0.03,-2.5l0.74,-3.07l0.68,-0.64l-0.28,-0.42l-0.88,-0.1l0.12,-1.14l-0.49,-1.32l-0.43,-0.3l-0.59,0.36l0.09,0.81l-0.57,0.3l-0.69,3.45l-0.18,-1.92l-1.09,-1.3l-0.58,-0.11l-0.18,0.41l0.52,1.38l-0.13,0.8l-0.77,-0.66l-0.59,0.1l0.33,1.26l0.65,0.72l-0.25,1.63l-0.31,0.33l-1.04,0.01l-0.32,0.75l-0.91,-0.11l-0.58,0.47l-1.14,0.13l-0.42,-1.29l-0.5,-0.03l-0.45,0.65l-1.0,-0.68l0.06,-0.86l-1.62,0.41l-0.83,-1.03l0.07,-1.6l-0.41,-0.39l-0.98,0.32l-0.43,0.66l1.62,-2.82l-0.06,-1.44l-0.53,-0.32l-0.68,0.4l-1.44,2.73l-0.63,0.11l-0.39,0.88l-0.56,-0.03l-0.27,0.39l0.02,1.25l-0.45,-0.04l-0.69,-0.52l0.31,-0.55l-0.34,-0.72l-0.89,-0.22l-1.44,-1.47l0.36,-2.51l-0.31,-1.34l-0.84,-1.55l0.0,-0.83l0.9,-0.12l0.26,-0.31l-0.42,-0.95l0.21,-0.77l-0.59,-0.3l-0.96,0.39l-0.97,-1.66l0.42,-2.58l0.6,-0.73l-0.15,-0.58l-0.45,-0.11l0.38,-1.33l1.06,-2.19l0.66,-0.34l0.58,-0.83l-0.38,-0.83l0.34,-1.07l-0.84,-1.92l0.44,-1.44l-0.1,-1.55l-0.43,-0.71l-1.28,-0.76l-0.21,-0.78l-0.45,-0.32l-0.48,-1.12l-0.14,-2.73l-0.53,-0.76l-0.27,-1.33l-0.7,-0.59l-0.62,-1.36l-0.06,-1.36l-0.58,-0.68l-0.69,-0.15l-1.98,1.44l-0.45,-0.4l-0.45,0.11l-0.65,1.31l-1.32,0.09l-0.78,-0.57l-2.24,0.12l-0.43,-1.01l-0.43,-0.02l-0.41,-0.61l-2.91,-1.03l-0.33,-0.64l-0.99,0.32l-1.26,-0.4l-0.71,-0.86l-0.49,-1.5l1.28,0.15l0.56,-0.27l1.17,-2.1l-0.46,-0.51l-1.06,1.03l-0.91,0.17l-0.01,-0.56l-0.86,-0.18l-0.62,-1.38l-0.77,-0.19l-0.41,-1.23l-1.13,-0.56l-1.03,0.14l-0.19,-0.33ZM451.64,232.47l0.2,0.49l-0.18,-0.03l-0.02,-0.46ZM519.52,222.67l0.67,0.01l0.3,-0.74l1.12,-1.04l0.93,0.21l0.91,1.92l0.6,0.41l-2.49,1.36l-0.4,0.49l-1.28,-0.76l0.02,-1.18l-0.38,-0.68ZM455.43,199.69l0.61,-0.68l1.56,0.5l-0.2,0.22l-1.97,-0.04ZM431.2,193.09l-1.37,1.01l-1.29,-0.29l0.02,-0.49l1.44,-0.32l0.43,-0.6l0.46,0.03l0.32,0.66ZM521.01,346.84l0.26,0.12l-0.6,-0.0l-0.32,0.78l-0.2,-0.77l0.85,-0.13ZM521.4,347.02l0.93,0.01l0.12,0.67l-0.68,-0.07l-0.37,-0.61ZM519.42,369.27l0.08,-0.17l0.17,0.21l-0.24,-0.04ZM514.49,412.03l0.0,-0.0l0.0,0.0l-0.0,-0.0ZM514.67,412.23l0.25,0.63l0.65,0.04l0.46,0.43l0.54,-0.1l-0.22,0.67l-1.73,-1.07l0.07,-0.61ZM505.16,417.47l-0.03,-0.82l2.73,1.32l0.45,-0.06l0.16,0.55l2.41,1.63l0.11,1.35l-0.63,0.61l-0.0,0.58l-1.02,0.94l-1.01,-0.16l0.22,-0.72l-0.29,-1.85l-0.69,-1.45l-1.07,-0.84l-0.77,-0.06l-0.57,-1.01ZM512.09,423.78l0.53,0.2l-0.02,0.3l-0.57,0.11l-0.35,0.62l-0.41,-0.06l-0.04,-0.46l0.86,-0.71ZM512.96,424.68l0.64,-0.22l1.49,-0.08l-0.08,0.85l-0.44,0.51l-0.87,-0.66l-0.86,0.02l0.12,-0.43ZM512.86,421.59l0.72,-0.05l-0.36,0.47l-0.37,-0.42ZM512.54,339.29l0.85,-0.28l0.88,0.7l-0.13,0.13l-1.6,-0.55ZM509.23,194.49l0.2,-0.25l0.21,-0.1l-0.34,0.37l-0.08,-0.02ZM505.41,340.75l-0.75,-0.57l0.04,-0.62l1.46,0.3l-0.75,0.43l-0.0,0.46ZM499.85,419.2l0.52,0.39l0.5,-0.13l0.35,0.5l-0.05,0.68l1.48,2.0l1.39,3.84l-0.75,1.32l-0.63,-0.38l-0.43,-1.69l-1.54,-0.95l-0.49,-0.74l-0.75,-3.59l0.0,-0.77l0.39,-0.49ZM493.31,188.08l0.28,0.32l-0.08,0.36l-0.23,-0.13l0.04,-0.54ZM483.52,380.65l0.67,-0.83l0.13,-0.81l-0.21,-0.83l-0.81,-0.49l-0.21,-0.47l0.58,-0.94l0.02,-1.25l1.29,-2.23l1.7,1.75l-0.11,2.22l0.6,2.9l-0.21,2.26l-1.11,2.16l-1.73,-1.43l-0.61,-2.01ZM484.26,162.01l0.42,-0.54l1.29,0.04l0.41,1.15l0.59,0.47l-1.04,0.74l-0.12,-1.24l-0.73,-0.56l-0.81,-0.06ZM479.18,334.69l0.76,0.01l0.72,-0.57l1.82,0.89l1.27,-0.58l0.97,2.02l-1.78,0.37l-1.64,-0.88l-0.73,0.52l-0.98,-0.67l-0.41,-1.12ZM427.77,94.98l0.27,-1.04l1.22,0.23l1.58,2.02l1.66,0.75l2.27,0.53l1.49,-0.22l1.8,1.72l0.71,-0.12l-0.07,-1.04l-1.53,-2.32l1.04,-1.26l2.04,-0.47l0.28,-0.54l-0.32,-0.43l-1.53,-0.55l-0.51,-0.62l-0.49,0.02l-0.67,1.12l-1.16,1.05l-1.73,0.26l-0.95,-1.25l1.76,-0.53l0.36,-0.72l-0.13,-0.61l-0.59,-0.16l-0.52,0.52l-0.38,-0.02l-0.17,-0.43l-0.59,-0.06l-1.26,1.09l-1.42,-1.64l-0.89,-0.42l0.39,-1.21l0.99,0.11l0.05,-1.01l0.58,-0.25l1.6,0.63l1.03,0.79l0.57,-0.4l-0.16,-1.39l-0.97,-0.57l-0.46,-1.38l-1.04,-0.82l0.5,-0.41l0.24,-0.89l-0.35,-0.92l2.83,0.12l1.34,-0.35l1.75,1.38l1.46,-0.18l1.09,0.47l0.43,0.81l0.49,0.02l0.68,-0.57l-0.98,-1.99l-1.81,-0.95l-0.65,0.14l-0.37,-0.98l0.08,-0.59l2.29,-0.25l0.33,-0.54l-0.22,-0.59l-0.79,-0.19l-0.09,-0.47l-0.43,-0.24l-0.89,0.57l-0.53,-0.18l-1.14,-0.9l0.69,-0.71l-0.44,-0.87l-1.26,0.54l-1.23,-0.4l0.12,-0.39l1.22,-0.53l0.4,-0.53l-0.3,-0.6l-1.05,-0.2l0.81,-1.06l0.41,-1.84l1.29,-1.0l1.27,1.08l-0.15,1.11l0.69,0.56l0.53,-0.28l0.4,-0.76l1.71,-0.79l-0.15,-1.22l-1.04,-0.57l1.28,-0.11l1.29,0.95l1.89,-0.69l0.35,-0.73l0.17,-1.89l-0.74,-1.46l-1.56,-0.33l-1.47,0.36l-0.94,-0.39l-0.74,-0.85l0.69,-1.58l0.01,-0.89l1.83,0.73l0.57,1.15l0.83,-0.76l-0.19,-1.48l0.65,0.25l4.27,3.47l1.67,2.64l0.03,1.58l-0.54,0.38l0.08,0.45l1.58,2.67l0.05,1.18l1.5,3.26l0.33,2.1l1.72,1.38l0.43,1.3l-0.69,1.44l0.13,1.03l3.34,0.83l1.0,2.0l0.82,-0.11l-0.26,-1.63l1.61,-0.09l1.03,1.58l-0.84,1.74l0.33,0.58l0.36,-0.03l-0.07,1.31l-0.63,0.9l0.51,2.05l0.66,1.22l2.62,2.67l0.66,-0.16l0.3,-0.53l0.72,0.66l0.52,-0.32l0.36,0.98l0.48,0.39l1.0,-0.56l1.79,0.15l0.33,1.45l0.75,1.34l-0.86,0.65l-0.4,1.26l-0.74,0.59l-0.15,0.63l0.41,0.46l0.79,-0.18l1.22,-1.54l-0.58,6.24l-1.43,2.18l-0.05,0.94l0.36,0.77l0.79,0.39l0.5,-0.31l0.55,-1.76l0.49,-0.46l0.36,0.13l0.08,1.12l0.63,0.08l0.72,-0.98l-0.53,-1.25l0.22,-0.34l1.53,-0.13l1.13,1.76l-0.41,1.03l0.43,1.1l-0.44,0.91l0.63,0.75l0.63,-0.04l0.77,-2.0l0.25,-2.81l1.45,4.01l2.55,4.05l-0.0,0.59l-1.1,0.7l-0.56,1.1l-0.88,0.74l-4.99,2.97l-0.41,2.41l-0.29,0.19l-0.82,-2.36l-0.31,-0.23l-0.51,0.23l-0.12,2.12l0.35,1.83l-0.38,1.01l-1.35,1.8l-1.23,3.93l-0.88,-1.19l-0.62,-3.1l-0.01,-3.36l0.86,-1.09l0.2,-2.51l-0.74,-0.07l-0.73,1.99l-1.25,0.49l-0.29,1.37l0.01,3.91l0.52,2.92l-0.6,0.11l-0.47,0.64l0.43,0.7l0.56,-0.32l0.79,0.09l0.54,1.32l0.01,0.98l-0.55,1.68l-0.53,0.24l-1.61,-3.56l-1.26,-0.29l-0.63,0.4l0.24,1.93l1.14,3.26l-1.23,6.18l-0.61,-0.32l-1.0,-1.97l-0.59,-2.02l-2.34,-4.18l-0.79,-2.67l-0.53,-0.43l-0.56,0.18l-0.33,0.62l0.12,2.33l0.44,1.87l1.02,1.16l1.11,3.98l-1.18,-0.05l-0.09,-0.94l-1.2,-1.69l-1.01,-0.29l-1.17,0.31l-1.2,-0.15l-0.27,0.75l0.37,0.58l1.69,0.52l-0.14,0.89l0.49,1.36l-0.15,0.61l-1.23,-0.2l-1.35,0.21l-1.56,-0.79l-2.05,-0.4l-1.24,-1.3l-0.48,-0.07l-0.78,0.58l-0.64,-1.58l0.37,-0.7l-0.22,-0.44l-0.47,-0.21l-0.89,0.54l-0.63,-0.45l-0.1,-0.8l-1.3,-1.2l-0.38,-1.65l0.28,-0.21l1.46,0.33l0.74,-0.73l2.95,-0.62l0.86,0.49l0.55,-0.29l0.05,-1.03l-0.43,-0.4l-0.49,0.13l-4.38,-1.38l-0.81,-0.7l-0.67,0.1l-0.6,0.73l-1.14,0.23l-0.67,-1.1l0.51,-0.55l-0.11,-0.64l-0.97,-0.04l-1.04,-1.94l0.67,-0.03l2.14,1.28l0.87,-0.29l0.09,-1.05l-2.64,-2.05l-1.57,0.05l-0.31,-1.14l-1.48,-2.49l1.63,-1.14l1.69,-0.35l1.33,-2.87l2.16,0.72l0.8,-0.47l2.17,0.38l2.04,-0.23l2.53,-0.78l4.18,-0.63l1.03,-0.73l0.06,-0.6l-0.62,-0.54l-3.01,0.21l-1.66,0.56l-3.52,0.53l-2.43,-1.02l0.26,-0.96l3.07,0.27l1.37,-0.86l2.42,-0.48l0.39,-0.39l-0.05,-1.33l-0.59,-0.13l-2.79,0.77l-0.44,0.49l-3.09,-0.65l1.69,-1.4l-0.35,-0.85l-1.91,-0.0l-1.26,0.94l-0.56,-1.7l-0.52,-0.28l-0.54,0.36l-0.09,0.64l-0.81,0.08l-0.89,2.24l-0.39,-0.2l-0.46,0.22l0.02,1.27l-1.24,1.27l-0.63,-0.47l0.05,-0.83l1.68,-1.95l-0.44,-0.41l-1.11,0.12l-1.74,-0.96l-0.65,0.26l-0.05,1.36l0.28,0.17l-0.39,0.47l-2.34,1.55l-0.47,-0.19l0.35,-1.57l-0.51,-0.45l-0.28,-1.3l-0.7,0.05l-0.3,0.43l-1.03,-0.62l0.5,-0.81l-0.32,-0.72l0.18,-1.43l4.91,-1.61l2.03,-2.07l0.3,-2.61l-0.32,-0.52l-0.56,0.01l-0.34,0.87l-0.87,0.4l-0.19,0.68l-0.74,0.75l-1.95,0.74l-2.78,-0.29l-1.1,-2.17l-0.49,-0.32l-0.01,-1.33l-0.75,-1.13l0.17,-0.75l0.45,-0.45l0.71,-0.08l0.23,-0.63l-0.53,-0.83l-1.52,-0.59l-0.23,-1.34l1.14,-0.5l0.25,-0.41l-0.33,-0.35l-1.22,-0.01l-0.27,-0.93ZM443.8,113.87l0.28,0.85l-0.7,0.52l0.38,-0.96l0.04,-0.42ZM461.48,146.36l0.13,0.3l0.04,0.32l-0.12,-0.23l-0.04,-0.39ZM467.94,95.1l-0.47,-0.95l0.29,-0.52l-0.28,-0.92l-1.08,-0.44l-0.75,-1.59l0.06,-2.29l0.7,-1.35l3.12,0.6l0.09,0.38l0.55,5.34l-0.36,0.49l-1.5,0.62l-0.38,0.64ZM428.65,100.85l-0.38,0.08l-0.0,-0.39l0.24,-0.06l0.14,0.37ZM467.95,144.5l0.1,-1.31l0.38,-0.62l-0.14,0.96l-0.34,0.97ZM468.78,140.89l0.02,-0.58l0.13,-0.05l0.0,0.05l-0.16,0.58ZM453.23,161.28l0.5,-0.07l0.77,-0.83l2.87,0.68l2.74,3.45l0.26,0.55l0.03,2.25l0.38,0.77l-0.72,1.38l-1.41,1.41l-1.23,0.17l-0.11,-0.75l-2.86,-1.81l-0.9,-1.33l-0.47,-0.99l0.15,-4.88ZM459.14,188.77l-0.7,-0.78l-2.16,-5.38l0.28,-0.78l1.01,-0.69l1.58,-0.38l1.42,1.91l0.07,0.95l-0.73,0.85l-0.28,1.43l0.25,1.75l0.62,0.81l-0.54,-0.39l-0.59,0.06l-0.23,0.64ZM457.58,356.16l0.14,0.07l-0.06,0.19l-0.08,-0.25l-0.0,-0.01ZM455.83,351.11l0.05,-0.55l0.96,-0.9l0.46,0.74l0.43,-0.01l-1.07,2.13l-0.1,-0.72l-0.73,-0.7ZM421.83,269.74l0.48,-0.7l-0.15,-1.2l0.22,-0.51l0.89,-0.23l-0.3,-1.11l0.12,-2.99l-0.26,-0.6l0.3,-1.27l-0.42,-1.81l0.32,-0.7l-0.08,-1.33l0.69,-0.26l0.16,-0.47l-0.96,-1.52l0.29,-1.54l1.24,-0.77l0.17,0.34l0.72,-0.1l1.47,2.21l1.38,0.57l1.36,-0.07l0.32,-0.59l-0.37,-0.69l-1.14,-0.38l-1.36,-2.16l0.98,-0.76l-0.17,-0.53l-0.59,-0.51l-0.85,0.35l-0.54,-0.66l-0.12,-0.73l0.47,-1.74l2.55,-0.98l0.77,-0.82l1.73,0.05l0.55,-0.74l2.57,-0.04l0.41,1.09l0.68,0.41l0.56,-0.37l0.06,-1.69l2.47,-0.16l1.5,0.85l1.37,0.29l0.39,1.11l0.71,-0.28l1.18,0.83l0.76,1.32l-0.39,0.98l0.42,0.52l1.3,-0.14l0.39,-0.31l0.08,-0.66l1.43,-0.69l0.46,0.18l1.18,-0.33l3.56,0.65l4.04,2.08l0.38,-0.17l0.33,0.23l-0.07,0.27l-0.72,0.01l-0.29,0.45l-0.0,1.59l-2.62,5.22l-1.34,0.04l0.33,1.6l-1.65,3.1l-0.55,1.82l-1.86,0.4l-0.55,0.4l0.19,0.66l1.32,0.34l-3.2,7.7l-1.06,1.11l-0.52,1.08l-1.63,0.64l-5.37,-1.84l-0.78,-0.76l-0.72,0.49l-1.32,0.19l-3.56,0.14l-0.95,-0.24l-0.56,0.5l-0.05,1.51l0.48,0.21l0.64,-0.4l1.16,0.6l1.13,-0.0l-0.14,1.38l1.23,1.05l0.93,2.98l-0.58,0.61l-0.52,1.41l-1.34,0.93l-1.65,3.59l-0.43,1.79l-0.69,0.16l-0.4,0.84l-0.42,-0.29l-2.74,0.09l-2.11,0.69l-0.62,-0.41l0.13,-0.97l0.67,-0.66l0.02,-0.57l1.89,-0.52l0.29,-0.35l-0.84,-0.59l-1.68,0.45l-0.24,-0.64l0.46,-3.7l-0.36,-1.51l0.5,-0.08l0.15,-1.05l-0.45,-1.57l-0.64,-0.36l0.07,-1.37l-0.3,-0.76l-0.77,-1.19l-0.61,-0.21l0.04,-0.31l0.43,-0.08l0.02,-0.5l-0.22,-1.02l-0.66,-0.35l0.45,-2.58l-0.49,-1.85ZM431.01,292.59l0.04,-0.02l0.01,0.07l-0.05,-0.05ZM454.76,352.74l-0.33,-0.41l0.26,-1.19l0.62,1.43l-0.04,0.91l-0.26,0.07l-0.25,-0.82ZM453.11,471.02l0.19,0.06l0.17,0.16l-0.28,-0.02l-0.08,-0.2ZM447.02,341.38l0.79,-0.49l0.19,0.79l-0.27,0.56l-0.72,-0.86ZM446.66,468.82l0.04,0.02l-0.03,0.04l-0.0,-0.0l-0.01,-0.06ZM446.04,340.0l0.11,-0.11l0.26,-0.0l-0.36,0.11ZM425.5,160.21l0.49,-2.25l1.81,-1.24l1.48,-0.31l0.54,-0.62l0.02,1.13l0.51,0.52l1.76,-0.4l0.66,-0.74l2.7,0.52l0.3,0.41l1.57,-0.09l0.37,0.57l1.03,0.19l0.47,-0.77l0.65,-0.21l1.66,1.12l0.5,1.38l-1.11,0.32l-0.29,0.39l-0.09,1.16l-0.63,1.11l-0.21,2.13l-1.31,-0.35l-0.34,0.35l-0.52,-0.45l-0.63,0.21l-1.22,-0.71l-8.83,-0.54l-1.35,-2.81ZM419.43,222.82l0.2,-1.65l0.75,-1.77l0.4,0.08l0.22,-0.29l-0.03,-0.66l2.31,-0.56l0.07,-0.68l0.55,-0.3l0.08,-0.54l-0.75,-0.37l0.27,-0.52l0.23,0.14l0.84,-0.46l0.24,-0.64l0.7,-0.46l-0.08,-0.71l-0.69,-0.49l0.23,-0.91l1.79,-1.27l0.28,0.25l0.54,-0.2l0.25,-0.76l0.83,0.15l1.57,-1.09l2.61,0.99l2.17,3.93l1.14,1.59l0.64,0.37l0.05,0.47l-0.45,-0.01l-0.44,0.54l1.78,1.21l-0.53,1.41l0.6,1.82l-0.25,0.98l-0.86,0.8l0.17,0.58l0.6,0.02l0.4,1.35l-0.24,4.58l-0.78,0.52l0.6,0.57l-0.13,0.64l-0.56,0.6l-3.39,0.25l-0.81,-0.49l-1.09,0.57l-1.25,-0.11l-0.52,-1.16l-1.47,-0.02l0.15,-1.12l-1.59,-1.93l-2.06,-0.33l-0.25,-0.62l-0.56,-0.15l-0.37,0.45l0.06,-0.28l-1.44,-1.78l0.6,-0.63l-0.38,-0.86l0.3,-0.92l-0.31,-0.32l-0.73,0.08l-0.28,0.41l-0.55,2.09l-0.32,-0.23l0.55,-1.11l-0.12,-0.78l-1.46,-0.23ZM423.67,213.82l-0.12,-0.05l0.05,-0.1l0.03,0.01l0.04,0.14ZM433.58,79.03l2.22,0.14l0.49,1.16l-0.62,0.41l-1.02,-0.43l-0.89,-0.87l-1.79,-0.23l1.6,-0.17ZM416.34,136.36l0.3,-0.35l1.26,0.04l0.49,-0.68l-0.1,-0.97l-0.82,-0.91l-0.38,-1.02l0.11,-2.87l0.9,-0.83l3.13,0.78l0.51,0.65l1.75,1.11l0.41,0.91l0.93,0.51l0.7,-0.02l0.95,1.65l0.71,0.19l-0.63,1.81l0.15,0.41l1.8,1.36l0.6,-0.03l0.79,-0.78l0.94,0.36l2.76,3.08l-0.08,1.03l-2.91,2.52l0.37,0.9l1.07,0.6l0.11,0.78l0.87,1.3l-0.07,0.95l-0.9,2.19l-1.57,-0.19l-0.44,0.55l-1.95,1.05l-2.63,0.71l-0.06,-0.7l-0.92,-0.34l-0.69,0.61l-0.65,0.08l-0.05,1.0l-0.78,0.91l-0.66,-0.34l-0.0,-1.2l0.75,-1.23l-0.18,-0.48l-1.67,-0.96l-0.47,-0.94l-1.21,-0.97l0.27,-0.99l3.77,0.54l0.55,-0.78l-0.01,-1.08l-2.74,-2.31l-0.91,0.02l-0.92,-0.39l-0.2,-1.24l-1.04,-0.99l0.29,-0.59l-0.28,-0.89l0.23,-0.89l-0.93,-0.57l-0.56,-0.87l-0.07,-1.19ZM432.67,201.01l0.19,2.46l0.62,2.14l-1.67,0.27l-0.48,-0.62l-0.05,-2.39l-0.41,-1.08l1.79,-0.78ZM430.12,501.31l0.96,-0.01l0.44,0.57l-0.36,0.42l-0.49,-0.85l-0.56,-0.13ZM423.39,233.69l0.63,-0.4l0.07,-0.68l0.56,-0.1l0.61,0.53l0.83,1.95l-0.18,0.21l-2.0,-0.89l-0.51,-0.62ZM417.6,212.21l-0.01,-0.76l1.61,-1.09l0.76,-0.04l-0.24,0.78l0.18,1.15l-1.18,0.75l0.15,0.81l-0.6,0.23l-0.36,-0.28l-0.31,-1.56ZM421.46,209.34l0.11,-1.05l1.96,1.73l-0.02,0.39l-0.55,0.26l-0.77,1.3l-0.81,-1.09l0.37,-1.08l-0.28,-0.46ZM421.74,297.82l0.27,-0.12l0.0,0.05l-0.27,0.08ZM422.35,296.54l-0.3,-0.28l0.46,-0.16l-0.15,0.44ZM389.32,351.88l0.51,0.4l1.44,0.15l1.01,-0.75l1.02,0.07l0.81,-0.73l0.32,-1.55l0.58,0.4l0.61,-0.56l0.91,-0.16l0.14,-1.27l-1.28,-2.05l0.07,-0.19l0.61,0.31l0.66,-0.29l-0.03,-0.64l-1.01,-0.85l0.13,-0.8l0.88,0.34l0.57,1.52l1.06,0.88l0.08,0.65l0.59,0.28l0.66,-0.31l0.18,-0.77l-2.25,-3.41l0.79,-2.88l0.5,-0.74l0.8,-0.26l0.81,-1.47l0.31,-0.08l1.31,0.89l0.27,1.08l1.42,0.84l0.46,1.11l-0.54,0.13l-0.38,0.69l0.66,1.71l0.24,0.2l0.6,-0.23l0.58,-1.54l0.87,2.19l1.32,1.95l0.85,0.26l0.47,0.8l1.2,0.59l2.15,2.52l0.23,0.86l-0.68,1.93l-0.02,2.57l0.77,0.85l0.75,-0.36l-0.16,-1.17l0.38,-2.07l0.53,2.02l-0.4,1.12l0.81,1.59l0.1,2.03l0.36,0.29l0.71,-0.21l0.18,0.86l0.49,0.36l0.8,-0.15l1.41,-1.22l0.64,0.63l-0.43,0.92l-1.47,1.44l-0.42,-0.7l-0.44,-0.09l-1.61,0.33l-0.77,2.34l-0.47,-0.21l-0.57,0.2l-2.45,2.86l-1.47,0.43l-2.91,-1.81l-1.27,-1.48l-0.32,-0.06l-0.46,0.51l0.24,0.89l-0.23,0.15l-1.46,-0.8l-0.66,0.12l-2.02,-2.6l-2.0,-1.12l-0.64,0.25l-0.51,-0.54l-0.37,-0.76l0.39,-1.34l-1.03,-1.12l-0.32,-0.11l-0.64,0.41l0.01,1.38l-0.33,0.51l-0.47,-0.99l-0.44,-0.24l-0.6,0.16l-0.84,-0.83l0.57,-1.76l-1.34,-1.01l-0.45,0.01l-0.37,0.63l-0.84,0.05l0.3,1.29l-0.62,0.2l-1.39,-1.1l-0.1,-1.13l-0.77,-1.73l1.01,-1.65l0.72,0.14l0.43,-0.42ZM414.79,346.68l0.44,-0.57l0.05,-0.57l0.3,-1.06l1.01,-0.52l0.15,0.42l0.6,0.06l1.43,1.8l-0.36,2.41l-0.8,1.03l-0.84,0.08l0.04,-0.75l0.51,-0.5l0.04,-2.23l-0.18,-0.91l-0.59,-0.67l-0.75,-0.06l-0.43,0.52l0.26,1.87l-0.55,1.17l-0.32,-1.5ZM415.07,348.28l-0.2,0.62l0.01,0.28l-0.08,-0.53l0.28,-0.37ZM411.44,98.32l0.33,-1.33l-0.06,-1.8l0.73,-1.46l1.24,-1.13l0.58,0.21l0.71,0.96l1.52,-0.38l0.76,1.21l0.4,2.99l-0.44,1.72l0.3,3.01l-0.67,1.82l-1.8,-1.46l0.27,-2.18l-1.22,-1.67l-2.43,0.15l-0.23,-0.65ZM374.78,271.19l0.15,-1.85l1.27,-1.98l0.55,-1.94l0.48,-0.66l2.36,-0.71l1.55,1.82l-0.34,0.83l0.39,1.03l0.68,0.99l0.56,0.12l0.22,1.9l0.49,0.66l-0.18,0.65l0.47,0.74l1.29,0.49l0.49,0.52l1.58,0.06l0.68,-0.72l0.01,-0.4l1.14,-0.03l1.2,0.51l1.05,-1.22l0.12,-1.68l1.82,-0.35l0.03,-0.82l0.38,-0.53l-0.5,-1.09l0.18,-0.82l-0.41,-0.96l0.14,-0.49l-0.57,-0.66l0.24,-0.76l-0.97,-0.3l-0.87,0.71l-0.41,-0.77l0.78,-0.72l0.06,-0.81l0.52,-0.73l0.47,0.0l0.27,0.73l1.42,1.47l1.64,-0.08l0.32,-0.32l-0.07,-0.62l-1.04,-0.25l-0.62,-0.65l-1.19,-2.97l-0.71,-0.9l-0.08,-0.74l-0.83,-1.12l0.58,-2.35l-1.21,-1.14l-0.87,0.1l0.29,-0.74l-0.33,-0.49l-0.85,-0.27l0.61,-2.28l0.62,-0.18l0.9,0.24l0.62,-0.74l1.09,0.32l1.89,1.7l0.23,0.85l0.69,0.01l0.58,-1.72l0.83,-0.9l0.31,0.43l1.15,0.47l1.58,2.23l-0.29,0.59l0.71,0.75l0.58,-0.42l0.18,-0.95l1.36,-0.09l0.52,0.63l0.91,-0.84l3.77,-0.59l1.14,-0.84l0.26,-0.54l0.62,0.59l1.21,-0.69l0.81,0.75l1.16,0.18l1.5,2.73l-0.26,1.97l-1.21,0.85l-0.35,0.67l-1.17,-0.78l-0.51,0.4l0.01,0.85l-0.96,-0.32l-0.62,1.66l0.6,1.01l1.15,-0.71l0.5,0.55l0.9,-0.05l-0.5,0.73l0.51,0.57l-0.16,0.49l-0.57,-0.08l-3.06,1.19l-3.76,4.71l-2.05,1.75l0.35,0.67l-0.23,2.58l0.36,0.6l0.59,-0.24l0.22,-0.91l0.95,-1.48l1.76,-1.18l1.87,0.33l2.34,1.76l-0.22,1.33l-0.72,0.08l-0.36,0.52l0.31,0.42l1.02,0.38l0.34,1.35l0.49,0.18l0.18,0.67l-1.14,1.5l-0.13,1.04l0.33,0.62l1.04,-0.04l1.12,-1.36l1.35,-0.67l0.38,-0.02l0.74,1.45l0.17,1.66l-0.21,0.46l0.63,1.16l0.09,1.39l-0.44,0.09l-0.52,0.87l-1.34,0.98l-1.3,-0.26l-0.36,0.62l1.76,1.4l0.5,2.45l-0.19,1.19l-2.27,0.61l-0.18,0.67l1.48,0.8l0.92,-0.26l-0.21,0.9l-0.63,-0.1l-1.17,1.13l0.45,0.76l1.41,-0.51l-0.71,1.85l-0.1,-0.74l-0.63,-0.17l-0.83,0.85l-1.07,0.25l-1.03,2.19l-0.76,0.59l-1.69,0.9l-1.31,-0.13l-0.61,-0.66l-1.31,-0.44l-1.27,0.17l-0.48,-0.37l-0.54,-1.24l1.3,-3.44l-0.79,-0.72l-0.29,0.11l-0.16,0.76l-1.24,1.51l-0.62,1.81l0.09,0.41l0.55,0.21l0.08,1.18l1.9,2.92l-1.02,1.91l-2.48,2.43l-0.91,-0.15l-0.38,0.34l-1.19,-2.37l-0.67,-0.1l-1.09,0.67l-0.7,-3.87l0.18,-1.2l-1.18,-0.97l-0.52,-3.21l-0.82,-1.07l-0.16,-1.16l-1.32,-0.51l-0.32,-0.47l-1.7,-3.7l0.07,-1.02l-0.42,-0.23l-0.03,-0.65l-0.85,-1.42l-1.04,-0.68l-0.87,-0.1l-0.5,0.37l0.07,-1.82l-1.28,-1.57l-0.91,0.21l-0.89,0.94l-0.86,-0.95l-1.09,-0.07l-0.38,-0.95l0.82,-0.69l-0.35,-0.7l-0.46,-0.11l0.0,-1.42l-1.24,-1.46l-1.58,-1.23l-1.76,-3.24ZM390.55,268.8l-0.03,-0.05l0.05,-0.05l0.03,0.02l-0.05,0.08ZM391.26,258.16l-0.13,1.15l-2.76,1.04l-0.5,-0.37l-0.53,-1.17l-1.27,-0.83l-0.04,-0.89l-0.77,-0.56l-0.6,-1.14l0.9,-1.31l1.09,-0.01l0.35,-0.89l1.65,0.33l1.12,3.12l0.65,0.37l0.36,0.93l0.47,0.23ZM395.86,246.94l-1.15,1.05l-0.61,-0.19l-0.16,-0.44l0.27,-0.56l0.84,-0.53l1.19,0.17l-0.38,0.51ZM383.77,205.23l0.5,0.09l0.47,-0.44l-0.1,-1.22l0.74,-0.18l0.18,-0.7l1.21,0.25l1.04,0.8l0.89,-0.46l-1.01,-1.33l0.62,-0.42l0.02,-0.79l-0.44,-0.25l-0.96,0.16l0.59,-1.18l2.2,-0.44l0.19,0.67l1.47,1.59l0.06,1.16l1.11,0.73l0.42,-0.02l0.74,-0.76l1.12,-0.16l0.51,-0.52l0.08,-0.45l-0.4,-0.23l-2.14,0.59l-0.0,-1.51l-0.29,-0.43l-0.65,-0.12l-0.09,-1.13l1.71,-1.64l0.21,-0.41l-0.29,-0.55l-2.37,0.42l-0.43,-0.71l-0.17,-1.33l0.32,-0.87l0.79,-1.06l1.24,-0.51l1.04,-0.92l0.09,-0.48l-0.44,-0.21l-2.22,0.5l-0.43,-0.28l-1.14,0.02l0.38,-0.39l0.29,-1.99l0.64,-0.46l-0.4,-0.93l1.17,-0.93l1.9,0.7l0.46,0.6l1.07,1.88l-0.53,2.31l1.53,1.03l0.93,1.78l-0.66,0.57l-0.02,0.46l2.18,1.08l1.1,2.81l-0.34,0.81l0.87,0.32l0.08,0.68l0.35,0.29l0.91,-0.75l2.34,-1.06l0.37,-0.86l-0.68,-0.41l-1.87,0.53l0.14,-0.38l-1.03,-1.91l-0.27,-1.66l0.3,-0.33l2.01,1.03l1.72,-0.63l0.33,-0.78l-0.43,-0.19l-1.45,0.33l-1.45,-1.62l-1.17,0.14l-1.42,-1.07l0.11,-0.5l3.22,0.42l0.33,-0.21l-0.05,-0.7l-0.36,-0.16l0.13,-0.62l-0.82,-0.32l-0.61,-1.44l-0.45,0.17l-0.51,-0.44l-1.8,-0.04l-1.23,-2.57l1.37,-0.44l0.53,-1.09l2.08,-1.34l2.12,1.16l0.39,0.02l0.59,-0.55l0.16,0.01l-0.2,0.83l0.76,0.32l1.32,2.38l-0.15,1.12l0.46,0.94l0.63,0.43l0.54,-0.33l-0.22,-0.93l0.86,0.61l0.69,-0.38l-0.07,-1.17l-0.76,-1.67l0.23,-1.16l0.36,-0.21l0.41,0.93l0.62,0.04l0.27,-0.55l0.75,-0.03l0.34,-0.33l0.26,1.46l1.67,1.11l1.4,0.51l0.5,0.54l-0.07,1.37l-0.88,2.32l0.33,1.55l0.98,1.91l-0.05,1.08l-1.22,3.87l0.26,2.81l-0.65,1.32l-1.67,1.18l0.25,0.77l2.72,1.22l0.11,0.51l-0.58,3.27l-1.37,-1.71l-2.28,2.1l-0.15,1.14l1.02,0.43l-1.01,0.13l-0.97,2.26l0.38,1.16l1.4,0.73l0.43,0.59l-0.34,0.65l0.12,0.42l0.54,0.28l0.41,0.74l-0.73,0.28l-0.94,-1.01l0.01,-1.37l-0.71,-0.43l-0.87,1.75l0.3,0.88l0.67,0.69l-0.02,1.48l-4.23,0.38l0.0,-0.4l-0.46,-0.22l-0.03,-0.96l-0.5,-0.29l-0.71,0.3l-0.14,1.04l-1.93,0.15l0.86,-2.32l-0.15,-0.74l-0.84,0.16l-1.17,1.92l-0.24,1.09l-4.37,-1.23l-0.14,-0.34l0.29,-2.82l-0.76,-1.01l0.47,-0.31l2.3,0.38l0.55,-0.3l0.08,-0.47l-1.72,-0.92l0.36,-0.69l-0.45,-0.55l-1.4,0.3l-0.45,-0.63l1.35,-0.74l0.01,-0.51l-0.56,-0.86l3.07,-0.16l0.54,-0.85l-0.09,-0.7l-0.56,-0.21l1.3,-0.09l0.3,-0.63l-0.2,-0.21l0.89,-0.23l0.48,-0.64l-0.75,-0.88l4.91,-0.17l0.58,-0.46l-0.25,-0.89l-3.61,0.21l-0.41,-0.32l-5.51,0.71l-0.52,-0.2l-3.1,0.47l-1.04,0.48l-1.31,-0.58l-3.7,0.92l-0.9,-0.24l-1.18,0.17l-1.18,0.6l-0.43,-0.81l0.21,-0.63l-0.24,-0.45ZM414.36,266.83l0.45,0.33l0.47,-0.16l0.16,1.43l-0.9,1.89l-1.18,0.2l-0.67,-1.27l-0.07,-2.15l0.62,-1.15l1.01,-0.67l0.38,0.38l-0.27,1.17ZM414.02,274.95l-0.9,-0.23l-0.15,-0.37l0.49,-0.5l0.1,-0.82l0.81,-0.84l-0.26,0.71l0.39,1.28l-0.49,0.75ZM411.43,235.03l-0.36,-0.31l0.19,-0.46l0.86,-0.66l0.9,-1.59l0.33,0.01l0.4,0.46l-0.71,1.5l-0.64,0.12l-0.97,0.93ZM410.06,345.07l1.51,0.05l0.61,0.71l0.95,-0.39l0.17,1.41l-0.45,1.89l-0.93,-1.78l-1.28,-0.8l-0.58,-1.09ZM382.97,135.74l-0.59,-2.3l0.01,-1.42l0.39,-0.64l0.86,-0.74l0.61,0.01l2.71,2.01l1.67,0.22l0.66,0.66l0.55,0.07l0.67,-0.79l0.05,-1.1l0.58,-0.39l0.01,-1.18l-0.45,-0.41l-2.55,-0.27l0.4,-0.4l2.02,0.24l0.44,-0.45l-0.09,-0.73l0.84,-0.11l0.34,-0.94l-0.42,-1.23l-0.52,-0.32l-0.83,0.28l-0.01,-0.67l-0.5,-0.27l-0.61,-0.22l-0.47,0.23l-0.37,0.97l-0.54,-0.55l2.05,-1.88l0.29,-0.74l-0.83,-1.4l-0.08,-1.1l-0.98,-0.62l-1.67,0.95l-1.01,2.32l-1.24,1.23l-0.45,0.0l0.1,-0.62l0.88,-1.09l1.46,-2.92l-0.0,-0.8l-1.31,-1.09l-2.53,0.6l-0.45,-0.29l0.45,-3.63l0.53,-1.4l0.88,-1.2l-0.07,-0.85l1.1,0.94l6.94,-0.52l1.44,1.75l0.65,0.01l0.49,0.41l0.69,1.58l-0.09,1.48l1.06,2.6l-0.57,2.15l-0.72,1.05l0.33,0.63l0.61,-0.07l-0.36,0.76l0.38,1.11l0.7,-0.12l0.87,-1.41l0.25,-1.95l1.49,-0.62l0.89,-0.97l0.93,0.3l1.44,2.91l1.25,0.73l-1.32,2.83l0.06,0.88l0.78,0.34l0.19,0.56l0.46,0.26l1.07,-0.57l0.72,0.1l1.01,-0.62l0.22,1.34l1.35,1.15l0.29,0.76l-0.77,0.86l-0.14,0.89l0.78,0.56l0.5,-0.14l0.4,0.76l0.72,0.04l-0.64,1.05l0.21,0.33l-0.5,1.14l-1.11,1.04l0.43,1.71l-0.46,1.99l0.47,0.65l0.88,0.07l0.33,1.97l0.66,0.82l1.4,3.18l-0.19,1.25l-0.82,1.09l0.24,1.78l-0.76,0.83l-3.18,0.26l-0.72,0.75l-3.03,-2.19l0.06,-0.78l-0.78,-2.96l0.56,-1.61l-1.09,-1.69l-0.14,-1.87l-0.46,-0.22l-0.92,0.33l-0.96,-1.37l-3.26,-1.74l-2.35,0.82l-0.76,-0.98l0.11,-0.74l0.74,-0.74l-0.29,-1.0l-3.53,0.22l-0.99,0.46l-0.9,0.01l-1.38,0.96l-0.37,0.67l-2.15,-1.04l-1.32,-2.23ZM402.3,245.78l0.83,-0.17l0.64,-0.53l1.52,0.08l2.32,-1.24l2.75,-0.09l-0.31,1.26l-0.78,1.12l-1.31,0.76l-0.9,1.24l-2.94,0.62l-0.22,-0.46l-0.67,-0.08l-0.2,0.26l-0.48,-0.32l-2.29,-0.19l-0.71,-0.52l0.06,-0.4l1.73,-0.52l0.87,0.11l0.12,-0.96ZM404.64,335.96l0.28,0.24l-0.19,0.49l-0.18,-0.17l0.08,-0.57ZM400.12,384.21l0.18,-0.59l0.82,-0.41l-0.03,0.27l-0.97,0.73ZM393.8,182.29l0.81,-0.68l1.53,-0.23l1.01,-0.86l0.46,-0.91l1.76,-0.32l1.38,0.5l-5.02,2.71l-0.88,0.31l-1.05,-0.51ZM393.1,153.37l0.12,-0.43l-0.41,-0.98l0.08,-1.05l0.43,-0.8l3.57,0.04l2.26,1.78l1.09,2.26l-2.23,-0.06l-0.62,-0.32l-1.53,1.08l-1.75,-0.58l-1.01,-0.95ZM390.55,142.8l-0.47,-0.22l0.1,-0.79l1.29,-1.78l0.47,-0.09l0.13,1.23l-1.53,1.65ZM381.06,200.78l0.49,-0.39l0.1,-0.71l1.3,-0.07l-0.34,-0.8l0.48,-0.76l4.85,-1.31l0.73,0.88l-2.31,0.72l-0.98,2.08l-0.55,0.45l-0.5,-0.27l-0.34,0.28l-0.66,-0.1l-0.22,0.31l-2.06,-0.3ZM378.25,196.4l1.13,-0.61l1.41,0.02l2.27,-1.2l3.84,-0.41l0.31,0.33l-0.14,0.8l-7.87,1.78l-0.94,-0.39l-0.01,-0.32ZM376.08,190.42l0.51,-0.09l0.37,-0.74l0.96,0.03l1.65,-0.6l1.35,0.13l5.02,-0.61l0.58,1.84l-0.32,1.29l-0.74,0.97l-0.9,0.66l-2.34,0.44l-3.2,-0.16l-0.2,-0.51l-2.69,-0.94l-0.05,-1.71ZM383.08,318.64l0.75,-0.08l0.69,0.85l-0.37,0.89l0.52,0.79l0.07,0.8l-0.72,-0.23l-1.1,-1.19l0.16,-1.82ZM376.48,180.64l0.14,-0.82l1.71,-1.08l1.59,0.1l0.19,0.43l-0.93,1.4l0.03,0.52l0.66,0.24l0.6,-0.21l0.59,-0.72l0.65,1.08l0.05,1.03l0.98,0.89l0.62,0.1l0.21,0.64l0.85,0.33l0.05,0.64l-1.9,1.61l-2.86,-0.1l-2.5,-0.58l0.38,-0.74l-0.37,-0.87l0.38,-1.61l-0.3,-0.9l-0.57,-0.15l0.14,-0.53l-0.41,-0.71ZM382.87,351.88l0.5,1.7l-0.24,1.27l-0.56,-0.41l-0.39,-0.96l0.19,-1.09l0.5,-0.51ZM378.76,357.87l0.32,-2.26l0.42,-0.71l-0.17,-1.01l0.44,-0.58l0.86,0.43l0.19,1.04l0.98,1.16l-0.5,1.2l0.11,0.66l-0.35,0.55l-0.68,0.19l-0.41,0.77l-0.05,-1.51l-0.61,-0.22l-0.56,0.3ZM380.85,368.37l0.1,-0.05l-0.02,0.19l-0.08,-0.14ZM374.14,155.27l0.21,-2.42l-0.8,-2.01l0.8,-0.65l0.99,0.44l0.58,0.86l1.89,4.93l0.03,1.06l-0.4,0.64l-0.16,1.45l1.37,0.18l1.17,2.66l-0.18,0.71l0.34,0.43l-0.01,0.7l-0.85,1.86l-0.9,0.06l-0.5,0.4l-0.78,-1.62l-1.22,-0.12l0.13,-0.76l-0.71,-1.63l0.21,-0.27l-0.64,-0.77l0.21,-1.55l-0.35,-0.63l0.01,-1.53l-0.33,-0.43l0.58,-1.2l-0.67,-0.8ZM262.47,316.27l0.34,-0.22l1.12,0.46l0.61,-0.39l-1.96,-6.32l0.67,-1.78l29.24,8.27l-0.78,3.03l0.33,0.57l1.6,0.39l0.47,-0.27l1.21,0.25l0.57,-0.32l0.28,-0.67l-0.55,-0.7l0.35,-1.4l17.48,4.16l0.48,-0.3l11.63,-52.12l1.02,0.72l0.45,-0.55l-0.42,-0.8l0.69,-0.71l-0.54,-1.4l-0.24,-1.55l0.18,-0.81l0.81,0.54l0.91,-1.42l-0.36,-0.62l-0.9,-0.56l0.84,-3.76l0.49,0.81l0.68,-0.14l0.16,0.09l-0.66,0.45l-0.02,0.46l1.77,2.72l0.22,0.8l1.31,0.03l-0.22,0.72l0.89,1.23l-0.65,1.01l-0.12,1.31l1.49,0.42l0.49,-0.38l0.61,0.57l-0.0,1.22l-1.19,3.5l0.19,3.2l-0.22,1.41l0.7,0.67l-0.61,2.61l0.7,0.59l-0.36,0.57l0.2,0.65l0.53,-0.06l-0.76,0.93l0.12,1.0l-0.43,0.87l0.57,1.07l-0.58,0.75l0.71,0.62l0.63,-0.14l0.24,1.97l0.89,0.76l0.73,-0.02l0.66,-0.57l-0.5,-1.35l0.11,-0.47l0.57,0.49l0.46,-0.1l0.95,-1.25l2.02,-0.19l0.34,-0.55l-0.93,-1.07l0.96,-0.16l0.34,-0.89l-0.87,-0.81l-0.05,-1.22l-1.01,-0.89l-0.03,-1.0l0.38,-0.81l-0.2,-0.86l-0.61,-0.33l0.22,-2.55l0.4,-0.02l0.4,-0.69l-0.45,-1.3l0.23,-0.62l-0.26,-0.84l0.67,-0.65l-0.92,-1.26l0.65,-0.41l0.21,-1.11l-0.5,-1.17l0.21,-1.86l-0.25,-1.13l0.28,-1.02l-0.12,-1.87l0.37,-0.58l-0.2,-1.1l0.32,-0.72l-0.25,-0.96l0.41,-0.63l-0.51,-1.77l0.88,-1.09l1.54,0.68l0.58,-0.44l-1.25,-2.02l0.07,-0.53l0.29,0.08l0.47,-0.7l0.88,0.63l0.88,0.17l1.07,1.06l1.44,2.45l0.78,0.6l0.86,-0.52l-0.4,-1.36l0.32,-0.64l1.15,-0.22l0.52,1.8l1.16,0.69l1.15,3.08l1.46,1.27l0.95,-0.04l-0.08,0.98l1.0,1.42l0.39,1.62l-0.25,0.32l0.71,0.92l0.14,0.68l-0.45,-0.14l-0.38,0.59l0.3,0.98l-0.17,0.88l0.84,1.07l-0.49,0.76l-0.05,1.17l0.44,1.05l-0.06,0.9l-0.51,0.11l-0.15,0.45l1.27,6.09l-0.75,1.49l-0.03,0.87l0.63,1.99l-0.0,3.18l0.86,1.04l1.18,5.51l-0.52,1.49l0.4,1.04l-0.28,0.91l0.13,0.89l-0.7,-0.16l-0.58,0.46l-0.33,3.04l-1.42,1.39l-0.22,0.73l0.27,1.13l2.57,3.54l0.53,3.8l1.04,0.58l1.58,3.35l1.99,0.55l0.86,1.98l1.46,0.57l0.59,-0.41l1.2,0.86l1.63,1.49l1.31,2.18l0.55,0.1l1.0,1.5l1.19,0.26l0.48,-0.79l0.39,0.02l0.35,0.54l-0.46,0.82l-0.08,1.02l0.58,1.75l1.49,-0.09l0.39,-0.62l0.4,0.54l0.48,0.08l1.21,-0.95l-0.15,1.9l0.29,1.38l-0.44,2.07l0.43,0.9l-0.09,1.65l-0.72,1.31l-0.15,1.26l-1.32,-0.65l-0.67,0.31l-0.66,-3.2l0.48,-1.61l-0.57,-0.42l-0.55,0.52l-1.63,3.9l-0.92,-1.31l-0.6,-0.05l-0.31,-2.12l-0.58,-0.38l-0.43,0.24l-0.04,-1.44l-0.73,-0.32l-0.41,0.42l-0.06,0.89l-0.59,0.26l-0.22,0.59l-1.04,0.38l-0.53,0.69l-0.48,-0.51l-0.55,0.22l0.26,1.51l0.78,0.74l-0.26,1.54l-0.39,0.73l-0.94,-0.2l-0.6,0.2l-2.17,-1.88l-0.77,-1.75l-0.7,-0.11l-0.5,-0.54l-0.75,0.27l-0.57,1.77l0.21,0.51l1.76,1.56l0.29,2.37l0.48,0.31l0.4,-0.29l0.06,0.36l-0.47,1.0l-0.33,2.26l-1.53,1.25l-0.23,1.27l0.19,0.67l0.83,0.07l3.22,-5.13l2.26,-0.4l0.69,-1.2l1.16,-0.27l1.41,0.46l0.57,1.19l-0.6,0.74l-0.6,-0.16l-0.61,0.35l-0.19,0.91l0.88,0.86l-0.73,-0.42l-0.47,0.19l-0.23,1.51l0.79,1.13l0.6,0.1l1.0,-1.4l0.8,1.26l-0.15,1.22l-0.9,1.48l0.22,1.0l-0.75,0.25l-0.33,-0.59l-0.49,-0.14l-0.9,0.89l-0.99,0.11l-0.83,-0.36l-0.29,0.99l-0.81,0.73l-0.57,-0.08l-0.73,-0.79l-0.54,0.06l-0.25,0.47l0.21,0.79l-1.58,0.48l-1.41,-1.13l-1.54,0.16l-0.46,0.75l-0.83,-1.04l-0.68,0.11l-2.23,-1.32l-1.04,-0.01l-0.64,-0.67l-0.13,-1.19l-0.49,-0.23l-0.48,0.33l-1.02,-0.36l-1.12,1.34l-3.67,-1.26l-0.44,-0.87l0.42,-0.51l0.84,0.21l0.39,-0.59l0.89,-0.46l0.07,-1.33l-1.14,-0.77l-0.63,0.07l-0.18,0.42l-1.9,-0.84l-0.64,-1.26l-2.42,-0.91l-0.98,0.41l-0.62,-0.34l-0.85,0.03l-1.13,-0.9l0.18,-0.56l1.13,-0.89l0.18,-2.67l-1.17,-2.34l-0.63,-0.51l-0.57,0.07l-1.24,1.02l-0.36,1.29l-1.64,0.17l-0.44,0.87l0.03,2.26l-1.95,1.24l-1.64,2.04l-1.04,0.42l-3.64,0.38l-1.98,-0.24l-0.74,-0.56l-1.6,-0.22l-0.57,0.31l-0.2,1.17l-3.95,2.3l-2.46,0.08l-2.36,0.7l-4.52,-0.72l-1.13,0.66l-0.42,-0.66l-1.03,-0.4l-0.99,0.46l-0.8,-0.06l-0.15,-0.53l-0.49,-0.28l-1.77,0.25l-2.42,-0.49l-0.27,0.61l0.33,0.46l-0.96,-0.57l-5.64,-0.97l-0.98,0.22l-1.61,-0.49l-1.27,0.6l-1.79,-0.57l0.13,-0.55l-0.32,-0.87l-1.54,-1.6l-0.33,-1.07l0.21,-1.24l-0.95,-2.35l0.51,-0.81l-0.15,-1.07l1.06,-1.01l0.32,-1.61l0.35,-0.3l-0.49,-1.01l0.3,-1.25l-0.2,-0.28l1.27,0.35l-0.11,-0.95l-2.26,-1.51l-0.3,-0.67l-1.49,-0.29l-0.78,-0.94l-1.12,-0.4l-3.35,-0.19l-0.29,-0.58l-0.83,-0.38l-1.01,0.57l-0.4,-0.07l-5.16,-2.72l-0.36,-0.87l-2.9,-2.59l-0.34,-0.9l0.7,-0.64l-0.02,-1.81l-1.35,-0.46l-0.43,-0.47ZM296.56,348.77l0.63,0.22l-0.45,-0.1l-0.19,-0.12ZM366.43,318.73l-0.64,-0.33l-0.41,-0.68l0.04,-1.63l1.15,1.7l-0.13,0.94ZM282.87,346.74l-0.62,-0.06l-0.07,-0.11l0.28,-0.07l0.41,0.24ZM375.09,341.57l0.15,-0.39l0.23,0.67l0.99,0.31l0.56,1.07l-0.52,0.08l-0.53,1.04l-0.26,-0.31l0.57,-0.88l-0.05,-0.43l-1.15,-1.16ZM370.58,212.41l0.63,-0.81l-0.25,-0.62l0.65,-1.25l1.74,-1.62l1.28,0.15l1.48,1.77l-0.02,2.98l0.67,1.48l-1.81,1.97l-2.25,0.64l-1.81,-0.94l-1.43,-1.88l1.13,-1.86ZM372.31,349.42l-0.69,-0.62l0.14,-0.26l0.41,-0.04l0.14,0.92ZM365.73,358.82l1.94,-1.29l0.43,-1.11l1.72,1.01l-0.26,2.28l-0.91,-0.23l-0.19,1.24l-2.73,-1.91ZM369.18,337.84l-0.03,-0.16l0.09,-0.51l-0.05,0.67ZM337.82,214.18l3.33,-14.86l4.92,2.08l0.83,0.69l0.52,-0.53l-0.01,-1.39l0.62,-0.25l-0.09,-0.68l0.49,-0.66l-0.15,-1.21l0.44,-0.26l-0.04,-0.72l-0.58,-0.34l-0.72,-1.28l-1.49,-0.97l0.19,-0.28l-0.28,-0.37l-1.02,-0.32l0.17,-1.39l-0.27,-0.41l-0.58,-0.18l-0.95,0.31l-0.1,-0.24l0.12,-0.51l1.89,-0.36l3.0,-2.09l-0.44,-0.87l0.4,-0.22l0.13,-0.66l-0.81,-1.27l-0.09,-0.89l-0.7,-0.39l0.04,-0.55l-0.83,-0.78l-0.79,0.02l1.18,-5.28l1.03,-0.03l0.84,-0.79l0.07,-0.44l-0.35,-0.41l0.3,-0.53l0.72,-0.25l0.05,-0.45l0.7,-0.4l0.77,-1.99l0.91,-0.57l0.33,-0.78l0.74,-0.49l0.74,0.03l0.54,0.4l0.98,-0.45l-0.22,1.63l1.01,0.5l-0.04,1.06l-0.74,0.83l-0.6,-0.1l-0.57,0.55l0.04,0.99l0.62,1.21l-0.62,0.59l0.16,1.74l-0.64,0.93l0.44,0.66l1.12,0.41l0.69,2.61l-0.87,0.53l-0.03,0.6l0.38,0.45l-1.58,0.69l-0.77,1.54l0.06,0.6l-0.65,0.89l0.43,0.58l3.42,0.05l0.8,1.47l-0.08,0.42l-0.97,0.79l-0.07,0.52l-0.72,0.11l-0.88,1.26l-0.45,0.83l0.12,0.99l0.67,0.27l0.49,-0.25l1.48,-1.92l1.96,-0.34l0.7,0.21l0.47,0.48l-0.35,1.03l0.36,1.12l-0.23,0.63l0.31,0.56l-0.13,2.25l0.32,0.54l0.6,-0.22l0.57,-2.72l1.25,-0.28l0.36,-0.61l-1.34,-0.99l0.58,-2.78l1.65,-1.78l1.33,0.24l2.88,2.18l0.61,1.29l0.46,1.92l-0.43,4.97l-0.94,1.77l-1.11,0.48l-0.57,0.8l-0.04,0.53l0.65,0.45l-0.78,0.99l0.13,1.24l-1.86,2.23l-0.44,0.99l0.28,0.91l-0.23,0.57l-0.69,0.17l-0.65,0.83l0.24,0.93l-4.44,0.4l-1.89,1.54l-1.09,-0.14l-1.52,-0.82l-0.69,-0.88l0.37,-2.12l-0.6,-1.0l-0.56,0.23l-0.2,1.4l-0.41,0.27l-0.57,-0.29l-0.45,0.3l-0.02,1.12l-0.37,0.42l-2.11,0.0l-0.5,-0.85l0.43,-0.31l-0.27,-1.67l-0.39,-0.58l-1.31,-0.64l-0.96,0.5l-0.65,1.08l-2.33,0.72l-1.36,1.53l-2.16,-0.53ZM353.07,252.53l-0.18,-0.64l-1.02,-0.65l-0.84,-1.21l-1.37,-0.46l3.4,-4.11l5.53,0.43l1.12,-0.43l1.11,0.01l1.15,0.48l1.47,2.13l0.1,0.62l1.03,0.62l0.77,1.33l-0.89,2.33l-0.41,2.7l-1.52,2.31l-0.12,0.8l-1.88,1.94l-0.41,1.43l-1.39,1.24l-0.29,-0.36l-0.77,0.15l-0.06,1.2l-0.11,-1.26l-2.04,-4.53l0.12,-0.68l-0.91,-0.66l0.22,-0.81l-0.61,-1.05l0.34,-0.68l-1.54,-2.22ZM356.38,131.25l0.61,-2.73l1.07,-4.77l0.81,1.78l0.66,0.28l0.31,0.67l0.28,1.9l-1.49,3.66l-1.82,0.06l-0.43,-0.84ZM354.22,140.9l0.72,-3.2l0.99,0.25l0.23,0.79l-0.87,1.71l-1.07,0.45ZM344.51,358.33l0.94,-0.21l1.34,0.38l0.66,0.56l0.64,1.22l-0.21,1.16l-1.07,0.09l-0.69,-0.57l-0.82,-0.81l-0.78,-1.83ZM343.45,246.05l0.34,-0.35l0.86,-0.03l1.16,0.72l-2.21,0.24l-0.15,-0.58ZM319.66,383.43l0.58,1.04l0.11,0.1l-0.52,-0.1l-0.16,-1.05ZM317.77,367.13l0.19,-0.56l0.63,-0.35l-0.4,1.1l-0.43,-0.19ZM317.48,374.25l-0.13,-0.78l0.25,-1.06l0.35,1.97l-0.46,-0.13ZM317.12,377.88l0.04,-0.85l0.65,-0.18l-0.58,1.35l-0.12,-0.32ZM314.41,374.19l0.57,0.24l-0.14,0.63l-0.37,0.19l-0.06,-1.06ZM311.1,365.02l0.9,-0.17l0.05,1.27l-0.95,-1.11ZM308.9,362.27l0.31,0.24l0.02,0.64l-0.44,-0.71l0.11,-0.16ZM305.06,360.24l0.09,-0.06l-0.03,0.05l-0.06,0.02ZM299.0,350.45l1.55,-0.48l0.33,0.64l-1.15,0.07l-0.73,-0.23ZM292.58,354.28l-0.15,-0.28l0.45,-0.29l-0.16,0.44l-0.15,0.13Z\",\n            name: \"Nunavut\"\n          },\n          \"CA-NS\": {\n            path: \"M806.14,740.09l0.6,-1.1l-0.19,-1.16l1.53,-2.49l0.42,-2.61l0.6,-1.53l-0.03,-2.56l0.54,-3.5l1.51,-3.01l0.15,-1.97l0.16,-0.35l1.13,0.17l0.58,-0.23l-0.36,1.59l1.07,0.72l1.38,-0.48l0.25,0.69l0.19,1.88l-0.37,0.37l0.03,0.59l0.78,0.69l-0.34,1.48l0.1,1.93l-0.48,4.15l0.66,0.61l-0.35,0.83l-0.42,0.47l-0.53,0.06l-0.41,0.74l-0.44,0.35l-0.86,0.06l-0.71,1.87l-1.26,1.0l-0.2,0.83l0.56,0.34l0.4,-0.18l-0.21,0.92l0.5,0.44l0.95,-0.7l0.24,0.03l-1.43,1.75l0.15,1.53l1.35,0.03l1.28,-1.57l0.61,-0.21l0.72,0.25l-0.26,0.86l-0.98,0.93l-0.57,0.09l-0.98,1.27l-1.15,-0.45l-1.0,1.26l-1.85,-1.48l-1.42,-2.29l-0.27,-1.03l-1.36,-1.87ZM816.61,744.13l1.05,-1.41l-0.51,-1.54l2.33,-3.96l0.31,-1.02l-0.19,-0.41l-0.45,0.02l-2.83,2.93l-0.59,-0.45l2.36,-3.35l0.82,-2.08l0.74,-0.69l-0.04,-0.59l-0.69,-0.2l-1.08,0.73l-0.44,1.08l0.12,-0.58l0.95,-1.72l0.31,-0.23l1.11,0.83l0.0,0.01l-0.5,1.38l0.14,0.46l0.77,-0.36l0.46,0.32l0.48,-0.32l-0.25,-1.23l0.25,-0.6l0.28,-0.06l-0.09,0.39l0.46,0.2l1.39,-0.32l0.44,0.58l0.8,-0.47l0.17,1.41l-0.68,0.84l0.12,0.42l0.59,0.46l1.08,-0.34l0.3,0.34l-1.47,1.09l-0.16,0.62l-1.5,0.75l-0.17,0.84l0.9,0.39l-0.87,0.89l-0.13,0.94l-1.5,1.69l-1.05,0.32l-1.77,1.89l-1.76,0.09ZM816.46,732.7l0.05,-0.34l0.15,-0.22l-0.19,0.56ZM816.79,731.83l0.24,-0.63l0.0,-0.0l-0.04,0.32l-0.2,0.32ZM812.99,739.44l0.88,-1.79l0.6,-0.25l0.0,1.22l-0.51,0.54l-0.97,0.27ZM759.65,789.33l0.16,-4.68l1.0,-2.32l1.2,-1.76l-0.25,-0.79l-0.76,-0.03l0.79,-1.21l0.55,1.16l1.15,-0.48l2.56,-4.02l-0.39,-0.25l-0.53,0.16l-2.38,2.22l8.34,-9.82l1.48,-1.36l2.68,-1.68l0.64,-0.83l0.18,-0.86l0.15,2.95l0.79,0.75l0.56,-0.3l0.09,-0.56l0.83,0.28l1.02,0.66l0.21,0.95l0.41,0.32l0.85,-0.63l-0.2,-1.37l-1.52,-0.96l0.48,-1.27l2.17,-1.72l0.87,-0.31l0.38,-0.71l0.77,-0.16l0.09,-0.31l2.0,-0.77l0.57,0.44l0.62,-0.38l0.08,-0.73l0.87,-0.87l-0.76,-0.39l-2.62,0.32l-2.84,0.85l-0.61,0.66l-0.49,-0.31l-1.16,0.39l-1.2,-0.1l-2.3,0.94l-1.0,0.8l-0.82,-0.25l-1.64,0.19l-1.2,0.97l-0.22,1.24l-1.05,-0.26l-0.99,0.29l0.05,-0.87l0.87,-0.88l-0.09,-0.5l1.3,-1.3l0.28,-0.94l1.72,-2.26l0.02,-1.13l0.39,-0.53l0.26,0.4l0.97,-0.59l0.19,-0.62l-0.26,-0.25l-0.04,-1.31l0.51,-1.57l1.15,-0.65l0.29,-0.58l1.43,0.15l1.08,0.9l0.83,0.12l0.3,0.65l0.75,-0.22l0.73,0.19l0.2,-0.77l1.23,-0.68l-0.11,1.13l1.96,-0.28l-0.19,0.41l0.35,0.35l1.32,0.28l0.39,-0.54l0.8,-0.03l1.26,-0.83l0.38,-0.58l-0.15,-0.29l4.41,-0.24l-0.95,0.78l-0.21,0.93l0.34,0.38l0.28,-0.17l0.75,0.36l0.21,-0.58l0.48,0.15l0.41,-0.34l-0.28,-0.68l0.28,-0.19l1.02,0.2l0.3,0.67l0.82,-0.21l1.04,-1.74l0.93,-0.59l1.93,-2.56l0.71,-1.41l1.1,2.31l0.51,0.48l2.23,0.56l1.34,-0.18l0.72,-1.54l0.48,-0.23l1.15,0.56l1.2,1.12l1.39,0.45l-0.06,0.51l-0.81,0.8l-0.41,0.03l-0.92,1.13l0.04,0.62l0.47,0.31l5.15,-1.32l0.05,1.13l-0.76,-0.45l-0.75,0.77l-1.09,0.18l-0.75,1.02l-0.03,0.9l-1.95,0.93l-1.75,0.09l0.05,0.82l0.49,0.37l-1.67,0.55l-0.41,1.09l-1.6,0.89l-0.18,1.04l-2.05,0.97l-0.63,0.9l-1.1,0.64l-0.16,0.64l-0.47,-0.39l-0.48,0.9l-0.61,0.33l-0.02,0.42l-2.39,1.6l-0.16,1.04l-0.99,0.14l-0.47,0.43l-0.41,-0.68l-1.07,0.28l-0.59,-0.19l-0.35,0.33l0.23,0.92l-0.47,0.47l-0.85,-0.13l0.17,1.15l-0.23,0.62l-0.81,0.12l0.04,-0.31l-0.57,-0.29l-0.81,0.54l0.56,0.97l-2.57,-1.19l-0.58,0.05l-0.2,0.6l0.63,0.75l1.0,0.32l1.01,2.07l-0.36,-0.1l-1.55,0.84l-0.83,-0.89l-1.51,0.95l-0.47,-1.54l0.14,-1.54l-0.33,-0.32l-2.22,1.84l0.21,1.14l0.74,0.7l-0.28,0.68l-0.39,-0.94l-0.88,-0.46l-0.75,0.3l-0.14,0.61l-0.71,-0.17l-0.42,0.24l0.33,1.73l-0.39,0.59l0.87,0.89l-0.35,0.59l0.25,0.46l-1.07,-0.03l0.05,0.5l1.06,0.58l-1.02,2.27l-1.11,0.2l-0.41,0.8l0.37,0.35l0.69,-0.04l-0.01,0.26l-1.54,0.73l-0.15,0.68l0.77,0.39l-0.57,0.78l-1.04,0.65l-0.13,0.86l0.52,0.57l-0.9,-0.21l-0.93,0.87l0.68,1.28l-0.79,-0.83l-0.46,0.02l-0.13,0.45l0.65,1.21l-0.27,-0.23l-1.28,0.61l-0.79,-0.88l-0.66,0.32l0.49,1.99l-0.34,-0.13l-0.39,-1.23l-0.48,0.02l-0.52,0.61l0.82,2.23l-0.19,0.69l-0.61,-0.3l-0.5,0.49l0.27,0.42l-0.09,0.81l-0.81,-0.86l-0.55,0.12l-0.8,1.34l-0.39,0.07l-0.33,-0.88l-0.54,-0.21l-0.38,-1.47l-0.63,-0.19l-0.98,-1.55l-0.47,-0.22l-0.91,-0.14l-0.32,0.25l-0.3,-0.4l-0.66,0.27l0.1,0.85l0.62,0.96l-0.76,-0.45l-0.53,0.1l-0.02,-0.99l-0.93,-0.59l-0.33,-2.18l-1.14,-1.44ZM815.34,751.71l-0.03,0.02l0.02,-0.1l0.01,0.08ZM814.13,746.52l0.43,-0.47l0.76,-0.29l-0.16,0.85l-1.03,-0.09Z\",\n            name: \"Nova Scotia\"\n          },\n          \"CA-BC\": {\n            path: \"M13.63,416.0l18.57,10.78l19.97,10.92l20.25,10.4l20.52,9.86l20.77,9.32l21.0,8.77l21.26,8.24l21.12,7.55l-37.33,108.91l0.0,0.84l0.61,0.53l-0.38,0.97l1.06,0.85l0.3,1.12l-1.39,-0.67l-0.62,0.14l0.03,1.15l-0.43,0.73l0.21,0.59l0.57,0.21l0.19,2.02l0.84,1.3l0.35,0.17l0.53,-0.25l0.98,0.72l0.76,0.05l-0.13,1.32l0.58,2.06l2.09,1.93l0.8,-0.25l0.46,-1.15l0.77,1.04l0.58,1.33l-0.59,0.93l0.97,0.98l-0.37,0.82l0.11,1.89l0.47,0.41l0.99,-0.09l0.34,1.0l-0.39,0.83l0.57,1.04l0.1,1.29l-0.75,0.67l0.47,2.99l-0.56,0.69l0.13,1.58l2.27,0.12l0.46,-0.24l0.44,-0.87l0.64,1.11l1.28,0.79l-0.19,0.8l-1.23,0.79l0.3,1.88l0.88,0.69l0.54,1.17l1.29,0.11l1.2,0.66l0.54,-0.1l-0.09,1.84l1.68,3.03l0.03,3.14l0.31,0.86l1.36,0.39l1.23,-1.23l0.58,0.0l0.08,2.89l0.77,0.86l0.09,0.87l0.49,0.56l-0.05,1.03l0.7,0.9l-0.38,1.12l0.14,1.48l0.93,0.66l0.11,0.73l0.87,0.66l-0.2,1.52l0.36,0.88l0.76,0.81l1.17,0.52l0.03,0.67l1.16,1.63l0.03,0.84l-0.77,0.41l-0.02,0.81l0.62,0.43l0.21,0.75l1.08,1.17l0.17,0.76l0.69,0.1l0.14,0.68l-0.43,0.58l0.68,2.09l0.58,0.31l0.91,-0.51l0.95,0.57l0.82,3.1l0.57,0.99l-0.49,4.19l0.35,1.34l-0.15,1.29l-0.5,0.22l-0.33,1.01l0.11,2.26l-1.05,1.89l-0.99,0.67l-0.26,0.71l0.45,0.95l1.24,0.51l-0.71,1.24l-0.02,1.23l0.9,1.34l0.56,2.72l1.65,0.84l0.45,0.63l-0.19,0.8l0.44,1.02l0.56,0.37l-0.22,0.27l-27.35,-7.82l-27.2,-8.56l-22.07,-7.54l-20.36,-7.43l-0.15,-0.39l-0.8,-0.35l0.21,-1.16l-0.6,-0.44l-1.81,0.1l-0.47,0.32l-0.12,-0.4l1.21,-0.59l0.34,-0.89l-1.81,-0.14l0.27,-0.72l0.53,0.32l0.3,-0.37l-0.62,-1.25l1.53,0.24l0.97,0.62l0.85,-0.09l0.77,-0.61l1.17,-2.04l-0.35,-0.56l-0.52,0.1l-0.39,0.88l-0.95,0.93l-0.73,-0.02l-2.26,-1.49l0.81,-0.83l0.52,-1.68l1.28,-1.89l0.77,-0.45l0.02,-0.73l-0.57,-0.2l-0.96,0.34l-0.64,1.13l-3.29,0.49l-0.35,1.52l-0.4,0.28l-2.22,-2.35l0.35,0.09l0.6,-0.57l0.23,-1.06l2.11,-0.04l1.12,-0.75l0.05,-0.46l-0.41,-0.2l-1.67,0.26l-1.17,-0.27l-0.59,-2.27l0.96,-0.94l0.39,-1.03l-0.25,-1.64l1.82,-0.18l1.09,-0.9l-0.39,-1.65l-1.48,-1.88l-0.67,0.31l0.24,1.15l0.69,0.8l0.18,0.72l-2.3,0.5l-0.61,1.32l-0.59,0.03l-0.7,0.73l-0.05,0.48l-0.99,0.51l-1.16,-0.38l-0.47,0.15l-1.25,-0.65l-0.63,-0.72l0.13,-0.64l-0.32,-1.0l-1.12,-1.86l0.42,0.2l0.32,-0.36l0.74,-1.86l1.0,-0.73l0.78,-1.13l0.03,-1.27l-0.42,-0.72l0.66,-0.64l1.06,0.45l1.62,-0.21l1.19,-0.55l0.37,-0.56l-0.53,-0.58l-1.92,0.55l-2.01,-0.55l-1.36,0.98l-0.8,0.21l-0.86,-0.52l0.32,-0.78l-0.13,-0.94l-0.31,-0.35l-0.54,0.21l0.31,-0.57l1.04,0.0l0.5,-0.55l0.71,-0.01l0.52,-0.47l0.7,-1.52l0.9,-1.07l-0.54,-1.17l1.94,-1.18l-0.12,-1.14l-0.81,-0.31l-1.32,1.2l-0.98,0.31l-0.12,1.24l0.33,0.57l-0.79,1.69l-2.82,1.23l-0.55,0.81l-0.42,0.11l0.16,-1.29l-0.25,-0.42l-0.88,0.25l0.2,-0.94l-0.42,-0.46l-1.2,0.93l-1.01,-0.17l1.36,-2.4l1.52,-0.77l0.06,-0.63l-0.27,-0.25l-2.03,0.51l-1.03,1.83l-0.73,0.39l-0.15,0.67l-0.43,0.25l-0.44,-0.76l0.35,-0.16l0.05,-0.62l-0.51,-0.46l-0.72,-0.2l-1.57,0.34l-1.87,-1.12l0.32,-0.73l2.46,0.25l0.57,-0.43l1.19,0.03l1.37,0.45l0.9,-0.85l0.82,-0.19l0.38,-0.6l-0.05,-1.03l0.94,0.18l1.31,-1.41l0.17,-2.17l-0.49,-1.27l-0.73,0.05l-0.14,0.4l-0.08,2.77l-1.67,0.34l-0.51,0.84l0.1,0.68l-1.26,0.7l-1.22,-0.44l-0.69,0.2l-0.41,-0.77l-2.04,-0.08l2.1,-0.61l0.26,-0.46l-0.72,-0.59l-0.93,-0.03l0.58,-1.2l-0.82,-0.57l0.97,-0.06l0.51,-0.79l-0.42,-0.46l-0.72,0.14l-1.89,-1.2l0.34,-1.92l-0.21,-0.53l-0.53,0.08l-0.59,0.69l-0.43,1.42l-0.53,0.35l-1.09,0.02l-1.26,-1.83l-1.03,0.28l-1.03,-0.44l-1.12,-1.04l-0.63,-0.09l-0.27,0.62l0.24,0.44l-0.35,-0.26l-0.23,-0.92l-0.6,-0.16l-0.73,-0.75l0.18,-0.81l-0.87,-0.64l1.18,-1.24l0.02,-0.47l-0.42,-0.45l-1.61,-0.27l-0.56,-1.45l0.22,-0.72l2.39,-0.07l1.79,1.27l1.94,0.48l1.27,-0.28l0.88,-1.35l-0.14,-0.43l-0.45,-0.02l-0.93,0.7l-1.16,0.1l-1.52,-0.85l-0.02,-0.89l-1.42,-0.1l-1.64,-0.71l1.26,0.01l1.14,-0.71l0.59,0.01l1.02,-0.91l0.43,-1.1l0.48,-0.22l1.69,0.22l2.83,0.98l3.66,2.02l1.21,-0.42l0.57,-0.77l-0.02,-1.8l-0.37,-0.36l-0.42,0.3l-0.36,1.43l-0.61,0.31l-3.57,-2.25l-1.84,-0.45l-0.7,-0.84l-0.79,0.4l0.26,-0.75l0.87,-0.15l0.93,-1.27l0.03,-0.56l-0.63,-0.27l-1.08,1.17l-0.74,0.01l-0.65,0.85l-1.13,-0.6l-0.81,0.22l0.07,0.61l0.78,0.73l-1.19,0.97l-0.01,0.66l-0.42,0.34l-0.3,-0.87l-0.76,-0.34l0.24,-0.89l-0.18,-1.6l1.21,-2.97l0.59,-0.66l0.81,-0.17l1.32,0.33l0.75,-1.05l1.21,-0.43l1.23,0.4l0.58,-0.17l0.26,-1.47l0.99,-0.36l1.17,0.12l1.46,-0.73l1.19,0.83l0.04,2.29l1.36,4.54l0.45,-0.23l0.46,-1.2l-0.26,-1.8l-0.88,-1.68l0.26,-1.89l0.72,-0.2l1.29,0.29l0.56,-0.4l-0.51,-0.96l-2.81,-0.06l-1.1,-0.71l-0.09,-0.5l0.44,-2.15l2.24,-0.84l0.99,-0.04l1.43,-1.41l0.28,-2.14l-0.81,-1.58l-0.65,0.29l-0.22,3.03l-0.98,0.61l-2.77,0.76l-0.68,0.64l-0.16,0.77l-2.05,0.08l-0.99,0.71l-2.28,0.14l0.49,-0.43l-0.46,-0.73l-1.92,1.47l-0.07,-1.06l0.98,-0.32l0.34,-0.46l-0.16,-1.5l0.77,-0.56l0.01,-0.74l0.57,-0.66l-0.35,-0.64l-1.85,-0.06l-1.04,0.34l-1.92,1.56l0.91,-1.04l0.47,-1.59l2.56,-2.56l0.76,-1.92l1.15,-0.09l0.32,-0.53l-0.19,-0.4l-0.77,-0.17l-0.3,-0.38l-2.19,1.52l-1.33,-1.01l-0.09,-1.12l0.94,-3.09l1.01,-1.4l-0.84,-0.43l-0.19,-1.93l-0.43,-0.19l-0.45,0.32l-0.66,-1.45l-0.01,-0.71l0.54,-0.39l0.2,-1.31l0.91,-0.63l-0.08,-0.66l-0.94,-0.13l0.11,-0.47l0.5,0.37l0.78,-0.2l-0.12,1.24l0.4,0.92l0.61,0.23l0.57,1.55l-0.23,0.75l0.41,0.43l0.51,-0.33l0.44,-1.04l1.38,-0.01l1.82,1.11l0.06,0.69l-0.69,0.76l-0.01,0.52l0.94,-0.15l0.34,0.67l-0.3,1.58l0.52,0.74l0.71,-0.13l-0.15,-1.33l0.33,-1.0l-0.62,-1.12l-0.37,-2.46l-1.72,-0.67l-0.55,-0.65l-0.51,-0.03l-0.67,0.57l-0.82,-0.23l-1.33,-3.84l0.95,-1.11l0.29,-1.09l0.41,-0.39l0.68,0.09l0.51,-0.48l1.48,1.12l0.49,-0.05l0.05,-1.0l-0.79,-0.39l-0.62,-0.84l1.48,-1.45l0.1,-0.72l-0.99,-0.1l-3.25,1.95l-0.57,-1.39l-0.8,0.05l-0.29,1.7l-0.47,-0.69l-0.45,0.22l-0.2,0.96l-2.69,1.13l-1.28,1.81l-0.16,1.0l-0.72,0.81l-1.64,-5.17l0.13,-1.57l-1.14,-2.66l-0.13,-0.95l0.31,-0.84l-0.66,-0.17l-0.12,-0.39l-0.02,-0.68l1.08,-2.11l0.75,-0.75l0.41,0.1l0.16,2.49l0.53,1.74l0.59,0.45l0.43,-1.42l-0.45,-1.17l-0.05,-2.35l0.91,0.01l1.75,1.57l1.64,-0.27l0.58,-0.39l-0.37,-0.7l-1.5,0.3l-1.83,-1.67l-3.38,-0.01l-0.21,-0.73l-0.68,-0.52l0.67,0.0l0.5,-0.5l-0.21,-0.46l0.8,-1.92l-0.16,-0.48l-0.5,0.07l-0.51,0.6l-0.69,0.02l-0.64,-0.71l0.52,-0.88l0.82,0.14l0.35,-0.52l-0.08,-1.1l0.72,-0.27l0.81,5.21l0.46,0.67l0.85,0.22l0.24,-0.48l-0.5,-0.59l-0.17,-0.94l0.7,-1.06l0.93,-0.09l0.32,-0.67l-0.55,-0.45l-0.75,0.04l-0.83,0.73l-0.5,-4.19l1.16,-0.05l0.95,1.09l0.34,1.33l1.09,0.78l0.67,-0.06l0.26,-0.34l-0.14,-0.42l-1.06,-0.71l-0.18,-1.2l-0.69,-1.14l0.83,-0.81l1.4,-0.59l0.1,-0.88l0.54,-0.4l0.23,-0.01l-0.41,0.33l0.27,0.72l2.0,-0.48l0.45,0.51l1.69,0.25l0.42,-0.72l-3.37,-1.69l3.35,-2.84l0.88,-0.25l2.11,-1.94l0.79,0.46l1.18,-0.33l0.19,-0.51l-0.4,-0.44l-0.76,0.18l-0.72,-0.46l-0.55,0.02l0.42,-3.12l-0.63,-0.43l-0.38,0.34l-0.63,2.46l-1.19,1.08l-0.25,0.6l0.17,0.34l-0.61,0.89l-4.38,3.54l0.19,-1.23l3.65,-2.46l0.01,-1.21l0.72,-2.25l0.03,-1.69l1.16,-2.12l-0.07,-1.07l3.08,-2.49l-0.27,-0.65l0.46,-1.28l0.06,-1.38l-0.37,-0.78l-1.14,-0.25l-1.35,-1.24l0.24,-1.83l-1.34,-1.53l-0.43,-1.97l-0.62,-0.93l-2.03,-1.66l-2.71,-5.17l-2.36,-1.11l0.5,-1.02l0.09,-1.44l0.61,-0.94l-1.5,-2.18l1.9,-2.25l-0.03,-0.55l-2.03,-1.95l1.76,-1.48l-0.68,-17.44l0.4,-2.73l-0.61,-4.17l0.83,-1.22l-0.82,-3.51l-0.3,-3.87l-2.29,-3.88l-0.25,-1.33l0.41,-1.01l-0.35,-0.6l0.5,-0.87l-0.0,-1.39l-0.96,-1.57l0.08,-2.0l-1.83,-1.91l0.0,-0.97l0.57,-0.96l-0.39,-0.8l0.97,-0.53l0.86,-1.58l-1.69,-5.99l-0.52,-0.45l-4.82,0.06l-3.19,-0.8l-1.16,0.04l-0.33,0.59l0.29,1.15l-0.97,0.61l-0.87,-0.59l-0.65,0.07l-1.58,2.84l-1.77,1.29l-2.42,-0.92l-5.25,0.52l-2.15,0.6l0.9,-1.15l1.29,-4.82l-3.3,-13.32l0.53,-2.9l-1.35,-2.31ZM73.47,652.52l0.29,0.56l-0.5,0.41l0.15,-0.35l0.07,-0.62ZM65.69,639.61l-0.05,0.24l-0.09,0.16l-0.03,0.01l0.17,-0.41ZM47.11,622.29l0.58,0.56l0.35,0.24l-0.42,0.17l-0.51,-0.97ZM45.72,609.76l-0.16,0.0l-0.36,-0.19l0.3,0.13l0.23,0.05ZM50.07,591.83l-0.48,0.83l0.04,0.6l-0.78,0.64l0.16,-1.83l0.64,-0.61l0.4,0.37ZM46.52,592.11l-0.73,0.75l-0.66,0.39l0.64,-1.17l0.75,0.03ZM51.62,599.75l0.12,-0.02l0.32,0.0l-0.13,0.19l-0.3,-0.17ZM56.1,626.07l-1.59,-0.43l-1.14,0.16l-0.32,-0.43l0.61,-0.51l2.44,1.22ZM55.38,630.91l-0.22,-0.02l-0.62,-0.24l0.1,0.01l0.73,0.25ZM72.83,659.99l-0.63,-0.33l-0.52,-1.02l-0.28,-2.05l0.99,-1.2l0.28,0.06l0.38,2.07l-0.22,2.46ZM77.14,661.77l0.07,-0.32l0.41,-0.02l0.04,0.63l-0.52,-0.29ZM76.5,664.01l0.11,-0.16l0.39,-0.19l-0.22,0.27l-0.28,0.08ZM71.52,674.1l-0.21,-0.6l0.4,-0.58l-0.16,-0.8l0.09,-0.03l0.54,1.27l-0.43,-0.06l-0.24,0.8ZM70.39,655.37l-0.06,-0.38l0.7,-0.3l-0.51,0.61l-0.13,0.07ZM32.85,620.93l0.68,-0.17l0.02,-0.64l-0.76,-0.43l0.22,-1.3l2.37,-0.03l0.56,0.28l0.8,-0.21l1.61,0.7l3.39,3.27l-0.22,0.7l0.2,0.9l0.6,-0.15l1.66,2.64l1.83,1.44l0.03,0.48l1.01,0.5l0.02,0.63l1.12,0.19l1.45,1.91l0.75,0.06l0.74,0.68l1.02,0.21l1.66,1.03l1.93,2.25l1.25,0.68l0.78,0.91l1.79,0.49l0.86,0.93l-0.31,3.68l0.62,1.55l-0.05,2.74l1.84,4.7l-0.04,0.28l-0.93,-0.48l-0.43,0.57l0.38,1.07l0.32,3.28l0.82,0.58l1.32,2.19l3.72,2.74l-0.4,0.16l-0.02,0.74l2.04,1.19l-0.28,0.35l0.02,1.26l1.09,0.83l0.1,1.41l-0.7,-0.1l-0.38,0.64l1.57,3.71l-0.33,0.62l-0.81,0.32l0.85,1.83l-0.4,0.62l0.04,0.77l-0.62,0.94l0.44,0.45l1.05,-0.34l0.71,-1.07l-0.07,3.71l-0.4,0.04l-0.51,-0.91l-0.52,-0.17l-2.12,1.49l-0.76,-0.26l-1.02,-1.27l-1.22,-0.57l-4.51,-4.68l0.34,-0.65l-0.2,-0.23l-0.58,-0.29l-0.68,0.18l-1.54,-1.14l-1.15,-1.88l-2.45,-2.57l-0.31,-1.19l1.25,-0.56l0.85,0.03l0.53,-0.84l1.63,-0.27l1.28,-0.98l1.13,-1.58l0.3,-1.62l-0.53,-0.48l-0.6,0.5l-0.62,1.63l-1.35,1.41l-1.99,-0.34l-0.65,-0.59l-1.1,0.36l-0.45,-0.34l0.86,-0.46l-0.95,-1.1l-2.45,1.38l-0.88,-1.16l-0.73,-2.0l-0.55,-0.46l2.18,-0.5l0.91,-0.99l-0.46,-0.57l-1.28,0.35l0.61,-1.06l-0.55,-0.56l0.9,-1.32l-0.21,-0.54l-0.44,-0.0l-1.12,1.18l-0.61,-0.19l-0.84,0.41l-0.13,-0.38l1.04,-0.37l1.26,-1.45l0.06,-0.62l-0.7,-0.23l-1.4,1.27l-0.07,-0.69l0.65,-0.95l-0.29,-0.52l-1.77,0.02l-0.03,-0.74l-0.47,-0.28l-0.8,1.05l-0.81,-2.22l-1.16,0.39l-0.16,0.81l-0.28,-0.45l1.23,-2.55l1.21,-0.2l1.13,0.59l2.92,0.63l0.42,-0.31l-0.06,-0.7l-1.2,-0.58l-1.67,-0.08l-0.98,-0.86l1.24,-1.08l-0.63,-1.0l-0.61,0.12l-0.58,0.93l-0.49,-0.08l0.63,-3.12l-0.28,-0.49l-0.71,0.06l-0.6,-2.02l-0.77,0.21l-0.23,-0.72l-0.45,0.1l-0.81,1.52l-1.65,-0.66l-0.32,-1.71l0.85,-0.49l0.55,-0.81l1.06,-0.3l0.4,-1.05l-0.59,-0.35l-1.01,0.48l-0.47,-1.23l-0.55,-0.1l-0.66,1.5l-0.63,0.06l-0.46,-0.99l0.8,-0.46l-0.23,-0.43l0.38,-0.76l-0.33,-0.31l-2.03,0.4l0.58,-0.85l-0.33,-0.3l-1.14,0.05l-1.37,0.68l-0.68,-0.62l2.5,-1.18l0.04,-0.56l-0.65,-0.37l0.41,-0.24l0.12,-0.65l-0.63,-0.79l-0.87,-0.23l1.07,-1.19l1.81,0.27l1.47,0.66l0.35,2.01l0.36,0.42l0.68,-0.27l-0.22,-2.73l1.49,-0.17l0.6,-0.54l-0.27,-0.6l-1.46,-0.13l-0.39,-0.67l-2.99,-1.74l-0.22,0.68l0.38,0.79l1.9,1.18l-2.18,-0.17l-0.43,-0.36l-1.45,-0.06l-0.38,-0.57l-0.68,0.11l-0.69,-1.33l0.08,-1.33l-0.53,-0.59ZM42.94,638.71l0.18,0.66l-0.39,0.25l0.21,-0.91ZM48.37,658.01l-0.18,-0.13l-0.04,-0.06l0.11,0.01l0.12,0.19ZM65.71,652.19l0.14,-0.21l0.29,0.73l1.84,1.59l0.58,2.49l-1.31,-1.65l-0.19,-1.3l-1.35,-1.65ZM68.25,643.72l-0.05,0.24l-0.39,0.41l0.11,-0.31l0.33,-0.33ZM67.21,657.84l0.25,0.09l0.46,0.37l-0.41,-0.15l-0.3,-0.32ZM65.77,642.5l0.43,-0.25l0.47,0.39l-0.27,0.67l-0.55,-0.11l-0.08,-0.69ZM66.61,644.25l0.09,0.18l-0.5,0.24l-0.01,-0.2l0.41,-0.22ZM64.09,645.3l-0.21,-0.95l0.93,-0.53l-0.29,1.49l-0.43,-0.01ZM63.71,655.75l-0.0,-0.0l0.0,0.0l-0.0,0.0ZM61.57,639.47l0.04,-0.17l0.14,0.12l-0.07,0.05l-0.11,0.0ZM62.7,639.33l0.42,-0.95l0.59,0.96l0.17,3.08l-0.26,-2.27l-0.92,-0.82ZM61.44,643.0l-0.21,-0.5l0.24,-1.24l0.33,-0.58l0.41,-0.02l0.33,1.46l-1.11,0.88ZM60.76,637.89l0.47,-0.38l1.13,-0.03l-0.83,0.65l-0.77,-0.24ZM59.74,636.88l0.18,-0.02l0.48,0.11l-0.61,-0.06l-0.05,-0.04ZM56.9,635.18l0.86,0.09l0.09,0.38l-0.33,-0.07l-0.61,-0.4ZM47.25,600.57l1.72,-2.5l0.8,-0.67l0.72,-0.33l0.86,0.23l1.96,-0.24l1.42,-0.89l1.65,0.05l-0.51,1.31l-4.2,0.56l-1.27,0.61l-1.38,1.32l-0.25,0.68l-1.53,-0.13ZM51.46,628.21l0.59,-0.54l2.0,-0.54l1.2,0.15l0.11,0.27l0.04,0.85l-0.66,0.22l-0.62,0.73l-1.4,-0.87l-0.51,0.21l-0.75,-0.48ZM51.4,630.8l1.84,0.02l0.23,0.32l-0.39,0.14l-1.68,-0.47ZM49.37,624.62l0.01,0.01l0.0,0.06l-0.02,-0.07ZM50.29,625.12l0.07,-0.07l0.64,0.3l-0.56,-0.01l-0.15,-0.22ZM49.87,623.87l0.03,0.01l0.01,0.0l-0.01,0.0l-0.03,-0.01ZM48.61,586.85l0.14,-1.17l0.6,0.19l-0.53,0.81l-0.2,0.17ZM45.49,570.28l0.29,-0.57l0.16,-0.22l-0.2,0.65l-0.25,0.13ZM46.01,569.39l1.12,-1.94l1.14,-0.24l1.27,0.43l-0.72,1.13l-0.97,-0.27l-1.84,0.9ZM48.58,656.68l-0.36,-0.84l0.5,-0.17l0.3,0.29l-0.44,0.72ZM46.18,597.25l0.63,-0.09l0.89,0.46l-0.56,0.43l-0.94,-0.3l-0.02,-0.5ZM46.94,596.03l1.01,-0.32l-0.03,-0.58l-0.46,-0.3l0.72,0.24l-0.14,1.53l-1.1,-0.57ZM44.61,591.15l1.02,-0.72l0.85,-3.1l1.13,-2.06l-0.16,1.5l-1.04,3.3l-0.66,0.74l-1.14,0.33ZM41.34,582.69l0.24,-0.26l-0.19,-1.84l0.67,0.54l0.48,-0.46l-0.11,-0.42l1.76,-1.19l1.07,-0.04l0.41,-0.42l-0.98,-2.79l-0.6,0.02l1.1,-2.33l1.04,0.82l1.06,2.78l0.64,0.6l-0.19,2.48l-0.45,1.43l-2.7,3.9l-0.21,0.8l-0.83,-0.37l0.76,-1.87l2.26,-2.34l0.42,-0.85l-0.14,-0.58l-0.73,-0.14l-0.33,0.74l-0.59,-0.23l-2.15,3.48l-0.91,0.15l-0.83,-1.63ZM44.7,586.19l0.0,0.03l-0.02,-0.02l0.02,-0.01ZM43.79,576.47l0.01,0.55l0.41,0.22l0.25,0.72l-2.45,1.26l-0.46,-0.61l0.42,-1.1l0.58,-0.58l0.33,0.23l0.91,-0.68ZM43.19,586.9l1.52,0.5l-0.57,2.32l-0.91,-1.6l-0.04,-1.22ZM43.67,542.2l-0.02,-0.54l3.49,-1.73l-0.29,0.57l-1.88,1.35l-1.29,0.35ZM47.09,655.52l-0.0,-0.0l0.0,0.0l-0.0,0.0ZM45.06,572.22l0.01,-0.26l1.32,-0.96l0.54,-0.79l-0.02,2.09l-0.45,0.54l-0.48,-0.44l-0.92,-0.18ZM45.54,652.69l0.48,-1.03l0.67,0.05l-0.21,1.74l-0.94,-0.76ZM42.91,600.73l0.86,-0.48l0.0,-0.68l1.03,-0.85l1.62,0.26l-0.41,0.91l-1.8,1.9l-0.26,1.2l-0.45,-0.18l0.48,-1.52l-0.25,-0.39l-0.83,-0.19ZM44.17,597.56l0.09,-1.02l1.12,-0.67l-0.62,1.32l-0.6,0.37ZM42.93,594.98l-0.27,-0.29l0.66,-0.51l1.36,0.6l-0.74,0.66l-1.01,-0.46ZM40.85,642.26l1.08,-0.1l0.35,-0.5l-0.76,-0.86l1.66,-0.07l0.6,0.8l-0.16,1.46l-0.84,2.36l-1.12,-1.08l-0.81,-1.99ZM41.8,608.09l0.21,-2.76l1.49,-0.67l-0.54,4.43l-0.27,0.14l-0.31,-0.88l-0.58,-0.25ZM41.66,575.26l-0.17,-0.45l0.43,-0.95l1.15,-0.67l0.48,-0.66l-0.96,3.17l-0.92,-0.42ZM41.46,591.43l0.36,-2.24l0.32,-0.39l0.56,0.41l-1.24,2.22ZM41.74,542.16l0.92,-0.2l0.04,0.0l-0.38,0.77l-0.43,-0.06l-0.15,-0.52ZM37.53,560.61l0.55,-1.25l-0.44,-0.75l0.81,-0.37l1.97,4.36l0.42,3.01l0.52,1.5l-0.36,-0.15l-0.56,0.32l0.21,0.68l1.21,0.77l0.49,2.16l-1.85,-0.28l-0.47,1.41l-0.33,-0.08l0.08,-2.41l-0.67,-0.3l-0.01,-0.77l-0.39,-0.29l0.51,-1.15l-0.55,-0.61l0.65,-1.04l-0.07,-1.15l0.49,0.07l0.29,-0.54l-0.67,-0.96l-1.34,-0.25l0.25,-1.11l-0.75,-0.82ZM38.34,563.69l-0.21,0.15l-0.18,-0.06l0.16,-0.11l0.23,0.02ZM40.27,619.3l0.43,0.03l0.07,0.55l-0.36,-0.48l-0.14,-0.1ZM40.3,551.24l0.12,-0.25l0.34,-0.21l-0.2,0.34l-0.26,0.12ZM39.08,583.26l0.32,-0.4l-0.37,-1.6l0.38,-0.35l1.34,4.3l-0.73,1.53l0.04,-0.56l-0.52,-0.33l-0.24,-0.74l0.25,-0.48l-0.48,-1.36ZM40.19,553.88l0.01,-0.26l0.12,-0.15l0.17,0.38l-0.3,0.03ZM39.62,574.23l-0.2,-0.65l0.25,-0.22l0.56,2.86l-0.15,0.8l-0.46,-2.8ZM39.02,635.94l0.02,-0.04l0.01,0.01l0.01,0.02l-0.04,0.01ZM36.21,544.7l1.15,-1.7l0.93,0.78l-0.43,0.41l-1.65,0.51ZM33.6,556.26l0.03,-0.04l0.04,0.11l-0.07,-0.07ZM35.18,554.73l1.69,-0.53l1.0,0.03l0.49,1.68l-0.08,0.84l-1.9,1.13l-0.24,-0.64l0.9,-0.73l1.05,-0.05l0.12,-0.89l-1.57,-0.46l-0.97,1.11l-0.49,-1.49ZM37.4,573.38l0.12,0.1l0.17,0.59l-0.22,-0.3l-0.08,-0.39ZM36.87,545.99l0.21,-0.1l0.08,0.57l-0.17,-0.08l-0.13,-0.39ZM33.01,562.11l0.45,-0.71l0.44,0.35l2.97,4.84l0.38,1.23l0.13,3.3l-0.25,0.6l-0.43,-0.49l-0.68,0.22l-0.32,-0.23l-0.16,-1.77l-0.4,-0.51l0.19,-1.05l-0.74,-1.58l-0.88,-0.66l-0.14,-1.69l0.83,0.06l0.05,-0.47l-0.38,-0.48l-0.81,-0.17l-0.26,-0.79ZM35.28,560.82l1.21,-0.39l-0.0,0.61l0.71,0.77l-0.5,1.33l-1.33,-1.39l-0.08,-0.93ZM35.19,550.83l0.11,-0.11l0.25,0.66l0.06,0.42l-0.02,0.03l-0.4,-0.99ZM34.15,557.75l0.07,-0.0l0.18,0.16l-0.1,-0.01l-0.15,-0.16ZM9.84,550.6l0.56,-0.73l-0.34,-1.08l0.55,-0.31l-0.19,-0.75l0.35,-0.76l-0.16,-0.44l-0.84,-0.46l0.61,-0.4l-0.14,-1.49l1.11,-1.19l1.07,-0.61l0.26,-1.37l0.58,-0.41l0.48,0.21l0.85,1.24l1.68,0.51l0.52,0.74l-0.59,1.0l-1.51,0.56l-0.15,0.93l0.45,0.24l1.2,-0.21l0.91,-0.87l1.59,-0.25l0.82,0.23l-0.08,1.47l0.46,0.65l-0.55,1.2l-0.03,0.89l-1.04,0.24l-0.77,0.6l-1.16,-0.38l-1.19,0.26l-1.88,-0.55l-0.69,0.16l-0.22,0.72l0.48,0.25l-0.34,0.68l0.37,0.25l0.64,-0.2l0.41,0.47l-0.58,0.53l0.12,0.66l1.16,-0.18l1.19,0.41l0.59,-0.22l-0.01,-0.33l0.42,0.39l1.12,-0.49l0.42,-0.55l0.03,-0.95l2.06,-1.36l0.52,-2.22l1.91,0.69l2.51,-0.26l-1.47,1.94l-2.71,1.83l-1.05,1.61l-1.12,1.05l-0.97,1.7l-0.98,2.73l-1.3,1.07l-2.45,-0.68l-1.45,0.19l-0.26,0.35l-0.76,-0.09l0.12,-0.64l-0.62,-0.26l-0.03,-1.19l-0.55,-0.7l0.58,-0.16l0.29,0.34l0.67,-0.29l0.49,1.19l0.47,-0.1l0.52,-0.81l-0.54,-1.31l0.03,-0.74l-1.03,-0.96l0.24,-0.95l-0.5,-0.14l-0.15,-0.89l-0.81,0.17l-0.01,-0.71l-0.41,-0.21l0.23,-0.49ZM9.85,555.26l-0.19,-0.06l0.1,-0.07l0.09,0.13ZM9.44,560.12l0.24,-0.21l1.31,0.75l0.85,-0.12l2.31,1.14l2.04,-0.47l1.05,0.28l-0.5,0.93l0.59,1.0l0.25,1.28l-1.54,-1.24l-1.76,-0.62l-0.57,0.44l0.37,0.62l-0.2,0.95l0.68,0.28l0.86,-0.5l1.49,1.66l-0.45,0.79l-0.76,0.28l-0.9,-0.41l-0.18,-1.12l-0.63,-0.6l-0.48,-0.02l-0.27,0.61l-0.8,0.34l0.23,0.56l0.9,0.22l-0.5,0.59l0.23,0.86l-0.5,0.27l0.18,0.46l-0.4,0.34l0.15,0.65l0.73,0.48l-0.01,0.77l-0.39,0.59l0.2,0.99l-0.33,0.71l0.48,0.81l0.85,0.61l0.26,0.91l-0.47,0.44l-0.27,-0.82l-0.63,-0.34l-0.04,-0.94l-1.42,-2.66l0.04,-1.57l-0.69,-1.7l0.25,0.6l0.93,0.52l0.5,-1.36l-0.8,-2.18l-0.42,-0.18l-0.44,1.1l-0.51,0.25l-0.27,-1.27l0.33,-0.73l-0.53,-1.08l0.47,0.02l0.37,0.75l0.75,0.24l1.15,-1.14l0.01,-0.46l-0.77,-0.42l-0.27,-0.67l-1.12,-0.88l-1.25,-0.42l0.01,-0.97ZM13.9,576.84l0.45,1.27l-0.16,1.27l0.48,0.48l-0.35,0.26l-0.21,-0.49l-0.51,0.1l0.0,-1.11l-0.43,-1.2l0.19,-0.51l0.54,-0.07ZM15.24,580.53l0.03,0.01l-0.01,0.03l-0.01,-0.04ZM15.34,580.96l0.09,0.21l-0.08,0.07l0.01,-0.07l-0.02,-0.2ZM16.25,581.78l0.28,0.15l0.16,-0.01l-0.23,0.19l-0.21,-0.33ZM15.76,580.3l0.02,-0.36l0.45,-0.11l0.18,0.59l-0.65,-0.13ZM13.22,576.78l-0.13,-0.08l0.01,-0.05l0.07,0.08l0.04,0.06ZM14.76,571.47l0.03,0.04l0.11,0.01l-0.16,0.04l0.02,-0.08ZM15.47,571.73l0.28,0.02l0.58,-0.26l-0.53,0.92l-0.33,-0.67ZM15.38,583.56l0.03,-0.12l0.17,-0.25l0.1,0.28l-0.3,0.09Z\",\n            name: \"British Columbia\"\n          },\n          \"CA-SK\": {\n            path: \"M225.69,715.55l44.18,-197.52l18.32,3.88l18.79,3.56l18.86,3.14l18.53,2.67l-10.31,77.69l-4.77,62.93l-4.14,60.98l-24.87,-3.43l-25.58,-4.15l-25.48,-4.77l-23.53,-4.98Z\",\n            name: \"Saskatchewan\"\n          },\n          \"CA-QC\": {\n            path: \"M567.62,485.44l0.69,-0.35l1.22,-1.38l0.77,-0.25l0.36,-0.96l0.97,-0.76l0.27,-0.74l0.58,0.53l2.0,-0.0l0.62,0.3l1.01,-0.12l0.29,-0.35l0.52,0.33l1.36,0.02l1.33,0.78l4.43,0.81l0.54,0.69l1.41,-0.28l1.21,0.56l1.62,0.15l-2.04,2.18l-0.04,0.45l0.41,0.2l0.89,-0.29l1.91,-1.82l0.65,-1.14l1.15,-0.5l1.34,0.24l0.05,0.73l0.58,0.36l0.59,-0.85l0.34,-0.05l1.02,0.44l1.5,1.4l2.15,0.56l0.33,-0.61l-1.98,-1.25l0.01,-0.69l2.64,-0.51l0.86,-0.91l0.26,-0.75l0.94,-0.12l1.32,-1.11l0.87,-2.05l1.31,-0.53l1.15,1.47l1.19,0.35l0.52,-0.22l0.64,0.65l0.96,0.14l0.29,0.88l1.68,1.33l1.17,0.26l-0.17,0.57l0.4,0.22l1.41,-0.03l0.47,-0.47l-0.15,-0.37l0.81,0.4l-0.2,0.61l0.51,0.53l0.3,1.1l-0.56,0.47l0.08,1.04l-0.66,1.38l0.44,0.57l0.83,-0.56l0.79,0.64l0.53,-0.47l-0.63,-1.88l3.32,0.52l0.44,0.74l-0.33,0.83l0.18,0.7l0.58,0.3l0.9,-0.37l0.72,0.84l-0.4,1.12l-1.28,-0.01l-0.5,0.49l-0.18,0.9l0.26,0.43l0.87,-0.75l1.25,-0.02l1.04,-0.53l0.24,-1.94l1.99,0.45l0.69,0.44l0.2,0.37l-0.4,0.55l-1.78,0.57l-0.14,0.57l0.97,0.88l-0.76,0.45l-0.18,0.55l0.32,0.31l1.45,0.09l-0.94,0.39l0.28,0.79l1.22,0.1l-0.28,0.74l1.22,0.54l-0.03,0.8l0.66,0.28l0.18,0.79l0.8,-0.09l0.33,-0.64l1.12,0.98l0.99,-0.79l0.6,0.52l1.4,-0.43l0.74,0.15l0.5,0.74l0.71,-0.18l0.81,0.24l0.43,-0.47l0.47,0.74l1.44,0.04l0.35,-0.56l0.58,0.08l0.35,-0.57l-0.15,-0.4l0.41,0.03l0.32,-0.57l0.55,0.26l0.57,-0.38l0.07,1.05l0.81,0.83l0.16,0.92l-0.39,0.69l2.73,1.17l0.45,-0.16l0.4,-0.75l0.08,-0.41l-0.34,-0.21l0.4,-0.68l0.66,0.54l0.86,-0.68l-0.68,-2.21l0.06,-0.99l0.33,-0.34l1.51,2.44l0.52,0.3l0.4,1.74l-1.41,1.11l-1.13,1.65l0.92,2.18l-1.1,0.78l-0.09,0.74l0.87,0.87l0.02,0.89l0.62,0.66l-0.12,1.26l1.77,1.39l-0.18,0.58l0.53,0.46l0.08,1.44l-0.54,0.35l-0.99,-0.08l-0.3,0.57l0.18,0.81l-4.27,0.38l-0.4,0.62l-1.76,0.56l-0.74,-0.34l-3.44,-0.33l-0.61,0.35l-0.13,0.45l5.04,1.01l3.25,-0.87l1.86,0.27l2.59,-0.97l-0.3,0.59l0.22,0.42l1.77,0.38l0.01,1.39l0.52,0.47l-0.55,0.91l0.16,0.57l1.33,0.37l-1.61,2.91l0.06,0.7l1.1,0.62l0.39,1.15l-0.82,0.74l0.18,0.82l0.46,0.28l1.17,-0.26l1.62,-1.44l0.55,0.66l0.56,-0.01l0.34,-0.36l-0.03,0.58l0.45,0.63l-0.8,-0.28l-0.46,0.51l-0.53,0.06l-0.81,1.55l0.26,1.09l0.79,0.46l-0.25,0.37l1.14,2.89l-0.58,0.4l0.05,1.35l-0.49,0.33l-0.49,-0.84l0.22,-0.95l-0.66,-1.13l-0.57,-0.43l-0.48,0.12l-0.91,-1.17l-0.58,0.12l0.06,2.25l0.87,0.28l0.21,0.84l-0.57,-0.02l-0.26,0.58l0.23,0.42l-0.29,0.25l-2.52,1.17l-0.21,0.87l0.94,-0.12l1.69,0.39l0.53,-0.37l0.36,0.88l0.63,0.06l0.18,0.98l1.09,0.56l0.4,-0.44l0.42,-1.7l0.54,-0.43l0.13,-1.06l1.01,-0.85l0.68,-1.61l0.85,-0.69l2.19,-0.57l0.33,0.32l0.95,-0.15l0.89,-0.97l1.52,0.08l1.32,0.78l0.88,0.01l0.51,0.48l0.04,1.21l0.72,0.68l0.12,1.31l0.33,0.36l0.51,-0.0l0.16,0.94l0.7,0.12l0.37,1.11l-0.21,3.72l0.23,2.19l-1.06,1.95l-1.79,0.76l-2.23,1.57l-0.7,1.09l-0.84,0.55l-1.72,2.92l0.14,0.52l0.53,-0.1l2.0,-2.81l1.3,-1.2l4.27,-2.54l0.58,-0.65l0.7,-1.85l-0.28,-1.57l0.36,-0.98l-0.29,-4.95l1.07,-0.41l0.69,0.21l0.1,1.64l1.01,1.56l-0.09,0.85l-1.33,2.38l-0.05,1.72l0.8,0.14l0.86,-1.54l0.16,-1.47l0.76,-0.94l0.25,-1.37l0.18,0.62l0.59,-0.02l0.28,0.44l-0.08,1.85l0.62,1.26l-0.06,2.52l0.55,0.49l0.46,-0.09l0.17,-0.53l-0.29,-0.92l0.35,-1.3l-0.49,-1.15l0.31,-1.98l0.61,-1.14l0.91,-0.3l0.35,-0.94l0.9,-0.54l0.29,-0.59l0.5,0.12l0.47,-0.31l0.04,-1.07l0.39,-0.47l0.2,-1.13l0.04,0.46l1.0,0.7l0.33,-0.34l0.21,-1.22l1.61,-0.49l-0.07,-0.59l-0.37,-0.26l-0.06,-2.48l0.18,-0.83l0.73,-0.52l-0.43,-1.82l0.35,-0.31l2.75,1.46l0.75,1.14l1.4,0.34l-0.27,1.87l0.65,1.73l-0.65,1.08l0.58,0.91l0.6,-0.1l0.1,-1.07l0.51,-0.52l0.2,-1.18l-0.72,-0.62l0.36,-1.47l0.51,-0.25l-0.14,-0.64l-1.71,-1.57l-0.68,-0.02l-0.34,-0.94l-0.56,-0.26l0.14,-0.8l1.69,-0.26l0.57,-0.67l-0.23,-0.75l-1.62,-0.02l0.72,-0.57l0.04,-0.9l1.36,0.75l0.56,-0.32l-0.22,-0.92l-0.88,-0.47l0.13,-0.44l0.74,0.42l1.38,0.14l0.2,-0.65l-1.0,-0.55l1.84,-0.07l0.57,-0.69l-0.61,-0.52l-0.82,0.16l-1.08,-0.38l-0.63,0.1l-0.23,0.69l-0.95,-1.14l-0.01,-0.81l0.84,0.46l0.2,-0.45l-0.24,-0.65l0.85,-0.88l-1.22,-1.3l1.63,1.03l0.55,-0.07l0.1,-0.59l-1.2,-1.2l-0.05,-0.28l0.48,-0.3l-0.16,-0.44l-0.91,-0.42l0.54,-0.42l1.03,-0.08l2.03,1.08l1.18,-0.2l-0.25,-0.68l-0.92,-0.24l-1.33,-0.96l-2.27,-0.15l-2.07,-3.34l1.18,-2.17l2.75,0.77l0.74,-0.15l0.3,-0.5l-0.46,-0.43l-0.62,0.05l-1.47,-0.61l0.56,-0.4l-0.37,-1.02l0.63,-0.24l0.02,-0.27l-0.36,-0.54l0.15,-0.35l-0.71,-0.61l0.57,-0.58l0.06,-0.53l-0.34,-0.44l0.35,-0.19l0.07,-1.44l0.58,-0.41l0.89,0.4l0.89,-0.34l0.39,0.53l-1.02,0.44l0.27,0.84l-0.4,0.38l-0.84,-0.14l-0.37,0.57l1.18,1.74l1.8,0.19l-0.78,0.63l0.2,0.82l-0.36,0.51l0.87,2.23l-0.75,0.93l0.47,2.03l2.65,1.87l0.66,-0.24l1.57,-1.91l0.5,0.0l-1.08,1.6l0.23,0.51l-0.15,0.85l0.38,0.4l-0.08,0.78l0.52,0.83l0.04,1.04l1.29,1.97l1.23,0.09l0.68,0.63l-0.81,0.42l-2.04,-0.22l-0.84,-0.51l-0.77,0.2l-0.59,0.81l-0.17,0.88l0.35,0.78l-0.07,0.91l1.07,0.25l0.82,-0.83l1.66,0.6l2.33,-0.62l0.77,1.65l1.34,0.35l0.65,-0.29l0.91,-1.59l1.27,-0.51l0.48,-1.09l1.59,0.27l1.03,0.92l-0.89,0.81l-2.37,0.8l-1.68,1.44l0.04,1.65l0.55,0.89l0.98,0.39l1.01,-0.96l0.71,0.98l-0.14,0.45l-1.12,0.52l-0.29,1.21l-0.96,0.91l0.08,2.13l-1.14,0.87l-0.33,0.66l0.25,2.27l0.5,0.37l1.8,-0.09l0.3,1.0l2.7,3.39l0.56,-0.0l0.58,-0.81l0.57,0.97l1.02,0.63l0.76,-0.34l0.6,0.55l0.41,-0.14l-0.62,0.77l-0.13,0.97l0.59,1.97l0.91,1.19l-0.87,1.11l0.05,1.7l0.3,1.0l0.42,0.3l0.5,-0.32l0.29,0.98l-0.57,1.26l0.37,1.37l-0.09,1.2l0.45,0.67l-0.83,0.91l0.33,1.16l-0.69,0.61l-0.13,1.26l0.51,0.91l2.2,1.68l0.45,1.27l0.6,0.23l-2.46,0.56l-0.19,0.75l0.85,0.7l0.19,1.47l0.64,0.58l0.6,0.17l0.75,-0.34l0.9,0.25l-0.99,1.19l0.5,1.88l0.58,0.09l0.63,-0.75l1.2,0.69l1.14,-0.35l1.0,0.23l-2.1,2.25l1.47,2.03l0.77,0.2l0.02,2.05l0.99,0.42l0.36,1.7l-0.62,1.08l0.27,0.57l0.66,0.38l1.05,-0.03l2.92,-0.53l-2.12,1.18l0.07,0.69l-0.64,0.99l0.65,0.88l1.04,0.04l-0.05,2.55l0.73,1.52l0.13,1.13l-1.66,-0.28l-0.67,0.59l0.03,1.27l0.42,0.78l-0.49,1.16l2.22,1.59l-0.85,0.47l-0.3,0.56l-1.32,0.31l-0.54,-0.17l-1.23,-1.25l-2.72,-0.77l-1.01,0.33l-0.68,1.32l-1.58,0.36l-0.16,-1.07l-0.49,-0.52l-0.72,-0.12l-1.42,-1.13l-2.0,-0.07l-0.79,0.82l-0.24,1.58l-1.25,0.77l-0.89,-0.08l-0.42,0.43l0.62,1.64l-1.32,0.02l-0.53,0.59l-1.52,-1.14l-0.99,-1.61l-1.43,-0.05l-0.64,0.43l-0.99,-0.62l-1.36,-0.25l-4.27,-3.5l-0.61,-0.23l-0.64,0.17l-0.47,-0.73l-1.18,-0.43l-0.73,0.29l-0.13,0.78l1.96,1.57l-0.33,0.61l0.16,1.5l1.48,1.67l-0.4,0.37l0.0,0.74l1.8,2.02l-0.78,0.36l-0.09,0.75l-2.18,-0.7l-1.04,-1.33l-3.24,-1.24l0.21,-0.69l-0.37,-0.47l-1.37,-0.14l-0.77,0.94l0.53,1.47l2.45,2.55l2.18,1.29l0.17,0.64l-0.33,1.07l-0.93,1.21l0.43,1.21l-2.53,-1.23l-0.58,0.72l0.43,1.34l-1.2,0.47l-0.92,1.29l0.35,1.81l0.81,0.68l0.94,1.62l-1.07,1.38l0.14,2.16l0.93,0.8l1.58,0.7l0.42,0.94l0.89,0.37l-0.55,0.67l0.11,0.46l2.28,1.12l0.45,0.99l1.09,1.0l3.48,0.25l1.45,1.05l-0.51,0.43l-0.26,0.85l0.81,1.19l0.55,3.0l-0.44,-0.3l-0.56,0.14l-0.51,-0.32l-1.25,-0.05l-0.57,0.34l-0.85,1.35l1.34,3.66l0.69,0.73l1.96,0.6l0.65,-1.08l0.53,1.3l1.29,0.57l1.21,1.09l0.65,-0.53l0.66,0.04l0.3,-0.4l-0.32,-1.38l0.47,-0.18l0.52,-0.84l-0.32,-2.27l1.05,-0.72l0.36,-1.36l0.41,0.21l1.24,1.77l-0.61,-0.09l-0.45,0.41l0.02,0.51l1.73,2.71l-0.57,0.1l-0.27,0.72l1.77,4.37l-0.82,0.29l-0.25,1.19l2.25,3.25l1.07,-0.02l0.54,-0.72l-0.7,-1.91l0.45,0.59l1.47,0.59l0.23,1.26l1.38,0.53l1.88,-1.27l1.03,0.07l0.4,-0.31l-0.01,0.83l0.47,0.85l0.72,-0.11l0.22,-0.71l0.47,-0.13l0.38,-0.63l0.96,0.97l0.54,0.12l0.06,1.28l0.97,1.21l0.43,0.14l0.35,-0.88l0.95,0.41l0.4,0.8l1.35,0.12l0.48,-0.26l0.86,0.35l0.68,-0.28l0.41,-0.93l0.77,-0.07l0.95,0.4l1.82,1.61l1.03,0.12l1.75,-2.13l0.33,-1.42l-0.4,-1.03l-0.64,-0.53l-0.98,-2.33l0.8,0.1l0.37,-0.37l-0.72,-2.43l0.81,-0.28l0.1,-0.35l-1.38,-2.34l0.39,-1.72l-0.28,-1.5l1.51,1.38l1.13,0.13l0.97,-0.31l0.05,0.48l1.12,0.98l1.44,2.53l-1.28,-0.17l-0.48,0.73l0.86,0.91l0.81,0.19l35.0,-11.1l35.06,-12.54l3.42,9.02l-0.66,0.13l-0.44,-0.94l-0.67,-0.15l-1.97,1.23l-0.78,1.05l-0.46,-0.27l-0.62,0.77l-0.72,-0.49l-2.68,4.19l-1.64,1.25l-0.33,-0.76l-0.67,0.01l-0.29,0.38l0.18,0.75l-1.43,-0.17l-1.06,1.39l-0.66,-0.03l-0.6,1.15l1.14,1.19l-3.26,3.83l0.13,0.45l0.55,0.21l0.66,1.48l0.15,1.62l-0.21,0.42l-0.41,-1.85l-0.81,-0.1l-0.06,1.92l-0.36,0.95l-0.77,0.21l0.1,0.68l-0.54,1.09l-0.77,0.56l-0.1,1.51l0.82,0.48l-0.9,0.18l-0.48,1.41l-2.17,1.52l-0.5,1.77l0.65,0.77l-1.2,1.54l-0.92,0.48l-0.19,-0.56l-0.52,-0.21l-0.83,0.61l-0.45,-0.29l-0.34,0.3l0.03,0.63l-2.0,0.63l-0.71,0.9l-0.41,-0.49l-0.86,0.79l-1.54,-0.22l-0.9,1.3l-1.2,0.11l-1.38,1.11l-1.59,0.4l-2.2,1.67l-0.63,-0.58l-1.77,1.59l-0.17,-0.43l-1.33,-0.85l-3.94,1.02l-1.36,-0.41l-0.92,0.13l-0.55,0.57l-2.59,0.63l-0.63,-0.4l-2.2,1.18l-1.14,-0.17l-0.36,0.63l-1.34,0.39l-0.01,0.84l-1.47,0.35l-0.61,0.76l-0.93,-0.54l-1.25,0.49l-1.4,-0.41l-1.32,0.12l-2.04,0.78l-1.49,1.15l-2.1,0.27l-1.44,-0.27l-1.88,1.28l-2.61,0.93l-0.5,-0.13l-3.04,0.83l-1.08,-0.29l-4.94,2.56l-1.0,0.22l-1.65,-0.17l-0.78,1.42l-0.61,-0.13l-0.27,0.96l-1.18,-0.13l-1.06,0.6l-0.93,-0.98l-0.82,0.24l-0.65,1.05l0.01,1.01l-0.52,-0.18l-0.47,0.48l0.13,0.41l-0.84,2.13l-1.39,0.87l-0.47,0.69l-0.22,2.67l-0.62,0.01l-0.53,0.64l-0.24,1.65l0.46,1.24l-0.35,2.17l0.49,1.83l-0.9,2.3l-3.83,1.33l-0.72,0.8l-2.58,0.41l-0.47,0.63l-0.65,0.25l-0.13,1.04l-1.18,0.45l-0.43,0.49l0.89,0.68l0.68,-0.07l-0.1,0.23l-1.15,0.54l-0.93,-1.34l-0.63,-0.14l-0.38,0.24l0.64,1.28l-1.75,1.61l-0.34,0.95l0.1,0.8l-0.4,0.33l-0.04,0.54l-0.9,0.37l-1.58,2.08l-0.07,0.56l-0.93,0.62l-0.27,3.11l-1.0,0.53l-0.2,2.46l-1.09,3.18l-1.31,1.32l-0.7,1.78l-1.29,0.07l-2.38,-1.59l-1.96,0.45l-3.06,-1.17l-0.79,0.36l-2.96,0.12l-0.98,-0.53l-2.8,0.0l-1.08,0.61l-0.17,0.52l0.51,0.2l0.91,-0.32l1.95,0.32l-0.74,0.24l-0.2,0.65l0.77,0.75l1.42,-0.87l2.94,-0.67l1.57,0.19l2.55,0.95l0.86,-0.0l0.74,-0.43l0.87,0.13l1.43,1.22l1.11,0.06l-0.84,6.13l-0.83,1.47l-1.18,1.08l-0.46,1.37l-0.01,1.67l-2.8,1.65l-0.56,3.67l-0.87,2.54l-2.49,2.27l-2.19,3.43l-0.38,1.32l-0.97,1.01l-1.31,0.36l-2.8,1.73l-2.2,0.19l-1.25,1.7l-2.41,1.49l-0.16,1.61l-2.13,1.58l-1.37,2.11l-2.7,1.13l-1.71,1.34l-0.11,1.93l-1.55,0.98l-0.71,3.28l-0.88,1.17l-0.56,1.5l-0.69,0.71l-2.07,0.72l-0.98,0.8l-1.49,2.83l-1.29,1.09l-1.0,0.07l-0.96,-0.57l-1.35,0.32l-1.09,-0.65l-3.72,-0.87l-1.32,0.65l-2.06,0.27l-1.33,0.98l-2.82,0.84l-3.47,2.28l-1.13,0.4l-0.89,1.45l-0.7,0.24l-2.82,-1.86l-1.12,-0.09l-1.21,0.37l-0.91,1.01l-1.48,-0.68l-2.37,-0.38l-1.36,-2.43l-0.7,-0.56l-0.56,-1.82l-0.58,-0.48l-0.97,-0.11l-0.77,0.39l-0.17,0.53l0.27,0.96l-0.43,0.18l-2.91,-1.28l-0.7,-0.73l-0.29,-1.03l-1.0,-0.93l-4.14,-1.81l-3.41,-0.5l-1.54,0.14l-0.92,-0.32l-2.43,0.26l-0.44,-0.35l-4.48,-0.36l-0.53,-0.87l-1.89,-1.07l-0.93,-0.91l-0.79,-1.71l-1.17,-1.1l-1.06,-2.0l-1.81,-1.73l-1.98,-2.57l-0.54,-3.25l-1.96,-2.87l0.5,-2.68l-6.88,-58.56l1.67,2.7l0.76,-0.3l-0.21,-1.21l-2.42,-2.91l-1.05,-9.24l-0.4,-0.97l1.8,-2.07l0.51,0.3l-0.23,0.86l0.18,0.89l0.51,0.29l1.45,-0.36l1.17,0.94l1.18,3.03l-0.22,0.62l0.21,0.67l0.85,0.87l1.17,0.02l-0.03,-0.46l-0.89,-0.97l-0.02,-0.97l0.72,-1.43l-0.66,-0.48l0.75,-1.26l0.88,-0.26l0.24,-0.67l-0.67,-0.43l-0.75,0.08l0.06,-1.28l-0.27,-0.56l-1.49,-0.66l-0.25,-0.73l-0.98,-0.95l0.9,-0.11l1.02,-1.09l0.05,-0.63l-0.75,-1.16l1.4,-0.7l0.51,-1.39l0.54,-0.46l-0.09,-0.35l0.52,-0.43l0.47,-1.86l-0.26,-0.68l1.06,0.09l0.47,-0.44l-0.67,-0.78l-0.95,-0.09l0.35,-0.97l-0.4,-0.71l-0.02,-1.5l-0.67,-1.13l-0.57,-0.36l-1.4,-0.03l0.3,-0.73l-0.41,-0.8l-0.52,-0.15l-0.21,-1.16l-0.4,-0.45l0.77,-0.58l-0.29,-0.88l0.45,-0.68l-0.35,-0.62l-1.54,0.32l-0.13,-0.75l0.56,-0.12l0.27,-0.63l-1.0,-0.9l-0.91,0.22l0.28,-0.57l-0.53,-0.64l0.46,-2.68l-0.15,-0.59l-0.61,-0.4l-0.31,-2.06l-0.59,-0.93l-0.48,-0.2l0.67,-0.5l-0.08,-0.59l0.39,-0.84l-1.06,-1.01l-0.2,-1.12l-0.42,-0.26l-0.19,-0.72l0.14,-1.17l1.02,0.28l0.35,-0.65l-0.54,-0.57l-1.21,-0.13l0.54,-0.95l-0.65,-1.0l0.45,0.02l0.34,-0.63l-1.92,-1.3l0.6,-1.33l-0.13,-0.66l-0.87,-0.07l-1.12,0.54l-0.95,-0.41l0.44,-0.49l-0.07,-0.54l-1.53,-0.25l0.1,-0.3l-0.97,-1.33l0.4,-0.7l-0.53,-0.38l-0.9,-1.95l0.19,-0.91l-1.37,-0.81l-0.23,-0.46l1.54,-1.19l5.33,-2.46l0.81,-1.11l4.85,-2.88l2.24,-2.4l3.59,-2.98l0.9,-1.87l4.86,-6.16l0.42,-1.3l-0.39,-0.24l2.32,-4.01l0.23,-1.05l1.12,-1.18l0.75,-4.99l-0.05,-2.28l-0.87,-6.87l-1.23,-4.49l0.01,-1.63l-2.06,-5.25l-2.04,-3.63l-0.28,-1.28l-4.3,-5.9l-1.39,-1.17l-0.78,-0.16l-1.14,-0.88l-0.4,-0.99l-1.54,-1.0l-1.03,-0.16l-3.19,-1.36l-0.2,-0.78l-2.67,-1.45l-1.67,-1.88l-1.36,0.49l-0.0,-0.63l0.73,-0.62l0.04,-0.39l-0.65,-0.92l0.23,-0.9l-0.81,-1.89l0.57,0.26l0.39,-0.48l0.6,0.38l0.49,-0.32l0.62,-1.55l-0.37,-0.94l0.62,-0.27l0.02,-0.5l0.62,-0.7l-0.09,-0.62l0.36,-0.61l-0.21,-0.71l2.29,-1.62l0.54,-1.13l-0.19,-0.69l0.75,-0.42l-0.01,-0.71l-1.56,-0.39l-0.32,-0.57l1.18,-1.28l-0.12,-1.72l-0.72,-0.58l0.21,-0.23l0.57,0.33l0.79,-0.25l0.67,0.46l0.31,0.97l0.49,0.39l1.39,0.04l0.36,-0.45l-0.36,-0.46l-0.94,-0.2l-0.33,-1.13l-0.7,-0.94l0.5,-0.95l1.08,-0.14l0.32,-0.38l-1.09,-2.19l0.03,-0.71l1.09,-1.12l-0.29,-0.33l0.53,-0.69l-0.47,-0.56l-0.98,0.55l-0.62,-0.45l-0.68,0.43l-1.06,-0.02l-0.01,-0.6l1.22,-0.14l0.38,-0.57l-1.31,-0.85l0.4,-0.29l-0.01,-0.58l-0.77,-0.7l-0.01,-0.46l-0.57,-0.12l-0.65,-1.3l-0.95,-0.49l0.22,-0.81l0.9,-0.89l0.26,-0.75l0.98,-0.13l0.22,-0.69l-1.49,-0.49l-1.22,0.52l-1.2,-1.06l1.53,-2.14l0.06,-0.6l-0.31,-0.29l0.94,-0.68l0.15,-0.5l-0.49,-0.33l-0.46,0.11l-2.27,1.59l-0.48,-0.97l-0.38,-0.1l-2.14,0.94l0.57,-1.71l1.68,-2.74l0.64,-0.51l-0.06,-1.78l0.69,-0.82l-1.13,-4.31l0.44,-0.09l0.26,-0.6l1.05,-0.69l-0.19,-0.58l-0.8,-0.32l-0.14,-0.28l1.27,0.24l0.34,-0.62l-1.23,-1.2l-1.15,-0.05l-0.92,-1.42l-0.4,-0.2l-1.2,0.32l-0.39,-0.41l-1.11,-2.83l-0.33,-1.76l-0.47,-0.63l-0.63,-2.88l-0.22,-2.36l0.82,-1.83ZM578.66,653.17l-0.12,0.05l-0.03,-0.04l0.16,-0.0ZM653.23,787.08l0.57,0.5l3.84,0.59l0.65,0.96l-1.84,0.63l-0.63,1.13l-1.28,0.94l-1.51,-1.14l0.21,-3.62ZM655.71,541.57l0.05,-0.09l0.04,0.01l-0.05,0.06l-0.03,0.02ZM627.44,494.8l0.16,-0.06l-0.08,0.05l-0.09,0.01ZM639.87,499.16l-0.07,-0.04l0.04,-0.08l0.0,0.0l0.03,0.12ZM657.55,533.31l0.42,-0.03l0.38,-0.21l-0.29,0.53l-0.52,-0.29ZM677.38,543.7l-0.22,-0.37l-0.25,-1.11l0.12,-0.83l0.33,0.21l0.01,2.1ZM692.95,521.88l-0.28,-0.07l-0.05,-0.23l0.17,0.12l0.17,0.18ZM695.38,499.78l-0.07,-0.73l1.02,0.21l-0.33,0.12l-0.61,0.4ZM696.49,499.23l0.14,-0.3l0.34,0.14l-0.21,0.11l-0.26,0.05ZM721.26,553.36l-0.0,-0.22l-0.06,-0.42l0.12,0.17l-0.05,0.47ZM742.73,637.67l-0.85,-1.13l0.13,-0.56l-0.38,-1.24l0.31,-0.77l3.61,-2.12l0.56,-0.95l0.65,0.74l1.75,0.43l0.64,0.45l-4.79,2.12l-1.11,1.37l-0.52,1.66ZM572.37,551.69l-0.04,-0.14l0.05,-0.08l-0.01,0.22ZM809.57,639.69l0.11,-0.18l0.38,-0.14l-0.2,0.29l-0.28,0.03ZM794.09,718.58l-0.04,-0.31l0.4,-0.4l-0.02,0.55l-0.34,0.16ZM794.11,720.88l0.12,0.06l0.23,0.03l-0.4,0.14l0.05,-0.23ZM752.09,684.41l2.22,-1.3l0.33,-0.48l0.8,-0.2l2.39,0.31l9.66,-0.79l1.99,0.19l0.97,0.49l4.51,0.38l2.02,1.34l1.7,0.1l1.03,0.67l2.25,-0.21l0.97,0.38l0.65,-0.24l3.15,2.43l-0.18,0.63l-0.76,0.74l-0.8,0.01l-3.99,1.56l-3.11,-0.31l-2.11,0.44l-4.99,-0.03l-2.56,-0.78l-3.42,-0.22l-1.45,-1.91l-1.85,-1.13l-2.25,-0.76l-4.73,-0.57l-1.03,-0.61l-0.56,0.46l-0.85,-0.6ZM652.77,796.2l1.34,-1.08l0.39,-1.15l0.65,-0.66l1.25,-0.55l0.72,-0.75l1.87,-0.62l1.13,-1.84l1.23,-1.03l0.36,-0.7l0.42,-0.27l1.68,-0.02l0.58,-0.4l0.23,-0.76l-0.52,-1.46l0.53,-1.33l-0.16,-1.71l2.17,-3.82l0.22,-2.72l1.14,-0.54l1.06,-1.39l1.11,-0.26l1.41,-0.99l0.62,-0.82l-0.01,-0.71l1.62,-2.24l2.48,-1.6l0.65,-2.03l1.89,-1.12l1.43,-2.03l1.02,0.35l0.9,-0.13l4.53,-3.0l1.05,-1.01l0.42,-1.1l1.5,-0.46l1.15,-1.15l0.63,-0.03l0.89,-0.57l0.51,-0.89l2.15,-1.52l1.37,-2.26l1.5,-3.92l1.24,-1.36l0.34,-2.36l1.01,-1.11l2.88,-5.88l-0.06,-1.18l0.74,-1.92l1.24,-0.99l2.35,-4.3l2.12,-2.93l1.07,-0.44l1.94,-2.19l0.49,-1.23l1.02,-0.65l1.4,-1.96l0.8,-0.4l0.61,-0.88l1.14,-0.46l4.04,-3.95l1.4,-0.62l7.96,-6.62l4.17,-2.69l3.7,-1.3l3.37,-1.7l6.91,-1.06l1.71,0.07l1.4,0.5l2.0,0.2l3.47,1.52l1.16,0.82l0.25,0.86l-3.4,-0.34l-0.76,0.51l0.72,0.48l-0.21,0.46l0.39,0.43l1.21,-0.43l0.13,0.75l1.3,0.11l1.86,1.14l-0.66,0.55l-0.03,1.06l1.11,0.79l-0.8,0.71l-0.09,0.96l-2.1,1.13l-1.87,1.54l0.22,0.72l-0.3,1.78l-1.19,0.78l-0.79,0.12l-0.01,1.14l-2.76,2.81l-1.46,0.58l-1.02,-0.61l-3.52,-0.21l-1.24,-0.56l-0.26,-0.76l-0.44,-0.22l-0.88,1.05l-0.73,1.72l-2.23,0.29l-0.47,0.51l-2.04,0.13l-0.59,0.63l-0.03,0.61l-3.97,2.56l-0.27,0.53l0.12,0.86l-1.26,-0.06l-1.13,1.05l-1.76,0.33l-0.23,0.65l-2.65,-0.67l-0.29,-0.8l-0.46,-0.22l-5.82,1.45l-0.29,0.48l0.2,0.82l-2.69,0.66l-0.29,0.48l1.44,6.32l-1.36,2.4l-2.11,1.81l-2.77,1.73l-0.24,-1.66l-0.38,-0.42l-2.14,-0.15l-0.61,0.32l-6.09,15.23l0.29,5.14l-1.15,1.5l-0.55,2.85l0.72,1.19l-0.55,0.98l0.29,1.98l0.87,0.77l-1.38,2.38l0.31,1.46l-1.62,1.31l-1.12,2.01l-0.21,1.82l1.32,1.03l-1.1,-0.43l-0.86,0.3l-0.28,0.85l0.29,1.45l-0.3,0.49l-0.57,-0.85l-0.81,-0.24l-1.42,1.3l-0.39,0.92l-1.68,-0.48l-0.78,0.32l-1.19,1.38l0.52,0.71l-0.6,3.08l-37.01,7.26ZM688.69,755.58l1.98,-2.71l0.28,-0.13l-0.38,1.07l-1.88,1.77ZM678.73,541.82l0.47,0.85l0.01,0.82l-0.46,-0.42l-0.01,-1.24ZM659.52,786.99l0.49,-0.72l1.79,-0.99l0.73,-1.75l0.81,-0.99l-0.31,2.22l0.19,1.04l-0.4,0.6l-2.32,-0.04l-0.98,0.62ZM662.23,534.23l0.01,-0.03l0.04,-0.02l-0.01,0.02l-0.04,0.03ZM659.87,785.06l1.03,-1.6l0.72,-0.51l-0.63,1.6l-1.12,0.51ZM659.17,532.29l1.64,-0.18l0.38,0.44l-1.32,2.15l0.08,-1.38l-0.78,-1.02ZM657.0,790.9l0.16,-0.25l0.88,-0.1l-0.46,0.23l-0.58,0.13Z\",\n            name: \"Qu\\xe9bec\"\n          },\n          \"CA-PE\": {\n            path: \"M771.47,732.39l0.78,1.7l-0.78,1.88l0.13,0.82l0.7,0.47l0.77,-0.11l1.39,1.0l0.16,0.9l0.72,0.15l-0.07,0.8l-0.55,0.52l0.16,0.77l0.73,-0.04l0.43,-0.45l0.61,0.64l1.57,-0.16l0.33,-0.53l-0.67,-1.6l0.46,-0.19l1.51,0.13l0.16,0.47l1.06,0.44l0.4,-0.34l0.06,-0.62l0.61,-0.01l0.57,0.69l1.37,0.46l0.37,-0.51l3.75,-1.24l0.36,0.19l0.78,-0.8l2.11,-0.31l0.32,-0.51l-0.27,-0.27l0.62,-0.28l3.82,-1.4l1.87,-0.25l-1.8,2.01l-0.64,-0.34l-0.48,0.1l-0.02,0.49l-0.53,0.01l-0.31,0.51l0.32,0.48l-0.52,0.2l0.22,0.56l-1.05,0.36l0.24,0.7l0.64,0.06l-1.37,0.0l-0.4,0.32l-0.04,0.89l0.32,0.64l0.6,-0.02l0.16,0.53l0.44,0.19l0.71,-0.13l0.01,0.35l-0.58,0.3l-0.49,0.84l1.06,0.39l-2.58,1.13l-0.78,0.02l-0.99,-0.6l0.09,-0.49l-0.46,-0.25l0.36,-1.16l-0.25,-0.3l-0.71,-0.03l-0.92,-0.59l-0.52,0.49l-0.71,-0.1l1.06,-1.86l-0.51,-0.53l-0.94,0.65l-0.69,1.16l-1.06,0.01l0.29,0.75l-0.86,1.0l0.76,0.51l-2.98,-0.56l-1.4,0.5l-0.82,-0.15l-0.7,-0.68l-0.92,-0.25l0.82,-0.41l-0.92,-1.1l-1.18,0.33l-1.26,-0.1l-0.64,0.6l-1.36,0.25l0.2,-0.26l-0.39,-1.49l0.35,-0.94l-0.78,-1.42l-0.79,0.92l-1.22,-0.25l-1.58,0.61l-0.34,-0.51l0.16,-1.21l0.8,-1.45l0.1,-1.5l1.48,-2.6Z\",\n            name: \"Prince Edward Island\"\n          },\n          \"CA-MB\": {\n            path: \"M325.95,732.99l4.14,-61.02l4.77,-62.91l10.31,-77.66l33.82,3.81l33.89,2.47l0.12,3.64l-0.6,2.66l0.36,1.51l-0.19,0.95l0.53,1.44l-0.02,2.2l-0.6,0.92l-0.31,3.26l-1.34,-0.06l-0.7,0.81l0.06,0.47l1.76,-0.06l0.29,0.93l0.76,0.46l0.02,0.76l-0.66,1.78l0.17,0.48l1.42,-0.82l0.96,1.03l0.53,2.0l0.68,0.28l1.11,-0.56l0.27,0.59l-0.57,0.66l-0.54,1.46l0.08,2.65l-0.51,0.99l-0.4,3.24l0.38,0.24l0.36,-0.27l1.44,-3.28l0.06,-3.8l0.85,-1.47l0.24,-1.36l2.39,0.3l1.61,-0.55l1.33,0.57l0.49,-0.15l0.27,1.01l0.73,0.31l1.0,-1.02l0.84,-0.08l0.28,0.31l0.16,4.18l1.69,5.63l0.69,1.0l0.49,1.81l0.25,4.64l0.43,0.18l1.03,2.86l0.47,2.27l0.56,0.64l0.43,1.27l0.27,1.71l-0.38,2.25l-1.47,3.14l-1.12,1.66l-1.62,0.59l-0.12,0.73l0.53,0.19l1.46,-0.36l2.43,-1.98l1.57,-0.33l-1.98,1.87l0.57,0.37l1.28,-0.39l1.33,-1.17l2.64,-0.65l9.39,-3.63l4.27,0.65l1.73,0.78l0.4,0.66l3.05,1.73l1.07,1.04l5.02,1.58l0.98,-0.09l3.56,1.54l-49.25,55.9l-17.57,16.1l-4.09,69.07l-36.0,-2.67l-36.08,-3.9Z\",\n            name: \"Manitoba\"\n          },\n          \"CA-YT\": {\n            path: \"M2.99,403.6l-2.51,-3.38l99.63,-158.54l0.21,0.56l0.59,0.12l2.17,2.22l1.13,0.76l0.8,-0.0l1.33,0.76l0.84,1.67l1.71,1.75l0.18,0.8l0.9,0.66l-0.07,2.09l0.76,2.03l-0.1,2.95l1.12,0.86l0.58,-0.27l-0.01,1.69l0.41,1.39l3.81,6.94l1.36,0.79l1.09,2.36l0.71,0.44l0.6,-0.15l0.59,0.28l-11.85,21.13l-0.58,1.5l0.84,1.37l-0.55,2.17l-1.23,1.62l0.21,0.92l-0.57,1.44l-0.9,1.03l-1.33,0.65l-0.13,0.76l-0.92,1.4l-0.22,1.31l0.22,0.46l14.41,7.82l-0.45,0.78l0.79,1.4l0.09,2.32l-1.18,1.06l0.08,1.17l-0.46,0.61l0.47,1.99l-0.93,0.4l-0.31,1.21l-0.91,0.0l-1.74,2.16l0.11,0.88l1.21,0.53l-0.01,0.56l-0.91,1.75l-0.98,0.23l-0.87,0.83l-0.04,0.65l0.36,0.38l-0.74,1.47l0.3,0.57l1.49,1.0l0.94,-0.39l1.38,-0.03l1.52,0.54l-1.27,1.1l-0.08,0.74l0.43,0.46l1.31,0.21l0.7,-0.73l1.51,-0.49l0.27,1.26l1.01,0.21l-0.11,0.35l-2.02,0.3l-0.77,0.87l0.78,2.27l-0.08,3.66l-1.05,0.38l-1.32,1.63l-2.41,0.94l-0.74,0.99l-0.74,-0.1l-0.75,0.49l-0.62,-0.17l-0.32,0.4l0.05,0.31l-0.45,0.35l0.12,0.71l0.48,0.56l1.11,-0.05l-0.7,1.31l0.47,0.8l0.7,0.35l-0.12,0.55l-1.75,0.48l-0.7,1.7l-1.2,0.2l-0.48,0.64l0.08,1.28l0.92,0.26l0.9,0.76l0.63,1.68l0.7,0.59l-0.01,2.15l0.36,1.15l0.86,0.91l-1.67,1.12l-0.58,0.81l0.17,0.6l1.11,0.22l0.54,0.79l1.97,-0.15l0.59,-0.58l1.23,1.28l0.19,2.0l-0.66,0.42l-0.05,0.59l0.42,0.43l-0.02,1.43l-0.84,0.83l0.15,1.37l-0.3,0.52l0.24,0.53l0.45,0.07l-0.34,1.28l0.97,1.72l0.43,0.17l0.51,2.07l0.96,1.36l0.59,0.27l-1.75,0.01l-0.68,0.79l0.29,1.13l1.16,0.11l-0.17,1.18l0.85,0.52l-0.24,0.43l0.35,0.78l-0.17,1.41l-0.92,0.4l-0.57,1.09l-2.07,0.18l-0.81,0.97l0.09,0.6l0.72,0.23l0.01,1.12l0.49,0.51l-0.28,2.33l0.67,0.92l0.88,0.18l-2.93,2.76l0.2,2.37l-0.35,1.22l0.54,0.92l-0.16,0.9l-0.8,0.25l-0.14,0.66l0.35,0.36l0.86,-0.02l1.19,2.39l-0.76,-0.12l-0.79,0.74l0.13,0.99l-1.0,0.81l-0.09,2.31l-0.77,0.19l-0.34,0.6l1.1,1.56l1.26,0.18l0.72,0.74l-0.12,0.81l0.63,0.7l0.68,-0.03l0.86,-0.64l0.77,0.31l0.61,1.96l-0.31,0.78l0.52,1.18l-0.24,1.87l0.43,0.56l0.66,0.07l0.03,1.48l-0.41,1.6l0.51,0.73l0.33,1.51l0.7,0.77l0.06,0.96l0.76,1.13l1.44,0.78l0.74,0.03l0.74,1.3l-0.3,1.16l0.27,0.71l-0.88,3.32l-0.53,1.02l-0.84,0.25l-0.34,0.51l0.21,1.0l1.01,0.01l-0.47,1.93l-0.85,1.61l0.11,0.5l-0.38,0.94l0.32,0.94l0.58,0.12l0.32,-0.28l0.2,0.69l0.55,0.36l1.68,-0.65l0.57,0.95l1.3,0.52l1.0,-0.29l0.28,-0.9l0.4,0.12l-0.02,1.03l1.01,0.6l1.48,-1.19l0.97,1.64l1.38,0.82l1.51,1.46l2.18,-0.54l2.61,0.89l0.53,-0.31l0.8,-1.34l1.56,0.69l-0.24,3.01l-1.54,0.79l-0.48,0.84l0.61,2.61l-0.27,1.75l1.61,0.99l-0.73,2.35l0.23,4.91l-0.86,1.08l-31.4,-13.07l-24.81,-11.37l-28.47,-14.24l-20.01,-10.81l-23.54,-13.6l-0.23,-1.48l3.03,-3.02l0.42,-0.84l-0.17,-0.52l-5.13,-2.69l-3.74,0.81l-2.48,-3.89l-0.63,-0.21l-1.12,0.73ZM110.73,248.92l1.12,-0.26l0.66,1.18l-0.77,-0.34l-0.9,0.49l-0.12,-1.07Z\",\n            name: \"Yukon\"\n          },\n          \"CA-NB\": {\n            path: \"M711.48,743.21l4.88,-3.44l1.67,-2.57l0.18,-1.28l-1.33,-5.56l2.7,-0.66l0.29,-0.48l-0.2,-0.82l5.1,-1.27l0.53,0.94l2.39,0.41l0.8,0.58l0.47,-0.21l0.15,-0.93l1.52,-0.21l1.16,-1.07l1.52,0.15l0.31,-0.53l-0.28,-0.79l0.29,-0.55l1.78,-0.33l3.5,-2.52l0.93,0.83l6.82,0.46l2.26,2.96l-0.07,0.63l0.62,0.47l0.61,-0.23l0.36,-0.92l1.13,-0.52l0.93,-1.68l1.46,-1.45l1.26,-0.71l-0.15,0.55l0.56,0.45l2.56,-1.38l0.18,0.13l-0.47,0.17l-0.22,0.6l0.36,0.29l0.68,-0.06l0.18,0.35l-0.05,1.32l-0.62,1.42l0.01,0.67l0.32,0.28l-0.22,1.07l0.35,0.36l0.21,-0.13l-0.4,1.59l0.21,0.82l-0.7,0.42l-0.69,1.63l-2.18,2.49l-0.16,0.57l0.45,0.29l1.52,-0.31l0.68,0.45l1.67,-1.33l0.89,0.36l0.53,-0.7l0.76,-0.22l0.54,1.22l-0.66,1.4l0.02,0.78l0.73,1.41l0.99,0.87l-0.1,1.13l0.5,0.3l0.38,-0.48l1.0,0.13l0.34,1.71l0.66,0.61l-0.24,0.5l0.52,0.57l0.52,-0.05l0.45,0.39l0.13,0.89l-0.66,0.54l-0.06,0.5l0.85,0.13l1.11,-0.59l0.23,1.66l0.68,0.13l3.34,-1.09l0.8,0.2l0.6,0.61l2.16,-0.91l2.12,0.21l-0.9,0.93l-2.04,0.58l-0.16,1.18l0.45,0.3l-0.94,0.55l-0.72,2.11l-0.62,-0.3l-0.6,0.17l-0.53,2.15l-1.32,-1.94l-0.41,0.29l-1.5,-1.18l-0.75,-1.2l-0.75,-0.36l-0.5,0.13l0.0,0.7l0.78,0.43l0.31,0.82l2.11,1.76l-1.03,4.22l-0.55,-0.06l-1.15,0.56l-0.78,1.52l-3.32,2.75l-2.08,2.39l-0.16,0.67l-1.49,1.15l-0.37,0.73l-0.76,-0.01l-1.1,1.21l-0.67,-0.03l-0.51,-0.64l-1.07,-0.28l0.9,-1.59l-0.53,-1.41l-0.67,0.26l-0.52,1.78l-1.1,0.95l0.5,0.88l1.02,0.38l-0.32,0.86l-0.25,0.32l-0.66,-0.3l-0.87,0.23l-0.34,0.51l0.4,0.56l-0.93,1.21l-0.64,-0.76l-0.61,0.02l-1.86,1.85l-0.3,-0.18l-0.47,0.38l-0.44,-0.36l-0.7,0.47l0.01,-0.72l-1.71,-0.72l-1.11,0.89l-0.08,0.97l-0.82,-1.35l-0.99,-0.5l-0.4,0.72l-0.82,0.25l-0.21,0.76l-1.91,-1.39l0.1,-1.92l-1.18,-1.54l0.51,-0.73l-0.05,-0.9l-1.13,-2.02l-0.43,-0.24l-0.52,0.42l0.0,0.8l-0.82,0.1l-0.88,-0.24l-0.84,-0.76l-0.33,0.08l-0.57,-0.77l0.12,-0.88l-0.46,-0.63l0.25,-0.98l-0.49,-0.6l-5.26,-19.48l-1.95,-1.12l-0.85,-0.87l-3.83,-1.73l-1.37,0.38l-0.46,1.23l-1.34,0.2l-1.27,1.39l-1.3,0.46l-1.31,1.15l-1.79,-0.77ZM746.76,774.42l-0.04,0.04l-0.08,0.14l-0.05,-0.07l0.17,-0.12ZM759.75,722.25l-0.02,-0.05l-0.0,-0.01l0.06,0.02l-0.04,0.04ZM768.61,745.97l0.01,-0.09l0.03,0.05l-0.05,0.04ZM759.95,720.22l0.52,-0.55l0.13,0.24l0.67,-0.23l-0.55,1.43l-0.78,-0.88ZM760.94,717.95l0.09,-0.3l0.01,-0.4l0.08,0.22l-0.18,0.48ZM748.75,781.92l0.08,-1.46l0.26,-0.59l0.82,1.56l-1.16,0.48Z\",\n            name: \"New Brunswick\"\n          },\n          \"CA-NL\": {\n            path: \"M818.51,688.98l0.02,-0.65l1.55,-2.42l0.25,0.55l0.81,0.32l0.32,0.49l-1.34,0.44l-1.61,1.27ZM822.14,686.92l0.09,-0.28l0.2,0.08l-0.17,0.14l-0.11,0.06ZM824.06,685.7l-0.48,-2.57l0.46,-2.92l-0.33,-2.45l0.29,-1.53l0.64,0.39l1.83,-0.8l1.87,1.03l1.74,-0.31l0.54,-0.42l-0.17,-0.68l-0.33,-0.09l-1.27,0.39l-0.99,-0.34l-0.8,-1.03l2.21,-0.76l0.51,-1.4l-0.15,-0.42l-1.2,0.28l-0.06,-1.04l-0.46,0.04l-0.9,0.85l-1.88,0.14l-0.72,-2.27l0.34,-1.43l0.85,-1.64l0.57,0.11l0.56,1.16l0.85,0.46l0.4,-0.21l-0.55,-1.14l1.54,0.3l0.73,-0.53l-0.21,-0.41l-1.37,-0.41l-0.81,-0.81l-0.39,0.46l-0.48,-0.37l-0.65,-0.73l-0.22,-0.95l0.7,-9.03l-0.38,-4.88l0.34,-3.49l1.45,-0.26l0.59,-0.82l-0.37,-0.63l-0.77,0.32l-1.17,-0.57l1.93,-2.2l0.89,-2.81l-0.04,-0.49l-0.83,-0.7l0.51,-0.65l-0.28,-0.74l0.12,-1.13l0.56,-0.76l-0.31,-0.81l0.31,-0.71l-0.58,-0.44l0.1,-1.04l1.77,-2.59l0.98,-0.65l0.55,-1.03l1.96,-2.1l1.26,-2.08l0.7,1.99l1.55,-0.57l1.29,0.01l0.54,-0.36l-0.19,-0.69l-0.68,0.01l-0.53,-0.64l1.05,-0.21l0.4,-0.84l0.83,0.67l-0.69,0.24l-0.09,0.7l0.95,0.36l0.12,1.05l-0.54,0.02l-0.23,0.43l0.17,0.57l-0.32,0.4l-1.78,0.19l-0.8,0.48l-0.87,-0.17l-0.09,0.38l-0.71,-0.26l-0.76,0.5l-0.18,0.5l0.23,0.79l1.02,0.19l-0.16,0.91l0.29,0.62l1.83,0.78l0.39,-0.72l-0.17,-0.2l0.64,-0.8l0.68,-0.1l0.33,0.14l0.57,1.72l-0.65,0.48l0.44,0.67l-0.13,2.25l-0.35,0.55l-0.42,2.53l-0.34,0.07l-0.49,-2.17l-0.61,-0.28l-0.62,0.97l1.07,2.9l0.9,0.67l-0.65,1.64l0.04,0.86l-0.52,0.2l-0.23,0.52l0.66,0.38l-0.55,1.91l-0.98,0.27l0.0,0.67l0.86,0.21l0.12,0.69l-0.14,2.05l-0.45,1.24l-0.66,0.34l0.38,0.68l-0.47,1.24l0.06,1.84l0.16,0.63l0.56,0.14l0.13,1.13l-0.97,1.75l0.39,0.54l1.22,-0.07l0.47,3.3l0.69,-0.49l1.16,-6.05l0.4,-0.71l0.41,0.36l0.66,-0.23l-0.28,-0.85l0.56,-0.14l-0.01,-0.46l-0.46,-0.58l0.05,-1.26l0.95,-2.77l0.79,0.59l-0.18,3.42l0.93,-0.5l0.35,-1.41l0.27,0.39l0.79,-0.35l-0.0,-1.09l2.77,0.99l0.52,-0.3l0.2,-0.82l1.5,-0.94l0.12,0.59l-0.79,0.7l-0.99,1.9l-1.97,2.24l-0.69,0.29l0.06,0.6l-0.91,2.21l0.11,0.9l0.23,0.31l0.67,-0.13l0.71,-2.13l0.29,-0.41l0.38,0.14l0.48,-0.37l-0.26,1.38l0.59,0.25l-1.46,2.03l-0.14,0.97l0.53,0.67l1.61,-2.04l1.09,-0.82l0.49,0.19l0.28,0.84l0.7,-0.29l0.98,0.89l0.59,-0.38l0.01,-0.84l0.32,0.99l0.71,-0.1l0.19,-1.95l0.14,0.34l0.64,0.15l-0.35,0.84l0.22,0.44l0.59,-0.23l0.39,0.34l0.4,-0.34l0.79,0.24l0.11,-0.88l0.52,1.06l-0.54,0.71l-0.39,1.61l1.03,0.85l-0.38,1.05l0.16,0.44l0.47,-0.01l1.02,-0.97l0.76,-1.31l-0.03,-0.45l-0.62,-0.17l-0.51,0.55l-0.18,-1.15l1.57,-2.16l-0.03,-0.34l0.08,0.26l-0.25,0.67l0.57,0.54l0.48,-0.42l0.22,-1.1l1.67,-0.42l0.54,-1.2l0.62,-3.99l0.28,1.33l0.59,-0.52l0.13,0.21l-0.03,0.91l0.61,0.59l0.21,1.34l0.63,0.12l0.57,-1.64l-0.32,-0.61l0.02,-0.96l0.85,-0.12l0.79,0.7l0.31,-0.71l0.44,-0.22l-0.06,-1.2l0.32,-0.27l0.74,0.28l0.93,-0.73l5.77,0.89l0.22,0.12l-0.4,0.97l0.1,0.98l-0.49,0.24l-0.08,0.56l0.81,0.8l-2.57,1.49l0.26,0.54l-0.46,0.33l0.09,0.67l0.91,0.29l-0.86,0.34l-0.29,0.46l0.16,1.13l-1.86,1.47l0.0,1.05l0.58,0.19l1.41,-1.37l0.14,0.84l1.0,0.06l0.81,1.47l0.56,0.03l-0.39,1.08l0.37,0.5l0.57,-0.21l0.18,-0.47l0.9,-0.32l0.19,0.33l-0.99,0.74l-0.86,1.43l-1.08,0.56l-0.4,0.85l0.24,0.61l0.68,0.47l0.61,-1.3l0.97,-0.42l0.54,-1.1l0.13,0.97l0.7,0.34l0.5,-0.39l-0.16,-0.43l0.31,-1.17l0.25,0.35l0.59,-0.13l0.5,-0.63l0.27,0.58l0.47,-0.2l0.67,-1.31l0.2,-1.29l-0.28,-1.66l0.91,0.0l0.34,0.73l1.22,0.06l0.94,-3.37l0.86,0.75l0.3,2.82l-0.8,1.71l-0.96,-0.15l-1.06,0.49l0.22,1.79l-1.26,1.56l-0.53,1.5l-1.45,0.06l-0.71,0.35l-1.06,-0.39l-0.47,0.35l0.06,0.97l1.35,1.88l2.18,-0.61l-1.93,0.8l-0.05,0.78l0.26,0.14l1.9,-0.22l1.17,-1.04l-0.06,1.61l-0.81,0.3l-0.23,0.53l0.85,0.23l0.02,1.22l-1.26,-0.75l-0.46,0.03l-0.38,0.51l1.88,1.64l0.16,0.78l1.51,0.96l1.58,0.42l0.29,0.84l1.71,-1.1l-0.32,-1.21l0.06,-1.67l-0.57,-0.88l0.05,-2.14l0.64,-0.69l-0.26,-0.35l0.09,-2.07l0.87,-1.15l1.04,-0.21l0.44,-0.84l0.28,-1.77l0.43,0.3l-0.37,0.49l0.02,1.96l-0.43,1.39l0.36,1.31l-0.62,2.4l0.77,1.14l-0.53,1.03l0.11,0.6l0.39,0.29l0.12,0.67l0.88,-0.04l0.12,0.97l0.54,0.75l0.8,-0.16l0.23,0.23l0.42,-0.3l0.19,-1.05l1.35,-2.65l0.07,-1.31l-0.52,-2.42l0.56,0.06l0.51,1.46l0.77,0.05l0.18,1.36l0.28,0.41l0.86,0.2l-0.46,0.7l0.54,0.67l-0.09,1.98l-0.49,0.38l0.6,3.82l-0.59,0.45l0.34,0.65l0.58,-0.04l0.26,0.34l-0.14,0.63l0.45,0.87l0.46,2.59l-0.57,1.29l0.07,1.4l-0.47,0.74l-0.67,-0.01l-0.83,-1.05l-0.69,-0.11l-0.33,0.68l-0.63,-0.3l-0.68,1.86l-0.83,1.01l-0.73,-0.66l-0.37,-1.76l0.15,-1.33l0.5,-0.85l-0.23,-0.4l-0.58,0.22l-0.01,-0.84l-0.4,-0.27l-0.25,0.21l-0.84,-0.22l0.05,-1.36l0.49,-1.07l-1.62,-1.32l-0.34,0.41l0.02,0.96l-0.33,-0.14l-0.27,0.39l-0.02,1.71l-0.56,0.67l-0.05,1.51l-0.38,0.42l-0.36,1.88l-0.68,1.14l-1.16,0.24l-0.47,-0.99l-0.17,-1.61l0.02,-4.34l0.67,-0.26l-0.1,-0.72l-0.82,-0.24l0.6,-0.51l0.23,-1.22l-0.41,-0.34l0.61,-0.71l0.06,-0.57l-0.72,-0.23l-0.68,0.24l-0.13,-1.19l-0.59,-1.2l-0.83,-0.46l-1.16,-1.94l-0.54,-0.14l-0.55,-0.83l-0.47,0.24l-0.91,-0.8l-0.33,0.87l-0.53,-0.45l-1.3,-0.03l-0.4,0.25l0.12,0.46l0.99,0.27l0.23,1.41l-0.06,1.15l-0.64,0.45l0.37,0.72l0.0,0.98l-0.69,0.17l-0.99,4.53l-0.43,-0.07l-0.29,0.77l-0.95,-0.73l-0.76,0.59l-0.92,4.35l-0.55,0.39l-0.21,0.76l0.74,0.35l0.45,0.78l-0.11,0.53l-0.72,-0.18l-0.34,0.36l0.47,1.39l-0.02,1.18l-0.43,0.51l-0.74,0.19l-0.02,0.81l-0.52,-0.04l-0.1,-0.43l-1.25,-0.24l-1.26,2.06l-1.9,0.6l-1.19,-0.1l-0.43,-0.32l0.46,-2.27l0.88,-0.9l0.97,-0.15l2.04,-1.75l0.09,-0.86l1.22,-2.28l-0.44,-2.39l0.42,-1.17l2.27,-1.82l0.82,-1.47l-0.27,-0.9l1.23,-1.84l-0.4,-0.26l-1.19,0.33l-0.89,1.52l-1.26,0.84l0.4,-2.8l-0.47,-0.74l-0.65,1.09l-0.31,2.16l-0.31,-0.33l-0.67,0.71l-1.79,0.09l-0.18,-0.55l-0.78,-0.22l-0.73,0.71l0.13,1.82l1.21,0.81l0.24,1.37l-1.1,0.92l-0.3,-0.1l0.04,-0.89l-1.08,-0.43l-0.8,1.48l-0.02,-0.52l-0.43,-0.31l0.06,-0.78l-0.47,-0.05l1.23,-1.4l0.05,-0.44l-0.83,-0.14l-1.53,1.71l-0.77,-0.1l0.47,-1.23l-0.08,-1.5l-0.38,-0.39l0.25,-1.59l-0.4,-0.79l-0.66,-0.19l-0.47,1.48l0.31,1.95l-1.11,1.09l-0.38,1.01l0.17,-0.88l-0.28,-0.45l-0.54,0.35l-0.79,-0.88l-0.46,-0.04l-0.13,0.71l0.63,0.81l-0.1,0.83l0.37,0.4l-0.54,1.27l-0.84,-1.65l-0.47,-0.24l-0.3,0.44l0.03,1.02l0.55,0.59l0.02,0.54l-3.57,1.08l-0.41,0.46l-0.25,-0.2l-0.62,0.22l0.13,0.75l0.6,0.46l-0.21,0.36l-1.15,0.21l-1.33,-0.26l-1.5,0.92l-0.14,-0.52l-0.61,-0.41l-0.53,0.36l-0.02,0.51l-0.92,0.57l-0.17,-0.69l-0.46,-0.16l-1.88,0.89l-0.5,-0.13l-0.77,1.11l-1.38,-0.43l-0.81,0.72l-0.79,-0.15l-0.02,-0.49l-0.44,-0.12l-0.56,0.26l-0.17,0.46l-0.9,-0.11l-0.81,0.33l-1.22,1.15l-0.87,0.03l0.41,-1.32l-0.5,-0.16l-1.15,0.85l-0.09,1.71l-1.35,0.05l-0.62,1.11l-0.56,0.12l-0.42,0.57l-2.33,0.82l-1.98,1.48l-1.19,0.13l-0.86,-0.32l-0.49,-2.11l-2.24,-2.02l0.77,-0.74l0.91,-2.53l1.76,-2.24l0.33,-1.2l1.47,-2.58l0.19,-1.52l1.72,-1.6l0.36,-1.23l1.28,-0.84l0.14,-0.68l-0.91,-0.21l-2.2,1.29l-0.93,-0.35l-1.05,0.22ZM875.13,662.15l0.01,-0.05l0.03,0.05l-0.03,0.0ZM877.64,662.72l0.01,0.0l-0.0,0.01l-0.0,-0.01ZM877.66,662.95l0.18,0.25l-0.68,1.05l-0.32,0.16l0.81,-1.47ZM877.92,687.46l0.03,0.05l-0.04,0.02l0.01,-0.07ZM861.06,691.62l-0.07,0.12l-0.12,0.06l0.18,-0.18ZM860.09,692.51l-0.48,0.59l-0.29,-0.1l0.05,-0.05l0.72,-0.44ZM879.41,666.37l0.09,-0.58l0.24,-0.6l0.19,0.13l-0.51,1.05ZM875.09,662.02l-0.1,-0.13l0.04,0.02l0.06,0.11ZM856.72,657.08l-0.75,-1.19l0.46,-0.02l0.19,-0.64l0.34,0.61l-0.23,1.24ZM855.6,655.59l-0.04,-0.03l0.02,-0.02l0.02,0.05ZM854.13,657.17l0.0,-0.25l0.09,-0.07l-0.09,0.32ZM880.24,671.96l0.93,-0.43l1.21,0.01l1.03,-1.19l0.17,0.15l0.06,0.96l-1.69,0.33l-1.01,0.54l-0.41,0.04l-0.3,-0.41ZM880.32,686.11l0.4,-1.02l-0.02,0.88l-0.39,0.14ZM880.62,683.25l-0.08,-0.03l0.05,-0.13l0.03,0.15ZM865.39,648.04l0.38,0.42l0.68,-0.29l0.06,-1.23l0.98,0.8l-1.68,1.99l-0.42,-0.78l0.29,-0.24l-0.3,-0.67ZM859.7,652.85l0.19,-0.17l0.32,0.44l-0.25,-0.18l-0.25,-0.09ZM860.59,653.19l0.24,-0.05l0.02,0.23l-0.08,0.03l-0.18,-0.21ZM861.93,651.82l-0.05,-0.37l0.49,-0.4l0.03,0.24l-0.48,0.53ZM862.01,654.42l0.02,0.04l-0.01,0.11l-0.04,-0.08l0.03,-0.06ZM859.28,690.2l0.8,-0.57l0.4,0.51l-0.91,0.12l-0.29,-0.06ZM850.54,655.73l0.16,0.11l-0.16,0.24l-0.04,-0.3l0.04,-0.05ZM850.65,657.07l0.03,-0.01l-0.01,0.06l-0.01,-0.05ZM843.73,636.57l0.01,-0.34l0.77,-0.76l-0.19,0.87l-0.6,0.23ZM838.16,616.02l0.06,-0.8l0.21,-0.21l-0.04,0.83l-0.22,0.19ZM696.03,500.29l-0.19,0.36l0.37,0.59l0.59,-0.17l0.69,-0.86l0.89,0.17l-0.49,0.97l0.49,0.51l0.6,-0.2l0.44,-0.59l0.13,0.27l-0.65,0.85l0.07,0.57l-0.32,0.09l-0.24,-0.83l-0.68,-0.71l-1.19,0.27l-0.74,-0.45l-0.13,-0.43l0.35,-0.4ZM697.84,503.41l-0.02,0.02l-0.01,-0.01l0.03,-0.01ZM697.69,505.53l1.21,-1.47l1.28,-0.58l0.14,0.33l-1.01,0.24l-0.3,0.44l0.4,0.35l1.15,0.15l0.07,0.3l-0.82,0.92l0.28,0.56l0.53,-0.01l1.02,-0.87l0.17,-0.72l0.96,0.23l-0.44,0.91l0.49,0.27l0.45,-0.14l0.19,0.94l-0.7,0.47l0.16,0.63l1.68,1.31l1.17,-0.26l-0.32,2.55l0.34,0.66l0.43,-0.19l0.54,-1.08l-0.12,-1.02l0.48,0.08l-0.4,1.24l0.15,0.56l0.69,0.11l0.53,-1.32l1.06,0.31l-0.12,1.5l-2.03,0.86l-0.29,0.46l0.21,0.67l3.15,-0.37l0.01,1.37l-0.41,0.6l0.59,0.39l0.97,-0.82l0.15,-1.71l0.59,-0.14l0.26,1.19l-0.58,1.28l1.1,0.04l0.62,-0.88l-0.04,0.62l0.48,0.37l0.27,-0.15l-0.12,0.81l-0.67,0.47l-0.28,0.63l-1.18,0.73l-2.49,0.28l-0.46,1.71l0.57,0.27l0.62,-0.56l0.67,1.05l0.66,0.02l0.23,-0.46l-0.46,-0.94l1.05,0.08l0.71,-0.62l1.2,-0.33l0.42,-0.72l0.62,-0.27l0.13,-0.68l0.27,-0.01l0.57,0.35l-0.5,0.14l-0.28,0.5l0.44,0.41l0.58,-0.02l-0.22,0.99l0.25,0.41l0.66,-0.37l0.35,0.16l-0.84,1.07l0.06,0.67l0.65,0.1l0.66,-0.36l0.73,0.45l0.4,-0.35l0.12,-0.76l1.44,0.52l0.21,0.76l-0.92,1.11l0.53,0.58l1.41,-0.58l0.12,0.47l-0.41,0.55l0.04,0.61l-1.06,1.02l-0.67,1.25l-1.48,0.58l-0.62,-0.22l-0.6,0.4l-0.46,1.24l0.53,0.15l1.22,-0.6l-1.46,3.18l-0.05,0.31l0.52,0.44l0.57,-0.34l0.91,-1.39l0.93,-2.23l1.0,-0.4l-0.29,1.33l0.62,0.69l0.61,-1.64l0.69,-0.01l0.43,-0.88l0.55,-0.31l0.96,-0.01l0.21,-0.69l1.05,-0.57l-0.44,1.25l0.84,1.88l-0.67,0.73l-1.34,0.68l-0.14,1.17l0.37,0.5l-1.45,0.73l0.01,0.72l0.31,0.11l-1.25,1.46l0.46,0.55l-1.25,1.18l0.44,0.58l2.18,-1.11l0.09,-1.23l0.86,-0.89l0.16,-0.72l0.77,-0.03l1.16,-0.66l0.72,0.04l0.34,-0.45l0.3,0.01l0.37,1.03l0.55,0.25l0.4,-0.75l0.95,0.44l-0.18,0.32l-1.47,0.33l-0.95,1.54l-0.01,0.73l0.73,-0.07l0.49,-0.71l0.78,-0.42l0.74,1.54l0.56,0.1l1.0,-1.67l0.35,0.37l0.62,-0.39l0.02,-0.85l0.6,0.72l-0.34,1.3l0.43,0.73l0.35,0.27l1.01,-0.06l0.69,0.78l0.0,0.5l1.04,0.58l-1.38,1.23l-0.03,0.93l-1.56,0.45l-0.27,1.54l-2.01,-0.32l-0.25,0.64l0.19,0.24l2.15,0.88l0.91,-0.28l1.09,-1.06l1.22,-0.19l1.37,0.3l0.32,0.13l-0.52,0.68l0.65,0.3l0.26,0.8l-0.99,0.53l-0.19,0.63l0.33,0.32l1.36,0.18l0.3,0.5l0.46,0.19l0.41,-0.24l0.29,0.29l0.55,-0.51l0.62,0.17l1.44,-0.59l1.45,0.33l0.47,1.67l-0.97,0.45l-0.38,0.54l-0.62,1.94l0.28,1.04l-1.07,0.77l-0.71,-0.04l-0.49,0.33l0.61,2.02l-0.36,0.42l-4.73,-0.44l1.24,-0.79l2.21,-0.68l0.25,-0.4l-0.81,-0.5l-2.68,0.68l-0.55,0.44l-1.09,-0.08l-0.49,0.41l-0.22,0.99l0.36,0.64l5.05,0.99l-0.89,0.22l-0.25,0.62l0.41,0.27l2.62,-0.18l1.27,-0.49l0.93,0.2l0.56,-0.25l0.51,0.28l-0.61,0.54l-2.81,0.49l-0.54,0.59l-0.28,1.41l0.28,0.15l3.06,-0.22l-0.02,0.33l0.96,0.46l-1.37,0.94l-1.09,-0.04l-0.34,0.31l0.16,0.76l1.04,0.73l1.03,0.18l0.56,-0.43l1.61,-0.1l0.97,-0.6l0.76,0.2l1.48,-0.96l-0.21,1.32l0.55,0.37l-0.55,0.77l0.19,0.56l-0.32,1.03l1.47,0.69l1.52,-0.61l0.48,0.14l0.6,-0.57l0.58,0.38l-0.9,0.49l-0.01,0.65l1.33,0.47l1.7,-0.86l1.74,-0.31l0.19,0.44l-0.41,0.75l-1.47,0.65l0.21,0.67l0.56,0.25l1.92,-0.77l0.6,-1.24l0.51,0.98l-0.38,0.75l0.46,0.66l-0.14,1.23l0.53,0.45l0.76,-1.77l-0.15,-3.1l0.55,0.28l0.58,-0.15l0.03,1.06l-0.91,0.91l0.04,1.48l0.37,0.32l0.88,-0.92l0.01,1.78l0.23,0.41l0.67,-0.3l-0.55,1.03l0.37,0.82l-0.09,0.75l0.19,0.41l0.45,-0.03l0.38,-0.45l-0.04,0.62l-0.71,1.04l0.03,1.21l-0.46,0.73l0.1,0.53l0.54,-0.05l0.6,-0.86l-0.04,1.0l-1.17,1.98l0.49,1.28l0.46,-0.28l0.75,-1.92l0.56,-0.54l0.07,-1.09l0.71,-0.41l0.51,-1.51l0.42,-0.38l0.23,0.96l0.46,-0.14l0.34,-0.75l-1.12,3.19l0.36,1.06l0.43,-0.19l1.32,-2.78l0.27,-1.92l0.88,-0.36l0.44,-1.72l0.57,0.65l0.15,0.72l-0.78,1.12l-1.06,0.4l0.32,1.13l0.6,0.06l0.26,-0.54l0.49,0.27l0.7,-0.11l0.51,-0.9l1.02,-0.03l0.78,-1.05l0.58,0.28l-0.89,2.37l-0.9,1.04l0.17,0.63l-0.8,1.49l0.45,1.26l-0.65,1.0l0.16,0.62l0.34,0.14l0.59,-0.18l0.88,-1.1l0.11,-0.44l-0.51,-1.33l1.2,-1.77l0.91,-2.17l0.7,0.94l0.65,-0.15l0.89,-1.39l0.02,-0.96l1.26,-0.4l0.1,-0.99l0.4,0.04l-0.18,2.03l0.4,0.39l0.53,-0.33l0.65,0.29l-0.61,1.49l0.48,0.25l0.67,-0.26l0.5,0.69l1.28,-0.46l0.4,0.59l0.5,-0.01l0.19,-0.47l1.24,-0.04l0.63,0.43l0.66,-0.44l0.75,0.44l0.57,-0.32l-0.19,-0.82l1.25,-0.48l0.78,0.67l1.47,-0.42l0.48,0.28l1.19,-0.94l1.0,0.75l0.52,-0.08l0.79,0.49l1.29,-0.43l0.73,-0.65l0.99,0.79l-0.17,0.61l0.69,0.2l-0.04,0.32l-2.3,0.88l-0.54,0.51l0.43,0.75l1.45,-0.47l-0.65,1.12l-2.36,0.59l-2.86,1.73l-0.63,1.34l0.44,0.77l-1.94,1.14l-2.0,2.4l-1.59,0.57l-4.59,3.5l-1.34,0.21l-0.64,0.52l0.02,0.77l1.19,0.5l2.35,-1.12l2.03,-1.52l-0.03,0.33l0.48,0.25l0.63,-0.16l-0.41,0.6l-1.83,1.13l-2.0,2.67l-3.76,0.96l-0.45,0.5l0.12,0.58l-1.41,1.11l-0.58,-0.13l-0.44,0.59l1.0,0.75l0.06,1.7l0.69,1.02l-2.41,-0.59l-0.94,-0.59l-4.79,-0.39l-0.75,-0.8l-0.69,0.12l0.27,1.24l-0.38,0.97l0.35,0.59l3.26,-0.69l2.18,0.3l2.27,0.89l2.17,0.4l-2.62,2.84l-0.04,0.56l0.42,0.43l1.55,-0.45l-1.4,0.94l-0.16,0.6l0.52,0.24l1.28,-0.51l1.07,-0.9l0.83,0.15l0.31,-0.75l-0.36,-0.5l0.63,-0.65l1.03,-2.52l0.66,-0.33l0.1,-0.42l-0.29,-0.31l2.55,-1.52l1.37,-2.76l2.28,-1.07l0.51,-1.11l-0.06,-0.62l-0.83,-0.68l1.21,-2.08l0.03,-0.87l1.65,-1.1l3.13,-2.92l0.65,-0.2l0.71,-0.92l3.25,-0.59l0.5,-0.7l-0.75,-0.57l-1.61,0.39l-0.9,-0.18l-1.58,0.38l-0.92,1.24l-0.95,-0.28l0.12,-0.9l0.83,-0.25l0.42,-0.75l1.74,-0.64l1.03,0.17l3.07,-0.76l0.56,0.29l1.2,-0.93l0.61,0.24l2.07,2.23l1.09,0.59l0.42,1.18l1.26,0.49l0.19,1.3l-2.9,3.24l-0.18,0.91l0.21,0.41l0.46,-0.06l0.59,-0.61l0.22,0.2l0.93,-0.29l-0.02,0.42l0.6,0.43l-0.23,1.53l0.2,0.42l1.35,-0.49l-0.04,-1.08l0.95,-1.53l-0.33,-1.29l0.42,-0.53l0.28,-1.75l1.09,-0.23l1.33,-0.99l0.54,0.16l-0.82,0.48l0.48,0.52l3.41,-0.05l0.69,-0.42l0.14,0.42l0.98,-0.09l0.42,0.67l2.36,0.28l0.81,0.69l-0.23,0.59l0.4,0.5l0.62,-0.17l0.39,-0.76l0.32,0.03l0.39,1.44l0.81,-0.21l-0.26,0.48l0.62,0.6l-0.11,0.35l1.23,0.68l-0.27,0.64l-1.18,0.06l-0.27,0.53l0.93,0.4l-0.08,0.69l-1.31,0.15l-1.04,0.54l-0.19,0.5l0.8,0.26l-0.06,0.62l0.53,0.27l0.46,-0.21l0.28,-0.66l1.23,-0.2l0.16,0.52l0.76,0.12l0.73,0.83l-1.35,1.01l-0.27,0.56l-1.53,0.04l-0.22,0.59l0.6,0.55l1.24,0.16l1.33,0.9l-1.49,0.4l-0.08,0.83l1.44,-0.22l-0.31,0.65l-1.3,1.06l-0.9,-0.23l-1.9,0.25l-0.72,0.58l1.1,0.55l1.07,-0.29l1.16,0.14l1.45,-0.77l1.42,0.1l1.44,-0.55l0.41,0.23l0.54,-0.28l0.55,0.73l0.79,-0.3l0.34,0.7l-0.59,-0.18l-0.89,0.32l-0.04,0.72l-3.99,-0.27l-0.33,0.07l-0.2,0.68l0.76,0.49l1.66,-0.13l3.09,0.67l-0.07,0.54l0.86,0.9l0.62,0.06l0.47,0.89l-0.87,0.56l0.07,0.61l0.36,0.2l-0.14,0.29l-0.46,0.42l-0.96,0.1l-0.08,0.73l0.85,0.4l0.06,0.39l-1.6,1.97l-0.54,1.51l-1.26,0.78l-0.15,0.74l-0.6,0.22l-0.16,0.9l-0.71,1.15l-0.99,0.55l0.07,1.34l-0.68,1.28l0.03,0.76l-1.14,0.3l0.15,1.24l-0.9,0.27l-3.54,-9.36l-0.52,-0.23l-35.41,12.67l-33.8,10.74l0.05,-0.71l-1.71,-2.85l-0.93,-0.79l0.17,-0.44l-0.26,-0.43l-0.57,-0.17l-2.03,0.31l-1.48,-1.45l0.43,-1.47l0.91,-1.14l5.09,-2.36l-0.1,-0.81l-0.51,-0.48l-2.37,-0.8l-0.52,-1.28l-0.71,-0.03l-0.65,1.67l-3.72,2.2l-0.52,1.08l0.25,2.29l0.94,1.3l0.63,1.63l-0.34,2.5l1.11,1.86l-0.71,0.77l0.46,1.83l-0.26,-0.16l-0.61,0.33l-0.03,0.86l1.07,2.64l0.95,1.12l-0.28,1.2l-1.36,1.67l-2.01,-1.64l-1.2,-0.53l-1.37,0.13l-0.6,0.43l-0.11,0.65l-0.7,-0.33l-1.5,0.25l-0.26,-0.68l-1.34,-0.66l-0.91,0.41l-0.65,-2.06l-0.56,-0.04l-1.76,-1.75l-0.47,1.36l-0.62,0.28l-0.14,-1.04l-0.55,-0.3l-0.78,0.57l-1.11,-0.03l-1.48,1.15l-0.74,-0.14l-0.37,-1.35l-1.5,-0.62l-1.48,-1.26l-0.59,0.71l0.97,2.25l-0.39,0.26l-1.9,-2.81l0.14,-0.41l0.65,0.06l0.45,-0.5l-1.85,-4.51l0.79,0.47l0.52,-0.62l-2.23,-3.68l0.93,0.01l0.19,-0.47l-0.3,-0.96l-1.31,-1.69l-0.94,-0.54l-0.71,0.24l-0.33,1.54l-1.2,0.9l0.32,2.45l-0.99,0.76l0.12,0.82l-0.46,-0.14l-0.4,0.68l-1.6,-0.89l-0.58,-1.5l-0.53,-0.23l-0.83,0.6l-0.18,0.61l-1.19,-0.46l-0.46,-0.49l-1.24,-3.1l0.86,-1.04l1.84,0.33l0.27,0.57l0.51,0.13l0.73,-0.59l-0.62,-3.99l-0.75,-0.9l0.86,-1.08l-0.07,-0.6l-1.94,-1.38l-3.37,-0.19l-0.94,-0.86l-0.61,-1.14l-1.84,-0.88l0.38,-0.32l-0.13,-0.89l-0.91,-0.33l-0.67,-1.14l-2.25,-1.26l-0.04,-1.47l1.12,-1.64l-0.29,-0.92l-1.56,-1.71l-0.31,-1.14l0.71,-0.9l1.24,-0.55l0.24,-0.41l-0.29,-1.34l2.27,1.18l0.51,-0.25l0.16,-1.0l-0.42,-0.67l0.84,-0.98l0.41,-1.56l-0.43,-1.17l-2.25,-1.33l-2.3,-2.41l-0.36,-0.8l0.26,-0.35l0.6,0.08l-0.17,0.56l0.35,0.57l3.3,1.27l0.58,0.94l0.85,0.58l2.47,0.67l0.61,-0.26l0.01,-0.8l0.55,-0.25l0.23,-0.92l-1.85,-2.05l0.48,-0.97l-1.58,-1.83l-0.09,-1.14l0.41,-0.65l-0.39,-0.66l0.69,-0.18l4.57,3.66l1.4,0.26l1.2,0.7l0.87,-0.48l0.92,0.0l0.76,1.43l2.24,1.56l0.63,-0.76l0.84,0.15l0.8,-0.4l0.36,-0.71l-0.49,-1.05l1.58,-0.47l0.57,-0.59l0.63,-2.12l1.49,0.03l1.4,1.15l0.66,0.07l0.18,0.96l0.59,0.71l2.31,-0.49l0.85,-1.46l0.41,-0.06l2.36,0.71l1.03,1.13l0.93,0.34l1.77,-0.35l0.82,-0.97l0.55,0.1l0.47,-0.4l-0.12,-0.72l-0.96,-0.96l-1.38,-0.65l0.52,-0.98l-0.48,-0.98l0.04,-0.82l1.45,0.33l0.84,-0.52l-0.13,-1.6l-0.86,-2.36l0.09,-1.19l0.78,-0.5l0.29,-0.69l-0.05,-0.51l-0.56,-0.32l-1.26,0.84l-0.77,-0.14l0.82,-0.63l0.01,-0.71l1.65,-0.79l0.19,-0.89l-0.24,-0.56l-0.47,-0.2l-3.07,0.68l-1.07,-0.12l0.58,-1.08l-0.44,-2.05l-0.27,-0.45l-0.62,-0.18l-0.16,-1.95l-0.87,-0.34l-1.22,-1.39l1.23,-0.85l0.84,-1.18l1.0,-0.54l0.24,-0.48l-0.23,-0.57l-0.51,-0.1l-1.3,0.63l-1.02,-0.23l-1.02,0.35l-0.43,-0.32l0.01,-0.64l-0.54,-0.29l-1.12,1.1l-0.15,-0.79l0.91,-0.83l-0.03,-1.01l-1.08,-0.55l-1.33,0.31l-0.42,-0.42l-0.02,-0.84l-0.5,-0.95l1.38,-0.28l0.91,-1.01l-0.23,-0.5l-0.76,-0.29l-0.48,-1.3l-2.4,-2.03l0.07,-0.83l0.74,-0.66l-0.33,-1.27l0.95,-0.56l0.16,-0.48l-0.74,-0.94l0.17,-1.17l-0.42,-1.05l0.57,-0.95l-0.31,-1.24l0.09,-1.36l-1.39,-1.2l0.94,-1.54l-0.99,-1.39l-0.53,-1.77l0.91,-1.89l0.01,-1.33l-0.65,-0.67l-0.76,0.39l-0.1,0.77l-0.5,-0.48l-1.2,0.29l-0.4,-0.8l-0.56,-0.35l-0.9,-0.04l-0.36,0.57l-2.06,-2.73l-0.44,-1.22l-2.15,-0.07l-0.15,-1.73l1.09,-0.79l0.36,-0.66l-0.1,-2.05l0.86,-0.71l0.29,-1.2l1.13,-0.54l0.26,-0.9l-1.33,-1.84l-0.49,0.02l-0.81,0.98l-0.34,-0.16l-0.39,-0.85l0.05,-0.9l1.24,-0.91l0.82,-0.13l2.45,-1.25l0.42,-0.66l-0.07,-0.7l-1.4,-1.26l-1.94,-0.37l-0.78,0.53l-0.25,0.8l-1.29,0.52l-1.01,1.64l-0.81,-0.16l-0.3,-1.21l-0.89,-0.63l-2.56,0.63l-1.66,-0.61l-0.97,0.85l0.1,-0.63l-0.36,-0.43l0.45,-1.16l0.96,0.46l2.31,0.23l1.22,-0.56l0.29,-0.88l-1.03,-1.09l-1.22,-0.08l-0.99,-1.57l-0.88,-4.18l1.03,-1.31l-0.19,-0.83l-0.59,-0.35l-0.9,0.2l-1.77,2.04l-0.73,-0.95l-1.3,-0.55l-0.36,-1.4l0.81,-1.28l-0.85,-1.96l0.39,-0.6l-0.17,-0.45l0.67,-0.48l-0.02,-0.65l-0.49,-0.78l-1.06,-0.15ZM749.43,644.67l-0.21,0.06l-0.38,-0.16l0.32,0.07l0.27,0.03ZM827.52,605.46l1.17,-0.58l0.2,0.18l-0.04,0.35l-0.71,0.3l-0.62,-0.26ZM813.86,589.78l0.16,-0.56l0.66,-0.26l0.12,0.19l-0.94,0.63ZM742.78,556.73l0.27,-0.15l0.42,0.38l0.74,0.05l-1.11,0.28l-0.32,-0.55ZM743.07,555.94l0.11,-0.16l0.77,-0.06l-0.64,0.05l-0.24,0.16ZM725.03,532.72l0.15,-0.75l1.74,-0.61l-0.23,0.87l-1.66,0.49ZM716.21,518.51l0.26,-0.13l0.06,0.04l-0.32,0.09ZM701.98,503.42l-0.06,0.03l-0.14,-0.01l0.18,-0.05l0.02,0.03ZM746.33,561.6l1.29,-0.12l1.03,-0.44l-0.04,0.65l-2.28,-0.08ZM765.04,574.52l-0.09,-0.09l0.07,-0.12l0.12,0.1l-0.09,0.11ZM766.11,573.29l-0.2,-0.4l-0.0,-0.06l0.04,0.0l0.17,0.45ZM777.44,577.1l0.21,-2.19l0.71,0.01l-0.44,0.65l-0.49,1.53ZM788.01,592.75l1.22,-1.14l0.8,-0.31l1.1,-1.65l0.44,-0.22l-1.08,2.63l-2.49,0.7ZM779.46,607.1l0.03,-0.02l0.01,0.02l-0.04,0.0ZM820.61,590.82l0.0,0.0l-0.0,0.0l-0.0,-0.01ZM701.88,596.17l-0.57,-0.35l-0.42,-0.33l0.73,0.21l0.27,0.47ZM825.79,598.33l0.24,-0.16l0.14,-0.18l-0.36,0.57l-0.02,-0.23ZM821.86,591.85l1.18,-0.3l0.11,0.43l-1.18,0.08l-0.11,-0.21ZM809.43,590.34l0.28,0.04l-0.13,0.1l-0.15,-0.14ZM808.53,593.04l-0.01,-0.07l0.06,-0.23l0.07,0.28l-0.11,0.02ZM801.05,579.04l0.02,-0.15l-0.02,-0.2l0.27,0.24l-0.27,0.12ZM790.5,576.74l1.36,-1.34l0.14,0.95l0.53,0.49l-0.39,0.57l-0.93,0.16l-0.71,-0.82ZM757.4,566.9l0.54,-0.08l0.35,0.26l-0.22,0.16l-0.67,-0.34ZM753.32,565.66l0.39,-0.32l0.08,-0.97l1.15,0.24l-0.22,1.06l-1.41,-0.01ZM748.73,558.73l-0.2,-0.17l0.27,-0.02l-0.08,0.19ZM747.96,558.45l-0.96,0.19l-0.02,-0.12l0.72,-0.16l0.26,0.09ZM750.06,555.65l0.07,-0.3l0.2,-0.06l0.02,0.17l-0.29,0.18ZM744.69,552.98l0.63,-1.08l0.02,-0.72l0.75,0.24l-0.13,0.41l0.44,0.61l-0.83,0.06l-0.16,0.95l-0.37,0.33l-0.35,-0.8ZM745.53,555.04l0.78,-0.94l0.61,-0.02l0.44,1.15l-0.05,0.83l-1.79,-1.02ZM739.57,542.24l0.1,-0.7l0.05,-0.02l0.14,0.64l-0.29,0.08ZM737.12,536.75l0.17,-0.49l0.37,0.18l0.66,1.05l-0.18,0.15l-1.02,-0.9ZM737.02,541.9l0.57,-0.02l0.36,-0.73l0.61,0.38l-0.67,1.26l-0.88,-0.88ZM734.6,536.57l0.49,-1.0l0.84,0.73l-0.23,0.65l-1.11,-0.37ZM704.55,508.2l0.25,-0.58l0.82,0.14l-0.81,0.77l-0.26,-0.33ZM704.52,507.29l-0.04,-0.66l0.08,0.11l-0.04,0.55Z\",\n            name: \"Newfoundland and Labrador\"\n          },\n          \"CA-ON\": {\n            path: \"M399.18,732.97l3.61,-62.03l17.48,-16.01l50.17,-56.68l2.38,2.85l1.41,0.72l2.09,2.16l3.34,1.59l0.32,0.93l2.49,3.6l0.21,0.78l1.14,1.35l-0.34,0.82l0.41,0.83l0.93,-0.9l0.33,0.57l1.19,0.13l-0.12,0.67l0.59,0.42l0.37,-0.21l4.38,0.75l6.3,3.23l3.98,0.98l2.15,0.97l2.94,3.12l3.19,1.18l0.02,0.41l-0.73,0.42l-1.87,3.35l-0.2,2.26l0.59,0.29l0.53,-0.6l0.5,-1.93l1.17,-2.2l0.8,-0.71l1.45,-0.24l3.65,0.71l3.97,-1.2l1.6,0.26l1.47,-0.99l1.54,0.65l0.54,1.07l1.21,-0.17l0.13,1.07l0.43,0.57l0.68,-0.28l-0.38,-1.86l3.24,0.33l0.69,0.35l1.97,-0.84l0.55,0.68l-0.33,1.5l0.67,-0.0l0.48,-0.78l1.18,0.14l1.11,-0.61l0.85,0.4l0.9,-0.04l0.79,0.99l1.11,0.18l0.24,2.22l0.89,1.67l-1.85,8.93l0.53,3.1l0.67,1.51l0.69,0.04l0.76,0.78l1.61,4.42l-0.68,3.75l1.63,5.71l-1.28,1.28l-0.38,3.56l0.34,1.55l2.94,1.95l1.54,2.72l1.27,0.85l1.71,2.1l1.35,0.88l-0.11,0.68l0.43,1.19l-2.0,1.21l-0.77,0.15l-0.57,0.56l-0.12,0.8l0.39,0.6l0.27,-0.03l1.21,-0.98l2.42,-0.18l1.79,2.17l4.33,1.42l0.88,1.65l1.7,0.86l2.17,2.18l1.19,3.1l1.0,0.99l0.31,1.74l-2.02,1.29l-1.13,2.06l-1.21,0.9l-0.45,0.98l-0.86,0.68l-0.29,0.63l0.81,0.81l0.63,0.0l0.95,-2.17l1.62,-0.81l1.32,-2.12l1.59,-1.41l3.03,0.45l0.5,0.44l0.92,0.13l2.89,1.98l0.59,1.04l2.24,1.83l7.01,59.67l-0.5,2.75l0.48,1.12l1.53,1.9l0.61,3.39l2.03,2.63l1.76,1.66l1.07,2.0l1.14,1.05l1.33,2.35l2.44,1.53l0.44,0.79l0.64,0.34l4.21,0.28l0.6,0.39l2.46,-0.27l0.96,0.32l1.48,-0.15l3.27,0.47l2.39,0.86l2.13,1.35l0.58,1.44l0.77,0.72l2.97,1.37l1.25,-0.14l0.4,-0.74l-0.27,-1.02l0.78,-0.05l0.75,1.94l0.75,0.63l1.26,2.41l0.84,0.43l2.11,0.29l1.11,0.66l1.08,-0.1l0.74,-0.95l0.94,-0.29l1.1,0.16l2.36,1.74l1.37,-0.21l1.06,-1.56l1.04,-0.35l3.5,-2.3l2.72,-0.79l1.29,-0.96l2.06,-0.26l1.36,-0.65l1.31,0.6l1.64,0.2l-0.25,4.37l1.74,1.53l-1.12,0.9l-0.49,1.45l-1.92,1.85l-2.34,0.31l-4.21,3.29l-4.61,5.87l-0.78,1.45l-0.74,0.45l-1.02,1.74l-0.62,0.48l-2.83,1.26l-3.3,2.3l-1.55,0.2l-2.37,1.7l-0.49,-0.59l-0.62,-0.03l-0.35,0.38l-0.54,-0.59l-2.13,1.15l-0.76,-0.34l-0.64,0.55l-0.69,-0.07l-2.68,1.44l-0.39,1.13l0.45,0.24l-1.75,0.25l-0.41,0.48l-1.86,0.83l-4.68,1.11l-2.57,1.33l-1.36,-0.07l-3.16,1.34l-1.55,0.25l-1.68,1.0l-0.33,0.71l-2.62,2.68l-1.39,0.28l-0.34,0.81l-1.15,0.96l-0.11,1.25l-1.66,3.08l0.19,1.1l0.59,0.56l2.05,0.62l2.58,-0.18l0.9,0.25l2.09,-1.5l0.99,-0.29l0.21,3.11l0.44,0.35l0.11,0.95l1.64,0.99l-0.31,0.36l-1.64,0.78l-1.28,-0.28l-3.23,0.38l-0.52,0.46l-1.81,0.41l-1.14,-0.22l-1.42,0.76l-4.47,1.21l-1.73,1.55l-0.19,0.66l-0.35,-0.07l-0.52,0.45l-0.51,0.79l0.06,0.86l-6.1,-1.03l-3.85,0.33l-1.74,0.54l-2.51,1.81l-2.89,3.12l-0.52,1.54l-1.15,1.04l-1.8,0.33l-3.66,2.49l-1.43,1.98l-0.09,0.9l-1.16,-0.92l-0.76,-0.11l-2.24,1.16l-0.93,0.09l-2.5,-1.04l0.23,-3.72l1.37,-0.67l2.31,0.39l1.92,-0.15l2.07,-0.47l0.67,-0.49l0.34,-1.28l-0.4,-2.01l-2.62,-0.26l0.8,-0.66l0.5,-1.21l0.33,-2.5l-0.23,-0.88l0.63,-3.06l3.6,-1.93l1.28,-2.02l1.53,-0.91l1.19,-1.36l0.79,-2.06l-0.83,-9.21l-0.61,-2.59l0.88,-1.1l0.46,-1.2l0.15,-2.05l1.0,-1.44l1.1,-0.63l0.26,-1.3l1.06,-1.69l0.17,-0.89l-0.41,-0.98l-0.04,-1.96l-1.18,-1.48l0.03,-1.32l-0.37,-0.69l-0.93,-0.06l-1.97,-2.46l0.08,-0.46l-1.7,-0.54l0.08,-0.2l0.76,0.18l3.63,-0.35l-0.43,1.17l0.89,1.12l0.3,1.84l1.72,0.67l-0.25,0.6l0.56,0.33l0.39,-0.17l0.33,0.24l0.54,-0.36l0.13,0.47l-0.32,0.56l-1.12,1.02l0.07,0.86l0.59,0.2l1.53,-1.22l0.73,0.18l-0.2,3.37l0.73,0.14l1.19,-1.81l1.46,-0.74l1.29,1.87l0.94,0.06l0.86,0.64l4.81,1.08l1.27,-1.37l-0.05,-2.95l-0.3,-0.56l-1.36,-0.75l-0.09,-0.5l0.51,-0.04l0.4,-0.74l0.59,-0.17l-0.15,0.59l0.83,0.32l0.43,0.71l2.82,-0.09l0.24,-0.64l-0.74,-0.45l0.41,-0.84l-0.27,-0.96l-0.6,-0.04l-0.53,0.62l-0.98,-1.51l-0.99,-0.12l-0.32,-0.95l-0.65,-0.11l-0.26,-0.61l-0.79,-0.33l0.6,-0.32l0.2,-0.76l-0.48,-0.81l-1.23,-0.51l0.92,-1.39l-0.63,-1.56l-0.47,-0.33l-0.88,0.01l-0.69,0.43l-0.15,0.59l-0.7,-0.07l-0.23,-1.09l-0.96,-0.31l-0.07,-1.59l-0.5,-1.17l-0.72,-0.28l-0.21,0.75l-0.38,0.04l-0.16,-0.7l-0.64,-0.22l-0.89,-1.17l-0.14,-0.96l-0.88,-1.39l-0.43,-0.07l-0.38,-1.02l-1.01,-0.62l-0.57,0.46l-0.54,-0.33l-2.99,0.52l0.06,-0.75l-0.56,-0.51l-0.86,0.29l-0.36,0.68l-2.42,-0.2l-0.32,-0.34l0.11,-0.32l-0.55,-0.23l-0.27,-0.88l-1.22,-0.45l-0.72,0.76l-0.35,-0.3l-5.57,0.15l-1.54,-0.49l-0.07,-0.38l-0.48,-0.19l-1.21,0.19l-0.29,-0.21l-1.97,0.69l0.13,-0.33l-0.57,-0.46l-0.86,0.46l-3.28,0.67l-6.33,-0.98l-0.68,0.14l-0.73,-0.55l-1.19,0.24l-1.58,-0.28l-0.96,-0.63l-1.61,0.25l-0.66,-0.22l-0.44,-0.69l0.33,-2.01l-0.21,-0.47l-0.62,-0.28l-0.88,0.03l-1.05,0.73l-1.2,-0.16l-1.02,0.74l-0.89,-0.94l1.63,-2.22l0.19,-0.7l-0.71,-1.01l-0.82,0.15l-0.03,-0.84l0.56,-0.31l1.05,0.17l0.62,-1.12l-0.19,-0.53l-1.22,-0.9l-1.71,0.01l-0.56,0.46l-0.37,-0.55l-1.24,-0.32l0.1,-0.97l0.63,-0.88l-0.18,-0.72l0.27,-0.75l1.18,-1.73l0.06,-0.58l-0.65,-1.21l-0.75,-0.24l-0.57,-1.16l-2.32,-1.17l-0.59,-0.99l-0.68,-0.41l0.48,-1.35l-0.17,-0.52l0.99,-1.39l-0.56,-0.9l0.99,-1.16l-0.1,-1.08l-1.36,-0.44l-4.18,0.47l-1.75,0.64l-1.21,0.08l-3.76,-0.81l-2.61,-2.94l-1.38,-3.12l-0.08,-1.08l-0.46,-0.45l-0.69,-2.88l-1.15,-1.48l-0.4,-1.33l-0.8,-0.6l-1.4,0.31l-0.27,0.35l-0.25,-0.04l-0.15,-0.74l-1.25,-0.46l-1.76,1.04l-1.53,-0.93l-1.41,0.65l-1.97,0.21l-0.21,-0.45l-1.66,-0.77l-1.13,0.12l-0.46,-0.75l-0.83,0.19l-0.75,-0.69l-2.8,-0.59l-1.39,-1.42l-1.64,1.0l-1.12,-0.34l-0.29,0.52l0.37,1.13l-0.18,0.81l1.8,1.59l0.03,1.28l-0.74,1.13l-0.76,0.21l-0.6,-0.51l0.42,-1.45l-0.66,-1.82l-1.23,-0.38l-0.78,0.2l-0.8,1.37l-0.0,2.41l-0.88,0.55l-0.15,1.63l-0.55,0.23l-0.51,2.34l-1.08,0.6l0.52,-2.06l0.92,-1.46l-0.04,-0.53l-0.43,-0.37l-5.21,2.26l-0.74,1.43l0.37,1.11l-1.51,3.72l-1.04,0.36l-0.33,0.8l-1.45,0.94l-2.12,-0.31l-1.54,0.55l-0.74,-0.45l-0.91,-1.45l-0.86,-0.4l-5.03,0.53l-0.6,-0.37l-1.81,0.36l-0.87,-1.51l0.09,-0.61l-0.87,-0.58l-2.52,1.18l-2.39,1.81l-1.71,0.43l-1.39,-0.23l-0.36,-0.67l-1.14,-0.19l0.07,-0.57l-0.7,-0.89l-2.68,-1.04l-0.66,-1.62l-0.66,-0.48l-2.73,0.25l-0.49,0.74l0.11,0.94l-0.39,0.19l-0.83,-1.63l-0.03,-1.17l-0.45,-0.95l-0.59,-0.29l-1.87,-0.0l0.82,-0.28l0.26,-0.4l-0.3,-0.8l-2.92,-1.0l-1.16,-0.73l-3.39,-0.36l-1.63,0.22l-0.83,0.29l-0.54,0.96l-3.01,0.33l-0.49,-1.51l-0.59,-0.6l-4.31,-0.55l-0.17,-0.66l-0.57,-0.45l-2.28,0.08l-1.11,-0.46l-1.15,-1.26l0.09,-1.93l-0.93,-4.52l-0.23,-2.72l-1.22,-0.94l-2.44,-0.45ZM472.71,752.99l-0.12,0.04l-0.06,-0.0l0.02,-0.03l0.17,-0.01ZM478.59,747.88l0.15,0.64l-0.47,0.42l-0.49,-0.12l0.81,-0.94ZM477.23,749.43l-0.4,0.46l-0.17,0.72l0.06,-0.73l0.51,-0.46ZM617.39,818.97l1.96,-1.47l0.57,-0.1l0.18,0.8l0.76,0.04l0.5,-0.3l-0.01,-0.69l1.66,-0.66l-0.41,1.69l0.39,0.57l1.51,-0.3l-0.57,1.2l0.09,0.52l0.4,0.19l-1.15,0.86l-0.53,-0.19l0.4,-0.95l-0.17,-0.45l-0.93,0.43l-0.54,-0.54l-0.8,0.06l-1.84,0.67l-0.64,-0.34l-0.07,-0.75l-0.75,-0.29ZM624.98,820.15l0.01,-0.01l0.01,0.0l-0.02,0.01ZM625.55,816.29l-0.88,0.97l-0.46,0.08l0.55,-0.73l0.8,-0.31ZM540.65,627.23l-0.07,-0.12l0.08,-0.1l0.01,0.05l-0.02,0.17ZM631.49,815.38l-0.36,-0.28l0.23,-0.45l0.55,-0.02l-0.42,0.76ZM627.3,816.03l0.76,-0.4l0.07,-0.04l-0.19,0.32l-0.64,0.12ZM581.92,801.51l0.01,-0.5l0.57,0.08l-0.37,0.17l-0.22,0.24ZM582.54,809.21l0.08,-0.02l-0.04,0.08l-0.05,-0.06ZM575.98,691.9l1.12,-1.08l0.85,7.33l-1.08,-0.7l-0.91,-1.5l0.4,-2.7l-0.38,-1.35ZM544.08,793.09l0.64,0.68l0.69,-0.74l0.82,0.42l0.64,-0.7l0.82,-0.2l0.0,1.02l0.75,0.43l0.23,0.62l0.6,0.21l0.7,-0.36l0.45,0.45l0.58,-0.27l0.5,0.81l-1.53,-0.59l-2.46,0.08l-0.84,-0.54l-3.09,-0.53l0.04,-0.61l0.44,-0.17ZM551.8,795.48l0.54,-0.33l0.22,-1.0l-0.92,-0.74l0.51,-0.53l0.2,0.27l0.44,-0.15l0.37,-0.71l1.04,-0.37l0.21,0.71l0.84,0.06l1.09,1.55l0.72,-0.51l0.42,-1.47l1.23,-0.76l0.44,0.27l-0.0,1.0l1.05,0.28l-0.19,1.49l1.03,1.15l-0.71,0.35l-2.15,2.25l-0.45,-0.55l-1.03,-0.07l-0.86,-0.45l-0.34,-0.52l-2.37,-0.45l-1.33,-0.75ZM561.38,795.5l0.14,-1.12l0.31,-0.89l0.37,-0.6l-0.5,1.08l0.43,0.57l1.05,-0.18l-0.09,0.36l-2.12,3.83l-0.58,0.22l-0.22,-0.27l1.92,-2.1l-0.14,-0.72l-0.57,-0.18ZM561.46,799.85l0.39,-0.41l0.14,-0.08l-0.3,0.47l-0.22,0.02ZM559.12,790.23l0.46,-0.13l0.58,0.12l-0.77,0.13l-0.27,-0.12ZM549.83,792.88l0.11,-0.31l0.76,-0.11l-0.14,0.31l-0.72,0.11ZM540.38,793.88l0.61,-1.05l0.4,-0.17l0.82,0.55l-0.62,1.12l-1.21,-0.46ZM532.26,787.83l1.6,-0.01l1.59,1.01l-0.18,0.7l-0.88,0.31l-0.15,0.99l-1.53,-1.95l-0.45,-1.06ZM508.42,762.98l0.75,-0.68l1.29,-0.13l1.11,0.39l-0.97,0.41l-2.18,0.01ZM486.18,744.42l0.13,-0.01l0.53,0.92l-0.33,0.05l-0.33,-0.95ZM482.14,744.75l1.2,-0.66l1.87,0.08l-0.46,1.02l-1.2,-0.05l-1.18,0.8l-0.23,-1.19ZM469.8,755.19l0.19,-0.21l0.18,-0.01l-0.36,0.23Z\",\n            name: \"Ontario\"\n          },\n          \"CA-AB\": {\n            path: \"M139.75,606.41l0.38,-0.39l-0.02,-0.65l1.18,0.57l0.81,-0.56l-0.36,-1.98l-0.93,-0.51l0.38,-1.01l-0.68,-0.55l0.01,-0.33l37.32,-108.88l22.35,7.31l22.92,6.81l23.1,6.18l22.87,5.45l-44.18,197.52l-23.74,-5.6l-21.73,-5.63l0.08,-0.8l-0.96,-1.24l0.17,-0.95l-0.81,-1.03l-1.42,-0.63l0.23,-0.86l-0.52,-0.39l-0.17,-1.26l-0.89,-1.31l0.8,-2.77l-1.36,-0.54l-0.36,-0.46l0.84,-0.39l1.4,-2.48l-0.07,-2.44l0.13,-0.54l0.67,-0.45l0.24,-1.71l-0.41,-1.28l0.52,-4.26l-0.64,-1.2l-0.83,-3.13l-1.24,-1.02l-1.26,0.24l-0.48,-1.21l0.36,-0.7l-0.28,-1.21l-0.72,-0.4l-1.19,-1.57l-0.23,-0.8l-0.55,-0.38l0.84,-0.16l-0.02,-1.71l-1.21,-1.73l-0.1,-0.81l-1.92,-1.32l-0.23,-0.43l0.28,-1.29l-0.17,-0.62l-0.92,-0.74l-0.13,-0.8l-0.83,-0.44l-0.08,-1.12l0.37,-1.35l-0.74,-1.03l0.08,-0.91l-0.53,-0.7l-0.09,-0.87l-0.74,-0.79l0.15,-1.06l-0.35,-2.08l-1.26,-0.33l-1.17,0.69l-0.24,0.56l-0.62,-0.25l-0.14,-3.71l-1.62,-3.01l0.14,-2.56l-0.41,-0.29l-0.84,0.64l-1.09,-0.63l-1.03,-0.0l-0.4,-1.01l-0.81,-0.6l-0.28,-1.09l1.11,-0.63l0.48,-1.28l-0.31,-0.63l-1.56,-1.12l-0.59,-1.12l-0.67,0.05l-0.69,1.15l-1.39,-0.1l-0.07,-0.72l0.77,-0.54l-0.52,-1.06l0.22,-0.72l-0.41,-1.19l0.77,-0.81l-0.14,-1.64l-0.53,-0.78l0.37,-1.01l-0.53,-1.4l-1.3,-0.18l-0.07,-1.34l0.38,-1.17l-0.69,-1.05l0.31,-0.71l-0.69,-1.67l-1.29,-1.58l-0.74,0.2l-0.57,1.02l-1.63,-1.38l-0.38,-1.59l0.04,-1.64l-2.21,-1.16l-0.68,0.12l-0.5,-0.76l-0.25,-2.18l-0.69,-0.43Z\",\n            name: \"Alberta\"\n          }\n        },\n        height: 867.2308867877658,\n        projection: {\n          type: \"lcc\",\n          centralMeridian: -90\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"ch_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 497.64536275046987,\n          bbox: [{\n            y: -5769822.077045524,\n            x: 663222.5452325371\n          }, {\n            y: -5491965.667990425,\n            x: 1165730.52956792\n          }],\n          left: 0\n        }],\n        paths: {\n          \"CH-SO\": {\n            path: \"M340.89,78.89l8.38,4.47l1.01,1.24l-2.2,3.11l-2.13,1.45l-0.49,0.75l-0.34,4.14l-0.58,1.98l-1.55,1.66l-7.35,1.98l-0.31,0.35l-0.18,2.18l0.53,3.39l1.13,3.25l0.91,0.93l1.21,0.39l6.96,-0.56l4.86,1.01l4.14,1.89l4.83,3.53l5.48,1.59l0.47,-0.24l0.7,-1.7l3.05,-4.49l2.36,-1.34l4.09,-1.01l1.57,-1.01l4.85,-1.89l1.39,-1.98l1.06,-2.54l4.86,-0.28l4.28,-1.02l3.98,-2.49l1.27,-1.62l-0.2,-1.37l-1.23,-1.85l-0.33,-1.26l1.86,-3.99l2.64,0.41l1.59,1.65l0.29,0.68l0.09,3.56l1.39,0.94l0.82,3.32l1.0,1.32l1.87,1.54l2.03,0.97l2.21,0.54l0.2,4.4l-1.39,2.75l-2.28,2.97l-2.67,5.37l-2.8,1.44l-12.57,-1.64l-3.52,-0.8l-8.91,7.03l-5.44,8.94l-1.37,1.49l-6.68,1.41l-2.03,-0.55l-3.81,1.23l-5.34,-0.23l-2.18,-1.2l-6.71,-6.94l-0.43,-0.1l-7.16,2.76l-13.27,1.42l-0.24,0.68l2.78,2.87l0.83,2.64l0.26,2.14l3.71,3.86l3.69,1.49l3.12,3.96l3.81,6.38l0.3,1.28l-0.72,1.37l-2.52,1.41l-1.21,1.59l-1.96,1.73l-1.05,0.15l-9.06,-0.24l-5.26,-3.14l-2.69,0.34l-2.84,2.39l-5.21,6.56l-2.79,2.16l-5.28,2.11l-0.82,0.82l-0.04,1.52l1.29,3.3l-0.13,1.25l-0.58,0.69l-1.16,0.62l-3.32,0.97l-1.54,-3.02l-0.15,-2.2l-0.76,-0.48l-7.44,1.65l-0.55,-0.23l-1.04,-0.75l-2.38,-3.96l0.05,-1.42l3.81,0.2l2.12,0.46l4.52,-0.91l1.61,-0.81l0.37,-1.51l-0.39,-2.43l0.32,-1.05l1.16,-1.5l2.04,-1.46l2.63,0.75l1.69,-0.32l2.33,-1.46l0.64,-1.76l-2.22,-2.17l-0.71,-4.29l-0.46,-0.34l-3.19,0.57l-2.54,1.57l-1.75,0.45l-4.39,4.14l-1.48,0.7l-1.94,0.3l-1.1,-0.23l-0.16,-1.93l-1.88,-3.73l-1.18,-0.78l-3.04,-1.13l-0.52,-0.57l-2.19,-4.23l0.38,-0.88l14.79,-5.72l0.24,-0.49l-0.45,-1.5l3.94,-2.89l4.5,-1.59l4.14,-3.53l2.99,-1.85l6.48,-1.79l1.96,-1.16l1.34,-1.41l1.87,-4.27l1.88,-0.36l0.52,-2.14l-0.51,-2.34l-0.66,-0.87l-0.71,-0.62l-1.44,-0.34l-3.1,-2.22l-1.83,-2.62l-1.78,-1.16l-1.87,-0.54l-5.24,-0.26l-9.06,-1.99l2.63,-3.55l2.5,-0.48l1.29,0.2l3.36,1.66l3.52,0.46l1.89,-0.44l1.55,-0.84l2.32,-3.63l0.62,-0.46l7.43,-0.92l0.53,-0.7l-0.63,-2.04l0.12,-1.12l5.27,-0.61l2.78,-2.41l2.31,-5.82l-0.85,-1.79l-2.69,-1.14l1.02,-2.28l1.38,-0.26l5.34,0.48l1.16,-0.63l0.46,-0.64l0.09,-0.86l1.11,0.07ZM305.81,77.03l2.71,-0.28l5.24,1.51l0.72,1.4l0.12,6.29l-12.28,2.22l-3.0,-0.06l-1.21,-2.89l-0.21,-4.83l1.22,0.64l2.87,0.25l3.11,-2.43l0.72,-1.8ZM292.36,89.43l1.58,1.78l2.81,0.48l2.13,3.04l0.04,1.26l-2.68,1.59l-10.62,0.35l0.68,-4.39l3.56,-1.29l2.51,-2.83Z\",\n            name: \"Solothurn\"\n          },\n          \"CH-LU\": {\n            path: \"M439.6,141.66l-0.79,0.31l-0.42,0.54l1.06,2.39l1.76,1.26l1.42,0.55l1.97,-0.14l3.55,-2.27l4.53,-6.95l0.9,-2.04l3.18,-3.21l3.14,-0.28l3.14,1.12l1.09,0.89l1.03,1.35l1.45,4.57l1.52,2.91l6.65,16.4l2.96,4.27l2.61,2.49l2.57,1.09l5.74,0.23l2.36,3.29l3.72,1.14l0.96,2.29l-5.81,3.03l-1.23,1.03l-0.68,1.05l-0.55,3.09l-2.5,2.53l-0.29,1.04l0.4,1.55l1.22,1.36l2.2,1.03l3.26,-1.17l7.78,1.76l7.54,6.01l1.24,1.87l-1.22,2.9l-6.14,2.81l-0.96,-1.56l-2.75,-2.26l-3.01,-0.59l-2.09,1.57l-0.28,1.17l-1.67,0.46l-6.39,-0.12l-0.44,-1.04l-2.51,-1.12l-3.04,1.32l-4.19,1.25l-4.77,-0.49l-2.55,0.38l-4.9,-0.02l-3.41,0.61l-3.88,1.17l-1.35,0.86l-0.65,1.27l-0.16,1.13l0.73,1.62l-10.49,0.87l-3.5,1.95l-0.62,1.14l0.94,3.35l-0.26,1.04l-3.97,3.19l-4.68,5.14l-0.81,0.04l-0.9,-1.0l-1.85,-0.04l-1.07,0.35l-1.02,0.74l-2.14,3.1l-0.78,1.95l-0.7,3.54l-3.92,8.17l0.64,2.84l1.0,1.86l0.99,3.68l-3.01,4.14l-4.0,-0.21l-6.42,2.66l-1.42,0.23l-1.04,-0.25l-2.53,-2.66l-2.43,-3.23l-13.16,-9.1l-2.96,-2.79l-0.11,-1.92l-1.78,-4.85l0.27,-0.94l1.87,-1.66l0.69,-1.58l0.15,-1.92l-0.43,-3.02l0.31,-2.27l3.76,-1.78l2.02,0.25l1.18,-0.2l1.08,-0.73l1.32,-2.32l1.08,-0.73l0.44,-0.65l0.43,-2.32l1.46,-2.1l1.29,-3.48l1.3,-5.82l-0.32,-0.48l-4.18,-0.75l-1.56,-1.05l-4.95,-0.39l-0.76,-3.97l-4.04,-5.08l-0.44,-1.62l0.0,-1.48l0.63,-5.1l0.0,-5.01l0.36,-2.54l0.59,-1.61l1.64,-2.76l-1.72,-7.59l-0.05,-2.64l-0.65,-2.0l-6.9,-13.49l11.63,-2.04l4.63,-0.02l5.19,-1.62l1.14,-0.87l0.38,-0.91l-0.14,-5.1l0.26,-0.67l0.67,-0.09l4.17,-0.08l2.87,1.03l4.38,7.46l0.47,0.18l13.52,-4.53l2.96,2.63l3.99,1.13l5.45,0.19l1.51,0.53Z\",\n            name: \"Lucerne\"\n          },\n          \"CH-SH\": {\n            path: \"M526.25,35.82l-2.09,-0.73l-2.9,-0.41l-9.69,1.42l-8.73,4.3l-3.37,0.12l-4.01,-1.96l-5.09,-3.33l-3.79,-1.03l1.11,-2.59l-0.49,-2.16l-0.82,-1.83l0.2,-1.62l1.81,-1.78l4.99,-2.35l2.2,-1.75l1.63,-5.24l0.89,-1.78l2.62,-3.31l1.4,-0.71l2.2,0.04l10.74,-1.84l3.1,-1.34l0.2,-0.53l-1.69,-3.65l2.73,-1.34l4.8,0.23l3.42,1.32l0.46,4.93l0.7,3.08l2.13,1.5l0.41,0.01l2.67,-1.67l1.01,-5.4l1.55,-1.39l2.24,0.64l1.82,2.37l1.58,2.96l1.73,2.18l2.06,0.4l2.28,-0.38l1.69,0.28l1.13,2.2l-3.06,4.15l-0.71,2.06l0.85,2.07l1.6,1.73l0.86,3.48l0.39,0.31l10.53,-0.13l0.37,-0.25l-0.09,-0.44l-1.44,-1.39l1.61,-4.46l4.98,0.19l6.4,3.2l4.46,3.62l-2.84,0.57l-0.32,0.4l0.02,1.76l0.8,0.87l-3.48,-1.6l-2.47,0.8l-1.93,-0.72l-0.36,0.23l-2.31,4.79l-1.29,1.25l-0.71,0.44l-2.29,0.34l-2.31,1.64l-1.1,0.36l-8.02,-0.27l-2.95,-1.18l-1.95,-2.88l-0.32,-3.9l0.63,-3.83l-0.39,-0.46l-8.61,-0.2l-1.94,1.55l-1.42,2.3l-3.36,2.72l-2.67,3.04ZM517.99,52.38l1.93,1.73l2.53,-0.73l-2.39,5.43l-1.41,1.79l-0.43,0.04l-0.54,-0.17l-1.64,-1.9l-2.06,-1.54l0.14,-1.46l3.86,-3.2Z\",\n            name: \"Schaffhausen\"\n          },\n          \"CH-SG\": {\n            path: \"M702.16,76.88l4.04,2.88l4.77,-1.25l6.82,-4.75l5.94,7.73l7.54,3.02l5.51,4.17l-0.16,10.42l-1.87,3.71l-7.77,8.48l-2.69,8.38l-6.8,7.06l-9.71,14.17l-3.48,8.59l-0.48,8.78l1.53,4.17l2.18,3.68l1.63,3.94l0.1,5.2l-1.81,3.21l-3.0,2.66l-2.37,2.74l0.16,3.61l1.54,4.35l2.24,4.25l6.94,10.43l-2.26,0.88l-1.02,0.96l-1.33,3.41l-1.78,1.2l-1.14,1.2l-2.44,4.23l-0.62,2.99l-0.12,2.47l-0.53,1.28l-2.53,3.85l-2.64,0.95l-0.53,1.87l-1.59,0.01l-2.2,-1.44l-4.19,-1.81l-26.72,-3.37l-1.92,0.43l-0.55,-0.13l-2.93,-2.98l0.37,-2.15l-0.22,-1.11l-1.56,-3.07l-0.74,-2.9l0.57,-1.45l0.93,-7.36l-0.33,-1.86l-0.87,-2.22l-2.7,-4.77l-1.74,-2.0l-1.86,-1.1l-3.01,0.53l-2.22,0.96l-3.59,0.34l-1.19,-0.29l-3.5,-1.84l7.34,-4.75l1.13,-3.62l0.99,-11.99l-0.33,-0.43l-20.93,-3.53l-2.94,-1.45l-10.43,-8.17l-1.59,-0.09l-2.96,1.38l-5.08,-4.41l-1.21,-1.99l0.68,-4.39l-0.29,-0.48l-6.36,-1.66l-18.73,1.62l-10.32,-1.57l2.48,-5.26l3.47,-2.35l8.06,0.97l2.68,-0.19l11.98,-4.79l1.86,-1.45l1.0,-1.26l-0.06,-2.21l1.03,-1.43l1.44,-1.66l3.87,-3.27l0.66,-1.31l-1.72,-7.35l-5.21,-8.02l1.53,-0.21l1.64,-1.89l2.76,-4.3l1.99,-2.04l2.85,-5.1l0.66,-0.2l1.52,0.23l2.72,-1.01l2.4,-0.35l0.87,-0.45l0.52,-0.78l-0.13,-4.53l-5.63,-3.68l-0.51,-1.74l0.5,-0.86l2.97,-0.81l1.74,-1.55l0.5,-0.12l2.78,0.52l3.93,-0.39l1.3,1.46l0.78,0.23l2.58,-0.24l2.46,0.57l2.58,-0.01l3.36,-0.45l1.81,-0.9l2.5,-3.41l2.76,2.77l6.53,2.69l11.4,1.94l2.75,-1.4l2.83,0.25l1.47,-0.43l1.08,-0.68l0.85,-1.08l1.26,-2.83l-1.29,-4.32l-1.58,-0.2l-2.34,0.58l-1.98,-0.24l-0.49,-0.52l1.26,-0.04l1.88,-1.42l1.16,-0.37l3.4,-0.5l1.07,-0.83l1.77,-0.58l2.57,-0.07l1.65,2.26l-0.08,1.73l-0.62,1.3l0.53,1.64l4.52,5.01l1.73,1.23l1.41,0.48l0.47,-0.18l1.32,-2.27l9.89,-6.41l1.51,0.86l-0.77,2.02l0.61,1.21l2.85,0.99l3.06,-0.8ZM673.5,139.2l2.49,1.56l3.14,1.38l3.21,0.41l5.82,-1.89l3.9,-1.73l2.99,-1.87l2.83,-2.74l3.95,-6.41l3.4,-14.39l-1.34,-3.94l1.0,-6.02l5.13,-1.72l2.39,-0.32l3.06,1.18l8.51,-4.55l0.21,-0.41l-0.33,-2.25l0.31,-1.71l4.92,-4.41l-0.2,-0.7l-8.1,-1.2l-3.03,-1.03l-2.57,-1.65l-2.76,-0.82l-0.8,0.06l-1.3,0.59l-4.14,3.22l-9.93,3.83l-3.97,1.0l-1.34,1.79l-0.98,2.82l-1.05,1.01l-2.23,0.6l-4.41,-0.05l-16.11,2.59l-3.26,-0.91l-8.58,0.91l-2.09,-0.14l-1.75,2.29l-3.43,5.96l-2.82,2.58l2.59,4.83l0.43,0.19l2.65,-0.41l0.6,0.81l-1.41,2.03l-1.27,1.17l-0.48,1.17l-0.14,1.83l1.34,5.45l-2.16,2.22l-0.0,0.56l1.48,1.52l1.02,0.54l1.88,0.47l9.87,1.11l6.05,2.88l2.29,1.41l1.34,0.0l3.19,-0.73Z\",\n            name: \"Sankt Gallen\"\n          },\n          \"CH-UR\": {\n            path: \"M593.4,222.69l2.81,4.54l0.47,1.52l0.03,3.8l-0.74,1.19l-1.23,0.92l-4.18,1.49l-2.23,0.29l-6.68,4.58l-0.52,2.0l0.3,5.85l-2.01,2.29l-2.18,1.04l-1.37,1.26l-2.75,0.74l-0.78,0.74l-0.24,5.17l-1.78,1.94l-1.65,2.46l-0.31,1.06l0.17,2.12l-0.53,0.66l-3.44,0.89l-3.88,-0.98l-3.49,1.06l-2.16,1.93l-4.59,5.17l-1.84,0.9l-2.03,0.39l-3.25,1.25l-1.46,1.09l-0.8,1.14l0.11,1.72l-0.4,2.12l-1.45,2.87l-1.4,3.93l-0.17,1.59l0.27,1.5l1.05,1.9l2.41,1.36l0.42,0.68l1.44,4.93l-0.54,3.1l-7.98,2.99l-17.37,-3.44l-2.47,0.11l-1.64,0.44l-1.23,1.2l-2.81,6.93l-6.27,4.55l-7.58,-3.56l-2.96,-3.99l-2.62,-6.01l-0.06,-2.46l2.1,-6.79l0.54,-5.32l-0.88,-2.0l-1.61,-0.74l-0.58,-3.03l-0.86,-2.07l-0.06,-2.74l0.74,-0.74l1.06,-0.12l3.24,0.73l1.76,0.08l1.45,-0.31l0.92,-1.09l0.6,-4.03l-0.57,-3.51l-2.06,-4.49l0.02,-3.3l1.6,-3.26l6.56,-1.93l0.62,-2.7l-0.69,-2.71l-1.14,-0.86l-0.34,-0.75l0.8,-1.41l1.58,-4.96l1.03,-1.69l2.09,-2.19l0.32,-0.95l-0.51,-1.09l-0.78,-0.62l-2.5,-0.77l-1.74,0.13l-0.76,-4.62l0.38,-1.7l-0.31,-1.81l-1.98,-3.04l0.08,-0.55l3.58,-2.3l10.13,-4.51l3.27,-2.76l0.69,-1.14l2.75,-7.46l0.29,-1.37l-0.22,-1.23l5.3,-0.25l1.5,0.66l1.01,4.28l0.95,2.45l2.71,1.55l5.99,1.7l1.61,0.21l4.46,-0.26l0.81,0.31l0.48,0.58l1.0,2.8l1.45,1.87l1.38,0.49l1.58,-0.46l3.94,-2.35l5.1,-1.75l2.37,1.37l1.89,0.28l5.56,-0.12l1.19,0.42l0.44,0.71l0.05,2.42l1.8,2.04l1.28,0.19l1.03,4.77l0.91,0.68l1.18,-0.18l1.41,-1.17l5.85,-2.24l8.68,-4.27Z\",\n            name: \"Uri\"\n          },\n          \"CH-NE\": {\n            path: \"M178.38,161.36l4.02,1.88l2.17,2.51l1.61,3.43l0.2,0.94l-0.2,1.56l-0.79,3.14l-1.31,1.51l-0.55,1.97l0.08,1.7l0.41,0.38l31.89,-8.38l0.11,2.98l0.31,0.38l2.71,0.62l5.71,2.78l1.48,1.1l0.64,1.06l-1.02,0.7l-0.29,0.59l0.92,3.84l-0.19,2.13l-4.05,2.59l-4.42,1.61l-0.9,0.9l-0.71,1.32l-1.07,4.13l-2.77,6.2l-50.41,35.99l-3.41,-6.87l-0.35,-1.55l-0.07,-3.94l-0.72,-1.45l-1.6,-1.11l-1.0,-1.19l-0.47,-1.36l0.44,-2.46l-0.65,-3.11l-0.58,-0.27l-11.76,6.14l-5.32,3.87l-3.01,1.71l-6.04,1.77l-9.72,4.47l-2.78,1.89l-1.94,0.85l-11.91,0.7l-2.98,0.45l0.45,-1.03l0.33,-3.48l-0.65,-2.91l-2.69,-4.46l-0.76,-2.11l2.87,-8.54l9.49,-4.75l21.42,-5.82l13.42,-8.8l4.65,-5.77l0.04,-0.43l-2.28,-4.46l2.52,-3.76l1.77,-1.51l4.93,-1.53l0.93,-1.7l3.46,-1.63l0.24,-0.39l-0.23,-4.0l5.81,-1.78l12.46,-9.94l2.11,0.69Z\",\n            name: \"Neuch\\xe2tel\"\n          },\n          \"CH-BS\": {\n            path: \"M337.13,63.59l-0.03,3.8l-0.95,0.97l-3.22,-1.92l-1.27,-1.23l-1.02,-0.37l-1.39,0.32l-3.28,1.9l-1.73,-1.26l-0.82,-1.07l-3.72,-0.58l-6.54,-3.9l5.25,-2.63l7.09,-2.3l10.13,-2.61l3.83,-0.34l-2.33,5.64l-1.93,1.6l-5.07,-0.04l-0.39,0.31l0.23,0.45l7.18,3.26Z\",\n            name: \"Basel-Stadt\"\n          },\n          \"CH-JU\": {\n            path: \"M176.99,160.06l3.74,-5.32l5.73,-5.09l13.52,-8.55l0.18,-0.39l-0.79,-6.19l1.23,-4.99l3.56,-3.16l3.02,-0.68l2.85,-3.33l1.97,-0.99l2.1,-0.51l1.88,-1.03l1.7,-2.93l-0.04,-0.45l-2.15,-2.63l-5.97,-4.43l-4.0,1.46l-23.08,1.96l0.8,-2.62l2.43,-3.88l2.88,-3.24l5.07,-2.57l0.51,-4.79l5.04,-0.98l3.3,-1.64l3.06,-2.27l1.56,-2.48l-1.01,-3.09l-2.02,-3.44l-0.42,-2.38l3.35,-0.88l1.83,-1.21l1.63,-0.36l1.66,0.36l1.92,1.22l5.17,0.65l9.98,-1.48l4.58,0.82l2.67,1.3l2.75,0.37l4.71,-0.41l-3.3,6.54l1.11,4.42l4.53,2.48l5.87,1.59l2.22,2.4l1.55,0.56l1.55,-0.22l7.58,-2.83l5.2,-0.94l5.31,0.2l1.17,1.14l8.29,3.57l5.29,3.68l1.3,1.8l0.29,1.92l0.9,0.85l0.8,0.34l2.12,0.01l9.65,2.12l5.36,0.27l1.52,0.45l1.55,0.98l1.91,2.71l2.79,2.0l-2.84,2.28l-0.62,2.07l0.16,0.8l0.91,0.67l3.05,0.37l-11.59,2.84l-21.7,-1.51l-1.73,-0.63l-1.06,-2.05l-0.78,-0.36l-0.87,0.53l-0.48,1.19l-1.71,1.67l-1.61,0.61l-5.54,3.59l-5.05,1.57l-3.01,0.55l-3.73,0.19l-16.77,-2.93l-0.46,0.32l-0.49,2.58l0.31,1.16l-0.29,0.73l-2.69,1.92l-0.52,0.93l-0.09,1.64l0.69,2.64l-0.72,0.62l-9.65,1.57l-6.18,-0.49l-1.59,0.3l-0.93,0.89l-0.82,2.32l-3.78,5.12l-2.05,1.77l-5.04,2.6l-2.13,1.85l-1.92,0.33l-4.67,-0.11l-2.37,1.14l-7.13,4.76l-2.16,1.11l-1.36,0.31l-3.36,-2.34l-5.43,-0.36l-1.62,-0.53Z\",\n            name: \"Jura\"\n          },\n          \"CH-BL\": {\n            path: \"M286.35,98.71l10.0,-0.33l3.32,-2.08l-0.04,-1.8l-1.93,-2.94l-0.64,-0.6l-2.73,-0.44l-1.44,-1.7l0.97,-1.15l0.64,-2.56l-0.41,-1.59l-2.55,-3.23l-0.01,-1.13l1.92,-0.48l3.61,1.25l0.26,5.49l0.98,2.64l0.78,0.85l3.33,0.06l12.66,-2.29l0.33,-0.4l-0.12,-6.71l-0.92,-1.87l-5.66,-1.72l-3.02,0.28l-1.88,-2.87l0.16,-0.49l0.88,-0.41l2.12,0.35l1.84,-0.64l0.92,-1.66l-0.06,-2.53l-4.06,-2.42l6.83,-4.81l6.92,4.1l3.8,0.64l0.56,0.89l2.01,1.47l0.44,0.02l4.34,-2.24l0.82,0.29l2.68,2.22l2.06,1.06l0.47,-0.08l1.38,-1.57l0.03,-3.61l2.46,1.09l4.39,0.5l8.71,-1.54l7.85,3.45l0.95,0.15l0.92,0.66l0.04,2.63l0.48,1.54l0.94,1.07l2.89,-0.42l5.02,-3.93l0.64,-0.94l0.25,-2.42l0.2,-0.84l0.35,-0.25l1.03,-0.15l2.64,0.66l1.49,1.77l1.14,0.78l0.92,1.71l5.79,7.57l0.85,2.05l2.0,1.23l5.74,0.53l0.03,3.23l0.43,1.67l2.38,1.46l-1.91,4.18l0.39,1.64l1.26,1.92l0.09,0.89l-1.02,1.14l-3.67,2.31l-4.12,0.98l-4.06,0.06l-1.13,0.3l-2.43,4.53l-4.79,1.87l-1.5,0.98l-4.18,1.04l-2.48,1.42l-3.26,4.73l-0.62,1.49l-5.01,-1.45l-4.76,-3.49l-4.34,-1.97l-5.07,-1.04l-6.94,0.55l-1.41,-0.85l-1.38,-4.53l-0.05,-3.6l7.41,-2.08l1.76,-1.95l0.63,-2.22l0.25,-3.84l0.81,-0.92l1.7,-1.11l2.41,-3.34l0.03,-0.48l-1.41,-1.73l-8.68,-4.58l-1.61,-0.1l-0.42,0.39l-0.03,0.93l-0.96,0.84l-5.26,-0.47l-2.04,0.55l-1.27,2.84l0.21,0.53l2.93,1.24l0.49,1.14l-2.21,5.39l-2.27,2.01l-4.39,0.32l-1.19,0.41l-0.42,1.77l0.53,2.04l-7.38,0.92l-0.98,0.77l-2.1,3.39l-1.33,0.73l-1.76,0.41l-3.11,-0.41l-3.35,-1.66l-1.68,-0.26l-2.97,0.68l-2.97,4.0l-1.87,-0.01l-1.03,-0.66l-0.36,-2.03l-1.39,-1.93l-4.49,-3.15ZM284.82,97.78l-7.82,-3.36l-0.53,-0.38l7.52,0.28l1.45,-0.47l-0.61,3.94Z\",\n            name: \"Basel-Landschaft\"\n          },\n          \"CH-SZ\": {\n            path: \"M604.0,160.14l-3.74,10.38l-0.59,4.25l-1.34,2.27l0.39,3.53l-0.17,1.69l-1.92,3.41l-1.54,2.02l-1.67,1.62l-4.88,2.0l-2.32,1.48l-1.12,3.01l0.13,0.44l2.75,2.18l5.49,6.84l-0.47,0.88l-0.0,0.98l0.93,1.55l1.1,1.0l3.11,1.83l0.68,1.01l0.31,1.42l-1.65,6.09l-13.06,6.21l-5.89,2.25l-1.34,1.14l-0.61,0.16l-0.47,-0.29l-0.43,-1.31l-0.27,-2.9l-0.46,-0.77l-1.41,-0.27l-1.02,-0.98l-0.5,-0.75l-0.02,-2.36l-0.8,-1.12l-1.39,-0.49l-5.74,0.1l-1.7,-0.25l-2.63,-1.4l-5.38,1.82l-3.94,2.34l-1.16,0.4l-0.93,-0.28l-1.33,-1.72l-0.94,-2.69l-0.82,-0.96l-1.16,-0.41l-5.9,0.09l-5.94,-1.68l-2.41,-1.38l-1.82,-6.56l-2.01,-1.03l-6.03,0.26l-14.25,1.63l-4.1,-2.48l6.1,-2.89l1.38,-3.28l-1.46,-2.52l-7.87,-6.23l-7.99,-1.81l-3.14,1.18l-1.96,-0.92l-0.96,-1.12l-0.26,-1.17l0.21,-0.62l2.51,-2.57l0.58,-3.16l0.54,-0.8l1.01,-0.84l10.01,-5.29l3.22,0.57l3.37,6.57l0.39,0.22l10.22,-0.76l0.96,0.18l2.36,1.82l1.98,0.13l9.77,-2.33l2.78,-0.99l2.27,-1.49l5.58,-5.82l1.56,-3.76l3.49,-3.21l-0.07,-0.64l-3.53,-2.11l-0.35,-1.37l-1.27,-1.72l0.38,-1.81l3.03,-2.62l7.69,-4.24l8.51,-1.5l10.93,1.65l18.71,-1.62l5.78,1.53l-0.48,2.09l-0.07,2.43l1.38,2.23l5.11,4.44Z\",\n            name: \"Schwyz\"\n          },\n          \"CH-BE\": {\n            path: \"M285.59,124.12l21.93,1.54l11.29,-2.75l-1.21,3.09l-1.08,1.12l-1.77,1.06l-6.47,1.79l-1.47,0.77l-5.83,4.69l-4.5,1.59l-4.22,3.09l-0.15,0.44l0.42,1.42l-14.6,5.65l-0.75,1.42l2.28,4.74l0.7,0.81l4.13,1.83l1.76,3.52l-0.1,1.66l0.78,0.75l1.38,0.26l2.18,-0.35l1.73,-0.85l4.34,-4.09l1.68,-0.41l2.42,-1.51l2.64,-0.46l0.69,4.06l2.19,2.17l-0.51,1.0l-2.02,1.21l-1.24,0.24l-2.85,-0.75l-2.43,1.65l-1.32,1.69l-0.44,1.34l0.26,3.47l-1.28,0.66l-4.3,0.88l-5.7,-0.76l-0.92,0.46l-0.31,1.1l0.25,1.1l2.44,4.07l2.05,1.31l7.61,-1.62l0.18,2.15l1.73,3.39l0.47,0.2l3.76,-1.11l1.27,-0.68l0.83,-0.94l0.24,-1.8l-1.32,-3.43l-0.02,-0.84l0.51,-0.54l5.25,-2.1l2.97,-2.28l5.28,-6.63l2.66,-2.23l1.97,-0.27l5.42,3.18l9.26,0.24l1.42,-0.27l2.08,-1.84l1.23,-1.6l1.85,-0.87l1.26,-1.45l0.36,-1.09l-0.37,-1.53l-3.89,-6.51l-3.22,-4.09l-3.74,-1.53l-3.55,-3.7l-0.16,-1.9l-0.86,-2.73l-2.39,-2.54l12.5,-1.34l7.06,-2.71l6.57,6.79l2.59,1.39l5.5,0.24l3.9,-1.23l1.97,0.56l6.47,-1.36l0.65,5.17l2.63,3.92l6.06,11.69l1.66,4.09l0.04,2.58l1.69,7.47l-1.56,2.43l-0.64,1.77l-0.37,2.61l-0.0,5.02l-0.63,5.15l0.01,1.66l0.47,1.76l4.13,5.24l0.69,3.95l0.36,0.33l5.15,0.41l1.5,1.03l3.86,0.69l-1.2,5.36l-1.22,3.32l-1.5,2.18l-0.45,2.35l-1.4,1.17l-1.31,2.31l-1.68,0.64l-2.19,-0.22l-4.27,2.17l-0.39,2.67l0.43,3.07l-0.14,1.72l-0.59,1.31l-1.79,1.55l-0.46,1.37l1.81,5.17l0.22,2.17l3.15,2.96l13.13,9.08l2.31,3.1l2.66,2.8l1.43,0.41l1.83,-0.28l6.31,-2.62l10.27,0.53l3.74,0.71l8.73,5.01l3.99,1.34l8.21,-2.15l10.34,1.11l3.81,1.04l2.04,0.07l2.38,-0.79l6.65,-4.0l8.48,-2.88l6.41,4.85l1.72,-0.58l3.5,-0.45l3.46,1.07l-1.5,3.05l-0.26,1.4l0.21,2.45l1.73,3.53l0.72,3.33l0.11,1.99l-0.47,2.52l-0.54,0.75l-1.25,0.27l-4.78,-0.81l-1.4,0.14l-1.19,1.07l-0.06,3.27l0.88,2.17l0.53,2.78l-1.99,0.36l-3.86,4.2l-2.02,4.17l-1.22,3.97l-1.01,5.42l-1.76,2.54l-2.01,1.76l-5.21,3.3l-9.12,4.44l-4.72,1.46l-10.35,1.84l-1.09,0.04l-1.36,-0.54l-0.2,-1.72l-0.48,-0.45l-5.43,-0.54l-4.69,-1.79l-1.83,-1.32l-17.03,-2.82l-5.22,0.23l-6.67,3.54l-1.15,0.96l-0.1,0.82l1.25,2.06l0.27,1.38l-1.21,1.77l-12.73,7.49l-4.13,1.38l-1.74,0.26l-2.95,0.01l-2.58,-0.55l-24.21,15.25l-2.16,0.17l-13.11,-5.46l-4.46,-0.49l-1.66,0.97l-1.02,2.22l-2.68,2.01l-6.65,1.75l-4.67,2.51l-0.11,0.62l1.18,1.34l2.15,1.08l-2.35,1.82l-7.04,2.61l-2.82,0.4l-6.52,-1.76l-8.77,0.08l-3.44,0.81l-2.42,2.41l-4.46,2.68l-7.33,2.12l-2.11,-0.75l-0.14,-4.32l-0.84,-0.67l-1.3,0.02l-7.21,2.27l-0.5,0.67l-0.15,1.52l-1.43,2.09l-6.29,3.23l-0.19,-4.33l1.29,-2.13l-0.07,-1.32l-0.68,-0.82l-1.15,-0.52l-4.56,-3.7l2.18,-6.0l-0.44,-3.39l-1.22,-3.54l0.42,-0.62l3.28,-1.74l1.89,-2.22l0.71,-1.71l0.15,-1.66l-0.35,-4.22l3.05,-4.59l0.66,-2.09l0.26,-6.65l-2.17,-4.21l7.75,-5.93l5.43,-0.36l1.02,-0.42l0.9,-1.08l0.96,-5.89l-0.72,-7.25l2.03,-2.02l0.7,-0.46l5.98,1.21l2.82,-2.63l-0.27,-1.24l1.22,-8.07l-3.56,-2.71l-2.28,-0.3l-1.41,-1.73l-1.77,-1.22l-4.95,-2.09l-1.14,-2.55l-0.42,-3.6l0.12,-6.53l0.46,-3.92l2.34,-8.39l0.08,-3.78l-0.53,-2.58l-0.58,-1.12l0.13,-0.48l1.21,-0.87l0.94,0.15l0.12,0.76l0.42,0.42l0.86,0.41l1.21,0.01l3.27,-1.97l1.12,-2.44l-0.96,-5.65l-0.36,-0.33l-15.9,-1.23l-10.21,-2.54l-2.2,0.33l-1.22,-0.18l1.82,-4.24l0.23,-1.46l-0.84,-5.38l-1.62,-3.07l3.87,-2.1l2.13,-2.27l0.5,-1.03l-1.28,-1.96l-0.42,-2.02l-0.83,-0.82l-2.09,-0.42l-14.53,5.14l-15.89,1.37l-7.76,-2.71l2.68,-5.98l1.07,-4.13l0.57,-1.06l0.64,-0.69l4.43,-1.62l3.91,-2.29l0.47,-0.62l0.28,-2.58l-0.91,-3.74l1.16,-0.87l0.15,-0.69l-0.85,-1.35l-1.71,-1.29l-5.78,-2.81l-2.54,-0.59l-0.11,-3.15l-0.49,-0.38l-31.82,8.45l-0.07,-1.13l0.42,-1.65l1.42,-1.73l1.02,-5.04l-0.69,-2.41l-1.28,-2.36l-2.26,-2.61l-2.33,-1.13l3.25,0.21l3.31,2.33l1.8,-0.33l2.36,-1.2l7.13,-4.75l2.21,-1.05l4.43,0.15l2.15,-0.36l4.14,-3.09l3.26,-1.48l3.58,-3.55l2.46,-3.58l0.87,-2.4l0.62,-0.54l1.14,-0.18l6.27,0.49l10.01,-1.68l1.02,-0.87l0.11,-0.45l-0.75,-2.75l0.05,-1.21l0.3,-0.61l2.88,-2.15l0.37,-0.95l-0.3,-1.27l0.4,-2.1l16.43,2.87l3.89,-0.19l3.16,-0.57l5.18,-1.62l2.33,-1.26l3.26,-2.34l1.69,-0.65l1.91,-1.87l0.67,-1.34l1.43,2.27l1.95,0.7ZM252.79,217.72l-0.26,0.58l0.68,1.29l0.44,0.2l1.7,-0.33l0.97,-1.21l-0.06,-0.9l-0.49,-0.36l-2.97,0.73ZM321.41,121.22l-5.03,-0.3l-0.48,-0.27l-0.11,-0.53l0.41,-1.46l3.0,-2.41l1.22,0.29l0.93,1.06l0.31,0.92l0.14,1.03l-0.37,1.68Z\",\n            name: \"Bern\"\n          },\n          \"CH-NW\": {\n            path: \"M483.42,237.89l0.15,-2.14l-1.14,-1.56l-0.92,-0.33l-1.14,0.54l-0.88,1.39l0.04,1.11l0.69,1.26l0.65,4.1l1.14,3.17l-0.07,2.28l0.64,0.71l1.45,0.8l0.52,1.92l2.54,3.16l0.93,0.69l3.05,1.1l0.69,0.93l-5.59,1.68l-4.52,-3.49l-4.13,-2.14l-3.98,-4.74l-0.48,-5.76l0.55,-7.41l1.24,-4.09l0.0,-6.87l-0.52,-1.21l-0.99,-0.79l-4.76,-1.93l-2.01,-1.88l0.24,-1.42l2.25,-3.7l0.58,-2.7l-1.39,-1.18l-7.72,-2.02l-0.92,0.02l-3.09,1.25l-3.04,0.63l-0.77,-1.53l0.66,-1.91l0.97,-0.57l3.77,-1.14l3.35,-0.6l4.82,0.03l2.53,-0.38l4.9,0.48l4.3,-1.29l2.93,-1.27l1.82,0.93l0.19,0.73l0.64,0.48l6.7,0.11l1.98,-0.54l0.45,-1.36l1.5,-1.27l2.54,0.46l2.62,2.15l1.15,1.84l4.87,2.95l14.28,-1.55l0.22,1.09l-0.26,1.2l-2.73,7.4l-1.34,1.7l-2.26,1.8l-10.11,4.5l-3.91,2.58l-0.14,1.34l1.94,2.89l0.28,1.51l-0.39,1.85l0.76,4.61l-9.1,0.29l-1.88,-1.27l-0.91,-1.63l-1.09,-0.38l-1.08,0.09l-4.29,2.28Z\",\n            name: \"Nidwalden\"\n          },\n          \"CH-ZG\": {\n            path: \"M544.22,161.33l3.1,1.85l-3.16,2.91l-1.59,3.79l-5.49,5.73l-2.12,1.38l-2.61,0.92l-9.56,2.3l-1.55,-0.03l-2.42,-1.83l-1.21,-0.26l-10.12,0.74l-3.35,-6.54l-4.01,-0.8l-3.74,1.96l-1.07,-2.44l-3.74,-1.19l-2.33,-3.26l-1.47,-8.74l-1.02,-10.58l0.26,-2.11l2.12,-3.52l0.92,3.0l0.69,1.18l1.41,0.77l7.98,2.26l4.48,0.33l3.81,-1.14l5.57,-0.94l7.65,1.09l3.59,3.39l3.39,2.53l2.23,2.34l1.31,2.0l1.58,1.08l5.97,2.26l4.51,-0.46Z\",\n            name: \"Zug\"\n          },\n          \"CH-FR\": {\n            path: \"M170.17,307.43l0.07,-3.89l0.64,-0.54l0.13,-0.66l-0.81,-5.46l0.03,-2.9l0.54,-3.41l2.25,-0.24l3.15,-1.91l2.16,-0.41l3.13,-0.1l1.78,-0.64l-0.16,-1.27l1.07,-2.42l12.75,-15.74l0.74,-2.09l-0.13,-0.44l-3.51,-1.06l-0.63,-0.37l-0.31,-0.74l2.43,-0.62l0.99,-0.61l6.18,-7.53l-0.24,-3.68l1.08,-2.41l0.66,-0.9l2.11,-1.39l1.98,-2.1l0.75,-1.26l0.15,-0.81l-0.3,-0.59l-1.44,0.08l-1.0,-1.06l-0.47,-3.19l0.92,-2.31l-0.71,-2.06l-1.0,-0.79l-1.56,0.19l-1.07,0.65l-0.22,1.15l-0.36,0.35l-3.65,-4.13l-1.85,-1.54l-5.86,-7.13l7.03,-5.0l12.25,14.76l0.97,1.67l2.35,1.17l2.73,3.42l0.47,2.41l0.54,0.23l3.49,-1.58l1.86,-1.91l1.14,-1.92l0.89,-3.55l1.22,-1.74l0.76,0.03l0.99,0.8l0.79,-0.16l1.62,-1.54l0.51,-1.07l-0.37,-0.79l-2.28,-1.11l-4.1,-7.35l-0.75,-1.77l-1.31,-7.99l15.6,-1.34l14.58,-5.14l1.62,0.38l0.53,0.68l0.32,1.82l1.14,1.43l-0.3,0.65l-2.0,2.14l-3.54,1.81l-0.64,0.81l0.13,0.87l1.53,2.52l0.81,5.25l-0.7,2.54l-1.38,2.52l0.31,1.2l0.86,0.36l2.98,-0.34l10.23,2.54l15.63,1.21l0.89,5.22l-0.86,1.84l-2.8,1.76l-1.02,-0.01l-0.67,-0.43l-0.13,-0.87l-1.69,-0.45l-1.9,1.34l-0.18,1.06l0.59,1.1l0.51,2.48l-0.09,3.59l-2.33,8.34l-0.47,4.01l-0.12,6.63l0.46,3.78l1.34,2.88l0.77,0.57l4.34,1.64l1.65,1.13l1.5,1.8l2.3,0.32l0.95,0.94l2.26,1.38l-0.48,1.57l-0.77,6.21l0.31,0.91l-0.54,0.66l-1.63,1.49l-6.17,-1.15l-3.12,2.8l0.62,7.63l-0.83,5.5l-0.76,0.92l-0.69,0.25l-5.61,0.42l-8.07,6.18l-5.9,4.07l-11.52,3.06l-2.08,1.53l-4.54,4.91l-3.66,2.39l-5.8,0.6l-2.9,1.23l-3.51,2.59l-1.99,1.96l-1.07,1.56l-0.77,2.1l-4.12,1.74l-0.74,-0.48l-1.66,-2.84l-1.19,-4.82l-1.51,-3.17l-11.07,-7.13l-2.82,-0.95l-2.25,-0.08l-4.56,3.72l-1.62,0.71l-2.8,0.35l-2.15,-0.6l-2.16,-2.62l-1.3,-3.19l1.52,-2.67l4.42,-0.01l3.21,1.46l6.29,-6.18l1.46,-2.04l-0.16,-0.55l-0.56,-0.23l-2.25,0.44l-0.71,-0.19l-3.6,-2.8l-1.91,-0.73l-5.16,0.72l-1.47,-0.91l-1.38,-0.07l-2.46,0.76ZM254.98,218.75l-1.2,0.2l-0.3,-0.56l2.01,-0.49l-0.51,0.86ZM191.92,233.63l-2.42,0.92l-1.11,1.34l0.4,0.67l1.73,0.09l1.09,0.46l2.48,1.97l-0.04,0.55l-2.48,4.18l-1.19,6.9l0.84,1.33l1.79,-0.53l1.11,0.28l-2.21,4.32l-0.92,0.7l-1.46,0.39l-3.72,0.06l-3.78,-1.56l-2.33,0.41l-2.51,1.15l-1.52,0.19l-3.56,-1.13l-2.19,-0.35l-2.45,-1.04l0.96,-1.39l0.1,-0.94l-0.75,-0.8l-1.06,0.06l-0.73,-0.3l-2.13,-1.88l-0.66,-1.69l-0.95,-6.29l21.31,-15.24l8.36,7.17ZM185.23,266.66l-1.43,2.4l-1.39,1.16l-1.29,0.54l-5.87,-2.24l-1.63,0.49l-2.22,1.8l-2.55,0.19l-0.26,-0.55l1.52,-1.19l3.58,-1.43l1.02,-1.81l5.72,-5.95l1.74,2.17l2.8,1.16l0.85,1.6l-0.59,1.67ZM164.23,271.92l-1.13,0.89l-0.6,-0.25l-0.44,-1.48l-1.75,-2.01l0.32,-0.8l1.34,-0.13l2.82,-2.78l1.01,0.0l0.92,0.83l0.15,1.66l-0.3,1.7l-2.35,2.36Z\",\n            name: \"Fribourg\"\n          },\n          \"CH-ZH\": {\n            path: \"M527.06,36.11l2.39,-2.72l3.39,-2.74l1.44,-2.32l1.51,-1.31l7.99,0.18l-0.57,3.52l0.38,4.21l2.22,3.21l3.23,1.3l8.38,0.27l1.29,-0.44l2.3,-1.63l2.29,-0.34l2.16,-1.8l2.79,-1.04l0.67,2.92l2.29,2.38l0.25,0.84l-0.29,1.07l-2.3,3.54l-1.69,1.63l-1.18,1.87l-1.11,-0.11l-1.97,-1.56l-2.89,-1.26l-1.53,-0.22l-1.59,0.45l-1.32,0.91l-0.52,0.63l-0.02,0.84l2.76,3.14l2.39,0.67l12.61,5.33l1.9,2.04l-1.16,2.27l0.87,2.44l1.28,1.25l2.01,0.99l5.9,2.07l1.29,0.89l0.41,0.65l-1.31,6.55l0.21,1.56l-2.0,1.89l-0.22,1.52l0.93,2.28l1.94,1.13l1.06,5.22l1.98,1.67l1.42,0.7l-1.02,1.03l-0.73,3.03l-1.88,2.49l0.03,0.56l8.76,8.27l4.69,7.28l1.67,7.17l-1.68,2.0l-2.54,1.9l-1.55,1.77l-1.15,1.6l0.07,2.19l-0.8,1.03l-1.77,1.38l-11.65,4.66l-2.5,0.19l-8.44,-0.91l-3.82,2.65l-2.66,5.66l-8.56,1.53l-7.82,4.32l-3.2,2.78l-0.41,0.98l-0.1,1.58l1.36,1.92l0.19,0.84l-3.91,0.44l-5.75,-2.17l-1.39,-0.92l-1.29,-1.97l-2.29,-2.41l-3.41,-2.55l-3.88,-3.57l-7.96,-1.12l-5.66,0.96l-3.71,1.12l-1.98,0.01l-2.29,-0.33l-7.86,-2.23l-1.18,-0.66l-0.45,-0.87l-1.2,-3.8l-4.46,-8.16l-0.38,-1.58l2.68,-0.58l3.6,-1.94l3.72,-4.14l1.86,-2.8l0.64,-2.56l-0.49,-0.48l-5.7,1.55l-2.13,-1.99l-0.38,-0.86l0.21,-6.12l-1.02,-0.99l-3.86,-1.7l-1.49,-1.14l0.3,-1.03l5.21,-4.59l0.92,-2.58l-0.55,-1.02l-2.67,-3.04l-1.48,-3.89l-4.38,-8.04l-1.02,-3.41l0.09,-2.49l0.97,-4.68l3.26,-4.5l4.34,-3.79l4.58,-6.37l0.35,-1.42l5.27,-0.76l2.82,-5.64l5.93,-3.37l5.73,-0.5l2.9,2.34l2.5,3.56l-3.94,3.27l-0.33,2.15l2.32,1.92l1.69,1.95l1.04,0.35l0.96,-0.21l1.6,-2.06l2.57,-5.83l-0.01,-0.94l0.86,-1.37l0.37,-5.51l-0.87,-2.97l0.38,-1.16l0.57,-0.42l1.48,-0.32l0.4,1.92l1.3,0.56l0.55,-0.29l1.13,-6.01l-0.36,-0.47l-2.08,-0.26Z\",\n            name: \"Z\\xfcrich\"\n          },\n          \"CH-VS\": {\n            path: \"M179.05,431.43l3.47,-4.26l0.14,-2.45l-3.23,-2.65l-15.66,-3.0l-1.6,-3.88l1.8,-8.4l3.44,-8.88l7.05,-11.91l-0.01,-0.43l-4.54,-6.78l-7.1,-6.56l-3.67,-5.5l0.97,-2.62l5.29,-5.44l1.42,-4.19l-0.16,-2.16l3.29,0.17l9.47,1.62l2.34,-1.12l4.1,4.58l1.19,2.0l-0.74,4.66l0.77,2.06l2.64,1.67l2.73,0.53l1.93,1.33l0.85,4.25l0.99,2.41l12.68,19.17l4.47,5.23l1.5,2.48l2.28,2.57l0.48,0.09l7.64,-3.74l6.59,-3.75l4.73,-5.08l2.33,-0.91l3.8,-3.36l2.83,-3.45l2.41,-3.67l0.78,-2.08l-0.28,-3.86l5.71,-5.51l7.03,-3.66l1.55,-2.27l0.21,-1.67l0.72,-0.49l6.37,-1.87l0.96,0.0l0.33,0.33l-0.1,3.59l0.24,0.74l2.87,1.08l7.61,-2.21l4.56,-2.74l2.74,-2.56l2.79,-0.53l8.61,-0.08l6.43,1.75l3.14,-0.42l7.18,-2.65l3.01,-2.31l-0.07,-0.68l-2.53,-1.23l-0.79,-0.91l4.09,-2.21l6.88,-1.86l2.78,-2.1l1.01,-2.2l1.31,-0.76l3.98,0.47l13.14,5.47l2.72,-0.21l24.15,-15.21l2.25,0.58l3.09,-0.01l1.87,-0.29l4.21,-1.41l12.88,-7.57l1.57,-2.35l-0.33,-1.75l-1.23,-2.14l7.28,-4.17l5.0,-0.23l16.89,2.79l1.72,1.27l4.79,1.83l5.35,0.51l0.43,2.01l1.9,0.76l11.63,-1.9l4.82,-1.49l9.24,-4.49l5.26,-3.33l2.14,-1.86l1.94,-2.78l1.06,-5.6l1.19,-3.89l1.94,-3.99l3.67,-3.98l1.91,-0.25l1.43,0.6l0.36,0.51l0.3,0.97l-0.52,5.11l-2.29,8.01l0.82,3.2l2.16,4.66l3.04,4.1l7.56,3.6l-5.46,6.38l-3.19,1.83l-4.55,0.48l-1.76,0.47l-0.81,0.66l-0.22,0.83l0.21,1.44l-1.84,3.45l-0.51,1.67l0.21,2.76l-8.22,1.55l-5.42,2.56l-4.35,3.97l-1.75,3.28l0.79,1.48l1.25,0.86l0.07,2.22l-1.12,2.14l-1.91,1.99l-2.22,1.47l-5.76,2.57l-9.77,11.19l-4.01,2.42l-8.59,1.67l-4.38,1.75l-4.06,3.55l-2.06,2.54l-0.8,2.49l0.78,1.05l4.6,3.48l5.81,9.73l0.54,8.95l-4.23,7.91l-8.59,6.48l-2.06,0.6l-4.09,0.38l-2.31,1.54l-1.47,2.7l-0.43,2.86l-0.02,2.82l-1.03,6.97l-2.43,4.71l-2.4,2.72l-1.33,0.96l-1.83,0.49l-14.28,2.84l-2.99,2.13l-2.17,3.61l-0.56,4.55l-4.09,0.34l-0.91,3.08l0.14,1.31l-0.35,0.61l-2.29,1.09l-4.65,-1.0l-5.42,0.09l-9.52,-3.03l-2.12,0.18l-3.12,0.95l-2.18,-0.65l-4.08,-5.37l-2.99,-2.42l-3.21,-1.62l-20.42,-4.46l-3.76,1.67l-3.99,5.16l-4.13,0.47l-5.94,2.24l-11.82,7.52l-6.26,1.92l-15.06,-1.37l-2.69,0.82l-5.58,3.01l-12.25,4.38l-5.96,0.97l-6.45,0.1l-6.02,-1.08l-4.53,-2.36l-8.88,-8.65l-1.34,-1.94l-1.05,-2.45l-1.41,-4.58l-2.28,-5.15l-0.71,-2.62l-1.11,-0.78l-13.47,-13.23l-4.67,-1.83l-1.95,0.59l-2.91,2.24l-1.66,-0.2l-1.53,-1.01l0.32,-1.6l-0.07,-1.74l0.28,-0.43l-0.07,-2.65l-0.53,-2.57Z\",\n            name: \"Valais\"\n          },\n          \"CH-VD\": {\n            path: \"M166.03,252.52l1.46,0.04l0.28,0.34l-1.13,2.03l0.51,0.76l2.56,1.06l2.22,0.36l3.09,1.12l2.36,-0.17l2.53,-1.16l2.19,-0.38l2.76,1.42l3.79,0.2l2.62,-0.56l1.34,-1.03l2.24,-4.13l0.1,-0.74l-0.69,-0.8l-1.45,-0.14l-1.28,0.54l-0.33,-0.56l1.14,-6.64l2.43,-4.06l0.14,-1.02l-0.79,-1.12l-2.08,-1.44l-1.34,-0.57l-1.35,-0.11l2.39,-1.35l1.48,0.82l0.44,-0.15l0.01,-0.46l-1.38,-1.79l-8.05,-6.85l5.71,-4.09l5.93,7.21l1.85,1.53l3.86,4.31l0.63,0.12l0.54,-0.28l0.45,-1.55l0.66,-0.39l1.08,-0.18l0.6,0.51l0.53,1.59l-0.91,2.22l0.5,3.53l1.46,1.56l1.22,-0.21l-0.1,0.54l-2.5,3.0l-2.09,1.38l-0.84,1.13l-1.18,2.75l0.32,3.33l-5.99,7.31l-3.25,1.09l-0.5,0.65l0.67,1.46l1.48,0.75l2.42,0.54l-0.61,1.71l-12.68,15.62l-1.19,2.7l0.21,1.01l-6.55,0.83l-3.27,1.95l-2.29,0.2l-0.36,0.33l-0.6,3.83l-0.03,3.0l0.8,5.43l-0.78,1.07l-0.06,4.14l0.29,0.56l0.47,0.15l2.53,-0.83l1.02,0.01l1.73,0.98l5.13,-0.73l1.62,0.63l3.74,2.86l1.07,0.23l1.94,-0.42l-7.03,7.36l-2.87,-1.45l-4.32,-0.05l-0.83,0.31l-1.72,3.34l1.45,3.53l2.4,2.85l2.47,0.7l3.15,-0.4l3.21,-1.69l2.85,-2.69l1.91,0.06l2.63,0.87l10.93,7.04l1.28,2.8l1.23,4.93l1.72,2.97l1.35,0.9l4.64,-1.95l1.01,-2.41l0.93,-1.37l1.91,-1.89l3.42,-2.53l2.63,-1.14l5.99,-0.65l3.84,-2.5l4.63,-4.99l1.91,-1.39l11.38,-3.0l5.68,-3.89l2.05,3.86l-0.25,6.31l-0.59,1.93l-3.12,4.78l-0.12,1.03l0.46,3.35l-0.12,1.43l-0.66,1.59l-1.73,2.0l-3.18,1.66l-0.79,1.32l1.27,3.69l0.42,3.14l-2.23,6.07l0.15,0.47l6.39,4.95l0.04,0.6l-1.35,2.4l0.21,4.87l-5.72,5.51l-0.22,1.12l0.34,3.21l-0.7,1.76l-2.32,3.52l-2.75,3.36l-3.72,3.29l-2.38,0.94l-4.66,5.03l-6.5,3.7l-7.35,3.6l-2.05,-2.31l-1.49,-2.47l-4.45,-5.2l-12.64,-19.12l-0.9,-2.2l-1.04,-4.62l-2.13,-1.47l-2.76,-0.54l-2.3,-1.37l-0.65,-1.64l0.7,-3.46l-0.02,-1.5l-1.33,-2.21l-3.77,-4.15l8.64,-0.41l4.56,-4.84l0.02,-0.52l-3.76,-4.71l-9.25,-4.34l-17.32,-4.94l-32.76,-10.25l-4.52,-0.75l-17.52,1.2l-3.27,1.16l-11.78,8.38l-3.25,1.58l-13.14,1.47l-3.85,1.56l-3.3,2.65l-28.11,37.51l-0.26,0.07l-10.65,-7.62l3.39,-6.59l-0.29,-3.16l-2.43,-3.79l-2.99,-2.82l-10.32,-5.51l1.83,-1.52l0.51,-1.87l-0.55,-4.53l-0.9,-2.21l0.0,-1.11l0.71,-1.38l2.28,-2.14l6.93,-10.3l7.03,-7.69l-0.02,-0.56l-4.73,-4.59l-0.56,-2.99l2.53,-2.87l26.76,-21.2l14.25,-6.77l2.09,-1.52l5.21,-5.08l6.55,-3.01l2.23,-1.45l2.25,-2.44l0.87,-2.36l-0.08,-4.24l-2.59,-2.85l-0.49,-1.24l3.36,-9.18l1.68,-2.81l3.44,-0.52l12.13,-0.75l2.08,-0.93l2.72,-1.86l9.66,-4.44l6.09,-1.8l3.11,-1.77l5.26,-3.83l11.27,-5.88l0.53,2.52l-0.43,2.54l0.6,1.65l1.16,1.36l1.55,1.08l0.52,1.13l0.02,3.68l0.38,1.73l3.66,7.4l1.0,6.6l0.82,1.97l2.78,2.31ZM175.95,263.39l-1.88,2.14l-0.81,1.61l-3.49,1.4l-1.93,1.53l-0.09,0.46l0.49,1.04l0.36,0.23l3.02,-0.21l2.45,-1.9l1.27,-0.35l5.96,2.23l1.59,-0.69l1.57,-1.35l1.48,-2.49l0.69,-1.94l-1.01,-2.19l-3.05,-1.39l-0.67,-1.21l-1.15,-1.04l-0.48,-0.04l-0.99,0.62l-2.21,2.75l-1.11,0.8ZM167.52,265.97l-1.29,-1.3l-1.59,-0.1l-3.15,2.91l-1.51,0.25l-0.46,1.61l1.8,2.08l0.69,1.8l1.39,0.36l2.32,-1.88l1.53,-1.7l0.43,-2.07l-0.16,-1.97ZM229.1,227.98l-1.61,1.45l-1.38,-0.9l-1.08,0.23l-1.44,2.03l-0.92,3.62l-1.02,1.7l-1.63,1.71l-3.03,1.37l-0.38,-2.14l-2.86,-3.58l-2.29,-1.11l-0.96,-1.65l-12.23,-14.74l14.49,-10.32l7.82,2.73l1.35,8.23l0.8,1.92l4.17,7.49l2.45,1.31l-0.26,0.65ZM180.58,352.72l-1.15,0.6l-9.36,-1.61l-3.47,-0.18l-0.09,-0.95l14.07,2.13Z\",\n            name: \"Vaud\"\n          },\n          \"CH-TI\": {\n            path: \"M485.32,340.13l-0.22,-2.45l0.46,-1.51l1.87,-3.52l-0.11,-2.01l0.47,-0.42l1.64,-0.44l4.7,-0.53l3.42,-1.99l5.81,-6.8l6.53,-4.74l2.9,-7.05l1.01,-0.98l3.57,-0.44l17.43,3.46l8.37,-3.08l6.62,2.62l15.48,1.22l11.76,-1.78l10.28,-3.57l1.92,-1.23l0.57,-0.98l-0.72,-2.9l0.27,-1.08l1.34,-1.62l2.79,-1.13l1.9,-0.37l1.72,-1.37l0.84,-0.05l0.34,0.25l0.78,2.5l1.32,1.63l6.73,0.58l4.52,1.87l2.95,2.59l0.11,0.56l-1.83,3.27l-1.26,3.35l-1.53,7.7l1.24,5.0l1.17,2.61l4.48,6.01l1.73,0.53l1.24,-0.5l2.7,-0.34l2.1,3.43l-0.43,6.2l0.37,2.19l1.72,3.43l0.13,0.83l-1.94,5.62l0.21,7.48l-0.67,1.62l-3.1,5.09l-0.35,1.8l0.48,3.17l-1.06,2.62l-1.6,1.66l-0.19,1.39l1.94,4.81l2.05,3.55l0.17,2.02l-0.57,3.34l1.08,2.75l1.66,2.32l4.61,3.02l5.9,5.89l4.24,2.73l-14.21,8.38l-3.76,4.96l-0.79,3.35l0.43,5.56l-0.61,2.93l-1.49,2.18l-1.77,0.9l-4.45,1.24l-5.27,3.65l-0.85,3.1l3.43,8.4l-6.4,5.16l-0.64,1.4l0.14,0.81l2.63,2.67l1.61,4.43l1.87,2.45l2.08,1.08l4.39,0.78l1.72,0.95l2.14,3.9l-0.72,4.02l-4.91,8.32l-6.19,6.62l-5.75,-0.94l-6.5,-2.52l-7.53,1.92l0.61,-3.17l1.2,-2.97l0.8,-3.09l-0.32,-4.44l-1.13,-3.35l-1.69,-3.31l-3.47,-5.38l-2.0,-4.03l-1.3,-1.58l-1.48,-1.02l-11.44,-5.34l-3.1,-0.96l-2.91,-0.18l4.3,-8.27l5.67,-6.0l3.01,-5.94l-0.06,-0.44l-5.07,-5.82l-3.32,-1.05l-6.09,0.13l-3.08,-0.37l-1.37,-0.81l-1.41,-2.25l-1.87,-0.7l-1.6,0.57l-3.06,2.36l-1.29,0.63l-3.32,-0.15l-9.22,-4.68l-5.72,-1.99l-12.54,-16.09l-5.72,-5.11l-5.61,-2.48l-5.19,-1.81l-3.55,-2.55l-2.11,-3.87l-0.77,-5.97l0.67,-6.36l3.23,-12.92l0.69,-7.26l-0.1,-7.59l-0.83,-5.7l-3.08,-3.78l-5.73,-0.87l-2.33,0.41Z\",\n            name: \"Ticino\"\n          },\n          \"CH-TG\": {\n            path: \"M567.83,30.76l1.84,0.66l2.15,-0.81l5.87,2.69l5.94,3.84l5.13,1.16l7.81,-0.64l7.33,-2.0l3.28,-3.0l3.61,-1.23l22.16,2.14l10.81,0.0l4.73,5.8l32.78,16.76l1.76,1.6l3.46,7.63l1.02,0.35l9.02,6.86l-1.85,-0.8l-10.17,6.59l-1.34,2.2l-2.58,-1.47l-4.37,-4.86l-0.38,-0.97l0.61,-1.34l0.09,-2.01l-2.27,-2.94l-3.91,0.35l-2.01,1.2l-3.3,0.47l-1.33,0.44l-1.77,1.36l-0.8,-0.19l-0.53,0.21l-0.46,0.63l0.03,0.65l1.09,0.8l2.23,0.26l2.32,-0.58l1.09,0.11l0.93,3.45l-1.12,2.53l-0.68,0.9l-0.97,0.61l-1.21,0.34l-2.84,-0.25l-2.67,1.38l-11.08,-1.88l-6.41,-2.65l-2.92,-2.98l-0.62,0.06l-2.63,3.66l-1.46,0.72l-3.22,0.43l-2.41,0.02l-2.55,-0.58l-2.52,0.24l-0.41,-0.09l-1.32,-1.47l-0.85,-0.2l-3.53,0.46l-2.64,-0.52l-0.92,0.16l-1.78,1.56l-3.05,0.84l-0.92,1.55l0.23,1.41l0.58,0.98l5.34,3.28l0.28,3.25l-0.35,1.19l-3.03,0.68l-1.92,0.83l-2.19,-0.09l-1.09,0.41l-0.79,0.98l-2.2,4.3l-1.96,1.99l-2.74,4.27l-1.51,1.74l-1.68,0.1l-7.54,-6.86l1.75,-2.38l0.67,-2.9l1.08,-1.1l0.12,-0.63l-3.62,-2.66l-0.93,-5.04l-2.06,-1.3l-0.78,-1.95l0.16,-1.0l1.59,-1.2l0.49,-0.93l-0.21,-1.62l1.32,-6.64l-0.58,-1.1l-1.61,-1.13l-7.81,-3.01l-1.06,-1.07l-0.69,-2.03l1.17,-1.92l0.0,-0.51l-2.23,-2.42l-12.82,-5.45l-2.35,-0.67l-2.3,-2.6l0.26,-0.66l1.11,-0.79l1.28,-0.39l1.28,0.17l2.77,1.22l1.98,1.57l1.71,0.2l1.55,-2.12l1.76,-1.71l2.32,-3.58l0.41,-1.61l-0.41,-1.22l-2.18,-2.17l-0.75,-3.26l-0.53,-0.29l-2.35,0.87l1.78,-3.68ZM697.16,73.08l4.21,3.2l-2.26,0.59l-2.41,-0.86l-0.25,-0.45l0.82,-2.15l-0.12,-0.34Z\",\n            name: \"Thurgau\"\n          },\n          \"CH-OW\": {\n            path: \"M482.58,238.26l0.71,0.46l0.91,-0.2l3.82,-2.16l0.72,-0.03l0.7,0.27l0.81,1.54l2.31,1.47l11.68,-0.47l2.71,1.07l0.35,0.69l-0.18,0.42l-2.07,2.17l-1.08,1.77l-1.64,5.09l-0.84,1.44l0.45,1.39l1.24,1.25l0.47,2.03l-0.52,2.12l-6.14,1.63l-3.98,-1.21l-3.75,0.47l-1.25,0.57l-1.02,-0.74l4.89,-1.34l0.73,-1.01l-1.07,-1.52l-3.89,-1.69l-2.4,-2.98l-0.58,-2.01l-1.94,-1.22l0.04,-2.31l-1.14,-3.15l-0.64,-4.08l-0.76,-1.89l0.62,-1.04l0.6,-0.36l0.42,0.12l0.88,1.1l-0.19,2.36ZM474.08,224.43l-0.03,6.6l-1.24,4.04l-0.55,7.44l0.49,6.01l4.21,5.13l3.43,1.8l-7.83,2.66l-6.73,4.04l-2.06,0.7l-1.83,-0.05l-3.86,-1.05l-10.43,-1.12l-2.52,0.43l-5.61,1.72l-3.71,-1.25l-8.9,-5.08l-3.89,-0.73l-5.57,-0.26l2.87,-4.21l-1.05,-3.91l-1.0,-1.85l-0.61,-2.44l3.87,-8.01l0.74,-3.66l1.34,-2.95l1.4,-1.75l1.59,-0.83l1.54,0.02l1.08,1.11l1.35,-0.3l4.74,-5.2l4.01,-3.21l0.45,-1.63l-0.92,-3.36l0.28,-0.42l3.18,-1.81l11.04,-0.92l3.43,-0.72l3.01,-1.23l8.21,1.98l0.9,0.77l-0.26,1.07l-0.86,2.12l-1.7,2.52l-0.23,2.14l2.37,2.21l4.66,1.88l0.86,0.69l0.34,0.87Z\",\n            name: \"Obwalden\"\n          },\n          \"CH-AG\": {\n            path: \"M354.73,63.79l6.77,-1.21l3.86,-1.87l3.32,-3.39l3.44,-4.62l2.65,1.14l12.72,0.66l1.02,0.91l0.99,4.6l0.93,1.41l26.03,-0.01l9.09,-1.78l2.05,-1.23l1.69,-2.38l1.63,-1.61l1.57,-1.05l4.27,-1.98l3.78,-1.02l2.34,-2.46l0.9,-0.5l10.66,-1.54l3.53,-0.01l5.12,1.35l2.23,0.21l0.92,0.94l2.46,4.86l2.22,1.29l7.65,1.74l12.85,0.06l-0.2,0.89l-4.5,6.27l-4.33,3.79l-3.34,4.61l-1.06,4.96l-0.1,2.66l1.1,3.72l4.39,8.05l1.47,3.88l3.15,3.92l-0.73,1.83l-5.23,4.6l-0.41,1.96l1.79,1.41l3.9,1.72l0.72,0.73l-0.49,4.95l0.19,0.94l0.55,1.17l2.35,2.19l5.64,-1.34l-0.41,1.7l-1.77,2.67l-3.65,4.06l-3.34,1.78l-2.94,0.61l-0.32,0.49l0.53,2.14l4.37,8.01l-2.48,4.11l-0.33,2.42l1.02,10.71l1.41,8.39l-5.23,-0.19l-2.36,-0.98l-2.43,-2.32l-2.85,-4.1l-6.65,-16.39l-1.52,-2.9l-1.5,-4.68l-2.35,-2.48l-3.41,-1.24l-3.79,0.4l-3.34,3.37l-0.97,2.14l-4.46,6.85l-3.09,1.99l-1.6,0.15l-2.81,-1.58l-0.84,-1.65l1.46,-0.56l0.1,-0.7l-0.66,-0.45l-1.92,-0.65l-5.36,-0.17l-3.85,-1.1l-3.31,-2.72l-13.43,4.5l-4.29,-7.3l-3.42,-1.3l-4.31,0.08l-0.83,0.11l-0.55,0.45l-0.26,0.96l0.16,4.94l-0.21,0.59l-0.93,0.7l-4.97,1.54l-4.55,0.01l-11.94,2.09l-2.42,-3.57l-0.63,-5.23l1.41,-1.55l5.34,-8.82l8.68,-6.85l3.03,0.84l12.72,1.66l3.29,-1.62l2.86,-5.61l2.23,-2.91l1.49,-2.94l-0.17,-5.0l-0.3,-0.37l-2.46,-0.6l-1.87,-0.9l-1.66,-1.37l-0.85,-1.06l-0.84,-3.41l-1.35,-0.87l-0.07,-3.4l-0.45,-1.06l-1.96,-1.92l-3.02,-0.47l-2.31,-1.32l-0.33,-1.3l-0.03,-3.55l-0.36,-0.39l-6.01,-0.55l-1.63,-1.04l-0.72,-1.89l-5.8,-7.59l-0.91,-1.72l-1.23,-0.87l-1.54,-1.82l-3.05,-0.84l-1.53,0.23l-0.72,0.62l-0.48,3.36l-0.41,0.58l-4.89,3.82l-2.33,0.29l-0.8,-1.97l-0.14,-2.92l-1.26,-0.92l-1.02,-0.18l-6.87,-2.91Z\",\n            name: \"Aargau\"\n          },\n          \"CH-GE\": {\n            path: \"M43.64,378.51l-3.1,7.38l-1.33,9.25l-1.42,1.16l-1.15,1.61l-0.85,1.83l-0.59,2.13l0.17,0.44l0.47,-0.03l10.01,-8.63l7.8,-13.28l0.46,1.84l1.92,4.13l1.04,1.25l2.4,0.95l3.2,-1.27l1.04,0.39l0.95,5.32l-4.96,4.56l-12.81,7.38l-10.13,10.3l-6.25,2.79l-6.79,-2.6l-9.09,0.31l-9.12,1.88l-3.83,1.97l3.63,-6.81l0.66,-2.24l-3.59,-4.2l-1.98,-3.24l0.66,-2.67l4.69,-2.59l11.91,-5.07l3.62,0.5l1.24,-0.12l4.71,-1.4l0.91,-1.88l-0.08,-4.93l1.41,-7.02l0.64,-1.9l2.68,-5.2l10.82,7.69Z\",\n            name: \"Gen\\xe8ve\"\n          },\n          \"CH-AI\": {\n            path: \"M726.92,90.17l-3.04,2.62l-0.5,0.77l-0.25,1.37l-5.71,-2.46l-0.19,-0.32l0.0,-0.5l3.42,0.17l3.1,-0.53l3.17,-1.12ZM709.29,96.6l0.45,-1.26l2.37,-1.68l0.52,-0.11l2.0,1.58l0.72,0.89l0.16,0.75l-0.02,0.91l-1.05,1.17l0.35,2.85l-2.39,-0.98l-2.61,0.36l-4.73,1.59l0.41,-1.96l4.24,-1.87l0.59,-0.64l-0.19,-0.96l-0.79,-0.65ZM687.85,139.94l-5.55,1.82l-2.84,-0.34l-3.08,-1.35l-2.48,-1.56l-2.09,-5.62l-2.55,-3.36l-0.66,-1.44l-0.35,-2.07l0.55,-5.8l0.61,-1.33l2.87,-2.03l1.65,-1.66l1.17,-1.83l1.11,-2.59l0.16,-4.84l0.94,-0.78l20.98,8.49l6.05,0.19l-3.27,13.85l-3.84,6.19l-2.7,2.6l-2.82,1.76l-3.85,1.71Z\",\n            name: \"Appenzell Innerrhoden\"\n          },\n          \"CH-GL\": {\n            path: \"M655.12,222.42l-5.42,4.19l-3.42,4.06l-2.51,1.12l-3.7,0.04l-2.95,0.55l-6.88,4.05l-1.82,0.44l-1.42,-0.45l-0.92,-1.08l-1.45,-0.91l-2.1,-0.64l-3.41,-0.25l-3.37,0.95l-0.7,0.9l-0.34,3.6l-2.65,4.78l-1.4,1.6l-2.77,2.25l-4.45,1.81l-10.95,2.93l-1.72,0.04l-0.54,-0.33l-0.46,-1.6l-0.66,-0.87l-3.08,-0.81l-3.78,-0.15l-0.29,-5.66l0.29,-1.37l6.49,-4.45l2.08,-0.24l4.37,-1.58l1.44,-1.11l0.89,-1.54l-0.03,-4.04l-0.51,-1.67l-2.83,-4.62l4.04,-1.92l1.74,-6.42l-0.34,-1.76l-0.96,-1.41l-4.05,-2.66l-0.78,-1.24l0.5,-1.49l-0.12,-0.62l-5.6,-6.97l-2.63,-2.1l0.82,-2.4l2.11,-1.35l4.91,-2.02l1.87,-1.78l1.65,-2.15l1.98,-3.51l0.23,-2.07l-0.44,-3.14l1.34,-2.31l0.62,-4.33l3.75,-10.41l2.96,-1.38l0.95,0.03l10.36,8.12l3.21,1.57l20.63,3.48l-0.96,11.58l-1.05,3.35l-6.78,4.09l-0.68,1.06l0.33,0.73l3.68,1.84l1.38,0.35l3.85,-0.34l2.32,-0.98l2.7,-0.49l1.45,0.94l1.59,1.85l2.6,4.6l1.13,3.84l-0.92,7.15l-0.59,1.55l0.79,3.21l1.55,3.03l0.19,0.83l-0.36,2.12Z\",\n            name: \"Glarus\"\n          },\n          \"CH-GR\": {\n            path: \"M639.97,409.36l-4.3,-2.76l-5.85,-5.85l-4.62,-3.02l-1.52,-2.16l-0.96,-2.44l0.57,-3.12l-0.18,-2.3l-2.11,-3.71l-1.87,-4.59l0.07,-0.81l1.61,-1.7l1.17,-2.91l-0.48,-3.31l0.31,-1.56l3.02,-4.93l0.74,-1.79l-0.18,-7.64l1.94,-5.69l-0.2,-1.16l-1.69,-3.36l-0.32,-1.99l0.4,-2.72l0.03,-3.55l-2.35,-3.93l-0.39,-0.19l-3.0,0.38l-1.3,0.49l-1.13,-0.44l-4.2,-5.73l-1.08,-2.4l-1.21,-4.71l2.04,-9.32l2.56,-4.87l-0.13,-1.01l-0.58,-0.76l-2.8,-2.3l-4.64,-1.91l-6.7,-0.59l-1.38,-2.38l-0.21,-1.27l-1.01,-0.76l-1.35,0.16l-1.56,1.31l-3.42,0.89l-1.57,0.8l-1.45,1.76l-0.39,1.42l0.75,2.75l-0.32,0.62l-1.79,1.15l-10.04,3.48l-11.68,1.77l-15.28,-1.22l-6.29,-2.51l0.53,-3.23l-1.5,-5.15l-0.66,-1.01l-2.32,-1.27l-0.89,-1.61l-0.23,-1.33l0.14,-1.28l1.38,-3.87l1.47,-2.92l0.44,-2.35l-0.18,-1.39l0.6,-0.89l1.26,-0.96l3.16,-1.22l2.08,-0.4l1.96,-0.96l6.65,-7.05l3.29,-1.0l3.75,0.98l3.11,-0.59l0.81,-0.45l0.88,-1.22l-0.18,-2.23l0.23,-0.71l3.47,-4.51l0.29,-2.18l-0.13,-2.81l0.37,-0.4l2.94,-0.85l1.28,-1.2l2.33,-1.15l2.04,-2.32l3.91,0.16l2.85,0.77l0.7,2.08l1.17,0.76l1.98,-0.05l11.07,-2.96l4.63,-1.9l2.85,-2.31l1.5,-1.7l2.77,-4.99l0.36,-3.66l0.34,-0.44l3.06,-0.85l3.21,0.25l1.82,0.56l1.35,0.85l1.04,1.17l1.85,0.53l1.99,-0.48l6.85,-4.04l2.78,-0.52l3.88,-0.07l2.74,-1.23l3.49,-4.12l5.23,-4.05l2.91,2.96l0.9,0.28l1.15,0.0l0.93,-0.41l26.54,3.34l4.0,1.74l2.2,1.44l1.6,0.2l0.81,-0.26l0.77,-2.12l2.52,-0.82l2.63,-4.01l0.62,-1.51l0.13,-2.54l0.6,-2.88l2.32,-3.98l2.92,-2.39l1.3,-3.36l1.89,-1.34l1.47,-0.34l0.26,-0.59l-7.2,-10.89l-2.19,-4.15l-1.5,-4.53l4.02,1.02l12.18,1.75l4.17,-1.11l3.77,0.84l10.41,-1.11l3.27,0.43l37.33,10.16l-0.13,2.9l1.11,0.7l1.05,-0.07l0.52,0.53l0.0,1.25l-0.82,2.44l-0.49,5.88l-0.63,2.68l0.32,2.51l2.71,3.39l5.06,3.33l21.26,5.92l7.72,6.33l4.57,2.28l8.62,2.39l4.33,0.14l5.15,-1.27l8.77,-3.85l2.27,-2.82l0.71,-4.08l0.92,-3.08l2.9,-4.22l2.99,-0.48l3.91,0.87l4.97,-0.2l0.38,-0.39l0.1,-4.59l3.4,-5.64l4.95,-4.9l5.68,-2.81l1.95,-0.0l0.93,0.52l2.04,1.9l4.24,5.85l6.75,4.63l1.67,1.73l1.02,4.04l-2.44,8.44l0.46,5.47l-1.04,8.01l-0.69,2.16l-5.56,6.35l0.37,3.74l1.43,3.72l0.46,3.25l-2.26,2.97l-3.49,2.05l-0.83,2.45l0.18,2.82l-0.42,3.43l-1.83,2.83l-2.23,1.9l-0.95,2.39l1.66,5.08l3.7,3.78l8.63,0.9l3.97,2.89l1.45,4.64l-0.14,6.36l-1.56,6.1l-2.65,3.8l-3.36,0.56l-14.21,-3.24l-7.02,0.56l-2.46,-0.35l-2.13,-0.85l-2.28,-2.39l-1.7,-1.27l-8.02,-2.39l-0.79,-2.42l1.07,-5.04l-0.55,-3.24l-3.41,-2.33l-5.13,0.04l-18.98,4.72l-1.99,0.94l-1.08,2.1l-2.43,8.09l-1.57,1.83l-4.29,3.71l-1.85,2.47l-0.31,7.29l-0.86,2.77l0.25,2.32l0.48,1.88l1.03,1.53l1.49,0.92l-3.29,4.83l0.04,0.5l3.3,3.5l5.86,1.98l8.96,1.51l3.26,1.14l1.32,2.5l-1.44,5.22l-1.36,1.58l-4.15,3.23l-1.6,2.53l-1.05,3.48l-0.14,2.38l0.87,2.35l1.81,2.79l8.25,7.31l2.41,4.2l-2.45,4.48l-5.43,2.97l-8.31,2.74l-6.15,-0.11l-0.15,-5.26l-2.06,-4.41l-7.96,-6.19l-2.84,-3.33l-1.27,-5.34l-0.1,-5.02l-1.32,-4.07l-5.17,-3.07l-4.27,-0.98l-3.96,-0.25l-8.7,1.3l-13.35,5.94l-4.03,1.14l-2.41,-0.45l-4.81,-2.52l-2.61,0.02l-2.28,2.36l-0.39,2.86l0.23,4.71l-2.89,3.48l-3.58,1.26l-22.73,-0.23l-4.54,-1.44l-4.13,-2.43l-2.46,-2.94l-4.09,-9.13l-1.83,-1.3l-4.37,-2.1l-1.31,-1.12l-0.34,-1.22l0.28,-3.79l-1.2,-24.01l-0.67,-1.7l-0.45,-0.24l-1.71,0.36l-3.22,2.06l-1.45,1.68l-1.63,3.21l-1.9,0.66l-1.31,-0.49l-4.9,-4.05l-0.14,-2.92l-0.31,-0.37l-4.09,-0.92l-9.92,1.12l-3.91,3.18l-3.46,6.03l-1.61,6.23l1.96,3.68l2.64,1.65l0.35,2.26l-0.51,3.16l0.02,3.57l2.69,8.94l0.26,3.11l-1.21,5.39l-5.81,10.54l-2.98,8.95l-1.75,2.44l-2.22,1.8l-2.4,0.99l-2.31,1.57l-2.04,5.35l-1.24,2.04Z\",\n            name: \"Graub\\xfcnden\"\n          },\n          \"CH-AR\": {\n            path: \"M727.16,89.24l-3.64,1.29l-2.95,0.5l-3.71,-0.19l-0.42,0.4l0.06,1.24l0.5,0.69l6.08,2.62l0.27,1.81l-7.75,4.15l-0.34,-2.76l0.9,-0.8l0.16,-1.42l-0.27,-1.16l-0.8,-0.99l-2.59,-1.87l-0.92,0.22l-2.53,1.79l-0.73,1.94l1.04,1.2l-4.79,2.46l-1.64,9.21l1.18,3.46l-5.75,-0.15l-21.14,-8.56l-1.67,1.12l-0.29,5.22l-1.01,2.31l-1.07,1.7l-1.59,1.6l-2.88,2.03l-0.81,1.65l-0.59,6.05l0.41,2.38l0.77,1.64l2.47,3.23l1.93,5.24l-3.97,0.63l-2.01,-1.31l-6.13,-2.92l-10.04,-1.16l-2.49,-0.83l-1.17,-1.19l2.15,-2.47l-1.38,-5.6l0.11,-1.48l0.32,-0.87l1.95,-2.04l0.94,-1.73l-0.25,-0.86l-0.86,-0.64l-2.85,0.31l-2.33,-3.97l2.65,-2.3l3.47,-6.02l1.52,-2.03l1.7,0.24l8.47,-0.91l3.37,0.91l16.14,-2.59l4.37,0.05l2.49,-0.65l1.38,-1.26l1.07,-2.97l0.94,-1.39l3.92,-1.0l10.01,-3.86l5.23,-3.75l3.14,0.72l2.49,1.61l3.18,1.09l6.61,0.98Z\",\n            name: \"Appenzell Ausserrhoden\"\n          }\n        },\n        height: 497.64536275046987,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"continents_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 440.7063107441331,\n          bbox: [{\n            y: -12671671.123330014,\n            x: -20004297.151525836\n          }, {\n            y: 6930392.025135122,\n            x: 20026572.394749384\n          }],\n          left: 0\n        }],\n        paths: {\n          AF: {\n            path: \"M388.36,214.16l1.16,-0.96l2.44,-0.39l1.94,-1.82l1.31,-0.78l2.09,-2.28l-0.51,-3.65l1.24,-3.7l1.5,-1.75l4.46,-2.57l2.37,-4.47l1.44,0.01l1.68,1.21l2.32,-0.19l3.7,0.65l2.57,-1.58l2.63,-0.48l1.7,-1.22l2.31,-0.84l8.24,-0.73l1.49,0.38l2.28,-1.1l2.46,-0.02l1.18,0.67l1.83,-0.2l2.61,-1.12l1.29,0.26l-0.06,1.11l0.58,0.38l1.47,-0.73l-1.0,1.27l-0.02,1.32l0.84,0.88l-0.28,2.09l-1.53,1.32l-0.12,0.42l0.48,1.54l1.42,0.32l0.53,1.11l1.19,0.65l2.94,0.96l1.18,-0.21l1.98,0.44l3.15,1.18l1.37,2.54l5.72,1.67l2.64,1.35l1.61,-0.72l1.29,-1.34l-0.44,-2.34l0.66,-1.13l1.67,-1.21l1.57,-0.35l3.14,0.53l1.08,1.28l3.99,0.78l0.85,0.94l3.27,-0.04l5.97,1.95l2.23,-0.88l1.02,-0.77l2.04,-0.21l1.53,0.3l0.59,1.19l0.69,0.04l0.41,-0.64l1.81,0.58l1.95,0.16l1.04,-0.51l1.42,4.08l-1.8,4.36l-0.23,0.18l-1.66,-1.77l-1.76,-3.85l-0.64,-0.12l-0.36,0.67l1.04,2.88l3.47,7.0l1.75,2.99l2.03,2.65l-0.36,0.53l0.23,2.01l3.25,2.79l0.71,2.25l-0.49,0.66l0.36,2.69l0.93,3.16l2.39,1.75l1.39,2.86l0.8,2.51l4.8,3.68l3.5,3.77l1.71,1.41l-0.05,0.66l-1.2,0.51l-0.06,0.7l1.8,1.11l0.53,1.06l1.13,1.06l1.51,0.12l5.22,-0.97l4.31,-1.4l2.24,-0.15l2.43,-0.62l1.24,-0.86l0.45,-0.0l-0.2,3.0l-1.21,3.62l-2.73,5.97l-2.13,3.65l-5.03,6.16l-8.56,6.4l-2.78,3.08l-1.1,1.86l-1.7,0.97l-0.67,1.03l-1.08,0.46l-0.34,1.67l-0.81,1.07l-0.45,1.55l-1.03,0.92l-1.18,3.28l0.35,1.73l1.43,0.82l-0.6,1.76l-0.01,2.33l1.89,4.03l0.96,0.67l0.33,0.93l0.31,8.69l0.41,1.23l-1.61,3.38l-1.5,1.5l-5.16,2.28l-2.78,2.73l-1.02,0.53l-1.71,1.8l-0.98,0.57l-0.35,2.41l1.16,1.94l0.49,2.17l0.43,0.31l-0.06,2.06l-0.39,1.17l0.5,0.72l-0.25,0.73l-0.92,0.83l-5.03,2.32l-1.19,1.05l0.09,1.5l0.58,0.39l-1.08,5.21l-0.58,1.09l-2.2,1.79l-3.17,4.76l-4.54,4.48l-1.83,1.23l-2.53,1.05l-1.22,0.14l-0.51,0.7l-1.18,-0.32l-1.39,0.5l-2.59,-0.52l-1.61,0.33l-1.18,-0.11l-2.55,1.1l-2.1,0.44l-1.6,1.07l-0.85,0.05l-0.93,-0.89l-0.93,-0.15l-0.97,-1.13l-0.25,0.05l-0.13,-1.96l-0.68,-1.56l0.7,-0.68l-0.13,-2.33l-4.68,-8.43l-1.88,-2.1l-0.93,-1.88l-1.99,-8.56l-0.06,-3.12l-0.33,-1.52l-2.3,-3.34l-1.91,-4.83l-1.96,-2.43l-0.37,-3.45l0.33,-2.16l1.78,-5.68l2.87,-3.95l0.13,-3.41l-0.8,-1.08l-1.21,-2.87l0.87,-1.62l-1.27,-4.12l-1.17,-1.53l0.13,-0.6l-1.01,-2.64l-2.12,-2.77l-4.21,-4.58l-1.44,-2.45l1.72,-5.12l-0.39,-0.62l1.16,-4.58l-1.03,-1.93l-1.19,-0.54l-0.44,-0.97l-0.6,-0.42l0.02,-0.45l-0.53,-0.39l-2.51,0.87l-1.11,-0.07l-0.86,0.5l-1.71,-0.05l-1.19,-1.39l-0.89,-1.89l-1.77,-1.66l-4.36,-0.08l-4.23,0.85l-7.43,3.01l-2.11,-0.67l-4.62,-0.46l-3.02,0.44l-4.2,1.63l-1.01,-0.04l-2.45,-1.13l-4.38,-3.26l-1.66,-1.6l-2.51,-1.23l-1.22,-1.26l-0.76,-2.79l-2.11,-2.53l-1.2,-0.78l-0.67,-1.67l-2.15,-1.57l-1.09,-0.23l-0.54,-1.06l-0.65,-0.46l-0.5,-2.23l0.26,-1.33l-1.03,-1.99l-0.81,-0.64l0.64,-0.35l1.84,-3.18l-0.17,-1.48l0.68,-1.29l0.31,-2.43l-0.57,-3.91l0.2,-1.48l-0.74,-1.36l-1.16,-0.99l0.19,-1.94l0.92,-0.73l0.82,-1.37l-0.09,-1.04l0.79,-1.7l1.31,-1.58l0.96,-0.59l0.66,-1.55l0.09,-1.47l0.81,-1.48l1.72,-1.07l1.55,-2.69ZM508.61,319.02l-0.38,-2.84l0.59,-2.36l-0.82,-1.23l-0.31,-2.78l-1.32,-1.35l-0.67,0.17l-0.22,0.77l0.87,1.86l0.15,2.86l-0.69,1.65l0.71,1.8l0.06,1.28l0.49,0.64l0.07,1.06l0.4,0.55l0.8,-0.23l0.55,0.61l0.69,-0.19l0.04,-0.53l-0.51,-1.36l-0.5,-0.36ZM500.35,287.48l-0.53,3.14l0.76,1.3l0.5,0.12l1.05,-0.53l1.19,-0.12l0.61,0.24l1.43,-0.62l0.1,-0.67l-0.71,-0.62l1.92,-2.15l0.1,-2.1l-0.91,-1.28l-1.64,-0.47l-2.77,1.06l-1.15,1.46l0.04,1.23ZM496.99,305.58l-0.14,0.54l0.29,0.49l1.21,0.63l0.83,-0.05l0.23,-0.55l-1.44,-2.93l-0.18,-1.49l-1.9,-1.74l0.42,-1.05l-0.44,-0.89l0.08,-0.96l-0.46,-0.58l0.08,-1.16l-0.93,-2.42l-0.42,-0.25l-0.35,0.35l-0.45,4.01l0.64,1.47l-0.37,1.22l0.86,1.8l1.53,1.41l0.3,1.26l0.61,0.9ZM545.91,319.14l0.4,3.03l0.62,1.21l-0.21,1.02l-0.57,-0.8l-0.69,-0.01l-0.47,0.76l0.41,2.12l-0.18,0.87l-0.73,0.78l-0.15,2.14l-4.71,15.2l-1.06,2.88l-3.92,1.64l-3.12,-1.49l-0.6,-1.21l-0.19,-2.4l-0.86,-2.05l-0.21,-1.77l0.38,-1.62l1.21,-0.75l0.01,-0.76l1.19,-2.04l0.23,-1.66l-1.06,-2.99l-0.19,-2.21l0.81,-1.33l0.32,-1.46l4.63,-1.22l3.44,-3.0l0.85,-1.4l-0.08,-0.7l0.78,-0.04l1.38,-1.77l0.13,-1.64l0.45,-0.61l1.16,1.69l0.59,1.6Z\",\n            name: \"Africa\"\n          },\n          NA: {\n            path: \"M892.72,99.2l1.31,0.53l1.41,-0.37l1.89,0.98l1.89,0.42l-1.32,0.58l-2.9,-1.53l-2.08,0.22l-0.26,-0.15l0.07,-0.67ZM353.02,1.2l14.69,4.67l-3.68,1.89l-22.97,0.86l-0.36,0.27l0.12,0.43l1.55,1.18l8.79,-0.66l7.48,2.07l4.86,-1.77l1.66,1.73l-2.53,3.19l-0.01,0.48l0.46,0.15l6.35,-2.2l12.06,-2.31l7.24,1.13l1.09,1.99l-9.79,4.01l-1.44,1.32l-7.87,0.98l-0.35,0.41l0.38,0.38l5.07,0.24l-2.53,3.58l-2.07,3.81l0.08,6.05l2.57,3.11l-3.22,0.2l-4.12,1.66l-0.05,0.72l4.45,2.65l0.51,3.75l-2.3,0.4l-0.25,0.64l2.79,3.69l-4.82,0.31l-0.36,0.29l0.16,0.44l2.62,1.8l-0.59,1.22l-3.3,0.7l-3.45,0.01l-0.29,0.68l3.03,3.12l0.02,1.34l-4.4,-1.73l-1.72,1.35l0.15,0.66l3.31,1.15l3.13,2.71l0.81,3.16l-3.85,0.75l-4.89,-4.26l-0.47,-0.03l-0.17,0.44l0.79,2.86l-2.71,2.21l-0.13,0.44l0.37,0.27l8.73,0.34l-12.32,6.64l-7.24,1.48l-2.94,0.08l-2.69,1.75l-3.43,4.41l-5.24,2.84l-1.73,0.18l-7.12,2.1l-2.15,2.52l-0.13,2.99l-1.19,2.45l-4.01,3.09l-0.14,0.44l0.97,2.9l-2.28,6.48l-3.1,0.2l-3.83,-3.07l-4.86,-0.02l-2.25,-1.93l-1.7,-3.79l-4.3,-4.84l-1.21,-2.49l-0.44,-3.8l-3.32,-3.63l0.84,-2.86l-1.56,-1.7l2.28,-4.6l3.83,-1.74l1.03,-1.96l0.52,-3.47l-0.59,-0.41l-4.17,2.21l-2.07,0.58l-2.72,-1.28l-0.15,-2.71l0.85,-2.09l2.01,-0.06l5.06,1.2l0.46,-0.23l-0.14,-0.49l-6.54,-4.47l-2.67,0.55l-1.58,-0.86l2.56,-4.01l-0.03,-0.48l-1.5,-1.74l-4.98,-8.5l-3.13,-1.96l0.03,-1.88l-0.24,-0.37l-6.85,-3.02l-5.36,-0.38l-12.7,0.58l-2.78,-1.57l-3.66,-2.77l5.73,-1.45l5.0,-0.28l0.38,-0.38l-0.35,-0.41l-10.67,-1.38l-5.3,-2.06l0.25,-1.54l18.41,-5.26l1.22,-2.27l-0.25,-0.55l-6.14,-1.86l1.68,-1.77l8.55,-4.03l3.59,-0.63l0.3,-0.54l-0.88,-2.27l5.47,-1.47l7.65,-0.95l7.55,-0.05l3.04,1.85l6.48,-3.27l5.81,2.22l3.56,0.5l5.16,1.94l0.5,-0.21l-0.17,-0.52l-5.71,-3.13l0.28,-2.13l8.12,-3.6l8.7,0.28l3.35,-2.34l8.71,-0.6l19.93,0.8ZM280.06,145.6l-1.67,2.88l0.07,0.49l0.5,0.04l1.46,-0.98l1.0,0.42l-0.56,0.72l0.17,0.62l2.22,0.89l1.35,-0.71l1.95,0.78l-0.66,2.01l0.5,0.51l1.32,-0.42l0.98,3.17l-0.91,2.41l-0.8,0.08l-1.23,-0.45l0.47,-2.25l-0.89,-0.83l-0.48,0.06l-2.78,2.63l-0.34,-0.02l1.02,-0.85l-0.14,-0.69l-2.4,-0.77l-7.4,0.08l-0.17,-0.41l1.3,-0.94l0.02,-0.64l-0.73,-0.58l1.85,-1.74l2.57,-5.16l1.47,-1.79l1.99,-1.05l0.46,0.06l-1.53,2.45ZM133.68,213.97l0.68,-0.08l0.93,-1.01l0.08,-1.78l-1.93,-1.94l-1.46,-0.77l-2.94,-5.59l-1.52,-4.04l-1.62,-1.61l-1.14,-0.38l-0.55,-0.88l-1.28,-0.13l-1.01,-0.77l-2.22,-0.27l-0.43,-0.3l-0.36,-1.58l-2.4,-2.83l-2.01,-3.85l-0.06,-0.9l-2.92,-3.26l-0.33,-2.29l-1.3,-1.66l0.52,-2.37l-0.09,-2.57l-0.78,-2.3l0.95,-2.82l0.61,-5.68l-0.47,-4.27l-1.46,-4.08l3.19,0.79l1.26,2.83l0.69,0.08l0.69,-1.14l-0.42,-2.68l-0.85,-2.64l-7.11,-4.81l-4.5,-1.38l-1.26,-2.66l0.33,-1.93l-0.23,-0.43l-3.01,-1.35l-0.55,-2.77l-2.89,-2.38l-0.17,-1.88l-1.47,-1.38l-2.04,-1.03l-0.67,-2.89l-3.28,-3.03l-1.65,-3.57l-6.35,-0.32l-2.82,-1.01l-5.26,-3.85l-6.77,-2.04l-3.53,0.3l-4.81,-1.69l-3.25,-1.63l-2.78,0.8l-0.28,0.46l0.44,2.21l-3.91,0.96l-2.26,1.27l-2.3,0.65l-0.27,-1.65l1.05,-3.42l2.49,-1.09l0.16,-0.6l-0.69,-0.96l-0.55,-0.1l-3.19,2.12l-1.78,2.56l-3.55,2.61l-0.04,0.61l1.56,1.52l-2.07,2.29l-5.11,2.57l-0.77,1.66l-3.76,1.77l-0.92,1.73l-2.69,1.38l-1.81,-0.22l-6.95,3.32l-3.97,0.91l4.85,-2.5l2.59,-1.86l3.26,-0.52l1.19,-1.4l3.42,-2.1l2.59,-2.27l0.42,-2.68l1.23,-2.1l-0.04,-0.46l-0.45,-0.11l-2.68,1.03l-0.63,-0.49l-0.53,0.03l-1.05,1.04l-1.36,-1.54l-0.66,0.08l-0.32,0.62l-0.58,-1.14l-0.56,-0.16l-2.41,1.42l-1.07,-0.0l-0.17,-1.75l0.3,-1.71l-1.61,-1.33l-3.41,0.59l-1.96,-1.63l-1.57,-0.84l-0.15,-2.21l-1.7,-1.43l0.82,-1.88l1.99,-2.12l0.88,-1.92l1.71,-0.24l2.04,0.51l1.87,-1.77l1.91,0.25l1.91,-1.23l0.17,-0.43l-0.47,-1.82l-1.07,-0.7l1.39,-1.17l0.12,-0.45l-0.39,-0.26l-1.65,0.07l-2.66,0.88l-0.75,0.78l-1.92,-0.8l-3.46,0.44l-3.44,-0.91l-1.06,-1.61l-2.65,-1.99l2.91,-1.43l5.5,-2.0l1.52,0.0l-0.26,1.62l0.41,0.46l5.29,-0.16l0.3,-0.65l-2.03,-2.59l-3.14,-1.68l-1.79,-2.12l-2.4,-1.83l-3.09,-1.24l1.04,-1.69l4.43,-0.2l3.16,-2.0l0.73,-2.27l2.39,-1.99l2.42,-0.52l4.65,-1.97l2.46,0.23l3.71,-2.35l3.5,0.89l1.73,1.97l0.55,0.05l0.99,-0.79l3.65,0.24l-0.09,0.62l0.32,0.45l3.83,0.77l2.61,-0.43l5.19,1.4l4.84,0.43l1.89,0.57l3.42,-0.7l3.74,1.32l7.34,1.68l3.89,2.09l2.74,0.45l2.47,-1.89l2.88,-1.31l3.85,0.48l3.71,-1.94l3.82,-1.04l1.56,1.68l0.49,0.08l1.87,-1.04l0.65,-1.98l1.24,0.35l4.16,3.94l0.54,0.01l2.75,-2.49l0.26,2.59l0.49,0.35l3.08,-0.73l1.04,-1.27l2.73,0.23l3.83,1.86l5.86,1.61l3.47,0.75l2.44,-0.26l2.73,1.78l-2.98,1.81l-0.19,0.41l0.31,0.32l4.53,0.92l6.87,-0.5l2.0,-0.69l2.49,2.39l0.53,0.02l2.72,-2.16l-0.02,-0.64l-2.16,-1.54l1.15,-1.06l4.83,-0.61l1.84,0.95l2.48,2.31l3.01,-0.23l4.55,1.92l3.85,-0.67l3.61,0.1l0.41,-0.44l-0.25,-2.36l1.79,-0.61l3.49,1.32l-0.01,3.77l0.31,0.39l0.45,-0.22l1.48,-3.16l1.74,0.1l0.41,-0.3l1.13,-4.37l-2.78,-3.11l-2.8,-1.74l0.19,-4.64l2.71,-3.07l2.98,0.67l2.41,1.95l3.19,4.8l-1.99,1.97l0.21,0.68l4.33,0.84l-0.01,4.15l0.25,0.37l0.44,-0.09l3.07,-3.15l2.54,2.39l-0.61,3.33l2.42,2.88l0.61,0.0l2.61,-3.08l1.88,-3.82l0.17,-4.58l6.72,0.94l3.13,2.04l0.13,1.82l-1.76,2.19l-0.01,0.49l1.66,2.16l-0.26,1.71l-4.68,2.8l-3.28,0.61l-2.47,-1.2l-0.55,0.23l-0.73,2.04l-2.38,3.43l-0.74,1.77l-2.74,2.57l-3.44,0.25l-2.21,1.78l-0.28,2.53l-2.82,0.55l-3.12,3.22l-2.72,4.31l-1.03,3.17l-0.14,4.31l0.33,0.41l3.44,0.57l2.24,5.95l0.45,0.23l3.4,-0.69l4.52,1.51l2.43,1.31l1.91,1.73l3.1,0.96l2.62,1.46l6.6,0.54l-0.35,2.74l0.81,3.53l1.81,3.78l3.83,3.3l0.45,0.04l2.1,-1.28l1.37,-3.69l-1.31,-5.38l-1.45,-1.58l3.57,-1.47l2.84,-2.46l1.52,-2.8l-0.25,-2.55l-1.7,-3.07l-2.85,-2.61l2.8,-3.95l-1.08,-3.37l-0.79,-5.67l1.36,-0.7l6.76,1.41l2.12,-0.96l5.12,3.36l1.05,1.61l4.08,0.26l-0.06,2.87l0.83,4.7l0.3,0.32l2.16,0.54l1.73,2.06l0.5,0.09l3.63,-2.03l2.52,-4.19l1.26,-1.32l7.6,11.72l-0.92,2.04l0.16,0.51l3.3,1.97l2.22,1.98l4.1,0.98l1.43,0.99l0.95,2.79l2.1,0.68l0.84,1.08l0.17,3.45l-3.37,2.26l-4.22,1.24l-3.06,2.63l-4.06,0.51l-5.35,-0.69l-3.8,-0.02l-2.86,0.36l-2.04,2.28l-3.26,1.51l-6.47,7.15l-0.06,0.48l0.44,0.19l2.13,-0.52l4.17,-4.24l5.12,-2.62l3.52,-0.3l1.69,1.21l-2.12,2.21l0.81,3.47l1.02,2.61l3.47,1.6l4.14,-0.45l2.15,-2.8l0.26,1.48l1.14,0.8l-2.56,1.69l-5.5,1.82l-2.54,1.27l-2.74,2.15l-1.4,-0.16l-0.07,-2.01l4.14,-2.44l0.18,-0.45l-0.39,-0.29l-4.01,0.1l-2.83,0.38l-0.31,0.55l0.29,0.68l-2.34,1.31l-5.37,2.09l-1.83,2.72l0.02,1.79l0.83,1.59l0.54,0.23l-6.19,0.94l-2.2,0.89l-0.23,0.48l0.45,0.29l2.99,-0.46l-2.19,0.56l-1.13,0.0l-0.15,-0.32l-0.48,0.08l-0.76,0.82l0.22,0.67l0.32,0.06l-0.41,1.62l-1.27,1.58l-1.48,-1.07l-0.49,-0.04l-0.16,0.46l0.52,1.58l0.61,0.59l0.03,0.79l-0.95,1.38l-1.21,-1.22l-0.27,-2.27l-0.35,-0.35l-0.42,0.25l-0.48,1.27l0.33,1.41l-0.97,-0.27l-0.48,0.24l0.18,0.5l1.52,0.83l0.1,2.52l0.79,0.51l0.52,3.42l-1.42,1.88l-2.47,0.8l-1.71,1.66l-1.31,0.25l-1.27,1.03l-0.43,0.99l-2.69,1.78l-1.46,1.38l-1.25,1.8l-0.39,1.96l0.45,2.08l0.85,2.38l1.09,1.9l0.04,1.2l1.16,3.06l-0.18,2.69l-0.55,1.43l-0.47,0.21l-0.89,-0.23l-0.49,-1.18l-0.87,-0.56l-2.75,-5.16l0.46,-1.96l-0.76,-1.59l-1.95,-2.29l-1.46,-0.52l-2.38,1.17l-1.47,-1.35l-1.78,-0.71l-2.78,0.34l-2.17,-0.3l-2.12,0.22l-1.04,0.43l-0.19,0.58l0.39,0.63l0.14,1.34l-0.84,-0.2l-0.84,0.46l-1.58,-0.07l-2.08,-1.44l-2.09,0.33l-1.91,-0.62l-3.73,0.84l-2.39,2.07l-2.54,1.22l-1.37,1.29l-0.66,1.34l-0.06,2.07l0.37,1.81l-0.74,0.46l0.75,0.34l-1.18,3.72l-0.42,5.04l1.79,4.89l1.62,1.89l0.61,1.52l0.98,1.28l2.77,0.8l1.37,1.1l7.54,-1.89l1.86,-1.3l1.14,-4.3l4.1,-1.21l3.57,-0.11l0.32,0.3l-0.06,0.94l-1.26,1.45l-0.67,1.71l0.38,0.7l-0.72,2.27l-1.01,-0.25l-0.37,0.41l0.46,0.77l-0.4,1.3l0.06,1.78l-0.24,1.06l-0.92,0.74l-0.5,0.89l0.15,0.54l0.82,0.46l0.58,-0.22l0.68,0.29l0.85,-0.43l2.37,0.28l1.27,-0.09l1.1,-0.52l1.3,0.28l1.14,-0.25l1.38,0.37l2.3,1.4l0.36,0.39l-0.2,0.71l0.21,0.95l-0.8,1.86l0.09,2.82l-0.36,0.37l-0.11,1.75l-0.47,0.81l1.24,2.69l2.92,2.88l0.32,0.78l1.26,0.03l0.77,0.49l1.38,-0.23l2.51,-1.11l0.86,-0.72l3.45,0.85l1.4,1.18l0.41,1.74l-0.21,0.34l-0.53,-0.12l-0.47,0.29l-0.16,0.6l-0.68,-1.28l0.45,-0.49l-0.19,-0.66l-2.26,-1.67l-1.35,0.11l-0.75,0.99l-1.62,0.84l-0.18,0.96l0.85,0.97l-0.58,0.45l-0.69,0.08l-0.34,-1.18l-1.27,0.03l-0.71,-1.05l-1.74,-0.47l-1.3,0.2l-1.27,-0.52l-0.28,-1.49l-2.46,-1.42l-0.28,-0.77l-1.11,-0.45l-0.11,1.04l-1.13,-0.66l-0.11,-2.88l-4.27,-4.05l0.33,-0.66l-0.67,-0.99l-0.76,-0.22l-0.64,0.58l-1.14,-0.03l-1.95,-0.75l-1.28,-0.15l-2.02,-0.99l-1.6,-0.07l-2.32,-1.46l-2.88,-2.79l-1.38,-0.88l-2.04,-0.67l-1.58,0.17l-3.19,1.2l-10.55,-3.85l-2.86,-1.96l-3.78,-0.92l-1.08,-1.19l-2.62,-1.43l-1.18,-1.54l-0.38,-0.81l0.66,-0.63l-0.18,-0.53l0.52,-0.76l0.01,-0.91l-2.0,-3.82l-2.21,-2.63l-2.53,-2.09l-1.19,-1.62l-2.2,-1.17l-0.3,-0.43l0.34,-1.48l-0.21,-0.45l-1.23,-0.6l-1.36,-1.2l-0.59,-1.78l-1.54,-0.47l-2.44,-2.55l-0.16,-0.9l-1.33,-2.03l-0.84,-1.99l-0.16,-1.33l-1.81,-1.1l-0.97,0.05l-1.31,-0.7l-0.57,0.22l-0.4,1.12l0.72,3.77l3.51,3.89l0.28,0.78l0.53,0.26l0.41,1.43l1.33,1.73l1.58,1.41l0.8,2.39l1.43,2.41l0.13,1.32l0.37,0.36l1.04,0.08l1.67,2.28l-0.85,0.76l-0.66,-1.51l-1.68,-1.54l-2.91,-1.87l0.06,-1.82l-0.54,-1.68l-2.91,-2.03l-0.55,0.09l-1.95,-1.1l-0.88,-0.94ZM223.23,169.68l1.12,-0.33l4.16,0.31l1.88,-1.01l0.21,-0.4l-0.2,-1.35l-1.0,-0.87l-1.72,0.98l-1.12,-0.48l-2.12,0.42l-2.62,0.84l-0.9,1.17l0.21,0.62l1.0,0.29l1.11,-0.19ZM212.87,172.48l-1.23,1.32l0.17,0.61l1.54,0.62l1.48,0.17l1.92,-0.44l4.63,-2.09l2.25,-1.86l0.09,-0.67l-0.46,-0.33l-2.23,0.39l-1.85,0.81l-2.11,-0.13l-2.95,1.78l-1.25,-0.17ZM196.34,154.17l-2.46,1.01l-1.86,1.32l-1.71,1.34l-0.16,0.77l0.5,0.39l2.33,-0.61l1.77,1.02l5.15,-2.4l-0.31,0.65l0.25,0.56l1.36,0.38l1.71,1.16l4.7,-0.88l0.67,0.85l0.76,0.13l0.46,-0.28l0.67,0.94l-1.34,0.17l-2.18,-0.32l-3.6,0.89l-2.71,3.25l0.35,0.9l0.59,-0.0l0.55,-0.6l-1.36,4.65l0.29,3.09l1.01,1.93l1.12,0.08l0.84,-0.37l1.68,-2.01l0.14,-2.21l-0.82,-1.96l0.11,-1.13l1.19,-2.37l0.44,-0.33l0.48,0.75l0.4,-0.29l0.4,-1.37l0.6,-0.47l0.24,-0.8l1.69,0.49l1.65,1.08l-0.03,2.37l-1.27,1.13l-0.0,1.13l0.87,0.36l1.66,-1.29l0.5,0.17l0.51,2.75l0.61,0.3l1.8,-1.25l0.1,-2.29l1.16,-1.99l0.49,0.53l2.03,0.42l1.2,-1.16l0.02,-0.47l-2.66,-3.51l-2.28,-0.61l-5.64,-0.71l-0.4,-0.57l-0.79,0.13l0.2,-0.41l-0.22,-0.55l-0.68,-0.26l0.19,-1.26l-0.78,-0.73l0.31,-0.64l-0.29,-0.57l-2.6,-0.44l-0.75,-1.63l-0.73,-0.59l-4.53,-0.72l-1.13,1.19l-1.48,0.59l-0.95,1.19ZM266.64,259.32l0.28,-1.16l1.13,-0.22l-0.06,1.2l-1.35,0.18ZM260.37,148.65l3.04,0.76l2.26,1.2l-3.78,-0.95l-1.53,-1.01ZM249.4,3.81l6.68,0.49l5.32,0.79l4.26,1.57l-0.07,1.1l-5.85,2.53l-6.02,1.21l-2.39,1.39l-0.18,0.45l0.39,0.29l4.01,-0.02l-4.65,2.82l-4.2,1.74l-4.19,4.59l-5.03,0.92l-1.67,1.15l-7.47,0.59l-0.37,0.37l0.32,0.42l2.41,0.49l-0.81,0.47l-0.12,0.59l1.83,2.41l-2.02,1.59l-3.81,1.51l-1.32,2.16l-3.38,1.53l-0.22,0.48l0.35,1.19l0.4,0.29l3.88,-0.18l0.03,0.61l-6.33,2.95l-6.41,-1.4l-7.43,0.79l-3.72,-0.62l-4.4,-0.25l-0.23,-1.83l4.29,-1.11l0.28,-0.51l-1.1,-3.45l1.0,-0.25l6.58,2.28l0.47,-0.16l-0.05,-0.49l-3.41,-3.45l-3.58,-0.98l1.48,-1.55l4.34,-1.29l0.97,-2.19l-0.16,-0.48l-3.42,-2.13l-0.81,-2.26l6.2,0.22l2.24,0.58l3.91,-2.1l0.2,-0.43l-0.35,-0.32l-5.64,-0.67l-8.73,0.36l-4.26,-1.9l-2.12,-2.4l-2.78,-1.66l-0.41,-1.52l3.31,-1.03l2.93,-0.2l4.91,-0.99l3.7,-2.27l2.87,0.3l2.62,1.67l0.56,-0.14l1.82,-3.2l3.13,-0.94l4.44,-0.69l7.53,-0.26l1.48,0.67l7.19,-1.06l10.8,0.79ZM203.85,57.54l0.01,0.42l1.97,2.97l0.68,-0.02l2.24,-3.72l5.95,-1.86l4.01,4.64l-0.35,2.91l0.5,0.43l4.95,-1.36l2.32,-1.8l5.31,2.28l3.27,2.11l0.3,1.84l0.48,0.33l4.42,-0.99l2.64,2.87l5.97,1.77l2.06,1.72l2.11,3.71l-4.19,1.86l-0.01,0.73l5.9,2.83l3.94,0.94l3.78,3.95l3.46,0.25l-0.63,2.37l-4.11,4.47l-2.76,-1.56l-3.9,-3.94l-3.59,0.41l-0.33,0.34l-0.19,2.72l2.63,2.38l3.42,1.89l0.94,0.97l1.55,3.75l-0.7,2.29l-2.74,-0.92l-6.25,-3.15l-0.51,0.13l0.05,0.52l6.07,5.69l0.18,0.59l-6.09,-1.39l-5.31,-2.24l-2.63,-1.66l0.6,-0.77l-0.12,-0.6l-7.39,-4.01l-0.59,0.37l0.03,0.79l-6.73,0.6l-1.69,-1.1l1.36,-2.46l4.51,-0.07l5.15,-0.52l0.31,-0.6l-0.74,-1.3l0.78,-1.84l3.21,-4.05l-0.67,-2.35l-1.11,-1.6l-3.84,-2.1l-4.35,-1.28l0.91,-0.63l0.06,-0.61l-2.65,-2.75l-2.34,-0.36l-1.89,-1.46l-0.53,0.03l-1.24,1.23l-4.36,0.55l-9.04,-0.99l-9.26,-1.98l-1.6,-1.22l2.22,-1.77l0.13,-0.44l-0.38,-0.27l-3.22,-0.02l-0.72,-4.25l1.83,-4.04l2.42,-1.85l5.5,-1.1l-1.39,2.35ZM261.19,159.33l2.07,0.61l1.44,-0.04l-1.15,0.63l-2.94,-1.23l-0.4,-0.68l0.36,-0.37l0.61,1.07ZM256.17,238.73l-0.26,0.27l-2.83,0.05l-0.07,-0.55l1.95,-0.1l1.22,0.33ZM237.05,238.38l-1.16,0.43l-0.91,-0.55l0.05,-0.2l2.02,0.31ZM237.53,238.43l1.06,0.12l-0.05,0.01l-1.01,-0.12ZM239.25,238.45l0.79,-0.51l0.06,-0.62l-1.02,-1.0l0.02,-0.82l-0.3,-0.4l-0.93,-0.32l3.44,0.5l0.59,-0.44l1.66,0.01l1.99,0.63l0.33,0.67l1.28,0.19l0.33,0.76l1.0,0.08l0.8,0.62l-0.45,0.51l-1.13,-0.47l-1.88,-0.01l-1.27,0.59l-0.75,-0.55l-1.01,0.54l-0.79,1.4l-0.53,-0.98l-2.25,-0.38ZM221.21,227.25l1.27,1.02l2.19,-0.28l4.43,3.33l2.08,0.43l-0.1,0.38l0.36,0.5l1.75,0.1l1.48,0.84l-3.11,0.51l-4.15,-0.03l0.77,-0.67l-0.04,-0.64l-1.2,-0.74l-1.49,-0.16l-0.7,-0.61l-0.56,-1.4l-0.4,-0.25l-1.34,0.1l-2.2,-0.66l-0.88,-0.58l-3.18,-0.4l-0.27,-0.16l0.58,-0.74l-0.36,-0.29l-2.72,-0.05l-1.7,1.29l-0.91,0.03l-0.61,0.69l-1.01,0.22l1.11,-1.29l1.01,-0.52l3.69,-1.01l3.98,0.21l2.21,0.84ZM230.83,84.39l-2.37,0.18l-0.49,-1.63l0.93,-2.09l1.94,-0.51l1.62,0.99l0.02,1.52l-1.66,1.54ZM229.43,58.25l0.11,0.65l-4.87,-0.21l-2.72,0.62l-3.1,-2.57l0.08,-1.26l0.86,-0.23l5.57,0.51l4.08,2.5ZM228.38,239.28l-0.8,0.4l-2.26,-1.06l0.84,-0.23l2.14,0.3l1.17,0.56l-1.08,0.03ZM226.4,223.87l-0.48,-1.15l-0.84,-0.75l0.36,-1.11l0.95,1.95l0.01,1.06ZM225.56,216.43l-1.87,0.29l-0.04,-0.22l0.74,-0.14l1.17,0.06ZM222.0,105.02l-0.72,1.49l-0.63,-0.19l-0.48,-0.84l0.81,-0.99l0.65,0.05l0.37,0.46ZM183.74,38.32l2.9,1.7l4.79,-0.01l1.84,1.46l-0.49,1.68l0.23,0.48l2.82,1.14l1.76,1.26l7.01,0.65l4.1,-1.1l5.03,-0.43l3.93,0.35l2.48,1.77l0.46,1.7l-1.3,1.1l-3.56,1.01l-3.23,-0.59l-7.17,0.76l-5.09,0.09l-3.99,-0.6l-6.42,-1.54l-0.79,-2.51l-0.3,-2.49l-2.64,-2.5l-5.32,-0.72l-2.52,-1.4l0.68,-1.57l4.78,0.31ZM207.38,91.35l0.4,1.56l0.56,0.26l1.06,-0.52l1.32,0.96l5.42,2.57l0.2,1.68l0.46,0.35l1.68,-0.28l1.15,0.85l-1.55,0.87l-3.61,-0.88l-1.32,-1.69l-0.57,-0.06l-2.45,2.1l-3.12,1.79l-0.7,-1.87l-0.42,-0.26l-2.16,0.24l1.39,-1.39l0.32,-3.14l0.76,-3.35l1.18,0.22ZM215.49,102.6l-2.67,1.95l-1.4,-0.07l-0.3,-0.58l1.53,-1.48l2.84,0.18ZM202.7,24.12l2.53,1.59l-2.87,1.4l-4.53,4.05l-4.25,0.38l-5.03,-0.68l-2.45,-2.04l0.03,-1.62l1.82,-1.37l0.14,-0.45l-0.38,-0.27l-4.45,0.04l-2.59,-1.76l-1.41,-2.29l1.57,-2.32l1.62,-1.66l2.44,-0.39l0.25,-0.65l-0.6,-0.74l4.86,-0.25l3.24,3.11l8.16,2.3l1.9,3.61ZM187.47,59.2l-2.76,3.49l-2.38,-0.15l-1.44,-3.84l0.04,-2.2l1.19,-1.88l2.3,-1.23l5.07,0.17l4.11,1.02l-3.24,3.72l-2.88,0.89ZM186.07,48.79l-1.08,1.53l-3.34,-0.34l-2.56,-1.1l1.03,-1.75l3.25,-1.23l1.95,1.58l0.75,1.3ZM185.71,35.32l-5.3,-0.2l-0.32,-0.71l4.31,0.07l1.3,0.84ZM180.68,32.48l-3.34,1.0l-1.79,-1.1l-0.98,-1.87l-0.15,-1.73l4.1,0.53l2.67,1.7l-0.51,1.47ZM180.9,76.31l-1.1,1.08l-3.13,-1.23l-2.12,0.43l-2.71,-1.57l1.72,-1.09l1.55,-1.72l3.81,1.9l1.98,2.2ZM169.74,54.87l2.96,0.97l4.17,-0.57l0.41,0.88l-2.14,2.11l0.09,0.64l3.55,1.92l-0.4,3.72l-3.79,1.65l-2.17,-0.35l-1.72,-1.74l-6.02,-3.5l0.03,-0.85l4.68,0.54l0.4,-0.21l-0.05,-0.45l-2.48,-2.81l2.46,-1.95ZM174.45,40.74l1.37,1.73l0.07,2.44l-1.05,3.45l-3.79,0.47l-2.32,-0.69l0.05,-2.64l-0.44,-0.41l-3.68,0.35l-0.12,-3.1l2.45,0.1l3.67,-1.73l3.41,0.29l0.37,-0.26ZM170.05,31.55l0.67,1.56l-3.33,-0.49l-4.22,-1.77l-4.35,-0.16l1.4,-0.94l-0.06,-0.7l-2.81,-1.23l-0.12,-1.39l4.39,0.68l6.62,1.98l1.81,2.47ZM134.5,58.13l-1.02,1.82l0.45,0.58l5.4,-1.39l3.33,2.29l0.49,-0.03l2.6,-2.23l1.94,1.32l2.0,4.5l0.7,0.06l1.3,-2.29l-1.63,-4.46l1.69,-0.54l2.31,0.71l2.65,1.81l2.49,7.92l8.48,4.27l-0.19,1.35l-3.79,0.33l-0.26,0.67l1.4,1.49l-0.58,1.1l-4.23,-0.64l-4.43,-1.19l-3.0,0.28l-4.66,1.47l-10.52,1.04l-1.43,-2.02l-3.42,-1.2l-2.21,0.43l-2.51,-2.86l4.84,-1.05l3.6,0.19l3.27,-0.78l0.31,-0.39l-0.31,-0.39l-4.84,-1.06l-8.79,0.27l-0.85,-1.07l5.26,-1.66l0.27,-0.45l-0.4,-0.34l-3.8,0.06l-3.81,-1.06l1.81,-3.01l1.66,-1.79l6.48,-2.81l1.97,0.71ZM158.7,56.61l-1.7,2.44l-3.2,-2.75l0.37,-0.3l3.11,-0.18l1.42,0.79ZM149.61,42.73l1.01,1.89l0.5,0.18l2.14,-0.82l2.23,0.19l0.36,2.04l-1.33,2.09l-8.28,0.76l-6.35,2.15l-3.41,0.1l-0.19,-0.96l4.9,-2.08l0.23,-0.46l-0.41,-0.31l-11.25,0.59l-2.89,-0.74l3.04,-4.44l2.14,-1.32l6.81,1.69l4.58,3.06l4.37,0.39l0.36,-0.63l-3.36,-4.6l1.85,-1.53l2.18,0.51l0.77,2.26ZM144.76,34.41l-4.36,1.44l-3.0,-1.4l1.46,-1.24l3.47,-0.52l2.96,0.71l-0.52,1.01ZM145.13,29.83l-1.9,0.66l-3.67,-0.0l2.27,-1.61l3.3,0.95ZM118.92,65.79l-6.03,2.02l-1.33,-1.9l-5.38,-2.28l2.59,-5.05l2.16,-3.14l-0.02,-0.48l-1.97,-2.41l7.64,-0.7l3.6,1.02l6.3,0.27l4.42,2.95l-2.53,0.98l-6.24,3.43l-3.1,3.28l-0.11,2.01ZM129.54,35.53l-0.28,3.37l-1.72,1.62l-2.33,0.28l-4.61,2.19l-3.86,0.76l-2.64,-0.87l3.72,-3.4l5.01,-3.34l3.72,0.07l3.0,-0.67ZM111.09,152.69l-0.67,0.24l-3.85,-1.37l-0.83,-1.17l-2.12,-1.07l-0.66,-1.02l-2.4,-0.55l-0.74,-1.71l6.02,1.45l2.0,2.55l2.52,1.39l0.73,1.27ZM87.8,134.64l0.89,0.29l1.86,-0.21l-0.65,3.34l1.69,2.33l-1.31,-1.33l-0.99,-1.62l-1.17,-0.98l-0.33,-1.82ZM37.6,123.41l-2.25,1.23l-0.95,-0.69l-0.29,-1.24l3.21,-1.63l1.42,0.21l0.67,0.7l-1.8,1.42ZM31.06,234.03l0.98,0.47l0.74,0.87l-1.77,1.07l-0.44,-1.53l0.49,-0.89ZM29.34,232.07l0.18,0.05l0.08,0.05l-0.16,0.03l-0.11,-0.14ZM25.16,230.17l0.05,-0.03l0.18,0.22l-0.13,-0.01l-0.1,-0.18ZM5.89,113.26l-1.08,0.41l-2.21,-1.12l1.53,-0.4l1.62,0.28l0.14,0.83Z\",\n            name: \"North America\"\n          },\n          OC: {\n            path: \"M869.95,326.98l-1.21,0.41l-0.08,-0.23l2.97,-1.21l-0.14,0.42l-1.54,0.61ZM867.58,329.25l0.43,0.37l-0.27,0.88l-1.24,0.28l-1.04,-0.24l-0.14,-0.66l0.63,-0.58l0.92,0.26l0.7,-0.31ZM857.8,379.65l1.86,3.12l0.44,0.18l0.3,-0.38l0.03,-1.23l0.38,0.27l0.57,2.31l2.02,0.94l1.81,0.27l1.57,-1.06l0.7,0.18l-1.15,3.59l-1.98,0.11l-0.74,1.2l0.2,1.11l-2.42,3.98l-1.49,0.92l-1.04,-0.85l1.21,-2.05l-0.81,-2.01l-2.63,-1.25l0.04,-0.57l1.82,-1.19l0.43,-2.34l-0.16,-2.03l-0.95,-1.82l-0.06,-0.72l-3.11,-3.64l-0.79,-1.52l1.56,1.45l1.76,0.66l0.65,2.34ZM853.83,393.59l0.57,1.24l0.59,0.16l1.42,-0.97l0.46,0.79l0.0,1.03l-2.47,3.48l-1.26,1.2l-0.06,0.5l0.55,0.87l-1.41,0.07l-2.33,1.38l-2.03,5.02l-3.02,2.16l-2.06,-0.06l-1.71,-1.04l-2.47,-0.2l-0.27,-0.73l1.22,-2.1l3.05,-2.94l1.62,-0.59l4.02,-2.82l1.57,-1.67l1.07,-2.16l0.88,-0.7l0.48,-1.75l1.24,-0.97l0.35,0.79ZM839.04,322.8l0.22,1.14l-0.44,0.03l-0.2,-1.45l0.42,0.27ZM838.78,341.24l-0.33,0.22l-2.9,-1.75l-3.26,-3.37l1.65,0.83l4.85,4.07ZM826.69,311.6l-0.61,0.09l-0.2,-0.33l0.37,0.15l0.44,0.09ZM824.18,307.38l-0.26,-0.3l-0.31,-0.91l0.03,0.0l0.54,1.21ZM823.04,309.33l-1.66,-0.22l-0.2,-0.52l1.16,0.28l0.69,0.46ZM819.28,304.68l1.14,0.65l0.02,0.03l-0.81,-0.44l-0.35,-0.23ZM808.58,298.86l2.54,2.56l-0.13,0.26l-0.33,0.12l-0.87,-0.78l-1.22,-2.16ZM705.8,353.26l0.26,0.04l0.17,-0.47l-0.48,-1.42l0.92,1.11l0.45,0.15l0.27,-0.39l-0.1,-1.56l-1.98,-3.63l1.09,-3.31l-0.24,-1.57l0.34,-0.62l0.38,1.06l0.43,-0.19l0.99,-1.7l1.91,-0.83l1.29,-1.15l1.81,-0.91l0.96,-0.17l0.92,0.26l1.92,-0.95l1.47,-0.28l1.03,-0.8l1.43,0.04l2.78,-0.84l1.36,-1.15l0.71,-1.45l1.41,-1.26l0.3,-2.58l1.27,-1.59l0.78,1.65l0.54,0.19l1.07,-0.51l0.15,-0.6l-0.73,-1.0l0.45,-0.71l0.78,0.39l0.58,-0.3l0.28,-1.82l1.87,-2.14l1.12,-0.39l0.28,-0.58l0.62,0.17l0.53,-0.73l1.87,-0.57l1.65,1.05l1.35,1.48l3.39,0.38l0.43,-0.54l-0.46,-1.23l1.05,-1.79l1.04,-0.61l0.14,-0.55l-0.25,-0.41l0.88,-1.17l1.31,-0.77l1.3,0.27l2.1,-0.48l0.31,-0.4l-0.05,-1.3l-0.92,-0.77l1.48,0.56l1.41,1.07l2.11,0.65l0.81,-0.2l1.4,0.7l1.69,-0.66l0.8,0.19l0.64,-0.33l0.71,0.77l-1.33,1.94l-0.71,0.07l-0.35,0.51l0.24,0.86l-1.52,2.35l0.12,1.05l2.15,1.65l1.97,0.85l3.04,2.36l1.97,0.65l0.55,0.88l2.72,0.85l1.84,-1.1l2.07,-5.97l-0.42,-3.59l0.3,-1.73l0.47,-0.87l-0.31,-0.68l1.09,-3.28l0.46,-0.47l0.4,0.71l0.16,1.51l0.65,0.52l0.16,1.04l0.85,1.21l0.12,2.38l0.9,2.0l0.57,0.18l1.3,-0.78l1.69,1.7l-0.2,1.08l0.53,2.2l0.39,1.3l0.68,0.48l0.6,1.95l-0.19,1.48l0.81,1.76l6.01,3.69l-0.11,0.76l1.38,1.58l0.95,2.77l0.58,0.22l0.72,-0.41l0.8,0.9l0.61,0.01l0.46,2.41l4.81,4.71l0.66,2.02l-0.07,3.31l1.14,2.2l-0.13,2.24l-1.1,3.68l0.03,1.64l-0.47,1.89l-1.05,2.4l-1.9,1.47l-1.72,3.51l-2.38,6.09l-0.24,2.82l-1.14,0.8l-2.85,0.15l-2.31,1.19l-2.51,2.25l-3.09,-1.57l0.3,-1.15l-0.54,-0.47l-1.5,0.63l-2.01,1.94l-7.12,-2.18l-1.48,-1.63l-1.14,-3.74l-1.45,-1.26l-1.81,-0.26l0.56,-1.18l-0.61,-2.1l-0.72,-0.1l-1.14,1.82l-0.9,0.21l0.63,-0.82l0.36,-1.55l0.92,-1.31l-0.13,-2.34l-0.7,-0.22l-2.0,2.34l-1.51,0.93l-0.94,2.01l-1.35,-0.81l-0.02,-1.52l-1.57,-2.04l-1.09,-0.88l0.24,-0.33l-0.14,-0.59l-3.21,-1.69l-1.83,-0.12l-2.54,-1.35l-4.58,0.28l-6.02,1.9l-2.53,-0.13l-2.62,1.41l-2.13,0.63l-1.49,2.6l-3.49,0.31l-2.29,-0.5l-3.48,0.43l-1.6,1.47l-0.81,-0.04l-2.37,1.63l-3.26,-0.1l-3.72,-2.21l0.04,-1.05l1.19,-0.46l0.49,-0.89l0.21,-2.97l-0.28,-1.64l-1.34,-2.86l-0.38,-1.47l0.05,-1.72l-0.95,-1.7l-0.18,-0.97l-1.01,-0.99l-0.29,-1.98l-1.13,-1.75ZM801.41,293.04l0.5,0.29l0.26,0.27l-0.49,-0.35l-0.27,-0.21ZM803.17,294.58l0.59,0.5l0.08,1.06l-0.29,-0.91l-0.38,-0.65ZM796.68,298.41l0.52,0.75l1.43,-0.19l2.27,-1.81l-0.01,-1.43l1.12,0.16l-0.04,1.1l-0.7,1.28l-1.12,0.18l-0.62,0.79l-2.46,1.11l-1.17,-0.0l-3.08,-1.25l3.41,0.0l0.45,-0.68ZM789.15,303.55l2.31,1.8l1.59,2.61l1.34,0.13l-0.06,0.66l0.31,0.43l1.06,0.24l0.06,0.65l2.25,1.05l-1.22,0.13l-0.72,-0.63l-4.56,-0.65l-3.22,-2.87l-1.49,-2.34l-3.27,-1.1l-2.38,0.72l-1.59,0.86l-0.2,0.42l0.27,1.55l-1.55,0.68l-1.36,-0.4l-2.21,-0.09l-0.08,-15.41l8.39,2.93l2.95,2.4l0.6,1.64l4.02,1.49l0.31,0.68l-1.76,0.21l-0.33,0.52l0.55,1.68ZM784.92,393.44l2.65,1.02l3.23,-0.96l1.09,0.14l0.15,3.06l-0.85,1.13l-0.17,1.63l-0.87,-0.24l-1.57,1.91l-1.68,-0.18l-1.4,-2.36l-0.37,-2.04l-1.39,-2.51l0.04,-0.8l1.15,0.18Z\",\n            name: \"Oceania\"\n          },\n          AS: {\n            path: \"M781.12,166.87l1.81,0.68l1.62,-0.97l0.39,2.42l-3.35,0.75l-2.23,2.88l-3.63,-1.9l-0.56,0.2l-1.26,3.05l-2.16,0.03l-0.29,-2.51l1.08,-2.03l2.45,-0.16l0.37,-0.33l1.25,-5.94l2.47,2.71l2.03,1.12ZM773.56,187.34l-0.91,2.22l0.37,1.52l-1.14,1.75l-3.02,1.26l-4.58,0.27l-3.34,3.01l-1.25,-0.8l-0.09,-1.9l-0.46,-0.38l-4.35,0.62l-3.0,1.32l-2.85,0.05l-0.37,0.27l0.13,0.44l2.32,1.89l-1.54,4.34l-1.26,0.9l-0.79,-0.7l0.56,-2.27l-0.21,-0.45l-1.47,-0.75l-0.74,-1.4l2.12,-0.84l1.26,-1.7l2.45,-1.42l1.83,-1.91l4.78,-0.81l2.6,0.57l0.44,-0.21l2.39,-4.66l1.29,1.06l0.5,0.01l5.1,-4.02l1.69,-3.73l-0.38,-3.4l0.9,-1.61l2.14,-0.44l1.23,3.72l-0.07,2.18l-2.23,2.84l-0.04,3.16ZM756.47,287.89l0.69,4.01l2.79,1.78l0.51,-0.1l2.04,-2.59l2.71,-1.43l2.05,-0.0l3.9,1.73l2.46,0.45l0.08,15.12l-1.75,-1.54l-2.54,-0.51l-0.88,0.71l-2.32,0.06l0.69,-1.33l1.45,-0.64l0.23,-0.46l-0.65,-2.74l-1.24,-2.21l-5.04,-2.29l-2.09,-0.23l-3.68,-2.27l-0.55,0.13l-0.65,1.07l-0.52,0.12l-0.55,-1.89l-1.21,-0.78l1.84,-0.62l1.72,0.05l0.39,-0.52l-0.21,-0.66l-0.38,-0.28l-3.45,-0.0l-1.13,-1.48l-2.1,-0.43l-0.52,-0.6l2.69,-0.48l1.28,-0.78l3.66,0.94l0.3,0.71ZM507.76,203.05l2.4,-6.23l1.29,-2.09l-0.18,-2.26l0.53,-1.48l-0.74,-1.04l0.79,-1.3l-0.41,-0.2l-1.43,0.23l-2.0,-0.63l-2.02,1.65l-3.51,0.3l-2.13,-1.53l-2.7,-0.1l-0.86,1.24l-1.38,0.27l-2.29,-1.44l-2.71,-0.01l-1.37,-2.65l-1.68,-1.52l1.07,-1.99l-0.09,-0.49l-1.27,-1.12l2.37,-2.41l3.7,-0.11l1.28,-2.24l4.49,0.37l3.21,-1.97l2.81,-0.82l3.99,-0.06l4.29,2.07l3.64,1.17l3.05,-0.44l2.34,0.22l2.96,-1.56l0.57,-1.75l-0.76,-2.26l-1.45,-1.12l-1.43,-0.39l-0.41,-0.42l5.29,0.89l4.07,2.01l1.41,-0.44l2.07,0.56l0.86,1.26l2.25,0.81l1.84,1.84l1.53,0.01l1.52,-1.61l2.3,3.34l1.43,0.43l-1.26,0.15l-0.35,0.32l-0.8,3.14l-0.99,0.96l0.09,1.56l0.79,2.14l2.56,0.83l1.87,1.48l3.69,0.49l3.91,-0.76l0.54,-0.93l-0.44,-2.2l0.36,-2.98l-0.22,-0.4l-1.65,-0.84l0.54,-1.69l-0.34,-0.52l-1.22,-0.13l0.36,-1.64l2.22,0.59l2.2,-0.95l0.12,-0.65l-1.77,-1.74l-0.69,-1.64l-0.51,-0.22l-2.02,0.77l-0.33,0.96l-0.29,-1.01l0.56,-1.48l-0.48,-1.05l-2.96,-1.19l-1.06,-2.58l-1.37,-0.87l-0.03,-0.3l1.95,0.23l0.45,-0.38l0.08,-1.96l1.75,-0.41l2.1,0.45l0.48,-0.33l0.45,-3.04l-0.45,-2.09l-0.41,-0.31l-2.42,0.15l-2.36,-0.73l-2.87,1.37l-2.17,0.61l-0.85,-0.34l0.13,-1.61l-1.6,-2.12l-2.02,-0.08l-1.78,-1.82l1.29,-2.18l-0.57,-0.95l1.62,-2.91l2.21,1.63l0.63,-0.27l0.29,-2.22l4.92,-3.43l3.71,-0.08l8.4,3.6l2.92,-1.36l3.77,-0.06l3.11,1.66l0.51,-0.11l0.6,-0.81l3.31,0.13l0.39,-0.25l0.63,-1.57l-0.17,-0.5l-3.5,-1.98l1.87,-1.27l-0.13,-1.03l1.98,-0.72l0.18,-0.62l-1.59,-2.06l0.81,-0.82l9.23,-1.18l1.33,-0.88l6.18,-1.26l2.26,-1.42l4.08,0.68l0.73,3.33l0.51,0.3l2.48,-0.8l2.79,1.02l-0.17,1.56l0.43,0.44l2.55,-0.24l4.89,-2.53l0.03,0.32l3.15,2.61l5.56,8.47l0.65,0.02l1.12,-1.46l3.15,1.74l3.76,-0.78l1.15,0.49l1.14,1.8l1.84,0.76l0.99,1.29l3.35,-0.25l1.19,1.78l0.44,0.16l3.72,-0.87l4.75,-2.8l3.62,-1.47l2.18,0.97l2.46,0.05l1.81,1.53l2.46,0.12l3.95,0.71l2.43,-2.28l0.08,-0.48l-0.9,-1.72l2.24,-2.98l2.62,1.27l4.94,1.17l0.68,2.53l3.56,1.38l5.67,-1.0l2.37,0.41l2.34,1.5l1.79,1.75l2.29,-0.03l3.32,0.5l2.27,-0.79l3.41,-0.59l3.53,-2.21l1.25,0.29l1.53,1.13l2.89,-0.26l3.27,1.17l3.53,-2.06l0.18,-1.68l2.16,-3.35l1.34,-1.03l0.13,-2.18l-1.07,-0.85l1.54,-1.26l2.98,-0.59l3.23,-0.09l3.64,0.99l2.04,1.16l3.29,6.71l0.92,3.19l4.57,1.3l2.8,2.17l0.98,2.9l0.38,0.27l3.8,0.0l2.32,-1.28l3.29,-0.75l-0.96,2.09l-1.02,1.28l-0.85,3.4l-1.52,2.73l-2.76,-0.5l-2.4,1.13l-0.21,0.45l0.64,2.57l-0.32,3.2l-0.94,0.06l-0.37,0.4l0.02,1.51l-0.47,0.08l-1.88,2.1l0.01,2.14l-1.06,0.54l-1.41,1.4l-1.7,0.52l-1.25,1.09l-0.14,1.98l2.28,1.66l2.11,3.34l0.58,1.76l0.02,3.12l-0.8,1.32l-2.21,0.55l-1.93,1.13l-1.8,0.19l-0.2,-1.1l0.43,-2.28l-0.95,-2.56l1.43,-0.37l0.23,-0.62l-1.88,-2.61l-1.22,-0.55l-0.88,0.62l-1.21,-0.88l1.12,-1.65l-0.16,-0.38l0.57,-1.43l-0.16,-0.76l-3.12,-1.37l-3.5,0.86l-1.93,1.4l-1.15,0.34l0.33,-0.7l-0.41,-0.89l1.79,-1.79l0.02,-0.54l-1.32,-1.56l-0.48,-0.1l-2.24,1.09l-2.83,2.06l-1.51,1.83l-2.28,0.13l-1.55,1.49l-0.04,0.5l1.32,1.97l2.0,0.58l0.31,1.35l1.98,0.84l3.0,-1.96l2.0,1.02l1.49,0.11l0.22,0.83l-3.37,0.86l-1.12,1.48l-2.5,1.52l-1.29,1.99l0.14,0.56l2.57,1.48l0.97,2.7l3.17,4.63l-0.03,1.66l-1.35,0.65l-0.2,0.51l0.6,1.47l1.4,0.91l-0.33,1.93l-0.56,1.89l-1.43,0.38l-3.85,6.44l-2.27,3.11l-6.78,4.57l-2.73,0.29l-1.45,1.04l-0.62,-0.61l-0.55,-0.01l-1.36,1.25l-3.39,1.27l-2.61,0.4l-1.1,2.79l-0.81,0.09l-0.49,-1.42l0.5,-0.85l-0.25,-0.59l-3.59,-0.83l-1.27,0.47l-3.34,2.24l-2.17,2.54l-0.57,2.29l4.26,6.1l2.32,1.65l1.43,1.94l1.11,4.59l-0.32,4.24l-1.93,1.54l-2.84,1.61l-2.11,2.15l-2.73,2.06l-0.59,-1.05l0.63,-1.53l-0.13,-0.47l-1.86,-1.44l-2.12,-0.42l-2.32,-3.93l-2.25,-1.17l-1.84,-0.01l0.28,-1.52l-0.4,-0.47l-2.21,0.01l-0.4,0.37l-0.19,2.74l-2.15,5.89l0.15,2.0l0.38,0.36l1.38,0.07l0.9,2.04l0.44,2.14l1.5,1.64l1.61,0.38l3.23,2.94l0.98,1.56l-0.12,2.81l0.41,2.29l0.95,0.9l0.88,2.44l-1.27,0.12l-5.1,-3.67l-0.34,-1.29l-1.37,-1.59l-0.33,-1.97l-0.88,-1.4l0.25,-1.68l-0.59,-1.31l-1.0,-1.0l-0.48,-1.3l-2.56,-2.63l-0.73,0.41l0.96,-3.92l-0.21,-1.94l0.71,-2.19l-0.78,-1.4l0.19,-2.65l-1.05,-1.53l-1.24,-6.17l-1.12,-2.26l-0.6,-0.13l-4.34,3.02l-2.39,-0.65l0.77,-2.84l-0.57,-2.74l-1.86,-2.83l0.25,-0.75l-0.29,-0.51l-1.33,-0.3l-1.66,-1.99l-0.66,-1.26l-0.64,-2.62l-1.4,-1.79l-2.31,-0.11l-0.41,0.48l0.2,0.94l-0.53,0.99l-0.72,-0.36l-0.68,0.35l-1.45,-0.43l-0.47,0.25l-0.26,0.69l-4.58,0.52l-0.33,0.42l0.13,1.8l-1.17,1.36l-3.65,1.81l-2.79,3.03l-4.32,3.28l-0.18,1.27l-4.65,1.79l-0.77,2.16l0.64,5.3l-1.06,2.49l-0.01,3.94l-1.24,0.28l-1.14,1.93l0.39,0.84l-1.68,0.53l-1.04,1.83l-0.65,0.47l-2.06,-2.05l-2.1,-6.02l-2.2,-3.64l-1.05,-4.75l-2.29,-3.57l-1.76,-8.2l0.01,-3.11l-0.49,-2.53l-0.55,-0.29l-3.53,1.52l-1.53,-0.27l-2.86,-2.77l0.85,-0.67l0.08,-0.55l-0.74,-1.03l-3.02,-2.33l-1.77,-0.67l-0.76,-1.87l-2.27,-2.15l-12.15,0.92l-9.98,-1.73l-0.99,-3.05l-1.43,-0.73l-2.17,0.46l-2.47,1.26l-2.83,-0.82l-2.46,-2.02l-2.41,-0.8l-3.42,-6.06l-0.48,-0.2l-1.18,0.39l-1.44,-0.82l-0.5,0.08l-0.8,0.92l-1.28,-0.12l-0.4,0.56l0.46,1.06l-0.17,0.76l1.79,4.4l1.29,0.76l0.51,0.99l1.56,1.03l-0.1,1.9l1.78,3.24l0.47,0.18l0.28,-0.42l-0.16,-1.83l0.84,-1.29l0.47,0.52l0.04,1.34l-0.5,1.8l0.98,1.49l0.48,0.34l1.91,-0.41l3.53,0.15l5.66,-5.51l-0.39,0.93l0.34,2.11l1.18,1.96l1.66,1.15l3.15,0.78l1.73,2.29l0.81,0.57l-1.22,2.15l-1.1,0.92l-0.81,1.55l-0.86,-0.1l-0.88,0.76l-0.48,1.46l0.25,1.77l-1.16,0.05l-1.56,0.97l-0.76,1.74l-1.39,-0.02l-1.21,0.72l-0.17,1.15l-0.89,0.52l-1.49,-0.18l-1.61,0.84l-2.99,0.85l-0.78,2.12l-6.23,2.16l-2.29,1.8l-1.93,0.05l-1.41,1.02l-4.24,0.74l-1.72,1.49l-3.28,0.19l-0.52,-1.18l0.02,-1.51l-1.34,-3.29l0.26,-0.42l-0.07,-2.81l-0.32,-1.1l-0.77,-0.85l-0.17,-0.91l-1.39,-1.13l-1.27,-2.06l-0.78,-2.22l-1.73,-1.79l-1.14,-0.48l-1.54,-2.31l-0.21,-3.41l-1.44,-2.93l-1.27,-1.16l-1.33,-0.57l-1.31,-3.37l-0.77,-0.67l-0.97,-1.97l-2.8,-4.03l-1.06,-0.17l0.68,-3.21l-1.67,-4.96l0.59,-0.74l-0.03,-0.41ZM757.78,196.26l0.19,0.56l-1.01,1.21l-1.16,-0.68l-1.28,0.65l-0.69,1.45l-1.02,-0.5l0.01,-0.93l1.14,-1.38l1.57,0.14l0.85,-0.98l1.4,0.46ZM757.91,300.34l-0.62,0.82l-0.1,-0.8l0.59,-1.12l0.13,1.1ZM747.38,292.98l0.34,0.72l-1.22,-0.57l-4.68,-0.1l0.27,-0.62l2.78,-0.09l2.52,0.67ZM741.05,285.25l-0.67,-2.88l0.64,-2.01l0.41,0.86l1.21,0.18l0.16,0.7l-0.1,1.68l-0.84,-0.16l-0.46,0.3l-0.34,1.34ZM739.05,293.5l-0.5,0.44l-1.34,-0.36l-0.17,-0.37l1.73,-0.08l0.27,0.36ZM730.55,310.47l1.11,-1.93l2.37,-0.96l0.42,-0.63l4.5,-0.86l-4.9,2.0l-1.72,1.91l-1.77,0.46ZM737.01,263.84l0.39,2.97l-0.44,1.18l-0.55,-1.53l-0.67,-0.14l-1.17,1.28l0.65,2.09l-0.42,0.69l-2.48,-1.23l-0.57,-1.49l0.65,-1.03l-0.1,-0.54l-1.59,-1.19l-0.56,0.08l-0.65,0.87l-1.23,0.0l-1.58,0.97l0.83,-1.8l2.56,-1.42l0.65,0.84l0.45,0.13l1.9,-0.69l0.56,-1.11l1.5,-0.06l0.38,-0.43l-0.09,-1.19l1.21,0.71l0.36,2.02ZM733.59,256.58l0.05,0.75l0.08,0.26l-0.8,-0.42l-0.18,-0.71l0.85,0.12ZM734.08,256.1l-0.12,-1.12l-1.0,-1.27l1.36,0.03l0.53,0.73l0.51,2.04l-1.27,-0.4ZM733.76,257.68l0.38,0.98l-0.32,0.15l-0.07,-1.13ZM721.45,284.51l-0.19,1.97l2.24,2.23l0.54,0.02l1.27,-1.07l2.75,-0.5l-0.9,1.21l-2.11,0.93l-0.16,0.6l2.22,3.01l-0.3,1.07l1.36,1.74l-2.26,0.85l-0.28,-0.31l0.12,-1.19l-1.64,-1.34l0.17,-2.23l-0.56,-0.39l-1.67,0.76l-0.23,0.39l0.3,6.17l-1.1,0.25l-0.69,-0.47l0.64,-2.21l-0.39,-2.42l-0.39,-0.34l-0.8,-0.01l-0.58,-1.29l0.98,-1.6l0.35,-1.96l1.32,-3.87ZM728.59,296.27l0.38,0.49l-0.02,1.28l-0.88,0.49l-0.53,-0.47l1.04,-1.79ZM729.04,286.98l0.27,-0.05l-0.02,0.13l-0.24,-0.08ZM721.68,284.05l0.16,-0.32l1.89,-1.65l1.83,0.68l3.16,0.35l2.94,-0.1l2.39,-1.66l-1.73,2.13l-1.66,0.43l-2.41,-0.48l-4.17,0.13l-2.39,0.51ZM724.65,238.43l1.46,0.7l0.72,-0.31l-0.32,1.17l0.79,1.71l-0.57,1.84l-1.53,1.04l-0.39,2.25l0.56,2.04l1.63,0.57l1.16,-0.27l2.71,1.23l-0.19,1.08l0.76,0.84l-0.08,0.36l-1.4,-0.9l-0.88,-1.27l-0.66,0.0l-0.38,0.55l-1.6,-1.31l-2.15,0.36l-0.87,-0.39l0.07,-0.61l0.66,-0.55l-0.01,-0.62l-0.75,-0.59l-0.72,0.44l-0.74,-0.87l-0.39,-2.49l0.32,0.27l0.66,-0.28l0.26,-3.97l0.7,-2.02l1.14,0.0ZM731.03,258.87l-0.88,0.85l-1.19,1.94l-1.05,-1.19l0.93,-1.1l0.32,-1.47l0.52,-0.06l-0.27,1.15l0.22,0.45l0.49,-0.12l1.0,-1.32l-0.08,0.85ZM726.83,255.78l0.83,0.38l1.17,-0.0l-0.02,0.48l-2.0,1.4l0.03,-2.26ZM728.12,305.88l-0.1,0.38l-3.46,0.66l-2.91,-0.27l-0.0,-0.25l1.54,-0.41l1.66,0.73l1.67,-0.19l1.61,-0.65ZM724.01,226.68l-0.74,1.48l-0.9,-1.52l-0.25,-1.74l1.38,-2.44l1.73,-1.74l0.64,0.44l-1.85,5.52ZM724.81,252.09l-0.38,1.27l-1.42,-1.95l1.2,0.05l0.6,0.63ZM722.9,310.24l-0.64,0.03l-2.26,-1.2l1.11,-0.24l1.78,1.41ZM716.55,261.82l1.1,-0.95l0.03,-0.03l-0.28,0.36l-0.85,0.61ZM719.22,259.06l0.04,-0.06l0.8,-1.53l0.16,0.75l-1.0,0.84ZM711.66,293.84l-0.38,-0.16l-2.54,1.01l-1.12,-1.44l-1.69,-0.13l-1.16,-0.75l-3.04,0.77l-1.1,-1.15l-3.31,-0.11l-0.35,-3.05l-1.35,-0.95l-1.11,-1.98l-0.33,-2.06l0.27,-2.14l1.21,-1.35l1.83,0.76l1.93,-0.47l0.75,-2.22l4.02,-1.03l3.03,-3.57l5.02,-4.03l1.21,-1.86l0.63,-0.01l1.07,1.05l0.34,1.28l3.44,1.35l-0.06,0.35l-1.37,0.1l-0.35,0.54l0.32,0.88l-1.68,0.85l-1.42,2.26l0.02,0.46l1.7,2.2l-0.23,1.39l2.07,1.71l-2.33,0.42l-0.88,1.9l0.1,2.05l-2.4,1.9l-0.06,2.45l-0.7,2.79ZM716.26,305.77l0.88,0.51l1.28,-0.17l0.2,0.35l-4.65,0.73l0.39,-0.67l1.15,-0.02l0.75,-0.73ZM692.58,302.03l0.35,0.26l4.8,0.25l0.78,-0.97l4.17,1.09l1.13,1.68l3.69,0.45l2.13,1.04l-1.8,0.6l-2.77,-0.99l-4.8,-0.12l-5.24,-1.41l-1.84,-0.25l-1.11,0.3l-4.26,-0.97l-0.7,-1.14l-1.59,-0.13l1.18,-1.65l2.74,0.13l2.87,1.13l0.26,0.68ZM696.92,237.31l-1.87,1.08l-1.63,-0.64l-0.06,-1.79l1.03,-0.98l2.58,-0.69l1.16,0.05l0.3,0.54l-0.98,1.06l-0.53,1.37ZM685.53,299.17l-2.22,0.04l-2.06,-2.03l-3.15,-2.01l-2.93,-3.51l-3.11,-5.33l-2.2,-2.12l-1.64,-4.06l-2.32,-1.69l-1.27,-2.07l-1.96,-1.5l-2.51,-2.65l-0.11,-0.66l4.81,0.53l2.15,2.38l3.31,2.74l2.35,2.66l2.7,0.17l1.95,1.59l1.54,2.17l1.59,0.95l-0.84,1.71l0.15,0.52l1.44,0.87l0.79,0.1l0.4,1.58l0.87,1.4l1.96,0.39l1.0,1.31l-0.6,3.01l-0.09,3.5ZM624.16,268.99l-1.82,0.48l-0.99,-1.67l-0.42,-3.46l0.95,-3.43l1.21,0.98l2.26,4.19l-0.34,2.33l-0.85,0.58ZM505.52,192.81l0.09,0.58l-2.1,0.94l-0.92,-0.28l-0.24,-0.46l0.77,-0.07l0.57,-0.68l1.82,-0.04ZM488.79,176.72l-1.72,1.31l-0.5,-0.88l1.37,-2.57l-0.7,-0.85l1.7,-0.63l1.8,0.34l0.46,1.17l1.76,0.78l-2.87,0.32l-1.3,1.01Z\",\n            name: \"Asia\"\n          },\n          EU: {\n            path: \"M402.36,187.15l-1.16,0.7l-1.13,-0.35l-0.91,0.17l0.28,-1.78l-0.24,-1.78l-1.25,-0.56l-0.45,-0.84l0.17,-1.66l1.01,-1.18l0.7,-3.05l-0.66,-3.34l0.12,-2.11l-0.83,-1.23l3.03,-1.88l2.99,0.53l3.32,-0.02l2.73,0.52l6.42,-0.23l1.37,-2.03l0.39,-6.45l-2.58,-3.3l-1.9,-1.66l-3.72,-1.23l-0.19,-1.72l2.81,-0.61l4.12,0.81l0.47,-0.48l-0.6,-2.77l1.94,0.95l5.83,-2.54l0.92,-2.74l3.99,-1.26l1.4,-0.97l2.26,-4.97l3.2,-1.33l1.99,0.09l0.73,-0.74l1.66,-0.15l0.33,0.54l0.62,0.07l1.7,-1.69l0.08,-0.45l-0.54,-1.22l-0.16,-2.06l-0.97,-1.85l-0.07,-3.43l0.96,-1.73l2.02,-0.2l1.09,-1.07l1.33,-0.67l-0.05,1.06l-0.73,1.41l0.3,1.0l1.2,0.64l-0.26,0.57l-0.88,-0.07l-1.85,2.92l0.65,1.63l0.04,1.27l0.28,0.37l2.25,0.71l-0.02,0.92l0.5,0.4l2.55,-0.65l1.34,-0.87l4.18,2.34l1.69,-0.99l6.91,-2.71l2.14,0.5l0.52,0.91l2.41,0.04l0.38,-0.26l0.5,-1.34l3.27,-1.07l0.27,-0.45l-0.52,-2.91l0.08,-2.53l1.13,-2.06l1.95,-1.02l2.12,2.58l2.01,-0.07l0.38,-0.33l0.77,-4.92l-0.58,-0.41l-0.69,0.34l-1.26,-1.03l-0.17,-1.63l2.83,-0.92l3.05,-0.52l2.64,0.6l2.69,-0.1l3.06,-2.14l-0.01,-0.65l-2.87,-1.86l-4.64,0.32l-4.38,1.37l-3.8,0.74l-1.44,-1.96l-2.17,-1.11l0.5,-3.66l-1.16,-3.33l1.09,-2.08l2.21,-2.42l5.67,-4.32l1.64,-0.83l0.21,-0.42l-0.46,-2.02l-3.78,-1.99l-4.51,1.3l-2.43,2.86l0.26,2.57l-8.77,6.64l-1.78,5.79l1.78,2.68l2.22,1.96l-2.07,3.77l-2.72,1.13l-0.95,6.04l-1.29,3.01l-2.74,-0.31l-0.4,0.22l-1.31,2.59l-2.34,0.13l-0.75,-3.09l-2.08,-4.03l-1.9,-5.12l-1.73,-2.37l-0.58,-0.07l-4.87,4.19l-3.1,0.79l-3.16,-1.7l-0.85,-3.77l-0.77,-8.55l2.14,-2.31l6.55,-3.27l5.02,-4.17l10.63,-13.84l10.98,-8.7l5.35,-1.91l4.34,0.12l3.69,-3.64l4.49,0.19l4.37,-0.89l6.8,2.89l-2.29,0.86l-0.15,0.65l2.74,2.81l0.44,0.09l2.42,-1.45l4.06,2.61l6.79,1.04l9.34,4.85l1.78,1.88l0.14,2.46l-2.55,2.02l-3.9,1.06l-11.07,-3.14l-2.06,0.53l-0.13,0.7l3.94,2.94l0.31,5.86l0.26,0.36l5.14,2.24l0.58,-0.29l0.32,-1.94l-1.35,-1.78l1.13,-1.09l6.13,2.42l2.11,-0.98l0.18,-0.56l-1.51,-2.67l5.41,-3.76l2.07,0.22l2.26,1.41l0.57,-0.16l1.46,-2.87l-0.05,-0.44l-1.92,-2.32l1.12,-2.32l-1.32,-2.27l5.87,1.16l1.04,1.75l-2.59,0.43l-0.33,0.4l0.02,2.36l2.46,1.83l3.87,-0.91l0.86,-2.8l13.69,-5.65l0.99,0.11l-1.92,2.06l0.23,0.67l3.11,0.45l2.0,-1.48l4.56,-0.12l3.64,-1.73l2.65,2.44l0.56,-0.01l2.85,-2.88l-0.01,-0.57l-2.35,-2.29l0.9,-1.01l7.14,1.3l3.41,1.36l9.05,4.97l0.51,-0.11l1.67,-2.27l-0.05,-0.53l-2.43,-2.21l-0.06,-0.78l-0.34,-0.36l-2.52,-0.36l0.64,-1.93l-1.32,-3.46l-0.06,-1.21l4.48,-4.06l1.69,-4.29l1.6,-0.81l6.23,1.18l0.44,2.21l-2.29,3.64l0.06,0.5l1.47,1.39l0.76,3.0l-0.56,6.03l2.69,2.82l-0.96,2.57l-4.86,5.95l0.23,0.64l2.86,0.61l0.42,-0.17l0.93,-1.4l2.64,-1.03l0.87,-2.24l2.09,-1.96l0.07,-0.5l-1.36,-2.28l1.09,-2.69l-0.32,-0.55l-2.47,-0.33l-0.5,-2.06l1.94,-4.38l-0.06,-0.42l-2.96,-3.4l4.12,-2.88l0.16,-0.4l-0.51,-2.93l0.54,-0.05l1.13,2.25l-0.96,4.35l0.27,0.47l2.68,0.84l0.5,-0.51l-1.02,-2.99l3.79,-1.66l5.01,-0.24l4.53,2.61l0.48,-0.06l0.07,-0.48l-2.18,-3.82l-0.23,-4.67l3.98,-0.9l5.97,0.21l5.49,-0.64l0.27,-0.65l-1.83,-2.31l2.56,-2.9l2.87,-0.17l4.8,-2.47l6.54,-0.67l1.03,-1.42l6.25,-0.45l2.32,1.11l5.53,-2.7l4.5,0.08l0.39,-0.28l0.66,-2.15l2.26,-2.12l5.69,-2.11l3.21,1.29l-2.46,0.94l-0.25,0.42l0.34,0.35l5.41,0.77l0.61,2.33l0.58,0.25l2.2,-1.22l7.13,0.07l5.51,2.47l1.79,1.72l-0.53,2.24l-9.16,4.15l-1.97,1.52l0.16,0.71l6.77,1.91l2.16,-0.78l1.13,2.74l0.67,0.11l1.01,-1.15l3.81,-0.73l7.7,0.77l0.54,1.99l0.36,0.29l10.47,0.71l0.43,-0.38l0.13,-3.23l4.87,0.78l3.95,-0.02l3.83,2.4l1.03,2.71l-1.35,1.79l0.02,0.5l3.15,3.64l4.07,1.96l0.53,-0.18l2.23,-4.47l3.95,1.93l4.16,-1.21l4.73,1.39l2.05,-1.26l3.94,0.62l0.43,-0.55l-1.68,-4.02l2.89,-1.8l22.31,3.03l2.16,2.75l6.55,3.51l10.29,-0.81l4.82,0.73l1.85,1.66l-0.29,3.08l0.25,0.41l3.08,1.26l3.56,-0.88l4.35,-0.11l4.8,0.87l4.57,-0.47l4.23,3.79l0.43,0.07l3.1,-1.4l0.16,-0.6l-1.88,-2.62l0.85,-1.52l7.71,1.21l5.22,-0.26l7.09,2.09l9.59,5.22l6.35,4.11l-0.2,2.38l1.88,1.41l0.6,-0.42l-0.48,-2.53l6.15,0.57l4.4,3.51l-1.97,1.43l-4.0,0.41l-0.36,0.39l-0.06,3.79l-0.74,0.62l-2.07,-0.11l-1.91,-1.39l-3.14,-1.11l-0.78,-1.85l-2.72,-0.68l-2.63,0.49l-1.04,-1.1l0.46,-1.31l-0.5,-0.51l-3.0,0.98l-0.22,0.58l0.99,1.7l-1.21,1.48l-3.04,1.68l-3.12,-0.28l-0.4,0.23l0.09,0.46l2.2,2.09l1.46,3.2l1.15,1.1l0.24,1.33l-0.42,0.67l-4.63,-0.77l-6.96,2.9l-2.19,0.44l-7.6,5.06l-0.84,1.45l-3.61,-2.37l-6.24,2.82l-0.94,-1.15l-0.53,-0.08l-2.28,1.52l-3.2,-0.49l-0.44,0.27l-0.78,2.37l-3.05,3.78l0.09,1.47l0.29,0.36l2.54,0.72l-0.29,4.53l-1.97,0.11l-0.35,0.26l-1.07,2.94l0.8,1.45l-3.91,1.58l-1.05,3.95l-3.48,0.77l-0.3,0.3l-0.72,3.29l-3.09,2.65l-0.7,-1.74l-2.44,-12.44l1.16,-4.71l2.04,-2.06l0.22,-1.64l3.8,-0.86l4.46,-4.61l4.28,-3.81l4.48,-3.01l2.17,-5.63l-0.42,-0.54l-3.04,0.33l-1.77,3.31l-5.86,3.86l-1.86,-4.25l-0.45,-0.23l-6.46,1.3l-6.47,6.44l-0.01,0.55l1.58,1.74l-8.24,1.17l0.15,-2.2l-0.34,-0.42l-3.89,-0.56l-3.25,1.81l-7.62,-0.62l-8.45,1.19l-17.71,15.41l0.22,0.7l3.74,0.41l1.36,2.17l2.43,0.76l1.88,-1.68l2.4,0.2l3.4,3.54l0.08,2.6l-1.95,3.42l-0.21,3.9l-1.1,5.06l-3.71,4.54l-0.87,2.21l-8.29,8.89l-3.19,1.7l-1.32,0.03l-1.45,-1.36l-0.49,-0.04l-2.27,1.5l0.41,-3.65l-0.59,-2.47l1.75,-0.89l2.91,0.53l0.42,-0.2l1.68,-3.03l0.87,-3.46l0.97,-1.18l1.32,-2.88l-0.45,-0.56l-4.14,0.95l-2.19,1.25l-3.41,-0.0l-1.06,-2.93l-2.97,-2.3l-4.28,-1.06l-1.75,-5.07l-2.66,-5.01l-2.29,-1.29l-3.75,-1.01l-3.44,0.08l-3.18,0.62l-2.24,1.77l0.05,0.66l1.18,0.69l0.02,1.43l-1.33,1.05l-2.26,3.51l-0.04,1.43l-3.16,1.84l-2.82,-1.16l-3.01,0.23l-1.35,-1.07l-1.5,-0.35l-3.9,2.31l-3.22,0.52l-2.27,0.79l-3.05,-0.51l-2.21,0.03l-1.48,-1.6l-2.6,-1.63l-2.63,-0.43l-5.46,1.01l-3.23,-1.25l-0.72,-2.57l-5.2,-1.24l-2.75,-1.36l-0.5,0.12l-2.59,3.45l0.84,2.1l-2.06,1.93l-3.41,-0.77l-2.42,-0.12l-1.83,-1.54l-2.53,-0.05l-2.42,-0.98l-3.86,1.57l-4.72,2.78l-3.3,0.75l-1.55,-1.92l-3.0,0.41l-1.11,-1.33l-1.62,-0.59l-1.31,-1.94l-1.38,-0.6l-3.7,0.79l-3.31,-1.83l-0.51,0.11l-0.99,1.29l-5.29,-8.05l-2.96,-2.48l0.65,-0.77l0.01,-0.51l-0.5,-0.11l-6.2,3.21l-1.84,0.15l0.15,-1.39l-0.26,-0.42l-3.22,-1.17l-2.46,0.7l-0.69,-3.16l-0.32,-0.31l-4.5,-0.75l-2.47,1.47l-6.19,1.27l-1.29,0.86l-9.51,1.3l-1.15,1.17l-0.03,0.53l1.47,1.9l-1.89,0.69l-0.22,0.56l0.31,0.6l-2.11,1.44l0.03,0.68l3.75,2.12l-0.39,0.98l-3.23,-0.13l-0.86,0.86l-3.09,-1.59l-3.97,0.07l-2.66,1.35l-8.32,-3.56l-4.07,0.06l-5.39,3.68l-0.39,2.0l-2.03,-1.5l-0.59,0.13l-2.0,3.59l0.57,0.93l-1.28,2.16l0.06,0.48l2.13,2.17l1.95,0.04l1.37,1.82l-0.23,1.46l0.25,0.43l0.83,0.33l-0.8,1.31l-2.49,0.62l-2.49,3.2l0.0,0.49l2.17,2.78l-0.15,2.18l2.5,3.24l-1.58,1.59l-0.7,-0.13l-1.63,-1.72l-2.29,-0.84l-0.94,-1.31l-2.34,-0.63l-1.48,0.4l-0.43,-0.47l-3.51,-1.48l-5.76,-1.01l-0.45,0.19l-2.89,-2.34l-2.9,-1.2l-1.53,-1.29l1.29,-0.43l2.08,-2.61l-0.05,-0.55l-0.89,-0.79l3.05,-1.06l0.2,-1.11l-0.49,-0.35l-4.21,0.76l-1.74,1.03l-2.41,0.21l-2.16,1.17l-0.21,0.38l0.34,2.26l1.46,0.81l1.89,-0.14l-0.14,0.31l-2.65,0.53l-3.23,1.69l-0.87,-0.39l0.42,-1.1l-0.25,-0.52l-2.21,-0.73l2.35,-1.06l0.12,-0.65l-0.73,-0.72l-3.82,-0.84l-0.13,-0.89l-0.46,-0.34l-2.32,0.39l-3.11,4.17l-0.05,0.83l-0.83,0.45l-0.59,-0.22l-0.54,0.3l-0.68,3.58l-1.3,1.31l-0.91,2.17l0.48,1.34l-1.6,-0.24l-2.55,0.95l-0.08,0.71l0.94,0.61l-0.59,1.43l-0.37,0.21l-2.84,-0.35l-3.03,0.77l-0.18,0.68l1.28,1.23l-1.75,0.23l-1.2,-1.39l-0.63,0.03l-0.47,0.65l0.5,2.12l1.03,1.19l-0.56,0.38l-0.05,0.62l2.52,2.12l0.02,0.87l-1.78,-0.59l-0.48,0.56l0.5,1.0l-1.07,0.2l-0.3,0.53l0.75,2.01l-0.98,0.02l-1.84,-1.12l-1.37,-4.2l-2.21,-2.95l-0.79,-1.85l-1.25,-0.89l-0.18,-1.2l0.45,-3.22l-1.75,-1.77l-3.42,-1.71l-1.51,-1.12l-2.21,-0.87l-1.67,-1.78l0.13,-0.63l-1.05,-1.19l-0.32,-1.27l-1.61,-0.49l-0.46,0.18l-0.46,0.8l-0.26,-1.13l0.66,-0.63l-0.31,-0.34l-1.99,-0.45l-2.32,1.14l-0.21,0.39l0.13,1.45l-0.25,1.12l0.82,1.57l2.39,1.63l1.31,2.54l2.79,2.43l2.05,0.08l0.21,0.23l-0.39,0.33l0.09,0.67l4.05,1.97l2.17,1.76l-0.16,0.36l-1.17,-1.08l-2.18,-0.49l-0.44,0.2l-1.05,1.91l0.14,0.54l1.57,0.95l-0.19,0.98l-1.06,0.33l-1.25,2.34l-0.37,0.08l0.0,-0.33l1.0,-2.45l-1.73,-3.17l-1.12,-0.51l-0.67,-1.15l-1.73,-0.69l-1.01,-1.12l-2.01,-0.31l-1.86,-1.28l-3.88,-3.59l-1.03,-3.19l-3.53,-1.36l-1.3,0.51l-1.36,1.34l-1.08,0.27l-2.13,1.62l-4.77,-0.8l-3.82,1.0l-0.58,2.15l0.11,1.64l-2.14,1.8l-3.11,0.61l-0.31,0.31l-0.2,0.89l-1.54,1.69l-0.97,2.4l0.84,1.74l-1.32,1.27l-0.48,1.68l-1.88,0.65l-1.66,2.07l-5.36,-0.01l-1.79,1.08l-0.89,0.98l-0.88,-0.17l-0.79,-0.82l-0.97,-1.82l-2.34,-0.45ZM749.2,170.72l-0.6,0.4l-0.13,0.16l-0.01,-0.51l0.74,-0.05ZM871.88,65.81l2.17,-0.13l3.19,1.16l-2.39,1.09l-5.63,0.48l-0.26,-0.84l2.92,-1.76ZM797.39,48.49l-2.0,1.36l-3.8,-0.42l-4.25,-1.8l0.35,-0.97l9.69,1.83ZM783.67,46.12l-1.63,3.09l-8.98,-0.13l-4.09,1.14l-4.54,-2.97l1.16,-3.01l3.05,-0.89l6.5,0.22l8.54,2.56ZM778.2,134.98l-0.56,-0.9l0.27,-0.12l0.29,1.01ZM778.34,135.48l0.94,3.53l-0.05,3.38l1.05,3.39l2.18,5.0l-2.89,-0.83l-0.49,0.26l-1.54,4.65l2.42,3.5l-0.04,1.13l-1.24,-1.24l-0.61,0.06l-1.09,1.61l-0.28,-1.61l0.27,-3.1l-0.28,-3.4l0.58,-2.47l0.11,-4.39l-1.46,-3.36l0.21,-4.32l2.15,-1.46l0.07,-0.34ZM771.95,56.61l1.76,-1.42l2.89,-0.42l3.28,1.71l0.14,0.6l-3.27,0.03l-4.81,-0.5ZM683.76,31.09l-13.01,1.93l4.03,-6.35l1.82,-0.56l1.73,0.34l5.99,2.98l-0.56,1.66ZM670.85,27.93l-5.08,0.64l-6.86,-1.57l-3.99,-2.05l-2.1,-4.16l-2.6,-0.87l5.72,-3.5l5.2,-1.28l4.69,2.85l5.59,5.4l-0.56,4.53ZM564.15,68.94l-0.64,0.17l-7.85,-0.57l-0.86,-2.04l-4.28,-1.17l-0.28,-1.94l2.27,-0.89l0.25,-0.39l-0.08,-2.38l4.81,-3.97l-0.15,-0.7l-1.47,-0.38l5.3,-3.81l0.15,-0.44l-0.58,-1.94l5.28,-2.51l8.21,-3.27l8.28,-0.96l4.35,-1.94l4.6,-0.64l1.36,1.61l-1.34,1.28l-16.43,4.94l-7.97,4.88l-7.74,9.63l0.66,4.14l4.16,3.27ZM548.81,18.48l-5.5,1.18l-0.58,1.02l-2.59,0.84l-2.13,-1.07l1.12,-1.42l-0.3,-0.65l-2.33,-0.07l1.68,-0.36l3.47,-0.06l0.42,1.29l0.66,0.16l1.38,-1.34l2.15,-0.88l2.94,1.01l-0.39,0.36ZM484.55,20.04l4.26,1.75l-3.1,2.55l-7.1,0.65l-7.08,-0.9l-0.37,-1.31l-0.37,-0.29l-3.44,-0.1l-2.08,-2.0l6.87,-1.44l3.9,1.31l2.39,-1.64l6.13,1.4ZM480.49,192.16l0.58,0.4l-0.68,-0.12l0.11,-0.28ZM482.52,192.82l2.51,0.06l0.24,0.32l-1.99,0.13l-0.77,-0.51ZM481.69,33.93l-4.45,1.74l-3.54,-0.99l1.12,-0.9l0.05,-0.58l-1.06,-1.22l4.22,-0.89l1.09,1.97l2.57,0.87ZM466.44,24.04l7.43,3.77l-5.41,1.86l-1.58,4.08l-2.26,1.2l-1.12,4.11l-2.61,0.18l-4.79,-2.86l1.84,-1.54l-0.1,-0.68l-3.69,-1.53l-4.77,-4.51l-1.73,-3.89l6.11,-1.82l1.54,1.92l3.57,-0.08l1.2,-1.96l3.32,-0.18l3.05,1.92ZM459.19,184.75l-0.65,1.65l0.32,1.05l-0.31,0.89l-1.5,-0.85l-4.5,-1.67l0.19,-0.82l2.67,0.23l3.78,-0.48ZM452.28,129.07l-1.19,2.24l-2.13,-1.6l-0.23,-0.95l2.98,-0.95l0.57,1.26ZM443.93,176.05l1.18,1.66l-0.3,3.32l-1.06,-0.01l-0.77,0.73l-0.53,-0.44l-0.1,-3.37l-0.39,-1.22l1.04,0.01l0.92,-0.68ZM444.48,172.62l-0.64,1.78l-0.58,-0.31l-0.49,-1.72l0.4,-0.89l1.0,-0.72l0.3,1.85ZM412.61,118.72l-2.19,3.22l-0.0,0.45l5.13,-0.3l-0.53,2.37l-2.2,3.12l0.29,0.63l2.37,0.21l2.33,4.3l1.76,0.69l2.2,5.12l2.94,0.77l-0.23,1.62l-1.15,0.88l-0.1,0.52l0.82,1.42l-1.86,1.43l-3.3,-0.02l-4.12,0.87l-1.04,-0.58l-0.47,0.06l-1.51,1.41l-2.12,-0.34l-1.86,1.18l-0.6,-0.29l3.19,-3.0l2.16,-0.69l0.28,-0.41l-0.34,-0.36l-3.73,-0.53l-0.4,-0.76l2.2,-0.87l0.17,-0.61l-1.26,-1.67l0.36,-1.7l3.38,0.28l0.43,-0.33l0.37,-1.99l-1.79,-2.49l-3.11,-0.72l-0.38,-0.59l0.79,-1.35l-0.04,-0.46l-0.82,-0.97l-0.61,0.01l-0.68,0.84l-0.1,-2.34l-1.23,-1.88l0.85,-3.47l1.77,-2.68l1.85,0.26l2.17,-0.22ZM405.09,134.93l0.34,2.55l-1.75,2.78l-4.22,1.88l-2.84,-0.4l1.73,-3.0l-1.18,-3.53l4.98,-4.07l1.81,-0.12l2.3,1.84l-1.17,2.07ZM384.14,88.06l-0.37,2.61l2.54,2.51l-2.9,2.75l-9.19,3.4l-9.25,-1.66l1.7,-1.22l-0.1,-0.7l-4.05,-1.47l2.96,-0.53l0.33,-0.43l-0.11,-1.2l-0.33,-0.36l-4.67,-0.85l1.28,-2.04l3.45,-0.56l3.77,2.72l0.44,0.02l3.64,-2.16l3.3,1.08l3.98,-2.16l3.58,0.26ZM289.01,278.39l-0.81,0.8l-0.78,0.12l-0.5,-0.66l-0.56,-0.1l-0.91,0.6l-0.46,-0.22l1.09,-2.96l-0.96,-1.77l-0.17,-1.49l1.07,-1.77l2.32,0.75l2.51,2.01l0.3,0.74l-2.14,3.96Z\",\n            name: \"Europe\"\n          },\n          SA: {\n            path: \"M249.29,428.94l-2.5,0.04l-3.43,2.03l-0.57,3.16l-0.64,0.05l-2.68,-1.06l-2.82,-2.33l-3.04,-1.89l-0.69,-1.85l0.63,-2.14l-1.21,-2.11l-0.31,-5.37l1.01,-2.91l2.57,-2.38l-0.18,-0.68l-3.16,-0.77l2.05,-2.47l0.77,-4.65l2.32,0.9l0.54,-0.29l1.31,-6.31l-0.22,-0.44l-1.68,-0.8l-0.56,0.28l-0.7,3.36l-0.81,-0.22l1.56,-9.41l1.15,-2.24l-0.71,-2.82l-0.18,-2.84l1.01,-0.33l3.26,-9.14l1.07,-4.22l-0.56,-4.21l0.74,-2.34l-0.29,-3.27l1.46,-3.34l2.04,-16.59l-0.18,-4.34l-0.52,-3.69l-2.55,-1.68l-0.39,-1.16l-4.95,-2.58l-4.46,-2.79l-1.84,-1.51l-0.91,-1.84l0.3,-0.96l-2.11,-3.33l-4.82,-9.68l-1.04,-1.2l-0.87,-1.94l-3.4,-2.48l0.58,-1.18l-1.13,-2.23l0.66,-1.49l1.92,-1.52l1.41,-1.95l-0.51,-1.5l-0.67,-0.08l-0.72,0.87l-0.87,-0.64l0.35,-0.69l-0.36,-1.96l0.81,-0.51l0.45,-1.51l0.92,-1.57l-0.07,-0.97l2.84,-1.44l0.02,-0.83l0.77,-0.52l-0.1,-1.12l0.41,-0.64l1.34,-0.32l2.0,-2.88l-0.11,-0.57l-0.66,-0.43l0.39,-1.38l-0.52,-2.1l0.49,-0.83l-0.4,-2.13l-0.97,-1.35l0.17,-0.66l0.86,-0.08l0.47,-0.75l-0.46,-1.63l1.41,-0.07l1.8,-1.69l0.93,-0.24l0.3,-0.38l0.45,-2.76l1.22,-1.0l1.44,-0.04l0.45,-0.5l1.91,0.12l2.93,-1.84l1.15,-1.14l0.91,0.46l-0.42,1.05l-1.19,0.24l-0.25,0.62l0.74,1.04l-0.02,1.06l-1.07,1.78l0.95,2.0l0.42,0.22l1.4,-0.44l0.56,-1.83l-0.77,-1.17l-0.1,-1.47l2.82,-0.93l0.26,-0.49l-0.28,-0.96l0.3,-0.28l0.66,1.31l1.96,0.26l1.4,1.22l0.08,0.68l0.39,0.35l4.81,-0.22l1.49,1.11l1.92,0.31l1.67,-0.84l0.22,-0.6l3.44,-0.14l-0.17,0.55l0.86,1.19l2.19,0.35l1.67,1.1l0.37,1.86l0.41,0.32l1.18,-0.05l2.48,1.44l1.41,1.49l0.06,1.15l0.37,0.38l0.8,0.05l2.23,2.01l3.2,0.6l0.57,-0.47l1.75,-0.16l2.1,0.53l-1.08,1.95l0.2,1.72l0.93,1.49l-1.19,3.03l0.17,0.57l1.09,0.52l1.06,-0.61l0.84,0.78l1.42,-0.29l1.05,-1.08l2.12,-3.92l0.37,-0.05l1.89,5.45l1.33,0.59l0.05,1.28l-1.77,1.94l0.02,0.56l0.78,0.75l4.32,0.47l0.08,2.16l0.66,0.29l1.74,-1.5l6.97,2.32l1.02,1.22l-0.35,1.18l0.49,0.5l2.81,-0.74l4.77,1.3l3.75,-0.08l3.57,2.0l3.29,2.86l1.93,0.72l2.12,0.12l0.71,0.62l1.21,4.51l-0.95,3.98l-4.72,5.06l-1.64,2.92l-1.72,2.05l-0.8,0.3l-0.72,2.03l0.18,4.75l-0.94,5.53l-0.81,1.13l-0.43,3.36l-2.55,3.5l-0.4,2.51l-1.86,1.04l-0.67,1.53l-2.54,0.01l-3.94,1.01l-1.83,1.2l-2.87,0.82l-3.03,2.19l-2.2,2.83l-0.36,2.0l0.4,1.58l-0.44,2.6l-0.51,1.2l-1.77,1.54l-2.75,4.78l-3.95,3.58l-1.11,2.58l-1.6,1.55l-1.09,1.76l-2.59,1.44l-1.69,-0.52l-1.42,0.26l-2.18,-1.15l-1.72,0.04l-1.4,-1.43l-0.68,0.23l-0.02,1.84l2.99,2.28l-0.16,2.11l1.4,1.11l-0.1,1.09l-2.29,3.52l-3.55,1.49l-4.92,0.6l-2.71,-0.29l-0.43,0.51l0.5,1.65l-0.49,2.1l0.38,1.42l-1.19,0.83l-2.36,0.38l-2.3,-1.04l-1.38,0.83l0.41,3.64l1.69,0.91l1.4,-0.71l0.36,0.76l-2.04,0.86l-2.01,1.89l-0.97,4.63l-2.34,0.1l-2.09,1.78l-0.61,2.75l2.46,2.31l2.17,0.63l-0.7,2.32l-2.83,1.73l-1.73,3.86l-2.17,1.22l-1.16,1.67l0.75,3.76l1.04,1.28ZM274.36,425.85l1.44,1.08l-0.47,0.73l-3.0,0.89l-0.96,-1.0l-0.52,-0.05l-1.83,1.29l-0.73,-0.88l2.46,-1.64l1.93,0.76l1.67,-1.19ZM253.56,437.92l-0.62,0.09l-0.77,1.31l-1.94,0.98l-2.49,-0.37l-1.88,-1.06l-2.55,-0.49l-3.08,-1.89l-2.51,-1.82l-2.38,-2.63l4.1,2.48l3.32,1.23l0.45,-0.12l1.29,-1.57l0.83,-2.32l2.05,-1.24l1.46,0.33l2.25,4.11l3.26,2.07l3.08,0.78l-0.71,1.1l-2.0,0.15l-1.15,-1.11Z\",\n            name: \"South America\"\n          }\n        },\n        height: 440.7063107441331,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 11.5\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"es_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 738.0097895570743,\n          bbox: [{\n            y: -5213399.331391313,\n            x: -2023392.062741889\n          }, {\n            y: -3158091.8374794754,\n            x: 483047.242935642\n          }],\n          left: 0\n        }],\n        paths: {\n          \"ES-NA\": {\n            path: \"M644.33,66.96l0.33,-0.47l-0.06,-0.57l-1.06,-0.77l-4.56,-0.01l-3.42,-2.25l-2.68,0.3l-2.09,-0.61l0.41,-2.88l-0.35,-1.55l-1.11,-0.54l-1.2,1.07l-1.22,-0.54l-0.1,-0.43l3.06,-2.27l0.65,0.13l0.78,0.88l0.95,0.06l0.99,-0.29l1.52,-1.05l0.06,-0.84l-0.77,-0.62l-0.3,-1.84l1.14,-0.52l0.49,-0.59l0.2,-1.93l1.29,-2.35l0.12,-1.11l-0.51,-1.86l0.76,-1.53l0.86,-0.61l1.15,0.35l2.13,-0.29l1.26,-1.32l1.85,-0.67l0.48,-0.95l-0.04,-1.13l0.94,-1.72l3.01,-1.84l1.13,-1.56l-0.22,-2.6l0.26,-1.09l0.8,0.16l0.52,-0.71l0.94,0.15l0.7,-0.33l2.4,-2.91l3.7,-0.68l0.83,0.39l0.29,1.71l1.01,0.69l1.61,-0.26l1.05,-1.53l1.81,0.33l1.64,0.76l1.38,-0.17l0.92,0.84l0.13,1.56l-0.99,3.29l-2.12,2.14l-0.38,0.83l0.58,1.16l1.71,1.26l2.23,0.36l0.82,-0.21l0.58,-0.85l0.38,-2.22l1.18,-0.76l-0.59,1.16l0.28,0.82l0.68,0.69l0.98,0.52l2.26,0.36l2.57,1.56l1.68,-0.04l1.32,0.71l1.88,0.29l1.87,1.41l1.64,0.49l3.27,0.25l3.08,-0.48l0.81,0.25l0.27,0.63l-2.17,0.86l-0.53,1.38l-1.12,1.36l-0.77,3.72l-3.77,2.8l-2.51,0.76l-0.37,0.45l-0.42,1.76l-4.02,0.43l-0.5,1.1l-0.42,0.14l-0.15,0.69l0.41,0.25l-0.95,0.56l-0.89,1.33l-0.53,0.24l-1.43,-0.09l-0.93,1.14l-0.3,1.02l0.45,1.24l-2.74,3.48l-0.3,1.88l0.7,0.96l-2.06,2.62l-1.33,3.98l0.08,0.95l0.72,1.23l0.23,2.88l1.69,2.33l1.42,0.67l-0.31,1.0l-3.58,5.5l-2.79,-0.62l-2.55,0.54l-3.27,-2.18l-0.96,-0.24l-1.68,0.34l-1.0,-0.41l-1.46,-1.26l-3.45,-0.56l-1.34,-1.01l-0.34,-0.79l0.15,-1.16l2.77,-3.2l1.47,0.33l1.44,-0.35l1.32,0.5l1.26,-0.44l0.11,-2.06l-0.34,-1.72l-1.38,-1.1l-2.75,-1.2l-1.35,-1.02l-1.06,-0.0l-0.29,-1.31l-1.47,-0.96l-2.98,-3.22l-2.46,-0.12l-1.0,-0.59ZM683.47,65.61l-1.86,-0.44l0.31,-0.84l0.41,-0.32l0.27,0.9l0.88,0.7ZM679.34,67.04l-0.19,-0.41l0.68,-0.41l-0.23,0.57l-0.27,0.25Z\",\n            name: \"Navarra\"\n          },\n          \"ES-B\": {\n            path: \"M793.32,86.52l1.15,-1.57l0.06,-2.01l0.9,-0.59l-0.18,-2.03l1.18,-1.52l-0.29,-1.3l-1.59,-1.0l-0.28,-1.88l1.1,-1.25l7.73,-1.42l0.82,0.17l1.52,0.95l2.21,-0.18l0.36,0.79l-0.69,1.02l-0.2,1.34l1.09,1.51l0.18,2.07l0.48,0.92l1.43,0.1l1.54,0.85l1.12,-0.37l1.93,-0.06l0.99,-0.64l1.71,-0.05l0.99,1.35l1.04,0.12l1.41,-0.36l1.51,1.81l0.79,0.44l1.47,-0.01l1.16,1.07l0.17,1.68l-2.39,2.77l0.06,0.56l0.86,0.97l-0.59,1.05l-0.74,0.01l-1.42,0.76l-2.03,-0.78l-1.07,1.33l0.1,1.25l1.17,1.91l0.96,0.6l2.82,-0.21l4.67,4.01l3.58,-0.67l1.83,-0.78l2.33,0.62l0.64,0.55l0.19,0.75l-0.55,0.92l0.59,1.53l-12.75,5.12l-3.15,2.21l-3.03,1.17l-1.26,0.88l-1.08,1.32l-3.06,4.47l-1.24,1.04l-2.73,1.35l-4.31,0.65l-3.84,1.17l-1.43,-0.04l-7.25,1.99l0.02,-0.89l-0.32,-0.41l-1.77,-0.38l1.14,-0.69l0.51,-0.97l-0.13,-0.62l-1.14,-0.97l-0.72,-1.42l-0.28,-1.57l-1.1,-1.11l-1.96,-1.01l-0.39,-0.67l0.33,-1.23l-0.1,-1.43l-1.05,-0.72l-2.0,-0.71l-0.13,-0.31l1.1,-1.37l0.34,-1.08l-0.48,-0.53l-0.76,-0.1l-0.06,-0.63l-1.22,-0.59l0.46,-0.52l2.12,-0.69l0.04,-0.56l-1.23,-2.82l0.1,-3.61l0.29,-0.44l0.66,-0.16l1.39,1.16l1.48,-0.14l0.88,0.71l0.64,0.09l3.38,-3.26l0.23,-1.24l-0.71,-2.09l1.04,-1.52l0.15,-1.58l2.13,-0.42l0.67,-0.91l-0.12,-0.78l-0.43,-0.45l-0.72,-0.15l-0.96,0.35Z\",\n            name: \"Barcelona\"\n          },\n          \"ES-CS\": {\n            path: \"M733.51,147.84l1.65,0.04l0.88,1.17l1.58,0.74l-0.42,1.24l0.8,1.37l5.09,2.02l0.54,0.43l0.59,1.26l2.77,1.2l-0.72,1.61l-1.93,2.36l-0.3,1.23l-1.02,0.96l-2.76,4.85l-2.02,1.75l-1.37,1.75l-2.45,1.9l-2.4,4.32l-1.02,0.99l-2.11,1.23l-2.78,4.74l-3.53,3.95l-3.92,5.93l-2.72,-1.47l-1.61,-1.77l-1.45,-0.47l-1.66,0.71l-1.33,1.85l-1.57,0.91l-0.63,-0.17l-2.11,-3.08l-0.51,-0.13l-1.47,0.75l-1.26,1.38l-0.95,0.1l-0.29,-0.26l0.08,-1.48l-0.65,-2.35l-1.4,-0.78l-0.55,0.17l-0.73,1.4l-0.51,-0.09l-1.38,-2.16l-2.02,-1.76l-0.52,-1.67l0.12,-0.83l0.31,-0.46l2.02,-0.99l0.81,-1.74l2.6,-0.17l2.89,-1.32l0.29,-0.56l-0.21,-1.34l1.88,-2.15l0.74,-2.3l0.07,-1.53l1.88,0.41l2.15,-0.35l1.53,-0.66l0.82,-0.93l-0.03,-1.3l1.27,-1.0l1.0,-1.3l1.88,-1.31l-0.1,-1.3l-1.94,-2.2l2.35,-1.18l0.34,-0.51l-0.36,-1.24l-0.67,-0.56l0.14,-4.33l-0.66,-0.57l-1.0,0.22l-1.62,-0.53l-0.05,-1.53l0.89,-0.44l1.82,0.46l2.82,-1.5l0.41,-0.64l0.21,-1.97l1.29,-1.37l1.0,0.17l3.23,2.13l3.56,0.19l0.28,1.0l0.63,0.44l0.58,-0.03l1.82,-1.06l3.14,-0.52Z\",\n            name: \"Castell\\xf3n\"\n          },\n          \"ES-ZA\": {\n            path: \"M447.68,88.37l-0.15,-0.9l0.8,-2.36l-0.65,-0.91l-1.43,-0.24l-0.29,-0.52l1.46,-1.8l1.25,-0.87l0.66,-1.66l1.59,-1.57l1.16,-0.74l2.41,-0.04l0.86,-1.56l3.52,1.77l1.56,-0.14l1.53,0.54l2.29,-0.07l1.25,0.28l1.27,0.76l2.78,-0.8l3.46,0.09l1.02,-0.37l1.13,1.34l3.2,1.51l6.37,-0.43l3.68,1.52l1.69,-0.58l0.59,-0.62l1.08,1.37l1.4,0.16l2.99,-0.79l0.76,1.04l2.65,-0.33l0.31,-0.81l1.39,1.08l0.21,1.47l2.85,0.99l0.52,-0.27l0.38,-1.37l0.23,0.01l0.49,1.72l1.33,2.27l-0.43,0.86l0.2,0.54l1.85,0.82l0.55,-0.28l0.62,-2.82l1.39,-0.39l3.35,2.62l-0.76,1.04l0.28,2.16l-0.44,1.87l1.0,2.65l-4.13,2.32l-0.17,0.51l0.88,1.99l1.66,2.31l0.15,1.81l0.39,0.93l1.34,0.66l-0.55,1.0l0.18,0.77l2.18,1.56l-0.91,0.75l-2.4,0.66l-0.54,0.66l-0.42,1.6l0.11,1.0l0.67,0.99l-0.25,3.16l1.05,1.96l0.28,2.34l-0.09,0.8l-1.61,1.71l-0.05,0.54l0.96,0.92l0.97,-0.13l-0.22,2.09l-0.8,0.14l-1.28,-1.21l-1.41,-0.15l-0.2,-1.54l-0.44,-0.35l-3.42,0.38l-2.18,-1.39l-2.4,-0.09l-1.77,-1.56l-0.76,-0.19l-1.72,0.82l-3.82,0.55l-3.03,-0.87l-0.92,0.1l-0.72,0.87l-0.04,3.16l-0.94,0.24l-0.36,-0.74l-0.52,-0.24l-0.98,0.69l-0.76,-0.53l0.17,-1.15l-0.59,-0.74l-3.21,-0.59l-0.88,0.65l-7.48,-3.84l-5.56,-0.95l1.35,-1.26l1.16,-1.69l0.96,-0.24l0.15,-0.98l1.82,-0.37l0.37,-0.4l1.46,-2.39l0.13,-1.48l2.94,-3.51l-0.02,-0.5l-2.75,-2.86l-1.79,-1.05l-2.03,-0.68l-3.91,-0.64l-1.83,1.14l-1.16,-0.24l-0.43,-0.59l-0.83,-2.9l0.64,-1.2l1.42,-4.78l-0.24,-0.56l-1.75,-0.49l0.29,-2.02l-0.26,-0.99l-0.69,-0.68l-0.97,-0.37l-0.5,0.19l-0.45,0.87l-3.89,0.42l-1.0,-0.27l-1.38,-1.91l-1.48,-0.36l-0.46,0.33l-0.22,1.24l-0.71,0.39l-2.35,0.17l-0.98,-0.18l-1.28,-0.82Z\",\n            name: \"Zamora\"\n          },\n          \"ES-O\": {\n            path: \"M444.89,15.73l0.57,-0.29l0.53,-2.12l0.58,-0.5l0.29,-0.92l2.03,-0.4l6.84,-0.12l2.68,0.53l2.32,-1.04l1.88,0.17l3.41,1.32l2.06,-0.33l0.3,-0.85l1.44,0.54l4.26,-0.36l3.51,-1.31l1.84,0.98l4.54,0.25l1.76,-0.89l4.56,0.0l0.57,-0.67l-0.32,-0.83l0.34,-0.86l1.34,-0.27l0.5,-1.0l0.32,0.02l1.99,1.13l2.88,3.27l0.6,0.16l0.38,-0.29l0.54,0.65l2.15,0.31l8.0,-0.3l0.91,0.21l-0.34,0.86l-0.65,0.55l0.23,0.89l0.5,0.1l1.64,-0.65l0.67,-0.89l1.99,0.07l3.39,1.86l1.44,0.47l3.51,0.17l0.77,0.19l0.34,0.5l0.87,-0.07l2.63,0.71l1.45,-0.61l4.08,1.05l4.15,1.6l8.46,0.66l0.03,0.45l-0.93,1.7l0.71,2.21l-0.5,1.02l-0.67,-0.79l-1.45,-0.25l-1.12,0.45l-0.94,0.82l-1.92,0.01l-1.05,0.39l-0.45,0.55l-0.16,2.09l-0.43,0.85l-3.2,0.19l-1.0,-1.53l-0.88,-0.68l-1.59,-0.14l-3.96,2.14l-2.3,0.76l-2.13,3.33l-1.53,-0.24l-2.15,0.94l-3.71,0.4l-2.74,-0.19l-0.67,0.5l-0.46,1.16l-2.78,0.2l-0.89,1.11l-2.2,0.34l-4.53,-1.32l-2.34,0.17l-0.63,0.37l-1.6,2.85l-0.52,0.3l-2.08,0.03l-2.8,-1.25l-1.4,-0.88l-0.59,-1.55l-0.82,-0.67l-1.37,0.2l-2.61,-0.35l-0.59,0.36l-0.45,1.16l-0.63,0.27l-3.09,-0.63l-0.73,0.22l-0.56,1.06l-5.38,-1.76l-1.29,0.59l-0.97,1.93l-2.49,0.65l-0.15,0.49l0.27,0.56l1.19,0.57l-1.99,1.08l-2.32,0.62l-2.94,-0.51l-2.67,0.14l-1.29,0.5l-1.18,1.0l-1.07,-0.81l-1.12,-0.18l-0.32,-2.07l-1.4,-1.46l-1.86,-0.35l-1.42,-1.5l-0.61,0.11l-0.21,1.28l-0.39,-0.37l-0.1,-0.72l0.88,-0.57l0.67,-1.56l1.13,-0.11l1.81,-0.73l1.56,-1.25l0.22,-0.81l-0.8,-1.65l-1.1,-0.93l-0.75,0.31l-0.67,0.99l-1.64,0.74l-0.35,-0.19l-0.44,-0.73l0.34,-1.4l-0.19,-0.63l-3.33,-1.98l-0.85,-2.97l-1.02,-0.6l-0.89,-1.14l-0.37,-2.09l-1.58,-0.55l0.21,-1.36l1.91,-0.03l2.59,-2.37Z\",\n            name: \"Asturias\"\n          },\n          \"ES-OR\": {\n            path: \"M393.45,63.58l1.32,-0.04l2.09,-1.92l1.46,-0.48l1.33,-1.27l1.12,0.96l3.12,-0.16l1.88,0.47l0.67,-0.33l0.71,-1.07l1.07,0.13l1.08,-0.41l1.14,1.2l-0.11,1.79l0.37,0.44l1.33,0.08l3.08,1.48l1.11,0.97l1.64,0.09l3.83,2.31l1.8,-0.2l2.43,0.57l4.47,-2.2l1.62,1.04l1.76,-0.24l1.88,0.46l2.49,4.12l0.72,-0.04l2.05,-4.85l1.9,-1.47l1.17,-1.99l3.33,0.41l2.4,-0.87l1.08,0.62l2.68,0.67l0.35,0.72l-0.14,1.08l-0.8,1.1l-0.09,0.69l3.85,2.79l0.03,1.88l-1.17,1.87l-1.17,1.13l-0.28,0.88l-2.2,0.03l-1.42,0.88l-1.78,1.77l-0.63,1.61l-1.16,0.78l-1.63,2.01l0.03,1.12l0.74,0.54l1.09,0.06l0.46,0.58l-0.82,1.93l0.11,0.82l-2.31,1.09l-3.57,-2.1l-0.95,0.08l-1.71,1.13l-0.03,3.12l-0.71,0.92l-1.2,0.68l-2.77,0.86l-2.75,0.16l-1.72,1.42l-1.01,-1.78l-1.86,-0.74l-0.85,0.31l-0.38,0.99l-0.48,0.31l-2.09,0.29l-0.37,-0.19l0.58,-1.55l-0.35,-0.55l-2.08,-0.08l-2.44,-1.16l-3.73,1.05l-1.17,-0.04l-0.63,0.28l-0.45,0.69l-0.77,-0.0l-0.31,-2.32l-0.53,-0.34l-1.04,0.52l-0.61,1.71l-1.88,0.18l-2.24,2.27l-1.64,0.42l-2.95,-0.16l-0.04,-1.75l-0.48,-0.51l-1.28,-0.45l-0.28,-1.33l1.82,-2.74l3.0,-2.23l0.5,-0.79l0.06,-1.05l-0.43,-0.85l-1.5,-0.89l-2.43,0.3l0.02,-2.59l-0.53,-1.11l1.37,-1.01l0.15,-1.72l0.57,-1.69l-0.47,-0.52l-2.68,0.64l-1.03,-1.0l-0.21,-0.77l0.52,-1.7l-0.27,-0.5l-0.81,-0.33l-1.16,-1.63l-0.02,-1.32l-0.93,-2.05l0.12,-2.39Z\",\n            name: \"Orense\"\n          },\n          \"ES-M\": {\n            path: \"M545.47,166.41l1.12,1.03l1.33,-0.17l0.69,-0.44l0.72,-1.17l0.39,-1.91l0.39,-0.46l3.66,-0.45l0.61,-2.94l-0.15,-3.5l1.2,-1.37l0.2,-1.0l-0.25,-1.16l0.57,0.73l1.02,0.28l2.9,-1.03l0.63,-3.19l2.78,-3.79l1.0,-0.59l1.63,0.22l1.19,-0.26l0.49,-0.43l1.38,-4.04l0.06,-1.62l1.74,-2.27l4.2,-1.54l2.17,-2.9l2.32,-1.57l2.4,-2.57l1.17,-0.65l1.4,-0.28l0.21,0.66l2.3,2.34l1.85,0.85l1.0,2.88l-0.08,0.87l-1.6,4.01l0.16,1.19l-0.86,0.78l-0.42,1.93l-0.76,1.41l0.3,0.69l1.42,0.5l0.38,0.6l0.25,1.59l-0.72,1.62l1.18,1.11l1.3,-0.06l0.55,-0.34l1.18,1.54l1.25,0.36l-0.15,1.98l0.45,0.79l0.9,0.67l-0.02,1.51l0.51,0.33l1.51,-0.41l1.54,1.2l0.29,3.22l1.64,0.97l0.63,1.19l-0.53,2.58l-1.02,1.21l-0.41,1.87l0.08,1.25l0.38,0.54l0.62,0.13l1.98,-1.55l0.4,0.14l0.73,1.78l0.31,2.8l-0.41,0.37l-0.01,0.69l0.91,2.06l-1.02,0.97l-0.67,0.19l-1.61,0.07l-0.38,-0.61l-1.02,-0.4l-4.04,1.66l-2.05,0.38l-1.32,-0.56l-1.3,0.52l-3.75,-0.14l-0.8,0.51l-0.47,0.76l-4.26,1.53l-0.26,1.09l-3.74,1.31l-2.52,2.03l-0.77,0.0l-1.54,-0.99l3.53,-1.05l0.87,-0.85l1.59,-0.83l1.85,-1.79l1.49,-0.76l1.03,-2.04l0.06,-0.98l-0.3,-0.59l-2.45,-1.25l-3.45,-0.29l-1.43,-1.29l-1.32,0.04l-1.08,-0.88l-5.7,-1.8l-1.1,-1.19l-1.29,-0.57l-0.73,0.01l-1.07,0.56l-1.15,-0.25l-1.86,-1.55l-2.62,0.76l-2.1,2.19l-1.62,-1.16l-0.34,-0.79l0.0,-1.49l-0.87,-0.71l-0.64,0.22l-2.68,3.18l-2.21,1.06l-0.87,0.76l-0.89,-0.07l-0.48,-0.29l1.51,-3.8l-0.31,-1.66ZM555.63,150.36l-1.47,0.1l0.06,-0.53l0.5,-0.43l0.54,0.1l0.37,0.76Z\",\n            name: \"Madrid\"\n          },\n          \"ES-L\": {\n            path: \"M741.11,122.28l-0.06,-0.86l0.95,-1.92l-0.09,-1.07l-0.49,-0.89l-1.42,-0.88l-0.07,-0.51l0.94,-2.05l0.02,-1.91l1.94,-0.94l1.57,-2.13l0.17,-0.67l-0.49,-1.92l-0.44,-0.57l-2.68,-0.5l-0.88,-3.03l2.95,-3.43l2.29,-0.67l1.52,-2.2l1.61,-0.66l2.19,-2.11l0.02,-2.49l-1.06,-1.03l0.53,-0.6l1.0,-0.43l1.86,-1.94l0.15,-1.24l1.91,-4.46l0.1,-2.83l0.55,-2.29l0.97,-2.15l0.32,-2.88l-0.2,-3.01l-0.56,-1.85l-0.74,-0.85l-0.48,-1.78l1.14,-0.76l0.13,-1.22l1.11,-2.02l0.31,-1.91l-0.35,-0.52l-1.58,-0.5l-0.53,-0.52l-1.67,-2.94l-0.26,-1.63l-0.85,-0.82l0.35,-0.33l0.08,-0.58l-0.29,-0.36l0.47,-1.13l0.06,-1.57l1.68,-0.3l2.71,0.68l1.41,0.03l4.32,2.28l1.3,-0.52l1.29,0.74l4.08,0.4l0.58,0.47l1.07,2.06l0.98,0.64l1.88,-0.33l5.32,0.13l0.04,0.68l0.91,0.39l2.51,4.14l-0.36,1.15l0.26,0.43l-0.71,1.48l0.44,0.49l0.74,-0.09l0.52,0.71l-1.4,0.66l-0.17,0.6l1.08,1.5l0.18,0.81l0.63,0.37l2.84,0.25l1.25,-1.02l2.38,-0.28l1.38,-0.51l0.6,-1.34l1.13,0.2l0.66,-0.26l0.77,2.26l0.71,0.6l2.42,0.8l0.08,1.53l0.98,1.5l0.1,1.73l-4.61,0.8l-1.63,1.93l0.35,2.31l1.84,1.52l-0.13,0.6l-1.05,1.12l0.27,1.73l-1.0,0.93l-0.02,1.93l-1.01,0.99l-0.26,0.71l0.52,0.92l1.49,-0.31l0.21,0.61l-0.46,0.3l-1.66,0.11l-0.47,0.42l-0.23,1.7l-1.1,1.7l-0.01,0.74l0.72,1.63l-0.08,0.64l-2.71,2.84l-0.27,0.1l-1.03,-0.77l-1.51,0.13l-1.43,-1.17l-0.79,0.04l-0.94,0.68l-0.32,4.33l1.23,2.91l-1.6,0.33l-0.92,0.75l-0.17,0.78l0.33,0.48l0.96,0.3l-0.26,0.33l-0.67,0.37l-6.97,-0.16l-1.07,1.45l-0.39,2.64l-1.62,0.5l-2.24,-0.38l-1.0,2.74l-0.77,0.85l-1.44,0.46l-1.18,2.0l-2.95,0.56l-1.22,-0.67l-0.77,-0.07l-1.12,1.26l-1.7,0.0l-1.04,0.64l-4.46,0.91l-2.47,-1.18l-0.54,0.23l-1.08,1.43l-0.75,-0.35l-0.85,-1.46l-1.1,-0.35l-0.92,0.81l-0.16,1.93l-1.5,-0.1l-0.9,1.33Z\",\n            name: \"L\\xe9rida\"\n          },\n          \"ES-J\": {\n            path: \"M614.53,252.6l1.85,-1.36l3.04,1.41l2.11,-0.47l1.78,0.31l0.07,3.4l0.79,0.76l2.5,0.67l0.44,4.09l0.41,0.61l1.16,0.67l0.27,0.78l-0.74,1.76l0.19,1.38l-3.98,4.84l-2.1,0.82l-0.25,0.4l0.15,2.39l-2.48,1.76l-0.69,-0.42l-0.72,0.08l-3.55,2.88l-4.18,6.48l-0.45,1.33l-0.07,3.58l-2.75,1.41l-0.41,1.3l-2.41,-0.43l-1.61,0.72l-3.66,-1.75l-1.72,-0.18l-1.29,0.37l-2.43,2.48l-3.21,0.6l-0.8,-0.16l-1.79,-1.74l-0.93,-0.47l-0.89,0.11l-4.89,3.9l-2.25,0.54l-4.35,2.39l-2.03,3.66l-4.04,0.34l-1.8,-0.98l-1.41,-2.41l-2.01,-1.47l-0.96,-2.37l-1.8,-1.81l-1.03,-1.58l-1.13,-0.54l1.58,-2.13l0.02,-1.04l-0.74,-0.71l-1.27,-0.47l-0.44,-2.66l-1.57,-1.18l-0.44,-0.71l0.9,-6.53l-0.83,-1.82l0.85,-0.91l0.37,-1.65l2.2,-2.96l1.13,-0.75l0.01,-2.04l-1.7,-2.65l-0.2,-2.56l-1.17,-2.38l-1.23,-0.58l0.22,-1.72l1.68,0.03l1.59,0.5l11.43,0.41l2.25,-0.53l0.79,-1.12l1.52,-0.47l6.94,1.18l0.99,-0.47l0.45,-1.59l0.6,-0.18l1.19,1.65l2.74,0.45l2.59,-1.05l0.91,-0.98l0.5,-1.22l1.34,-0.35l2.44,0.72l4.99,0.65l1.08,-0.25l1.85,-1.13l2.29,2.39l0.63,-0.19l0.4,-1.11l1.29,-0.72l1.3,-0.01l1.62,0.63l2.95,-1.89Z\",\n            name: \"Ja\\xe9n\"\n          },\n          \"ES-H\": {\n            path: \"M425.83,295.82l0.68,-1.67l1.61,-1.7l1.07,-4.23l0.64,-0.86l3.63,-2.8l1.2,-1.91l1.58,-4.67l-0.14,-1.23l1.67,-0.53l1.37,0.23l1.27,-0.43l0.82,-0.78l0.59,-1.16l2.66,0.88l1.2,-0.09l0.34,-0.29l3.3,-8.34l5.09,1.58l-0.74,2.12l0.64,0.87l2.32,0.75l2.88,-0.11l2.2,0.38l1.16,1.23l0.24,1.24l0.59,0.49l3.55,0.34l1.66,-1.74l0.65,-0.14l1.85,1.08l0.84,1.54l6.12,2.19l0.56,0.5l0.61,1.31l1.48,0.15l-0.68,2.37l0.76,1.97l-0.44,0.25l-1.58,-0.4l-0.94,0.36l-0.56,0.96l-0.05,2.1l-0.56,-0.12l-0.36,-1.08l-0.67,-0.43l-1.9,-0.02l-5.61,1.45l-0.94,0.58l-1.34,2.13l-0.99,0.93l-0.23,1.41l0.23,0.41l1.02,0.46l2.59,-0.04l1.58,0.72l-0.15,1.35l1.0,1.29l0.79,2.33l1.59,2.61l-0.04,0.42l-1.72,0.72l-0.21,0.65l0.2,1.49l-0.85,1.18l0.2,0.78l1.44,1.53l-0.63,2.37l0.43,2.75l-0.39,1.45l0.04,1.39l-0.87,1.3l-0.27,1.15l1.06,3.54l-0.9,2.21l0.11,0.45l1.24,1.06l-0.34,1.14l0.14,2.86l-0.98,0.01l-0.97,-1.17l-1.3,-3.05l-0.96,-1.52l-1.2,-1.15l-9.81,-6.52l-2.7,-1.05l-1.61,-1.23l-1.57,-0.71l-0.61,-0.88l-0.22,-0.99l2.07,-2.73l0.46,-0.82l-0.11,-0.52l-0.53,0.04l-2.97,2.71l-1.14,0.0l-0.4,0.4l1.31,2.48l-3.42,-1.54l-2.92,-0.88l-1.32,0.45l-0.23,0.4l-7.65,0.18l-2.08,0.99l-1.03,-0.46l-0.72,-2.75l0.24,-0.84l-0.68,-5.11l-0.67,-1.46l-0.3,-2.73l-0.35,-0.98l-1.53,-1.55l-0.52,-1.31Z\",\n            name: \"Huelva\"\n          },\n          \"ES-CU\": {\n            path: \"M603.53,174.95l0.66,-0.42l1.7,0.53l0.52,-0.43l-0.19,-1.57l0.44,-0.39l1.89,1.7l1.37,0.58l0.68,-0.06l0.61,-0.41l0.9,-1.43l1.59,-0.27l0.5,-0.37l0.73,-2.88l-0.56,-2.9l0.28,-3.56l1.1,-0.5l1.7,1.03l0.49,-0.06l1.68,-1.65l1.96,-0.88l1.83,0.22l2.45,1.31l0.5,-0.01l0.46,-0.47l0.06,-1.04l-1.32,-1.34l0.25,-1.19l-0.67,-1.06l-0.02,-0.59l1.25,1.15l0.64,0.19l2.32,-1.05l1.49,0.27l0.64,-0.94l-1.14,-2.0l0.36,-0.92l0.97,0.42l1.41,1.25l0.87,0.11l1.27,-1.23l0.19,-2.18l2.58,1.02l0.82,0.0l1.25,-0.56l0.65,-1.14l2.24,0.83l2.13,1.93l1.63,0.64l0.75,-0.0l1.01,-0.52l0.62,0.18l1.46,2.7l1.39,4.89l3.86,2.56l1.6,1.95l0.26,2.33l1.4,-0.14l0.9,0.43l4.81,4.06l3.88,0.12l-0.47,2.93l1.53,1.16l1.5,4.03l0.88,0.45l4.12,0.77l3.61,-0.58l0.47,1.27l-1.83,0.87l-0.5,0.7l0.36,1.18l-0.24,2.45l-0.87,3.04l-1.69,2.57l-0.06,2.55l-0.97,0.56l-2.02,-0.59l-1.36,0.22l-1.69,1.43l-1.69,2.9l-1.44,1.33l-0.28,0.81l0.13,2.42l-0.69,2.17l0.49,1.25l-9.12,4.53l-1.25,1.84l-2.69,-0.23l-1.84,-0.87l-3.89,0.49l-1.28,-1.69l0.22,-0.44l-0.31,-0.58l-2.79,-0.35l-0.42,0.54l1.42,3.71l-4.35,-0.53l-4.45,2.35l-1.11,-2.3l-0.44,-0.22l-1.41,0.45l-0.76,1.65l-5.08,-4.74l-0.55,-0.0l-0.62,0.57l-1.32,0.03l-2.29,-0.57l-1.64,0.82l-2.85,0.16l-1.76,-3.5l-0.66,-0.08l-1.56,1.87l-1.69,0.16l-0.22,-0.29l0.83,-0.86l0.02,-0.53l-1.47,-1.83l-0.9,-1.8l0.23,-5.96l0.57,-2.26l-3.58,-3.68l-0.6,-1.91l-1.04,-1.17l-0.82,-2.43l-1.47,-1.49l-0.9,-0.37l0.99,-2.37l0.01,-2.52l-0.42,-0.4l-1.55,0.07l-0.95,-2.58l0.14,-0.45l2.6,-0.31l1.23,-1.02l0.29,-1.07l-0.92,-1.93Z\",\n            name: \"Cuenca\"\n          },\n          \"ES-T\": {\n            path: \"M733.72,146.97l2.2,-1.2l1.83,-2.47l-0.82,-3.4l0.4,-1.42l1.02,-1.85l0.17,-1.1l-0.79,-2.12l-1.75,-1.07l-0.84,-2.38l0.12,-0.86l3.31,-1.75l0.83,-2.34l1.84,-1.19l0.97,-2.05l1.62,0.11l0.43,-0.37l0.32,-2.35l0.56,0.1l1.1,1.73l1.15,0.27l0.7,-0.32l0.89,-1.32l1.3,0.95l1.16,0.23l4.63,-0.94l0.93,-0.61l1.73,-0.0l1.21,-1.29l1.68,0.77l3.29,-0.6l0.66,-0.59l0.74,-1.54l1.26,-0.35l1.06,-1.09l0.76,-1.4l0.03,-1.13l2.33,0.43l1.7,-0.72l0.55,-2.93l0.74,-1.04l6.62,0.28l0.97,-0.46l1.18,0.01l-1.41,1.91l0.23,1.1l3.08,1.48l-0.37,2.39l0.7,1.07l2.01,1.04l0.81,0.8l0.24,1.49l0.8,1.58l1.12,1.14l-1.52,1.07l-0.13,0.77l0.6,0.62l1.53,0.24l-0.07,0.79l-3.17,0.22l-10.02,3.38l-2.79,0.55l-1.7,2.14l-1.14,-0.56l-1.95,0.03l-1.76,0.31l-2.73,1.27l-4.52,4.04l-2.21,2.65l-4.32,3.99l-0.85,1.49l0.16,0.55l2.26,0.99l0.93,-0.14l0.24,-0.52l2.39,2.2l1.1,0.17l-0.03,0.58l-0.81,1.27l-2.59,0.72l-1.6,1.55l-0.15,-0.35l-2.11,-0.03l-3.47,1.03l-1.57,1.23l-1.45,2.7l-2.58,-1.07l-0.41,-1.06l-0.87,-0.73l-4.96,-1.93l-0.5,-0.79l0.33,-1.62l-1.84,-0.99l-0.87,-1.2l-1.9,-0.22ZM752.81,155.14l-1.44,0.27l-0.42,-0.61l1.12,-0.13l0.73,0.47Z\",\n            name: \"Tarragona\"\n          },\n          \"ES-C\": {\n            path: \"M355.87,43.07l-0.53,-0.9l1.62,-4.24l-0.87,-1.09l-0.19,-0.75l0.75,-0.22l0.51,-1.31l0.97,-0.84l0.81,0.31l0.73,-0.16l1.51,-1.46l1.18,-0.25l0.36,-0.4l0.0,-0.36l-0.56,-0.37l-1.44,0.44l-0.75,-0.44l-1.4,0.51l-0.16,-0.36l1.64,-1.4l1.08,-0.52l1.49,0.55l1.47,-0.14l1.65,-0.91l0.7,-1.25l0.77,0.49l2.34,-0.48l0.84,-0.93l-1.4,-0.4l-0.91,-1.18l5.28,-2.54l1.68,1.35l3.97,0.93l3.87,-1.46l1.54,0.48l2.21,-0.96l0.79,-1.1l1.04,-0.35l0.59,-0.6l1.72,-0.41l0.56,0.95l0.89,0.7l0.54,-0.04l0.74,-1.14l0.09,-1.47l2.07,0.86l0.57,1.35l1.97,2.25l0.71,-1.19l-0.29,-2.89l1.18,-1.0l-0.05,-0.71l-0.9,-0.37l-2.63,-0.16l-0.98,-0.91l4.33,-0.59l0.7,-0.74l-0.02,-0.63l-0.52,-0.36l-2.65,0.6l-0.58,-0.53l-1.53,0.88l-1.08,0.04l0.32,-1.55l0.5,-0.11l0.52,-0.66l-0.75,-1.47l1.85,0.05l1.15,-0.54l5.42,-3.67l0.69,0.58l1.1,-0.18l0.24,-0.46l-0.26,-0.19l0.1,-0.71l-0.7,-0.72l0.43,-1.18l3.06,-0.41l1.2,-0.64l1.69,-1.65l0.71,0.1l0.76,1.51l-0.64,0.59l-0.22,1.06l-0.9,0.3l-0.27,0.71l0.38,0.4l2.01,0.1l0.67,-0.48l0.05,-0.51l-0.5,-0.72l1.68,0.14l-0.11,-0.86l0.35,-0.34l1.41,-0.88l2.51,-0.92l1.08,-1.25l-1.0,1.62l-0.55,3.44l0.61,1.03l-1.15,1.24l-0.14,1.95l-1.25,1.51l0.03,0.83l0.46,0.75l-1.32,3.45l-1.14,0.72l-0.58,1.32l-1.97,-0.13l-0.46,0.36l-0.28,3.14l-1.9,2.42l0.34,1.79l-1.31,3.38l1.43,4.64l-0.39,1.96l1.14,3.17l-0.01,1.14l-0.19,1.11l-0.88,1.49l-1.52,0.94l-1.02,1.66l-1.69,0.6l-5.15,-0.86l-0.89,0.39l-0.57,0.69l-1.63,-0.28l-1.46,0.75l-0.8,-1.1l-0.91,-0.07l-0.62,0.79l0.25,1.67l-0.21,0.55l-2.05,-0.18l-1.14,1.52l-0.83,0.53l-0.81,0.04l-1.38,-0.62l-3.03,0.49l-0.9,0.52l-0.38,0.79l-1.48,-0.31l-2.84,0.92l-1.09,1.12l-0.62,1.42l-0.91,0.6l-0.52,-0.18l-1.43,-1.74l-0.58,0.11l-0.66,1.15l0.17,1.11l-0.61,0.78l-0.28,0.04l0.0,-0.65l-0.44,-0.08l-1.94,1.2l0.19,0.88l-1.67,0.6l-0.4,1.2l-0.91,0.73l-0.48,-1.81l-1.46,-0.93l0.16,-0.89l1.02,-1.86l0.38,-2.3l0.81,-1.1l1.68,-0.84l1.63,-1.77l1.09,-0.32l0.6,-1.22l-0.09,-0.96l-1.05,-0.71l-0.57,0.3l-0.15,0.99l-0.48,0.52l-0.78,0.31l-3.89,0.01l-0.32,0.46l0.1,0.6l-0.72,0.69l-0.87,0.06l-0.37,-0.29l-0.58,-1.63l0.85,-0.64l0.28,-0.94l-0.46,-0.7l-1.15,-0.56l-0.25,-0.96l0.53,-0.86l-0.15,-1.12l-1.28,-0.42l-0.57,-0.82l-0.68,-0.34l-0.55,0.37l0.01,0.37l-0.69,-0.32l-0.77,0.35l-1.06,1.61ZM358.49,41.69l0.05,0.12l-0.02,0.0l-0.03,-0.12Z\",\n            name: \"La Coru\\xf1a\"\n          },\n          \"ES-AV\": {\n            path: \"M506.36,154.87l2.37,-0.19l1.58,-0.71l1.23,-1.13l0.86,-2.46l4.65,-3.04l1.12,-1.58l1.57,-1.06l0.78,-1.35l-0.02,-2.28l1.93,-2.09l-0.48,-2.04l1.14,-1.56l-0.32,-2.24l-0.68,-0.65l-0.99,-0.33l0.05,-2.12l0.75,-1.38l0.56,-0.34l1.95,0.09l2.23,-1.0l5.57,2.98l1.2,-0.39l1.63,-1.46l3.02,-0.74l-0.36,2.73l0.68,1.19l2.23,1.82l1.62,2.9l1.44,0.87l0.7,3.26l-0.56,2.16l0.72,0.62l1.67,-0.36l0.57,0.24l0.45,1.84l1.22,1.52l0.99,5.53l0.48,0.32l3.03,-0.64l0.92,-0.52l2.44,-0.17l0.33,-0.57l-0.54,-1.11l0.19,-0.09l3.38,0.39l-0.31,2.43l-0.31,0.35l-2.11,0.59l-0.66,-0.26l-0.54,-0.8l-0.88,0.1l-0.25,0.48l0.09,2.16l-1.24,1.5l0.14,3.54l-0.52,1.63l0.16,0.76l-1.6,0.27l-1.15,-0.22l-0.86,0.4l-0.61,0.74l-0.38,1.89l-0.96,1.22l-0.9,0.12l-1.19,-1.04l-0.74,0.34l0.14,2.24l-1.5,3.5l-1.94,0.61l-1.6,-0.38l-0.41,-0.57l-0.39,-2.28l-0.52,-0.45l-4.03,0.47l-0.61,0.5l-0.73,1.89l-3.03,2.04l-0.82,1.64l-1.04,0.72l-1.64,0.27l-0.45,-1.56l-1.06,-0.25l-1.56,0.56l-2.88,2.31l-0.86,0.23l-0.79,-0.02l-1.68,-0.8l-3.72,-0.42l-1.17,-2.03l-0.09,-2.3l0.56,-1.39l-0.3,-0.75l-1.04,-0.08l-2.1,0.55l-2.3,1.88l-2.19,0.26l-2.36,-0.95l-2.2,-2.19l-2.38,-1.21l1.83,-2.73l0.03,-0.85l-0.72,-1.6l0.12,-0.54l2.69,-1.95l0.91,-0.24l0.37,1.08l0.96,1.02l0.67,0.45l0.81,0.02l0.7,-0.56l-0.06,-1.23l1.06,-0.15l0.74,-0.59l1.26,-3.85l-0.38,-0.51l-2.66,-0.02l-0.11,-0.82Z\",\n            name: \"\\xc1vila\"\n          },\n          \"ES-A\": {\n            path: \"M688.26,275.31l-2.17,-3.18l-0.45,-2.0l0.35,-1.19l1.51,-2.35l0.67,-3.75l-1.15,-2.71l-0.82,-0.53l-2.4,-0.62l-0.22,-2.73l0.29,-1.04l2.02,-1.86l0.39,-0.85l0.46,-4.4l-0.59,-2.71l2.96,-0.35l1.71,-1.36l-1.61,-2.36l-0.33,-1.62l0.41,-0.19l0.92,0.58l1.56,-0.18l1.97,1.53l3.49,-0.53l3.03,1.57l0.74,0.75l1.11,0.39l4.33,-2.29l0.13,-0.6l-0.54,-0.67l-0.85,-0.4l-1.11,0.24l-0.68,-1.06l6.54,-1.03l4.22,-2.85l3.23,1.26l7.81,-1.34l0.86,0.58l4.78,0.91l1.62,0.83l0.85,0.87l-0.08,0.8l2.2,1.31l0.02,0.8l-2.09,0.58l-1.19,1.67l-1.04,0.19l-1.5,1.06l-0.52,1.16l-3.27,0.48l-1.25,0.65l-0.63,1.08l0.04,1.27l-0.68,0.97l-3.98,0.56l-6.18,2.7l-2.75,2.74l-0.49,0.84l-0.17,1.27l-1.71,0.22l-0.78,1.05l-1.08,-0.06l-0.41,0.32l-0.36,1.98l0.57,4.07l-0.76,0.42l-2.4,0.13l-1.55,1.46l-0.89,2.26l-0.38,5.81l-2.13,1.48l-2.11,4.98l-0.54,0.04l-1.97,-1.04l-1.97,-1.83l-1.08,-1.14l-1.94,-3.04Z\",\n            name: \"Alicante\"\n          },\n          \"ES-CR\": {\n            path: \"M525.98,241.75l0.9,-0.1l0.77,-0.74l1.42,-4.3l0.75,-1.33l1.02,-0.68l2.03,-0.08l0.65,-2.09l-0.5,-1.2l-2.96,-0.86l-0.34,-1.51l-0.54,-0.53l-0.35,-1.32l0.51,-0.07l2.2,0.89l2.02,-0.93l0.07,-0.99l-1.25,-0.99l-0.09,-0.89l0.73,-2.56l1.44,-1.43l2.92,0.1l2.86,1.07l0.36,-0.61l-2.27,-2.69l-1.6,-3.66l1.26,-0.65l0.54,-0.64l1.2,-2.7l0.12,-1.03l-0.39,-1.0l2.44,-0.17l0.96,-1.44l1.42,-0.91l0.49,-1.78l0.42,-0.28l0.61,-0.01l0.55,2.02l1.16,0.9l1.21,-0.18l0.82,-0.87l7.3,1.43l2.43,-1.2l1.21,-3.29l1.21,0.47l2.93,-0.49l-0.03,1.02l-1.41,0.95l-0.09,0.82l0.68,1.43l-0.53,0.69l-1.32,-0.21l-0.46,0.33l-1.06,4.43l0.34,0.56l1.5,0.84l1.54,-1.05l3.54,0.54l0.18,2.21l0.27,0.35l2.51,0.83l1.22,0.89l1.7,-0.01l1.05,-1.12l1.02,-0.36l1.65,1.08l0.77,0.05l1.87,-1.2l3.51,-0.57l1.47,0.33l3.17,-2.06l0.4,-1.44l2.6,-1.4l2.14,0.02l0.79,-0.29l1.3,-2.81l4.22,-0.16l0.4,-0.72l1.17,-0.25l3.11,2.09l1.78,-0.31l2.04,0.5l1.49,-1.0l2.08,3.19l-0.83,0.86l-0.03,0.52l0.56,0.74l2.43,-0.04l1.54,-1.67l2.31,5.25l-4.69,6.11l-0.03,0.44l1.28,2.28l0.08,1.17l-2.85,4.99l-0.14,0.81l0.73,1.33l1.07,0.33l1.77,-0.1l1.25,1.07l0.57,3.27l0.91,1.14l1.88,0.57l1.13,1.48l0.18,1.35l-1.21,3.08l-1.96,0.54l-0.98,0.97l-0.63,1.57l0.65,1.4l-0.22,0.38l-1.29,1.12l-3.38,2.08l-1.22,-0.62l-1.63,0.01l-1.67,0.92l-0.42,0.96l-1.64,-1.97l-0.59,-0.3l-3.04,1.38l-1.36,-0.37l-2.75,-0.13l-3.4,-0.87l-1.68,0.46l-1.43,2.22l-2.25,0.93l-2.28,-0.37l-0.63,-1.31l-0.95,-0.42l-1.1,0.37l-0.49,1.59l-0.56,0.29l-6.84,-1.19l-1.96,0.62l-0.74,1.07l-1.91,0.43l-11.26,-0.41l-1.54,-0.49l-1.74,-0.07l-0.93,0.62l-0.17,1.84l-0.56,-0.01l-6.18,-2.29l-3.32,-3.35l-2.67,-1.1l-0.93,-1.26l-2.77,-1.63l-1.06,-1.0l-4.81,-1.61l-0.53,-0.73l-0.15,-1.76l-0.35,-0.62l-0.58,-0.26l-2.44,0.07l-2.85,-1.58ZM532.33,210.85l-0.96,0.48l-2.07,-0.95l1.71,-5.49l1.07,-1.55l3.27,1.6l1.12,1.58l-0.9,1.91l0.38,0.9l-0.3,0.33l-3.34,1.17Z\",\n            name: \"Ciudad Real\"\n          },\n          \"ES-CO\": {\n            path: \"M508.85,252.59l1.27,-0.79l0.78,-1.56l1.37,-1.48l2.17,-0.07l0.91,-1.35l1.24,-0.98l3.08,-1.55l0.61,-1.41l-0.16,-0.78l3.28,-0.15l1.62,-0.4l2.17,1.5l1.42,0.54l2.73,0.05l0.25,2.01l0.82,1.12l1.49,0.74l1.37,0.13l2.02,0.78l0.95,0.94l2.77,1.61l0.95,1.28l2.71,1.13l3.33,3.36l2.25,1.03l6.38,1.83l0.98,2.07l0.23,2.61l1.64,2.48l-0.01,1.64l-0.91,0.45l-2.29,3.08l-0.42,1.75l-0.88,0.85l-0.09,0.48l0.88,1.75l-0.88,6.69l0.69,1.14l1.42,1.02l0.09,1.77l0.37,0.93l1.89,0.93l-0.19,0.86l-1.29,1.43l-0.05,1.05l1.25,0.68l1.03,1.57l1.77,1.77l0.94,2.35l2.01,1.47l1.06,1.81l-2.49,-0.01l-3.09,2.49l-2.65,0.03l-0.8,1.16l-0.11,1.49l-0.99,1.57l0.22,1.48l-1.95,1.48l-0.32,-0.46l-1.6,-0.51l-0.41,-2.62l-0.4,-0.34l-2.77,0.15l-1.38,1.72l-2.15,1.16l-1.94,-0.4l-0.97,-1.6l-1.26,-0.03l-0.64,-1.72l-0.25,-1.86l-0.82,-0.95l-1.14,-0.28l-1.99,1.43l-0.54,-0.05l-1.36,-1.14l-1.07,-2.34l-1.38,-1.29l-0.14,-1.13l-0.83,-1.49l-1.3,-1.11l0.55,-2.75l-0.17,-1.01l-0.95,-0.87l0.03,-1.19l-0.51,-1.26l-1.5,-1.62l-1.11,-0.37l-1.29,0.11l-2.1,0.8l-0.99,1.17l-2.51,-0.15l-3.38,2.05l-2.59,0.64l-1.21,-0.07l-0.66,-0.7l-0.44,-1.68l0.7,-0.8l2.98,-0.01l0.4,-0.39l0.05,-3.49l-1.31,-1.09l-0.29,-1.61l-0.51,-0.73l-1.75,-1.14l-0.66,-3.35l-2.28,-1.94l-0.78,-2.92l-3.3,-3.25l0.02,-0.54l1.83,-1.47l0.73,-2.81l-0.25,-2.36l-1.0,-2.18l-0.75,-0.84l0.28,-1.55l-0.64,-1.17l0.23,-1.12l3.12,-1.7l1.55,-1.67Z\",\n            name: \"C\\xf3rdoba\"\n          },\n          \"ES-VA\": {\n            path: \"M523.7,73.91l1.09,0.45l0.52,-0.34l0.09,-0.95l0.61,0.16l-0.58,2.45l0.17,2.24l-0.47,1.4l0.36,0.53l3.63,0.17l0.18,2.4l-0.19,0.79l-0.73,0.94l0.09,1.59l-0.8,0.61l-1.63,3.27l0.74,1.59l0.56,0.12l1.21,-0.8l1.06,0.77l2.08,-0.7l1.04,1.33l1.94,3.83l0.47,0.2l1.39,-0.49l1.99,-2.55l1.53,-0.77l0.55,0.34l0.4,1.2l2.42,2.27l2.39,-0.24l0.68,-0.4l0.17,2.41l2.1,0.85l1.87,-0.83l3.62,0.41l2.76,-1.54l3.49,0.28l1.0,-0.34l1.07,1.48l1.8,0.23l-0.36,1.17l0.95,1.85l0.02,3.22l1.57,1.33l0.4,0.99l-0.4,1.88l-0.78,1.05l-9.35,2.9l-2.81,0.05l-1.67,0.58l-1.83,-0.1l-3.07,1.53l-1.04,-0.03l-0.39,0.53l0.73,2.12l0.05,1.18l0.93,1.54l-1.92,-1.01l-1.17,0.67l-1.33,-0.73l-0.57,0.21l-0.4,1.08l0.89,1.08l-2.54,2.42l-0.11,1.16l-1.85,1.94l-3.59,0.88l-2.41,1.8l-4.5,-2.66l-1.07,-0.31l-1.11,0.15l-1.52,0.87l-1.38,-0.22l-1.12,0.47l-1.91,-1.49l-1.84,-0.21l-1.21,-1.24l-0.77,0.05l-0.99,0.61l-1.15,0.15l-0.22,-0.29l1.53,-1.72l0.16,-1.16l-0.33,-2.6l-1.01,-1.78l0.27,-3.11l-0.73,-1.19l0.03,-1.36l0.62,-1.04l2.52,-0.67l1.14,-1.08l-0.05,-0.62l-2.34,-1.59l0.48,-1.54l-0.39,-0.57l-1.09,-0.4l-0.46,-2.55l-1.7,-2.38l-0.71,-1.61l4.15,-2.33l0.16,-0.53l-1.09,-2.63l0.44,-1.78l-0.29,-2.07l0.85,-1.03l-0.06,-0.57l-3.72,-2.91l-0.4,-1.78l0.41,-2.51l-0.4,-2.85l0.17,-0.71l0.51,-0.31l1.52,0.96l2.3,-0.67l0.45,-0.35l1.08,-2.13l1.35,0.35l0.98,-0.28l2.36,-1.85l0.41,-0.09l1.04,1.5ZM514.07,74.48l-0.74,0.13l-0.28,-0.94l0.89,-0.46l0.13,1.27ZM509.28,85.52l-0.51,2.33l-1.03,-0.46l0.32,-1.06l-1.59,-3.06l2.81,2.25Z\",\n            name: \"Valladolid\"\n          },\n          \"ES-TF\": {\n            path: \"M81.48,697.96l-0.24,0.78l-4.02,2.3l-0.8,1.29l-1.87,1.83l-2.46,1.71l-0.45,0.99l0.29,2.07l-0.85,1.05l-1.53,3.24l-0.39,2.74l-3.63,3.83l-0.87,1.3l-1.32,-0.21l-4.15,1.33l-0.29,-1.1l-0.73,-0.7l-0.31,-1.5l-2.09,-2.12l-0.61,-1.64l-1.59,-1.79l-0.45,-2.39l-1.02,-1.8l-1.56,-1.82l2.64,-1.29l1.61,0.9l1.08,0.14l4.26,-1.48l3.19,-0.03l0.93,-0.63l2.38,-0.45l3.49,-2.9l0.52,-1.27l1.64,-0.92l1.64,-0.46l0.36,-0.66l4.28,0.23l2.43,-0.81l0.5,0.26ZM38.3,721.01l-0.95,0.3l-0.84,-0.2l-1.96,-1.17l-1.21,-1.74l0.16,-2.9l1.01,-1.36l1.78,-0.4l1.71,0.49l3.71,2.46l0.59,1.62l-0.47,0.64l-2.73,2.06l-0.82,0.2ZM11.98,686.49l0.95,0.22l1.7,-0.56l0.59,0.23l0.82,0.8l-0.05,0.85l0.68,1.84l0.75,0.46l0.02,0.4l-1.71,2.25l0.71,2.6l-0.52,1.8l-0.93,1.23l-1.7,3.57l-0.88,-0.5l-0.51,-2.74l-3.35,-5.64l-0.52,-2.42l-1.0,-0.94l0.17,-1.05l2.28,-2.46l0.77,-0.51l1.73,0.57ZM10.92,731.11l-1.62,2.33l-0.13,0.99l-1.48,1.52l-0.41,1.65l-0.98,-0.4l-1.49,-1.62l-3.09,-0.47l-1.08,-0.75l-0.2,-1.1l0.69,-0.31l3.49,0.46l2.2,-1.87l0.51,-1.04l2.07,-1.14l0.58,0.08l0.98,0.77l-0.05,0.9Z\",\n            name: \"Santa Cruz de Tenerife\"\n          },\n          \"ES-Z\": {\n            path: \"M653.06,87.28l2.64,0.38l1.35,1.2l1.26,0.53l0.89,0.06l1.06,-0.38l0.58,0.18l0.9,0.45l1.02,1.06l1.43,0.69l1.7,-0.07l1.06,-0.44l2.7,0.64l0.61,-0.19l1.28,-1.6l0.92,-1.98l1.85,-2.69l-0.04,-1.44l-1.49,-0.65l-1.55,-2.16l-0.14,-2.63l-0.79,-1.92l1.25,-3.72l2.15,-2.84l-0.71,-1.27l0.27,-1.43l2.76,-3.5l-0.42,-1.57l0.2,-0.58l0.61,-0.8l1.11,0.18l1.08,-0.5l0.45,-0.9l1.64,-1.28l-0.1,-0.8l0.37,-0.98l4.02,-0.44l0.82,-2.23l2.36,-0.68l1.7,-1.27l-0.04,1.15l1.15,1.24l-1.33,0.67l-0.45,0.69l0.8,1.95l0.32,5.65l0.32,1.13l-0.5,1.64l0.33,0.54l2.09,1.13l0.24,0.97l-3.43,5.07l-0.02,0.91l0.43,0.52l1.1,0.25l0.59,-0.38l0.76,-1.21l1.34,0.41l0.92,-0.32l1.56,-3.33l-0.35,-2.01l0.63,0.03l0.26,0.45l0.35,3.18l-1.04,2.39l0.39,8.12l-0.98,1.13l-1.35,-1.18l-0.86,0.04l-0.71,0.5l-0.83,2.38l0.54,1.76l3.15,2.03l4.49,0.15l0.48,0.34l1.76,2.7l2.25,1.11l1.0,1.15l0.86,4.0l0.66,1.1l4.38,2.5l1.41,2.51l1.3,0.48l2.15,2.07l0.86,0.23l1.5,-0.91l0.59,0.11l0.6,0.87l0.67,2.08l1.88,2.4l1.32,4.85l0.51,0.28l1.97,-0.48l1.41,1.09l3.48,0.45l0.41,-0.21l0.87,-1.66l1.06,-0.69l0.89,0.47l1.45,-0.43l0.91,-1.12l3.07,0.85l-0.29,0.57l0.12,0.96l1.59,1.04l0.39,1.17l-0.98,2.1l0.28,2.03l-1.73,1.12l-0.79,2.3l-3.23,1.62l-0.41,1.25l0.36,1.26l-1.49,0.2l-1.9,-0.54l-1.87,-0.03l-0.81,0.36l-0.59,0.94l-0.36,-0.13l-1.45,-3.06l-0.89,-0.74l-9.3,-3.88l-1.72,-1.87l-0.52,-0.06l-0.76,0.53l-2.46,-1.32l-1.41,-2.01l-1.14,-0.32l-0.75,-1.52l-2.76,-0.08l-0.69,0.38l-0.23,0.96l1.72,2.9l0.44,1.54l-0.21,0.1l-2.82,-4.21l-0.91,-0.37l-0.66,0.34l-0.25,0.85l0.21,2.71l-0.5,0.34l-0.12,0.53l1.16,1.97l-2.87,3.22l-1.62,-1.81l-1.16,-0.3l-0.73,0.72l-0.99,2.55l-0.5,0.02l-2.34,-1.73l-0.53,0.04l-2.46,2.31l-1.38,-0.68l-0.34,-0.96l-3.59,-2.17l-1.01,0.04l-0.78,1.14l-1.26,0.58l-1.98,-0.68l-1.13,0.01l-0.89,0.49l-0.57,1.09l0.44,1.9l-0.35,0.43l-2.12,-0.02l-1.74,-0.89l-1.58,0.52l-0.83,1.54l-1.03,0.4l-0.45,0.56l0.34,1.8l-0.45,1.02l-1.02,-0.23l-2.5,0.54l-2.42,-0.13l-4.32,-3.68l-1.41,-1.87l-7.25,-4.81l-1.28,-0.26l-3.01,0.86l-1.2,-0.94l-2.13,-0.44l-0.66,-3.94l-0.55,-1.18l0.25,-2.19l1.5,-1.43l0.62,-2.83l2.06,0.3l0.12,1.62l0.77,0.67l3.64,-1.52l-0.13,-2.39l-0.91,-1.66l-0.02,-2.41l-0.53,-2.25l0.64,-0.44l1.69,0.26l2.91,-2.43l1.47,-0.4l1.3,-2.31l0.03,-1.08l-0.85,-0.79l-1.43,-2.37l1.18,-2.56l-1.44,-3.06l-0.23,-2.19l0.4,-1.78ZM684.08,66.17l0.19,-0.78l-1.1,-1.08l-0.18,-0.81l-1.0,-0.26l-0.68,0.54l-0.49,1.06l0.13,0.83l2.05,0.71l1.07,-0.21ZM679.53,67.83l0.67,-0.5l0.39,-0.81l0.03,-0.68l-0.37,-0.5l-1.32,0.42l-0.56,0.62l0.22,1.31l0.93,0.15Z\",\n            name: \"Zaragoza\"\n          },\n          \"ES-MA\": {\n            path: \"M516.44,353.08l-0.61,-1.15l-0.48,-0.19l-1.26,0.41l-0.52,-2.77l-0.84,-1.85l-1.48,-1.54l-1.56,-2.52l-0.78,-0.29l-1.53,0.1l-2.9,1.29l-0.66,-0.01l-0.93,-0.54l-0.05,-0.62l3.58,-1.14l1.12,-0.67l1.46,-1.99l2.44,-0.76l1.12,-0.65l0.76,-0.9l0.79,-2.93l0.75,-0.92l0.22,-1.14l-1.73,-2.57l1.27,-1.5l1.32,-0.32l2.88,2.05l1.46,-0.09l1.33,-0.7l1.03,-1.03l0.81,-1.5l0.12,-1.63l-0.56,-1.52l-1.5,-1.83l8.75,-4.94l0.58,-0.97l-0.15,-0.56l-1.88,-1.16l0.87,-0.18l2.14,0.58l0.98,-1.17l1.67,1.45l1.22,-0.12l2.31,-1.61l0.24,-1.1l-0.6,-1.39l0.31,-0.34l3.82,0.19l0.88,1.55l2.28,0.47l2.62,-1.3l1.43,-1.74l1.92,0.0l0.4,2.52l1.91,0.85l1.49,3.61l0.27,2.93l0.92,1.69l4.59,3.53l10.91,4.39l1.92,-0.07l2.07,2.15l-0.49,1.49l0.09,0.88l-2.04,-0.57l-4.82,1.14l-3.91,-0.95l-1.07,0.26l-1.13,0.77l-4.44,0.59l-7.1,-0.52l-0.82,0.2l-0.75,0.6l-1.88,2.72l-1.67,3.07l-2.33,0.29l-1.34,2.09l-1.29,0.78l-2.75,0.82l-7.27,-0.6l-3.68,2.26l-2.63,0.22l-1.98,1.09l-2.56,0.52l-1.26,1.1l-1.1,1.8l-0.72,2.13Z\",\n            name: \"M\\xe1laga\"\n          },\n          \"ES-AL\": {\n            path: \"M647.09,281.89l-0.59,0.92l-0.44,2.46l0.29,2.49l-0.36,1.45l0.21,2.55l7.04,9.72l0.99,0.45l0.62,-0.59l2.23,0.52l3.35,2.45l-0.16,0.33l-0.84,0.06l-0.37,0.41l-0.79,1.8l-1.14,1.52l-3.44,3.6l-1.71,6.04l-2.05,4.18l0.19,2.06l-1.37,0.25l-2.04,1.45l-0.65,0.8l-0.39,1.8l-1.67,1.54l-0.59,1.59l-1.03,0.38l-0.59,0.98l-1.21,0.62l-1.97,-0.3l-3.17,-3.34l-1.49,-0.85l-1.81,-0.43l-2.9,0.93l-2.01,-0.61l-3.3,0.55l-0.82,0.53l-1.59,3.74l-1.55,1.43l-0.9,0.36l-2.12,-0.05l-0.63,0.25l-2.46,-1.46l-1.2,0.57l-1.34,-1.48l-1.3,-0.79l-0.92,-0.05l-2.09,0.64l-3.46,-0.57l-1.83,0.13l-0.32,-1.29l4.19,-2.45l0.17,-0.48l-0.66,-1.73l-1.01,-0.88l2.85,-2.76l0.35,-0.88l-0.71,-2.53l-0.12,-1.93l0.34,-0.3l1.83,-0.28l1.11,-2.69l1.72,-1.03l1.17,-4.01l1.6,0.02l1.86,1.64l1.95,0.17l1.95,0.78l0.55,-0.4l-0.21,-3.28l0.5,-1.21l0.36,-3.13l5.93,-4.78l5.19,-1.5l0.28,-0.45l-0.64,-3.77l2.02,-0.39l0.32,-0.42l-0.22,-3.4l1.54,-3.02l-0.3,-2.75l0.33,-2.25l2.51,-1.68l1.53,0.82l1.78,-0.1l1.94,0.81l3.66,0.46Z\",\n            name: \"Almer\\xeda\"\n          },\n          \"ES-CE\": {\n            path: \"M511.18,371.29l0.65,0.05l1.58,0.93l0.98,0.13l-1.63,1.38l-0.96,-1.08l-0.62,-1.41Z\",\n            name: \"Ceuta\"\n          },\n          \"ES-PM\": {\n            path: \"M879.05,181.26l0.56,-1.13l2.54,-0.51l1.03,0.34l5.48,-0.29l1.78,-0.79l1.15,1.1l0.15,1.05l0.67,0.16l0.88,-0.85l2.06,1.74l1.1,0.37l0.32,0.41l0.26,0.97l-0.73,0.54l0.86,0.66l0.95,0.05l0.71,1.88l-0.58,0.34l-0.1,2.76l-1.63,0.2l-2.72,-1.21l-6.46,-3.87l-1.42,-0.52l-1.81,-0.05l-2.78,0.51l-1.08,-0.35l0.55,-2.31l-1.2,-0.58l-0.54,-0.62ZM824.06,203.89l-0.68,-0.47l-1.24,0.47l-0.29,-0.73l-0.74,-0.62l0.06,-2.0l4.3,-2.16l2.0,-1.93l2.09,-0.62l1.96,-1.76l0.51,-0.87l0.85,-0.08l2.26,-2.21l1.53,-0.66l2.53,-1.84l1.24,-0.05l3.58,-1.97l5.63,-1.0l3.94,-1.46l0.3,0.35l-1.89,0.73l-0.89,0.8l-0.7,-0.15l-0.4,0.38l-0.09,1.52l0.34,0.42l1.58,0.22l2.15,-0.55l-0.22,0.89l-1.98,0.62l-0.51,0.5l-0.15,1.2l0.6,1.38l1.13,0.98l2.55,0.95l2.96,-0.02l2.38,-1.58l3.19,1.45l0.97,0.11l0.18,1.17l-0.47,0.66l0.18,0.73l-0.47,1.12l-0.35,0.54l-1.24,0.56l-0.53,0.74l0.08,1.42l-3.18,3.13l-1.26,2.26l-0.33,2.16l-0.61,0.17l-0.62,1.85l-1.16,1.13l-3.67,2.08l-2.37,2.04l-1.06,-1.44l-1.11,-0.63l-0.51,-1.47l-1.4,-0.79l-1.98,0.19l-3.39,-0.22l-1.4,-0.52l-0.85,-0.98l-0.4,-2.45l-0.54,-0.49l0.65,-1.51l-0.45,-1.33l-2.65,-1.84l-1.35,-0.32l-3.51,1.59l-0.74,0.77l-0.4,1.18l-0.82,0.78l-0.72,0.08l-0.73,-1.22l0.31,-0.81l-1.07,-1.0l-0.58,0.04l-0.32,0.36ZM845.43,222.3l-0.61,0.82l-0.79,-0.06l-0.48,-1.09l1.9,-1.13l-0.02,1.47ZM779.43,235.19l-1.44,-0.76l-0.9,0.2l-0.33,0.39l-1.19,-0.89l-0.13,-0.61l0.59,-1.78l-0.23,-0.56l2.77,-0.32l0.4,-0.47l-0.34,-1.93l0.02,-0.9l0.29,-0.3l2.01,-1.52l0.71,0.19l0.58,-0.41l0.68,0.11l1.79,-1.07l1.75,-0.13l1.05,-0.64l2.78,0.97l-0.11,0.44l0.69,2.02l-0.95,0.59l-0.61,1.51l-1.45,0.91l-1.22,1.71l-1.76,1.1l-0.85,-0.28l-1.09,0.95l-0.67,2.69l-0.65,0.01l-0.43,-0.86l-0.69,-0.49l-1.08,0.13ZM782.37,242.36l1.04,-0.32l0.6,-0.75l1.8,2.29l1.61,0.78l1.63,-0.52l0.38,0.44l-0.02,0.55l-1.82,0.1l-2.95,-1.42l-2.32,1.88l-0.04,-1.38l0.41,-1.21l-0.31,-0.43Z\",\n            name: \"Baleares\"\n          },\n          \"ES-VI\": {\n            path: \"M597.76,46.37l-1.97,-2.06l1.98,-2.6l2.03,0.03l0.97,1.28l2.42,0.55l2.3,-0.24l2.27,-1.31l0.13,-0.56l-0.3,-0.71l-2.08,-1.11l1.35,-0.22l0.63,-1.17l-0.5,-0.95l-0.93,-0.4l-0.33,-0.88l-0.77,-0.2l-0.74,0.32l-1.05,1.52l-2.67,-0.47l0.55,-1.04l0.27,-2.58l-0.3,-0.59l-0.89,-0.49l0.38,-1.14l0.39,-0.28l1.59,0.87l2.43,-0.46l0.75,-0.5l0.42,-1.54l0.54,-0.37l0.85,0.44l1.25,2.03l-0.71,1.68l-0.06,0.91l0.43,0.7l2.12,1.76l1.89,0.1l2.81,0.98l1.81,-0.29l1.69,0.59l1.19,-0.3l1.23,0.2l0.51,-0.4l0.12,-0.76l-1.03,-1.6l0.92,-0.37l0.98,0.28l1.8,-0.27l0.41,2.01l-2.39,1.37l-0.37,1.19l0.2,0.46l1.94,0.99l0.92,-0.41l1.28,0.52l5.85,0.5l1.69,0.95l1.14,1.37l1.04,0.1l0.46,1.68l-0.1,0.72l-1.28,2.34l-0.2,1.92l-1.25,0.56l-0.42,0.66l0.34,2.31l0.76,0.74l-1.53,0.9l-0.86,0.06l-0.72,-0.83l-1.25,-0.22l-3.62,2.75l0.27,1.27l1.71,0.8l0.76,-0.26l0.68,-0.8l0.3,0.17l0.22,1.06l-0.41,2.82l-2.79,-0.95l-0.34,-0.73l-0.49,-0.21l-0.85,0.44l-0.48,0.77l-1.51,0.34l-0.81,-0.61l-1.26,0.29l-1.95,-1.22l-0.25,-2.43l-2.5,-1.51l-1.26,0.56l-0.42,0.99l-1.11,0.18l0.46,-1.1l-0.14,-0.44l-0.79,-0.11l-0.32,-1.76l-3.1,-2.46l-1.02,-0.43l-0.95,-1.06l-3.92,-2.39l-2.49,0.72l0.04,-0.62l-0.84,-1.02l1.56,-2.67l0.06,-0.77l-0.6,-0.71l-0.88,0.18l-0.93,1.0l-1.55,0.25l-0.81,1.36ZM621.09,49.14l-3.53,-1.01l-3.75,0.06l-0.88,0.48l-1.37,1.69l-0.16,0.78l2.38,2.18l2.54,1.06l4.88,1.34l3.03,0.07l0.86,0.48l1.05,-0.33l0.25,-1.19l-0.55,-1.37l-0.61,-0.1l-1.16,0.71l-1.12,-1.18l1.12,-0.7l0.59,-1.24l-0.02,-0.72l-1.04,-0.32l-1.05,-0.77l-1.46,0.09Z\",\n            name: \"\\xc1lava\"\n          },\n          \"ES-S\": {\n            path: \"M546.44,19.75l0.61,0.53l0.53,-0.0l0.75,-0.66l0.94,-0.16l2.15,0.92l0.86,-0.77l1.83,0.18l4.97,-0.47l1.24,-0.8l2.44,-0.68l2.86,-0.17l0.46,-0.62l1.04,0.61l0.51,-0.08l0.91,-0.54l-0.46,-0.55l1.08,-0.7l2.18,-0.11l2.17,-0.81l1.4,0.39l-2.39,1.45l0.4,1.3l0.91,0.39l1.15,-0.41l0.81,-0.9l0.51,0.52l0.78,-0.01l0.26,-0.54l-0.25,-0.78l0.72,-0.16l0.19,-0.55l1.24,-0.12l1.23,-0.77l2.97,-0.83l0.52,0.03l0.34,0.87l0.58,0.03l1.29,0.92l2.82,0.5l0.08,0.35l-0.29,0.03l-0.92,-0.4l-0.43,0.17l-1.33,1.42l1.82,1.18l0.79,-0.54l0.93,0.31l1.24,-0.31l7.13,1.67l1.18,1.04l0.94,0.32l0.04,1.36l-0.29,0.55l-1.53,0.67l-1.25,-0.32l-3.63,-0.02l-4.37,2.78l-0.73,1.15l0.15,1.9l0.64,1.91l-3.24,-0.17l-5.3,-1.59l-0.81,0.44l-2.34,2.47l-1.75,1.15l-2.1,0.1l-0.81,0.35l-0.3,1.44l-0.37,0.36l-1.6,0.68l-2.38,1.74l-1.31,2.97l-0.08,0.87l0.59,0.98l1.35,0.45l1.97,-0.82l0.88,-1.15l0.79,0.09l0.35,0.71l-1.04,0.59l-1.05,0.06l-0.8,1.4l0.35,1.27l0.63,0.42l0.88,-0.24l0.65,-0.83l0.67,-0.05l0.55,2.56l-2.38,0.39l-1.52,1.2l-1.68,0.46l-0.97,-0.25l-0.06,-2.25l-0.64,-0.42l-0.85,0.54l-1.04,2.07l-1.09,0.24l-0.95,-0.99l-1.96,-0.39l-0.91,-0.75l1.92,-0.83l0.22,-0.68l-0.45,-0.83l-0.74,-0.26l-2.02,0.94l-0.38,-0.18l-0.88,-4.98l-4.7,-1.73l-2.12,-2.56l-2.3,-0.65l-3.69,1.32l-6.56,0.39l-0.43,-1.34l-1.3,-1.54l-2.26,-1.39l-0.28,-1.15l0.14,-2.14l2.06,-0.34l1.14,0.13l0.55,-0.3l0.53,-1.18l0.25,-2.12l2.81,-0.32l1.87,-1.22l0.99,0.17l0.67,0.85l1.15,-0.36l0.53,-1.51l-0.72,-1.97l0.93,-1.96ZM594.81,27.57l0.0,-1.09l0.64,0.83l-0.64,0.26Z\",\n            name: \"Cantabria\"\n          },\n          \"ES-TE\": {\n            path: \"M658.15,167.84l0.2,-1.0l-0.3,-0.93l-1.69,-2.07l-1.47,-1.0l2.29,-2.63l1.74,-1.32l0.1,-2.45l0.73,-1.84l2.95,0.85l1.71,-0.77l0.45,-0.62l-0.06,-1.6l0.68,-1.83l-0.1,-1.58l-0.68,-1.44l0.71,-2.28l-0.1,-1.73l-0.24,-0.58l-1.44,-1.04l-1.04,-1.42l-0.22,-2.98l1.94,0.1l1.28,-0.45l2.07,0.19l0.62,-0.22l0.72,-1.15l-0.35,-2.02l1.34,-0.75l1.02,-1.66l1.04,-0.0l1.34,0.78l2.36,0.02l0.7,-0.39l0.33,-0.94l-0.49,-1.51l0.59,-0.99l1.03,-0.11l2.32,0.71l1.6,-0.71l0.72,-1.11l0.41,0.04l3.21,1.97l0.56,1.13l1.68,0.73l0.91,-0.29l1.94,-2.02l2.24,1.63l1.11,-0.03l0.63,-0.66l1.03,-2.57l2.23,2.21l0.6,0.0l3.36,-3.77l0.05,-0.47l-1.12,-1.9l0.55,-0.62l-0.17,-3.18l0.44,0.09l2.71,4.09l1.01,0.39l0.56,-0.64l0.06,-0.95l-2.16,-4.01l0.27,-0.36l2.1,-0.06l0.72,1.45l1.15,0.33l1.5,2.08l2.74,1.47l1.09,-0.5l1.69,1.77l9.25,3.84l0.65,0.5l1.7,3.33l1.12,0.21l1.14,-1.27l1.71,0.03l1.96,0.54l1.75,-0.22l0.48,1.19l1.76,1.09l0.54,1.52l-0.14,0.92l-0.98,1.73l-0.47,1.7l0.87,3.16l-1.6,2.14l-2.42,1.38l-0.03,0.64l-2.79,0.4l-2.05,1.07l-0.2,-0.87l-0.54,-0.53l-3.66,-0.22l-3.08,-2.08l-1.44,-0.25l-0.72,0.3l-1.2,1.53l-0.35,2.28l-2.64,1.41l-1.63,-0.5l-1.47,0.76l-0.12,1.96l0.31,0.66l1.78,0.67l1.23,-0.17l-0.13,4.18l1.01,1.56l-1.9,0.75l-0.79,1.04l0.27,0.91l1.61,1.48l0.27,0.76l-1.7,1.1l-1.04,1.34l-1.28,0.98l-0.18,1.67l-0.41,0.42l-1.37,0.59l-2.04,0.33l-1.53,-0.47l-0.9,0.37l-0.21,1.89l-0.69,2.12l-1.91,2.23l0.17,1.47l-2.54,1.18l-2.79,0.22l-1.01,1.9l-2.33,1.36l-0.36,1.53l0.27,1.35l1.49,1.7l-1.81,0.85l-1.06,0.12l-0.65,-0.38l-0.37,-1.86l0.26,-1.39l-0.94,-1.22l-3.18,-1.12l-2.26,0.02l-2.9,0.66l-0.38,-0.23l-0.48,-1.29l2.85,-1.27l0.48,-0.79l-0.18,-0.94l-3.02,-2.29l-3.32,-0.6l-2.5,-3.76l-0.59,-0.02l-0.65,0.49l-0.37,0.89l0.03,1.17l-1.35,0.38l-2.75,-0.36l0.24,-1.45l-0.38,-0.76l-1.66,0.01l-1.22,-0.34l-1.11,0.2l-4.74,-4.02l-1.13,-0.52l-1.05,0.09Z\",\n            name: \"Teruel\"\n          },\n          \"ES-CC\": {\n            path: \"M424.96,197.51l7.98,0.35l2.0,-0.54l2.2,-0.12l0.9,0.46l1.25,0.05l6.63,-0.92l0.68,-1.22l-0.11,-1.18l0.79,-1.62l-0.26,-1.4l0.39,-0.59l1.42,-0.67l1.07,-1.49l0.12,-2.65l0.62,-0.68l0.33,-2.13l0.81,-1.8l-3.13,-4.52l-0.98,-0.56l-1.43,-0.24l-0.34,-0.45l-0.54,-2.11l0.88,-1.78l2.33,-1.26l2.4,-0.15l0.94,-0.76l1.63,1.24l2.68,0.08l1.45,-0.64l1.55,0.38l1.29,-0.56l3.4,-0.7l0.95,-1.06l-0.17,-1.32l1.51,-1.24l2.84,-1.07l1.22,-1.03l1.66,-0.4l1.56,-1.71l2.07,-0.65l2.07,-1.12l3.93,2.13l0.58,0.89l1.27,0.5l-0.86,1.55l-0.12,0.56l0.28,0.32l2.76,1.2l1.46,1.19l2.52,1.04l1.28,-0.22l1.08,-1.72l2.65,-0.94l0.48,0.61l-0.4,1.32l0.45,0.66l1.07,0.17l1.42,-0.43l1.46,0.53l2.29,1.69l1.03,1.23l2.62,1.06l2.42,-0.2l2.53,-1.98l2.35,-0.52l-0.53,1.33l0.09,2.55l1.14,2.11l-0.91,0.45l-0.36,0.72l-0.37,4.66l-0.68,3.57l0.21,1.97l0.52,0.26l2.33,-0.3l1.01,0.95l-0.73,1.45l-0.37,2.62l0.68,1.07l2.36,0.19l1.88,-1.85l1.12,-0.08l0.27,0.77l-0.21,1.25l0.95,1.47l-0.64,2.82l-1.62,2.39l0.07,0.83l4.76,4.56l1.61,0.72l3.34,3.69l-1.29,0.67l-2.3,0.31l-1.04,-1.24l-1.07,-0.28l-0.7,0.73l-0.3,2.07l-2.03,1.25l-2.58,-0.01l-2.92,-0.83l-0.95,0.22l-0.62,1.27l-0.28,1.9l0.33,1.53l-1.84,2.5l-1.59,0.5l-2.89,-2.33l-1.16,-0.24l-0.99,0.24l-1.95,1.0l-0.05,0.68l1.23,1.7l-0.41,1.09l-0.72,0.55l-1.37,0.02l-1.52,0.78l-2.91,-2.36l-1.87,-0.45l-0.43,0.18l-0.68,1.12l-1.06,0.68l-2.31,0.8l-0.52,-0.9l-0.65,-0.06l-1.67,1.91l-0.41,0.06l-0.4,-2.65l-0.63,-0.27l-2.73,2.01l-1.85,2.18l-0.95,-1.05l-1.4,-0.08l-0.86,-1.2l-0.86,-0.54l-1.82,-0.12l-0.68,-1.08l-0.11,-2.49l-0.57,-0.34l-1.99,0.96l-6.17,-0.52l-1.09,0.94l-0.44,-0.21l-0.58,-1.04l-3.07,-0.84l-1.11,0.96l-3.17,-0.56l-0.99,-1.86l1.38,-1.62l0.5,-1.51l-0.33,-1.24l-0.88,-0.75l-0.84,-1.71l-0.84,-0.59l-2.89,0.21l-6.36,-2.48l-0.48,0.15l-0.71,1.05l0.15,0.58l1.23,0.63l0.37,0.58l-0.81,2.8l-0.51,-0.06l0.06,-2.67l-0.33,-0.43l-1.96,0.03l-2.05,1.16l-0.34,1.06l0.58,1.01l-1.71,2.1l-1.51,-0.18l-2.85,-3.07l-0.19,-1.84l0.73,-2.47l0.0,-1.0l-0.36,-0.68l-2.67,-0.91l-1.23,-1.8l-2.04,-1.24l-1.86,-2.01l-1.35,-3.37Z\",\n            name: \"C\\xe1ceres\"\n          },\n          \"ES-P\": {\n            path: \"M550.26,37.28l1.18,1.91l0.66,0.46l4.54,1.62l0.79,4.86l1.07,0.51l1.26,-0.74l0.95,-0.12l-0.02,0.5l-1.69,0.53l-0.21,1.04l1.2,1.07l1.99,0.41l0.71,0.77l-0.59,0.86l-1.22,-0.71l-0.86,0.17l-1.16,0.69l-1.27,1.47l-0.83,0.47l-1.18,-0.41l-0.64,0.94l-0.14,0.84l0.41,2.53l-0.62,0.44l-0.15,0.45l0.34,1.05l-0.52,0.21l-0.15,0.64l1.58,1.5l0.64,2.01l0.07,1.26l-1.88,-0.16l-0.84,0.25l-0.69,0.99l-0.04,1.75l0.64,1.39l1.57,0.02l1.6,7.1l-0.11,0.63l1.83,1.81l-0.51,1.99l0.35,0.5l3.11,0.29l0.59,2.91l1.16,1.3l3.81,-0.49l0.32,0.25l-2.2,2.68l0.09,1.25l0.39,0.32l0.92,-0.03l3.52,-1.66l0.35,0.2l0.08,0.72l-0.62,0.7l-2.61,0.73l-0.76,2.02l-2.07,0.72l-1.35,-0.04l-0.41,0.39l0.07,2.19l1.94,1.84l-0.05,0.44l-1.74,-0.22l-0.85,-1.41l-0.48,-0.17l-1.06,0.4l-4.25,-0.13l-2.16,1.41l-3.4,-0.44l-1.63,0.8l-0.77,-0.1l-1.0,-0.51l0.06,-2.54l-0.61,-0.35l-1.1,0.7l-1.77,0.3l-2.19,-2.06l-0.59,-1.4l-1.07,-0.46l-1.37,0.5l-2.57,3.02l-0.8,0.25l-1.81,-3.57l-1.28,-1.65l-0.44,-0.13l-2.11,0.71l-0.7,-0.72l-0.51,-0.05l-1.14,0.76l-0.39,-0.63l1.5,-3.03l0.86,-0.71l-0.07,-1.65l0.71,-0.89l0.25,-1.04l-0.21,-2.9l-0.38,-0.37l-3.45,-0.16l0.35,-1.13l-0.18,-2.13l0.6,-2.52l1.63,-0.29l0.32,-0.31l0.5,-2.43l-0.5,-0.47l-0.88,0.25l0.13,-0.85l2.16,-0.31l0.34,-0.42l0.93,-7.47l-1.0,-0.64l0.7,-3.37l-0.1,-2.32l0.68,-1.73l-0.34,-0.62l-1.67,-1.16l1.08,-1.72l0.15,-3.65l1.39,-0.32l0.63,-1.85l1.46,-1.32l0.51,-2.33l1.4,-1.26l2.71,-0.65l5.46,-0.21l3.66,-1.31l2.09,0.74ZM564.08,79.89l-1.08,-0.11l-0.01,-0.8l0.88,0.17l0.21,0.74Z\",\n            name: \"Palencia\"\n          },\n          \"ES-PO\": {\n            path: \"M369.5,64.09l1.85,-0.73l0.43,0.28l-0.34,0.27l-0.0,0.69l0.35,0.21l1.28,0.34l0.86,-0.42l0.08,-1.52l0.47,-0.69l-0.48,-1.63l0.07,-1.33l1.88,-1.67l2.26,-4.75l2.59,-0.84l1.59,0.33l1.22,-1.35l2.83,-0.46l1.22,0.6l1.34,-0.11l1.05,-0.7l1.02,-1.36l1.28,0.37l0.88,-0.34l0.42,-0.99l-0.11,-1.83l0.77,1.0l0.61,0.24l1.59,-0.76l1.75,0.25l1.38,-1.06l4.9,0.88l2.09,-0.67l0.86,0.19l-0.56,1.88l0.21,1.06l1.93,2.06l2.37,1.13l-0.75,1.4l-0.24,2.07l-1.4,2.55l-0.87,0.38l-1.41,-0.06l-1.03,1.32l-1.88,-0.45l-3.0,0.16l-0.96,-0.99l-0.56,-0.01l-1.54,1.48l-1.45,0.47l-2.03,1.87l-1.34,-0.09l-0.42,0.47l-0.05,2.94l0.95,2.11l-0.0,1.27l1.34,1.96l0.8,0.46l-0.42,1.38l0.07,0.88l1.72,1.83l2.4,-0.47l-0.51,2.71l-2.56,1.59l-1.74,0.37l-1.97,1.32l-6.12,0.89l-2.88,1.38l-2.31,0.23l-0.78,0.56l-1.04,1.94l-3.13,1.44l-1.11,1.57l-2.13,1.05l-1.17,1.11l-0.78,-10.39l2.72,-0.55l0.33,-0.84l-0.84,-0.77l0.97,-0.55l0.35,-0.99l1.32,-1.19l5.88,-3.85l0.26,-2.22l-0.33,-0.65l-0.7,0.05l-0.86,0.73l-0.9,1.61l-3.85,1.4l-0.48,0.43l-2.53,-0.03l0.36,-0.93l0.79,0.15l0.23,-0.36l0.02,-2.16l2.06,0.07l1.86,-2.26l2.57,-1.83l0.3,-1.28l-1.86,-0.05l-2.66,1.61l-1.99,0.29l-1.18,-0.13l-0.79,-0.44l-0.77,-1.88l-1.94,-0.62Z\",\n            name: \"Pontevedra\"\n          },\n          \"ES-GC\": {\n            path: \"M172.03,684.1l0.77,-0.51l0.53,-0.92l0.42,-3.36l1.93,-2.66l1.08,-0.61l2.4,-0.44l2.19,-1.59l3.94,-0.48l0.69,-0.74l1.59,-3.71l0.41,-0.08l1.49,1.18l-0.66,1.8l-0.88,0.7l-0.15,0.84l0.41,1.89l-0.54,1.22l0.01,1.38l-1.63,1.82l-3.05,1.08l-1.19,0.99l-3.73,0.67l-1.15,0.88l-1.38,2.15l-1.23,-0.67l-1.88,-0.03l-0.38,-0.79ZM185.57,668.86l0.96,-1.83l0.37,0.09l0.19,0.44l-0.43,0.78l-1.1,0.53ZM146.98,719.21l0.2,-0.75l2.16,0.12l3.83,-1.49l2.89,-1.82l1.29,-1.19l1.14,-1.59l0.47,-3.0l1.21,-2.08l1.16,-3.44l1.72,-2.29l0.92,-2.16l1.62,-2.34l1.4,-5.48l2.33,-1.25l1.33,-0.17l1.18,0.36l1.03,1.1l0.53,3.21l-0.3,3.62l-1.12,3.21l0.0,1.97l0.53,1.12l-0.99,1.15l-0.24,1.22l-2.27,4.43l-1.17,0.62l-6.05,1.19l-1.39,0.9l-1.61,0.42l-0.92,0.52l-3.51,3.95l-1.52,0.68l-0.86,-0.0l-2.38,-0.87l-2.62,0.13ZM99.0,715.68l3.79,0.89l2.98,0.0l2.46,0.57l1.15,-0.3l0.26,-0.39l0.66,4.37l0.46,0.74l0.95,0.65l-0.5,2.12l0.47,0.81l-1.04,1.58l0.55,1.93l-1.1,0.63l-1.74,1.93l-3.34,1.07l-1.45,1.3l-1.01,-0.61l-3.1,-0.55l-2.07,-1.7l-0.59,-0.81l-1.1,-0.66l-1.45,-3.33l0.14,-2.99l2.57,-1.64l1.73,-2.07l-0.11,-1.1l0.58,-1.24l-0.14,-1.19ZM109.66,716.36l-0.11,-1.05l0.61,-0.11l0.11,0.28l-0.61,0.88Z\",\n            name: \"Las Palmas\"\n          },\n          \"ES-GI\": {\n            path: \"M806.16,70.42l2.64,-0.18l2.12,-1.58l0.71,-1.25l0.44,-0.19l1.94,0.19l3.54,-0.79l3.84,1.85l1.75,0.29l0.9,1.4l0.85,0.62l2.66,0.78l1.05,-1.27l3.28,0.69l1.16,-0.05l0.36,-0.64l-0.8,-1.33l1.75,-1.32l1.31,-0.32l2.47,0.09l2.55,-1.76l1.94,-0.13l1.32,-0.87l1.1,0.38l0.88,-0.36l1.51,0.1l0.96,1.3l1.47,0.6l3.43,-0.11l-0.34,1.08l0.15,1.71l0.68,1.01l0.97,0.55l1.57,-0.16l0.72,0.67l0.82,-0.34l0.83,0.38l-1.06,2.57l-0.75,0.78l-1.92,0.1l-1.71,-0.94l-0.74,0.14l-1.06,0.93l-0.58,1.3l-0.09,2.88l0.26,0.98l2.15,1.58l1.5,1.9l-0.71,1.69l0.52,2.16l1.04,1.04l-0.11,0.71l-1.45,2.68l-1.63,1.87l-1.37,-0.02l-1.53,1.0l-0.5,1.38l-4.62,3.06l-0.73,1.01l-3.66,0.86l-2.3,1.82l-0.33,-0.82l0.56,-1.01l-0.38,-1.21l-0.93,-0.77l-1.86,-0.63l-1.55,0.06l-1.3,0.68l-3.32,0.63l-4.29,-3.88l-1.93,-0.17l-1.16,0.28l-1.11,-1.1l-0.42,-0.89l-0.08,-0.71l0.49,-0.79l1.9,0.78l1.65,-0.82l0.97,-0.11l0.78,-1.1l0.02,-0.97l-0.85,-0.95l1.93,-1.96l0.58,-1.83l-0.35,-1.18l-0.7,-0.94l-1.09,-0.61l-1.46,0.01l-1.96,-2.16l-2.47,0.26l-1.28,-1.47l-1.95,0.06l-1.17,0.68l-1.72,0.02l-1.18,0.37l-1.18,-0.82l-1.16,0.03l-0.41,-2.59l-1.06,-1.4l0.18,-0.95l0.7,-1.07l-0.27,-1.35l-0.75,-0.44l-2.16,0.19l-1.31,-0.87l-1.12,-0.26l-2.67,0.51l-0.13,-1.81l-0.99,-1.54l-0.2,-1.78l-2.72,-1.01l-0.77,-0.99l-0.2,-0.83l2.67,0.37l2.97,1.63l2.25,0.46l1.36,3.21l1.43,1.06ZM805.86,65.21l-1.05,-0.3l0.28,-0.93l0.24,0.23l0.53,1.0Z\",\n            name: \"Gerona\"\n          },\n          \"ES-TO\": {\n            path: \"M511.41,187.09l0.97,-9.37l0.17,-0.37l0.98,-0.41l3.74,0.43l1.68,0.81l1.04,0.02l1.18,-0.35l2.83,-2.28l1.59,-0.48l0.53,1.63l0.8,0.29l1.14,-0.2l1.87,-1.13l0.8,-1.62l3.06,-2.07l0.56,-0.75l0.34,-1.37l3.66,-0.48l0.47,2.5l0.71,0.73l1.48,0.49l2.64,-0.66l1.63,0.62l1.02,-0.27l0.63,-0.64l2.27,-1.1l2.77,-3.24l0.61,2.6l2.26,1.59l1.11,-0.64l1.42,-1.67l2.1,-0.69l1.7,1.5l1.61,0.3l1.41,-0.59l1.08,0.47l1.19,1.24l5.82,1.84l1.14,0.9l1.23,-0.07l1.43,1.29l3.46,0.3l2.17,1.08l0.01,0.79l-0.81,1.64l-1.44,0.73l-2.4,2.21l-0.78,0.23l-1.0,0.93l-2.94,0.75l-0.97,0.6l0.17,0.96l1.95,1.23l1.27,-0.03l2.58,-2.07l3.86,-1.37l0.28,-1.12l4.16,-1.46l0.97,-1.17l3.68,0.14l1.34,-0.5l1.36,0.53l2.21,-0.43l3.82,-1.59l0.49,0.26l-0.14,1.34l1.1,2.98l0.39,0.26l1.42,-0.06l-0.01,2.02l-1.09,2.53l0.23,0.53l1.07,0.39l1.34,1.36l0.72,2.27l1.04,1.17l0.7,2.07l3.48,3.56l-0.62,1.79l-0.23,5.92l-1.54,1.03l-1.79,-0.53l-1.72,0.29l-3.13,-2.09l-1.65,0.35l-0.33,0.65l-3.99,0.15l-0.82,0.68l-0.75,2.24l-2.79,0.21l-2.86,1.54l-0.43,1.48l-2.87,1.86l-1.23,-0.36l-3.69,0.6l-1.79,1.18l-1.98,-1.09l-1.01,0.05l-1.82,1.5l-1.06,-0.09l-1.09,-0.84l-2.33,-0.77l-0.18,-2.26l-0.34,-0.36l-4.05,-0.61l-1.41,1.06l-1.02,-0.63l0.9,-3.87l1.51,0.05l0.83,-1.11l0.04,-0.8l-0.7,-1.12l1.3,-1.01l0.25,-0.56l-0.12,-1.55l-0.46,-0.31l-3.19,0.53l-1.26,-0.56l-0.54,0.23l-1.3,3.54l-1.71,0.82l-7.25,-1.42l-0.7,0.18l-0.59,0.79l-0.62,0.1l-0.7,-0.59l-0.5,-2.05l-0.4,-0.3l-1.05,0.02l-0.98,0.65l-0.54,1.84l-1.25,0.72l-0.73,1.23l-2.69,0.19l-2.25,1.38l-0.2,-0.29l0.89,-2.09l-0.53,-1.27l-1.0,-0.95l-3.87,-1.72l-0.6,0.37l-1.03,1.7l-1.66,5.32l-3.37,-3.71l-1.56,-0.67l-3.22,-3.34l-1.39,-1.03l1.59,-2.51l0.7,-3.04l-0.11,-0.69l-0.84,-1.04l0.22,-1.15l-0.39,-1.16l-0.64,-0.4l-1.22,0.11l-1.19,0.78l-0.94,1.15l-1.77,-0.21l0.19,-2.73l0.74,-1.3l-0.04,-0.68l-1.55,-1.4l-2.4,0.18Z\",\n            name: \"Toledo\"\n          },\n          \"ES-MU\": {\n            path: \"M654.09,301.04l-0.76,-0.56l-6.42,-9.09l-0.12,-2.15l0.37,-1.51l-0.3,-2.36l0.42,-2.35l0.64,-0.99l-0.13,-0.6l-0.49,-0.32l-3.71,-0.47l-1.93,-0.81l-1.87,0.08l-2.27,-1.3l-2.55,-3.43l-1.47,-1.05l0.46,-1.33l2.9,-3.36l1.53,-2.75l1.52,-1.19l1.81,-0.59l3.26,-2.86l0.51,-0.03l1.34,0.92l2.8,-0.56l1.67,-0.73l3.62,-2.22l0.32,-0.59l1.35,-0.6l2.08,0.39l0.28,1.71l1.63,1.04l1.01,0.04l2.51,-0.75l2.9,-2.18l0.7,-0.94l-0.18,-4.56l-0.64,-2.32l0.58,-1.09l1.28,-1.31l0.19,-1.84l0.62,-1.21l1.8,-1.8l0.48,-0.18l0.72,0.66l0.84,0.01l2.24,-1.16l1.74,-1.4l2.24,-0.53l1.92,0.58l0.57,1.49l3.23,2.4l0.62,2.8l-0.53,4.44l-2.2,2.17l-0.44,1.48l0.34,3.21l3.35,1.28l0.92,2.3l-0.64,3.31l-1.7,2.83l-0.2,0.98l0.29,1.82l4.17,6.52l1.41,1.59l2.1,1.93l2.06,1.1l0.9,0.04l0.09,0.94l-0.53,-0.6l-0.67,0.12l-0.94,2.34l-1.44,0.71l-0.37,0.88l0.14,0.87l1.9,2.91l2.37,1.24l0.8,0.09l0.53,-0.43l0.35,0.7l-1.01,0.77l-0.81,-0.17l-3.17,1.24l-1.99,0.1l-1.45,0.76l-1.78,-0.83l-1.41,-0.26l-3.45,0.04l-1.31,0.77l-0.24,0.73l0.17,0.56l-1.4,-0.31l-0.68,-0.98l-2.52,-0.7l-1.14,0.97l-2.38,-0.15l-1.86,0.97l-1.81,1.62l-2.32,1.15l-0.85,2.37l-0.86,-0.15l-1.14,0.83l-3.69,1.45l-3.52,-2.55l-2.47,-0.58l-0.85,0.5Z\",\n            name: \"Murcia\"\n          },\n          \"ES-GR\": {\n            path: \"M632.95,274.73l1.44,1.02l1.39,2.16l1.61,1.55l-1.97,1.26l-0.65,0.89l-0.22,2.27l0.31,2.53l-1.53,2.95l0.17,3.33l-2.06,0.39l-0.32,0.46l0.64,3.8l-5.06,1.49l-6.08,4.9l-0.41,0.96l-0.15,2.56l-0.51,1.26l0.17,2.82l-1.54,-0.6l-1.78,-0.12l-1.94,-1.67l-1.34,-0.21l-1.07,0.43l-1.23,4.08l-1.72,1.02l-0.91,2.48l-1.55,0.16l-0.91,0.79l-0.17,0.87l0.26,1.54l0.71,2.19l-0.18,0.53l-2.76,2.5l-0.31,0.74l1.2,1.41l0.44,1.2l-4.16,2.43l-0.19,0.44l0.36,1.44l-3.53,-0.42l-4.07,0.46l-3.48,2.26l-2.26,-0.02l-1.73,-1.14l-1.31,0.35l-1.2,-0.54l-0.86,-0.81l-2.59,0.15l-0.71,0.5l-1.86,0.19l-1.52,-0.44l-0.15,-0.97l0.44,-2.03l-2.36,-2.46l-2.16,-0.02l-10.78,-4.33l-4.84,-3.96l-0.54,-3.72l-1.2,-2.79l2.36,-1.79l-0.14,-1.67l0.96,-1.52l0.12,-1.52l0.55,-0.82l2.49,0.06l3.02,-2.47l2.83,0.06l2.14,1.09l4.38,-0.36l2.24,-3.8l4.2,-2.31l2.34,-0.59l4.73,-3.82l1.14,0.28l1.72,1.7l1.19,0.31l3.66,-0.69l2.5,-2.52l0.98,-0.25l1.31,0.14l3.8,1.81l1.82,-0.74l2.55,0.51l0.5,-0.31l0.25,-1.25l3.01,-1.78l0.07,-3.76l0.39,-1.1l4.07,-6.3l3.32,-2.67l1.23,0.45l2.9,-2.05l0.02,-2.67l1.78,-0.7l3.16,1.4l4.19,1.16l0.94,-0.05Z\",\n            name: \"Granada\"\n          },\n          \"ES-GU\": {\n            path: \"M587.1,144.41l0.66,-1.26l0.37,-1.78l0.89,-0.83l-0.11,-1.38l1.57,-3.91l0.11,-1.2l-1.08,-3.21l-2.04,-1.04l-2.22,-2.41l0.77,-0.15l3.04,-2.07l1.23,-0.35l0.34,-0.7l0.01,-1.37l2.43,0.2l3.56,-0.62l2.05,-1.63l4.55,0.96l4.1,-0.31l1.68,-0.61l0.61,-0.84l0.96,-0.18l0.65,0.44l0.52,1.5l0.88,0.58l1.72,0.42l2.9,-0.63l1.21,1.16l1.76,0.36l1.46,0.98l0.98,-0.08l-0.88,0.92l0.13,0.45l1.05,0.7l-0.23,1.14l1.1,0.44l1.52,-0.44l0.66,1.28l0.99,0.56l0.85,1.61l1.79,0.8l2.34,-0.71l1.45,0.72l1.66,-0.11l2.11,-1.03l2.34,-0.08l1.58,-1.28l2.24,1.74l0.76,0.16l0.52,-0.62l-0.16,-1.27l0.35,-1.67l2.85,-0.82l0.83,0.2l7.06,4.67l1.37,1.84l4.41,3.75l0.37,0.71l-0.14,1.86l0.25,0.91l0.68,1.1l1.99,1.78l0.09,1.42l-0.73,2.49l0.71,1.6l0.07,1.29l-0.67,1.8l0.1,1.4l-0.54,0.54l-1.05,0.31l-1.28,-0.63l-1.42,-0.25l-0.69,0.36l-0.9,2.22l-0.05,2.25l-1.56,1.08l-2.46,2.83l-1.5,-0.99l-1.4,-4.87l-1.53,-2.83l-0.57,-0.44l-0.8,-0.07l-1.45,0.55l-1.37,-0.51l-2.26,-2.01l-2.58,-0.91l-0.79,0.32l-0.42,1.04l-0.78,0.34l-1.83,-0.38l-1.09,-0.63l-0.79,0.05l-0.48,0.78l-0.06,1.82l-0.78,0.79l-2.48,-1.76l-0.88,0.02l-0.64,0.7l-0.16,1.1l1.08,1.99l-1.49,-0.27l-2.13,1.02l-1.21,-1.32l-0.97,0.05l-0.42,0.43l-0.13,0.74l0.77,1.3l-0.24,1.26l1.18,1.17l0.13,0.76l-2.43,-1.28l-2.16,-0.25l-2.26,0.97l-1.63,1.56l-1.62,-0.98l-1.88,0.66l-0.54,4.19l0.56,2.81l-0.56,2.47l-1.89,0.47l-1.07,1.59l-0.49,0.21l-1.2,-0.5l-1.99,-1.82l-0.53,-0.0l-1.0,1.11l0.14,1.17l-1.63,-0.35l-0.4,-3.15l-0.86,-1.69l-1.12,-0.29l-2.0,1.42l0.31,-2.65l0.95,-1.06l0.45,-1.27l0.0,-2.47l-0.7,-1.02l-1.49,-0.8l-0.38,-3.33l-1.87,-1.42l-0.65,-0.07l-0.83,0.4l-0.08,-1.38l-1.29,-1.32l0.3,-2.13l-0.25,-0.47l-1.39,-0.11l-1.59,-1.82l-1.77,0.5l-0.53,-0.45l0.69,-1.38l-0.28,-1.9l-0.64,-1.02l-1.37,-0.47Z\",\n            name: \"Guadalajara\"\n          },\n          \"ES-AB\": {\n            path: \"M629.02,265.35l0.61,-1.09l0.02,-1.5l-1.81,-1.68l-0.44,-4.17l-2.92,-1.0l-0.41,-0.44l-0.04,-3.43l-1.39,-0.62l-1.82,0.03l-1.25,0.39l-2.69,-1.25l0.16,-0.7l-0.64,-1.08l0.49,-1.25l0.72,-0.71l1.89,-0.49l0.66,-0.81l1.0,-2.91l-0.24,-1.79l-1.3,-1.73l-2.07,-0.71l-0.57,-0.8l-0.65,-3.4l-1.48,-1.27l-2.14,0.01l-0.69,-0.23l-0.33,-0.64l2.97,-5.63l-0.1,-1.55l-1.23,-2.22l4.66,-6.08l-0.56,-2.19l2.67,-0.15l1.73,-0.82l2.03,0.58l1.54,-0.03l0.72,-0.53l5.22,4.86l0.64,-0.13l0.9,-1.97l0.62,-0.12l1.16,2.39l0.55,0.18l4.7,-2.48l4.65,0.65l0.43,-0.54l-1.43,-3.72l1.57,0.2l-0.04,0.57l1.93,2.23l3.99,-0.5l1.71,0.85l3.01,0.26l1.53,-1.99l9.31,-4.62l1.51,1.23l0.58,1.34l1.59,-0.17l2.98,1.5l5.96,1.56l-0.17,3.49l-0.87,2.21l-1.02,1.14l-1.14,2.4l-0.32,1.24l0.27,1.32l4.26,4.78l1.34,0.84l3.58,-0.19l1.77,-0.64l1.0,0.41l1.41,2.31l-0.2,1.37l0.54,1.6l-0.29,1.13l-1.12,0.72l-0.21,0.94l0.48,1.55l1.45,1.86l-1.78,0.96l-2.43,0.15l-3.08,-2.29l-0.6,-1.53l-2.4,-0.78l-2.61,0.59l-1.85,1.45l-2.11,1.09l-0.99,-0.67l-1.14,0.24l-2.1,2.1l-0.71,1.43l-0.16,1.72l-1.18,1.15l-0.72,1.4l0.64,2.56l0.31,3.66l-0.53,1.13l-2.82,2.12l-2.56,0.68l-1.38,-0.6l-0.12,-1.48l-0.49,-0.62l-2.7,-0.51l-1.83,0.76l-0.18,0.57l-5.0,2.82l-2.47,0.53l-1.11,-0.85l-1.19,0.02l-3.4,2.94l-1.69,0.52l-1.73,1.34l-1.62,2.85l-2.94,3.43l-0.55,1.56l-4.65,-1.11l-2.77,-1.23l3.78,-4.58l-0.06,-1.7Z\",\n            name: \"Albacete\"\n          },\n          \"ES-SO\": {\n            path: \"M622.78,125.45l0.72,-0.93l-0.57,-0.85l-1.06,0.07l-1.37,-0.94l-1.71,-0.34l-1.29,-1.2l-1.16,-0.02l-1.12,0.59l-2.27,-0.31l-0.59,-0.37l-0.64,-1.69l-1.01,-0.51l-1.5,0.28l-1.19,1.17l-3.43,0.48l-1.33,0.01l-4.48,-0.95l-5.24,-3.55l-0.39,-1.02l0.34,-2.0l-0.22,-0.72l-3.03,-1.17l-0.28,-1.42l-0.7,-0.77l-0.9,-0.31l-1.02,0.35l-1.46,-0.76l-0.38,-0.57l-0.19,-1.8l2.76,0.74l0.47,-0.19l2.55,-4.66l1.19,-0.11l0.36,-0.37l0.14,-1.83l1.16,-0.35l1.74,-1.12l0.18,-0.53l-0.39,-2.96l0.04,-0.81l0.31,-0.26l2.66,1.7l0.89,1.56l0.65,0.07l3.76,-4.23l2.5,-0.4l0.61,-1.72l1.1,-0.37l0.39,-1.55l1.18,-2.46l0.61,-0.18l1.72,0.37l2.45,-1.2l0.74,-0.96l-0.01,-1.15l0.42,-0.99l0.72,-0.64l1.21,-0.0l0.26,0.46l-0.1,0.82l-0.72,0.75l-0.55,1.39l0.2,1.0l3.51,1.28l3.66,-0.03l1.72,-2.64l0.89,-0.84l0.21,-1.84l0.97,0.1l2.76,-1.43l4.39,0.03l0.36,0.21l0.38,1.36l0.96,0.76l2.74,-0.71l1.84,0.1l0.34,0.35l-0.92,0.75l-0.14,1.01l0.43,0.86l1.32,1.27l-0.46,1.04l0.69,1.64l3.38,0.8l2.34,1.1l1.92,-0.37l2.11,-1.16l0.21,1.86l0.59,1.54l0.81,1.07l-1.17,2.92l1.56,2.67l0.8,0.74l-1.04,2.31l-1.47,0.4l-2.77,2.36l-1.55,-0.3l-1.24,0.9l-0.09,0.8l0.57,1.87l0.03,2.51l0.79,1.27l0.35,2.1l-2.85,1.21l-0.13,-1.56l-0.33,-0.53l-1.09,-0.47l-1.5,-0.13l-0.86,0.76l-0.47,2.59l-1.54,1.53l-0.3,2.54l0.57,1.32l0.43,3.67l0.68,0.81l1.83,0.32l1.3,0.94l-0.24,2.85l-2.62,-1.86l-1.91,1.34l-2.25,0.05l-2.09,1.03l-1.33,0.11l-1.52,-0.73l-2.34,0.72l-1.56,-0.82l-0.54,-1.29l-1.04,-0.62l-0.76,-1.37l-0.7,-0.26l-1.66,0.48l0.23,-1.04l-0.95,-0.76Z\",\n            name: \"Soria\"\n          },\n          \"ES-ML\": {\n            path: \"M609.41,400.22l-0.46,0.16l-0.55,-0.55l-0.09,-0.92l0.24,-0.23l0.86,1.55Z\",\n            name: \"Melilla\"\n          },\n          \"ES-LU\": {\n            path: \"M416.6,64.69l-1.08,-0.92l-3.2,-1.54l-1.14,-0.1l0.01,-1.77l-1.31,-1.45l1.36,-2.46l0.13,-1.69l0.82,-1.29l0.09,-0.97l-0.63,-0.73l-2.08,-0.88l-1.73,-1.87l0.57,-2.66l-0.3,-0.51l-0.88,-0.19l0.66,-1.12l1.62,-1.05l0.95,-1.61l0.26,-1.36l-0.01,-1.45l-1.12,-3.05l0.39,-2.0l-1.42,-4.61l1.29,-3.16l-0.34,-1.75l1.86,-2.29l0.29,-2.94l1.42,0.21l0.7,-0.26l0.84,-1.58l1.13,-0.71l1.43,-3.83l-0.54,-1.38l1.22,-1.43l0.11,-1.89l1.26,-1.32l0.03,-0.52l-0.63,-0.85l0.4,-2.11l1.62,-1.06l0.99,1.87l-0.1,0.63l0.53,0.44l0.53,-0.25l0.73,-1.07l0.51,-0.0l1.13,-0.75l1.85,0.27l4.81,2.17l2.44,3.85l1.64,0.79l-0.38,0.82l0.78,0.59l1.78,-0.56l2.41,0.46l2.44,-0.08l0.66,-0.32l1.48,0.54l0.04,0.65l-0.89,1.76l0.21,0.82l-2.32,2.18l-1.3,-0.11l-0.8,0.25l-0.4,0.77l-0.05,1.45l0.36,0.5l1.34,0.29l0.28,1.93l0.61,0.98l1.38,0.94l0.32,1.95l0.53,1.01l3.36,2.06l-0.32,1.63l0.67,1.14l0.82,0.42l0.93,-0.27l1.5,-0.78l0.65,-0.99l1.11,1.46l0.04,0.59l-1.35,1.09l-3.03,0.89l-0.82,1.71l-0.92,0.63l-0.18,0.72l0.56,1.3l0.53,0.34l0.86,-0.3l0.24,-0.79l1.05,1.08l1.73,0.27l1.12,1.1l0.29,2.02l-1.27,2.02l0.26,2.18l-0.31,0.83l-2.49,2.71l-1.37,0.1l-1.02,0.86l-1.18,0.48l-0.74,0.84l-0.31,0.93l0.14,0.8l0.88,1.39l-1.18,1.21l0.03,1.96l-0.69,1.41l-0.09,1.31l-1.54,2.88l-1.34,0.79l-0.59,0.74l-1.8,4.22l-1.73,-3.16l-0.8,-0.61l-2.04,-0.5l-1.74,0.24l-1.56,-1.11l-4.85,2.27l-2.11,-0.57l-1.64,0.24l-3.8,-2.29l-1.6,-0.1Z\",\n            name: \"Lugo\"\n          },\n          \"ES-SE\": {\n            path: \"M478.33,326.02l0.78,-0.94l-0.01,-0.52l-0.51,-0.08l-1.66,0.8l-0.8,0.02l-1.01,-0.57l-2.06,0.85l-1.12,-0.96l0.86,-2.37l-1.07,-3.38l1.12,-2.29l-0.02,-1.55l0.39,-1.53l-0.44,-2.65l0.63,-2.45l-0.31,-0.85l-1.32,-1.39l0.8,-0.96l-0.08,-1.96l1.58,-0.57l0.28,-1.22l-1.66,-2.78l-0.82,-2.39l-0.93,-1.2l0.25,-1.15l-0.23,-0.45l-2.14,-0.92l-2.41,0.08l-0.67,-0.3l0.1,-0.82l0.93,-0.84l1.32,-2.1l0.67,-0.37l5.41,-1.38l1.6,0.02l0.67,1.34l1.52,0.16l0.33,-0.42l0.06,-2.24l0.34,-0.5l2.18,0.25l0.91,-0.51l0.17,-0.51l-0.83,-1.9l0.75,-2.58l-0.56,-0.63l-1.21,-0.07l-0.37,-0.79l2.41,-1.55l5.47,-0.92l1.08,-0.48l1.83,-2.93l-0.45,-1.45l0.24,-0.67l1.88,-1.35l0.82,-1.09l1.38,-0.58l2.57,-0.32l1.38,0.97l0.12,0.26l-1.65,1.15l0.24,1.71l0.36,0.44l1.49,0.06l2.84,-2.11l1.18,0.06l0.1,0.81l3.35,3.29l0.81,2.96l2.2,1.82l0.65,3.33l1.88,1.32l0.72,2.25l1.15,0.83l-0.05,2.87l-2.77,0.01l-1.26,1.23l0.43,2.35l0.93,1.06l1.82,0.2l2.7,-0.67l3.34,-2.01l1.49,0.29l1.03,-0.17l1.16,-1.24l1.94,-0.74l1.73,0.17l1.26,1.36l0.4,0.96l0.02,1.39l0.93,0.79l-0.34,3.94l1.37,1.13l0.75,1.35l0.23,1.3l1.34,1.21l1.18,2.49l1.75,1.37l1.08,0.0l1.93,-1.38l0.91,0.68l0.25,1.8l0.6,1.5l-2.14,-0.14l-0.95,0.81l-0.07,0.45l0.63,1.28l-0.09,0.62l-0.52,0.53l-1.97,0.93l-1.59,-1.4l-0.54,-0.14l-1.11,1.2l-1.84,-0.6l-1.2,0.2l-0.6,0.6l0.04,0.44l1.95,1.4l-0.31,0.53l-8.93,4.98l-1.45,1.56l-1.51,0.87l-0.89,-0.22l-1.78,-2.52l-0.8,-0.38l-5.0,3.12l-0.18,-0.77l0.73,-1.33l0.08,-1.17l-0.89,-0.95l-1.29,-0.2l-1.22,0.69l-0.11,2.82l-0.4,0.84l-1.35,1.14l-1.37,0.19l-2.12,-1.59l-1.52,-0.33l-1.07,0.7l-0.86,1.33l-3.35,-0.04l-1.72,0.51l-1.03,0.78l-0.92,2.24l-1.65,-0.37l-1.38,0.35l-5.12,-0.59l-2.02,-1.26l-2.17,-0.59Z\",\n            name: \"Sevilla\"\n          },\n          \"ES-CA\": {\n            path: \"M475.93,344.23l0.23,0.25l-0.04,0.08l-0.19,-0.34ZM476.86,345.98l0.56,0.32l0.97,-0.45l1.32,-1.54l-0.25,-0.67l-1.57,0.15l0.03,-1.88l-0.35,-0.87l-2.13,-1.89l-3.84,-0.55l-0.44,-0.43l-0.49,-1.79l-1.18,-2.44l0.13,-0.61l0.62,-0.62l2.12,-0.79l0.78,-0.66l0.44,-1.28l-0.33,-1.84l0.18,-0.88l1.12,-0.89l2.72,0.19l2.86,0.75l2.21,1.34l5.28,0.61l1.32,-0.35l1.92,0.43l0.47,-0.28l0.91,-2.36l0.78,-0.56l1.36,-0.4l3.51,0.04l1.27,-1.63l0.71,-0.44l0.83,0.24l2.36,1.7l1.94,-0.28l1.66,-1.44l0.58,-1.65l-0.09,-1.97l0.64,-0.33l0.81,0.1l0.51,0.53l-0.85,2.14l0.14,1.09l0.78,0.58l0.65,-0.16l4.42,-2.98l1.98,2.62l0.68,0.45l0.91,0.04l1.05,-0.43l1.99,-1.84l1.47,1.79l0.44,1.25l-0.12,1.29l-1.57,2.08l-1.09,0.56l-1.06,0.04l-2.9,-2.05l-1.12,0.07l-0.82,0.45l-1.2,1.17l-0.35,0.79l0.42,1.33l1.29,1.47l-0.09,0.64l-0.82,1.06l-0.71,2.78l-1.57,1.27l-2.56,0.83l-1.52,2.04l-4.34,1.57l-0.76,1.06l0.45,1.0l1.37,0.73l1.06,-0.04l2.8,-1.26l1.72,0.11l1.35,2.34l1.4,1.42l0.76,1.65l0.6,3.17l0.52,0.31l1.37,-0.44l0.67,1.27l-1.38,1.02l0.15,0.65l-1.87,3.25l-0.18,1.88l-0.53,-0.94l-0.73,-0.46l-1.06,-0.34l-1.17,0.26l-0.69,1.55l0.53,3.1l-0.47,0.7l-6.23,2.2l-0.74,-1.27l-2.34,-1.36l-1.19,0.23l-3.12,-1.11l-1.39,-1.62l-3.44,-2.86l-2.84,0.26l-1.92,-0.52l-2.61,-4.04l-2.21,-1.15l-0.94,-2.91l-1.4,-1.51l-1.34,-2.91Z\",\n            name: \"C\\xe1diz\"\n          },\n          \"ES-SG\": {\n            path: \"M584.62,107.66l0.83,1.55l1.63,0.86l1.29,-0.31l0.48,0.2l0.83,2.08l1.41,0.78l1.56,0.33l-0.29,2.13l0.17,1.14l5.29,3.82l-1.38,1.32l-3.47,0.62l-3.37,-0.36l-0.15,0.6l0.48,0.73l-0.13,1.05l-1.12,0.3l-3.05,2.08l-2.8,0.36l-1.46,0.79l-2.42,2.59l-2.37,1.61l-1.76,2.6l-4.6,1.83l-1.92,2.52l-0.11,1.75l-1.3,3.83l-1.09,0.29l-1.61,-0.22l-1.05,0.46l-3.14,4.05l-3.21,-0.55l-1.31,0.37l-0.79,-0.15l-1.1,0.75l-0.25,1.22l-3.21,0.93l-0.93,-5.19l-1.26,-1.64l-0.48,-1.9l-0.39,-0.44l-0.86,-0.21l-1.64,0.26l0.59,-1.83l-0.77,-3.62l-0.31,-0.48l-1.3,-0.65l-1.57,-2.85l-2.28,-1.88l-0.47,-0.88l0.45,-2.81l1.95,-2.05l0.1,-1.14l2.74,-2.61l-0.02,-0.6l-0.89,-0.73l0.14,-0.38l1.17,0.64l1.18,-0.67l2.27,1.2l0.59,-0.32l0.03,-0.66l-1.0,-1.82l-0.04,-1.14l-0.57,-1.63l0.75,-0.03l3.06,-1.52l1.59,0.14l1.74,-0.58l2.93,-0.07l9.49,-2.95l1.17,-1.45l0.36,-1.66l3.14,1.48l2.27,2.32l1.8,-0.08l0.55,1.71l0.35,0.28l1.63,0.12l0.43,-0.4l0.05,-2.52l1.35,-0.92l0.7,-1.09l1.73,-0.61l1.94,0.38l1.04,-0.4Z\",\n            name: \"Segovia\"\n          },\n          \"ES-BU\": {\n            path: \"M620.91,49.92l1.47,-0.09l0.85,0.71l0.64,0.12l-0.58,1.13l-1.02,0.54l-0.05,0.82l1.63,1.59l0.77,-0.08l0.74,-0.59l0.28,1.2l-4.36,-0.38l-4.69,-1.29l-2.4,-0.99l-2.01,-1.71l1.78,-1.94l3.5,-0.05l3.45,1.0ZM555.27,59.55l0.39,-0.56l-0.36,-1.13l0.72,-0.74l-0.43,-2.87l0.35,-0.73l1.03,0.31l3.4,-2.7l0.71,0.03l0.93,0.6l0.59,-0.15l0.83,-1.2l1.63,-0.51l1.17,-2.2l-0.04,1.98l0.3,0.44l1.55,0.36l2.02,-0.56l1.39,-1.13l2.09,-0.15l0.74,-0.6l0.09,-0.95l-0.85,-2.67l-1.09,-0.22l-1.21,1.1l-0.42,-0.11l-0.15,-0.77l0.33,-0.54l1.02,-0.1l1.57,-1.19l-0.04,-0.62l-0.63,-0.84l-0.78,-0.4l-0.92,0.2l-0.92,1.18l-1.59,0.7l-0.55,-0.1l-0.55,-0.63l1.22,-3.23l2.17,-1.55l1.69,-0.74l0.59,-0.63l0.23,-1.26l2.6,-0.24l1.93,-1.27l2.78,-2.72l4.95,1.58l2.79,0.24l1.23,-0.11l2.45,-0.84l3.73,-2.03l1.39,0.64l3.04,0.26l0.13,0.2l-0.65,0.51l-0.56,1.4l0.38,0.91l0.83,0.46l-0.26,2.4l-0.62,1.06l0.07,0.48l1.92,0.74l1.69,0.13l0.68,-0.35l0.66,-1.29l0.55,-0.17l0.43,0.99l1.02,0.54l-0.23,0.55l-1.42,0.1l-0.42,0.39l0.08,0.7l1.2,1.04l1.1,0.36l0.07,0.34l-1.79,0.92l-2.04,0.2l-2.03,-0.44l-0.37,-0.84l-0.77,-0.52l-2.47,-0.06l-2.15,2.26l-0.39,1.41l1.98,2.21l0.73,0.41l0.74,-0.37l0.5,-1.15l1.43,-0.19l1.28,-1.15l-0.0,0.49l-1.56,2.56l0.02,0.58l0.83,1.03l-0.22,0.57l0.37,0.56l0.77,0.04l2.13,-0.75l3.56,2.19l0.95,1.06l1.12,0.5l2.92,2.37l-2.3,0.71l-4.23,-0.69l-2.51,0.45l-0.31,0.92l0.52,0.92l-2.01,2.28l-0.17,0.6l0.54,0.64l1.22,-0.11l-0.46,2.02l1.33,1.82l-0.36,1.2l0.09,2.1l-0.53,0.84l-1.3,0.41l-0.29,0.54l0.41,0.81l0.44,2.82l-0.54,2.34l-0.63,0.64l-0.13,0.6l1.74,2.94l0.99,0.74l1.11,1.73l0.92,0.44l2.85,-0.08l0.74,2.22l-0.79,0.37l-1.28,2.66l-0.31,1.35l-1.06,0.34l-0.65,1.68l-0.95,-0.08l-1.41,0.42l-3.47,3.91l-0.77,-1.27l-1.38,-0.67l-0.89,-1.04l-1.32,-0.12l-0.71,0.77l0.33,4.02l-2.75,1.26l-0.29,0.35l-0.14,1.77l-1.38,0.31l-2.49,4.56l-2.62,-0.77l-0.74,0.44l-0.15,1.12l-0.88,0.42l-2.03,-0.37l-2.09,0.73l-0.86,1.22l-1.45,1.04l-0.17,2.52l-0.93,-0.07l-0.56,-1.75l-0.41,-0.28l-1.78,0.11l-2.14,-2.23l-3.52,-1.66l-0.58,-1.25l-1.32,-0.92l-0.06,-3.24l-0.93,-1.84l0.67,-2.29l-2.08,-2.19l0.04,-1.31l1.16,0.01l2.34,-0.84l0.61,-0.74l0.24,-1.34l2.33,-0.57l0.67,-0.44l0.5,-1.57l-0.55,-0.98l-0.67,-0.2l-4.12,1.7l-0.08,-0.4l2.22,-2.66l-0.29,-1.14l-0.79,-0.31l-3.52,0.53l-0.67,-0.79l-0.63,-3.1l-0.36,-0.32l-2.93,-0.27l0.46,-1.77l-1.84,-1.86l-1.44,-8.22l-0.41,-0.27l-1.6,0.13l-0.29,-0.74l0.01,-1.48l0.39,-0.57l2.65,0.09l0.43,-0.42l-0.11,-1.87l-0.68,-2.12l-1.17,-1.37ZM562.65,80.51l1.08,0.29l0.92,-0.33l0.24,-0.58l-0.49,-1.35l-1.05,-0.47l-0.94,0.35l-0.37,0.96l0.6,1.13Z\",\n            name: \"Burgos\"\n          },\n          \"ES-SA\": {\n            path: \"M449.85,132.63l0.56,-0.26l3.52,0.08l0.77,-0.59l1.69,-2.27l0.35,-2.31l1.93,-1.71l2.26,-3.32l3.14,-0.12l3.34,-1.52l6.19,1.04l7.67,3.94l1.1,-0.68l1.88,0.18l0.98,0.42l-0.14,1.31l0.94,0.89l0.95,0.14l0.6,-0.57l0.3,0.64l0.69,0.36l0.79,-0.11l0.76,-0.59l0.27,-0.71l-0.14,-2.65l0.73,-0.39l3.2,0.88l3.98,-0.57l1.8,-0.76l1.23,1.31l0.92,0.4l2.37,0.09l2.0,1.34l3.44,-0.28l0.42,1.72l1.6,0.21l0.93,0.99l0.81,0.33l1.34,-0.53l0.38,-2.77l0.96,-0.52l1.03,1.14l2.02,0.3l1.65,1.33l-0.93,2.1l0.16,1.73l0.51,0.7l1.06,0.29l0.48,1.3l-0.26,1.07l-0.99,1.29l0.57,1.65l-1.88,2.04l-0.05,2.48l-0.64,1.07l-1.55,1.03l-1.01,1.47l-4.7,3.07l-1.02,2.69l-0.99,0.85l-1.24,0.56l-2.63,0.17l-0.46,0.45l0.22,1.64l0.39,0.35l2.48,0.02l-1.01,3.11l-1.67,0.47l-0.34,0.47l0.02,1.26l-0.73,-0.26l-0.83,-0.88l-0.34,-1.22l-0.69,-0.22l-1.35,0.35l-2.83,2.04l-0.44,0.89l0.78,2.47l-1.95,2.81l-1.19,0.39l-0.69,-0.1l0.34,-1.48l-0.6,-0.98l-0.62,-0.2l-3.13,1.08l-1.34,1.85l-1.34,-0.36l-1.39,-0.64l-1.43,-1.17l-2.48,-1.07l0.84,-1.82l-0.34,-0.68l-1.39,-0.56l-0.54,-0.92l-1.0,-0.3l-1.08,-0.94l-2.28,-0.97l-0.65,0.09l-2.18,1.29l-1.28,0.28l-1.13,0.8l-0.79,1.11l-1.6,0.38l-1.26,1.04l-2.95,1.14l-1.8,1.57l0.13,1.45l-0.5,0.54l-3.31,0.66l-1.26,0.55l-1.16,-0.42l-1.67,0.65l-2.12,0.03l-2.03,-1.44l0.27,-0.52l2.09,-1.5l0.77,-1.22l-0.08,-0.51l-1.3,-1.11l-0.85,-1.25l-0.2,-1.34l1.76,-3.41l-0.28,-1.11l-1.16,-1.49l-0.06,-0.64l1.44,-3.12l-0.99,-5.26l0.09,-3.6l0.65,-0.39l0.16,-0.83l-0.37,-0.85l-1.22,-0.68l-1.22,-2.96l-2.16,-2.52l0.48,-1.69Z\",\n            name: \"Salamanca\"\n          },\n          \"ES-V\": {\n            path: \"M666.85,205.29l0.14,-2.53l1.36,-1.21l1.45,-2.61l1.07,-1.03l1.18,-0.63l2.53,0.62l1.54,-0.94l0.13,-2.69l1.66,-2.49l0.93,-3.21l0.25,-2.69l-0.37,-0.92l2.06,-1.14l0.71,0.29l2.96,-0.68l2.1,-0.02l2.86,1.03l0.55,0.72l-0.28,1.28l0.39,1.98l0.41,0.56l0.83,0.39l0.94,-0.03l2.65,-1.1l0.43,0.22l1.41,2.22l1.24,0.36l0.43,-0.21l0.68,-1.3l0.88,0.49l0.41,1.87l-0.08,1.57l0.81,0.81l1.64,-0.18l1.28,-1.39l1.07,-0.55l2.0,2.92l1.35,0.4l1.98,-1.12l1.23,-1.77l1.12,-0.56l1.19,0.39l1.52,1.71l2.78,1.5l-0.42,2.05l-1.93,2.23l-0.96,2.2l-1.72,2.63l-0.29,1.77l0.13,2.37l1.05,5.14l3.28,6.34l-0.91,0.96l1.31,4.15l3.64,6.07l3.04,2.67l-7.08,1.22l-3.48,-1.23l-4.16,2.86l-7.06,1.12l-0.27,0.61l1.18,1.84l0.47,0.16l1.11,-0.29l0.49,0.38l-3.72,1.96l-1.24,-1.01l-3.16,-1.63l-0.96,-0.11l-2.63,0.6l-1.85,-1.48l-1.95,0.04l-0.19,-0.18l0.5,-1.7l-0.54,-1.68l0.17,-1.55l-1.68,-2.68l-1.53,-0.58l-1.86,0.65l-3.21,0.22l-1.04,-0.64l-4.07,-4.49l-0.21,-1.03l0.26,-0.96l1.07,-2.27l1.03,-1.15l0.95,-2.41l0.34,-3.34l-0.36,-0.91l-6.31,-1.77l-3.04,-1.51l-1.41,0.16l-0.34,-1.11l-2.42,-2.09l0.76,-2.59l-0.16,-0.3ZM674.54,172.89l0.62,1.34l1.19,1.15l0.55,1.11l1.01,0.44l2.48,0.27l2.63,1.93l-0.11,0.74l-2.05,1.0l-4.09,0.86l-5.02,-1.01l-1.39,-3.88l-1.43,-1.03l0.0,-0.38l3.04,0.4l1.73,-0.48l0.46,-0.67l-0.05,-1.35l0.41,-0.42Z\",\n            name: \"Valencia\"\n          },\n          \"ES-LE\": {\n            path: \"M453.74,67.14l0.59,-0.87l0.31,-1.67l-0.79,-1.49l-2.82,-0.7l-1.22,-0.65l-1.43,0.24l-1.09,0.63l-2.95,-0.39l0.23,-1.66l0.71,-1.52l-0.06,-1.86l1.2,-1.22l-0.12,-0.78l-0.78,-1.06l-0.05,-0.8l0.56,-0.8l2.13,-1.32l1.55,-0.2l2.64,-2.85l0.49,-1.3l-0.28,-1.99l1.08,-1.7l1.03,0.15l1.31,0.88l2.66,-1.53l2.5,-0.13l3.03,0.51l2.55,-0.67l2.1,-1.04l0.35,-0.5l-0.07,-0.8l-1.29,-0.65l2.23,-0.45l1.12,-2.05l0.89,-0.36l5.25,1.77l0.57,-0.19l0.36,-0.95l0.4,-0.14l2.47,0.66l0.79,-0.06l0.95,-0.46l0.66,-1.3l2.43,0.36l1.13,-0.22l1.07,2.0l2.11,1.31l2.47,1.05l2.44,-0.03l0.95,-0.55l1.59,-2.84l0.79,-0.31l1.43,0.02l1.15,0.5l3.95,0.79l2.02,-0.33l0.83,-1.09l2.95,-0.28l0.98,-1.6l2.56,0.22l3.82,-0.41l2.16,-0.94l1.6,0.23l1.18,-1.13l1.19,-2.33l2.14,-0.67l4.22,-2.17l1.26,0.61l0.99,1.51l-0.15,2.57l0.41,1.49l0.73,0.71l1.61,0.78l1.32,1.63l0.22,0.85l-2.36,1.3l-0.49,0.83l-0.5,2.3l-1.34,1.11l-0.68,1.8l-0.86,-0.02l-0.62,0.66l-0.14,3.62l-1.12,1.9l0.59,1.07l1.43,0.85l-0.65,1.49l0.09,2.38l-0.76,3.66l0.26,0.46l0.79,0.29l-0.0,0.6l-0.95,6.27l-2.09,0.3l-0.34,0.33l-0.27,1.75l0.5,0.45l0.85,-0.24l-0.31,1.52l-1.54,0.27l-1.36,-0.36l-0.5,0.35l-0.09,0.92l-1.41,-1.71l-1.15,-0.01l-2.4,1.87l-0.78,0.22l-0.86,-0.36l-0.8,0.11l-0.93,1.12l-0.41,1.23l-1.72,0.71l-1.84,-0.98l-1.14,0.53l-0.42,1.34l0.4,2.87l-0.41,2.55l0.36,1.63l-1.25,0.35l-4.03,-3.14l-0.84,-0.05l-0.41,0.29l-0.35,1.27l-2.13,-0.74l-0.01,-1.07l-0.88,-1.1l-1.65,-0.68l-0.5,0.43l0.06,0.56l-1.96,0.24l-0.36,-0.84l-0.47,-0.23l-3.25,0.85l-0.98,-0.13l-0.9,-1.27l-0.69,-0.15l-0.71,0.7l-1.35,0.5l-3.65,-1.52l-6.59,0.37l-1.2,-0.85l-1.36,-0.45l-0.87,-1.15l-0.66,-0.35l-1.15,0.38l-3.58,-0.07l-2.34,0.8l-1.28,-0.75l-1.36,-0.31l-2.35,0.06l-1.13,-0.47l-2.36,-0.05l-2.55,-1.41l1.38,-2.01l0.2,-2.07l-0.21,-0.7l-3.61,-2.7ZM514.65,75.08l0.26,-1.35l-0.31,-1.1l-0.46,-0.28l-0.84,0.17l-0.89,0.62l-0.16,1.15l0.51,0.91l1.01,0.26l0.87,-0.39Z\",\n            name: \"Le\\xf3n\"\n          },\n          \"ES-BI\": {\n            path: \"M600.96,21.65l1.08,0.16l0.98,-0.55l2.99,2.08l0.64,-0.32l0.0,-0.37l-0.82,-2.2l3.24,-1.72l0.3,-0.39l-0.13,-0.5l5.08,-0.3l1.52,-0.51l1.81,1.21l0.88,2.57l0.7,0.2l0.6,-1.96l0.27,-0.06l6.87,1.94l0.86,1.07l1.86,0.78l-1.07,1.6l0.03,0.49l0.65,0.74l-1.38,1.64l-0.61,-0.06l-0.77,0.63l0.06,1.8l-0.72,1.1l0.24,2.67l-0.32,0.31l-3.22,0.53l-0.99,-0.28l-0.74,0.16l-0.92,0.63l-0.09,0.46l1.06,1.88l-0.98,-0.2l-1.22,0.31l-1.53,-0.58l-1.86,0.28l-2.71,-0.96l-1.71,-0.04l-2.17,-2.02l0.82,-2.37l-0.61,-1.48l-0.93,-1.12l-1.29,-0.64l-1.08,0.42l-0.61,1.83l-2.55,0.63l-1.16,-0.76l-0.56,-0.92l-3.19,-0.32l-1.3,-0.71l-6.29,2.8l-0.63,-1.85l-0.14,-1.69l0.41,-0.61l4.13,-2.65l3.39,0.05l1.26,0.32l1.94,-0.78l0.64,-1.03l-0.01,-1.35ZM596.03,27.94l0.19,-0.92l-0.77,-1.1l-0.93,-0.35l-0.51,0.38l-0.0,1.87l0.29,0.5l0.46,0.12l1.27,-0.51Z\",\n            name: \"Bizkaia\"\n          },\n          \"ES-HU\": {\n            path: \"M690.93,65.74l0.49,-1.29l-0.34,-1.46l-0.32,-5.69l-0.79,-1.74l1.39,-0.59l0.39,-0.94l-0.26,-0.67l-0.94,-0.78l0.21,-1.37l0.25,-0.47l1.1,-0.66l0.53,-0.97l0.29,-2.65l1.22,-1.66l0.24,-0.97l1.4,-0.86l0.7,-0.01l-0.13,0.98l0.73,0.92l1.32,0.14l1.94,1.2l1.47,1.75l0.18,0.78l1.01,0.14l0.0,0.54l0.58,0.58l1.65,-0.52l0.33,-1.12l2.65,0.88l1.4,-0.06l2.83,-1.75l0.82,0.07l0.51,-0.58l2.59,1.47l0.73,1.0l1.21,0.1l1.32,-0.34l0.28,1.3l1.34,1.42l0.39,0.84l3.22,1.54l1.64,-0.11l6.79,-1.86l2.51,0.69l0.84,1.31l0.97,0.78l0.86,-0.23l1.1,-1.39l1.07,-0.7l0.86,0.66l0.36,0.77l0.99,0.23l2.35,-0.37l0.7,0.23l6.34,0.04l1.03,-0.33l1.61,3.01l2.03,0.87l-0.35,1.69l-1.17,2.19l0.0,0.81l-0.89,0.3l-0.28,0.63l0.41,1.87l0.87,1.21l0.5,1.63l0.19,2.88l-0.37,3.02l-0.88,1.75l-0.58,2.39l-0.1,2.8l-1.89,4.38l-0.14,1.21l-1.64,1.64l-1.27,0.67l-0.49,0.7l0.13,0.79l0.93,0.77l0.05,1.82l-1.99,1.89l-1.66,0.7l-1.43,2.13l-2.38,0.74l-3.12,3.65l-0.04,1.04l0.96,2.8l0.82,0.58l2.12,0.19l0.54,1.9l-1.55,2.15l-1.33,0.42l-0.66,0.57l-0.41,3.09l-3.53,-0.98l-0.43,0.15l-0.78,1.08l-1.13,0.33l-1.05,-0.47l-1.52,1.05l-0.79,1.51l-3.13,-0.4l-1.5,-1.12l-1.91,0.39l-1.26,-4.57l-0.62,-1.14l-1.34,-1.41l-0.59,-1.92l-0.81,-1.15l-1.29,-0.29l-1.31,0.88l-0.39,-0.06l-2.14,-2.06l-1.27,-0.46l-1.39,-2.49l-4.35,-2.47l-0.45,-0.74l-0.92,-4.17l-1.22,-1.41l-2.13,-1.0l-1.84,-2.78l-0.86,-0.53l-4.3,-0.09l-2.84,-1.78l-0.39,-1.15l0.79,-2.13l0.81,-0.07l0.75,0.9l0.77,0.23l0.72,-0.33l0.85,-1.31l-0.34,-8.36l0.89,-1.5l0.14,-0.98l-0.6,-3.86l-0.58,-0.5l-1.17,-0.05l-0.5,0.55l0.39,2.03l-1.2,2.82l-0.38,0.26l-0.74,-0.38l-0.98,0.01l-0.77,0.52l-0.47,1.02l-0.5,-0.13l-0.13,-0.39l3.27,-4.58l0.24,-0.82l-0.51,-1.63l-2.12,-1.15Z\",\n            name: \"Huesca\"\n          },\n          \"ES-LO\": {\n            path: \"M602.18,77.32l0.69,-0.83l0.59,-2.59l-0.47,-3.12l-0.33,-0.45l1.27,-0.44l0.8,-1.33l-0.09,-2.12l0.34,-1.49l-0.51,-1.05l-0.81,-0.72l0.49,-1.93l-0.67,-0.79l-1.08,0.16l2.09,-2.43l0.01,-0.71l-0.47,-0.8l1.97,-0.31l4.23,0.7l2.44,-0.71l0.12,0.77l0.67,0.47l-0.37,0.81l0.45,0.64l0.61,0.2l1.17,-0.22l0.42,-0.27l0.55,-1.17l0.75,-0.04l1.61,1.12l0.13,2.34l2.91,1.76l0.95,-0.43l0.17,0.63l0.66,0.26l0.87,-0.59l1.27,0.03l0.66,-1.22l0.42,0.71l2.66,1.03l3.51,0.8l2.79,-0.22l2.42,1.92l0.7,0.22l4.54,0.02l0.45,0.36l-0.33,0.83l0.56,0.76l1.25,0.46l2.05,-0.0l2.9,3.13l1.47,0.97l0.06,0.94l0.42,0.5l1.09,0.0l1.29,0.98l3.72,1.82l0.43,3.02l-0.58,0.19l-1.35,-0.5l-1.49,0.35l-1.25,-0.36l-0.69,0.18l-2.91,3.35l-0.32,0.89l0.02,0.98l0.46,1.04l1.54,1.21l0.21,0.6l-0.4,1.1l-2.43,1.32l-1.62,0.31l-2.11,-1.07l-3.15,-0.69l-0.34,-1.01l0.49,-1.07l-1.79,-2.2l1.08,-1.8l-0.92,-0.94l-2.2,-0.13l-2.5,0.7l-0.41,-0.4l-0.44,-1.44l-0.7,-0.45l-2.25,-0.25l-2.61,0.19l-1.08,0.32l-1.7,1.11l-1.38,0.13l-0.32,2.04l-0.79,0.69l-1.37,2.36l-3.36,0.02l-1.38,-0.71l-1.56,-0.31l0.43,-1.43l0.8,-0.93l0.06,-1.51l-0.73,-0.77l-1.62,-0.03l-1.28,1.07l-0.47,1.15l-0.11,1.34l-2.47,1.38l-1.19,-0.32l-0.3,-1.5l-0.89,-1.41l-3.55,-0.19l-1.1,-1.71l-0.89,-0.61l-1.61,-2.66Z\",\n            name: \"La Rioja\"\n          },\n          \"ES-SS\": {\n            path: \"M624.31,40.0l-1.38,-0.74l0.18,-0.64l1.96,-0.89l0.48,-0.56l0.12,-0.97l-0.45,-1.56l1.08,-0.28l0.6,-0.7l-0.19,-2.81l0.68,-1.03l-0.03,-1.77l1.04,-0.14l1.75,-2.04l-0.01,-0.52l-0.68,-0.77l0.98,-1.47l2.94,0.98l1.76,0.17l3.47,-0.54l0.86,0.81l0.79,0.13l0.4,-0.26l0.65,0.61l1.47,-0.82l4.11,-1.16l1.32,-0.69l0.69,0.24l0.66,0.75l0.46,0.02l0.56,-0.36l-0.0,-0.67l-0.29,-0.23l1.12,-0.47l1.46,-1.18l1.2,-0.57l0.28,0.18l-0.08,2.0l1.3,0.82l0.47,1.15l-1.41,0.83l-1.65,2.29l-0.64,0.25l-0.92,-0.16l-0.46,0.67l-0.57,-0.25l-0.55,0.2l-0.46,1.77l0.28,2.3l-0.88,1.25l-3.15,1.97l-0.92,1.56l-0.23,1.98l-0.38,0.33l-1.53,0.43l-1.42,1.34l-3.43,-0.04l-0.79,0.82l-0.73,1.48l-0.77,-0.03l-1.02,-1.29l-2.01,-1.09l-5.88,-0.5l-1.48,-0.61l-0.75,0.5Z\",\n            name: \"Gipuzkoa\"\n          },\n          \"ES-BA\": {\n            path: \"M463.09,220.86l0.38,0.94l0.82,0.35l0.8,-0.25l0.5,-0.68l6.1,0.51l1.75,-0.79l0.27,2.69l0.84,0.92l1.96,0.18l1.58,1.67l1.55,0.16l0.94,1.17l0.62,0.01l2.07,-2.45l2.15,-1.58l0.29,2.08l0.81,0.6l0.92,-0.24l1.4,-1.6l0.41,0.71l0.48,0.18l2.66,-0.93l1.26,-0.79l0.71,-1.08l1.33,0.29l3.04,2.46l0.43,0.05l1.67,-0.85l1.83,-0.21l0.62,-0.62l0.58,-1.71l-1.13,-1.8l1.33,-0.69l1.61,-0.01l2.92,2.35l1.63,-0.2l0.71,-0.42l1.13,-1.21l1.02,-1.75l-0.31,-1.66l0.52,-2.5l0.42,-0.13l2.96,0.83l2.74,0.01l2.58,-1.57l0.4,-2.23l0.28,-0.25l1.67,1.56l2.59,-0.35l1.86,-0.94l2.75,1.08l4.49,-1.76l0.65,-0.68l2.04,-1.03l0.3,0.77l-1.26,3.2l-1.5,0.88l-0.38,0.64l0.16,1.04l1.54,3.11l1.82,1.95l-1.89,-0.89l-3.48,-0.03l-1.72,1.69l-0.85,2.87l0.14,1.35l1.25,1.19l-1.36,0.58l-2.57,-0.93l-0.94,0.76l1.4,3.99l3.2,1.13l-0.24,1.86l-2.09,0.07l-1.09,0.84l-0.89,1.57l-0.97,3.3l-0.65,1.22l-3.38,0.84l-3.7,0.29l-0.31,0.48l0.19,0.82l-0.36,0.94l-1.15,0.34l-1.86,1.17l-1.36,1.08l-0.7,1.17l-2.21,0.1l-1.56,1.66l-0.74,1.51l-1.8,1.25l-0.85,1.08l-2.44,1.11l-0.92,0.81l-0.38,1.52l0.65,1.23l-0.28,1.66l1.8,3.22l0.17,1.42l-0.7,3.16l-1.55,1.15l-1.78,-0.02l-2.75,2.08l-0.54,0.09l-0.33,-0.11l-0.21,-1.2l1.33,-0.71l0.37,-0.71l-1.04,-1.43l-1.34,-0.54l-3.95,0.76l-3.36,2.98l-0.34,1.18l0.48,1.14l-1.5,2.47l-6.4,1.32l-2.6,1.66l-0.53,-0.44l-6.09,-2.19l-0.72,-1.44l-2.15,-1.23l-1.37,0.3l-1.38,1.58l-3.11,-0.36l-0.36,-1.39l-1.39,-1.46l-2.62,-0.51l-2.83,0.11l-2.03,-0.68l-0.16,-0.3l0.79,-1.64l-0.28,-0.87l-5.66,-1.87l-0.8,0.4l-0.56,-0.27l-2.34,0.32l-1.7,1.02l-1.35,0.17l-0.75,-0.65l-1.66,-3.81l-1.13,-0.9l-0.61,-1.19l-4.23,-4.98l-1.29,-0.87l0.66,-0.92l-0.32,-1.19l0.98,-2.7l1.91,-2.92l-0.13,-0.62l-0.69,-0.62l-0.06,-0.69l0.34,-2.55l0.49,-0.99l3.54,-2.43l1.08,-1.27l1.84,-0.38l1.99,-1.32l0.34,-1.63l-0.41,-0.92l1.54,-1.64l2.0,-3.4l-0.03,-0.65l-0.38,-0.42l0.19,-0.76l-0.25,-0.92l-1.32,-1.6l-2.13,-0.93l-1.19,0.1l-1.44,0.69l-0.93,-0.3l-0.28,-0.37l0.5,-1.38l-0.53,-1.16l-3.13,-1.29l-0.46,-0.61l-0.22,-1.61l0.35,-0.56l1.98,0.05l1.92,-2.36l0.04,-0.8l-0.51,-0.74l0.22,-0.52l1.59,-0.81l1.24,-0.07l-0.18,1.75l0.23,1.04l1.07,0.51l0.62,-0.2l0.4,-0.53l0.76,-2.96l-0.4,-0.92l-1.24,-0.77l0.28,-0.41l6.12,2.38l2.94,-0.19l1.19,1.94l0.82,0.66l0.26,0.98l-1.9,3.16l1.3,2.37l3.78,0.76l1.06,-0.95l2.74,0.75Z\",\n            name: \"Badajoz\"\n          }\n        },\n        height: 738.0097895570743,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"europe_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 790.3360148034734,\n          bbox: [{\n            y: -9690291.808548316,\n            x: -4159652.5301950974\n          }, {\n            y: -3201145.6268246872,\n            x: 3229902.613642692\n          }],\n          left: 0\n        }],\n        paths: {\n          BE: {\n            path: \"M400.73,433.08l-0.52,-2.25l-0.56,-0.57l-4.28,-0.9l-0.52,-2.3l-0.72,-1.23l-1.11,-0.96l-1.47,0.14l-2.34,0.95l-0.92,-0.59l-2.1,-2.13l0.06,-1.42l-0.94,-2.11l5.63,-2.88l4.83,-1.89l0.35,1.28l1.0,1.0l0.79,0.0l1.32,-0.72l1.22,0.17l1.92,1.09l1.13,0.14l2.05,-0.73l1.86,-1.11l0.78,-1.23l1.7,0.4l0.63,-0.24l0.21,-0.45l-0.2,-0.84l1.02,-0.55l1.09,0.83l0.82,0.06l1.67,-1.16l0.71,1.31l0.55,0.19l1.3,-0.08l1.17,-1.0l0.54,1.83l1.68,1.4l1.62,0.43l2.18,-0.42l1.56,1.44l2.54,0.82l0.16,0.74l-0.9,1.69l-0.1,0.88l-1.21,1.21l-0.17,0.9l0.73,1.23l0.43,0.19l1.64,-0.55l0.67,0.81l1.43,0.18l1.66,1.17l1.24,1.25l-0.57,0.57l0.11,0.94l0.57,0.56l1.13,0.22l0.42,0.41l0.27,2.03l-2.32,1.34l-0.73,1.47l-2.05,-0.25l-1.48,1.5l-1.78,3.11l-0.26,2.02l2.04,2.91l-0.89,1.46l-3.56,0.48l-3.15,-2.93l-1.99,-0.73l-1.61,-1.01l-1.76,-0.23l-0.27,-1.86l-0.65,-0.86l0.89,-2.91l-0.19,-0.47l-0.91,-0.33l-0.73,0.31l-1.0,0.88l-0.65,1.57l-1.29,0.64l-2.28,0.26l-2.49,-0.26l-0.25,-0.23l0.75,-1.69l-0.73,-1.1l0.42,-1.16l-0.09,-0.82l-1.77,-1.33l-1.44,-0.33l-2.31,-0.2l-1.24,0.59Z\",\n            name: \"Belgium\"\n          },\n          FR: {\n            path: \"M467.41,568.7l0.77,-0.77l0.94,-1.92l1.23,-0.85l3.09,-0.88l1.24,-1.13l1.71,0.56l0.82,-0.34l0.45,-1.04l-0.08,-2.97l0.33,-0.92l0.66,0.38l0.24,2.71l-0.35,2.37l0.98,1.89l0.4,6.29l-2.07,3.66l-0.12,3.28l-1.87,4.27l-0.66,0.89l-3.62,-1.94l-0.93,-0.91l0.99,-1.66l-0.25,-0.45l-2.03,-0.85l0.51,-1.36l-0.22,-1.18l-0.41,-0.29l-1.25,-0.03l1.06,-1.23l0.08,-1.13l-1.58,-1.27l-0.2,-0.63l1.2,-0.8l0.16,-0.59l-0.67,-0.97l-0.55,-0.18ZM313.21,482.01l0.65,-0.84l-0.12,-0.59l-0.73,-0.41l-2.58,0.36l-1.17,-0.3l-1.49,-1.3l-1.38,0.14l-0.87,-0.45l-1.52,-0.0l-0.86,-0.67l-5.41,-1.47l-2.3,-0.18l-2.17,0.65l-0.93,-0.18l-1.64,-2.53l-2.86,-1.03l3.52,-0.98l0.83,-0.83l-0.09,-0.62l-1.43,-0.83l-1.1,-0.24l-0.48,-0.52l4.03,0.01l0.24,-0.69l-0.82,-0.75l-1.49,-0.46l-4.19,0.09l-0.42,-1.11l0.47,-1.3l2.39,-1.3l6.29,-1.5l2.69,0.22l2.0,-0.28l2.39,-0.99l1.02,-0.81l3.06,-0.46l2.9,0.82l2.77,3.22l1.41,1.17l0.45,0.04l3.24,-1.89l4.69,0.05l0.91,0.97l0.66,-0.11l1.04,-1.64l1.04,1.03l6.16,-0.4l0.3,-0.33l-0.2,-0.4l-1.32,-0.73l-1.04,-1.7l-0.24,-6.84l-3.16,-5.21l-0.74,-1.78l0.1,-1.05l3.43,0.27l2.91,-0.67l1.05,0.35l-0.06,1.26l0.44,1.82l1.68,2.19l2.38,-0.09l2.65,0.59l3.28,0.09l5.0,1.0l2.17,-0.63l1.94,-1.22l3.74,-0.81l0.55,-0.6l-0.36,-0.63l-2.1,0.17l-1.75,-0.69l-0.18,-0.57l0.93,-2.27l5.65,-2.74l4.18,-0.84l4.36,-1.56l2.29,-1.65l1.52,-2.13l0.98,-0.76l0.11,-0.58l-0.47,-0.63l0.37,-7.74l0.38,-1.32l0.77,-1.06l3.1,-1.8l7.88,-1.69l0.89,1.98l-0.23,0.88l0.24,0.64l2.37,2.44l1.4,0.75l3.42,-1.17l1.46,1.79l0.67,2.53l0.79,0.51l3.63,0.5l1.16,2.95l0.53,0.06l1.11,-0.65l2.15,0.19l1.16,0.24l1.51,1.13l-0.49,1.57l0.74,1.06l-0.73,1.84l0.74,0.77l2.77,0.32l2.61,-0.31l1.51,-0.75l0.83,-1.78l1.17,-0.81l-0.75,2.87l0.69,1.08l0.35,2.16l0.4,0.31l1.75,0.15l1.55,0.99l2.02,0.76l3.1,2.91l3.88,-0.4l0.56,0.58l2.56,1.05l1.01,-0.16l1.41,-0.77l0.66,0.06l1.34,0.7l1.53,0.18l0.9,0.74l0.57,1.33l2.4,2.92l0.83,0.07l1.34,-0.87l1.18,0.37l0.34,0.99l0.66,0.25l0.87,-0.21l1.22,0.23l3.14,-0.67l0.9,1.02l1.32,0.54l5.32,0.9l1.54,0.57l0.05,1.07l-4.07,4.38l-1.79,6.17l-1.23,2.2l-0.44,1.6l0.31,1.21l-0.19,1.55l-0.73,2.24l-0.14,1.82l0.62,1.44l-1.04,0.58l-0.92,1.45l-0.88,0.32l-1.65,0.02l-0.4,-0.65l-0.67,-0.35l-1.31,0.06l-1.26,0.7l-0.98,1.46l0.57,0.78l0.73,0.14l-4.42,4.94l-2.89,1.4l-0.65,3.28l-3.37,2.5l-1.41,3.23l0.82,1.07l-0.3,1.32l-1.75,1.33l0.3,1.45l1.86,0.05l1.53,-0.78l1.1,-1.08l0.06,-0.49l-0.55,-0.89l1.09,-0.96l1.33,-0.57l1.91,-0.11l2.26,0.34l0.17,1.45l0.39,0.63l-0.48,2.05l2.49,2.54l0.73,1.16l-2.84,1.86l-0.18,1.53l0.36,0.71l0.96,0.63l1.82,2.88l1.7,1.48l-0.9,2.31l-1.21,0.37l-1.75,1.24l-1.95,-0.12l-1.05,0.48l-0.22,0.4l0.1,0.84l0.84,0.96l0.72,1.77l0.97,0.7l2.2,0.58l0.6,1.76l-0.88,0.55l-1.6,2.79l0.62,1.54l-0.2,0.75l0.43,1.08l1.01,1.0l4.78,2.37l0.96,0.2l3.03,-0.67l0.61,0.99l-2.55,3.41l0.06,1.58l-1.05,-0.07l-0.48,0.65l-2.48,1.14l-4.33,3.66l-1.97,1.05l-0.96,1.97l-1.06,0.92l-3.53,0.96l-2.42,1.03l-1.16,-0.44l-2.87,0.05l-1.9,-1.3l-3.43,-0.8l-1.08,-1.78l-3.35,-0.43l-0.12,-1.01l-0.5,-0.38l-2.08,0.32l-0.81,0.45l-0.79,-0.06l-0.3,0.4l-0.61,0.05l-6.52,-1.74l-2.24,-1.83l-2.23,0.45l-1.85,1.74l-7.11,4.41l-2.95,4.72l-0.16,1.53l0.65,4.05l1.42,2.15l-2.56,-0.58l-1.25,0.17l-2.71,0.83l-0.83,1.03l-5.69,-1.28l-2.78,1.04l-0.81,-1.08l-2.69,-1.15l0.34,-0.96l-0.7,-0.84l-2.87,-0.64l-0.99,0.54l-0.97,-1.3l-1.99,-0.4l-6.05,-2.05l-1.12,-0.09l-0.58,0.37l-0.39,2.16l-4.75,-0.06l-0.9,-0.43l-3.17,0.48l-3.51,-2.22l-3.8,0.42l-2.47,-2.29l-2.3,-0.16l-4.56,-1.73l-0.58,-0.75l-1.12,1.09l-0.39,-0.03l-0.36,-0.23l0.9,-1.92l-0.24,-1.16l-0.96,-0.5l-3.17,-0.62l-0.85,-0.97l2.08,-0.55l2.09,-2.26l1.89,-7.6l1.35,-8.91l0.9,-1.51l1.14,-0.42l0.17,-0.63l-1.03,-1.24l-0.59,-0.03l-0.43,0.42l0.62,-6.75l1.3,-5.66l2.93,2.19l0.74,1.02l1.11,3.82l1.99,1.61l0.49,-0.04l0.08,-0.49l-1.25,-1.54l-1.22,-4.82l-0.82,-1.5l-1.35,-1.33l-4.12,-2.8l-0.07,-0.37l1.77,0.46l0.54,-0.47l-0.98,-3.09l-0.57,-6.56l-0.32,-0.32l-3.25,-0.63l-5.23,-2.74l-4.03,-5.76l0.93,-3.09l-0.86,-1.27l-1.37,-0.73l0.46,-0.73l0.44,-0.53l0.88,-0.15l3.8,0.98l0.44,-0.27l-0.2,-0.48l-3.38,-1.67l-5.06,0.54l-1.01,-0.19l-0.72,-0.28l-0.23,-0.74l1.26,-1.47l-0.06,-0.51l-0.75,-0.7l-1.25,-0.37l-2.76,0.2ZM332.31,508.2l1.88,1.81l-0.15,0.48l-1.62,-1.85l-0.11,-0.43Z\",\n            name: \"France\"\n          },\n          BG: {\n            path: \"M662.06,585.15l0.29,-3.94l0.71,-1.75l-0.05,-0.72l-0.86,-0.68l-1.48,-3.54l-0.69,-0.61l-2.8,-1.24l-2.73,-2.84l0.66,-0.27l1.35,-1.8l0.2,-0.83l-1.28,-2.51l0.35,-1.29l-0.28,-1.38l0.24,-0.54l0.99,-0.47l2.26,-0.25l3.25,-3.58l0.5,-1.6l-1.7,-1.41l-1.32,-1.73l-2.83,-1.63l-0.65,-0.92l-1.73,-4.25l-0.05,-1.22l0.63,-2.11l2.3,-1.11l0.53,-2.08l0.71,-0.5l3.99,2.37l-2.14,1.89l-0.0,1.56l1.15,0.79l4.1,-0.65l4.13,0.33l5.62,1.1l3.78,0.39l2.81,-0.5l9.82,1.78l4.63,0.26l2.69,-0.69l1.88,-0.94l1.63,-1.76l3.74,-2.22l3.65,-1.25l7.88,-1.36l4.53,2.38l3.3,0.38l0.99,0.7l1.96,-0.44l2.27,2.66l4.46,1.3l2.5,0.06l-0.28,3.44l-1.08,1.52l-1.9,-0.54l-2.52,0.52l-1.56,2.22l-1.43,1.35l-0.55,2.99l-0.1,4.22l-1.73,0.67l-3.65,3.91l0.11,0.63l2.91,1.84l3.87,5.45l-1.3,-0.19l-1.15,0.47l-1.76,-0.06l-1.68,0.63l-3.01,-2.44l-0.84,-0.32l-3.33,0.55l-1.81,1.11l-3.72,0.47l-0.64,0.45l-0.8,1.79l-2.11,0.49l-0.68,1.13l-1.29,-0.3l-1.48,0.43l-0.64,1.22l1.04,2.44l-0.05,1.85l-2.58,1.05l-1.96,-0.27l-7.03,1.36l-1.54,-1.11l-1.96,-0.82l-1.99,-0.47l-1.13,0.51l-2.12,-1.23l-0.94,-1.63l-0.73,-0.26l-1.48,0.51l-4.43,-0.06l-0.74,1.11l-1.79,0.08l-3.22,1.09l-2.63,-0.19l-2.7,0.22l-1.27,1.01l-2.52,-0.16Z\",\n            name: \"Bulgaria\"\n          },\n          DK: {\n            path: \"M554.98,347.03l-0.27,0.17l-2.03,-0.48l-2.42,-1.16l0.34,-2.19l0.45,-0.72l4.46,2.58l0.04,0.75l-0.57,1.04ZM521.14,336.77l-0.22,-0.59l0.73,-0.83l0.32,0.89l-0.83,0.53ZM520.72,332.89l0.03,1.74l-0.25,0.39l-3.02,1.28l-1.05,0.95l-0.5,1.54l0.9,1.36l1.45,0.59l0.29,1.42l-0.97,0.73l-3.08,0.91l-0.28,0.33l-0.5,6.78l-2.01,0.63l-1.43,-2.33l-0.04,-1.11l-1.16,-4.03l-2.77,-0.74l-2.34,0.21l-1.42,-2.13l0.24,-2.46l-0.86,-1.5l-0.07,-1.09l-0.84,-0.87l-0.75,-0.28l-0.25,-0.91l2.9,-0.04l1.44,-0.44l2.06,-2.53l0.15,-1.11l1.62,-0.2l0.65,0.66l-0.05,3.29l0.25,0.34l1.84,0.62l0.44,-0.26l0.83,-1.98l0.58,-0.6l0.15,-1.49l-0.66,-1.19l4.25,-2.53l1.27,-0.06l3.23,1.02l0.2,0.29l-1.04,2.06l0.58,2.72ZM517.34,347.25l1.62,0.28l1.26,0.71l-1.94,-0.19l-2.4,1.26l-0.36,-0.17l1.82,-1.88ZM504.49,350.08l2.48,1.22l1.72,-0.02l0.86,0.38l0.26,1.85l-0.8,0.33l-1.36,-0.13l-1.59,0.57l-5.33,-2.52l0.22,-2.53l2.27,-0.18l1.27,1.03ZM500.25,304.31l-0.34,0.28l-1.08,-0.37l0.33,-0.36l1.93,-0.37l-0.83,0.82ZM495.95,352.06l-0.81,-1.41l2.94,-3.53l-1.8,4.22l-0.33,0.72ZM468.61,349.15l-0.42,-2.39l-0.69,-1.33l0.85,-0.26l0.28,-0.41l-0.25,-3.27l-0.49,-1.78l-6.52,-3.55l0.92,-7.01l-1.09,-3.15l0.55,-8.59l1.14,-0.12l3.56,1.07l0.64,0.76l1.02,0.47l0.49,-0.15l0.69,-1.1l0.23,-1.47l1.93,-1.94l2.11,-1.0l1.52,1.58l0.43,0.13l0.28,-0.35l0.79,-5.97l-0.27,-0.44l-1.96,-0.62l-1.84,0.54l-1.79,2.66l-1.35,2.98l-2.07,0.26l-1.77,0.83l-2.33,-1.48l0.18,-1.51l1.88,-2.48l2.46,-2.33l2.46,0.02l2.01,-0.79l1.05,-0.09l3.53,0.17l2.07,-0.61l1.73,-1.22l3.52,-4.77l1.89,-1.89l4.04,-0.74l3.41,-2.12l-0.98,1.01l-0.52,1.77l1.23,2.37l-0.16,3.79l-1.14,1.36l-1.29,2.84l-0.65,0.68l-0.18,7.31l1.5,1.58l1.55,0.73l4.81,0.01l0.84,1.17l-0.84,2.52l-2.95,1.65l-0.87,0.03l-1.4,-1.34l-0.5,-0.05l-0.79,0.52l-0.85,0.91l-1.81,6.51l-1.88,-0.35l-1.7,0.66l-0.08,0.69l1.36,1.25l-1.46,0.7l-1.73,1.9l-1.54,1.01l-0.95,1.22l0.98,4.54l-0.31,0.95l-1.8,1.6l-0.79,1.57l0.37,0.57l1.54,-0.02l1.37,0.66l0.38,0.38l-0.27,0.76l0.33,1.37l-1.23,-0.49l-3.7,0.92l-0.99,-0.03l-0.97,-0.68l-3.84,-0.98l-2.88,-0.13ZM494.78,336.56l2.16,5.08l-0.38,0.82l0.26,1.43l-0.26,1.07l-1.97,1.37l-2.27,0.06l-5.9,-2.06l-1.67,-3.44l0.02,-2.6l5.4,-1.72l1.83,0.94l1.1,0.04l1.67,-1.0ZM494.14,332.71l-0.34,-0.12l0.24,-1.95l-0.31,-1.07l1.07,1.5l-0.65,1.64ZM490.96,349.9l0.79,0.15l0.49,0.27l-0.27,0.06l-1.01,-0.48ZM483.63,346.94l2.33,1.33l0.69,1.28l-0.87,0.16l-1.78,-0.57l-0.36,-2.2Z\",\n            name: \"Denmark\"\n          },\n          HR: {\n            path: \"M540.52,517.06l1.22,0.46l4.0,-0.1l0.92,-0.53l1.59,-2.35l0.82,1.3l2.12,1.67l1.03,0.14l1.21,-0.48l2.01,0.79l1.9,0.18l1.48,-0.45l0.26,-0.49l-0.74,-1.79l0.98,-1.18l-0.98,-1.19l4.32,-1.54l0.65,-0.75l0.33,-2.14l-0.13,-1.17l-0.95,-1.16l0.13,-0.69l0.25,-0.33l4.9,-1.78l0.95,-1.14l2.19,-0.05l0.5,-0.65l-0.2,-1.45l0.85,-0.55l3.1,0.8l2.36,1.14l1.59,1.24l0.96,1.48l1.26,1.13l2.81,1.85l1.03,1.44l1.3,0.76l2.64,0.6l1.39,1.47l1.44,0.67l7.73,0.66l2.52,-0.79l1.72,-1.78l2.6,-0.25l-0.75,1.25l1.37,2.81l-0.3,1.16l0.68,0.87l0.9,0.34l-0.43,0.82l0.1,1.43l1.31,1.12l3.14,1.15l0.78,0.85l-2.14,0.07l-0.85,-0.44l-0.57,0.26l-0.1,0.53l-0.62,0.17l-0.29,0.46l0.49,2.66l-0.15,0.57l-0.99,0.12l-0.22,0.72l-0.35,0.03l-1.74,-0.65l-0.59,-1.84l-1.46,-1.06l-2.32,-0.14l-2.74,-0.81l-2.1,0.23l-1.83,-0.36l-1.83,1.07l-0.59,-0.01l-1.56,-1.26l-0.68,-0.17l-2.04,0.71l-2.45,-0.72l-2.59,-0.11l-2.75,-1.72l-0.46,0.02l-1.61,1.24l-3.67,-0.22l-3.04,3.34l-1.49,-0.9l-1.72,-1.94l-1.03,-0.46l-1.26,-0.1l-1.52,0.7l-0.82,5.66l0.14,1.89l1.92,1.38l2.27,2.38l0.73,0.32l1.41,4.88l1.26,1.68l3.93,3.5l1.7,2.26l5.03,4.33l2.43,1.02l0.02,1.54l0.34,0.88l1.53,1.81l2.97,2.53l0.33,0.71l-0.53,0.3l-3.22,-2.75l-2.74,-1.61l-3.2,-3.05l-4.08,-1.17l-2.77,-1.3l-3.78,0.58l-1.68,-0.17l-0.41,-0.57l-0.18,-1.66l-5.98,-4.16l-4.2,-4.32l-0.57,-0.94l1.66,-0.36l2.37,0.27l0.45,-0.22l-0.12,-0.48l-2.73,-1.86l-3.85,-3.6l-1.08,-1.61l0.16,-4.25l-0.73,-2.03l-4.37,-3.88l-2.23,-0.75l-1.46,0.24l-0.65,1.06l-0.42,1.98l-3.52,5.22l-0.94,-0.0l-3.02,-4.37l-1.43,-5.94l0.28,-0.2l0.5,0.51l3.57,0.82l1.03,-0.39l0.69,-0.9ZM587.09,559.57l2.86,1.2l-0.65,-0.13l-2.2,-1.07ZM591.3,561.05l-0.27,-0.82l0.24,-0.07l0.56,0.15l0.73,1.02l-1.27,-0.27ZM599.03,565.39l1.29,0.47l0.05,0.42l-0.83,-0.52l-0.5,-0.37ZM574.06,555.07l2.29,0.14l0.72,0.66l0.72,0.07l-0.88,-0.02l-1.68,-0.33l-1.18,-0.53ZM577.19,558.94l1.74,0.32l1.9,-0.2l1.59,0.28l-1.61,-0.19l-1.63,0.5l-1.35,-0.25l-0.64,-0.46ZM578.24,553.5l-2.04,0.04l-2.36,-0.62l0.18,-0.53l1.76,0.07l3.32,0.71l-0.86,0.32ZM552.42,532.01l1.48,1.22l2.64,2.63l-0.28,0.25l-3.01,-2.61l-0.83,-1.49ZM551.01,528.89l-1.01,-0.23l0.11,-0.55l0.35,0.02l0.55,0.76ZM547.01,523.61l0.87,-0.6l0.52,-0.96l2.47,3.21l-0.92,0.2l-1.06,-1.14l-1.25,-0.15l-0.64,-0.56ZM545.04,522.83l0.07,0.67l-0.21,-0.6l0.14,-0.08ZM545.55,524.84l0.91,0.95l-0.18,1.58l0.44,3.22l-1.56,-3.9l0.39,-1.86Z\",\n            name: \"Croatia\"\n          },\n          DE: {\n            path: \"M430.54,420.84l0.92,-0.06l2.69,-2.09l-0.09,-0.78l-0.62,-0.26l-0.01,-0.35l1.2,-2.32l0.46,-1.8l-0.14,-0.96l-1.33,-1.91l-0.18,-0.88l-1.75,-2.06l0.0,-0.39l2.55,-1.2l2.73,0.97l0.9,-0.57l1.27,0.05l3.04,-1.03l1.09,-1.59l-1.19,-1.26l0.08,-0.38l3.33,-2.18l0.69,-1.23l0.26,-2.25l-0.57,-1.0l-0.78,-0.57l-1.72,0.03l-0.99,-0.34l-0.56,-0.77l0.32,-0.81l-0.14,-0.63l0.26,-0.15l3.48,0.01l0.58,-0.47l1.2,-4.4l0.87,-1.53l0.25,-5.88l-0.69,-1.09l-1.23,-0.85l0.66,-2.97l1.24,-1.67l0.91,-0.42l4.57,-0.29l4.95,0.12l1.86,2.37l-0.66,1.17l0.16,0.55l1.25,0.65l0.93,-0.22l1.1,-2.84l1.71,1.34l0.03,2.08l0.36,0.39l0.43,-0.32l0.59,-3.01l-0.42,-2.2l0.28,-1.9l0.99,-1.44l3.67,0.69l4.06,-0.37l1.41,0.7l3.63,3.98l1.33,0.69l1.5,0.2l0.44,-0.29l-0.24,-0.47l-1.99,-0.81l-4.4,-4.83l-1.43,-0.63l-1.94,-0.18l-1.77,-1.03l-0.25,-5.57l-0.75,-0.72l-1.14,-0.35l-1.62,0.32l-0.16,-0.68l0.18,-0.5l2.27,-0.51l1.72,-0.78l0.31,-1.67l-3.74,-4.94l-0.12,-1.54l2.65,0.11l3.74,0.96l1.1,0.72l1.31,0.02l3.51,-0.89l1.75,0.87l1.88,0.47l1.57,1.79l0.07,1.44l-2.01,1.88l-0.12,0.46l0.4,0.25l3.46,-0.28l0.85,1.3l0.43,0.15l1.87,-0.51l4.9,2.22l3.72,-1.12l0.53,1.41l-0.65,1.61l-2.59,1.91l-0.12,0.5l0.59,1.22l1.1,0.48l2.61,-0.23l4.21,1.16l0.93,-0.43l3.21,-2.73l1.19,-0.54l4.49,-0.58l0.73,-1.01l1.74,-1.1l3.62,-3.29l5.8,1.01l1.62,2.36l4.08,2.65l3.73,-0.15l1.18,2.22l0.71,3.25l2.21,1.63l3.05,0.68l0.48,2.97l1.56,5.02l-0.04,1.42l-0.54,1.61l-0.94,1.33l-1.28,0.77l-0.85,1.0l-0.23,1.2l1.81,2.09l3.53,2.51l1.27,1.91l-0.81,3.15l0.34,0.97l1.43,1.19l0.26,2.35l0.57,0.56l-0.95,2.89l-1.01,1.59l0.34,1.21l1.36,1.97l-0.22,1.81l0.22,0.65l2.57,1.24l1.33,3.49l-1.29,4.18l-1.87,3.2l-1.46,-0.48l0.11,-0.81l-1.26,-1.82l-3.37,-0.82l-0.7,0.29l-0.4,0.92l1.31,1.41l-5.96,2.33l-2.6,0.78l-2.07,0.25l-1.5,1.77l-0.94,-0.31l-2.04,0.96l-0.67,1.03l-2.06,0.33l-0.98,1.46l-2.31,-0.41l-3.18,0.72l-1.4,0.85l-2.01,2.57l-1.77,-1.93l-0.72,-0.08l-0.44,0.32l-0.04,1.02l1.14,1.65l0.52,1.47l1.03,1.06l2.35,1.46l0.63,0.91l-1.61,2.81l1.52,1.82l2.46,3.98l1.87,1.57l1.49,0.06l2.95,2.95l2.61,1.64l0.92,1.52l0.79,0.46l1.3,-0.06l3.29,3.0l-0.16,2.44l-0.83,1.09l-0.5,0.23l-2.76,-0.87l-0.49,0.51l-0.66,2.87l-0.38,0.46l-6.37,2.67l-1.17,0.77l-0.83,1.02l-0.01,1.03l2.54,3.11l0.01,1.18l-0.74,1.46l0.24,0.51l1.68,0.35l0.18,0.48l-0.4,2.61l-2.26,-1.03l-0.43,-1.57l-1.34,-0.68l-2.77,0.52l-1.62,-0.86l-2.11,-0.53l-0.57,0.25l-0.13,1.46l-6.22,0.61l-4.4,1.66l-1.31,1.07l-1.45,0.0l-1.91,0.52l-0.6,-0.06l-1.66,-2.12l-5.79,-0.52l-0.56,0.34l-0.83,3.01l-0.69,0.81l-1.08,0.46l0.2,-0.9l-0.26,-0.48l-1.5,-0.34l-0.22,-1.01l-1.29,-1.05l-3.11,-1.25l-0.84,0.49l-7.44,-4.01l-0.69,0.18l-0.13,0.52l0.63,1.16l-3.25,0.23l-0.69,-0.77l-0.81,-0.23l-0.59,0.27l-1.41,-1.07l-0.93,-0.24l-2.0,0.82l-0.58,0.89l0.1,0.75l0.97,0.47l-0.22,0.19l-3.28,-0.22l-1.51,0.54l-2.18,0.2l-3.02,-0.1l-1.57,-0.55l-0.38,-0.91l0.11,-1.58l0.74,-2.31l0.21,-1.68l-0.31,-1.12l0.4,-1.44l1.21,-2.16l1.76,-6.1l4.05,-4.32l0.04,-1.82l-0.29,-0.36l-1.85,-0.66l-5.27,-0.89l-1.02,-0.38l-1.24,-1.21l-3.4,0.67l-2.1,-0.1l-0.44,-1.02l-1.73,-0.51l-1.82,0.86l-2.04,-2.62l-0.66,-1.44l-1.19,-0.93l-1.22,-0.27l0.41,-1.96l1.46,-1.99l0.04,-1.7l-3.27,-1.56l-1.51,-1.71l-0.36,-1.88l0.82,-2.22l2.46,-1.42l0.19,-0.42l-0.31,-2.35l-0.75,-0.87l-1.5,-0.57l0.7,-0.84l-0.06,-0.62l-3.08,-2.45l0.64,-2.95l-0.69,-0.92l-1.76,-0.94ZM538.5,364.74l4.43,2.81l-0.02,0.85l-1.71,0.2l-1.36,-0.24l-0.07,-2.1l-1.21,-1.13l-0.06,-0.38ZM536.24,359.59l0.19,1.05l-1.4,-0.89l-1.53,0.01l-1.16,1.66l-0.34,0.03l-2.16,-1.36l-0.36,-1.05l0.29,-2.61l0.72,-0.83l0.1,-0.88l1.09,-0.91l0.75,-0.03l0.89,1.43l2.04,0.8l0.23,0.34l-1.13,1.59l0.47,0.93l1.31,0.71ZM503.18,358.26l-1.43,0.03l-1.18,-0.81l0.48,-0.55l1.69,0.5l0.45,0.83ZM463.5,350.42l0.29,-1.31l0.49,0.91l0.99,0.04l-1.77,0.36ZM466.66,353.0l-0.22,0.19l-1.35,-0.23l0.93,-0.31l0.63,0.36Z\",\n            name: \"Germany\"\n          },\n          BA: {\n            path: \"M608.48,527.74l3.07,-0.74l1.2,0.42l-0.79,2.63l-1.93,2.88l-0.46,3.03l0.51,1.08l2.62,1.37l3.17,2.88l-0.23,0.39l-1.2,0.13l-2.07,-0.23l-0.97,0.56l0.15,0.91l3.04,3.85l0.08,0.83l-0.38,0.94l-1.06,-0.49l-0.81,0.03l-0.9,0.24l-0.68,0.71l-1.4,0.25l-1.35,-0.37l-0.66,0.34l-0.25,0.99l1.25,2.21l-0.08,0.64l-0.78,-0.82l-1.48,-0.05l-2.53,2.08l-0.73,1.8l0.01,1.34l-1.64,0.26l-0.76,0.89l0.27,3.36l1.07,2.1l-1.07,0.99l-1.63,-0.59l-2.39,-1.46l-3.77,-2.5l-0.73,-1.04l-2.18,-0.15l0.47,-0.54l-0.1,-0.84l-4.84,-4.93l-0.31,-2.37l-0.52,-0.52l-2.14,-0.74l-4.93,-4.25l-1.71,-2.26l-3.91,-3.48l-1.1,-1.42l-1.51,-5.08l-0.87,-0.45l-2.23,-2.34l-1.83,-1.33l0.67,-6.52l0.28,-0.24l0.73,-0.18l1.63,0.37l1.74,1.95l1.96,1.12l1.37,-0.9l2.12,-2.55l3.36,0.32l1.8,-1.25l2.69,1.66l1.16,0.26l1.55,-0.13l2.52,0.74l2.08,-0.71l2.1,1.42l1.04,-0.04l1.55,-1.0l1.73,0.34l2.04,-0.24l2.68,0.79l2.34,0.15l0.97,0.73l0.49,1.68l0.79,0.76l2.6,0.32Z\",\n            name: \"Bosnia and Herz.\"\n          },\n          HU: {\n            path: \"M574.1,479.74l1.55,-0.97l2.58,1.22l3.97,-0.49l0.32,-0.51l-0.38,-2.54l0.54,-0.63l0.13,-0.94l0.82,-0.63l1.72,0.33l4.27,3.09l1.92,0.75l5.23,0.12l7.85,-0.41l1.05,-1.32l-0.32,-1.6l0.46,-0.86l1.48,-0.78l4.68,-0.38l2.8,-0.66l1.42,-1.79l0.61,-0.13l3.87,1.55l5.93,-2.86l2.25,-4.04l1.81,-0.35l2.94,0.07l2.8,0.69l5.06,-0.81l1.4,0.91l2.13,2.58l0.79,0.23l6.37,-1.27l1.33,2.56l2.34,0.93l0.97,1.3l1.37,0.54l1.12,-0.08l0.79,0.7l0.31,1.75l-3.23,2.7l-1.51,-0.12l-2.92,0.86l-2.41,2.67l-1.56,1.19l-0.16,1.98l-1.62,1.48l-1.18,2.9l-1.73,1.75l-0.13,1.34l-2.12,2.95l-0.24,0.62l0.18,0.84l-2.28,1.58l-0.95,2.12l0.13,1.13l-0.95,0.47l-0.52,1.42l-1.26,0.86l-2.62,-0.28l-1.17,0.24l-0.9,1.34l-0.99,0.54l-1.52,-0.54l-3.55,0.89l-1.03,-0.47l-3.08,-0.33l-1.29,0.26l-3.03,-0.39l-1.28,0.24l-1.63,1.6l-1.88,1.0l-1.5,0.24l-1.07,-0.47l-1.04,0.98l-1.05,0.42l-2.71,0.54l-0.7,-0.13l-2.05,1.92l-2.19,0.68l-7.36,-0.61l-2.08,-1.2l-0.59,-0.87l-1.18,-0.5l-1.58,-0.16l-1.15,-0.67l-0.95,-1.37l-4.05,-2.96l-0.99,-1.51l-1.75,-1.36l-3.01,-1.38l-1.73,-2.2l-0.02,-0.77l-0.66,-0.74l-0.73,-2.3l-1.88,-0.24l2.28,-1.61l1.33,0.05l0.62,-0.39l0.55,-2.05l-0.16,-0.54l-0.64,-0.29l-0.2,-0.91l0.58,-1.02l-0.33,-1.71l2.32,-0.86l0.87,-1.68l-0.74,-1.83l-2.35,-0.68Z\",\n            name: \"Hungary\"\n          },\n          JE: {\n            path: \"M322.87,452.86l-0.06,0.38l-0.56,-0.27l-1.49,0.09l0.08,-0.64l2.02,0.44Z\",\n            name: \"Jersey\"\n          },\n          FI: {\n            path: \"M642.77,218.25l1.12,-0.27l0.17,-0.8l-3.01,-6.76l-1.66,-1.51l1.26,-4.66l-0.13,-1.29l-0.44,-1.65l-2.0,-1.41l-0.81,-4.2l0.5,-2.29l0.65,-0.99l3.52,-3.35l0.3,-1.68l2.07,-0.11l0.31,-0.63l-1.08,-1.53l-0.27,-1.43l3.0,-0.62l1.43,0.56l3.05,-0.72l2.8,-1.45l0.17,-1.13l-0.91,-1.85l1.24,0.03l-0.36,-1.06l1.03,0.05l1.76,-1.91l0.16,-1.42l2.91,-0.77l3.47,-2.96l3.21,-1.64l3.23,-2.9l1.63,-0.39l0.7,-1.93l2.7,-2.58l0.99,-0.5l1.28,-2.37l3.5,-2.87l2.18,-3.57l1.19,-1.25l0.4,-1.27l1.07,-0.09l1.37,-1.04l2.49,-0.66l2.47,0.18l1.24,0.48l1.0,-0.15l0.34,-0.43l-0.1,-1.23l-0.59,-0.75l1.83,-1.31l-0.47,-2.07l-1.07,-0.98l1.19,-7.23l-1.66,-1.93l-5.46,-2.54l-2.15,-0.22l-1.08,-1.64l0.59,-2.18l-0.41,-0.44l-0.76,0.14l-0.76,0.77l-1.54,0.82l-2.1,-0.66l-0.96,0.1l-1.35,-3.86l-1.94,-3.6l-2.51,-1.5l-0.6,-3.55l0.1,-1.33l0.2,-0.66l0.88,-0.57l1.4,-1.77l0.39,-2.96l1.27,-2.55l-0.7,-1.67l-3.55,-4.29l-0.46,-1.32l-0.2,-2.19l1.99,-2.12l-0.54,-2.44l-1.32,-0.69l-2.46,-0.23l0.14,-1.03l1.05,-2.32l-0.56,-2.01l0.01,-3.87l1.64,-1.24l0.06,-1.15l-2.2,-1.44l-1.54,-1.59l-0.47,-0.92l-1.92,-0.34l-1.17,-2.76l-3.36,-2.61l-1.06,-0.59l-5.7,-1.72l-2.28,-0.33l-2.6,-0.97l-7.13,-3.97l-0.62,-0.81l-3.28,-2.49l-3.42,-1.76l-0.17,-1.37l-0.37,-0.48l-3.13,-1.15l2.86,-0.25l2.65,0.65l0.68,-0.47l0.33,-0.96l-0.97,-2.39l0.11,-0.4l2.45,-1.26l4.54,0.04l9.08,9.74l1.07,1.8l0.37,1.29l0.39,0.29l8.8,1.06l1.17,0.77l2.44,-0.15l5.27,-1.54l2.05,-2.15l1.69,0.15l4.54,2.05l4.94,1.36l1.47,1.13l2.14,0.27l2.15,-1.3l1.14,-2.92l0.96,-1.23l1.35,-0.9l3.04,-0.64l2.41,-2.51l0.36,-2.25l-0.26,-3.73l0.23,-1.11l1.13,-2.04l1.5,-5.3l0.64,-1.46l0.73,-0.83l3.2,-2.19l2.92,-3.19l2.69,-0.38l5.31,0.64l3.11,-1.34l3.28,-1.98l2.0,-0.52l1.71,0.07l2.06,2.1l4.99,3.64l5.33,2.23l4.51,1.41l2.41,4.42l-1.13,1.66l-2.89,2.52l-2.42,2.65l-0.24,1.85l1.38,1.94l-6.81,2.58l-0.22,0.62l0.84,0.92l3.36,0.16l0.61,0.39l0.04,0.39l-0.3,0.87l-3.67,5.48l-0.16,1.52l2.92,7.03l9.06,3.17l2.4,3.03l4.03,4.07l2.13,1.71l-0.59,2.59l-4.94,5.07l-4.47,5.24l-2.13,2.89l-0.36,2.03l0.45,1.23l2.7,3.48l2.31,3.68l2.8,5.79l3.13,4.14l2.47,6.75l0.12,1.92l-2.63,0.33l-2.15,0.65l-0.35,0.42l0.09,0.48l1.16,1.03l-1.13,2.01l-0.17,2.9l-1.24,1.49l-0.21,0.7l0.62,0.87l2.25,0.39l0.09,0.91l-0.16,0.59l-2.59,1.65l-0.27,1.72l1.38,2.88l1.19,1.01l3.95,0.91l0.37,0.52l0.12,1.59l-1.73,1.8l-0.07,1.16l1.84,3.66l3.8,1.8l1.2,0.91l0.47,1.84l-0.02,1.31l-0.27,1.1l-3.85,4.54l-2.72,1.17l-0.31,0.89l5.84,5.02l7.58,4.38l2.72,1.92l2.09,2.95l2.32,2.38l0.27,1.15l-3.32,6.63l-1.3,1.77l-3.37,3.29l-5.05,4.15l-11.85,12.11l-2.68,2.11l-3.26,3.24l-6.92,4.7l-1.08,1.18l-3.43,2.16l-8.21,7.34l-1.68,0.75l-1.87,0.16l-0.84,0.47l-3.55,-1.54l-1.89,0.43l-1.61,1.04l-3.07,0.33l-2.14,0.65l0.29,-1.94l0.65,-0.96l0.13,-0.85l-0.45,-0.43l-0.5,0.07l-1.28,1.66l-0.55,1.73l-0.89,0.73l-2.1,0.32l-2.16,-1.32l-1.3,-0.04l-0.33,0.63l1.05,2.05l-1.03,-0.03l-2.52,1.57l-0.89,-1.14l-0.5,-0.16l-2.71,1.45l-2.64,0.33l-1.46,1.06l-7.46,1.6l-1.27,1.45l-0.76,0.39l-1.42,-0.39l-8.4,1.55l-3.69,-0.35l-3.8,2.83l-1.98,0.53l2.58,-2.49l0.22,-1.21l-0.2,-0.4l-1.63,-0.55l-1.02,-0.91l-1.36,-2.4l-1.04,0.08l-0.67,2.35l-0.77,0.71l-1.25,0.53l-2.16,-0.02l-0.21,-0.77l0.41,-1.08l-0.13,-0.82l1.1,-0.12l0.67,-0.88l-0.37,-0.93l-0.65,-0.1l0.93,-1.94l-0.28,-0.49l-4.43,-0.42l-4.34,-2.0l-0.96,-0.12l-0.58,-1.58l-0.46,-0.25l-1.2,0.29l-1.32,0.91l-2.1,-1.16l-0.93,-7.31l0.22,-1.74l1.36,-2.29l0.49,-2.36l0.11,-2.75l-0.24,-1.14l0.43,0.0l0.38,-0.53l-0.76,-1.2ZM687.44,144.29l-1.79,0.65l-1.22,-0.34l-0.02,-0.9l0.76,-0.51l1.66,-0.25l1.7,0.47l-1.08,0.89ZM651.46,242.91l1.58,0.43l0.67,-0.11l0.37,0.48l-1.17,0.78l-0.1,0.84l0.63,0.93l-0.71,-0.0l-0.85,-1.35l-1.17,-0.85l0.4,-0.98l0.37,-0.17ZM646.99,242.06l0.23,-0.82l0.48,0.41l-0.15,0.7l0.64,0.51l-1.2,-0.79ZM646.46,246.89l-1.07,0.55l-0.05,-0.02l0.08,-0.67l0.56,-0.37l0.66,-0.03l-0.18,0.54ZM643.72,247.48l-0.79,0.13l-0.32,-0.25l1.18,-0.39l-0.07,0.51ZM641.16,239.43l-0.07,0.33l-1.37,0.07l-0.55,-0.69l-0.31,-1.48l2.3,1.77ZM638.04,182.53l0.17,0.59l0.43,0.26l0.96,-0.17l0.89,-0.6l0.27,0.45l-0.56,-0.04l-1.2,1.04l-1.18,-0.84l-0.53,-1.0l0.8,-0.0l-0.05,0.32Z\",\n            name: \"Finland\"\n          },\n          BY: {\n            path: \"M670.47,410.28l-0.13,-0.27l0.06,-1.46l1.09,-1.97l-0.23,-1.17l0.56,-1.59l0.0,-1.53l-0.91,-1.32l-1.93,-1.22l-3.4,-1.52l-0.13,-0.47l3.0,-3.66l5.77,-2.64l0.89,-0.8l0.33,-2.39l-0.79,-5.49l-3.54,-9.02l-1.36,-5.56l2.79,0.28l1.97,-0.44l4.12,-0.26l1.99,1.03l4.06,-1.59l1.9,0.09l0.64,-0.62l0.52,-2.25l0.36,-0.3l2.44,0.18l1.03,-0.51l0.87,-1.04l1.25,-0.61l1.3,-0.06l0.98,-0.62l0.5,0.91l-0.32,0.99l0.36,0.45l1.01,0.4l2.51,-0.34l0.49,-0.81l-0.35,-1.77l-0.8,-0.73l-1.79,-0.35l0.92,-2.21l1.46,-2.06l-0.02,-2.89l0.75,-2.06l0.97,-1.47l2.97,-0.75l1.28,-0.84l1.11,-2.33l0.33,-0.17l4.09,0.17l1.26,-1.87l1.39,-0.94l0.08,-0.49l-0.47,-0.58l-3.74,-0.67l1.4,-3.61l0.38,-2.21l2.87,-0.65l1.83,-1.99l1.15,-0.29l3.4,0.5l3.99,-0.04l0.92,-2.18l3.35,-3.06l1.75,-1.04l1.25,-0.18l1.76,1.58l0.64,0.16l1.24,-0.67l2.07,-0.07l0.81,0.47l1.37,1.98l0.92,0.38l3.4,-1.49l3.19,1.0l1.29,0.81l-0.51,2.56l1.82,1.98l0.47,0.03l2.62,-1.56l1.96,-0.52l1.42,-0.92l3.92,-0.0l2.83,1.04l2.24,2.21l1.47,0.96l2.03,0.41l0.22,0.33l-0.08,3.01l-1.07,1.29l-0.11,1.14l1.99,2.8l0.22,1.35l-1.98,2.56l-0.54,2.11l0.11,0.59l4.8,3.05l-1.06,2.24l0.22,0.44l1.4,0.68l1.5,2.95l1.42,1.79l5.69,3.04l-0.04,1.47l-0.94,2.24l0.22,0.54l1.06,0.37l5.02,0.19l3.1,1.5l-0.32,1.27l0.64,1.39l3.16,2.26l0.01,1.08l-3.01,1.21l-0.7,1.17l-3.65,2.08l-3.72,-0.26l-1.43,-1.43l-1.18,-0.32l-3.43,0.09l-0.75,0.46l-1.71,3.0l0.04,0.52l4.03,4.54l-0.61,1.04l0.17,1.42l0.95,1.23l-0.33,4.38l1.6,1.88l0.82,1.53l-5.16,-0.05l-1.77,0.96l-1.99,-0.42l-1.46,0.63l-3.05,2.73l-1.29,1.6l-1.83,3.95l1.26,4.37l-0.98,1.32l-0.92,-0.12l-1.36,-0.8l-0.44,-1.39l-2.23,-1.49l-8.28,0.78l-2.69,0.89l-2.12,-3.38l-0.52,-0.66l-0.8,-0.34l-0.77,0.12l-1.1,0.93l-1.76,0.6l-0.87,0.66l-0.7,1.15l-0.62,-0.26l-0.83,-1.64l-5.66,-1.19l-2.43,0.84l-2.32,-0.52l-1.82,1.98l0.15,-1.24l-0.24,-0.41l-1.34,-0.56l-4.0,0.09l-2.18,-2.8l-5.0,-0.34l-4.26,-0.76l-0.91,-0.58l-8.26,-1.44l-9.81,-0.12l-2.74,0.57l-6.86,0.57l-0.74,0.64l-0.63,1.19l-2.0,1.92l-1.94,1.27l-1.28,-0.61l-2.2,-0.32l-1.06,0.29l-0.7,0.7Z\",\n            name: \"Belarus\"\n          },\n          GR: {\n            path: \"M728.08,670.66l-0.79,0.26l-0.27,-0.39l0.51,-1.56l-0.52,-1.53l2.47,-2.52l3.7,-1.26l-1.12,2.79l-1.0,1.2l0.08,0.93l-1.45,0.33l-1.59,1.75ZM727.96,660.69l0.31,-0.19l-0.05,0.46l-0.26,-0.27ZM717.45,657.54l2.45,-1.2l0.79,0.06l-1.92,1.05l-1.31,0.09ZM718.65,675.52l0.9,2.17l-0.84,0.63l0.1,-1.01l-0.53,-1.15l0.37,-0.64ZM711.88,642.87l1.58,-0.77l0.98,-0.02l2.64,0.58l0.06,0.28l-2.41,0.93l-1.62,-0.93l-1.23,-0.07ZM716.41,654.11l0.54,0.48l-0.03,0.04l-0.63,0.1l0.12,-0.63ZM708.43,617.81l-0.05,1.13l1.83,1.52l0.65,1.19l-0.81,-0.3l-0.49,0.49l0.43,0.99l-0.37,0.12l-3.89,-0.79l-0.36,-0.44l1.99,-1.7l-0.34,-0.63l-1.6,0.18l-1.24,1.38l-1.92,-0.59l-0.59,-0.58l0.65,-1.02l1.36,0.04l0.99,-0.34l1.05,-0.45l0.25,-0.65l1.92,-0.12l0.56,0.56ZM623.87,612.82l0.81,0.1l0.84,-0.47l0.47,-0.56l0.3,-1.23l0.8,-0.02l0.42,-0.51l-0.08,-0.84l-0.89,-1.74l1.18,-1.04l2.5,-0.46l0.86,-0.63l2.04,-5.25l1.85,-0.75l0.87,-1.26l0.46,-1.74l-1.01,-1.95l0.07,-0.75l4.52,-0.26l1.17,-0.64l2.45,0.55l2.71,-1.28l2.13,-2.58l0.71,-0.31l2.57,-0.43l4.21,0.63l3.19,-0.98l0.81,-2.47l4.88,0.17l1.31,-1.02l5.3,-0.03l3.31,-1.11l1.87,-0.11l0.72,-1.05l4.19,0.07l1.53,-0.5l1.02,1.67l2.5,1.47l1.25,-0.53l1.82,0.43l3.69,1.98l7.19,-1.39l1.97,0.27l2.96,-1.23l0.46,-1.18l-0.61,-2.89l-0.57,-0.89l0.35,-0.54l1.04,-0.24l2.68,0.72l2.17,1.52l0.5,2.84l-0.19,0.48l-0.81,0.19l-2.79,1.69l-0.26,1.91l0.38,2.25l-3.16,3.73l-0.56,0.18l-0.34,-0.5l-2.25,-1.26l-4.82,-0.7l-2.28,-0.88l-1.1,0.12l-2.16,-0.96l-1.44,0.48l-2.75,1.7l-1.32,-0.16l-1.58,-1.02l-1.46,-0.22l-1.39,0.65l-1.98,1.99l-1.88,0.91l-1.8,-0.37l-2.49,0.01l-0.39,0.31l-0.22,1.44l1.67,1.98l-0.49,1.12l0.47,1.01l0.99,0.39l-1.39,-0.11l-1.3,0.61l-0.33,1.0l1.52,1.65l1.88,1.38l0.37,1.18l-0.35,0.48l-1.18,-0.71l-2.27,-3.16l-3.48,-0.8l-0.39,0.14l-0.6,1.06l0.63,1.71l0.62,0.86l2.45,1.61l-2.93,-0.93l-0.8,-1.4l-0.43,-2.26l-5.5,-2.86l-0.45,-1.08l0.86,-1.57l-0.43,-0.54l-1.68,0.27l-2.63,1.64l0.16,2.07l-0.97,3.91l0.31,1.49l3.35,3.9l1.1,2.68l0.87,1.13l1.73,1.2l1.71,2.07l0.7,1.04l0.44,1.49l-1.17,0.88l-0.56,0.03l0.43,-1.37l-0.31,-1.06l-2.29,-1.17l-1.38,0.42l-1.12,0.76l-0.14,0.5l1.36,2.35l0.34,1.2l0.45,0.29l-2.36,1.26l-2.76,0.18l-0.61,0.48l0.16,0.67l1.6,0.3l1.19,0.76l3.27,0.91l1.74,1.2l1.38,0.09l1.7,2.15l2.57,0.54l1.7,2.19l2.02,0.42l1.63,0.73l0.65,1.86l0.5,5.06l-0.07,1.48l-0.27,0.28l-0.29,0.01l-1.21,-1.49l-4.01,-3.64l-1.32,-0.49l-1.28,0.69l-3.11,0.54l-1.92,0.86l-0.41,0.62l0.17,0.49l1.31,1.11l0.04,1.25l0.68,1.51l1.09,0.59l1.64,0.17l1.16,1.61l-3.98,1.51l-0.47,-0.26l-0.24,-1.31l-2.13,-1.2l-1.23,-0.26l-0.96,-0.77l-0.53,0.03l-0.67,0.67l0.43,2.7l1.21,1.72l2.8,6.72l0.16,1.11l-0.37,2.26l1.29,2.3l-1.48,-1.02l-1.97,-2.38l-0.69,-1.5l-1.16,-0.35l-1.89,0.44l-1.62,3.29l-0.04,1.39l-0.21,-0.11l-0.53,-0.44l-0.06,-2.98l-1.96,-2.81l-0.93,-0.41l-1.11,-1.88l-0.41,-0.16l-1.04,0.23l-0.97,0.71l-0.56,3.35l-1.68,-1.57l-2.02,-3.26l-0.05,-1.6l1.53,-1.91l-0.24,-1.37l-1.56,-2.52l-2.1,-1.55l-1.1,-0.44l-0.63,-1.66l-2.03,-1.46l2.41,-2.02l1.21,-2.49l1.74,0.55l1.49,-0.17l2.34,-2.4l1.5,0.09l3.86,2.05l4.28,1.21l2.03,1.0l1.29,1.08l1.71,0.38l0.46,-0.42l-0.23,-1.23l2.57,-0.15l0.74,-0.53l0.42,-1.05l-0.47,-0.67l-1.03,-0.49l-1.47,-0.29l-0.73,0.18l-1.18,-0.46l-5.55,-3.19l-0.57,0.13l-0.44,0.74l-0.71,0.36l-1.11,0.06l-3.71,-0.92l-2.15,0.71l-4.25,0.68l-1.88,-2.53l-0.6,0.34l-0.26,1.46l-1.28,0.35l-0.68,-0.45l-1.66,-4.25l-1.61,-1.93l-1.24,-0.53l-0.08,-0.77l0.07,-0.5l1.17,-0.16l2.36,0.85l0.88,-0.23l0.71,-0.78l-0.49,-1.83l-2.98,-0.34l-1.94,0.42l-0.66,-0.31l-3.3,-3.44l-2.27,-1.18l-1.43,-3.35l-1.02,-1.26ZM675.16,600.88l1.34,-0.04l2.3,1.22l1.04,1.37l-1.41,-1.3l-3.27,-1.24ZM707.89,661.28l-0.16,0.18l-0.36,-0.27l0.41,0.1l0.11,-0.02ZM708.79,660.68l0.03,-0.08l0.05,0.06l-0.08,0.03ZM703.69,645.69l0.95,-0.85l2.01,-0.19l-0.72,0.46l-2.24,0.58ZM672.76,675.97l0.47,1.17l1.83,0.46l1.71,-0.13l0.86,-0.89l0.55,-0.01l0.13,0.28l-0.96,0.59l0.02,0.55l1.05,0.63l0.84,-0.04l0.27,0.97l0.84,0.59l1.91,-0.04l3.7,-0.9l3.66,0.22l1.49,0.98l2.58,0.12l2.39,0.5l3.4,-0.62l-0.05,2.83l0.84,0.58l0.89,-0.12l0.88,-0.75l1.68,-0.51l1.84,0.0l1.35,-1.09l-0.21,1.46l-0.45,1.56l-0.8,0.3l-4.51,-0.1l-13.88,1.39l-0.4,-0.13l-0.14,-1.43l-0.43,-0.64l-3.49,-1.22l-7.93,-1.34l-2.54,0.18l-1.23,-0.27l-0.31,-0.42l-0.17,-1.7l0.27,-1.65l0.87,0.49l0.43,-0.08l0.58,-0.56l0.16,-1.18ZM702.17,634.63l0.83,-0.47l0.56,-1.18l-0.51,-1.11l-1.37,-1.35l-0.04,-0.53l1.75,-0.34l1.57,0.89l0.07,3.17l-0.61,0.53l-0.14,0.76l-0.95,0.65l-1.15,-1.03ZM698.48,599.9l-0.88,0.24l-0.94,-0.74l0.76,-0.25l1.05,0.74ZM696.85,654.58l-0.82,0.4l-0.91,-1.59l1.84,-1.64l0.35,0.34l-0.04,1.56l-0.43,0.92ZM695.75,663.45l0.09,0.3l-0.33,0.43l0.19,-0.35l0.05,-0.37ZM695.08,647.43l-0.75,0.06l0.03,-0.54l1.08,0.27l-0.36,0.21ZM690.86,607.38l1.89,-0.07l0.57,0.64l0.49,0.09l1.51,-1.04l-0.9,1.57l-0.18,1.09l-0.59,-0.12l-0.12,-0.89l-0.43,-0.38l-0.69,0.27l-0.36,0.77l-1.05,-0.22l-0.14,-1.72ZM694.65,659.11l-0.68,-0.65l-0.17,-0.27l0.96,0.71l-0.11,0.21ZM693.06,653.23l-0.77,0.86l-0.66,-0.29l0.4,-0.81l0.94,-0.5l0.09,0.74ZM690.94,644.63l1.66,0.25l0.15,0.17l-0.25,0.51l-0.46,-0.08l-1.1,-0.84ZM689.21,642.46l-0.12,0.31l-1.78,-1.57l-1.08,-1.15l-0.1,-0.51l0.59,-0.25l0.74,1.01l1.24,0.26l0.52,1.9ZM686.25,596.85l-1.26,0.42l-1.41,-0.87l0.01,-0.29l1.17,-1.42l0.98,0.08l0.69,0.96l-0.17,1.13ZM685.69,654.47l0.32,0.59l-0.13,0.1l-0.14,-0.27l-0.05,-0.42ZM682.97,623.8l0.52,0.29l0.25,0.92l-0.86,-0.54l0.1,-0.68ZM684.19,625.48l0.31,0.27l-0.27,0.07l-0.04,-0.34ZM661.67,625.04l3.09,-1.8l1.96,-0.47l1.2,1.04l0.73,1.64l0.92,0.78l4.78,2.0l3.0,0.27l1.17,1.85l-0.19,1.13l1.22,3.9l1.43,1.15l2.67,0.25l-0.01,1.43l-0.63,0.53l-1.01,-0.67l-0.75,-0.06l-1.88,-1.44l-0.34,-1.37l-2.27,-3.04l-3.76,-0.18l-1.21,-0.55l-0.6,-1.8l-4.92,-3.91l-3.14,-1.2l-1.46,0.5ZM681.22,658.91l0.47,0.25l-0.55,0.09l0.08,-0.34ZM682.34,659.06l0.37,-0.41l0.36,-0.09l0.0,0.38l-0.73,0.12ZM682.94,652.14l-0.52,-0.06l0.36,-0.53l0.24,0.11l-0.07,0.48ZM681.96,648.45l-0.28,-0.62l0.24,-0.28l0.32,0.46l-0.27,0.44ZM680.69,645.1l-0.29,0.25l0.39,-1.2l0.31,-0.03l-0.41,0.98ZM672.52,621.17l-0.6,-0.11l-0.2,-0.37l0.8,0.47ZM668.93,639.82l0.26,-0.51l0.33,0.09l-0.09,0.46l-0.5,-0.04ZM661.94,664.62l1.47,1.53l-0.51,0.98l-0.83,-0.28l-0.27,-0.48l0.14,-1.75ZM633.7,642.06l0.48,0.52l-1.17,0.88l-1.26,-1.0l-0.97,-1.4l0.5,-0.6l0.61,0.8l1.24,0.33l0.56,0.47ZM627.1,635.32l0.7,-1.67l0.81,0.42l0.52,-0.22l0.62,-1.26l0.25,1.95l1.11,0.64l1.1,1.42l-0.07,0.54l-1.85,-0.68l-0.97,0.24l-0.29,-1.09l-0.71,-0.88l-0.52,0.0l-0.69,0.6ZM630.95,631.66l0.08,0.09l-0.0,0.18l-0.08,-0.27ZM629.87,628.81l0.45,-1.93l0.83,-0.95l0.06,2.57l-0.21,0.26l-1.14,0.06ZM620.81,615.4l-0.15,-0.1l-1.04,-1.97l-2.08,-2.4l2.14,-0.65l0.9,0.56l-1.09,1.26l0.72,1.12l0.59,2.18Z\",\n            name: \"Greece\"\n          },\n          RU: {\n            path: \"M726.11,290.03l1.44,0.47l1.4,1.79l1.34,0.66l1.83,0.02l1.0,-1.42l-1.01,-2.65l-1.75,-1.83l-1.79,-0.93l-3.39,0.01l-0.29,-1.23l0.24,-0.8l2.94,-2.83l0.33,-0.93l-0.98,-8.52l-0.89,-1.42l0.98,-1.16l1.86,-4.42l1.6,-0.5l0.55,-0.74l1.26,-0.69l-0.24,-1.11l-1.43,-1.46l0.6,-1.35l-0.65,-3.35l0.42,-0.82l0.57,-0.06l1.12,1.2l2.03,0.6l1.21,-0.84l0.54,-1.72l0.56,-0.46l1.07,0.55l1.95,0.23l2.87,-0.46l2.72,-3.42l6.88,0.87l6.12,1.65l0.89,-0.77l0.29,-1.23l-0.19,-0.42l-2.61,-1.39l-1.44,-1.91l-2.05,-1.51l-2.27,-0.21l-2.75,0.52l-3.91,-0.3l-3.38,-2.77l-2.3,-0.91l-1.57,-2.17l0.85,0.47l0.58,-0.26l0.39,-2.49l-2.07,-1.74l-4.84,2.14l-3.82,0.53l7.28,-6.51l3.44,-2.16l1.07,-1.18l6.97,-4.75l3.26,-3.23l2.7,-2.13l11.86,-12.12l5.03,-4.13l3.4,-3.32l1.38,-1.87l3.45,-6.95l-0.01,-0.97l-0.42,-0.8l-2.34,-2.4l-2.18,-3.05l-2.83,-1.99l-7.52,-4.34l-5.48,-4.63l2.72,-1.22l4.0,-4.72l0.38,-1.46l-0.17,-2.73l-0.38,-0.9l-1.51,-1.2l-3.71,-1.77l-1.54,-3.23l-0.01,-0.49l1.82,-2.02l-0.21,-2.19l-0.75,-0.87l-3.83,-0.84l-0.98,-0.81l-1.23,-2.52l0.19,-1.23l2.4,-1.41l0.44,-1.18l-0.26,-1.49l-2.69,-0.77l1.34,-1.73l0.27,-3.17l1.19,-2.04l-0.08,-0.5l-1.02,-0.91l4.61,-0.92l0.39,-1.34l-0.21,-1.45l-2.56,-6.99l-3.15,-4.16l-2.8,-5.79l-2.34,-3.73l-2.68,-3.45l-0.31,-0.84l0.25,-1.57l2.07,-2.8l4.43,-5.2l5.01,-5.15l0.73,-3.16l-0.28,-0.7l-2.11,-1.5l-3.99,-4.03l-2.62,-3.21l-8.77,-2.94l-2.79,-6.73l0.1,-0.97l3.69,-5.53l0.3,-1.8l-1.15,-0.93l-3.46,-0.31l9.02,-3.32l0.82,-0.57l0.66,-0.76l2.29,-4.62l8.22,-2.29l1.33,-1.04l1.09,-1.73l0.48,-2.01l-0.34,-0.97l5.48,2.43l2.48,0.12l1.09,-0.25l0.77,-0.81l0.37,-1.19l-0.59,-3.81l1.82,0.26l5.43,1.91l1.55,-0.18l1.81,-0.72l1.58,-2.18l0.98,-0.31l1.48,0.49l0.45,-0.15l0.48,-1.01l-0.7,-2.17l5.05,1.88l2.44,1.53l5.02,1.3l0.69,0.55l-0.14,1.85l-0.82,0.45l-2.04,-0.09l-8.15,-1.55l-1.16,1.0l-0.01,0.6l1.05,0.94l2.14,0.95l0.58,1.64l0.41,0.27l3.46,-0.24l3.3,0.68l1.42,-0.18l-0.88,1.41l0.08,0.55l0.89,0.44l3.73,-1.44l1.6,-0.36l0.6,0.25l0.09,0.86l-0.58,1.41l-0.09,1.2l-1.07,2.55l-1.81,0.91l-0.74,1.6l0.43,0.15l2.61,-0.7l1.48,-0.8l2.69,-3.85l0.61,-0.4l7.25,-0.07l8.54,2.02l2.04,0.17l2.33,-0.23l1.51,-1.05l7.57,1.96l10.28,4.47l15.04,7.36l8.43,6.46l1.18,1.5l3.07,0.79l0.85,-0.48l1.46,0.4l10.12,5.95l3.45,0.31l0.41,-0.54l-0.6,-1.55l0.93,0.68l1.87,2.27l2.36,1.76l2.33,2.53l1.51,0.78l0.0,30.64l-5.15,3.01l-10.98,3.76l-8.56,1.41l-3.42,0.1l-6.69,-0.7l-3.63,-0.75l-4.48,-2.13l-4.29,-1.1l-2.98,-0.49l-5.35,-0.2l-11.6,-2.1l-1.97,-0.72l-7.29,-4.12l-3.2,1.13l-1.46,0.18l-0.78,-0.94l0.53,-0.72l-0.24,-0.58l-4.14,-1.18l-3.43,-0.09l-4.02,-1.75l-1.59,0.44l-4.38,-1.76l-1.93,-1.41l-1.89,-2.33l0.92,-1.16l-0.19,-0.68l-7.27,-1.52l-6.84,-0.2l-0.4,0.29l0.18,0.46l1.19,0.72l3.05,0.43l3.73,2.29l-0.44,1.73l0.17,0.43l5.18,3.73l0.29,0.74l4.18,0.93l0.44,1.29l-0.47,0.94l0.67,1.15l5.49,1.86l-0.52,0.8l-1.44,0.78l-1.53,0.38l-0.3,0.36l0.24,0.4l0.93,0.34l1.98,-0.12l7.3,2.13l3.81,2.13l3.89,3.9l1.2,1.84l-0.12,1.89l-2.15,5.68l-0.9,1.09l-1.83,1.32l-0.1,0.55l3.58,5.02l1.76,3.94l0.38,3.98l1.24,0.96l-0.89,1.1l0.25,3.45l2.37,2.71l3.37,1.69l2.28,0.38l2.79,-0.66l1.95,0.87l4.57,3.12l2.06,3.28l1.09,0.86l8.27,2.02l5.37,1.99l1.05,0.1l2.82,-1.76l4.45,-1.19l1.69,-2.08l-0.15,-1.55l-1.13,-2.46l-0.48,-2.68l-2.94,-1.7l-4.41,0.47l-1.79,-0.09l-1.31,-0.61l-1.88,-1.7l-3.66,-4.27l-1.98,-1.45l-0.57,-0.81l-0.62,-1.12l0.06,-1.49l1.44,-0.01l1.8,-1.14l1.41,-4.09l3.11,-0.43l5.13,1.86l6.59,5.08l1.56,0.56l3.82,-0.04l0.42,0.59l1.34,0.79l7.02,1.73l7.13,3.16l2.91,-0.34l1.23,-2.43l2.64,-1.63l1.82,-0.27l2.7,0.62l0.94,-0.91l0.0,400.07l-4.46,-0.79l-1.09,0.42l-1.26,1.88l-5.84,-4.82l-2.57,-2.84l-8.3,-6.49l-7.29,-2.21l-4.42,-4.6l-2.32,0.5l-2.63,-0.52l-1.78,-1.42l-0.9,-1.9l-1.27,-1.31l-3.61,-1.66l-3.84,-0.92l-0.2,-0.37l3.1,-1.0l1.03,-0.69l-0.05,-0.69l-2.45,-1.01l1.22,-0.52l3.01,1.98l1.61,0.58l1.01,-0.66l5.08,-1.09l0.64,-1.13l0.01,-1.14l-0.83,-0.39l0.02,-0.79l0.7,-1.38l2.37,-2.55l1.21,-3.3l0.78,-0.55l0.38,0.25l0.1,1.27l0.32,0.31l0.41,-0.18l1.33,-2.52l3.98,0.07l0.24,-0.67l-2.44,-2.61l-3.22,-2.59l-1.55,0.09l-0.65,-0.3l-1.32,-2.0l-0.39,-1.18l2.35,0.25l3.37,-1.37l3.64,0.63l0.44,-0.46l-0.69,-2.28l4.53,-1.44l4.37,-1.99l2.18,-0.55l0.33,-1.4l-0.68,-1.65l-1.0,-1.4l-2.33,-0.06l-1.52,1.69l-3.33,0.51l-0.55,-0.04l1.8,-0.89l0.38,-0.89l-0.41,-0.19l-2.5,0.39l-1.4,1.14l-3.14,1.23l-0.09,-0.82l0.81,-0.93l0.26,-0.87l-1.06,-0.72l0.72,-1.44l0.38,-2.47l0.91,-0.72l1.93,-0.23l1.85,-0.8l1.15,-0.93l1.32,-2.0l0.85,-0.25l6.6,0.37l4.71,-0.19l0.87,-0.89l0.05,-1.5l1.42,-3.4l0.99,-1.16l0.05,-0.83l-1.49,-0.71l0.56,-0.88l-0.75,-3.25l-1.15,-0.75l-1.32,-0.29l0.66,-2.07l0.97,-0.98l1.32,0.21l1.24,-0.24l0.55,-0.79l-0.46,-0.76l-3.06,-1.05l-0.67,-1.1l2.56,-0.9l2.44,-2.39l0.59,-0.98l0.29,-2.27l-0.93,-1.24l0.0,-0.89l0.48,-1.04l-0.19,-0.6l-1.1,-0.63l-2.1,0.51l-1.12,-0.07l-4.23,-2.7l-2.19,-0.27l-1.68,-1.96l-2.3,0.57l-1.31,-0.1l-3.56,-2.2l-2.76,-0.26l-2.75,-1.58l-0.96,0.15l-0.52,0.67l-0.27,1.26l-1.02,0.25l-4.44,-3.21l-1.26,-1.76l-0.43,-1.51l-2.37,-2.21l-1.25,-0.09l-2.83,1.16l-5.07,1.07l-1.8,1.39l-1.55,-1.19l-1.78,-0.29l-0.86,0.24l-2.57,-2.23l-3.28,-0.48l-2.83,1.54l-0.78,-0.28l-0.55,-1.12l-0.87,-0.5l-0.93,-1.27l-0.22,-1.05l0.59,-1.13l0.05,-1.01l-1.71,-4.09l0.2,-1.4l-0.59,-0.56l-1.82,-0.2l-1.28,-2.54l-1.35,-0.09l-3.1,0.57l-3.49,-1.19l-3.32,-0.13l0.6,-0.53l0.05,-0.87l-0.67,-0.61l-0.34,-3.22l-1.12,-1.88l3.23,-0.64l0.56,-0.61l0.0,-0.97l-3.92,-3.8l-1.29,-3.12l-1.31,-1.82l-1.47,-1.24l-1.22,-0.59l-3.98,0.16l-2.32,-0.36l-1.88,0.24l-3.42,1.53l-1.14,0.06l-3.97,-1.0l-1.1,0.01l-1.27,0.77l-1.12,2.88l-1.96,1.03l-1.84,0.07l-2.57,-0.95l-1.02,-2.05l-1.46,-1.55l0.1,-3.66l0.34,-0.73l-1.14,-1.49l-0.07,-0.9l0.58,-0.74l-0.03,-0.72l-3.97,-4.57l1.74,-2.87l3.23,-0.09l0.87,0.25l1.61,1.49l4.18,0.24l3.9,-2.22l0.67,-1.14l2.96,-1.12l0.33,-0.34l-0.01,-1.77l-0.42,-0.68l-2.85,-1.78l-0.46,-0.98l0.32,-0.71l-0.24,-1.09l-3.52,-1.68l-5.55,-0.36l0.81,-2.04l0.17,-1.22l-0.27,-0.89l-0.58,-0.55l-5.18,-2.56l-1.33,-1.67l-0.71,-1.81l-0.87,-1.24l-1.36,-0.72l0.98,-1.81l-0.1,-0.74l-4.73,-2.94l0.42,-2.01l2.06,-2.77l-0.33,-1.87l-1.9,-2.6l0.05,-0.61l1.13,-1.47l0.09,-3.31l-0.53,-0.83l-2.18,-0.5l-1.26,-0.82l-2.4,-2.34l-3.18,-1.14l-4.12,0.02l-2.58,1.41l-1.63,0.4l-1.8,1.14l-1.34,-1.49l0.57,-1.78l-0.08,-0.77l-0.47,-0.67l-4.06,-1.61l-2.03,0.38l-1.99,1.08l-0.45,-0.15l-1.32,-1.91l-1.12,-0.71l-2.42,0.01l-1.23,0.67l-1.72,-1.43l0.66,-2.19l-1.34,-5.49l-1.34,-1.21l-0.23,-0.86l-1.31,-1.81l-0.13,-1.47l-0.53,-0.78l-0.98,-0.41l-1.57,0.36l0.75,-1.97l0.11,-1.54l0.56,-1.41l0.95,-1.24l0.0,-2.13l-0.62,-0.75l-3.35,-2.1l-0.53,-1.63l-1.92,-0.42l0.57,-2.1l1.17,-1.07l0.68,-1.42l2.7,-0.77l0.62,-0.66l-0.15,-0.75l-1.29,-1.03l-0.25,-1.0ZM899.6,149.08l-0.91,-2.5l-1.31,-2.3l-1.94,-1.53l-3.3,-4.18l-1.3,-2.04l-0.62,-2.02l0.83,-3.04l6.79,-3.36l1.76,-1.43l0.0,22.4ZM836.18,140.74l0.44,1.89l-0.38,0.82l0.1,0.76l-0.3,0.19l-1.12,-1.49l-0.96,-0.18l-0.66,-0.6l-0.26,-0.83l0.79,0.0l1.49,-0.81l0.85,0.25ZM617.41,357.73l1.54,-1.2l1.41,-1.73l1.16,-2.18l0.41,-3.11l1.52,-0.56l4.03,0.06l1.68,-0.82l1.35,-1.25l-0.8,0.85l0.13,0.64l1.12,0.5l1.36,0.19l1.62,0.72l1.47,0.13l2.74,-0.62l0.3,-0.33l0.62,-5.87l1.57,-0.18l2.24,1.46l4.31,1.78l2.75,0.72l6.56,0.09l0.88,1.63l2.49,1.72l-1.93,5.57l-0.04,1.47l0.9,2.13l-41.39,-1.79Z\",\n            name: \"Russia\"\n          },\n          NL: {\n            path: \"M408.11,413.92l-2.98,-1.02l-2.63,0.56l-1.62,-0.68l-1.47,-0.1l-1.43,-1.16l0.86,-0.49l2.54,-0.12l1.81,0.37l3.4,2.1l2.12,-0.24l0.2,-0.64l-0.47,-0.58l-2.47,-1.11l1.44,-0.16l0.27,-0.65l-0.68,-1.17l-2.31,-2.26l1.63,-2.96l1.7,-1.22l3.79,-4.66l1.1,-2.5l1.57,-6.68l1.04,-2.07l1.58,0.51l2.03,-0.83l0.61,2.01l1.68,1.87l-0.05,0.7l-2.4,1.06l0.04,3.13l-0.72,1.49l0.08,0.43l0.54,0.48l6.52,1.61l4.07,-3.2l1.17,-1.38l-0.04,-1.42l-0.47,-1.01l-2.62,-0.56l-0.29,-0.33l0.01,-1.58l0.57,-0.88l-0.05,-0.97l-0.42,-0.31l-1.44,0.1l-1.38,-0.36l-0.26,-2.87l-0.67,-0.7l1.23,-2.18l1.06,-0.92l4.54,-1.93l2.49,-0.57l10.02,-0.62l2.06,2.07l2.84,0.79l-0.08,4.83l-1.86,4.59l-0.24,1.67l-3.48,0.08l-0.9,0.62l0.09,0.93l-0.34,0.86l0.88,1.38l1.41,0.52l1.7,-0.01l0.65,0.86l-0.19,1.84l-0.5,0.96l-3.49,2.4l-0.14,0.98l1.13,1.12l-0.6,0.77l-2.87,0.97l-1.44,-0.0l-0.68,0.49l-2.7,-0.95l-2.28,0.91l-0.97,0.89l0.08,0.97l1.84,2.22l0.1,0.74l1.31,1.87l0.06,0.56l-0.41,1.55l-1.26,2.5l0.11,0.92l0.53,0.33l-2.24,1.64l-0.78,-0.07l-0.53,0.48l0.1,0.74l0.47,0.55l1.53,0.64l0.41,0.58l-0.61,2.28l-2.95,-0.15l-0.55,-0.2l-0.58,-0.97l1.24,-1.33l0.21,-1.07l0.9,-1.71l0.16,-0.82l-0.5,-0.82l-2.67,-0.92l-1.82,-1.56l-2.38,0.42l-1.15,-0.3l-1.39,-1.09l-0.5,-1.77l-0.54,-0.52l-0.49,0.01l-1.11,1.02l-1.05,0.07l-0.27,-0.74l-0.84,-0.78l-0.46,0.02l-1.54,1.17l-1.76,-0.94l-1.73,0.91l0.02,1.2l-1.77,-0.51ZM421.28,396.41l4.65,-3.0l1.5,-0.51l0.91,0.09l0.98,0.62l-0.3,0.84l-3.92,2.87l-0.85,0.06l-2.96,-0.97ZM416.5,383.47l-1.03,1.0l-0.51,-0.26l0.29,-0.71l1.25,-1.07l-0.0,1.03ZM407.31,414.89l-2.06,1.54l-1.75,0.66l-0.79,-0.07l-2.0,-1.12l-1.46,-0.21l-1.9,0.74l-0.5,-0.59l-0.29,-1.12l2.71,-0.27l3.99,0.8l1.77,-0.71l1.2,0.56l1.08,-0.22ZM401.26,408.39l0.8,-0.2l1.99,0.12l1.27,0.97l-1.02,0.24l-1.64,-1.11l-1.39,-0.02Z\",\n            name: \"Netherlands\"\n          },\n          PT: {\n            path: \"M226.07,631.38l0.09,-1.3l-0.52,-1.53l1.89,-0.52l1.05,-0.88l0.66,-1.19l-0.29,-1.44l0.72,-1.29l1.9,-1.22l0.16,-0.48l-0.45,-0.25l-1.03,0.19l-1.33,0.85l-2.54,4.33l-2.69,0.63l-1.22,-0.39l0.0,-1.58l0.59,-1.75l0.23,-2.35l0.81,-2.11l-0.23,-1.47l1.55,-1.26l1.45,-1.94l4.21,-9.14l-0.16,-0.87l-0.43,-0.47l0.16,-1.05l1.34,-5.47l1.22,-2.52l0.34,-5.43l-1.08,-3.3l-0.9,-4.39l-0.06,-1.28l0.63,-0.63l-0.25,-0.68l-1.03,-0.09l-0.39,-0.67l0.1,-0.85l2.5,-2.7l1.86,-0.94l3.64,-1.08l0.35,0.03l0.97,1.44l-1.22,1.94l0.7,1.49l0.68,0.39l0.93,-0.07l2.18,-1.03l3.06,-0.14l2.4,0.83l1.69,0.04l2.74,-1.05l0.62,-1.31l1.58,0.47l2.24,0.09l0.56,-0.29l1.51,0.44l1.18,-0.08l0.55,0.78l-0.02,2.66l0.26,0.7l3.35,0.69l0.74,0.55l0.28,0.69l-2.34,2.39l-2.17,1.14l-1.76,1.49l-1.17,1.72l-1.44,0.74l-0.73,1.02l1.23,3.94l0.23,1.9l-0.45,3.46l0.52,1.45l-2.57,1.96l-0.37,0.82l0.17,0.84l1.64,1.7l-1.02,3.33l-0.78,1.27l-0.86,0.37l-4.59,0.03l-1.11,0.3l-0.24,0.59l1.23,2.01l1.47,1.18l0.41,1.96l1.81,3.22l1.87,0.6l0.43,0.57l-0.58,2.04l-3.14,2.99l-0.94,4.28l3.28,4.65l1.82,-0.01l-0.66,1.6l-2.21,0.66l-3.59,4.5l-0.83,2.42l1.24,5.98l-0.9,0.16l-4.53,2.49l-1.25,0.0l-2.72,-1.12l-6.2,-0.68l-2.07,0.72l-1.41,-0.02l-1.47,0.83l2.33,-5.99l-0.06,-2.49l0.35,-2.3l-0.42,-2.18l-0.73,-1.34l1.01,-3.52l-0.12,-1.83l-0.72,-1.81l2.21,0.27l0.41,-0.22l-0.07,-0.46l-0.89,-0.92l-1.23,-0.68l-1.65,0.12l-3.48,1.12ZM117.56,718.32l1.56,0.67l1.81,-0.33l2.3,1.05l-1.15,1.04l-2.21,-0.2l-2.57,-1.4l0.26,-0.82ZM10.64,654.82l-1.1,0.02l-0.19,-0.31l0.92,-0.12l0.37,0.41ZM2.49,641.55l1.09,0.17l5.02,-0.12l-0.06,0.57l-0.57,0.32l-2.41,0.29l-3.86,-0.72l-1.16,-0.85l-0.14,-0.53l0.41,-0.13l1.67,1.01Z\",\n            name: \"Portugal\"\n          },\n          NO: {\n            path: \"M728.73,12.12l0.23,0.63l1.37,0.34l2.91,-0.91l0.43,0.5l-0.87,2.15l-0.5,5.32l0.03,1.92l0.75,1.21l0.37,-0.28l1.54,-4.63l1.79,-1.59l0.63,-2.84l1.64,-3.37l1.81,-1.92l0.96,-0.48l3.49,0.08l1.42,0.68l1.34,1.62l1.13,0.76l3.32,0.75l1.46,1.46l1.05,0.06l2.14,-1.24l1.18,-0.17l2.0,1.7l-0.39,1.45l0.53,0.75l2.78,-0.09l2.24,0.55l4.31,2.89l0.39,1.18l-0.18,1.34l-6.19,1.79l-2.83,1.78l-4.44,0.67l-15.48,-1.19l-0.42,0.49l0.6,1.58l10.68,2.78l0.42,0.55l-0.32,1.59l0.21,2.36l1.07,1.15l1.47,0.42l2.61,-0.21l1.62,0.37l1.06,-0.95l0.31,-2.12l0.45,-0.29l1.14,0.5l0.61,2.27l0.6,0.49l0.57,-0.18l0.65,-1.49l4.65,0.21l0.66,2.86l-0.33,1.93l-1.15,0.59l-2.23,-0.09l-3.11,-1.22l-2.04,-1.17l-1.03,-0.06l-0.46,0.65l0.46,1.08l-0.11,0.77l-1.24,2.44l-1.18,0.9l-2.11,0.74l-6.01,1.49l-0.74,0.88l-1.92,4.09l-1.08,0.98l-1.79,0.57l-1.49,-1.94l0.15,-1.12l2.32,-2.54l2.91,-2.55l1.33,-1.95l0.02,-0.42l-2.6,-4.77l-10.07,-3.82l-4.86,-3.54l-2.12,-2.17l-2.31,-0.18l-2.22,0.59l-3.29,1.99l-2.88,1.26l-2.52,-0.53l-2.63,-0.12l-3.06,0.46l-3.09,3.3l-3.22,2.21l-0.89,1.04l-0.68,1.54l-1.52,5.34l-1.15,2.08l-0.26,1.33l0.26,3.66l-0.25,1.89l-2.12,2.23l-2.9,0.58l-1.59,1.03l-1.19,1.51l-1.11,2.84l-1.73,0.96l-1.64,-0.27l-1.4,-1.1l-5.01,-1.38l-4.52,-2.05l-2.06,-0.21l-2.25,2.22l-5.05,1.49l-2.23,0.14l-1.05,-0.74l-8.72,-1.08l-1.51,-3.09l-9.21,-9.88l-5.12,-0.19l-1.9,0.71l-1.2,1.0l-0.17,0.91l0.95,2.35l-0.45,0.52l-2.35,-0.67l-2.89,0.05l-0.9,0.78l-6.7,0.37l-0.25,0.69l2.88,2.76l0.13,1.02l-0.37,2.12l-1.03,1.82l-1.19,1.48l-2.37,1.5l0.06,0.71l3.06,1.26l-3.0,2.32l-12.25,-3.18l-3.88,-0.18l-5.25,-1.45l-1.26,0.17l-2.17,0.96l-0.21,1.5l0.39,6.19l-0.64,1.44l-2.61,3.64l-7.75,-3.12l-7.69,4.89l-2.94,6.47l-1.5,1.49l-3.45,1.03l-1.17,2.04l0.05,0.43l3.13,3.96l0.93,2.08l-0.36,2.0l-2.18,1.74l-9.23,9.65l-1.79,1.39l-0.15,0.39l0.78,3.92l-1.25,1.03l-4.43,1.86l-6.68,0.85l-0.35,0.48l1.23,7.36l-1.15,3.32l-0.93,7.54l-4.89,7.78l-6.29,7.98l0.14,0.61l5.66,2.51l0.87,4.15l-0.09,1.74l-1.0,1.6l-1.2,1.56l-10.12,-1.3l-3.0,0.54l-2.79,1.15l-1.83,1.34l-4.9,5.82l-1.7,1.6l0.35,2.44l-2.78,4.15l1.85,4.71l0.95,1.67l-1.39,1.81l0.42,4.16l-0.34,2.72l2.56,6.56l-0.15,2.34l-1.85,9.33l2.03,1.82l4.12,2.33l3.65,3.7l-0.65,2.4l-1.65,3.3l-4.52,0.59l-1.11,0.86l0.31,2.38l3.23,7.09l0.44,1.8l-0.98,2.96l-0.38,3.87l-2.51,2.69l-1.57,1.04l-2.34,0.41l-0.95,0.63l-1.44,3.47l-2.02,2.05l-0.04,1.14l1.51,5.23l-1.14,5.29l-0.86,1.68l-1.08,0.53l-0.66,-0.22l-1.62,-3.96l-7.05,-1.56l-2.46,-3.92l-0.13,-4.22l-0.52,-3.2l-0.31,-0.36l-0.44,0.18l-0.83,1.39l0.39,2.25l-2.28,1.54l0.12,1.28l0.55,0.47l-0.21,2.89l-3.22,5.07l-1.36,-0.24l-1.59,1.15l-1.18,0.14l-0.57,-1.25l-2.24,-1.81l-1.35,0.01l-0.24,0.69l1.66,1.79l-0.34,0.49l-4.57,2.18l-0.1,0.66l0.87,0.76l-0.63,0.74l-1.2,0.24l-0.9,1.31l-3.32,2.06l-5.48,5.29l-2.79,1.48l-1.93,1.51l-1.6,-0.04l-2.35,1.35l-5.42,1.13l-3.62,-0.52l-2.54,0.44l-1.12,-0.74l0.13,-0.99l-0.23,-0.57l-0.48,-0.15l-1.42,0.03l-0.43,0.44l-0.3,1.11l-1.65,-0.49l-0.19,-0.21l0.48,-0.73l1.13,-0.9l0.02,-0.61l-0.66,-0.86l-3.61,-0.1l-4.41,-2.06l-1.12,-1.16l-3.59,-1.77l-1.55,-1.81l-0.87,-1.97l0.49,-4.68l0.5,-0.49l3.02,0.98l3.54,1.8l0.77,-0.24l0.99,-1.33l1.95,-1.08l-0.0,-0.7l-0.92,-0.33l-2.81,1.2l-2.49,-1.9l0.0,-0.39l0.79,-0.82l0.27,-1.01l-0.4,-1.12l0.16,-1.06l4.66,-4.01l1.45,-0.81l0.15,-0.54l-0.62,-0.47l-1.78,0.56l-5.83,3.61l-3.78,1.24l-1.46,1.82l-1.27,0.66l-2.2,0.07l-0.41,-0.93l0.7,-4.41l0.75,-2.16l0.75,-1.38l1.39,-0.37l0.82,-1.01l3.8,1.04l1.57,-1.49l1.65,-0.23l3.06,-1.49l0.15,-0.72l-0.45,-0.3l-5.05,0.73l-0.67,-0.19l-0.29,-0.73l4.44,-4.25l0.62,-1.06l0.39,-2.03l2.7,-2.33l1.96,-0.95l0.44,0.56l-0.61,2.9l0.01,1.23l0.32,0.39l0.45,-0.24l1.8,-4.31l0.74,-0.96l0.8,-0.65l2.32,-0.59l0.69,-1.14l-0.39,-0.22l-2.64,0.24l-6.23,1.67l-2.72,1.52l-3.5,4.09l-0.42,1.66l-0.85,0.74l-1.49,0.42l-1.92,2.07l-0.87,1.66l-3.08,2.3l-1.17,1.31l-0.32,-1.44l0.18,-1.94l0.87,-1.41l0.48,-1.55l-0.55,-1.47l0.23,-0.46l2.09,0.41l1.6,-0.06l2.77,-1.1l0.18,-0.59l-0.72,-0.8l-3.19,-0.01l-1.6,-0.94l-1.3,-1.95l-0.58,-2.58l0.3,-0.56l5.03,-2.8l1.46,-1.36l-0.21,-0.69l-1.12,-0.04l-1.87,1.53l-2.49,0.88l-1.51,-1.18l-0.83,-1.34l-0.5,-2.97l-0.01,-3.47l0.81,-0.47l2.52,0.47l3.01,-0.18l6.47,-1.26l4.11,0.74l1.79,-0.06l2.68,-1.09l2.11,-0.1l1.55,0.76l0.78,0.8l0.21,1.37l0.79,0.85l0.48,0.08l0.53,-0.28l0.19,-0.51l-0.46,-2.11l6.53,-1.69l0.97,-0.77l-0.22,-0.7l-2.49,-0.22l-0.59,-1.22l1.35,-2.63l-0.14,-0.32l-0.63,-0.15l-1.62,1.45l-0.74,1.82l0.08,1.93l-1.16,0.26l-3.03,0.11l-3.76,-0.93l-0.35,-0.26l0.16,-0.79l-0.54,-0.64l-0.52,0.09l-0.77,0.93l-0.68,1.78l-1.2,0.35l-4.09,-0.68l-5.91,0.41l-2.68,0.93l-1.55,-0.11l-2.82,-1.56l-1.03,-1.16l-0.28,-3.28l3.31,-0.44l1.09,-0.62l-0.04,-0.72l-2.18,-1.12l-0.87,-1.51l-1.48,-0.65l-0.81,-1.18l-0.22,-1.9l0.22,-1.2l0.47,-0.29l1.73,0.29l4.65,-0.24l7.55,2.28l6.23,-0.44l3.58,-1.3l0.06,-0.73l-0.93,-0.4l-3.85,0.74l-3.51,-0.03l-8.9,-1.94l-2.82,0.2l-1.23,-0.38l-0.7,-1.19l0.55,-2.45l0.89,-0.41l0.79,0.65l1.21,-0.11l1.76,-1.91l0.61,-1.39l2.32,-1.33l2.5,-0.75l0.72,0.14l1.38,1.17l2.02,-0.0l5.03,-1.15l1.71,-1.38l0.08,-0.46l-0.41,-0.22l-7.2,1.24l-0.09,-0.31l1.55,-1.5l0.43,-1.2l0.86,-0.45l5.24,-0.57l2.87,0.23l4.31,0.51l2.77,1.23l1.27,-0.08l1.2,-0.35l0.66,-0.54l-0.17,-0.69l-1.96,-0.46l0.08,-0.64l3.4,-0.97l3.9,-0.23l0.29,-0.65l-1.05,-0.98l-8.54,1.25l-2.16,-0.82l-1.92,-0.02l-1.28,0.51l-3.32,0.42l0.48,-1.11l2.15,-2.94l0.74,-0.46l5.1,-1.38l2.53,-1.63l3.76,-0.26l3.04,0.43l1.55,2.02l5.55,3.15l0.45,-0.02l-0.16,-1.34l-3.67,-3.44l-1.39,-0.85l-0.91,-1.47l0.3,-1.32l0.99,-0.9l4.06,-0.56l0.95,-0.71l0.22,-1.35l-0.74,-1.02l-2.79,-0.46l-0.24,-0.78l0.35,-0.54l2.3,-1.35l3.43,-0.91l3.72,1.05l-0.85,1.42l0.03,1.1l0.36,0.34l0.97,0.09l2.5,-2.4l2.53,-0.31l2.2,-0.78l1.72,2.01l1.34,0.96l0.53,1.63l0.88,0.37l1.1,-0.94l3.3,-0.73l3.35,0.47l2.32,-0.3l0.39,-0.56l-1.06,-1.99l0.54,-1.1l2.88,-1.45l2.34,-0.5l3.37,-1.82l0.2,-0.52l-0.89,-1.59l-1.46,-0.24l3.35,-1.94l0.12,-0.61l-0.57,-0.59l-1.9,-0.53l-3.2,1.34l-2.23,1.48l0.02,0.68l1.46,1.29l-1.23,1.3l-7.99,4.24l-3.74,1.22l-1.44,-0.16l-2.06,-3.63l-0.37,-0.22l-2.26,0.2l0.56,-1.66l1.17,-1.4l2.19,-1.22l1.06,-1.46l0.91,-2.09l3.05,-2.1l4.41,-5.13l3.56,-1.63l1.42,-1.85l2.14,-0.82l1.74,-1.35l1.46,-0.17l2.61,-1.28l1.59,-1.61l-0.25,-0.68l-0.97,-0.1l-3.2,1.24l0.63,-2.53l1.77,-1.44l8.82,-4.35l2.09,1.98l2.74,-0.3l3.33,-2.63l2.45,-2.81l0.03,-0.49l-0.47,-0.15l-1.3,0.48l-4.18,2.7l-1.12,0.22l-0.44,-0.12l-0.57,-1.09l-0.96,-0.34l-0.9,0.17l-0.6,-0.51l-0.14,-1.58l1.98,-4.43l4.76,-5.24l0.87,-2.16l1.51,-0.99l2.11,0.24l0.9,-0.37l0.18,-0.55l-0.77,-1.41l-2.49,-1.33l7.75,-1.75l3.85,0.06l1.35,-0.96l2.16,-0.63l1.61,-1.13l-0.02,-0.67l-1.14,-0.54l-6.37,1.52l-4.78,0.46l-0.62,-4.09l0.41,-2.05l0.84,0.04l0.41,-0.35l0.25,-2.21l1.17,-1.2l1.9,-0.35l2.23,-1.72l2.18,0.26l2.33,-0.27l0.24,-0.68l-0.58,-0.57l-2.9,-0.8l-0.45,-0.8l1.71,-0.96l1.18,-0.24l2.91,-3.35l1.39,0.1l1.69,-1.01l1.64,0.34l4.23,-1.18l8.65,-0.18l0.38,-0.3l0.26,-1.02l-0.34,-0.5l-8.31,-0.5l-4.78,0.14l4.07,-4.74l2.62,-1.62l1.91,0.39l2.4,1.68l1.53,0.19l0.6,0.42l1.45,2.41l0.56,0.07l0.45,-0.44l-0.23,-2.02l1.45,-1.66l0.01,-0.52l-0.82,-0.63l-2.24,0.61l-1.61,-0.6l-1.3,-1.22l-0.31,-0.94l1.52,-1.58l0.08,-0.57l-0.57,-0.72l-0.5,-0.1l-3.51,1.89l-2.88,0.28l0.42,-1.34l-0.25,-1.37l3.16,-3.18l0.98,-0.33l1.73,0.25l1.89,0.97l3.07,-0.68l0.26,-0.47l-0.56,-1.23l-3.25,-0.35l-0.56,-0.49l0.13,-0.32l2.23,-0.78l2.23,-1.39l2.56,-0.4l2.05,-1.03l0.41,0.39l0.79,4.05l1.9,3.28l0.98,0.31l0.45,-0.5l-0.68,-2.59l1.33,-1.19l0.41,-0.88l-0.28,-0.53l-0.85,-0.21l-0.68,-0.84l-1.07,-2.98l0.28,-0.58l2.33,-1.59l2.94,-0.37l3.25,1.17l1.3,0.04l8.52,-1.9l0.25,-0.5l-0.23,-0.56l-2.0,-0.82l-3.16,0.52l-8.21,-0.17l-0.57,-0.4l-0.1,-0.67l0.77,-1.23l0.88,-0.71l3.04,-1.36l3.48,-0.26l3.52,-2.5l1.5,-2.11l0.74,-2.81l2.0,-2.19l5.55,-1.56l0.2,-0.9l-0.53,-1.14l0.04,-2.02l1.39,-2.44l0.86,-0.79l1.14,0.66l1.52,1.87l2.21,1.03l3.04,0.21l1.02,-0.57l-0.05,-0.7l-2.21,-1.01l-1.53,-1.21l-0.1,-0.98l0.53,-0.47l2.73,-0.08l1.64,-0.97l0.77,-2.5l2.01,-1.97l6.3,-1.3l0.22,0.25l-0.34,3.86l-0.77,2.7l0.02,1.91l0.29,0.38l0.45,-0.16l1.34,-2.01l1.72,-5.22l1.26,-2.39l1.36,-1.31l3.1,-1.38l0.59,1.45l-0.72,4.51l0.06,1.44l-0.77,1.82l-3.14,4.28l0.08,0.89l0.5,0.28l2.12,-1.02l3.78,-3.96l3.22,0.49l0.46,-0.35l-0.06,-0.66l-2.39,-2.32l-0.35,-1.26l0.17,-3.66l0.84,-1.24l4.41,-0.04l0.96,0.67l1.78,-0.05l0.35,-0.24l1.13,-2.54l2.03,-0.2l2.09,1.77l2.52,1.2l2.02,1.73l0.51,0.0l0.58,-0.48l0.13,-0.41l-1.11,-4.11l-1.29,-1.65l-2.78,-0.9l-2.72,-1.79l-0.53,-0.8l2.15,-0.51l3.46,0.62l2.73,-1.45l0.94,0.35l2.03,-0.73l1.6,1.01l1.09,-0.57l0.42,-1.26l3.24,-0.82l2.1,0.78l1.07,0.76l1.38,4.8l1.87,1.95l1.31,0.98l1.7,0.08l0.63,-0.88l-0.06,-0.53l-1.14,-0.99l-0.26,-0.79l0.54,-2.31l0.62,-0.89l3.76,-3.66l3.08,-1.86l2.11,-0.31l3.32,-4.31l0.84,-0.7l0.78,-0.16l0.31,-0.47l-0.22,-1.07l-1.84,-0.88l-0.04,-0.83l2.28,-1.52l2.84,-2.62l1.15,-0.15l0.87,0.7l2.81,1.2l3.03,2.11l1.09,-0.1l1.51,-1.52l1.59,0.24l2.48,1.05l0.09,0.44l-1.4,0.88l-5.34,5.55l-0.92,1.62l-0.88,4.07l-2.09,2.72l-0.04,2.12l1.23,0.95l2.43,-0.75l2.81,-2.41l0.8,-2.66l6.95,-6.9l3.3,-3.87l3.66,-3.14l1.68,-0.53l0.78,1.68l-0.73,2.55l-1.53,1.7l0.07,0.6l0.98,0.67l-0.8,4.29l0.01,1.07l0.5,0.38l5.56,-2.51l2.31,-4.33l0.49,-1.52l1.51,-1.3l3.07,-0.01l0.39,-0.32l-0.08,-1.02l-3.77,-1.98l-0.27,-0.54l4.51,-3.24l1.64,0.23l1.19,0.54l4.36,0.4l3.1,1.53l-0.11,2.24l-0.67,0.96l-0.67,0.6l-4.3,1.96l-0.87,1.1ZM756.8,33.48l-2.19,0.6l-0.05,-0.09l1.06,-2.35l0.65,0.05l1.44,1.11l-0.91,0.68ZM694.5,3.24l3.24,-1.93l3.48,0.91l1.18,-0.0l1.68,1.66l0.73,0.04l-0.05,0.28l-1.54,0.43l-3.26,0.51l-2.15,-0.15l-1.48,-1.46l-1.85,-0.29ZM676.11,14.77l-2.24,0.85l-1.26,-0.71l-0.51,-0.7l-0.08,-1.73l0.28,-0.94l0.87,-0.43l3.59,2.07l-0.64,1.59ZM670.58,15.65l0.31,1.83l-1.11,1.19l-2.87,1.76l-0.12,0.61l-0.64,0.29l-1.35,0.3l-0.41,-0.17l0.09,-1.24l-0.29,-0.67l-0.54,-0.17l-0.94,0.5l-0.82,-0.53l0.24,-1.01l0.99,-0.93l1.66,-0.64l1.41,0.18l3.74,-2.54l0.64,1.25ZM668.13,9.06l-0.57,1.15l-4.23,3.85l-1.79,0.48l-1.29,0.76l-2.24,-0.41l-1.54,1.06l-2.45,0.03l-2.48,-1.12l-1.76,-1.58l2.44,-0.24l1.51,0.21l1.19,-1.09l1.94,0.11l3.8,-0.75l1.7,0.33l3.15,-2.48l1.07,0.02l1.3,-0.61l0.25,0.27ZM632.13,26.52l-1.42,0.6l-1.43,-0.54l-0.88,0.07l-0.57,-0.73l0.06,-0.58l0.93,-1.0l2.01,-0.61l1.59,0.25l-0.3,2.55ZM618.46,23.91l0.85,0.4l1.16,0.04l1.08,1.22l1.16,0.66l-0.83,0.46l-2.68,-0.01l-0.82,-1.9l-1.32,-1.37l-0.11,-0.62l0.52,-0.08l0.99,1.21ZM611.42,27.32l1.31,1.58l1.41,0.0l0.98,-0.71l1.05,0.5l-0.13,0.73l-2.0,1.5l-1.38,2.01l-1.62,0.43l-1.14,-0.16l-1.71,1.26l-2.75,2.91l-0.3,1.36l-6.62,1.0l-1.74,-0.48l-0.67,-0.77l1.82,-0.35l0.35,-0.37l0.05,-0.86l1.11,-0.95l0.41,-1.1l0.5,-0.21l1.67,0.18l1.11,-0.91l0.51,0.57l0.68,-0.15l0.32,-1.04l-0.18,-1.5l1.77,-1.6l0.83,-1.23l0.97,-0.66l0.97,0.11l0.43,-0.29l0.32,-1.16l-0.2,-1.95l0.85,-1.63l0.54,-0.04l0.39,1.32l0.08,2.68ZM588.18,39.31l1.24,1.04l2.37,-0.47l1.73,1.23l1.09,0.15l0.79,2.15l-0.6,0.87l-1.19,0.73l-0.29,1.48l0.32,1.44l-4.59,0.78l-0.96,-0.77l-0.48,-0.01l-2.23,1.59l-2.19,2.45l-0.49,0.13l-0.3,-0.65l-1.59,-0.54l-1.71,-0.05l2.13,-1.1l0.35,-1.26l-0.3,-2.33l0.35,-1.67l0.84,-0.67l3.6,0.4l0.4,-0.21l0.46,-0.84l-0.29,-0.91l-1.77,-0.93l1.26,-0.6l1.26,-0.07l0.78,-1.35ZM564.03,63.2l0.26,0.57l0.6,-0.03l1.78,-2.18l1.94,-0.67l1.19,-1.96l-0.08,-1.16l0.3,-0.74l1.54,-0.58l0.51,-0.13l1.1,0.7l1.51,2.7l-0.32,1.68l-2.27,1.42l-2.05,0.76l-1.97,1.76l-0.98,1.4l-0.62,0.23l-0.99,-0.45l-1.0,-0.0l-1.33,1.3l-3.11,0.95l-0.9,-0.2l-0.04,-0.94l-0.45,-0.38l-0.78,0.1l-1.44,1.55l-1.76,0.57l-1.75,-0.49l-3.97,2.48l-3.63,0.45l-0.87,-0.2l-0.0,-1.04l4.21,-3.17l6.82,-0.95l4.52,-4.21l1.14,-4.61l0.98,-1.56l-0.46,-1.31l-1.13,-0.33l-0.05,-0.99l0.54,-1.38l3.49,-3.01l2.0,-2.51l0.83,-0.49l0.9,0.0l0.78,0.48l-0.15,1.02l-1.58,2.35l-2.55,2.45l0.3,1.51l0.99,1.32l0.28,3.88l-1.79,2.64l-0.46,1.42ZM556.54,54.46l2.5,3.67l-0.58,2.34l-1.51,1.17l-4.24,0.12l-0.93,-0.51l-0.38,-0.83l-0.68,-0.21l-2.02,0.91l-1.06,0.11l-1.33,-0.6l-0.27,-0.72l2.17,-2.25l1.51,0.08l1.57,0.56l0.44,-0.22l0.64,-1.34l0.13,-1.3l1.99,0.41l0.48,-0.39l0.0,-2.2l0.64,-0.04l0.9,1.25ZM538.67,70.65l0.96,0.42l1.95,-0.11l-0.84,0.76l-1.83,0.42l-1.5,1.47l-2.63,0.27l-1.11,0.86l-0.71,-0.54l-0.6,0.13l-0.45,1.35l-1.52,0.4l-0.29,-1.54l1.17,-1.47l1.83,-0.2l1.4,-1.9l1.86,-0.52l2.31,0.17ZM526.33,79.08l-1.04,0.64l1.42,-3.36l1.2,-1.04l0.24,0.17l-0.26,1.89l-1.56,1.71ZM520.21,124.0l-0.58,0.03l0.0,-0.36l1.34,-1.14l2.38,-0.19l-3.14,1.65ZM519.02,120.83l-0.67,0.08l1.06,-1.26l0.6,-1.36l0.56,-0.36l0.86,0.5l0.02,0.92l-0.5,0.9l-1.93,0.59ZM512.64,130.29l-0.68,0.52l-1.32,-0.35l0.37,-0.91l0.78,-0.38l1.19,0.26l-0.35,0.85ZM502.61,147.16l-0.44,0.38l-1.54,-0.44l-3.0,0.37l-0.68,-0.32l0.6,-0.7l2.65,-1.15l1.27,0.05l1.27,1.24l-0.12,0.58ZM465.49,173.05l-1.51,-0.0l4.89,-1.52l0.48,-0.61l0.39,0.44l-0.14,0.94l-4.11,0.75ZM460.35,180.13l-2.56,-0.29l-0.84,-0.71l3.06,-1.01l0.58,0.58l0.05,1.08l-0.3,0.36ZM418.13,241.28l1.08,2.55l0.03,1.89l-0.6,-0.09l-0.57,-1.19l-0.17,-2.75l0.22,-0.42ZM417.53,227.52l-1.35,0.07l0.25,-1.42l0.69,-0.25l0.54,0.73l-0.13,0.88ZM229.04,8.0l-1.2,-0.01l1.39,-1.16l5.98,-2.82l2.44,-2.71l4.12,-0.83l0.21,1.05l-0.27,1.57l-3.83,1.4l-4.49,1.0l-4.36,2.51Z\",\n            name: \"Norway\"\n          },\n          LI: {\n            path: \"M479.66,489.8l0.02,-1.42l0.15,-0.43l0.74,1.46l-0.19,0.45l-0.72,-0.06Z\",\n            name: \"Liechtenstein\"\n          },\n          LV: {\n            path: \"M693.81,289.47l3.55,1.99l1.99,0.57l1.08,0.9l2.53,0.56l0.49,0.96l3.62,3.6l2.41,1.22l1.17,0.26l5.65,-1.51l2.97,1.36l4.19,0.48l0.5,1.6l3.78,2.51l0.01,1.64l-0.9,1.1l-0.62,1.56l-0.11,1.55l-0.95,2.51l0.51,0.58l2.08,-0.43l0.37,0.17l0.31,0.4l0.24,1.72l1.27,1.73l0.34,1.03l1.18,0.95l1.31,5.24l-0.59,1.84l-1.52,0.28l-1.91,1.15l-3.42,3.12l-0.81,2.06l-7.03,-0.58l-1.55,0.46l-1.71,1.91l-2.96,0.71l-2.36,-0.64l-1.52,-0.83l-2.67,-2.8l-5.8,-4.02l-1.15,-0.52l-6.83,-1.31l-1.59,-2.24l-0.54,-1.35l-1.1,-0.49l-2.14,0.57l-3.02,1.85l-4.67,0.37l-4.2,-1.24l-8.35,-0.73l-1.97,0.8l-1.07,-1.05l-1.26,-0.31l-1.54,0.36l-2.45,0.04l-6.91,-0.6l-5.95,1.81l-7.73,4.37l-0.35,-2.96l0.22,-7.21l0.51,-3.44l2.41,-2.01l1.33,-1.71l0.8,-2.32l0.72,-3.67l3.52,-4.67l2.8,-0.51l7.98,-2.39l1.23,2.38l6.53,5.21l2.21,4.68l4.89,2.3l4.09,-0.69l4.9,-3.24l1.55,-1.77l0.29,-1.57l-0.55,-6.25l-0.82,-2.71l0.2,-1.21l10.32,-3.79l1.64,1.26l0.73,-0.15l0.24,-0.81Z\",\n            name: \"Latvia\"\n          },\n          LT: {\n            path: \"M639.02,342.33l-0.39,-1.13l0.47,-2.2l-2.37,-6.79l-0.19,-4.61l7.95,-4.51l5.74,-1.75l6.79,0.61l2.53,-0.04l1.39,-0.36l1.04,0.26l1.27,1.12l1.22,-0.19l0.91,-0.62l8.2,0.71l4.28,1.25l4.86,-0.4l3.12,-1.88l1.75,-0.52l0.54,0.16l0.53,1.3l1.95,2.56l6.96,1.34l0.97,0.45l5.67,3.93l2.72,2.84l1.7,0.92l2.31,0.66l-0.34,1.84l-1.48,3.87l0.12,0.41l0.75,0.57l3.29,0.4l-1.48,1.08l-0.6,1.26l-4.13,-0.12l-0.74,0.49l-0.95,2.16l-0.97,0.67l-1.73,0.29l-1.62,0.68l-1.11,1.7l-0.79,2.17l0.04,2.82l-1.39,1.93l-1.03,2.49l0.51,0.92l1.76,0.29l0.48,0.48l0.08,1.37l-2.03,0.25l-0.64,-0.28l0.32,-0.85l-0.29,-0.93l-0.72,-0.7l-0.47,-0.03l-1.13,0.71l-1.24,0.04l-1.41,0.69l-1.0,1.14l-0.71,0.33l-2.58,-0.13l-0.73,0.71l-0.6,2.36l-1.96,-0.05l-3.92,1.55l-1.77,-1.04l-4.31,0.27l-1.89,0.43l-3.01,-0.41l0.02,-2.29l-0.39,-1.31l-1.24,-1.24l-2.8,-1.58l-1.61,-0.43l-0.45,-0.8l-1.72,-0.82l-1.06,-0.13l-0.74,0.5l-0.85,-1.99l0.06,-1.19l1.96,-5.08l-0.06,-0.83l-1.32,-1.32l-1.45,-0.78l-1.11,-1.78l-6.66,-0.08l-2.63,-0.68l-4.3,-1.77l-2.12,-1.44l-2.03,0.1Z\",\n            name: \"Lithuania\"\n          },\n          LU: {\n            path: \"M433.15,437.03l-0.02,1.54l0.46,1.19l0.9,1.05l1.71,1.44l2.06,0.7l-0.04,1.05l-1.43,1.94l-0.47,2.14l-1.81,-0.59l-2.33,0.93l-2.45,-1.16l1.0,-2.17l-2.04,-2.82l0.23,-1.64l1.61,-2.82l1.29,-1.3l1.16,0.19l0.17,0.33Z\",\n            name: \"Luxembourg\"\n          },\n          FO: {\n            path: \"M263.24,203.53l-0.39,0.92l-0.69,-0.21l-0.02,-1.73l1.1,1.03ZM260.24,213.24l-2.12,-1.39l-0.34,-0.59l2.22,0.79l0.37,0.54l-0.11,0.65ZM259.07,209.25l-3.26,-2.64l-1.87,-3.49l2.24,-0.5l4.06,1.71l-0.25,2.13l-1.84,-0.94l-0.67,0.61l-0.01,0.73l1.6,2.38ZM257.22,217.52l1.57,0.48l0.55,2.18l-1.8,-1.85l-0.31,-0.8ZM252.95,206.27l1.28,0.96l-1.0,0.36l-0.92,-0.12l-1.48,-0.53l-0.27,-0.64l1.89,-0.23l0.51,0.19Z\",\n            name: \"Faeroe Is.\"\n          },\n          PL: {\n            path: \"M543.65,368.02l2.24,0.2l4.48,-1.73l7.75,-2.26l8.26,-2.12l3.9,-0.68l5.16,-4.95l4.31,-0.78l5.16,-2.51l7.82,-1.63l3.25,-0.36l3.12,-0.04l2.21,1.0l-0.57,-0.04l-0.39,0.57l2.05,4.35l1.16,1.6l2.4,1.27l2.0,0.42l5.97,-0.69l2.69,-1.31l8.11,0.66l26.59,1.14l7.65,0.18l1.4,-0.84l1.75,0.49l1.01,1.2l3.12,1.15l2.17,1.68l0.33,1.05l-0.04,2.27l1.64,6.67l2.6,6.11l1.31,4.41l0.39,3.77l-0.18,1.9l-0.61,0.58l-4.89,2.03l-1.01,0.69l-2.89,3.33l-0.47,1.1l0.51,0.99l3.51,1.58l1.85,1.18l0.6,0.91l-0.02,1.06l-0.57,1.63l0.2,1.32l-1.03,1.7l-0.08,2.01l1.61,3.05l0.13,2.59l2.67,3.26l1.68,3.35l1.47,1.21l-1.11,0.52l-0.48,0.6l1.52,3.27l-0.05,1.28l-1.46,1.98l-3.57,0.67l-4.09,3.59l-5.08,4.9l-5.28,6.4l1.06,4.51l-0.36,2.22l1.95,1.75l-0.24,0.41l-2.87,-0.93l-1.5,-0.09l-5.93,-2.17l-0.67,-1.45l-1.17,-0.92l-3.61,-1.28l-3.95,-0.3l-3.67,0.18l-1.34,1.47l-1.49,0.35l-1.84,-0.96l-1.53,-0.38l-3.52,0.1l-3.01,1.33l-0.84,0.92l-0.53,1.22l-1.56,-0.57l-1.82,0.42l0.34,-0.9l-0.2,-1.86l-0.8,-0.59l-1.18,-0.23l-2.68,-3.4l-0.49,0.01l-2.67,1.6l-1.25,1.8l-1.91,0.05l-0.36,-1.5l-1.45,-0.45l-0.45,-1.77l-2.8,-2.47l-0.57,-2.25l-0.76,-0.46l-2.28,-0.49l-0.66,0.22l-3.69,-2.09l-0.89,0.68l-1.68,0.28l-1.96,-2.02l-0.78,-0.32l-0.18,-0.17l1.22,-0.48l0.56,-0.84l-0.17,-1.46l-0.42,-0.42l-2.29,0.71l-1.7,0.16l-3.57,-2.18l-3.74,-0.88l-0.39,0.17l-0.17,0.62l1.62,2.71l-1.84,0.82l-1.61,1.27l-0.79,0.19l-3.93,-4.52l-1.56,-0.77l0.71,-0.74l1.08,-0.38l0.91,-1.37l-0.16,-0.72l-1.84,-1.31l-3.84,0.66l-0.82,-0.97l-2.85,-1.21l-5.03,-1.25l-0.92,-1.11l-0.5,-1.57l-3.64,-1.01l-0.61,0.61l0.01,1.78l-1.35,0.36l1.83,-3.66l0.72,-3.12l-1.56,-3.9l-2.48,-1.15l0.28,-1.67l-1.8,-3.51l0.94,-1.3l1.05,-3.2l-0.68,-0.86l0.02,-1.7l-0.35,-0.77l-0.98,-0.65l-0.68,-1.21l0.8,-3.27l-1.53,-2.24l-3.5,-2.48l-1.54,-1.59l0.1,-0.7l0.63,-0.77l1.41,-0.89l1.02,-1.45l0.65,-1.93l0.03,-1.7l-1.56,-5.02l-0.4,-2.5l3.71,1.43l0.56,-0.46l-0.4,-1.21l0.07,-2.13l-0.31,-0.36l-4.44,-0.86l-0.11,-0.47ZM603.71,353.39l0.66,0.35l-0.21,-0.08l-0.46,-0.27Z\",\n            name: \"Poland\"\n          },\n          XK: {\n            path: \"M623.28,565.63l0.23,-1.37l-0.65,-1.57l1.63,0.09l0.64,-0.79l3.48,-1.07l0.27,-0.76l-0.2,-0.76l1.93,-1.27l0.5,-0.84l0.09,-0.77l-0.53,-1.12l1.95,-0.93l0.57,1.38l2.88,1.35l2.09,2.07l0.37,0.86l2.01,1.19l-0.14,1.07l0.28,0.43l4.62,1.2l-1.88,4.12l-1.1,0.72l-0.15,0.66l0.36,0.88l-1.97,0.42l-0.92,0.69l-0.55,1.2l-1.4,-1.12l-1.41,-0.04l-3.96,1.67l-0.59,1.07l-0.11,1.91l-0.39,0.51l-1.14,-0.15l0.02,-2.13l-1.26,-3.53l-1.98,-1.52l-1.41,-0.49l-2.18,-3.23Z\",\n            name: \"Kosovo\"\n          },\n          CH: {\n            path: \"M474.98,480.14l0.93,1.21l2.74,1.45l1.43,0.09l0.68,0.53l-1.86,4.76l-0.08,1.49l0.52,0.93l1.74,0.08l2.81,0.78l0.54,1.22l3.54,1.51l1.02,-0.27l2.12,-1.93l0.51,0.2l0.41,1.32l-0.75,3.44l0.56,0.97l-0.02,0.65l-1.65,-0.23l-1.29,-0.99l-1.55,0.38l-0.6,1.17l-0.22,1.86l0.55,0.63l0.74,2.52l-0.69,0.02l-1.59,-2.16l-0.91,-0.09l-3.3,1.21l-1.21,-0.13l-0.52,-0.58l-0.68,-2.14l-0.42,-0.32l-1.84,-0.17l-0.8,0.69l-0.12,3.09l-3.34,4.57l-0.07,0.81l0.58,1.67l-0.72,0.36l-0.75,-1.36l-1.21,-1.09l0.49,-0.82l-0.08,-0.63l-2.59,-0.79l-2.33,-2.15l-0.24,-3.0l-0.6,-0.57l-0.93,0.09l-1.91,1.79l-1.9,1.26l-0.23,0.68l0.55,1.27l-1.71,2.33l-2.51,1.44l-3.3,-0.92l-3.01,1.12l-2.56,0.51l-0.83,-0.33l-1.26,-1.8l-2.35,-2.36l0.54,-1.67l-0.64,-1.73l0.1,-0.55l-0.58,-0.62l-2.44,-0.37l-2.11,0.11l-1.59,0.66l-1.5,1.42l0.49,1.3l-0.73,0.74l-1.4,0.72l-1.06,0.03l-0.01,-0.52l1.69,-1.25l0.38,-1.74l-0.82,-1.03l1.23,-2.71l3.31,-2.41l0.66,-3.3l2.81,-1.32l3.99,-4.25l0.72,-1.16l-0.34,-0.8l-0.94,-0.37l0.69,-0.76l1.01,-0.54l0.9,-0.01l0.97,0.98l2.09,-0.03l1.04,-0.38l1.17,-1.66l1.37,-0.65l1.08,0.36l3.11,0.1l2.31,-0.21l1.45,-0.53l3.48,0.18l1.83,-0.89l0.01,-0.53l-0.38,-0.39l-1.8,-0.11l0.3,-0.51l1.54,-0.64l2.09,1.29l1.19,-0.13l0.95,0.88l3.86,-0.25Z\",\n            name: \"Switzerland\"\n          },\n          AD: {\n            path: \"M373.44,566.17l-1.46,0.73l-1.49,0.29l-0.26,-1.45l0.13,-0.56l0.71,-0.55l2.52,0.57l0.23,0.31l-0.38,0.67Z\",\n            name: \"Andorra\"\n          },\n          EE: {\n            path: \"M681.02,292.17l1.82,-4.13l0.34,-3.01l0.83,-0.92l-0.26,-1.25l-2.11,-0.9l-0.93,0.07l-1.54,1.86l-1.37,0.39l-1.34,-0.75l-3.16,-1.02l-0.72,-1.23l-0.33,-1.62l-1.67,-1.33l-0.63,-1.43l0.21,-0.83l1.41,-0.67l0.61,-0.79l-0.35,-0.63l-2.02,0.06l-0.86,-2.23l1.02,-1.49l-0.57,-0.94l0.62,-1.45l-0.25,-1.46l3.54,-1.43l4.03,-0.33l0.36,-0.5l-0.29,-1.14l1.37,-0.12l2.65,-1.86l2.78,0.31l3.93,-1.31l7.61,0.02l1.28,-0.85l-0.01,-1.46l3.45,0.02l9.0,1.62l2.2,0.01l2.99,1.6l1.75,0.46l4.98,0.02l7.53,0.73l1.76,-1.2l1.2,1.24l0.06,0.35l-0.81,0.25l-0.7,0.83l-0.89,0.08l-0.75,0.46l-2.01,4.63l-1.0,1.16l-1.86,-0.45l-3.15,0.26l-2.71,0.88l-1.96,1.68l-0.01,1.85l2.53,3.07l1.06,3.8l1.27,1.16l1.32,1.87l0.64,1.7l2.36,4.15l0.34,1.32l1.41,1.24l-3.15,1.13l-0.66,1.42l-1.29,1.24l-0.65,2.49l-1.76,-0.23l-3.1,-1.39l-1.03,0.03l-4.85,1.48l-0.81,-0.22l-2.13,-1.06l-3.53,-3.51l-0.79,-1.2l-2.57,-0.57l-0.91,-0.82l-2.12,-0.63l-3.1,-1.88l-0.9,-0.23l-0.43,0.19l-0.22,0.83l-1.92,-1.29l-2.69,1.15l-6.13,1.9l-1.25,0.77ZM666.97,278.74l-0.76,0.14l-2.16,-1.14l0.85,-0.76l1.89,0.49l0.18,1.27ZM647.68,284.33l1.21,-1.0l0.33,-0.88l-1.4,-2.14l1.14,-0.04l1.0,0.59l1.87,-0.79l0.73,0.23l0.47,-0.18l0.75,-1.3l2.77,-0.86l1.92,0.59l1.76,-0.47l1.78,0.29l4.32,2.36l-2.29,0.37l-1.11,1.14l-0.83,0.23l-3.35,2.53l-2.91,-0.1l-1.98,0.46l-1.39,1.11l-0.69,2.3l-0.93,1.54l-0.87,0.51l-0.69,0.06l-0.04,-0.64l2.71,-3.11l-0.23,-0.59l-1.05,-0.32l-2.99,-1.89ZM661.53,273.2l-1.11,0.89l-0.64,-0.61l-0.66,0.02l-1.35,2.09l-1.33,0.31l-0.56,-0.26l0.03,-0.74l-1.12,-2.39l-1.41,-0.64l-2.39,-0.33l4.37,-0.49l1.83,-2.15l0.62,-0.09l0.4,0.14l0.6,1.28l2.34,0.45l0.84,1.22l0.26,1.21l-0.72,0.09Z\",\n            name: \"Estonia\"\n          },\n          IS: {\n            path: \"M31.07,119.93l0.78,-1.15l1.61,-0.28l4.07,2.06l0.46,0.86l-0.12,0.97l0.59,0.58l1.15,-0.26l1.6,0.23l1.28,-1.18l0.53,0.18l0.52,0.85l-0.08,2.47l0.67,0.18l0.77,-0.74l1.34,-0.06l0.57,-0.82l-0.3,-3.42l-5.08,-2.02l-1.59,-1.09l2.14,-0.53l3.31,0.02l0.54,-0.25l0.04,-0.67l-0.81,-0.56l-1.45,-0.29l-0.78,-0.84l-1.8,0.29l-3.49,-0.24l2.65,-1.57l2.25,0.17l2.17,-0.28l1.66,0.32l3.37,2.7l2.76,1.16l4.63,3.74l2.86,1.41l-1.29,0.67l-0.13,0.64l1.85,0.74l0.89,0.81l-0.88,3.03l-0.82,0.75l-2.59,-0.54l-0.41,0.17l0.0,0.45l0.8,1.08l1.88,0.98l0.21,1.15l1.01,-0.03l-0.8,1.9l0.1,0.7l1.67,0.26l0.95,0.72l1.35,3.36l0.72,-0.03l0.75,-2.67l0.28,-0.71l0.75,-0.57l0.78,-2.62l1.71,-1.48l1.4,-0.51l1.72,1.83l1.05,0.29l0.7,-0.3l1.38,-3.46l0.17,-2.52l-0.4,-2.63l0.22,-1.76l0.73,-0.96l0.91,-0.28l1.25,0.39l0.94,0.63l2.01,2.62l3.17,2.99l0.89,0.55l1.58,0.24l0.92,-0.75l-0.16,-4.45l0.82,-1.73l2.45,-0.49l2.78,-1.42l1.76,-0.48l1.69,0.98l3.36,3.79l2.41,1.8l1.51,3.25l0.57,0.25l0.7,-0.5l0.28,-0.64l0.06,-1.56l-2.91,-5.85l0.12,-0.95l4.9,0.32l1.06,0.59l2.5,2.56l1.27,0.86l2.2,-1.44l3.52,-3.91l0.88,0.12l1.88,1.21l1.36,0.43l1.36,-0.19l3.5,-1.42l1.05,-2.16l-1.46,-3.81l0.41,-0.5l3.14,-0.9l2.77,-0.07l4.05,3.55l0.28,1.79l2.4,1.38l1.69,0.07l2.54,-0.77l3.73,-2.29l1.42,-0.45l1.92,0.1l-1.26,0.29l-1.68,1.06l-2.97,3.92l0.2,0.85l1.53,0.97l1.58,0.53l1.58,-0.44l0.86,0.67l0.33,1.12l-0.24,1.28l-1.95,2.46l0.08,0.82l1.38,0.42l4.66,-0.73l0.73,2.3l-1.88,1.76l-0.05,0.52l0.51,0.13l2.27,-1.14l1.71,-0.31l3.01,0.56l1.14,0.59l0.7,1.09l0.47,0.16l1.26,-0.35l0.48,0.46l0.02,0.45l-0.66,1.81l-1.5,0.63l-0.34,0.8l1.16,1.48l1.0,0.19l-0.24,0.7l-1.16,0.7l0.08,0.68l2.27,1.05l0.19,0.64l-0.48,1.12l-0.53,0.32l-1.6,0.06l-1.19,0.49l-0.2,0.53l0.29,1.51l-0.28,1.02l-1.26,1.62l-1.18,0.86l-1.1,0.53l-2.03,-0.19l-1.14,-0.44l-0.54,0.41l0.11,1.26l-1.04,0.78l-0.14,0.44l0.6,1.18l-0.67,1.57l-0.9,0.98l-3.26,1.43l-1.83,1.28l-1.16,0.47l-3.2,-0.01l-3.29,0.86l-4.61,1.78l-3.14,1.45l-5.52,4.21l-2.25,1.06l-3.96,0.53l-11.96,2.76l-1.63,1.96l-0.06,0.36l0.49,0.61l-0.73,0.94l-1.63,0.77l-2.27,-0.71l-0.55,0.49l0.36,0.92l-5.26,1.22l-8.0,-0.75l-7.17,-2.03l-5.63,-0.41l-3.77,-2.65l0.22,-0.77l1.52,-0.44l-0.0,-0.49l-0.69,-0.87l-0.47,-0.12l-2.39,1.47l-0.55,-0.03l-0.77,-0.45l-0.38,-0.76l-1.96,-0.22l-3.31,-1.72l0.52,-0.39l0.0,-0.65l-0.33,-0.19l-2.03,0.09l-2.76,1.66l-16.08,0.58l-1.0,-3.65l0.36,-0.95l1.51,1.48l0.97,0.46l6.2,-1.75l2.75,-2.48l1.93,-3.05l1.4,-0.87l1.88,-0.27l0.34,-0.36l-0.28,-0.41l-1.27,-0.41l-1.34,-0.02l-4.72,1.83l1.48,-0.95l0.18,-0.44l-1.34,-0.54l-0.03,-0.6l0.62,-1.17l3.21,-1.73l1.31,-0.36l0.35,-0.36l-0.06,-0.61l-1.56,-0.48l-3.34,1.84l-2.33,0.61l-1.77,-0.77l-0.77,-0.91l1.13,-1.61l-0.17,-0.76l-3.1,-1.61l-3.64,0.07l-8.59,-0.77l-6.31,1.85l-1.28,-0.73l-1.11,-1.62l0.13,-0.38l1.65,-0.52l2.39,0.23l5.12,-0.99l1.5,-0.94l1.31,0.76l2.88,-0.83l1.42,-0.89l2.48,0.42l1.48,-0.31l8.37,-0.29l1.38,-1.45l0.5,-1.5l-0.27,-0.67l-0.47,-0.14l-3.45,1.35l-4.68,-0.73l-1.02,-0.57l2.26,-1.62l5.53,-2.4l0.77,-0.48l0.26,-0.86l-0.23,-0.42l-2.19,-1.02l-4.15,0.23l-1.15,-1.19l-3.44,-0.72l-2.3,0.42l-1.42,-0.69l-2.96,1.01l-6.52,1.47l-3.87,1.32l-4.32,-1.72l-3.0,-0.29l1.48,-1.5l1.08,-0.26l1.12,0.14l2.43,1.18l1.66,0.37l0.45,-0.21l-0.1,-0.48l-1.92,-1.6l-0.12,-1.55l-1.18,-1.48l2.13,0.26l4.18,1.93l1.95,-0.34l2.6,-1.25l0.09,-0.71l-0.41,-0.27l-3.61,-0.1l-1.73,-0.37l-1.39,-1.18l0.81,-0.36l2.86,0.1l0.39,-0.25l-0.11,-0.45l-3.27,-2.81l0.21,-0.7l3.27,0.93l1.13,-0.2l-0.78,-1.08l-1.26,-0.79Z\",\n            name: \"Iceland\"\n          },\n          AL: {\n            path: \"M613.48,601.01l0.69,0.32l0.52,-0.18l0.25,-0.48l-0.24,-1.33l-1.36,-2.98l1.67,-4.38l-0.07,-2.75l0.32,-2.07l-0.52,-3.06l0.7,-2.05l1.07,-1.3l0.08,-2.58l-1.64,-1.44l-1.53,-0.24l0.23,-2.82l0.99,0.15l0.61,-0.73l-1.54,-3.11l4.15,-5.4l0.14,1.73l0.81,0.95l1.33,-0.11l2.5,-1.0l2.2,3.21l2.39,1.18l1.42,1.53l0.69,2.49l0.08,1.45l-1.02,3.38l0.14,2.01l-0.9,1.2l0.57,2.04l-0.01,2.05l1.13,2.44l1.16,1.07l0.79,2.19l0.74,0.47l2.32,-0.02l0.26,0.54l-0.07,1.35l0.98,2.21l-0.97,1.82l-2.03,0.9l-1.22,2.51l-0.81,2.73l-0.5,0.4l-2.66,0.53l-1.35,1.13l-0.18,0.98l0.92,1.95l-0.95,0.1l-0.49,1.55l-0.64,0.55l-2.31,-0.88l-0.5,-2.34l-1.56,-2.8l-5.09,-2.79l-1.09,-1.11l-0.61,-1.18Z\",\n            name: \"Albania\"\n          },\n          IT: {\n            path: \"M460.72,503.99l1.78,-1.15l1.8,-1.71l0.38,-0.01l0.0,2.36l0.39,0.92l2.52,2.32l2.27,0.58l-0.51,0.85l0.07,0.5l1.37,1.23l0.36,1.05l1.03,0.61l0.95,-0.27l0.54,-0.68l-0.54,-2.47l3.32,-4.52l0.17,-3.17l0.27,-0.16l1.28,0.23l0.67,1.99l0.92,0.97l1.6,0.19l2.15,-0.87l1.7,-0.27l1.26,1.94l0.98,0.35l0.84,-0.3l0.31,-0.66l-0.49,-1.87l-0.93,-1.88l0.56,-1.7l1.03,-0.25l1.08,0.92l1.23,0.3l1.4,-0.33l0.12,-1.32l-0.53,-0.86l0.59,-2.76l2.77,0.16l0.85,0.81l1.18,0.42l2.32,-0.03l0.73,-0.56l1.38,-2.24l1.33,-0.6l3.78,-0.37l3.34,0.19l5.15,-1.58l-0.68,0.99l0.28,1.2l3.4,4.2l1.31,0.54l9.36,1.7l4.38,0.3l2.39,0.51l-0.11,0.38l-3.72,2.46l-0.42,1.14l0.72,1.28l1.07,-0.01l1.62,0.59l-1.85,1.75l-0.19,0.73l0.54,0.98l1.22,0.01l-0.54,1.93l0.36,0.78l-1.48,0.98l-3.63,-0.93l-2.36,2.24l-1.64,0.43l-2.0,1.15l-3.31,1.29l0.8,-1.08l-1.15,-0.24l-1.93,0.95l-1.23,1.0l-0.67,3.49l0.91,0.9l1.39,2.73l1.66,1.19l-0.66,1.62l-0.77,0.57l-0.89,-0.5l-0.92,0.33l-0.41,1.84l0.76,5.04l1.33,3.62l1.28,1.54l2.77,2.32l2.99,1.26l5.23,3.87l2.91,1.25l0.66,0.58l1.71,2.92l1.49,3.41l1.62,5.38l1.23,2.79l2.39,3.05l4.89,4.31l4.41,3.13l4.29,2.0l3.27,0.34l7.54,-0.42l2.4,0.6l0.24,0.98l-0.38,0.67l-3.18,2.21l-0.18,2.39l1.61,1.3l7.31,3.29l7.47,2.74l2.27,1.37l2.76,2.21l6.43,2.94l1.11,1.44l3.92,3.08l1.71,2.29l0.3,1.65l-1.72,4.11l-1.31,-0.39l-1.79,-1.26l-3.15,-5.62l-5.22,-0.55l-1.02,-0.38l-1.68,-0.84l-0.59,-1.34l-0.79,-0.46l-2.02,-0.17l-1.65,0.95l-3.66,5.33l-1.89,4.44l-0.14,1.92l1.31,2.14l3.02,0.95l2.29,1.49l1.42,1.46l0.11,3.72l0.65,2.1l-0.75,0.9l-1.95,-0.28l-2.66,0.79l-2.01,1.48l-0.94,1.69l0.2,3.43l-0.33,1.13l-3.55,2.53l-1.88,2.57l-1.09,2.11l-4.07,0.04l-0.87,-1.22l-0.03,-1.99l0.65,-1.15l1.75,-0.82l1.12,-2.85l-0.3,-2.11l0.54,-0.76l0.52,-0.55l2.91,-0.7l0.32,-0.37l0.18,-2.88l-1.43,-1.55l-1.14,-5.21l-2.28,-4.31l-1.22,-3.85l-0.99,-1.98l-1.82,-1.22l-3.79,-0.25l-4.54,-2.64l-0.17,-0.69l0.76,-1.36l-1.08,-2.88l-1.08,-1.38l-1.28,-0.67l-4.64,0.8l0.89,-1.13l-0.46,-1.01l-1.89,-0.99l-2.76,-0.23l-0.43,0.22l-0.03,-0.73l-2.55,-4.19l-1.92,-1.88l-1.09,-0.32l-1.46,0.34l-4.14,-0.9l-2.16,0.68l-0.35,-0.2l-0.31,-0.6l-2.37,-1.75l-2.99,-1.02l-5.69,-5.49l-1.76,-2.07l-3.66,-2.33l-2.37,-3.39l-1.97,-1.27l-2.74,-0.99l-2.14,0.48l0.88,-0.72l-0.33,-1.49l-3.12,-3.34l-1.85,-1.11l-1.41,-2.23l-2.37,-0.46l0.05,-3.7l-0.99,-2.76l-1.72,-2.37l-1.03,-5.63l-0.93,-1.74l-1.9,-1.2l-4.34,-1.38l-5.95,-3.6l-1.39,-0.12l-3.65,-1.41l-2.23,-0.24l-3.23,1.38l-3.52,3.49l-2.85,3.6l-0.94,0.63l-3.61,1.2l-2.78,0.5l-0.11,-1.05l2.2,-2.66l0.4,-0.9l-0.55,-1.68l-0.96,-0.28l-3.01,0.66l-0.58,-0.14l-4.66,-2.31l-0.81,-0.82l-0.26,-0.71l0.21,-0.75l-0.61,-1.26l1.42,-2.43l1.01,-0.77l-0.46,-2.18l-0.92,-0.77l-1.88,-0.41l-0.68,-0.51l-0.19,-0.83l-1.24,-2.01l0.54,-0.27l2.17,0.07l1.81,-1.29l1.33,-0.43l1.23,-2.96l-0.1,-0.39l-1.86,-1.65l-1.79,-2.85l-1.02,-0.7l-0.03,-1.21l2.63,-1.65l1.53,0.64l2.74,-0.55l2.8,-1.08l3.49,0.9l2.81,-1.61l1.89,-2.55l0.07,-0.89l-0.5,-0.93ZM518.47,542.68l-0.02,0.45l0.8,0.86l1.1,-0.35l0.42,-1.12l-0.15,-0.61l-0.45,-0.3l-1.11,0.28l-0.6,0.79ZM536.34,512.54l1.58,1.41l0.32,0.86l-0.4,0.08l0.05,-0.55l-1.56,-1.8ZM561.64,634.95l-1.42,2.54l-3.32,4.46l-1.83,5.11l0.22,2.17l1.35,1.24l-0.42,0.3l-0.08,0.57l1.5,1.71l0.07,0.48l-0.01,0.44l-2.03,1.93l-0.54,1.75l0.13,1.17l-2.54,-0.51l-1.61,0.18l-3.5,-1.28l-1.85,-2.71l-3.09,-2.07l-3.36,-0.01l-7.24,-3.82l-2.59,-2.04l-1.81,-0.46l-1.69,-1.03l-2.3,0.05l-1.38,-0.37l-1.44,-1.1l-1.12,-2.08l1.41,-3.4l1.55,-0.85l0.7,-0.8l1.23,1.47l1.07,0.59l2.12,-0.82l0.29,-0.86l1.15,-0.77l1.62,-0.02l0.59,0.12l0.56,0.87l1.47,0.38l2.51,1.57l1.64,0.37l3.58,-0.93l3.17,0.37l3.02,-0.45l1.89,-0.64l2.03,-1.27l4.49,0.21l0.95,-0.35l0.59,-0.62l1.54,-0.09l2.07,-1.12l1.04,0.08l-0.37,0.35ZM539.0,595.31l0.02,-0.06l0.31,0.09l-0.19,0.04l-0.15,-0.08ZM512.96,657.33l0.48,0.16l0.18,0.38l-0.64,-0.31l-0.02,-0.24ZM491.6,561.34l-0.16,0.88l-0.71,-0.33l-2.41,0.32l-0.12,-0.3l2.9,-0.24l0.5,-0.33ZM462.39,592.89l0.87,0.72l2.19,0.38l3.34,-1.01l1.8,-0.98l2.33,-2.52l1.52,-0.57l1.25,-1.67l0.83,0.82l0.84,0.09l1.28,0.67l1.77,2.0l-0.54,1.02l0.07,0.46l1.67,1.74l1.62,4.91l-2.19,3.79l0.86,3.95l-1.21,10.52l-0.69,2.78l-0.7,0.28l-2.83,-1.16l-1.72,0.25l-1.03,-0.57l-0.63,0.27l-0.45,3.03l-0.67,1.12l-0.99,0.69l-0.92,0.04l-1.96,-0.27l-0.55,-0.46l-2.33,-3.7l-0.25,-4.19l0.64,-1.31l0.09,-2.38l0.53,0.16l0.66,-0.55l0.1,-1.66l-0.78,-1.22l-1.15,-0.39l0.02,-1.42l0.64,-0.73l0.21,-0.85l0.02,-2.69l-0.87,-1.15l-0.82,-2.45l-2.13,-2.32l-0.11,-1.75l0.39,-1.75ZM464.42,621.63l0.71,0.35l-0.34,0.68l-0.36,-0.48l-0.02,-0.54ZM462.96,589.81l0.1,-0.19l0.15,-0.08l-0.06,0.11l-0.19,0.16Z\",\n            name: \"Italy\"\n          },\n          GG: {\n            path: \"M315.47,448.51l0.52,-0.25l-0.15,0.36l-0.37,-0.12Z\",\n            name: \"Guernsey\"\n          },\n          CZ: {\n            path: \"M515.02,433.92l1.19,1.02l0.6,1.08l0.65,0.07l2.33,-2.94l1.17,-0.7l2.89,-0.65l2.52,0.38l1.09,-1.49l2.02,-0.32l0.92,-1.17l1.6,-0.76l0.75,0.3l0.81,-0.32l1.06,-1.52l1.96,-0.22l2.67,-0.8l6.38,-2.46l0.37,-0.51l-0.15,-0.48l-1.0,-0.66l-0.25,-0.73l2.98,0.56l0.95,1.48l0.08,1.06l1.76,0.8l0.83,-0.18l0.54,-0.62l2.25,-0.51l0.25,-0.32l0.04,-1.87l2.95,0.83l0.28,1.28l1.19,1.4l5.17,1.32l2.81,1.22l0.78,0.97l3.93,-0.66l0.9,0.52l0.57,0.52l-0.42,0.79l-1.8,1.04l-0.5,1.04l0.46,0.7l1.33,0.49l2.02,2.0l1.45,2.2l0.85,0.53l0.79,0.04l4.42,-2.78l-0.02,-0.68l-1.44,-2.28l3.1,0.77l3.73,2.23l1.99,-0.18l1.8,-0.62l-0.09,1.16l-1.49,0.59l-0.24,0.49l0.61,0.9l0.8,0.34l2.0,2.05l0.71,0.26l1.73,-0.47l0.64,-0.55l0.67,0.66l2.73,1.37l0.83,-0.21l2.07,0.44l0.44,0.29l0.4,2.02l2.9,2.63l0.27,1.24l-2.96,0.35l-2.55,1.84l-0.7,0.94l-2.65,1.33l-0.88,1.57l-0.32,1.96l-2.18,1.02l-2.09,1.93l-1.71,0.77l-1.83,0.23l-3.9,-0.57l-0.98,0.38l-1.15,1.21l-1.28,2.46l-0.71,-1.3l-2.27,-0.52l-2.33,-1.09l-1.21,-0.03l-1.45,1.01l-3.92,-0.26l-3.07,-1.87l-1.85,0.01l-5.24,-1.97l-1.92,0.46l-1.3,-0.85l-1.15,-0.1l-0.71,0.65l-0.56,3.35l-1.36,0.07l-1.6,1.82l-0.23,1.07l-2.5,-0.4l-0.95,0.24l-0.75,0.61l-2.23,-0.04l-1.69,-0.37l-0.86,-1.54l-2.34,-1.31l-3.63,-3.34l-1.58,-0.02l-1.91,-2.37l-2.02,-1.08l-3.04,-3.02l-1.53,-0.08l-1.63,-1.37l-2.41,-3.91l-1.35,-1.5l1.34,-1.87l0.16,-1.15l-0.82,-1.15l-2.46,-1.54l-0.83,-0.87l-1.55,-3.17Z\",\n            name: \"Czech Rep.\"\n          },\n          IM: {\n            path: \"M286.48,364.63l0.75,-2.12l1.13,-0.81l1.38,-1.97l1.16,-0.38l0.45,1.97l-0.91,1.44l-2.48,2.14l-1.47,-0.27Z\",\n            name: \"Isle of Man\"\n          },\n          GB: {\n            path: \"M268.15,314.94l0.76,-0.51l2.22,-0.36l1.99,-1.42l-0.04,-0.68l-1.33,-0.72l1.39,-0.78l1.97,-2.75l0.47,-2.7l-1.51,-2.4l-1.71,-0.79l-0.08,-1.24l3.04,-1.75l-0.26,-0.39l-1.22,-0.45l-0.73,-1.5l0.65,-2.06l1.01,-1.76l3.3,0.06l0.77,-0.52l1.74,0.44l0.45,-0.58l-3.37,-3.5l0.78,-1.43l0.07,-1.57l4.32,-0.43l0.23,-0.54l-1.07,-2.23l0.29,-2.53l0.57,-0.77l0.99,-0.34l1.4,0.28l1.48,1.26l2.81,-1.1l1.07,1.04l3.29,-0.87l9.93,-1.18l2.64,-0.65l2.45,0.26l-0.8,1.82l-0.05,2.13l-1.24,1.58l-10.66,7.29l-0.65,2.2l0.34,0.47l1.91,0.38l-2.81,2.5l-0.76,1.94l0.39,0.55l3.69,-0.45l6.29,-2.1l1.36,-0.03l3.54,0.74l2.46,-0.39l8.29,0.22l2.29,-0.41l1.34,0.44l1.17,1.15l1.11,2.32l-3.2,4.12l-0.97,3.1l-2.28,4.57l-2.22,2.52l-2.23,3.23l-2.32,1.42l-3.73,0.67l-3.51,1.63l-0.28,0.45l0.41,0.33l1.52,-0.05l1.56,-0.45l2.59,-0.15l2.77,1.34l-0.19,0.79l-1.06,0.82l-2.98,0.24l-2.66,2.16l-2.31,0.93l-4.35,-0.66l-1.23,-0.59l-0.51,0.14l0.07,0.52l1.15,1.0l1.42,0.59l7.67,1.25l3.04,-1.42l3.05,-0.02l5.98,2.32l4.24,4.35l2.33,1.89l3.11,10.2l1.78,4.76l0.84,1.39l1.25,1.09l6.45,2.77l4.06,4.18l3.44,2.72l-0.61,0.48l-0.71,1.43l0.53,1.56l3.18,5.0l-1.41,-0.06l-2.86,-1.74l-2.54,0.37l-2.7,-0.14l-0.39,0.36l0.31,0.43l2.37,0.55l2.55,0.05l5.58,4.04l1.86,2.36l1.07,3.01l-0.66,1.22l-3.41,3.22l0.1,0.61l3.4,1.83l1.62,-0.4l2.3,-2.51l1.81,-0.17l4.73,0.34l4.27,1.16l3.61,2.48l0.73,1.26l0.39,3.6l-2.05,6.22l-2.29,2.13l-1.08,0.57l-1.18,-0.21l-0.37,0.34l0.56,2.13l-0.93,0.61l-1.03,0.28l-2.15,-0.35l-2.75,1.41l0.05,0.73l1.83,0.67l0.25,0.48l-0.38,1.04l-1.05,0.51l-3.94,0.66l-1.21,0.68l-0.17,0.49l0.47,0.24l1.3,-0.31l0.71,0.22l0.54,0.99l0.71,0.48l2.88,0.54l6.8,-0.18l-0.22,2.81l-0.29,0.32l-4.28,1.91l-1.27,2.12l-2.49,-0.05l-1.14,0.82l-6.33,2.15l-5.55,-0.91l-3.41,0.08l-4.48,0.79l-4.59,-1.4l-2.08,-0.24l-1.73,-0.69l-0.47,0.14l0.01,0.49l0.8,0.98l-1.99,1.06l-4.61,0.55l-2.19,-0.18l-0.41,0.53l0.75,1.52l-0.44,0.12l-4.2,-0.6l-0.74,0.12l-0.59,0.52l-1.26,-0.25l-3.19,-1.61l-1.68,-0.3l-1.51,0.11l-5.71,1.65l-1.16,1.64l-1.3,3.91l-1.15,1.29l-1.24,0.15l-5.49,-2.9l-1.51,0.61l-2.85,0.32l-3.11,0.94l-3.9,2.36l-1.47,2.12l-1.08,0.22l-1.33,-1.05l-1.51,-0.38l-2.58,0.83l-0.13,-0.77l0.97,-0.96l3.15,-0.92l2.75,-2.3l1.87,-2.16l1.57,-0.78l0.41,-0.8l3.82,-3.57l0.78,-3.42l3.09,-1.03l1.41,-2.79l4.41,-0.65l3.12,0.04l3.18,0.57l3.47,-0.2l1.38,-0.88l2.17,-2.81l3.94,-3.66l2.13,-2.39l0.01,-0.52l-0.51,-0.1l-1.44,0.82l-2.73,2.04l-3.23,0.78l-4.11,2.62l-3.45,-0.4l-2.63,-2.2l-1.94,-1.02l-3.92,0.43l1.54,-1.33l-0.33,-0.33l-2.46,-0.4l-1.59,-1.07l-3.01,0.07l-4.0,1.97l-3.22,-1.79l-0.02,-1.23l-0.45,-0.97l-0.54,-0.33l0.67,-0.79l1.19,-0.77l2.84,-0.84l6.68,-2.81l2.33,-1.5l1.06,-1.03l1.34,-2.7l0.92,-1.18l-0.2,-0.63l-0.75,-0.24l-0.29,-0.65l0.5,-1.83l-1.03,-2.09l0.21,-1.57l-0.4,-0.48l-3.51,0.34l-3.15,1.52l-0.81,0.1l0.49,-0.83l3.19,-2.29l1.77,-2.32l2.07,-1.33l4.53,-1.59l1.66,0.17l4.2,-0.9l3.0,1.55l0.45,-0.06l0.11,-0.44l-0.79,-2.12l0.75,-0.33l1.97,2.14l0.94,0.25l1.56,-0.33l0.31,-0.32l-0.78,-0.79l-1.62,-0.37l-0.67,-0.62l-1.2,-2.13l0.06,-1.14l1.75,-2.6l-0.2,-0.62l-1.2,-0.59l0.05,-1.98l1.75,-1.15l0.72,-3.51l-0.69,-1.04l-1.82,0.15l-2.04,0.77l-1.98,-1.77l-3.27,-4.34l-0.27,-1.6l1.65,-3.73l2.54,-2.39l3.05,-0.85l0.29,-0.39l-0.29,-0.39l-5.5,-0.22l-1.66,0.32l-1.58,1.06l-1.72,0.45l-2.24,1.6l-2.19,0.01l-1.01,-1.05l-0.84,-0.18l-3.47,1.62l-3.9,-1.59l-0.98,0.57l-0.72,2.0l-1.09,-0.89l-1.34,-1.73l-0.45,-2.0l0.37,-0.24l0.61,0.34l0.56,-0.2l1.22,-3.01l3.27,-5.08l0.68,-1.8l-0.1,-1.0l-0.6,-1.02l-2.21,-1.89l0.26,-3.02l0.63,-1.0l2.88,0.03l0.39,-0.31l-0.22,-0.45l-3.28,-1.99l0.55,-1.71l-0.12,-0.45l-0.46,-0.04l-1.82,2.56l-2.04,0.67l-0.55,0.96l-1.04,0.34l0.28,-2.25l0.57,-0.88l2.4,-2.19l0.05,-0.53l-0.52,-0.11l-1.23,0.72l-2.72,2.09l-1.84,1.98l-0.11,1.04l0.59,2.29l-0.16,0.98l-2.29,7.16l-0.67,0.9l-1.14,-0.06l-0.3,-0.73l1.15,-4.26l2.4,-3.66l-0.54,-0.36l-1.04,0.13l0.17,-4.38l0.74,-1.58l0.27,-2.18l1.9,-4.94l0.89,-0.94l0.21,-1.12l1.66,-2.66l-0.05,-0.45l-0.94,0.08l-5.74,4.13l-2.6,-0.52l-0.82,-0.71l-0.4,-1.51l-0.37,-0.3l-1.52,-0.14ZM339.59,233.48l-0.57,2.19l-0.53,-0.03l-0.06,-1.74l0.74,-0.02l0.42,-0.4ZM336.19,239.14l-0.93,-1.46l0.79,-1.92l0.63,0.04l0.08,0.26l-0.75,0.66l0.18,2.42ZM329.81,239.86l0.8,-0.37l1.06,-1.32l0.87,-0.15l0.23,2.57l0.58,0.28l0.4,-0.21l1.17,1.27l0.92,-0.16l-1.6,5.89l-0.26,2.06l-0.62,0.77l-0.43,1.4l-0.23,-0.2l1.02,-3.91l-0.25,-1.08l-0.77,-0.9l-1.96,0.22l-0.43,-1.0l-1.48,-0.05l-0.32,-0.39l2.04,-0.14l1.63,-0.82l0.19,-0.49l-1.02,-2.77l-1.52,-0.49ZM330.39,426.85l1.55,-0.47l0.95,-0.66l2.54,0.99l-0.75,0.49l-0.48,0.83l-0.59,0.15l-0.6,0.0l-2.6,-1.33ZM315.95,265.12l-0.68,0.01l0.29,-0.44l0.71,-0.23l0.87,0.07l-1.2,0.59ZM309.8,263.74l0.37,-0.11l1.34,1.02l-1.51,-0.67l-0.2,-0.25ZM312.26,265.65l1.03,0.29l-0.03,0.18l-0.75,0.32l-0.25,-0.79ZM308.85,269.28l-0.26,0.62l0.38,0.54l3.29,0.45l0.39,0.27l-0.24,0.56l-0.56,0.19l-1.93,-0.96l-2.24,0.39l-0.45,-0.22l-0.26,-1.19l-0.58,-0.1l-0.8,0.43l0.01,-1.32l0.41,-1.08l0.57,-0.18l1.09,0.13l1.3,0.68l0.27,0.34l-0.41,0.45ZM310.59,274.73l-0.03,-0.02l-0.47,-0.75l0.7,-0.11l-0.21,0.88ZM306.77,274.1l-0.45,-0.01l-1.04,-1.0l-0.33,-0.85l1.05,0.15l0.78,1.72ZM293.4,379.3l0.66,0.42l0.9,0.03l-3.55,2.22l-0.41,-0.54l-0.84,-0.13l-0.91,-1.28l-0.16,-1.93l1.09,-0.46l1.73,0.03l1.49,1.64ZM281.03,338.84l-1.32,0.01l-1.07,-0.49l-0.75,-2.35l0.78,-1.35l0.65,-0.11l0.96,0.74l0.71,1.66l0.05,1.88ZM243.78,353.56l2.07,-0.03l2.55,-1.09l1.48,-2.17l0.71,-2.43l2.02,-1.34l0.58,0.54l1.33,0.1l1.08,-0.74l1.04,-1.76l3.18,-0.18l3.04,-0.9l1.25,-0.01l3.21,0.46l1.09,1.18l0.71,2.2l1.58,2.14l2.0,1.81l0.06,0.77l-2.05,1.18l-0.22,1.17l0.55,0.37l1.78,-0.56l1.9,0.16l0.59,0.65l0.71,2.04l-0.07,0.41l-0.62,-0.99l-1.5,-0.75l-0.51,0.48l0.32,1.28l-0.13,1.73l0.21,0.38l0.95,0.23l-0.41,1.14l-3.01,0.79l-1.46,2.65l-0.91,0.58l-3.72,-0.8l-1.47,0.62l-2.99,0.05l0.16,-1.49l-0.39,-0.71l-1.84,-0.6l-0.68,-0.91l-0.33,-1.22l-2.04,-1.58l-0.85,0.07l-2.1,2.02l0.45,1.34l-2.25,1.86l-3.2,-0.35l-1.07,-0.82l-2.16,-0.48l-0.53,-1.29l-3.24,-2.77l1.07,-0.79l3.35,-1.09l0.67,-0.52l0.24,-0.59l-0.22,-0.47l-1.93,-1.02ZM261.43,298.81l2.77,-0.68l0.52,-1.27l0.92,0.27l0.98,1.15l0.26,1.42l-0.24,1.96l0.61,2.1l1.02,0.63l2.54,0.4l2.31,-0.1l0.21,0.31l-3.17,2.99l-0.73,0.23l-0.24,-2.65l-0.48,-0.35l-2.97,0.32l-0.61,-0.28l-1.79,-2.5l-3.04,-0.66l-0.76,-0.83l-0.17,-0.38l0.46,-0.56l0.82,0.18l0.99,-0.58l-0.19,-1.09ZM269.34,332.0l-0.57,-0.07l-0.12,-1.03l1.96,-1.32l-0.03,-0.72l-0.51,-0.21l0.28,-0.48l1.95,-1.22l-2.97,5.06ZM271.87,321.8l-5.06,1.0l-1.54,-0.08l1.84,-0.73l0.62,-2.57l-0.21,-0.45l-2.19,-1.11l0.09,-0.39l2.26,-0.75l1.96,2.01l2.42,0.81l-0.19,2.27ZM263.06,333.89l0.29,-1.39l0.53,-0.68l0.58,-0.27l0.79,0.24l1.95,-1.18l0.87,3.48l-0.29,0.85l-2.16,0.88l0.34,-0.95l-0.39,-0.99l0.18,-0.72l-0.36,-0.57l-0.93,0.13l-1.39,1.16ZM255.41,289.78l0.69,-0.49l-0.15,-0.72l-1.04,-0.51l-0.13,-0.82l0.1,-0.64l0.69,-0.72l1.74,0.87l2.02,-0.12l0.46,-0.5l-0.77,-1.87l6.87,-3.75l0.25,2.18l-1.59,3.18l-0.74,0.23l-0.54,0.78l-1.75,0.9l-0.21,0.45l0.38,0.31l1.48,0.02l-0.0,0.7l-1.99,1.51l-1.52,0.67l-1.42,1.52l-0.92,0.18l-1.21,1.34l-0.95,-0.76l2.62,-1.89l0.17,-0.55l-2.55,-1.49ZM265.16,309.88l-0.49,0.1l-0.68,-0.67l0.84,-0.36l0.47,0.45l-0.13,0.47ZM261.42,316.68l0.29,-0.28l0.09,-0.02l-0.03,0.04l-0.35,0.27ZM249.11,297.53l0.35,-0.38l1.04,0.14l2.36,-0.64l1.01,0.73l-0.88,1.33l-1.56,-0.01l-2.31,-1.17ZM251.9,306.91l-1.08,-0.23l-0.4,-1.03l0.09,-3.19l1.15,0.03l0.25,4.42ZM248.75,309.97l0.68,-0.43l0.37,0.2l-0.96,0.26l-0.09,-0.03Z\",\n            name: \"United Kingdom\"\n          },\n          AX: {\n            path: \"M628.45,248.96l0.16,-0.05l0.84,0.08l0.31,0.32l-0.63,0.06l-0.68,-0.41ZM621.7,243.28l1.25,-0.06l2.02,1.49l-0.63,0.99l-0.8,-0.15l-1.25,0.46l-0.31,1.74l-2.69,0.2l-0.49,-0.23l-0.9,-2.45l0.11,-0.4l0.54,-0.21l0.06,1.05l0.47,0.37l0.85,-0.15l0.32,-0.29l0.34,-1.72l-1.05,-1.12l0.26,-0.39l0.48,-0.17l0.58,0.75l0.84,0.28ZM616.9,246.18l-0.55,0.17l-0.39,0.42l0.16,-1.31l0.49,-0.02l0.28,0.74Z\",\n            name: \"Aland\"\n          },\n          IE: {\n            path: \"M245.03,355.16l-3.75,1.4l-1.46,1.19l0.42,1.3l3.09,2.41l0.65,1.39l2.3,0.51l1.07,0.82l3.69,0.38l2.79,-2.26l0.09,-0.46l-0.49,-0.95l1.71,-1.63l0.31,0.02l1.52,1.24l0.25,1.06l0.91,1.22l1.92,0.73l-0.18,1.51l0.56,0.74l3.32,-0.04l1.44,-0.63l0.91,0.09l0.42,0.48l-0.42,0.31l-1.28,-0.03l-0.65,0.73l-0.03,0.85l0.37,1.24l0.72,0.86l0.99,3.59l0.72,1.21l0.15,3.22l-0.29,0.63l1.44,5.06l0.23,2.86l-1.89,3.4l-0.67,3.58l-1.65,2.45l-1.46,0.94l-0.11,0.65l1.47,1.41l-0.98,0.51l-1.53,0.23l-1.77,-0.43l-1.27,0.04l-1.49,0.84l-1.01,-1.55l-0.81,1.63l-0.82,0.37l-1.8,-0.09l-4.31,0.86l-1.41,1.96l-3.3,1.03l-1.16,1.3l-1.31,0.67l-0.96,0.18l-1.89,-1.34l-1.79,-0.0l-0.38,0.32l0.85,0.97l-0.0,1.57l-1.61,0.5l-1.42,0.95l-1.89,0.26l-1.2,0.96l-6.42,1.53l-2.25,-0.55l-4.26,0.91l1.21,-1.55l2.33,-1.17l0.24,-0.3l-0.24,-0.64l-0.89,-0.15l-4.33,0.76l-2.09,0.72l3.76,-2.46l0.67,-0.74l1.97,-0.87l0.21,-0.5l-0.49,-0.25l-6.5,1.85l-1.48,-0.2l-0.69,-0.54l-1.03,0.19l-0.29,-0.71l1.78,-1.71l1.09,-0.77l2.7,-1.09l0.66,-0.93l-0.19,-0.58l-0.79,-0.28l-5.41,0.07l0.29,-0.66l1.82,-1.08l0.94,-0.17l2.67,0.8l2.24,-0.23l0.34,-0.28l-0.13,-0.43l-0.81,-0.65l-0.15,-1.37l-0.45,-0.48l1.55,-0.82l1.69,-1.42l7.69,-1.32l3.73,-1.08l0.29,-0.38l-0.28,-0.39l-1.82,-0.57l-0.85,-0.73l-0.56,0.03l-1.42,1.55l-0.93,0.54l-2.82,0.31l-2.45,-0.63l-2.94,1.35l4.74,-3.85l0.97,-1.34l0.03,-0.41l-0.67,-0.88l1.87,-2.34l0.63,-0.41l3.34,-0.71l1.03,-0.9l-0.13,-0.67l-2.92,-0.82l-5.04,0.23l-0.67,-0.44l-0.24,-0.84l-0.5,-0.44l-2.93,0.12l0.68,-0.6l-0.2,-0.69l-3.7,-0.25l0.42,-0.63l-0.05,-0.58l-0.65,-0.76l4.97,-0.87l0.35,-0.37l-0.29,-0.42l-2.29,-0.83l0.06,-0.78l1.91,-0.9l2.21,-0.43l0.31,-0.49l-0.01,-1.2l-0.35,-0.48l-2.29,-0.21l-1.8,0.38l0.68,-2.04l-0.0,-1.8l-0.53,-0.33l-0.58,0.2l-0.57,-1.73l-0.49,-0.19l-1.01,0.38l0.02,-0.42l0.33,-0.58l0.59,-0.24l2.28,0.12l1.54,-0.59l2.01,-0.15l3.2,0.18l2.21,1.59l1.01,-0.26l1.2,-1.12l5.49,1.04l0.81,-0.19l0.26,-0.48l-0.31,-1.17l-0.59,-0.71l1.72,-1.42l3.26,-1.22l1.45,-2.62l-0.38,-0.63l-4.29,0.58l-3.57,-1.16l1.07,-0.91l1.46,-0.4l0.38,-0.61l1.96,-1.47l-0.31,-1.75l0.19,-0.79l0.94,-0.8l0.56,-1.44l3.44,-0.89l2.64,-0.09l0.63,0.24l0.54,-0.43l-0.11,-0.78l0.78,-0.09l1.02,1.41l0.13,0.66l-0.89,1.03l-0.02,0.6l0.31,0.29l-0.67,0.73l-0.03,0.5l0.48,0.14l2.52,-1.47l0.1,-1.18l-0.63,-1.97l0.14,-0.76l0.61,-0.48l2.02,-0.31l0.26,-0.64l-0.46,-0.62l4.01,2.13l-5.21,3.62l-1.07,2.92l-1.25,1.91l-2.31,0.96l-1.79,-0.12l-0.73,0.44l-0.03,0.88l1.98,1.2ZM212.65,366.62l-0.13,-0.02l0.03,-0.02l0.09,0.04ZM213.87,366.77l1.05,0.02l0.27,0.15l0.07,0.94l-0.8,-0.9l-0.59,-0.21Z\",\n            name: \"Ireland\"\n          },\n          ES: {\n            path: \"M408.55,609.24l-3.95,-1.75l-1.35,-0.22l-0.04,-0.91l2.43,-0.17l2.05,0.62l1.1,1.67l-0.24,0.75ZM392.9,610.25l0.24,0.47l1.3,0.53l1.55,-0.44l0.59,0.12l0.47,0.17l0.11,0.64l-2.84,4.76l-2.01,1.18l-3.51,-1.26l-0.53,-1.7l-0.91,-0.82l-1.18,-0.19l-1.55,1.01l-0.31,-0.47l-1.13,-0.56l0.01,-0.33l5.42,-3.73l1.57,-0.82l3.07,-0.89l-0.06,0.57l0.37,0.41l-0.66,1.32ZM246.2,546.17l1.24,0.54l1.33,-0.16l1.25,0.65l2.0,1.73l2.73,0.67l2.32,-0.51l11.05,-0.15l3.17,-0.81l2.44,1.01l4.71,0.48l2.86,0.85l7.97,1.43l2.93,0.01l5.69,-1.37l1.66,0.32l2.22,-0.66l0.92,0.12l1.48,0.98l5.05,1.32l1.62,-1.15l0.81,-0.2l3.51,0.67l3.75,1.41l1.98,0.1l2.79,-0.38l2.24,-0.92l0.61,1.08l0.69,0.42l3.9,1.0l-0.15,1.08l-0.77,1.27l0.05,0.44l0.81,0.66l1.09,0.03l0.6,-0.74l0.3,0.36l4.79,1.82l2.22,0.15l2.37,2.24l1.74,0.09l2.29,-0.44l3.47,2.21l3.37,-0.44l0.82,0.42l5.11,0.05l0.53,-0.55l0.4,-1.99l8.53,2.45l0.9,1.31l0.03,2.1l0.64,0.81l1.32,-0.09l2.19,-0.97l2.73,1.14l1.03,1.21l0.88,0.03l2.11,-1.03l6.05,1.3l0.84,-1.12l2.56,-0.78l0.93,-0.16l3.02,0.58l1.09,1.68l-1.81,0.71l-0.22,1.53l1.19,1.45l0.12,2.0l-3.11,2.7l-9.38,4.87l-3.07,2.88l-6.93,1.47l-7.25,2.16l-4.47,3.93l0.14,0.7l1.0,0.28l0.97,0.99l-1.94,1.07l-1.87,0.41l-3.14,4.73l-5.95,7.1l-3.44,5.71l-0.07,1.96l1.73,5.74l1.03,1.55l1.35,1.24l2.56,1.08l0.41,0.67l-3.16,2.45l-4.44,2.36l-1.99,1.94l-0.48,1.83l-1.34,0.98l-0.48,2.47l-1.8,3.57l-0.11,0.91l1.16,1.29l-0.27,0.21l-2.08,0.35l-5.27,0.16l-4.46,2.79l-2.28,2.59l-1.9,4.42l-2.24,2.53l-0.75,0.35l-1.61,-1.09l-2.0,-0.18l-2.05,0.39l-1.14,0.96l-1.39,0.45l-1.52,-0.42l-3.39,-0.24l-1.6,0.06l-2.23,0.71l-1.96,-0.48l-3.38,-0.25l-7.46,0.61l-1.12,0.41l-3.08,2.87l-3.54,0.09l-3.2,1.22l-1.0,0.94l-1.35,2.14l-0.35,1.21l-0.96,-0.07l-0.5,1.3l-1.83,0.61l-2.33,-0.91l-2.03,-1.42l-1.11,-0.16l-2.36,-3.47l-0.56,-2.6l-1.61,-0.81l-0.29,-1.07l1.02,-1.66l1.6,-1.37l-0.41,-0.31l-1.41,0.08l-0.96,0.94l-1.11,-1.59l-5.06,-3.56l0.19,-1.23l-0.7,-0.22l-1.27,1.12l-2.71,-0.15l-2.77,0.4l-1.23,-5.85l0.75,-2.07l2.03,-2.77l1.34,-1.45l2.36,-0.79l0.91,-2.31l-0.45,-0.59l-1.76,0.15l-2.97,-4.04l0.81,-3.79l3.11,-2.96l0.63,-1.46l0.03,-1.41l-0.83,-0.95l-1.59,-0.4l-1.69,-3.02l-0.39,-1.96l-1.57,-1.32l-0.92,-1.49l5.21,-0.2l1.22,-0.59l0.9,-1.43l0.9,-2.28l0.23,-1.44l-0.4,-0.92l-1.43,-1.44l0.17,-0.44l2.07,-1.45l0.76,-1.07l-0.54,-1.45l0.45,-3.48l-0.24,-1.99l-0.33,-1.74l-0.89,-1.96l1.97,-1.35l1.13,-1.68l1.61,-1.38l2.17,-1.14l1.61,-1.34l1.17,-1.66l-0.43,-1.19l-1.01,-0.82l-1.25,-0.44l-1.89,-0.09l-0.11,-3.06l-0.36,-0.8l-0.88,-0.56l-1.06,0.12l-1.76,-0.47l-0.61,0.3l-2.06,-0.08l-1.78,-0.47l-0.82,0.53l-0.24,0.98l-2.34,0.86l-1.37,-0.03l-2.55,-0.85l-3.24,0.12l-2.87,1.11l-0.62,-1.02l1.23,-2.07l-1.13,-1.88l-1.06,-0.33l-4.57,1.41l-2.58,1.82l-0.72,0.16l-0.18,-2.32l2.53,-2.61l-0.12,-0.66l-1.4,-0.22l1.06,-1.45l-0.13,-0.55l-0.92,-0.75l-0.01,-2.74l-0.53,-0.28l-2.47,0.81l-0.02,-0.67l1.45,-2.27l-0.32,-0.5l-1.46,-0.24l-1.05,-0.76l-1.33,-1.66l0.71,-2.85l2.0,-1.02l1.92,-1.48l2.78,0.27l1.74,-0.34l2.56,-1.02l1.67,-1.08l-0.05,-0.95l-0.41,-0.69l0.23,-0.35l3.27,-1.81l2.1,-0.23l1.93,-0.88ZM370.1,623.83l-0.59,0.91l-1.82,-0.41l0.26,-0.64l0.7,-0.46l0.03,-0.65l0.46,-0.58l2.6,-0.57l0.4,0.32l0.08,0.41l-1.53,1.47l-0.58,0.19ZM370.18,627.26l0.43,0.46l-0.55,0.0l0.12,-0.46ZM164.44,776.55l-0.91,0.89l-0.44,-0.15l0.76,-2.18l3.27,-1.23l0.83,-1.23l-0.52,2.64l-2.99,1.26ZM155.44,788.95l2.37,-1.46l2.87,-6.04l0.34,-1.27l0.46,-0.35l0.91,0.01l0.27,0.45l-0.01,1.42l-0.47,2.52l-0.8,2.08l-3.47,1.18l-1.83,1.61l-0.64,-0.14ZM141.28,788.62l0.11,1.32l-4.04,0.0l0.8,-1.44l3.13,0.12ZM128.81,784.44l-1.25,3.48l-1.5,1.58l-1.26,0.29l-1.66,-1.86l-1.25,-2.48l4.27,-0.62l3.26,-2.31l2.13,-0.21l-2.74,2.13ZM117.34,789.64l-0.75,-0.17l-0.52,-0.88l0.58,-0.83l1.31,0.57l0.26,0.48l-0.88,0.82ZM108.62,782.59l-1.69,-3.37l0.7,-0.91l1.39,-0.03l0.72,1.33l-0.36,2.16l-0.76,0.82Z\",\n            name: \"Spain\"\n          },\n          ME: {\n            path: \"M601.12,565.85l1.19,-0.97l0.28,-0.68l-0.09,-0.72l-1.0,-1.62l-0.28,-2.93l0.34,-0.41l1.75,-0.24l0.34,-0.4l0.06,-1.92l0.56,-1.18l2.2,-1.75l0.74,0.07l0.92,0.94l0.98,-0.46l0.08,-1.33l-1.22,-2.13l0.14,-0.28l1.2,0.35l1.26,-0.26l0.56,1.35l2.58,1.71l2.74,2.82l2.42,1.12l2.14,0.45l5.15,2.95l0.06,0.52l-1.49,0.41l-0.45,0.68l-1.62,-0.06l-0.66,0.62l0.72,1.91l-0.2,0.93l-3.37,1.17l-0.38,-0.47l-0.16,-1.85l-0.88,-0.44l-0.81,0.44l-3.97,5.49l-0.67,0.29l-2.58,-0.2l-0.31,0.65l1.59,1.94l1.69,0.85l-0.04,2.92l-1.44,-0.88l-0.9,-1.83l-3.09,-3.08l-3.53,-2.11l0.23,-0.58l-0.34,-0.59l-1.53,0.19l-0.92,-1.43Z\",\n            name: \"Montenegro\"\n          },\n          MD: {\n            path: \"M712.53,469.1l2.31,-1.33l5.14,0.23l1.53,-1.02l1.05,0.19l1.72,-0.95l3.49,0.95l0.98,0.89l2.03,0.79l0.72,1.12l1.09,0.35l1.68,-0.01l0.39,0.23l-0.18,0.59l0.23,0.62l1.14,0.03l0.57,0.96l0.6,-0.0l0.78,-0.88l2.88,0.47l1.16,1.99l0.96,0.93l0.99,0.32l1.65,-0.6l0.82,1.24l0.21,1.74l-0.32,1.87l-0.84,2.17l0.18,1.06l0.34,0.59l2.44,1.48l0.73,0.86l1.98,0.87l-0.38,2.89l0.67,0.88l0.19,1.52l2.11,1.48l2.08,0.9l0.74,1.53l-0.07,3.43l2.44,1.72l-0.33,0.32l-2.9,0.39l-1.0,-1.27l-0.81,-0.32l-1.41,0.82l-2.03,-0.92l-1.01,0.26l-0.87,-0.4l-0.6,0.12l-0.62,1.15l-0.1,-1.82l-0.5,-0.51l-0.54,-0.05l-2.77,1.21l-0.63,0.95l0.04,1.05l0.21,1.4l0.77,1.72l-0.71,1.95l-1.2,1.09l-1.45,0.68l-0.35,1.64l-3.15,3.06l0.03,2.49l-2.33,0.22l-1.08,0.59l-1.37,-1.89l0.96,-0.86l-0.81,-5.49l0.26,-2.73l1.68,-5.26l-0.27,-1.14l0.22,-2.18l-2.29,-5.93l-3.05,-2.49l-1.16,-1.93l-2.06,-1.92l-2.23,-3.64l-1.53,-1.5l-2.47,-5.46l-2.41,-3.5l-1.17,-1.03l-1.54,-0.78l-1.64,-0.15Z\",\n            name: \"Moldova\"\n          },\n          RO: {\n            path: \"M631.66,512.33l-1.62,-2.15l-2.98,-1.78l-1.3,-1.89l3.0,-0.64l1.59,0.53l1.44,-0.77l0.67,-1.16l0.81,-0.18l2.69,0.29l1.42,-0.78l0.52,-0.55l0.45,-1.28l1.09,-0.68l-0.15,-1.22l0.78,-1.78l2.38,-1.66l0.06,-1.57l2.13,-2.96l0.14,-1.37l1.69,-1.68l1.11,-2.8l1.64,-1.49l0.18,-2.0l1.41,-1.04l2.32,-2.6l2.53,-0.74l1.81,0.04l3.7,-3.16l2.29,-0.96l1.16,-1.36l0.58,0.03l2.92,1.64l3.46,-0.04l4.49,0.97l0.86,-0.12l1.63,0.64l4.11,-0.7l1.11,0.24l4.5,3.72l2.52,-0.5l1.41,-1.38l3.87,-1.47l9.43,-1.41l1.84,-2.27l0.38,-1.46l5.19,-0.97l2.33,0.84l0.99,0.89l2.29,3.34l2.51,5.52l1.57,1.55l2.19,3.59l2.1,1.97l1.18,1.95l2.93,2.32l2.21,5.6l-0.22,2.16l0.27,1.0l-1.66,5.2l-0.28,2.9l0.8,5.36l-1.04,0.73l0.01,0.55l1.84,2.47l1.43,1.74l1.94,1.03l4.29,1.01l0.85,-0.41l-0.23,-0.86l1.39,0.33l1.88,-0.54l2.59,-1.35l2.28,-0.26l2.07,0.77l1.65,1.62l-0.91,4.49l-0.93,2.04l-5.84,1.21l-0.37,-2.16l0.52,-0.66l-0.24,-0.64l-1.85,-0.24l-1.32,1.35l0.37,1.96l-0.97,1.47l-0.08,1.37l-0.53,1.29l0.45,0.45l0.39,-0.06l-2.26,2.65l-0.78,1.52l0.18,5.12l-0.96,3.66l-2.42,-0.04l-4.24,-1.23l-2.16,-2.64l-0.42,-0.14l-1.86,0.48l-0.84,-0.66l-3.33,-0.39l-4.73,-2.44l-8.15,1.39l-3.76,1.29l-3.9,2.3l-1.6,1.74l-1.7,0.86l-2.46,0.65l-4.49,-0.25l-9.87,-1.78l-2.85,0.5l-3.67,-0.38l-5.67,-1.11l-4.2,-0.34l-4.08,0.63l-0.45,-0.32l0.03,-0.96l2.02,-1.54l0.02,-1.12l-4.47,-2.72l-0.15,-0.7l-1.44,-0.93l-0.99,-1.35l0.08,-0.66l0.56,-0.68l2.39,-0.47l0.2,-0.47l-0.33,-0.8l-3.36,-1.74l-1.99,0.5l-2.13,1.95l-1.09,0.23l-0.9,-1.21l-1.6,-0.77l-3.63,-0.72l-0.58,-0.76l-1.0,-0.58l-2.03,-0.57l1.83,-0.2l0.48,-0.55l-0.18,-0.85l-2.12,-0.97l0.62,-0.23l0.99,-1.51l0.07,-1.02l-0.99,-0.87l-2.71,-0.8l-1.0,-0.8l-1.74,-0.54l-3.06,-2.42l-0.11,-4.46l-0.37,-0.46l-0.8,0.27Z\",\n            name: \"Romania\"\n          },\n          RS: {\n            path: \"M607.42,509.85l1.42,-0.57l0.68,-0.8l0.8,0.44l1.93,-0.29l2.06,-1.11l1.45,-1.49l0.91,-0.19l3.1,0.39l1.26,-0.26l3.53,0.55l2.01,2.55l2.91,1.72l1.76,2.28l0.78,-0.01l-0.05,3.73l0.4,0.78l3.18,2.52l1.76,0.56l1.1,0.84l2.71,0.8l0.59,0.54l-0.89,1.5l-0.59,0.16l-0.38,0.59l0.52,0.87l1.89,0.81l-2.09,0.34l-0.26,0.39l0.32,0.95l2.16,0.6l1.56,1.34l1.5,0.52l2.22,0.24l1.44,0.7l1.25,1.38l1.66,-0.41l1.95,-1.86l1.75,-0.44l2.73,1.51l-2.07,0.47l-0.95,1.17l-0.06,1.13l0.49,0.96l1.72,1.18l0.39,0.86l-0.82,0.68l-0.41,1.88l-2.37,1.2l-0.78,2.48l0.04,1.46l1.83,4.56l0.75,1.06l2.95,1.73l1.3,1.71l1.38,0.92l-0.36,1.07l-3.08,3.35l-1.91,0.1l-1.5,0.81l-0.37,0.83l0.32,0.93l-0.37,2.03l0.49,1.4l0.79,0.91l-1.33,2.11l-0.79,0.18l-1.6,-0.67l-2.39,0.83l-2.13,-0.25l-2.26,0.89l-1.99,0.33l-0.42,-0.94l1.19,-0.89l1.63,-3.37l0.31,-1.03l-0.21,-0.67l-4.66,-1.26l-0.05,-1.37l-2.13,-1.28l-0.24,-0.7l-2.28,-2.26l-2.83,-1.32l-0.6,-1.42l-1.02,-0.04l-2.04,1.13l-0.19,0.7l0.51,1.45l-0.26,0.47l-2.08,1.44l-0.22,0.83l0.25,0.57l-1.01,0.3l-0.25,-0.85l-0.97,-0.7l-4.43,-2.42l-2.27,-0.5l-2.24,-1.04l-2.64,-2.74l-2.6,-1.74l-0.26,-0.89l0.64,-0.67l1.1,-0.11l1.32,0.51l0.77,-0.71l0.28,-1.06l-0.17,-1.2l-3.14,-4.01l3.69,-0.06l0.68,-0.49l0.14,-0.84l-3.45,-3.32l-2.76,-1.62l0.3,-2.93l1.92,-2.86l0.89,-2.97l-0.3,-0.61l-1.61,-0.6l-1.79,0.3l0.22,-0.99l-0.44,-2.38l0.55,-0.15l0.3,-0.53l0.63,0.27l2.51,-0.09l0.48,-0.45l0.05,-0.62l-1.26,-1.31l-3.09,-1.11l-1.01,-0.88l0.03,-0.83l0.71,-1.15l-1.87,-1.28l0.32,-1.03l-1.29,-2.79l0.59,-0.56l0.11,-0.78Z\",\n            name: \"Serbia\"\n          },\n          MK: {\n            path: \"M629.75,577.29l1.84,0.12l0.78,-0.95l0.41,-2.59l3.61,-1.54l0.89,-0.05l1.45,1.15l0.65,0.06l0.91,-1.54l0.63,-0.43l3.04,-0.35l3.84,-1.29l2.05,0.27l2.48,-0.84l1.15,0.64l3.21,3.37l3.37,1.74l1.43,3.5l0.79,0.71l-0.73,1.84l-0.29,3.95l-1.62,0.11l-0.61,0.4l-0.51,2.19l-2.82,0.86l-4.13,-0.64l-2.65,0.45l-1.15,0.53l-1.97,2.46l-2.56,1.2l-2.25,-0.57l-1.24,0.65l-4.44,0.26l-0.63,-0.83l-2.8,-0.25l-0.69,-2.05l-1.24,-1.16l-1.01,-2.21l0.03,-1.94l-0.54,-1.92l0.88,-0.94l-0.14,-2.11l0.57,-2.22Z\",\n            name: \"Macedonia\"\n          },\n          SK: {\n            path: \"M655.85,455.69l-1.87,2.97l-1.26,3.23l-2.02,2.0l-0.31,2.96l-4.93,0.82l-2.05,-2.5l-1.8,-1.11l-5.19,0.8l-2.74,-0.69l-3.03,-0.07l-2.16,0.4l-2.33,4.11l-5.08,2.53l-0.54,0.2l-3.78,-1.56l-1.02,0.28l-1.32,1.71l-2.52,0.6l-4.73,0.38l-1.81,0.92l-0.78,1.39l0.31,1.5l-0.48,0.75l-7.63,0.4l-5.12,-0.11l-1.62,-0.65l-4.25,-3.08l-2.48,-0.39l-0.57,-0.4l-2.93,-5.87l-0.03,-0.76l1.03,-1.78l0.6,-2.25l1.91,-2.7l0.53,-0.25l3.99,0.56l2.05,-0.28l1.81,-0.81l2.23,-2.01l1.68,-0.56l0.66,-0.61l0.43,-2.19l0.57,-1.15l2.67,-1.34l0.77,-1.01l2.29,-1.67l3.09,-0.34l1.14,0.17l0.33,1.5l0.41,0.33l2.46,-0.07l1.61,-2.02l2.36,-1.35l2.4,3.23l1.74,0.5l0.15,1.45l-0.41,1.13l0.26,0.48l0.62,0.21l1.69,-0.45l1.76,0.65l0.5,-0.22l0.65,-1.5l0.65,-0.68l2.55,-1.15l3.34,-0.11l1.37,0.34l1.03,0.74l2.12,0.22l1.03,-0.56l0.94,-1.22l3.47,-0.19l3.82,0.29l3.33,1.18l0.92,0.68l0.88,1.68l6.68,2.35Z\",\n            name: \"Slovakia\"\n          },\n          MT: {\n            path: \"M547.69,672.17l-1.11,0.1l-0.87,-0.6l-0.01,-0.92l0.72,0.18l1.27,1.23ZM543.86,669.2l0.21,-0.04l0.18,0.07l-0.23,0.07l-0.16,-0.09Z\",\n            name: \"Malta\"\n          },\n          SI: {\n            path: \"M558.4,514.15l-0.58,0.36l-0.27,0.83l0.66,1.7l-0.87,0.29l-1.65,-0.15l-2.27,-0.83l-1.46,0.52l-0.51,-0.13l-1.82,-1.48l-0.69,-1.19l-0.57,-0.36l-0.96,0.41l-1.36,2.21l-0.59,0.31l-3.71,0.06l-1.44,-0.5l-1.47,1.32l-3.3,-0.75l1.3,-1.09l1.85,-0.21l0.49,-0.85l-0.67,-1.21l-1.48,-1.37l-1.87,-0.9l0.48,-2.4l-0.56,-0.5l-1.19,-0.12l1.78,-1.87l0.27,-0.99l-2.23,-1.02l-1.0,-0.0l-0.2,-0.4l0.21,-0.69l3.61,-2.34l0.41,-0.89l11.45,1.94l2.8,-1.69l1.79,-1.78l4.25,-0.61l3.12,0.21l2.65,-1.17l1.66,-0.2l2.52,0.56l0.72,-0.63l0.04,-1.7l0.63,-0.57l0.61,-0.26l2.29,0.09l0.53,2.01l0.65,0.71l0.07,0.9l1.15,1.33l-1.93,-0.14l-1.22,0.94l0.08,1.71l-2.19,0.06l-1.02,1.18l-0.8,0.41l-4.21,1.44l-0.67,1.31l0.16,0.75l0.85,0.93l-0.17,2.79l-4.89,2.01l-0.16,0.91l0.87,0.78Z\",\n            name: \"Slovenia\"\n          },\n          SM: {\n            path: \"M519.71,543.1l-0.45,-0.16l0.66,-0.49l0.03,0.12l-0.25,0.53Z\",\n            name: \"San Marino\"\n          },\n          UA: {\n            path: \"M653.07,467.62l-0.48,-1.02l-1.33,-0.03l0.12,-2.22l2.03,-2.04l1.29,-3.29l1.97,-3.29l3.27,0.94l0.74,-0.39l0.29,-0.58l-0.19,-0.78l-1.79,-1.47l0.38,-2.03l-1.1,-4.13l0.67,-1.03l4.45,-5.14l5.01,-4.84l4.05,-3.55l3.41,-0.56l1.93,-2.52l0.04,-1.69l-0.66,-1.89l-0.81,-1.03l1.48,-0.7l0.01,-0.92l-1.58,-1.38l-1.65,-3.31l-2.63,-3.21l0.21,-1.48l-0.93,-2.11l-0.01,-1.46l0.96,-0.36l1.05,0.07l2.34,0.93l2.54,-1.53l2.08,-1.99l1.03,-1.59l6.71,-0.55l2.72,-0.57l11.52,0.31l11.49,2.58l4.85,0.31l2.07,2.74l4.3,0.01l0.86,0.38l-0.14,1.19l0.77,0.66l0.82,-0.23l1.34,-1.79l2.04,0.55l0.94,-0.1l1.34,-0.76l5.35,1.07l0.77,1.59l1.26,0.46l1.86,-1.96l1.65,-0.54l1.52,-0.99l0.71,0.66l1.69,3.01l0.73,0.64l3.15,-0.84l8.03,-0.78l1.78,1.25l0.48,1.45l1.58,0.92l1.44,0.22l1.63,-2.14l-0.44,-2.15l-0.87,-2.05l0.63,-1.52l1.11,-2.22l1.14,-1.4l2.99,-2.68l1.16,-0.48l2.04,0.41l1.65,-0.95l2.97,-0.05l2.74,0.15l2.68,0.97l2.06,-0.07l2.35,-1.21l1.22,-3.0l0.71,-0.46l4.98,0.99l1.41,-0.1l3.32,-1.51l1.76,-0.22l2.24,0.36l3.78,-0.19l2.3,1.56l1.21,1.66l1.4,3.3l3.75,3.5l-0.11,0.61l-3.32,0.63l-0.34,0.35l-0.02,0.88l1.11,1.58l0.4,3.4l0.62,0.53l-0.82,1.11l0.12,0.5l0.5,0.29l3.42,0.12l3.05,1.17l4.64,-0.55l1.25,2.5l0.76,0.36l1.36,0.04l-0.19,1.29l0.94,2.76l0.76,1.25l-0.65,2.08l0.27,1.27l1.11,1.57l0.8,0.42l0.78,1.34l1.47,0.37l2.77,-1.54l2.87,0.47l2.51,2.23l1.11,-0.21l1.55,0.25l0.81,0.78l1.22,0.44l1.88,-1.45l4.96,-1.04l2.8,-1.15l0.83,0.08l2.01,1.97l0.34,1.37l1.43,1.96l4.69,3.37l1.87,-0.44l0.48,-1.59l0.62,-0.26l2.67,1.56l2.59,0.2l3.77,2.27l1.65,0.09l1.78,-0.6l1.55,1.86l2.32,0.35l4.21,2.69l1.5,0.14l2.03,-0.5l0.42,0.22l-0.38,2.28l0.93,1.25l0.02,0.88l-0.71,1.68l-2.33,2.28l-1.74,0.48l-0.99,0.5l-0.2,0.47l0.33,0.98l0.8,0.9l3.08,1.14l-2.66,0.06l-1.31,1.36l-0.82,2.61l0.3,0.5l2.33,0.73l0.65,2.74l-0.56,1.14l0.38,0.56l1.14,0.33l-0.98,1.32l-1.48,3.53l0.0,1.35l-0.38,0.48l-4.48,0.18l-6.63,-0.37l-1.19,0.33l-1.59,2.23l-0.97,0.76l-1.66,0.71l-2.07,0.29l-1.24,1.08l-0.43,2.63l-0.72,1.43l0.07,0.65l0.94,0.53l-1.01,1.32l0.1,1.34l-4.77,-0.22l-3.93,0.37l-2.89,2.7l-1.6,0.01l-2.4,0.74l-1.66,0.94l-1.64,1.67l-1.38,-0.75l-1.76,0.02l-1.92,0.57l-2.01,1.22l-1.01,0.2l-2.4,-0.34l-2.68,0.72l-5.92,4.2l-0.85,1.26l-0.06,-0.98l-0.84,-1.19l-0.64,-0.01l-2.18,2.85l-2.86,1.3l-0.28,2.37l0.9,3.43l1.61,3.06l3.22,4.28l1.58,1.61l1.23,0.7l1.53,0.14l2.77,-1.34l0.99,-0.18l2.36,0.49l1.18,-0.93l1.12,-0.43l1.51,-0.06l3.32,0.89l-1.49,2.39l-0.71,2.57l-1.95,0.58l-2.39,-0.07l-2.35,0.4l-2.62,-1.59l-1.47,-0.29l-1.5,0.36l-1.71,2.08l-2.67,1.33l-0.94,1.5l-2.45,-0.32l-2.42,0.27l-3.46,1.46l-2.67,3.13l-2.71,1.84l-2.1,0.57l-1.96,-0.18l-1.25,-0.53l-2.53,-1.83l1.01,-1.84l1.11,-3.8l-0.15,-1.47l-0.78,-2.16l-2.21,-1.51l-1.96,0.2l-0.87,-0.34l-3.79,-2.62l-2.11,-0.17l-2.05,0.49l-0.9,-0.76l8.2,-5.54l1.9,-0.29l2.58,-1.26l2.69,-1.85l0.16,-0.43l-0.38,-1.45l-0.61,-1.16l-0.44,-0.2l-2.12,0.61l-3.21,-1.95l-3.47,0.87l-2.0,-0.12l-4.23,0.79l-5.91,-2.98l-1.5,-0.45l-1.23,0.07l-0.17,-0.18l0.26,-0.11l2.25,-0.47l0.37,-0.66l-0.06,-0.73l-0.3,-0.35l-2.07,-0.55l-1.91,-0.16l-1.14,-0.62l9.74,1.35l2.9,-2.06l0.45,-0.95l-0.45,-0.17l-2.95,0.84l-2.9,-0.52l-1.01,-0.69l-0.86,-1.03l-0.34,-1.11l0.24,-1.25l-0.37,-2.3l-1.35,-2.95l-1.18,-1.12l-0.51,-0.02l-0.12,0.49l2.04,4.82l-0.14,3.34l-0.31,0.96l-0.98,0.24l-2.85,-0.46l0.34,-1.53l-0.17,-0.42l-0.46,0.01l-1.0,0.76l-1.19,1.74l-0.91,0.23l-2.56,-0.19l-4.62,1.24l-2.15,5.06l-1.92,2.66l-3.91,3.98l-4.21,1.88l-0.96,0.3l-1.74,-0.36l-1.2,0.75l-0.41,0.86l-0.01,1.39l0.97,1.2l0.63,3.62l-1.51,-1.33l-2.41,-0.85l-2.58,0.32l-2.62,1.37l-1.64,0.47l-1.56,-0.31l-0.55,0.61l0.02,0.59l-3.8,-0.88l-1.69,-0.86l-1.12,-1.36l0.85,-0.48l2.64,-0.36l0.43,-1.31l-0.26,-1.46l3.09,-2.98l0.2,-1.44l1.39,-0.67l1.45,-1.41l0.77,-2.41l-0.83,-1.85l-0.2,-2.07l0.28,-0.4l2.58,-1.04l0.09,2.09l0.34,0.39l0.96,-0.28l0.59,-0.99l0.99,0.29l0.82,-0.29l2.2,0.94l1.43,-0.79l1.79,1.6l3.15,-0.45l1.01,-0.9l-0.07,-0.59l-2.61,-1.84l0.21,-3.09l-0.93,-1.9l-4.09,-2.24l-0.11,-1.31l-0.67,-0.88l0.48,-2.47l-0.27,-0.75l-2.11,-0.98l-0.72,-0.85l-2.54,-1.77l-0.12,-0.51l0.82,-2.15l0.35,-2.11l-0.29,-2.08l-1.12,-1.57l-0.78,-0.17l-1.42,0.65l-1.15,-0.9l-1.49,-2.29l-3.33,-0.54l-0.94,0.81l-0.37,-0.7l-0.98,-0.21l-0.04,-0.93l-0.76,-0.44l-2.59,-0.27l-0.22,-0.69l-0.56,-0.44l-1.12,-0.28l-1.94,-1.43l-4.0,-1.06l-1.85,1.0l-1.09,-0.18l-1.37,0.99l-5.24,-0.22l-2.8,1.62l-0.38,0.61l-4.06,0.92l-0.67,1.8l-1.39,1.88l-9.41,1.42l-4.0,1.52l-1.37,1.36l-2.09,0.42l-4.14,-3.56l-1.48,-0.38l-4.17,0.7l-1.51,-0.63l-0.93,0.12l-4.48,-0.97l-3.48,0.03l-2.69,-1.58l-1.04,-0.1l-1.43,1.47l-2.08,0.85l0.02,-1.1l-1.22,-1.43l-1.5,-0.07l-1.1,-0.44l-0.93,-1.27l-2.27,-0.88l-0.94,-1.63Z\",\n            name: \"Ukraine\"\n          },\n          SE: {\n            path: \"M520.76,323.75l2.31,0.87l1.42,-0.61l0.14,-0.52l-1.76,-2.91l2.49,-0.3l0.9,-1.54l-0.49,-1.97l-2.39,-1.12l-1.88,-2.97l-2.08,-1.66l-3.6,-6.12l-1.32,-4.24l-0.51,-0.26l-0.86,0.28l-0.98,-4.47l-1.97,-1.01l-0.41,-4.77l-0.3,-0.35l-1.93,-0.51l-1.22,-2.08l-0.43,-4.6l-1.38,-0.8l-0.89,0.07l0.29,-1.68l-0.86,-7.72l-0.81,-2.41l0.49,-1.42l0.99,-0.13l1.05,0.84l1.08,2.44l1.23,0.55l1.65,-0.68l1.12,-2.03l1.2,-5.71l-1.57,-5.83l2.04,-2.13l1.28,-3.25l0.59,-0.43l2.52,-0.49l1.73,-1.15l2.66,-2.86l0.5,-4.2l0.98,-2.97l-0.5,-2.21l-3.21,-7.03l-0.24,-1.94l1.98,-0.63l2.88,-0.11l0.56,-0.37l1.78,-3.52l0.73,-2.76l-1.76,-2.27l-2.22,-2.02l-1.56,-0.72l-4.24,-2.89l1.8,-9.09l0.16,-2.55l-2.56,-6.53l0.33,-2.72l-0.41,-4.04l1.37,-1.57l0.05,-0.47l-2.85,-5.97l2.76,-4.11l-0.39,-2.32l6.46,-7.29l1.66,-1.21l2.57,-1.06l2.85,-0.52l10.18,1.32l0.91,-0.69l0.88,-1.26l1.06,-1.69l0.15,-2.08l-0.38,-2.85l-0.59,-1.74l-5.55,-2.58l6.02,-7.64l5.01,-8.02l0.94,-7.63l1.16,-3.36l-1.16,-7.19l6.39,-0.83l4.58,-1.92l1.56,-1.27l-0.64,-4.3l1.68,-1.31l4.43,-4.91l7.14,-6.7l0.4,-2.56l-1.05,-2.31l-3.01,-3.81l0.7,-1.43l3.43,-1.05l1.77,-1.7l2.84,-6.35l5.14,-3.08l1.96,-1.6l7.81,3.15l0.47,-0.13l2.84,-3.95l0.73,-1.63l-0.2,-7.55l1.64,-0.55l0.91,-0.15l5.22,1.45l3.88,0.18l11.04,3.05l1.69,0.08l3.69,-2.87l-0.1,-0.68l-2.97,-1.22l1.87,-1.21l2.42,-3.65l0.39,-2.24l-0.15,-1.32l-2.42,-2.49l5.83,-0.32l3.49,1.28l0.41,1.76l3.54,1.83l3.19,2.43l0.7,0.87l7.17,3.99l2.75,1.04l2.32,0.34l5.63,1.69l0.91,0.52l3.19,2.48l1.11,2.74l1.96,0.38l2.08,2.53l2.08,1.38l-1.82,1.61l-0.02,4.22l0.55,1.9l-1.01,2.11l-0.15,1.45l0.57,0.6l3.27,0.52l0.47,1.84l-1.41,1.11l-0.54,0.92l0.17,2.66l0.56,1.56l3.57,4.32l0.53,1.22l-1.21,2.31l-0.38,2.92l-1.22,1.48l-0.86,0.53l-0.43,1.07l-0.12,1.6l0.36,2.86l0.77,1.59l2.15,1.04l1.83,3.4l1.28,3.66l-3.01,0.43l-2.89,-1.0l-1.28,0.49l-5.02,0.43l-1.55,1.09l-2.27,-1.04l-2.3,-1.86l-0.51,0.01l-1.64,1.38l-0.76,0.19l-1.06,-1.24l-1.24,-0.12l-1.65,2.67l-0.35,3.09l-1.94,-0.25l-0.44,0.48l0.14,0.6l0.53,0.47l-2.9,0.43l-0.18,0.93l0.46,0.62l-0.61,0.63l-4.41,0.46l-0.55,0.67l-0.09,0.87l0.3,0.61l0.77,0.46l0.08,0.6l-1.88,-1.4l-0.5,0.08l-0.3,0.57l1.85,2.46l0.35,1.44l-1.93,2.38l-3.11,2.99l-0.85,1.59l0.1,0.49l1.82,1.74l1.54,3.9l1.61,1.71l-0.59,1.44l-2.79,1.72l-3.32,2.76l-3.43,6.64l-1.04,0.81l-2.98,1.11l-1.22,1.15l-2.17,1.25l-4.05,1.19l-1.79,1.56l-0.81,1.54l-0.53,0.07l-2.04,-1.05l-0.54,0.31l-0.16,1.14l-1.25,-0.75l-0.51,0.08l-0.97,1.16l-0.67,1.65l-2.53,2.16l-2.77,-0.4l-0.7,0.56l0.41,0.72l-2.6,0.41l-0.39,0.27l-0.94,2.25l-2.29,0.6l-0.72,0.96l0.32,0.59l2.05,0.13l-0.3,1.29l-2.74,0.93l-1.07,1.24l-0.71,-0.02l0.17,-0.42l-0.38,-0.55l-1.69,0.04l-0.49,-0.91l-0.6,-0.13l-0.37,0.29l0.08,1.31l1.02,2.21l-0.79,1.02l-0.03,0.58l1.47,0.79l-0.87,0.37l-1.41,1.48l-1.42,0.04l-1.13,1.05l-0.71,-0.0l-2.16,-1.18l-0.52,0.21l-0.53,1.86l0.78,2.11l2.2,1.98l-1.12,1.3l-1.84,6.3l0.91,3.42l-2.8,-0.75l-0.53,0.45l0.23,1.26l-1.12,1.82l0.44,2.39l-0.34,1.5l0.79,1.46l-0.42,0.9l0.53,6.73l0.99,2.76l-0.36,2.22l1.62,1.58l3.13,0.25l0.85,1.75l0.4,0.25l1.24,-0.12l2.49,-0.95l0.7,1.43l2.09,2.15l1.35,1.02l1.94,0.48l1.89,1.5l-0.11,2.2l1.01,0.75l2.41,0.77l1.86,2.64l0.72,2.14l-0.21,1.13l-3.27,1.95l-1.93,1.86l-3.29,1.82l-0.78,0.74l-0.61,0.26l-0.88,-0.13l-2.7,1.43l-0.19,0.48l0.54,0.87l2.07,0.26l1.22,-0.32l0.88,-0.73l1.45,-0.01l1.59,-0.76l0.43,0.17l0.48,0.84l-2.58,0.83l-0.54,2.14l-1.03,1.23l-2.47,0.91l-3.56,2.1l-1.06,-0.11l-1.26,0.94l-2.84,1.13l-1.56,1.59l-3.24,1.35l-1.66,1.1l-8.84,-0.19l-1.55,0.56l-0.25,0.42l2.6,0.99l1.39,-0.17l4.0,0.51l1.35,1.35l-3.09,0.88l-0.3,0.52l1.51,4.14l-0.88,1.13l-0.06,4.42l-1.32,0.36l-0.56,1.98l0.4,1.19l0.25,3.77l0.62,1.3l-0.25,1.17l-2.12,3.38l0.05,1.51l0.64,2.28l-2.37,6.77l-1.76,2.26l-0.93,1.78l-2.08,5.31l-1.98,1.63l-2.71,-1.1l-1.67,0.06l-2.41,0.6l-3.73,-0.4l-3.83,0.25l-0.92,0.53l-0.18,0.46l0.43,1.51l-0.8,0.15l-1.56,-0.48l-2.19,1.42l-1.9,1.7l-0.71,1.14l-0.17,2.38l1.76,3.55l-2.0,2.18l-1.06,0.07l-3.83,-0.68l-6.49,1.54l-5.29,-1.1l0.53,-1.06l0.42,-5.2l-0.52,-1.24l-1.43,-1.42l-3.24,-4.83l-1.03,-2.15ZM610.35,291.1l-0.44,1.16l-0.16,-0.02l-0.35,-0.5l0.95,-1.01l0.99,0.04l-0.99,0.33ZM608.6,293.08l-0.69,0.4l-0.58,1.21l-1.9,1.01l-0.31,4.36l1.23,1.47l-1.23,0.69l-1.15,2.25l-2.03,0.82l-0.99,0.77l-1.3,1.61l-0.6,1.99l-1.6,0.85l1.52,-2.4l-0.04,-0.53l-0.96,-0.91l-1.29,-2.5l0.57,-1.33l-0.21,-4.03l3.53,-3.79l1.7,-1.37l2.27,-0.59l0.99,0.53l0.56,-0.21l0.42,-1.14l0.49,-0.18l1.6,1.03ZM602.8,260.19l0.1,-0.33l0.6,-0.21l-0.46,0.3l-0.23,0.24ZM600.15,269.23l0.11,-0.28l0.27,-0.3l-0.36,0.57l-0.02,0.01ZM574.47,322.99l-0.65,0.71l-0.32,-0.99l0.14,-4.77l2.86,-5.75l1.39,-0.63l3.64,-8.06l0.2,-0.26l0.38,0.11l-0.59,0.73l0.06,1.24l-2.27,4.27l-0.62,2.77l-0.83,0.77l-3.37,9.86Z\",\n            name: \"Sweden\"\n          },\n          AT: {\n            path: \"M481.24,489.9l0.13,-0.58l-1.06,-2.68l1.05,-2.02l0.09,-1.67l1.32,-0.27l0.2,-0.84l3.5,1.6l0.51,1.42l1.54,0.43l-0.16,1.17l0.45,0.42l1.9,-0.64l0.89,-1.0l0.56,-1.07l0.32,-1.9l2.68,-0.0l2.56,0.45l1.56,1.96l1.23,0.23l3.45,-0.54l1.5,-1.13l4.2,-1.6l6.32,-0.62l0.56,-0.68l-0.02,-0.91l1.71,0.39l1.72,0.89l2.72,-0.54l0.93,0.41l0.03,1.0l0.54,0.69l2.21,1.18l0.81,-0.01l0.6,-0.84l0.29,-2.75l-0.54,-1.0l-1.45,-0.25l0.66,-1.25l-0.01,-1.43l-2.62,-3.34l0.61,-1.04l3.51,-1.91l3.25,-0.97l0.81,-0.58l0.62,-0.8l0.73,-2.89l2.33,0.93l1.08,-0.42l0.94,-0.96l0.25,-2.75l1.82,1.08l1.04,1.69l1.99,0.43l2.41,0.04l1.64,-0.85l2.7,0.45l0.45,-0.33l0.19,-1.16l1.34,-1.55l1.2,0.04l0.39,-0.27l0.74,-3.74l0.73,0.04l1.42,0.91l2.0,-0.47l5.16,1.96l1.7,-0.05l3.21,1.91l4.25,0.28l1.59,-1.06l5.12,1.61l0.79,1.59l-1.13,2.46l0.03,1.3l1.48,3.33l1.49,2.65l0.58,0.5l-0.55,0.63l-0.13,0.95l-0.66,1.21l0.38,2.0l-3.35,0.39l-2.64,-1.21l-0.78,0.17l-1.67,1.19l-0.17,0.52l0.4,0.53l2.63,0.76l0.36,0.9l-0.61,1.28l-2.51,1.02l0.22,2.14l-0.57,1.05l0.29,1.33l0.71,0.37l-0.38,1.52l-1.55,0.13l-1.08,0.52l-3.02,2.24l-0.95,1.05l-0.06,1.65l-2.43,-0.52l-1.83,0.22l-2.62,1.17l-3.01,-0.22l-4.42,0.64l-0.86,0.49l-1.18,1.41l-2.58,1.56l-9.66,-1.84l-4.61,-0.75l-4.38,-0.3l-9.29,-1.69l-1.1,-0.46l-3.08,-3.86l-0.22,-0.59l0.9,-1.44l-0.7,-0.65l-5.54,1.63l-3.29,-0.2l-4.01,0.41l-1.66,0.81l-1.47,2.36l-1.02,0.33l-2.05,-0.36l-1.13,-0.95l-2.83,-0.17l-0.56,-1.63l-1.1,-0.55l-3.07,2.23l-3.13,-1.32l-0.64,-1.3l-3.07,-0.87Z\",\n            name: \"Austria\"\n          }\n        },\n        height: 790.3360148034734,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 11.5\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"north_america_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 543.9752077221104,\n          bbox: [{\n            y: -12658749.920443352,\n            x: -19602744.043810368\n          }, {\n            y: -805507.5274078546,\n            x: 8293.375346519799\n          }],\n          left: 0\n        }],\n        paths: {\n          PR: {\n            path: \"M615.15,486.14l0.49,-0.54l4.41,0.24l0.53,0.27l0.25,-0.21l1.74,0.55l-1.52,1.25l-4.61,0.12l-1.07,-0.1l0.09,-0.95l-0.31,-0.64Z\",\n            name: \"Puerto Rico\"\n          },\n          DO: {\n            path: \"M591.08,485.11l1.01,-0.94l0.06,-0.79l-0.32,-0.52l0.75,-0.93l-0.5,-0.96l0.16,-2.32l0.47,-0.33l1.59,0.25l1.43,-0.34l1.49,0.7l1.0,0.03l1.26,0.7l1.15,-0.16l0.52,1.4l1.08,0.56l-0.11,0.58l0.36,0.4l3.61,0.67l1.01,0.41l1.54,1.28l-1.42,1.56l-0.98,-0.9l-2.01,-0.22l-2.55,-0.02l-1.32,0.39l-0.84,0.63l-1.29,0.15l-0.9,-0.61l-2.07,0.34l-0.5,0.35l-0.18,0.93l-1.27,1.96l-0.79,-0.55l-0.56,-1.27l0.01,-1.51l-0.9,-0.91Z\",\n            name: \"Dominican Rep.\"\n          },\n          DM: {\n            path: \"M644.58,500.93l0.23,0.18l0.09,0.55l-0.06,-0.22l-0.26,-0.5Z\",\n            name: \"Dominica\"\n          },\n          LC: {\n            path: \"M646.75,509.74l-0.11,-0.11l0.12,-0.26l-0.02,0.37Z\",\n            name: \"Saint Lucia\"\n          },\n          NI: {\n            path: \"M510.73,514.44l0.06,-0.06l0.48,0.45l-0.55,-0.39ZM511.29,514.84l2.51,-0.37l0.5,-0.47l0.25,-0.88l0.89,-0.25l-0.14,-2.33l1.96,-0.04l1.21,-1.35l1.24,0.92l0.61,-0.04l0.37,-0.69l2.63,-1.95l0.14,-1.0l0.59,-0.38l0.22,-0.7l0.41,-0.19l0.96,0.74l1.13,0.1l3.04,-0.79l2.07,-1.05l-0.18,0.72l0.59,0.49l0.48,1.81l-1.11,1.68l-0.43,1.39l-0.38,2.18l0.2,2.87l-1.09,1.22l0.44,1.35l-0.1,0.78l-0.47,0.37l-0.28,0.9l0.84,1.13l-1.07,1.87l0.22,1.13l0.74,1.26l-0.8,0.2l-1.1,-0.22l-0.86,-0.95l-1.68,-0.44l-1.48,0.48l-3.23,-1.18l-0.9,0.36l-3.52,-3.12l-1.96,-2.65l-3.47,-2.91Z\",\n            name: \"Nicaragua\"\n          },\n          PA: {\n            path: \"M534.6,538.28l0.75,-0.82l-0.31,-1.31l0.78,-0.58l0.11,-0.46l-1.07,-0.96l0.0,-1.44l0.4,-0.43l0.54,0.28l0.65,-0.15l0.56,0.42l0.14,1.01l0.51,0.34l0.2,0.83l0.77,0.44l1.65,0.03l0.34,-0.32l0.89,0.92l1.09,0.25l2.75,-0.57l1.51,-1.01l2.12,-0.65l2.77,-1.97l2.26,0.3l0.98,0.56l2.07,0.1l3.27,1.65l2.03,1.89l-0.23,1.03l1.29,2.33l-0.63,0.53l-0.17,0.77l-0.68,0.51l-0.58,-0.69l-0.66,0.08l-0.06,1.09l-0.55,0.84l-1.99,-3.13l0.67,-0.54l-0.02,-0.64l0.32,-0.26l1.8,1.09l0.45,-0.2l-0.09,-0.48l-1.26,-0.97l-0.37,-0.76l-1.96,-0.04l-0.28,-0.79l-0.59,-0.47l-2.4,-1.47l-0.94,-0.16l-1.58,0.3l-1.08,0.76l-0.56,1.42l-3.31,1.77l-0.0,1.28l2.11,2.54l-1.18,0.19l-0.73,0.74l-1.04,0.23l-0.76,-0.04l-0.82,-3.08l-1.01,-0.08l-0.44,1.11l-0.93,-0.37l-1.33,-2.2l-2.25,-0.36l-0.53,-0.53l-2.23,-0.06l-1.12,0.36Z\",\n            name: \"Panama\"\n          },\n          CA: {\n            path: \"M656.78,311.04l0.24,-0.16l0.13,0.16l-0.06,0.01l-0.31,0.0ZM658.78,310.96l1.32,-2.86l1.52,0.67l0.57,-0.05l-0.0,-0.7l-0.32,-0.25l0.55,-0.85l-0.37,-0.55l-0.78,-0.11l-0.01,-0.43l0.68,-0.71l0.52,0.35l0.69,-0.05l0.26,-0.5l-0.68,-1.17l2.47,-5.27l0.34,-0.49l1.01,-0.41l-0.52,-0.58l1.07,-0.85l0.3,-1.08l0.98,-0.87l0.58,-1.21l3.2,-1.5l1.41,0.61l-1.62,0.22l-0.31,0.33l0.09,1.0l0.56,0.37l0.56,-0.09l-0.02,0.65l-0.32,0.74l-1.15,0.94l-0.25,0.86l-1.47,1.64l-1.55,2.62l-0.63,1.68l0.3,1.48l0.79,-0.27l2.58,-2.87l-0.18,0.68l0.61,0.29l1.02,-0.45l1.08,0.35l-1.88,0.97l-0.63,0.66l-0.05,0.46l0.42,0.2l0.82,-0.39l-0.88,0.8l-0.11,0.47l0.42,0.23l1.26,-0.37l0.85,0.48l1.18,-0.25l0.13,0.51l0.46,0.11l-0.52,1.07l0.29,0.91l0.78,-0.34l0.4,-0.82l0.44,-0.27l0.43,0.17l2.09,-1.46l0.24,0.94l0.61,-0.04l0.38,-0.45l1.78,-0.12l1.47,0.69l0.15,0.68l-3.03,2.63l0.37,0.32l0.62,-0.03l0.27,0.54l0.87,0.13l-0.19,0.41l-1.53,0.81l0.06,0.7l2.53,-0.72l0.75,0.1l2.07,-0.91l-0.6,0.93l-0.76,0.12l-1.38,0.96l0.04,0.81l-1.32,0.41l-0.3,0.4l0.91,0.43l-0.87,0.95l-1.5,-0.7l-1.22,2.12l-1.09,0.78l-1.18,0.26l-2.01,2.83l-2.45,0.37l-0.43,-0.19l2.21,-0.99l1.54,-1.84l1.6,-0.78l0.59,-0.81l-0.53,-0.5l-0.67,0.25l-2.11,-0.25l-0.43,0.23l-0.29,0.96l-1.25,-0.11l-0.27,-0.14l0.07,-1.7l-0.58,-0.22l-1.36,0.21l-0.6,0.79l-2.63,0.59l-7.46,-0.68l-0.64,-0.33l-1.29,0.62l-2.78,0.2l-0.5,-1.6l3.64,-2.99l1.54,-0.89l-0.39,-0.58l-1.45,-0.08ZM683.12,317.23l0.46,0.3l1.12,-0.2l1.62,-2.14l0.85,-0.39l-0.85,1.7l0.07,1.94l0.68,0.3l0.34,-0.18l1.28,-1.47l0.07,1.34l-1.15,2.05l0.08,0.93l-0.93,1.78l-0.88,-0.43l-1.1,0.47l0.18,-2.74l-0.24,-0.4l-0.74,0.07l-1.14,1.28l-0.93,0.54l1.64,-3.37l-0.42,-1.38ZM673.85,292.06l0.2,-0.08l-0.12,0.07l-0.08,0.01ZM674.16,291.85l0.09,-0.48l0.22,-0.03l-0.24,0.43l-0.06,0.08ZM256.05,238.13l-0.69,-2.13l-5.23,-4.12l-0.56,-1.06l-2.14,-1.13l0.48,-1.39l0.0,-0.49l-0.42,-0.4l-3.05,0.12l-1.57,1.06l-2.25,-0.82l-0.7,0.54l-1.85,-0.48l0.0,-77.04l2.6,0.35l2.21,-0.17l3.93,0.93l2.45,1.75l4.29,2.06l5.91,1.83l3.08,0.07l4.41,1.76l0.43,-0.14l0.11,-0.58l-1.11,-1.39l-2.21,-0.71l1.21,-0.07l0.39,-0.4l-0.33,-0.56l-1.23,-0.44l0.75,-1.21l2.32,-0.3l0.47,-1.23l3.54,-0.11l0.18,-1.79l0.56,0.08l0.76,0.92l0.78,0.27l-1.35,1.86l0.49,0.7l2.46,-1.04l2.68,-0.58l1.62,-1.94l2.06,-0.0l0.47,-0.6l-0.18,-0.29l1.17,0.37l3.66,-1.92l1.51,0.1l1.25,-1.39l1.23,-0.64l3.52,0.35l1.28,-0.92l0.43,0.52l-0.42,0.53l-5.94,3.1l-5.64,1.06l-2.08,2.08l-1.86,0.46l-3.86,3.86l0.39,1.1l1.17,0.42l0.3,-0.06l0.08,-0.79l2.01,0.19l0.99,-0.42l0.31,-0.66l-1.07,-0.46l0.04,-0.94l3.95,-1.82l0.83,-0.85l0.03,-0.48l1.67,0.02l0.4,0.71l1.09,-0.84l0.27,1.88l0.34,0.34l2.66,-3.37l1.91,-1.28l4.38,-1.24l0.14,0.8l0.56,0.59l1.44,-0.45l2.44,-1.95l0.62,-1.38l2.98,-1.38l-0.18,-0.7l-1.35,-0.27l-0.12,-0.64l-0.69,-0.34l0.5,-0.82l3.64,2.43l1.47,2.07l1.28,2.66l2.25,2.14l1.83,1.2l2.05,0.64l1.02,-0.03l1.1,-0.71l0.15,-1.01l-0.88,-1.25l0.55,-0.55l0.12,-0.66l0.6,-0.11l1.52,-1.44l-0.12,-0.81l0.98,-0.67l0.39,3.18l1.31,0.85l-1.65,1.97l0.15,0.73l0.82,0.39l4.5,-0.29l1.65,-1.42l0.86,-2.34l4.68,-0.02l2.67,0.36l2.84,1.02l4.28,2.56l6.5,1.11l3.89,1.9l4.54,1.19l5.97,0.68l0.44,-0.47l-0.48,-0.7l1.35,-0.17l4.04,1.2l2.85,1.63l2.05,2.24l-0.32,0.55l-0.78,0.14l-2.46,-0.19l-0.74,0.73l-1.42,0.6l-0.41,0.59l0.05,0.56l-1.1,0.63l-0.23,0.45l0.26,0.46l1.6,0.75l6.39,0.99l7.16,0.22l1.38,-0.43l3.43,-0.24l1.7,-0.54l1.33,0.23l3.11,-1.4l1.32,-0.29l2.18,2.18l2.91,0.28l0.39,1.57l0.66,0.85l0.65,-0.14l0.62,-1.35l1.27,1.61l1.81,1.27l0.28,0.53l-0.22,0.24l-0.99,0.32l-1.34,-0.35l-0.34,0.65l5.23,5.2l1.33,0.89l0.44,-0.55l-2.32,-2.96l-0.13,-1.58l2.37,0.95l0.58,-0.6l-0.85,-1.22l0.17,-0.74l-1.4,-1.4l-0.46,-2.13l-1.51,-1.59l0.01,-0.65l0.99,-0.81l0.07,-0.92l4.4,-0.79l0.8,-0.75l1.29,0.12l0.33,-1.19l0.52,-0.43l1.15,-0.22l1.11,-0.72l0.47,-0.61l0.09,-0.93l-1.14,-0.54l-0.69,0.11l-2.28,0.98l-0.76,1.31l-1.19,-0.18l-2.15,0.78l-1.63,-0.3l-0.88,0.46l-0.02,0.94l-2.44,0.19l-1.81,-0.99l1.71,-2.3l4.42,-0.69l6.43,-2.05l1.7,0.45l0.83,0.62l1.24,3.34l1.45,1.05l2.14,0.56l0.26,0.98l1.54,0.77l2.48,0.01l2.08,-0.6l3.85,2.58l2.05,0.7l2.17,-0.09l1.68,0.45l5.8,-1.27l3.33,0.21l3.16,0.79l1.37,-0.02l2.63,-0.72l0.25,-0.43l-1.57,-1.85l3.48,3.12l2.53,0.84l1.91,-1.1l-0.03,-1.34l-2.23,-1.35l-1.14,-0.15l-2.0,0.53l-1.11,-1.1l0.26,-0.61l-1.12,-1.54l1.75,0.48l2.12,-0.6l0.18,-0.68l-0.54,-0.57l1.0,0.43l1.15,-0.12l2.05,2.05l2.0,0.12l-0.88,1.3l0.47,0.56l1.08,-0.24l0.56,-0.81l1.47,-0.6l-0.87,3.95l-0.83,1.32l-0.06,0.62l0.95,1.28l0.32,1.05l0.94,0.13l1.01,-0.29l-0.19,0.76l0.5,0.26l0.96,-0.24l0.41,0.33l-0.02,0.83l-1.39,0.18l-1.23,-0.44l-0.92,0.18l-0.94,-0.62l-0.58,0.27l-0.1,0.44l2.85,2.78l0.8,1.19l0.36,-0.26l0.21,-0.94l-1.43,-1.65l1.71,0.28l1.42,-0.42l0.8,-2.84l-0.69,-2.51l-1.27,-1.73l0.9,-2.3l1.37,-0.33l1.28,0.34l0.82,-0.28l4.22,-3.58l2.53,-1.36l-0.26,-0.68l-0.7,-0.04l-0.12,-2.04l-0.93,-1.24l-0.82,0.14l-0.79,1.74l-2.13,0.17l0.15,-0.74l2.48,-2.05l-0.38,-0.56l-0.54,-0.0l-0.03,-0.91l1.89,-0.48l-0.37,0.6l0.15,0.48l0.81,0.23l1.56,-1.19l0.19,-0.28l-0.67,-1.5l-0.9,-0.39l-1.4,0.56l-1.55,0.02l-1.86,-1.76l-0.66,0.01l-0.49,0.58l-3.72,-1.55l-1.9,-0.42l-2.51,-2.79l-0.26,-0.67l0.03,-0.82l1.19,-1.59l2.19,-0.44l-0.46,-0.75l0.38,-0.53l-0.2,-0.62l-1.88,0.48l-1.23,-1.3l0.55,-3.8l1.6,-1.31l1.58,0.79l1.07,-0.11l0.96,-1.59l-0.11,-0.57l-2.13,-0.39l3.16,-2.83l2.78,-0.75l0.45,1.21l0.87,0.79l2.71,0.1l0.12,1.13l2.55,1.65l1.11,1.14l0.66,2.24l-0.42,2.27l3.22,2.05l1.49,2.17l0.08,0.87l0.73,0.28l0.7,-0.47l0.71,0.99l-1.48,0.02l-1.34,-0.79l-0.76,0.11l-0.98,1.21l0.13,0.57l2.33,0.31l-4.26,2.97l-0.03,0.67l0.7,0.22l2.37,-0.2l0.47,0.61l1.73,0.68l1.12,-0.19l1.37,-0.78l-0.48,0.42l0.42,0.6l3.63,0.13l-0.89,1.34l-0.8,-0.38l-0.89,0.14l-0.43,0.33l0.12,0.56l2.43,1.56l1.21,1.84l-0.26,0.42l-0.12,3.3l2.08,2.08l0.54,-0.16l1.51,-2.05l0.11,-1.28l1.08,-3.4l1.81,-2.01l0.82,-0.07l2.04,1.79l2.1,1.27l1.2,1.65l0.76,3.06l-0.13,0.49l-0.37,0.07l-0.46,-0.06l-0.68,-0.78l-0.93,0.52l-0.21,0.66l0.25,2.77l0.67,1.73l3.55,3.57l0.8,1.62l0.95,-0.07l3.66,-2.63l0.88,-2.84l2.31,-2.45l1.14,-3.32l-0.01,-1.62l0.33,-0.44l0.63,-0.57l1.05,0.29l2.08,-0.29l0.35,-0.39l-0.25,-0.53l-0.93,-0.36l0.9,-0.63l0.22,-1.42l-2.63,-1.37l-0.12,-2.73l-0.41,-0.85l0.2,-1.35l1.84,0.36l1.94,-0.41l1.6,0.05l3.26,1.29l5.39,0.09l0.83,0.3l-0.33,0.38l-1.25,0.33l-0.07,0.73l2.21,0.76l0.25,1.19l0.43,0.32l1.43,-0.24l2.63,0.7l-1.12,1.01l-1.68,0.81l-0.27,0.54l0.38,0.46l2.78,0.26l0.44,0.61l-0.08,0.49l-1.13,0.81l-1.87,0.8l-1.52,-0.4l-1.76,0.34l-0.29,0.53l1.76,2.93l0.7,0.23l-0.15,0.92l0.28,0.77l3.89,3.71l-0.82,3.23l-0.71,0.5l-1.49,0.23l-1.75,2.04l-1.9,1.27l-1.67,0.38l-2.16,1.45l-0.54,-0.03l-2.12,-2.9l-1.55,-0.39l0.14,-0.56l-1.48,-1.23l-1.69,-0.52l-1.72,1.18l-0.09,0.44l0.74,0.5l1.04,-0.56l0.77,0.23l2.11,1.88l1.96,3.3l-2.07,-0.67l-0.75,0.35l-0.32,0.53l-0.49,-0.15l-2.31,-0.96l-1.67,-1.72l-1.01,-0.39l-2.48,0.39l-3.36,-0.02l-0.3,0.17l-0.2,1.0l0.36,0.83l3.64,1.76l-0.32,0.62l-5.29,4.88l-1.66,0.74l-2.5,-0.08l-3.43,-2.12l-0.51,-0.63l-1.7,-0.48l-3.46,-1.69l-1.19,0.02l-0.13,0.43l-5.19,-0.71l-2.41,0.2l0.02,0.69l2.02,1.02l0.5,-0.71l5.21,1.13l4.96,3.65l3.97,0.57l4.12,0.16l1.55,0.38l-0.0,0.68l-1.25,1.92l-3.07,3.48l-1.06,1.72l-3.4,1.48l-1.03,-0.28l-0.67,-0.6l-0.65,0.15l0.12,0.68l-0.61,-0.29l-1.07,0.08l-0.57,-0.39l-0.32,-0.75l-1.57,0.22l-0.28,0.14l0.02,0.71l0.71,0.65l-1.07,-0.19l-0.26,0.62l0.7,1.09l-0.59,0.76l-0.8,0.4l-1.21,-0.29l-1.09,0.65l-3.61,-1.16l-1.71,-0.23l-0.52,-0.55l-1.85,0.27l-5.48,-1.93l-1.31,-0.93l-0.5,0.03l-0.08,0.5l0.44,0.75l-0.23,0.99l0.72,0.74l1.61,0.22l0.34,-0.54l4.56,1.46l-1.17,0.81l0.4,0.59l1.07,-0.12l2.07,-1.02l2.44,1.47l1.85,0.53l1.11,0.86l0.1,1.45l-0.31,0.8l-1.57,0.34l-1.62,0.92l-2.98,-0.47l-1.69,0.35l-0.39,0.27l-0.04,0.59l0.94,0.99l-1.63,0.36l-1.31,1.88l-1.87,-0.48l-0.25,0.69l1.26,0.76l-0.68,0.6l0.09,0.44l-1.47,0.33l-0.01,0.6l-0.82,-0.08l-0.39,0.58l1.08,1.25l-1.64,0.94l-1.13,1.07l0.05,1.11l-0.84,0.17l-0.03,1.45l-2.23,4.08l-1.17,0.68l0.04,0.68l0.37,0.34l-0.7,3.5l-0.01,5.16l-0.3,1.07l-0.57,0.49l1.02,0.63l0.53,1.11l0.62,0.13l1.29,1.07l-0.25,2.83l0.31,0.39l0.76,-0.81l0.7,-2.56l4.24,0.09l0.33,1.62l3.37,8.51l-0.53,1.32l-1.14,1.18l-0.15,0.57l0.82,0.14l1.49,-0.76l0.08,0.44l0.41,0.02l6.25,-1.94l2.47,0.12l4.07,1.77l4.85,1.18l3.83,2.51l3.13,3.27l9.15,2.98l2.17,1.67l-0.75,1.54l0.23,0.54l1.78,-1.44l2.7,0.19l3.05,-0.4l3.54,0.71l1.2,-0.11l0.61,0.5l1.37,0.06l0.83,0.51l0.74,1.46l-1.04,4.04l0.98,1.59l0.46,1.45l-0.25,1.45l0.17,2.22l-0.69,1.78l0.29,0.77l3.29,3.54l-0.0,0.28l-1.05,0.64l0.01,0.64l1.82,0.13l2.56,1.59l1.5,1.37l1.01,2.14l-1.96,1.65l-0.07,0.46l0.86,0.1l1.98,-1.26l1.2,0.29l1.23,0.67l2.44,2.71l0.51,0.12l0.19,-0.49l-0.21,-0.57l-1.74,-2.01l0.2,-1.08l0.87,-1.35l0.49,-0.24l1.27,0.9l0.64,1.69l0.44,0.24l1.21,-2.46l-1.2,-1.65l0.61,-1.19l1.76,-1.94l0.1,-0.73l-0.45,-1.48l-0.89,-1.02l0.11,-1.38l-0.9,-1.3l-1.03,-4.24l0.24,-0.73l0.57,-0.34l-0.59,-0.76l0.3,-0.66l-0.8,-0.63l0.03,-0.54l-1.48,-1.22l-1.03,-2.08l6.63,-2.52l2.75,-1.62l2.33,-1.91l3.53,-4.05l0.69,-3.04l-0.23,-5.08l-1.67,-4.35l-1.46,-2.05l-2.07,-1.67l-2.34,-1.18l-2.38,-1.8l0.34,-1.38l3.43,-3.62l-0.34,-0.91l0.52,-0.69l-0.0,-0.5l1.1,0.73l0.62,0.0l0.12,-0.71l-0.48,-0.53l0.73,-0.78l-0.2,-0.92l0.37,-0.63l-0.14,-0.59l-0.79,-0.22l0.09,-0.54l-1.07,-1.89l0.66,-0.61l0.11,-0.65l-1.31,-0.5l0.71,-0.88l0.13,-0.69l-2.51,-0.14l1.87,-2.46l-0.03,-1.74l1.04,-0.86l-0.06,-0.65l-2.44,-2.01l-0.55,-2.03l0.01,-1.22l1.01,-0.91l2.5,-1.09l2.42,0.36l5.34,1.64l0.02,0.98l0.49,0.08l2.07,-0.99l1.55,0.36l1.89,1.12l0.46,-0.02l0.05,-0.79l4.4,-1.95l4.02,2.66l1.01,0.05l-0.03,0.81l-0.51,0.86l0.32,0.6l1.38,-0.62l1.18,0.61l0.73,0.85l-0.72,0.26l0.06,0.82l1.3,-0.12l0.69,-0.56l0.74,0.36l-1.03,1.04l0.6,0.65l0.07,0.56l1.7,1.44l3.75,0.87l2.24,-0.1l0.33,0.16l0.37,1.14l0.86,0.33l1.48,-0.45l0.66,-1.1l0.15,0.15l0.31,0.95l-1.13,1.09l-0.66,1.77l0.06,1.31l0.56,0.95l-0.11,0.65l-1.22,0.34l-3.47,-0.06l-0.39,0.59l0.48,0.52l4.32,0.42l0.64,1.5l-0.57,1.4l0.08,1.31l1.62,0.28l-0.46,0.71l0.13,0.78l-0.48,1.39l-0.17,0.13l-0.55,-0.84l-0.42,-0.04l-0.52,0.8l-1.31,0.42l-0.31,0.44l0.35,0.56l2.09,0.51l2.62,-1.45l2.77,-0.13l1.28,0.95l0.27,1.05l0.46,0.5l-0.39,2.0l-0.65,0.93l-2.88,1.11l-0.2,0.44l0.55,0.43l3.32,-1.18l1.62,-3.09l0.4,0.88l-0.81,1.02l-0.02,0.48l0.74,0.05l1.06,-1.18l0.08,2.11l0.79,0.03l0.47,-1.5l2.7,-1.56l1.58,-0.47l1.75,-2.18l1.1,1.16l0.11,1.17l0.41,0.37l0.42,-0.23l0.44,-1.26l-0.61,-1.55l0.95,-0.31l-0.12,-0.77l2.09,-0.44l0.43,-0.42l-0.22,-0.52l-1.22,-0.49l0.57,-0.79l0.75,-0.19l-0.26,-0.9l1.38,0.68l0.55,-0.04l-0.01,-0.81l-1.73,-0.99l-0.27,-0.46l0.18,-0.84l1.88,0.24l0.04,-0.77l-0.54,-0.57l1.18,-2.54l0.73,-0.46l0.9,0.45l0.21,0.29l-0.36,0.38l-1.22,0.63l0.02,0.67l0.54,0.14l1.95,-0.48l0.33,0.44l-0.04,1.96l0.96,-0.46l1.12,1.85l-0.73,0.43l-0.04,0.78l0.86,0.35l0.36,0.62l0.96,-0.45l0.39,0.65l-0.8,0.51l-1.66,0.19l-0.21,0.63l0.47,0.35l0.75,0.0l2.14,-0.4l0.42,1.6l1.14,-0.04l0.52,0.98l-2.36,1.42l-0.92,1.42l0.7,0.24l1.4,-1.0l0.38,0.4l2.2,-0.61l-0.85,1.46l-2.32,1.41l0.11,0.66l0.57,0.08l1.19,-0.66l2.15,-0.43l1.05,1.35l1.62,0.38l-0.28,0.54l0.17,1.08l-2.74,1.0l0.08,0.46l0.74,0.41l2.29,0.17l-0.36,1.21l0.76,0.45l1.11,0.09l1.27,1.06l-0.18,1.92l-3.04,-0.21l-1.02,-0.32l0.12,-0.37l-0.75,-0.31l-0.88,0.31l-0.07,0.62l0.68,0.62l2.26,1.04l-0.38,0.25l0.01,0.67l1.7,0.46l-0.37,0.79l0.32,0.42l1.53,0.09l0.12,0.57l-0.61,0.46l0.28,0.58l1.31,0.29l0.63,0.66l0.73,-0.04l0.69,-0.53l0.91,1.27l0.7,0.15l0.32,-0.31l-0.12,0.91l0.84,0.96l-0.69,0.62l-1.3,2.52l0.73,0.16l1.8,-1.21l2.09,-0.48l0.33,0.75l0.56,0.16l-1.39,1.57l0.03,0.96l0.49,-0.09l2.8,-2.58l0.86,0.21l1.34,2.32l2.01,0.47l1.95,-0.75l0.26,0.68l0.55,0.41l1.85,0.64l-1.09,0.97l-2.28,0.26l-1.71,1.02l-0.88,1.11l-1.35,0.1l-2.96,1.39l-1.64,0.0l-1.4,0.81l-0.33,0.82l-1.41,-0.26l0.04,0.76l1.13,0.68l-0.73,0.54l-0.18,1.19l0.47,0.2l1.05,-0.34l1.55,-1.32l2.63,-0.99l3.39,-2.32l3.51,-0.77l0.4,-0.32l-0.25,-0.51l2.26,0.29l1.26,2.19l-1.96,1.23l1.01,1.23l0.6,0.16l2.4,-1.83l1.49,-0.17l0.72,0.96l1.2,0.27l0.6,0.66l0.78,1.63l-0.44,1.24l0.27,2.43l-1.96,0.29l-0.47,0.35l0.26,0.65l1.4,0.05l1.33,0.34l-0.97,-0.15l-0.5,0.47l1.71,1.31l-1.59,1.48l-4.84,3.17l-2.37,-0.11l-1.65,0.32l-1.29,0.7l-2.55,0.22l-3.41,3.52l-2.25,1.91l-0.97,0.46l-0.48,0.73l-0.8,0.33l-3.77,0.05l-4.42,0.89l-1.11,-0.81l-4.08,-0.46l-2.14,0.05l-0.64,0.34l-3.0,-0.47l-1.69,0.29l-5.65,-0.32l-2.45,0.39l-0.91,-0.22l-1.05,0.58l-1.88,-0.04l-2.55,1.65l-2.07,4.12l-4.56,0.99l-0.13,0.55l-1.32,0.44l-0.71,0.8l-1.32,0.75l-2.3,2.93l-1.33,1.09l-3.44,-1.1l-3.24,-0.58l-0.45,0.28l0.22,0.48l1.04,0.61l1.7,0.09l3.09,1.13l0.23,0.25l-0.56,1.43l-2.75,2.62l-1.27,1.77l-2.82,2.17l-3.13,0.72l-1.57,0.78l-0.43,0.56l-2.01,1.18l-1.57,0.52l-2.55,2.99l-1.26,0.24l-1.49,1.23l-1.29,-0.17l-0.42,0.25l0.49,0.71l1.03,0.33l-3.3,2.06l-2.49,0.72l-4.4,3.31l-3.91,1.27l-0.96,-0.27l-1.58,0.17l-2.14,1.04l-6.38,0.99l-2.53,1.38l-1.68,2.1l0.01,0.6l0.45,0.44l1.11,0.28l1.08,0.06l0.91,-0.36l0.04,0.88l0.42,0.72l-3.34,0.06l-2.12,0.38l-1.07,0.45l-0.95,0.9l-2.64,-0.5l-1.98,0.21l-1.83,1.2l-0.6,0.82l-2.32,0.91l-1.0,0.92l-0.54,-0.22l-1.37,0.2l-0.61,-0.26l0.18,-0.8l2.53,-0.09l0.68,-0.39l0.13,-1.1l-0.79,-0.44l0.78,-2.45l1.55,-0.69l1.92,-1.75l0.1,-4.34l0.78,-1.67l1.41,-1.59l0.12,-1.23l0.36,0.43l0.8,-0.25l0.02,1.05l0.6,0.02l0.81,-0.51l1.0,0.84l2.05,0.6l0.55,-0.25l0.31,-0.62l0.03,-0.68l-0.45,-0.69l0.92,0.49l0.89,-0.02l0.21,-1.13l-1.71,-1.38l-0.3,-2.04l-1.42,-0.13l-0.26,-1.25l-0.29,-0.24l-0.28,0.2l-1.61,-2.21l-1.6,-0.04l-0.32,-0.43l-1.74,0.11l-0.13,-0.57l-0.61,-0.22l-0.47,0.28l-3.25,-0.75l-3.4,0.07l-2.15,-0.35l-3.0,-0.71l0.1,-0.66l-0.59,-0.67l-1.78,0.27l0.89,-2.17l-0.58,-0.52l-1.42,-0.24l0.86,-1.76l-0.23,-0.63l-1.85,-1.48l0.76,-2.22l-0.95,-0.36l-3.27,0.13l-1.34,-0.5l-0.87,-1.06l-0.89,-2.49l-0.68,-1.02l-1.66,-0.59l-2.78,0.19l-4.12,-1.47l-1.46,0.2l-0.04,1.04l-1.15,-0.12l-0.86,1.84l-0.5,-0.21l-2.39,1.05l-0.65,2.02l-1.0,0.71l-1.56,0.04l-1.03,-0.79l-3.19,0.08l-0.92,-0.67l-3.05,0.98l-2.47,-1.58l-1.0,-0.25l-0.98,0.29l-0.49,-0.89l-2.57,-1.17l-2.14,-0.05l-1.59,0.59l-1.69,-0.85l-2.84,-0.54l-0.73,-1.49l-0.37,-2.15l-1.76,-0.53l-0.45,0.39l-0.03,2.1l-140.63,-0.01l-0.67,-0.48l-0.6,-0.01l-0.59,-0.64l1.16,-0.19l0.43,-0.84l-0.17,-0.47l-0.9,0.44l-0.84,-0.16l0.25,-2.07l-0.58,-0.02l-0.81,0.86l-0.02,0.58l-0.68,0.29l-1.29,-0.43l1.19,-0.58l0.22,-0.64l-1.15,-0.05l-0.34,-0.33l-0.1,-1.34l0.61,-0.84l-0.65,-0.85l-0.73,-0.1l-0.15,0.61l0.3,0.38l-0.51,1.13l-0.66,0.48l-1.08,0.07l-1.61,-1.39l-1.33,-2.45l0.92,-1.44l-0.19,-2.02l-0.86,0.5l-0.14,1.13l-0.46,0.8l-1.75,0.06l-0.06,-0.67l-0.7,-0.23l-0.41,1.1l-0.46,-0.29l-1.61,0.07l-0.5,-0.12l1.52,-0.34l0.29,-0.63l-0.74,-0.35l-2.24,0.29l0.53,-0.54l-0.2,-0.57l-0.39,-0.11l-0.09,-1.1l-0.37,-0.3l-0.78,0.97l-1.94,0.31l-1.4,-0.48l-1.6,-1.25l0.33,-1.43l1.02,-1.15l3.36,-0.5l0.5,-0.51l-0.38,-0.35l-3.35,-0.03l-0.82,0.33l-0.86,1.11l-0.53,-0.9l-0.06,-0.81l0.63,-1.05l-0.55,-0.62l0.21,-0.7l1.66,-1.02l0.64,-0.17l0.45,0.48l0.74,0.14l1.48,1.57l0.56,-0.56l-1.16,-1.72l-1.26,-0.93l1.22,-1.51l-0.29,-1.21l-0.41,-0.21l-0.39,0.44l-0.11,0.97l-2.27,1.99l-1.47,0.56l-1.2,2.62l-0.8,-1.38l1.28,-0.86l0.08,-1.11l0.46,-0.49l0.08,-0.49l-0.48,-0.23l-1.0,0.62l0.86,-2.47l-0.35,-0.64l-1.64,0.41l-0.44,-1.87l-0.76,-0.8l-2.1,-0.85l-0.32,-0.81l0.75,-0.84l-0.19,0.51l0.3,0.54l1.84,0.96l1.12,-0.26l0.82,0.23l1.03,0.96l0.48,0.03l0.05,-0.83l-1.03,-1.04l-0.64,-0.31l-1.46,0.06l-0.64,-0.41l-0.38,-1.0l1.0,-0.53l0.02,-0.67l-1.11,-0.5l-1.6,0.67l-1.29,1.41l-0.32,1.64l-1.24,0.75l-1.65,-1.89l-1.61,-0.63l-0.17,-0.22l1.09,-1.44l0.21,-1.03l1.2,-0.23l0.84,-0.45l0.2,-0.44l-1.23,-0.35l-1.45,0.35l-1.39,-1.23l0.33,-1.48l0.66,-0.51l1.68,-3.09l1.64,-2.07l0.04,-0.46l-0.93,-0.05l-0.59,-0.84l-0.47,0.43l-0.13,1.4l-0.55,-1.98l0.36,-2.76l-0.45,-0.87l-1.65,-0.2l-0.52,-0.83l-0.76,-0.21l-0.59,-0.59l-1.71,-0.46l-2.46,-1.38l-1.1,-0.01l-0.44,-1.43l-0.87,-0.33l0.27,-0.88l-0.29,-0.5l-1.03,-0.25l0.25,-0.83l-5.99,-8.32l-0.05,-0.73l-2.12,-2.18l-2.41,-1.43l-0.86,-1.5l-2.47,-1.46l-0.53,-0.94l-0.07,-1.29l-2.58,-1.69l-2.31,0.98l-1.94,0.43l-0.24,0.62l0.24,0.43l-0.63,0.05l-0.42,0.4l-0.0,1.25l-0.4,0.68l-1.15,0.06l-2.87,1.59ZM487.59,210.08l0.47,0.08l0.0,0.0l-0.21,0.06l-0.27,-0.14ZM564.27,340.47l-1.87,-0.22l-0.02,-0.17l0.48,-0.17l0.59,0.26l0.41,-0.33l0.41,0.64ZM507.25,309.52l0.4,0.45l-0.55,0.63l0.24,-0.47l-0.09,-0.61ZM325.09,304.42l-0.29,-0.32l-0.04,-0.19l0.27,0.37l0.06,0.14ZM543.35,335.39l-0.36,-0.67l-0.03,-0.4l0.7,0.69l-0.31,0.37ZM542.65,333.85l-0.26,-0.09l-0.68,-0.9l0.67,0.03l0.27,0.96ZM645.85,327.78l0.37,0.89l-0.43,0.9l0.52,0.4l-1.01,0.11l-0.61,-0.67l-0.15,-1.92l3.02,-4.56l1.57,-1.23l0.49,1.27l-0.86,3.02l-2.9,1.79ZM646.83,329.86l1.35,-0.19l1.4,-1.28l0.15,-0.27l-0.66,-0.51l0.08,-0.49l0.84,-0.82l0.61,0.61l1.45,0.12l-0.28,0.33l0.09,0.64l-2.28,1.6l-1.36,0.38l-1.4,-0.1ZM578.3,333.68l3.21,-1.7l1.2,-0.29l0.55,-1.42l1.51,-2.31l2.14,-1.07l3.12,-2.31l4.24,-1.28l3.95,-1.86l2.29,-2.22l3.11,-3.86l3.21,-2.52l2.97,-1.72l8.34,-3.28l2.08,-0.56l3.3,-0.35l3.38,0.48l2.6,1.56l-0.83,-0.03l-0.4,0.31l1.35,1.26l-0.38,1.24l-1.45,0.45l-0.88,1.01l-2.17,1.12l-3.51,-1.04l-0.71,0.49l-1.93,-0.05l-1.31,0.63l-0.22,0.41l0.69,0.42l1.33,-0.33l2.57,0.96l1.21,1.55l0.9,-0.07l2.03,-0.95l0.15,0.27l1.09,0.15l-0.78,2.0l-1.95,1.61l0.01,0.65l0.74,0.38l1.49,-0.17l-0.14,1.41l0.34,0.8l0.48,0.31l0.54,2.07l0.72,0.8l2.8,0.42l-0.46,0.22l0.02,0.73l1.73,1.0l1.12,-0.04l1.26,0.79l2.45,-0.03l0.32,0.69l1.55,0.11l2.33,-1.33l0.83,1.1l1.74,0.01l0.56,0.78l-0.84,0.82l1.18,0.35l-10.3,3.71l-1.72,-0.13l0.09,1.16l-0.72,-0.13l-0.89,-0.83l-0.79,0.48l-1.03,0.07l-0.5,0.89l0.21,0.69l-2.83,2.82l-0.95,0.73l-0.87,0.09l-1.07,1.15l-0.84,-0.05l-0.86,-1.44l-0.69,-0.28l-0.49,0.19l-0.31,-1.51l0.43,-1.55l1.12,-1.2l-0.1,-0.27l1.32,-0.37l0.62,-0.48l0.04,-0.54l3.68,-2.1l1.43,-0.44l0.36,0.72l1.41,0.69l0.23,-1.23l1.62,-0.55l1.6,-0.12l0.66,-0.7l-0.33,-0.32l-3.78,-0.29l-2.54,0.0l-1.02,0.43l2.79,-2.54l-0.4,-0.59l-0.65,0.11l-0.63,-0.7l-0.68,0.19l0.13,0.86l-0.69,0.82l-5.53,2.61l-0.5,-0.27l0.14,-0.85l-0.48,-0.07l-0.8,0.52l0.01,0.77l-1.08,0.62l-0.55,-0.2l-1.52,0.43l-0.32,-0.46l-1.68,-0.35l-0.49,0.18l-0.33,-0.33l0.18,-0.5l-0.25,-0.66l0.32,-0.53l-0.35,-0.98l-0.89,0.02l-0.65,-0.52l-0.24,-8.63l-2.39,-1.79l-3.51,0.89l-0.33,-0.21l-0.29,-1.19l-0.99,-0.24l-0.41,0.15l-3.9,4.86l-0.37,1.79l-0.94,1.31l-0.23,2.12l-0.64,1.04l-1.36,1.13l-0.1,0.78l-0.68,0.6l-2.43,0.29l-0.93,1.64l-14.28,0.02ZM496.0,27.1l3.35,-1.66l0.31,-0.49l-0.37,-0.56l-4.18,-0.25l-3.36,1.02l-1.46,-0.71l3.39,-1.64l2.27,-0.6l5.68,-0.49l4.18,-1.79l2.5,-0.43l3.17,0.48l1.97,1.18l1.27,-0.9l0.94,-0.19l2.24,0.3l2.65,0.9l3.16,-0.35l0.35,-0.65l-0.85,-0.63l-6.44,-1.82l3.18,-0.74l2.72,-1.44l1.82,-0.52l2.56,0.92l3.91,0.58l2.93,2.27l2.03,0.85l1.5,0.16l0.55,-0.56l-0.19,-0.52l-1.84,-1.01l0.55,-0.15l4.81,1.56l7.31,1.77l3.91,1.53l0.19,-0.69l-1.15,-1.03l-2.61,-1.21l-6.82,-2.03l-2.67,-1.05l-2.04,-1.28l3.74,-1.06l-0.11,-0.68l-1.68,-0.72l1.97,-0.08l3.97,0.83l0.32,-0.81l-1.67,-1.59l0.42,-0.15l1.68,0.12l3.01,0.8l5.37,0.4l1.46,-0.06l0.36,-0.27l-0.51,-0.7l-4.3,-1.14l-1.87,-1.04l0.54,-0.14l3.53,0.07l3.32,0.53l2.91,-0.19l2.37,0.28l5.32,2.65l1.29,1.42l1.15,0.33l2.32,-0.94l0.12,-0.62l-7.44,-4.47l6.23,-0.44l6.73,0.43l1.02,0.28l2.48,1.72l2.24,1.04l3.22,0.66l0.45,-0.23l-0.13,-0.48l-2.97,-1.57l-0.86,-0.63l0.11,-0.46l2.8,-1.2l3.69,-0.31l5.68,2.59l0.48,-0.26l-0.15,-0.59l-1.92,-0.97l2.09,-0.67l4.54,-0.23l2.46,1.27l5.48,0.15l2.51,0.62l7.0,0.21l-1.54,0.77l-7.83,1.81l-0.78,0.73l0.37,0.32l5.55,-0.19l8.49,-2.2l2.16,0.53l1.18,-1.17l0.77,-0.12l2.14,1.56l2.67,-0.64l1.92,0.29l-0.53,0.59l0.08,0.48l2.72,1.77l-0.84,1.08l0.51,0.56l3.88,-0.86l3.89,0.38l1.02,0.24l1.1,1.25l-0.2,0.46l-4.48,2.84l-7.16,2.42l-4.93,1.36l-3.46,-0.09l-2.36,1.18l-4.67,0.35l-1.61,1.63l-9.01,2.31l-0.43,0.62l0.3,0.55l1.04,0.16l14.35,-2.99l4.25,-0.03l-3.19,1.81l-4.21,1.66l-2.15,1.28l-9.73,4.33l-4.68,3.48l-0.81,0.17l-1.92,-0.33l-2.54,-1.54l-0.82,-0.03l0.18,0.86l2.15,2.64l-5.97,1.0l-2.29,0.07l-1.02,0.52l0.21,0.65l2.39,0.43l3.84,-0.6l1.0,0.18l-0.61,0.51l-2.99,0.99l-0.27,0.42l1.14,0.6l-1.05,0.73l-2.88,0.69l-2.27,0.08l-5.2,-1.54l-3.52,-0.6l-1.39,0.06l-1.46,0.47l-0.27,0.37l0.94,0.63l5.35,0.66l1.06,1.12l-0.04,0.66l-0.83,0.46l-2.08,-0.07l-1.67,0.42l-6.62,0.57l-2.83,-0.67l-4.28,-0.45l-0.34,0.65l0.49,0.42l2.68,0.8l1.07,1.06l2.53,0.96l2.69,0.44l2.76,-0.31l-0.17,1.34l-3.18,0.09l-3.57,-0.93l-7.56,0.68l-6.05,-0.2l-0.34,0.58l0.43,0.45l3.38,1.26l7.04,-0.91l2.17,0.42l1.56,1.1l3.46,0.34l2.97,1.2l-0.4,0.83l-1.44,0.72l-7.92,0.41l-0.22,0.42l0.33,0.33l5.66,1.6l-1.51,1.01l-1.54,2.23l-0.36,0.13l-1.87,0.02l-3.17,0.7l-2.47,-0.22l-3.19,0.21l-0.42,1.31l0.06,3.42l-0.89,0.96l-0.99,0.44l-7.1,0.73l-3.31,-0.16l-5.54,-2.28l-0.47,0.72l1.48,1.45l-3.14,0.31l-0.43,0.41l0.13,0.44l1.2,0.78l1.8,0.05l2.11,-0.59l2.11,0.25l2.39,1.07l1.64,-0.5l2.02,-0.02l0.58,0.29l0.15,1.92l0.64,0.56l2.29,0.59l2.47,-1.02l1.24,1.14l0.06,0.77l-1.34,1.71l-6.19,2.73l-5.96,1.39l-1.06,-0.05l0.8,-1.99l-0.92,-1.01l-1.24,-0.51l-2.63,0.2l-1.61,-1.42l-1.35,-0.25l-1.14,-0.73l-0.48,0.09l-0.03,0.49l1.53,2.13l-7.97,0.13l-1.55,-2.18l-0.43,-0.17l-0.3,0.36l-0.24,3.06l-4.06,0.5l-2.63,-0.45l-2.16,-0.88l-1.79,-1.62l-0.99,0.87l-0.53,1.25l-2.93,-0.64l-0.61,-1.28l-0.45,-0.22l-0.32,0.38l-0.03,1.69l-3.89,-0.18l-0.42,-3.51l-0.32,-0.38l-0.44,0.22l-0.6,1.3l0.28,2.07l-4.37,-0.54l0.1,-1.41l0.2,-1.56l5.37,-2.86l5.22,-0.34l2.97,-0.57l-0.01,-0.7l-1.38,-1.26l-1.84,-0.54l-1.6,-1.42l-1.46,-2.24l0.22,-0.39l1.18,-0.5l3.6,-0.59l3.11,0.88l1.0,0.63l3.01,3.13l4.6,1.16l3.97,-0.33l1.98,-0.6l3.69,-3.23l1.32,-1.87l0.37,-1.18l-0.15,-0.42l-0.44,-0.02l-4.29,4.09l-1.7,0.92l-1.79,0.09l-1.82,-0.41l-1.82,0.65l-1.75,-0.49l-0.01,-1.99l-1.13,-1.69l4.32,-2.68l1.82,0.22l0.45,-0.29l-0.24,-0.48l-1.61,-0.81l-1.55,0.04l0.55,-2.69l-0.26,-0.46l-0.49,0.19l-1.2,2.35l-1.9,1.78l-0.74,0.32l-2.32,0.23l1.08,-2.27l-0.13,-0.48l-4.31,2.07l-3.09,0.19l-0.7,-0.32l0.24,-2.29l2.65,-2.66l0.7,-1.15l8.93,-1.51l8.82,1.59l1.6,-0.83l4.3,-0.24l1.99,-1.01l0.31,-0.44l-0.36,-0.59l-3.55,0.81l-8.63,-0.63l-1.2,-0.36l-0.52,-0.52l1.06,-0.17l2.23,0.72l1.66,-0.19l-0.53,-0.86l-2.77,-1.56l-5.5,-5.05l-4.02,-0.72l-1.73,-1.25l-0.35,-1.87l-0.57,-1.18l0.49,-1.3l0.76,-0.56l5.71,0.54l5.62,0.11l1.62,0.37l5.29,2.74l5.07,3.57l3.47,0.87l3.03,0.07l1.86,-0.76l0.21,-0.42l-1.17,-0.44l-3.62,-0.15l-4.24,-3.0l-2.43,-1.29l-3.08,-2.41l1.89,-0.48l7.98,-0.83l4.75,-0.99l2.3,-1.45l6.21,-1.59l7.78,-0.96l0.37,-0.4l-0.31,-0.54l-9.12,-0.71l0.29,-0.64l1.63,-1.39l3.78,-1.83l2.67,-0.83l0.74,-0.54l0.13,-0.49l-0.45,-0.23l-5.56,1.21l-3.99,2.21l-2.4,0.42l-1.15,1.07l-0.74,1.53l-0.97,0.69l-1.86,0.91l-4.42,1.28l-6.9,1.1l-1.79,-0.07l2.84,-1.74l0.1,-0.46l-0.4,-0.24l-6.14,0.72l-4.12,2.07l-4.64,0.19l-2.86,-0.69l-2.72,0.17l-1.51,-0.55l1.64,-1.37l5.04,-2.33l2.85,-0.64l6.78,-0.73l0.61,-0.74l-0.38,-0.6l-12.82,1.37l-2.39,1.05l-5.53,3.31l-1.82,0.15l-6.07,-1.76l-1.32,-0.81l3.82,-0.73l5.23,0.13l4.71,-0.57l7.2,-2.57l0.96,-0.95l-0.36,-0.3l-2.47,0.02l-2.47,0.55l-3.78,1.42l-3.27,0.49l-8.21,0.27l-2.62,0.4l-1.03,-0.08l-1.47,-0.87l1.76,-0.68l1.63,-0.19l0.5,-0.53l-0.29,-0.35l-1.77,-0.51l4.73,-1.76l5.06,-0.09l0.48,-0.42l-0.3,-0.57l-4.61,-0.48l-2.61,0.29l-6.71,1.69l-0.8,-0.14ZM501.93,137.7l3.09,0.16l4.35,0.94l3.48,-0.41l0.44,-0.35l-0.17,-0.65l-3.69,-1.82l-6.24,-0.77l-3.05,-1.24l-0.6,-0.47l-0.86,-3.8l0.37,-1.05l1.44,-1.22l-0.29,-0.64l-0.71,-0.42l-0.02,-1.35l2.55,-3.74l0.65,-2.9l1.17,-1.3l1.05,-0.56l0.38,-0.95l2.67,-1.85l2.22,-1.22l4.78,-1.08l4.09,-0.16l4.19,0.41l0.43,0.27l0.07,0.2l-3.53,2.24l-1.71,1.54l-3.23,4.34l-0.27,1.35l0.41,1.1l1.34,1.84l-0.09,3.18l0.71,2.35l2.45,2.51l3.44,2.33l-1.55,0.89l-2.75,0.6l-2.76,1.15l-0.59,0.3l-0.11,0.64l0.58,0.31l1.17,-0.26l3.43,-1.26l2.62,0.0l0.12,0.78l0.99,0.59l0.7,-0.34l0.27,-0.77l0.64,-4.92l-0.43,-0.63l-0.72,-0.26l-2.46,-0.32l-1.25,-1.54l-1.23,-0.95l1.4,-0.68l1.0,-1.19l1.39,0.13l3.42,1.58l0.35,0.08l0.49,-0.5l-0.44,-0.64l-2.25,-1.66l0.81,-0.36l-0.16,-0.8l-1.26,-0.3l-1.49,0.22l-0.99,-0.47l-1.09,-1.48l-0.09,-1.36l0.82,-1.22l0.71,-0.19l5.04,1.5l0.51,-0.47l-0.34,-0.67l-5.67,-2.19l1.93,-1.95l1.95,-0.5l1.04,-0.65l1.5,-0.03l1.52,0.4l0.52,-0.41l-0.56,-0.88l2.15,-0.83l3.77,-0.96l3.56,-0.0l1.65,0.32l1.14,0.81l1.03,2.85l0.65,0.68l2.07,1.12l0.1,1.93l1.46,1.5l-4.78,4.17l0.12,0.73l0.44,-0.01l2.48,-1.63l-1.43,1.64l-0.09,0.52l0.57,0.55l-0.63,0.78l0.25,1.67l1.07,-0.18l2.16,-2.12l0.94,-0.52l1.43,0.32l0.26,-0.66l-1.02,-1.19l1.01,-0.71l1.08,1.21l1.07,-0.19l0.5,-0.41l1.16,0.83l0.11,2.32l1.26,1.12l1.16,0.53l0.35,-0.73l-1.35,-1.84l0.19,-1.34l0.38,-0.51l1.21,0.61l1.54,0.0l2.07,0.96l1.07,0.02l0.4,-0.5l-0.4,-0.68l-3.73,-1.32l-0.8,-0.79l0.49,-0.83l2.92,-1.16l4.25,0.04l3.59,1.43l2.46,0.01l1.98,0.83l0.75,0.84l0.32,1.07l-1.6,1.63l-0.85,0.41l-1.93,2.71l0.21,0.68l0.86,-0.35l1.18,-1.67l2.16,-1.28l1.15,-0.33l1.84,0.13l1.02,0.29l0.23,0.42l-0.39,0.87l-2.78,1.05l-1.56,0.15l-0.33,0.55l0.36,0.4l1.87,0.2l-0.53,1.05l0.13,0.93l-0.93,1.54l0.33,0.69l0.47,-0.05l1.21,-1.13l0.88,-2.39l0.48,-0.5l1.57,-0.24l1.43,-0.84l0.25,0.05l-2.3,2.75l-0.04,0.48l1.14,-0.04l1.63,-1.32l0.91,0.71l0.52,1.05l1.52,0.88l0.16,-1.02l-0.51,-1.46l1.66,-1.15l1.4,0.58l3.67,0.46l2.01,0.87l0.96,0.88l0.17,0.67l-1.27,1.13l-2.28,0.12l-3.44,2.34l-0.27,0.61l0.37,0.25l1.88,-0.1l1.5,-1.64l1.14,-0.26l1.79,0.63l1.09,-0.0l1.67,-1.16l0.62,0.32l0.1,1.09l-0.52,0.81l-1.25,1.03l-2.92,1.03l-1.49,1.2l-0.02,0.7l1.05,0.39l1.45,-1.41l0.44,0.19l-0.77,3.17l0.41,0.51l0.44,-0.19l2.15,-4.12l0.58,-0.51l1.42,-0.84l2.96,-0.95l1.24,0.54l2.57,0.17l3.44,1.42l0.46,0.69l-1.99,1.23l-2.51,0.41l-2.13,0.84l-1.85,1.09l-0.18,0.63l0.33,0.37l1.51,-0.05l1.6,-1.04l3.34,-0.39l-1.32,1.39l0.14,0.64l1.7,0.32l1.26,-1.09l1.5,-0.59l-0.04,-0.73l-0.31,-0.17l0.85,-0.81l0.9,0.28l2.4,2.17l0.78,1.46l-0.03,0.73l-2.63,-0.5l-1.29,0.07l-1.77,1.13l-1.52,0.02l-2.41,0.66l-0.85,0.79l0.4,0.54l3.69,-0.58l3.08,1.05l3.4,-0.01l2.27,1.06l0.29,0.84l-4.27,-0.1l-1.89,-0.66l-1.22,0.38l-1.14,-0.24l-1.09,0.24l-2.23,1.0l-0.06,0.69l0.58,0.22l2.88,-0.81l1.33,0.33l1.63,0.7l-0.47,1.62l-2.02,-0.5l-2.05,0.3l-3.11,-0.58l-0.35,0.15l0.11,0.71l2.42,0.95l3.33,0.49l0.22,0.7l1.19,0.9l1.56,-0.19l1.03,0.46l2.34,0.29l-0.5,0.68l0.99,1.27l-0.44,1.06l0.3,0.51l0.86,-0.33l0.03,0.31l0.66,0.28l0.51,-0.87l-0.06,-0.86l1.2,-0.32l-0.21,1.5l-1.3,1.79l0.69,0.52l0.89,-0.22l1.29,-1.46l0.17,0.58l0.57,0.3l1.61,-0.48l-0.16,1.58l0.81,0.98l0.52,0.07l0.23,-0.52l-0.18,-1.38l1.97,-1.21l-0.93,1.33l0.32,0.71l1.28,0.18l1.01,-0.45l2.19,1.76l0.87,-0.12l0.25,0.23l-0.85,0.8l0.21,0.76l-3.03,-0.01l-0.36,0.31l0.2,0.44l1.53,0.44l0.42,0.42l2.65,-0.07l1.29,-0.93l2.11,0.83l-0.79,1.56l-2.15,1.63l-0.15,0.44l0.37,0.28l3.8,-1.08l2.91,0.36l1.48,-1.16l3.67,3.06l-0.64,0.26l-2.04,-1.0l-1.26,0.34l-0.09,0.67l2.37,1.19l0.27,0.54l-1.13,0.39l-1.26,-0.19l-1.15,-0.63l-1.19,0.04l-0.14,0.65l0.48,0.49l-0.44,0.58l0.19,0.55l2.13,1.06l-2.16,-0.19l-0.53,0.24l0.07,0.65l0.99,0.95l-1.02,0.89l-0.25,0.61l-2.12,-0.14l-1.37,-1.54l-0.7,0.18l0.23,0.97l-0.92,0.22l-0.3,0.4l0.29,0.48l1.23,0.31l-0.05,2.88l-0.91,2.0l-1.18,-1.28l-1.07,-0.17l-0.5,0.33l-0.54,-0.49l0.34,-1.64l-0.4,-0.52l-0.66,0.47l-0.95,1.65l-2.3,-2.46l-1.41,-2.39l0.9,-1.07l1.78,-0.73l0.94,-1.52l1.04,-0.94l-0.12,-0.73l-1.43,0.35l-1.73,1.73l-1.96,0.66l-1.89,-0.02l1.0,-1.08l-0.12,-0.65l-2.08,0.59l-1.99,-1.15l-1.6,-2.36l-1.4,-0.7l-0.26,0.8l-1.08,-0.28l-0.58,0.3l0.59,1.89l-2.91,-1.53l-0.6,0.42l1.03,2.14l2.39,1.76l-0.47,0.43l-2.13,-0.3l-3.17,-2.37l-1.83,0.38l-0.26,0.37l0.26,0.38l1.42,0.23l1.08,0.68l-0.25,0.95l0.42,0.77l1.48,0.81l-0.39,1.36l0.23,0.45l0.64,0.1l1.48,-0.62l0.65,0.36l0.88,1.06l-0.63,0.45l0.26,0.61l1.15,0.72l0.44,1.24l0.76,0.22l0.64,2.03l0.42,0.23l0.45,-0.38l0.04,-1.04l1.41,0.85l-0.29,0.67l0.55,0.58l0.69,-0.04l1.04,-1.19l0.6,0.18l1.3,1.2l0.53,-0.04l0.32,0.31l-1.08,0.88l0.44,0.57l1.82,0.1l-0.47,0.73l-1.8,-0.03l-0.24,0.71l1.3,0.66l0.83,0.92l0.06,0.72l1.01,0.25l1.27,-0.18l-0.33,0.21l0.02,0.69l1.02,0.09l0.54,1.06l-0.55,0.45l0.32,1.79l-0.13,1.31l-1.67,-3.08l-1.07,-1.02l-0.48,-0.05l-0.18,0.44l0.81,2.6l0.12,0.78l-0.29,0.73l1.74,2.49l-1.53,-0.51l-0.61,0.24l0.48,2.23l-2.05,-1.77l-0.89,-0.52l-0.62,0.05l-1.83,-1.44l-0.33,-0.08l-0.27,0.86l-0.35,-0.14l-1.16,-1.82l-0.43,-0.14l-0.29,0.85l-1.18,-1.16l-1.01,-0.04l-3.54,-3.39l-0.48,0.04l-0.1,0.47l0.65,1.65l-3.16,-2.1l-2.39,-0.09l-0.26,0.85l0.62,0.88l3.36,3.46l2.03,0.71l0.18,0.69l1.8,0.72l2.0,1.72l1.65,0.74l1.85,2.36l1.35,0.62l-0.7,0.77l0.38,1.15l-0.89,0.2l-5.64,-2.19l-5.62,-0.84l-2.88,-1.26l-2.49,-2.77l-1.26,-0.24l-2.09,0.22l-3.89,-1.71l0.53,-0.93l-0.38,-0.23l-1.57,0.59l-1.02,-0.56l-1.72,-1.75l1.13,-0.15l1.36,-1.37l-2.05,-1.47l-2.51,-0.05l0.55,-0.9l-0.22,-0.54l-1.66,0.53l-0.82,-1.46l-3.72,-3.06l0.74,-1.05l-0.4,-0.66l-3.33,0.05l-0.47,1.13l-0.39,-1.36l-1.65,-0.29l-0.76,-1.36l-0.66,-0.22l-1.51,0.68l1.27,2.12l-1.63,0.27l-2.21,-0.69l-1.16,0.14l-0.55,1.14l-1.55,0.08l-3.64,1.12l-4.63,-1.01l-1.79,-1.88l-0.06,-0.8l0.63,-1.8l0.77,-0.63l2.67,-1.06l0.16,-0.56l-0.47,-0.93l0.45,-0.62l4.02,0.71l3.25,1.16l1.42,1.27l-0.39,1.07l0.9,0.85l0.6,-0.17l0.44,-1.74l-0.53,-0.86l-1.32,-1.06l2.51,0.21l1.0,-0.82l2.45,0.08l1.46,-0.98l1.09,-0.23l2.21,0.27l0.39,-0.44l-0.05,-0.48l-0.99,-2.03l-1.58,-1.06l-1.84,-1.95l4.12,-2.74l1.54,-1.43l1.36,-0.55l1.21,-2.54l2.06,-0.83l0.89,-1.17l-0.01,-0.6l-0.65,-0.61l-1.9,-4.07l-1.79,-2.67l-1.25,-1.3l0.09,-0.94l-0.53,-0.15l-1.49,0.61l-0.65,-0.44l-0.21,-0.51l0.47,-1.62l-0.67,-1.02l-1.63,0.04l-0.13,0.58l0.55,0.77l-1.54,-0.25l-1.08,-1.06l-0.25,-0.86l-0.46,-0.14l0.29,-0.49l-0.51,-0.62l0.52,-0.35l-0.12,-0.68l-1.08,-0.13l-1.61,1.28l-1.66,-0.33l-0.66,0.63l-3.05,1.4l-1.4,0.24l0.21,-2.1l0.63,-0.26l2.34,0.13l1.56,-1.22l0.21,-0.68l-0.94,-1.4l-3.33,-1.26l-0.18,-0.65l1.18,-0.37l0.29,-0.46l-0.32,-0.39l-1.54,-0.21l-1.18,0.96l-1.08,-0.33l0.86,-0.72l-0.08,-0.65l-1.0,-0.64l-2.72,-0.05l-0.84,-3.39l-0.63,-0.31l-2.15,0.2l-1.7,-1.14l-2.32,-2.32l-1.41,0.72l-0.89,1.47l0.59,0.7l1.94,0.63l0.53,0.9l0.03,1.14l-1.23,0.66l-2.01,0.32l-5.81,-1.49l-4.62,-0.55l-0.63,0.17l-0.1,0.71l2.32,1.02l1.57,1.46l-3.02,-1.77l-3.89,0.91l-4.36,-1.56l-3.67,0.42l-8.0,-1.35l-1.86,0.66l-2.49,-0.88l-0.77,-1.54l0.43,-1.34l-0.5,-0.11l-1.44,0.65l-2.24,-0.16l-0.46,0.63l0.13,0.26l-2.08,-0.06l-1.24,0.63l-2.52,-1.72l-2.21,-0.69l-1.79,-2.13l-0.83,-2.2ZM642.14,249.05l0.51,0.1l0.23,0.22l-0.22,-0.01l-0.52,-0.3ZM629.46,302.55l1.09,-0.1l5.26,1.11l5.31,2.54l1.43,1.16l-2.13,0.12l-4.1,-0.94l-2.56,-1.1l-0.55,-0.87l-1.11,-0.85l-2.62,-1.06ZM629.68,323.28l1.26,-1.52l-0.45,0.81l0.07,0.5l0.91,0.84l0.15,0.83l-0.5,-0.02l-0.05,-0.79l-0.34,-0.4l-1.05,-0.26ZM632.84,325.02l0.28,-0.41l3.0,0.84l-1.39,0.87l-1.41,-0.37l-0.44,-0.4l-0.03,-0.52ZM636.6,325.42l1.51,-0.21l2.49,-0.17l-2.13,1.22l-0.14,1.26l-0.98,-0.07l-0.74,-2.04ZM627.42,226.93l0.4,-0.02l0.8,0.7l-0.91,-0.39l-0.29,-0.29ZM627.36,210.92l1.2,0.03l0.12,0.12l-0.74,0.41l-0.77,-0.15l0.2,-0.41ZM624.41,217.96l2.61,-0.02l0.37,0.33l-0.08,0.66l-0.49,0.5l-2.42,-1.47ZM625.39,215.77l0.41,0.44l0.34,0.21l-0.55,-0.23l-0.2,-0.42ZM610.36,150.7l0.61,-0.25l0.5,0.01l-0.41,0.46l-0.69,-0.21ZM609.36,228.23l1.11,-1.87l0.81,0.55l-0.29,0.6l-1.62,0.71ZM596.07,208.6l2.01,0.81l0.63,0.78l-1.77,-0.33l-0.86,-1.26ZM582.09,330.79l-0.0,0.03l-0.03,0.01l0.03,-0.03ZM576.77,164.83l1.43,-0.2l4.02,0.68l0.45,0.16l0.16,1.01l-5.0,-0.11l-0.8,-0.72l-0.26,-0.83ZM575.49,161.59l-2.1,-1.37l0.39,-0.89l1.05,0.26l0.79,1.27l-0.13,0.72ZM571.51,162.6l2.53,0.74l0.23,0.33l-0.27,1.64l0.19,2.88l-0.49,1.32l-0.88,0.7l-1.86,0.69l-4.58,0.4l-1.32,-0.19l-0.67,-1.07l-0.72,-2.37l0.36,-1.14l1.4,-2.03l1.61,-1.53l1.08,-0.32l3.4,-0.05ZM545.75,114.47l0.28,-0.67l-0.52,-0.86l0.04,-1.09l0.8,-0.19l6.33,1.24l6.63,-0.07l4.23,1.41l0.99,1.37l1.3,0.5l0.97,1.47l1.23,0.59l-0.0,0.89l0.87,0.84l-1.04,0.25l-7.34,-0.74l-2.5,0.15l-4.2,1.07l-1.71,0.14l-2.03,-0.94l-1.4,-3.6l-2.22,-0.46l-0.62,-0.47l-0.11,-0.84ZM566.12,203.45l-0.75,-0.12l-1.69,-1.08l0.5,-0.32l1.63,0.76l0.38,0.37l-0.06,0.39ZM563.44,152.77l0.74,-0.14l1.9,0.36l-1.12,1.34l-0.77,0.25l-0.67,-0.36l-0.09,-1.46ZM557.5,203.63l2.67,-0.08l0.89,0.36l0.66,1.02l-1.65,0.71l-2.57,-2.0ZM556.46,151.27l0.48,-0.47l1.58,-0.39l0.29,-0.5l0.61,0.36l-2.24,1.01l-0.71,-0.01ZM552.97,156.94l0.69,-0.92l1.53,-0.62l0.73,-1.08l0.76,-0.31l-0.03,-0.68l1.33,-0.17l-0.02,0.37l-1.26,1.06l-1.54,1.99l-1.95,0.64l-0.25,-0.26ZM555.85,258.16l0.06,-0.43l0.03,-0.1l0.01,0.14l-0.1,0.38ZM550.22,260.33l0.64,-0.78l0.31,-0.3l-0.84,0.99l-0.11,0.09ZM552.29,259.02l0.63,-0.68l0.7,-1.76l0.83,0.74l0.12,0.7l-0.35,0.61l-0.25,-0.31l-0.61,0.02l-1.6,2.29l0.71,-1.15l-0.17,-0.45ZM554.51,162.98l-0.4,-0.19l0.05,-0.34l0.56,-0.09l0.25,0.23l-0.46,0.39ZM553.88,89.25l0.02,0.22l-1.19,0.39l-1.16,-0.11l3.25,-2.3l-0.89,1.18l-0.03,0.62ZM552.35,288.12l0.2,-0.08l-0.07,0.07l-0.13,0.01ZM551.71,212.06l1.1,1.37l-0.24,1.16l-2.01,3.11l-2.04,-1.54l0.04,-2.0l1.51,-1.99l1.65,-0.11ZM547.12,149.9l0.49,-0.51l0.69,-0.03l0.65,0.55l2.62,-0.65l0.67,0.46l-0.59,0.38l-1.51,0.18l-0.77,-0.21l-0.46,0.58l0.24,0.44l-2.02,-1.19ZM464.85,80.8l0.83,-0.21l0.24,-0.83l-1.88,-0.98l0.13,-0.29l5.34,-0.89l6.87,1.62l2.42,-0.02l2.64,1.35l0.21,0.7l-1.44,1.87l-0.19,0.94l1.04,-0.2l2.11,-1.5l3.49,0.03l3.81,-0.73l2.04,0.23l2.59,1.28l-3.88,-0.44l-0.6,0.64l0.43,0.72l2.91,0.21l7.84,1.4l-0.51,0.43l-4.51,0.32l-4.91,-0.75l-0.75,0.1l-0.22,0.68l0.87,0.74l2.92,0.88l2.26,0.23l2.18,1.24l0.63,0.83l1.03,0.02l1.02,0.55l0.19,0.18l-0.62,0.72l-1.57,0.98l0.37,0.59l1.69,-0.02l1.99,1.17l0.8,-0.34l0.2,-0.65l-0.27,-0.95l0.4,-0.19l2.33,1.44l2.58,-0.55l0.86,0.86l0.5,-0.1l1.12,-1.17l2.19,1.25l2.92,0.87l1.54,0.13l0.63,-0.71l-0.44,-0.73l1.77,-0.47l1.17,0.04l1.92,-0.73l2.03,-0.12l3.42,-1.67l3.43,0.7l5.47,-0.84l4.45,0.77l0.25,0.73l0.49,0.29l4.06,0.3l0.62,0.37l-0.53,0.34l-0.04,0.64l0.33,0.2l2.86,0.25l0.64,1.45l-4.39,2.26l0.14,0.58l0.72,0.36l3.05,-0.18l0.87,0.56l-2.17,0.53l-2.18,-0.68l-0.27,0.6l0.83,0.81l-0.36,1.85l-4.7,0.15l-3.54,0.94l-4.89,-0.89l-0.74,-1.01l0.05,-1.28l-2.42,-1.14l-0.48,0.17l-0.11,0.45l0.99,1.16l-0.8,1.48l-4.32,0.71l-1.86,-0.31l-1.35,-0.68l-0.44,0.33l-0.09,0.57l-1.47,-0.84l-0.68,0.7l-1.24,0.33l-1.52,-0.41l-1.16,0.25l-1.96,-0.42l-0.27,0.79l-8.31,-0.15l-0.36,-0.24l0.07,-0.38l1.0,-1.77l-0.22,-0.53l-1.1,-0.5l-0.95,0.33l-0.57,0.85l-0.62,-0.75l-1.54,0.56l-0.12,1.18l-1.53,0.64l-1.38,0.06l-3.51,-0.65l-1.71,-0.94l0.31,-0.78l-0.62,-0.3l-1.28,0.83l-0.33,0.76l-1.38,0.04l-1.99,-1.26l-0.99,-2.38l0.34,-0.19l0.1,-0.71l-1.68,-1.74l-0.04,-0.87l1.77,-2.67l-0.61,-2.22l-4.68,-5.41l-1.48,-0.22l-1.99,0.92l-4.51,-0.26l-3.31,0.35l-0.97,-1.04l-2.55,-0.9l1.38,-0.5l0.38,-0.75l-1.9,-0.05l-3.1,-1.29ZM513.14,201.88l1.19,-1.91l2.54,-1.17l0.97,-0.79l-0.53,-3.73l0.94,-3.63l0.58,-4.35l1.23,-2.33l1.03,-0.58l1.6,1.24l0.28,0.77l-0.66,1.04l1.02,0.84l0.81,1.55l0.9,-0.04l1.32,-1.56l1.08,0.69l1.05,1.31l3.01,0.71l1.42,1.39l2.8,1.52l3.03,1.05l1.25,1.67l0.54,1.66l-1.01,1.08l-0.01,0.66l1.23,0.14l1.92,-0.43l1.68,0.35l0.75,-0.5l0.92,0.78l-0.33,0.36l0.29,0.41l1.56,0.55l-3.34,2.23l-4.6,-1.62l-2.03,-0.34l-0.49,-1.77l-2.7,-0.72l-0.0,-0.83l-0.55,-0.39l-1.29,0.13l-1.59,0.77l-0.8,2.04l-1.44,1.19l-1.52,0.66l-1.6,2.17l-1.6,0.86l-2.04,0.58l-0.52,-0.92l-0.75,-3.11l-0.56,-0.64l-4.22,0.29l-1.52,0.72l-1.23,-0.06ZM539.59,280.92l0.58,-0.54l3.34,-0.15l1.73,1.79l0.23,0.65l-5.87,-1.75ZM534.48,328.45l0.17,-0.1l0.15,0.24l-0.13,-0.01l-0.19,-0.13ZM536.92,329.16l0.04,-0.58l0.39,-0.25l1.17,0.66l0.88,-0.68l0.46,1.16l-0.8,0.6l-2.13,-0.91ZM530.86,213.12l-0.96,-1.73l2.58,-3.32l1.87,0.3l1.38,-0.56l2.4,-0.27l0.97,0.19l-0.7,1.72l-4.49,3.43l-1.65,-0.25l-1.4,0.48ZM527.23,181.66l2.67,1.22l0.3,0.27l-0.26,0.56l-1.12,0.19l-0.25,-1.22l-1.35,-1.02ZM532.16,184.95l0.17,0.02l-0.06,0.03l-0.11,-0.04ZM529.08,326.21l0.37,0.1l0.17,0.1l-0.27,0.23l-0.26,-0.42ZM525.38,185.5l-1.58,-1.37l-0.33,-1.63l0.57,0.05l0.81,1.14l0.72,1.54l-0.19,0.27ZM466.13,40.6l1.5,-0.38l2.39,0.19l0.28,-0.68l-0.33,-0.35l-2.62,-1.77l0.07,-1.15l0.74,-0.25l3.41,0.41l0.86,0.39l0.95,0.97l4.92,0.14l0.38,-0.29l-0.69,-0.77l-2.89,-0.67l-1.08,-1.33l-3.31,-0.95l0.98,-1.32l1.28,-0.51l2.38,0.21l3.5,-0.88l2.63,0.18l0.75,-0.86l-0.46,-0.95l-0.81,-0.41l-3.5,-0.18l-0.33,-0.61l4.19,-0.28l1.45,0.21l3.13,0.81l1.99,1.05l3.69,4.01l3.0,1.95l0.35,1.19l4.01,1.14l1.85,-0.46l1.23,0.26l0.33,0.39l-0.31,0.61l0.25,0.43l-0.22,1.29l1.96,1.38l3.38,0.65l0.54,-0.33l-1.03,-1.64l-1.18,-0.41l-0.1,-0.96l0.41,-0.25l1.85,-0.11l2.06,0.6l0.17,1.58l-1.22,0.67l-0.27,0.42l0.19,0.59l3.61,0.65l0.92,1.39l-0.77,2.43l-0.75,0.94l0.19,0.59l2.13,-0.11l1.4,-0.62l1.44,0.12l0.59,0.23l0.81,1.34l0.46,0.21l1.57,-1.47l2.82,3.16l-0.97,0.65l-4.09,1.23l-3.13,1.38l-1.3,0.04l-0.75,1.3l-2.55,2.0l-1.11,-0.55l-0.18,-1.44l0.68,-1.45l-0.08,-0.51l-0.46,-0.17l-1.16,0.6l-0.82,0.97l-0.02,2.17l-0.38,1.06l1.3,0.68l0.04,0.48l-0.47,0.39l-0.5,-0.16l-1.74,-1.22l-1.04,0.29l-0.13,0.44l0.66,1.98l-0.82,1.94l-1.06,-0.2l-4.91,-4.48l-0.51,0.26l-0.15,0.98l2.59,3.35l-2.4,-1.3l-1.79,-0.23l-1.29,0.37l0.11,0.65l1.34,0.86l-4.97,-0.29l-4.72,-1.36l-2.07,-1.13l4.43,-0.67l0.35,-0.31l-0.53,-0.64l-6.89,-0.57l-1.38,-1.1l1.91,-0.01l0.29,-0.36l-0.25,-0.39l-3.79,-1.09l-1.09,-0.74l4.15,-1.52l2.37,-0.21l0.99,-0.49l0.6,-0.94l5.99,-0.88l0.53,-0.64l-0.4,-0.28l-4.71,-0.0l-1.27,-0.75l-1.79,-0.13l-5.73,1.82l-0.24,-0.02l0.47,-0.32l0.08,-0.61l-1.17,-0.31l-1.61,0.14l-3.36,1.12l-1.1,-0.71l-1.65,-0.39l0.12,-0.93l5.62,-1.5l0.83,-0.97l-0.39,-0.61l-4.55,0.96l-2.69,-0.22l-2.96,-1.93l-0.54,-0.67l-0.6,-1.87l4.31,0.69l5.83,0.21l0.57,-0.38l0.02,-0.77l1.4,-0.48l0.36,-0.59l-0.36,-0.28l-1.67,-0.08l-4.03,0.78l-1.12,-1.02l-2.12,0.01l-1.53,-0.73ZM514.35,164.16l1.01,-1.37l0.82,0.5l0.29,2.36l-0.8,1.31l-1.04,-0.66l0.24,-1.2l-0.52,-0.94ZM512.66,146.44l0.56,-0.22l2.28,0.31l0.23,0.29l-0.66,0.13l-2.4,-0.5ZM495.93,80.57l1.8,-0.54l0.8,0.01l0.78,0.51l0.24,0.27l-0.65,1.02l0.18,1.0l-1.3,-0.2l-1.84,-2.07ZM499.04,74.64l-1.76,0.55l-3.79,-1.23l-0.73,-0.77l0.09,-1.68l1.23,-0.33l3.25,0.62l2.11,1.5l0.05,1.02l-0.45,0.31ZM496.34,152.96l0.42,-0.22l0.29,0.15l-0.33,0.55l-0.38,-0.47ZM482.1,107.73l2.92,0.77l1.84,1.09l3.2,-0.52l2.7,0.18l2.28,0.56l1.07,0.6l-0.92,1.4l-1.88,1.57l-1.59,2.17l-1.42,0.58l-0.04,0.74l0.3,0.34l-1.63,2.17l-1.6,1.49l-1.17,0.28l-4.87,-0.81l-4.5,0.44l-0.34,0.3l0.16,0.42l2.24,0.86l0.92,0.96l0.08,0.86l-1.56,1.57l-1.16,2.27l-1.77,-0.39l-3.12,0.21l-0.34,-4.29l-1.79,-3.69l-0.19,-7.7l0.86,-0.39l3.57,0.9l0.39,-0.32l-0.26,-0.55l-0.9,-0.37l-1.09,-1.47l-0.04,-0.52l0.38,-0.42l2.67,-0.83l3.66,-0.08l1.77,-0.57l1.15,0.17ZM494.98,153.24l0.12,-0.01l0.22,0.31l-0.07,-0.09l-0.27,-0.21ZM470.31,69.69l1.39,0.41l8.36,-0.18l1.67,0.6l-0.76,0.35l-0.86,1.57l-1.37,0.15l-10.84,-0.34l-1.16,-1.0l0.41,-0.74l3.16,-0.81ZM465.05,98.52l0.92,-1.47l1.18,-0.48l0.34,-1.24l2.08,-1.55l3.08,-0.94l1.91,-0.01l1.85,0.76l2.48,1.93l1.17,1.94l-0.23,0.95l0.44,1.88l-0.43,1.6l-5.4,0.21l-2.89,-1.49l-2.98,-0.4l-1.19,-1.03l-0.97,-0.05l-0.72,-0.66l-0.64,0.07ZM473.82,89.36l1.34,-0.39l0.77,1.62l-1.59,-0.03l-0.51,-1.2ZM456.17,58.61l1.09,-0.2l3.31,0.24l4.51,1.28l0.95,0.7l0.54,0.84l1.33,0.3l2.01,-0.12l2.56,0.91l0.48,0.39l-1.65,0.76l-0.48,0.55l0.16,0.61l1.78,1.15l-1.03,0.93l-1.29,0.07l-2.84,0.83l-2.35,0.17l-2.45,0.71l-0.05,-1.03l-2.77,-1.34l2.62,-0.3l0.65,-0.56l-0.3,-0.57l-4.23,-0.84l-1.11,-0.93l-0.22,-0.75l-1.13,-0.82l1.06,-0.42l0.21,-0.58l-1.35,-1.98ZM449.92,155.81l0.31,-0.43l2.78,-0.35l2.15,-1.3l0.43,-0.67l-0.39,-0.8l0.38,-0.28l-0.13,-0.41l1.09,0.76l1.1,-0.09l-1.3,-2.22l0.34,-0.7l1.82,-0.52l1.54,0.91l-0.17,0.69l0.41,0.43l0.96,-0.33l1.77,1.43l2.9,1.47l1.73,2.82l1.12,1.22l0.85,0.56l1.34,-0.3l-1.87,0.53l-2.94,2.0l-1.44,0.36l-2.02,-0.66l-2.36,-0.05l-3.83,-1.71l-0.39,-0.87l-2.4,0.18l-0.84,-1.07l-1.72,0.62l-0.75,-0.39l-0.48,-0.8ZM469.24,103.1l0.86,-0.16l0.76,0.56l-0.22,-0.03l-1.4,-0.37ZM468.22,152.22l-0.06,-0.28l0.14,-0.43l0.05,0.18l-0.12,0.52ZM469.52,151.1l0.96,0.7l-0.2,0.73l-0.46,0.24l-0.29,-1.66ZM465.94,92.56l1.34,0.58l-0.53,0.4l-1.48,-0.18l-1.4,1.18l-0.77,-0.16l-0.11,-0.49l2.22,-0.71l0.73,-0.63ZM439.92,114.01l0.73,-0.44l1.56,-0.25l2.2,1.43l0.57,-0.2l-0.46,-1.59l-1.56,-0.91l-0.29,-0.75l2.12,-0.39l2.51,0.47l0.74,-0.67l-0.06,-0.43l3.71,1.72l5.09,-0.85l1.65,-0.61l1.17,-0.08l1.68,0.4l0.92,1.24l-0.57,0.53l-2.0,0.52l-0.59,0.57l0.35,0.8l1.55,0.18l-2.66,1.01l-3.2,2.6l-0.18,0.94l0.63,0.59l1.78,-0.85l1.93,-0.07l1.3,0.71l-0.25,0.39l0.25,0.48l1.27,0.81l-0.39,0.85l0.27,0.56l2.96,-0.68l0.41,1.18l-0.11,0.9l-1.69,1.37l1.04,1.05l-0.86,1.59l0.72,0.79l0.04,0.8l-1.53,0.39l-1.34,1.08l-1.66,0.38l-2.94,-0.3l-0.28,-0.28l-0.08,-1.13l-0.3,-0.36l-0.43,0.04l-0.83,1.2l1.34,2.78l-2.02,1.12l-1.51,-0.6l-0.95,-0.0l-2.7,-3.53l-4.51,-3.87l-2.02,-0.59l-1.23,-1.03l-1.58,0.34l-0.93,-0.29l-1.31,-1.65l-2.14,-1.02l-1.41,-1.45l0.74,-1.7l1.47,-0.8l1.23,0.16l0.73,0.99l1.13,0.65l0.91,1.23l0.71,0.43l1.03,0.08l3.12,-0.58l0.49,-0.55l0.18,-1.08l0.61,0.47l0.82,-0.35l0.2,-0.78l-0.78,-1.47l-1.49,-0.62l0.63,-0.41l1.83,0.61l0.86,-0.12l0.33,-0.37l-0.29,-0.41l-2.74,-1.42l-2.71,0.8l-2.9,-1.7ZM447.4,110.0l-0.39,0.1l-0.35,-0.0l0.55,-0.19l0.19,0.09ZM463.64,119.03l-0.62,0.07l-0.5,-0.45l0.22,-1.04l0.52,-0.2l0.98,0.81l-0.26,0.69l-0.35,0.12ZM438.14,87.59l1.51,-1.04l0.12,-0.58l-0.47,-0.36l-1.76,0.02l-0.72,-0.31l1.14,-1.09l0.69,-0.08l1.58,0.39l0.92,0.62l0.53,1.12l4.86,3.0l2.02,0.36l0.61,-0.39l-0.14,-0.68l-1.78,-1.12l2.4,-0.08l0.36,-0.39l-0.34,-0.4l-3.46,-0.62l1.25,-0.22l0.3,-0.43l-0.19,-0.42l-1.07,-0.53l-2.45,-0.4l-0.88,-0.47l0.12,-0.2l2.07,-0.87l2.82,-0.19l0.63,0.07l2.43,1.72l1.73,-0.03l0.32,-0.59l-0.56,-1.24l1.16,-0.57l2.27,1.22l2.41,0.74l-0.11,1.6l0.87,1.21l0.17,0.84l-0.61,1.42l0.23,1.28l-1.23,0.73l-0.18,0.57l0.38,0.41l2.02,0.52l0.12,1.54l-1.23,-0.37l-1.15,0.95l-0.01,1.95l0.88,1.0l-1.64,-0.8l-0.44,0.75l0.59,0.87l-3.31,0.35l-2.31,-0.1l-0.95,-0.34l-1.58,0.66l-2.89,-0.23l-0.93,-1.41l1.26,-0.14l0.37,-0.39l-0.23,-0.49l-2.64,-0.97l2.03,-0.55l2.76,-1.79l2.51,-0.3l0.44,-0.61l-0.41,-0.49l-3.68,0.18l-6.59,0.94l-1.36,-0.17l-5.49,0.97l-0.52,-0.23l-0.15,-0.34l1.63,-0.79l0.81,-0.68l0.47,-0.94l0.81,-0.07l3.41,1.29l1.77,-0.44l0.22,-0.41l-0.31,-0.34l-1.49,0.13l-0.55,-0.51l-0.37,-0.58l0.3,-0.43l-0.27,-0.64l-1.37,-0.16l-0.49,-0.43ZM459.54,103.72l0.63,-0.49l0.46,-0.03l-0.1,0.13l-1.0,0.4ZM451.16,109.99l2.23,-0.87l5.4,-0.9l-2.77,1.63l-2.01,0.11l-1.45,0.43l-1.4,-0.42ZM453.05,44.6l0.11,1.44l-0.45,1.08l-1.49,-0.53l-0.33,-0.75l-0.93,-0.55l-2.56,-0.01l-0.36,-0.99l0.21,-0.72l1.41,-0.52l3.51,0.36l0.49,0.27l0.4,0.93ZM422.32,57.55l1.07,-1.41l0.01,-0.7l-1.22,-0.61l-2.97,0.21l-0.02,-1.02l0.7,-1.49l2.64,0.13l5.74,-0.47l2.55,0.63l1.3,0.67l1.24,1.43l-0.33,0.94l0.7,1.43l0.58,0.21l0.42,-0.24l0.69,-1.28l1.9,-0.7l1.14,0.01l3.13,1.37l-0.54,0.97l0.39,0.8l1.22,0.21l2.34,-0.4l1.97,0.95l1.86,1.54l-1.08,1.14l0.46,1.95l1.13,0.43l2.1,1.71l0.54,0.92l-0.64,1.31l-3.81,0.65l-3.01,-1.01l-0.75,-0.82l-0.33,-1.17l-1.61,-1.4l-4.99,-0.95l-2.86,0.33l-0.49,-0.41l0.18,-0.34l-0.39,-0.6l-4.83,0.57l-1.41,0.65l-2.67,-0.35l-1.2,-0.59l-1.0,-1.36l0.95,-0.44l4.88,0.66l1.12,-0.24l0.68,-0.76l-0.11,-0.58l-0.64,-0.36l1.18,-0.54l0.09,-0.65l-1.03,-0.47l-2.7,0.0l1.12,-0.78l0.15,-0.45l-1.7,-1.25l-1.45,0.39l-1.85,1.52l-0.52,0.11ZM446.42,155.7l0.23,-0.19l0.22,0.6l-0.3,-0.13l-0.15,-0.28ZM444.47,157.69l0.11,-1.39l0.44,0.02l0.91,0.82l-0.21,0.74l-0.41,0.29l-0.36,-0.46l-0.47,-0.01ZM440.82,81.98l0.4,-0.09l-0.29,0.09l-0.11,0.0ZM441.49,81.81l1.02,-0.71l1.67,-0.16l-0.86,0.32l-1.83,0.55ZM444.23,141.37l1.03,0.39l-0.04,0.35l-0.88,-0.33l-0.11,-0.41ZM353.8,138.14l2.52,-1.34l9.81,-2.1l0.21,-0.65l-0.22,-0.22l2.1,0.09l1.11,-0.38l-0.2,-0.73l-1.6,-0.43l-10.9,1.46l-2.02,-0.34l1.59,-0.62l0.7,-0.93l-0.31,-0.64l-4.24,0.1l-1.32,-0.32l-0.42,-0.5l0.14,-1.73l1.71,-1.64l1.15,-0.39l0.96,-0.83l-0.06,-0.54l-1.27,-1.15l0.4,-0.69l5.58,-3.6l13.25,-4.44l1.91,0.62l0.67,1.98l-0.25,1.81l-2.0,2.32l0.11,0.84l1.12,0.04l3.16,-0.77l0.77,0.17l0.7,-0.7l0.2,-1.5l0.74,-0.77l0.89,-0.35l1.53,0.08l3.56,0.94l3.75,1.58l-0.41,0.86l-1.22,1.23l-1.45,0.77l0.12,0.71l0.99,0.47l0.48,0.01l1.36,-1.16l0.42,0.62l0.86,-0.03l1.93,-1.67l2.79,-1.17l0.31,-0.42l-0.11,-1.23l-1.82,-1.0l-0.49,-0.67l2.9,0.18l4.44,2.46l0.53,0.44l0.14,0.82l1.12,0.36l2.83,7.8l1.63,1.04l0.89,0.08l0.68,-0.9l1.81,-1.08l0.15,-1.2l-1.92,-2.33l-0.62,-2.67l-0.54,-0.77l-1.57,-5.69l0.06,-0.39l1.25,-0.28l0.04,-0.71l-0.49,-0.52l1.3,0.16l3.02,1.31l0.47,-0.02l0.63,-0.74l0.42,0.07l5.08,2.45l0.89,0.75l0.96,1.21l0.95,3.63l2.17,4.91l2.14,3.05l0.15,1.63l-1.09,2.64l0.36,0.66l1.81,1.32l1.19,1.6l1.93,1.24l2.55,1.14l0.77,-0.19l0.18,-0.53l4.66,2.77l1.57,0.06l0.44,1.2l2.5,0.08l0.43,0.76l0.33,1.83l-0.23,0.88l-0.84,-0.05l-0.7,-0.45l-0.48,-0.98l-0.6,0.02l-0.66,1.21l-2.92,-1.29l-2.08,1.24l0.02,1.4l-1.29,-0.11l-2.22,-1.08l-0.84,0.3l-0.14,0.7l0.24,0.3l1.85,1.28l-0.42,2.09l0.56,0.42l1.78,-1.57l1.65,-0.86l1.3,-0.09l0.48,0.25l-0.38,0.67l0.14,0.91l1.28,0.63l-0.27,1.03l-5.03,1.68l-2.87,0.13l-2.98,-0.5l-1.41,-0.54l-1.35,0.46l-2.44,-0.39l0.65,-0.84l-0.38,-0.63l-5.65,-0.71l-0.79,-0.42l-0.06,-1.26l-0.41,-0.49l-1.52,-0.35l-1.28,0.96l-0.9,1.47l-1.94,1.52l-4.71,0.6l-2.99,1.57l-2.62,0.72l-6.93,0.86l-1.47,-0.08l-1.01,0.42l-8.59,0.53l-0.87,-0.39l-1.57,-1.97l-0.23,-2.24l-0.72,-1.76l-3.27,-0.68l-6.63,-0.13l-4.44,-1.24l-2.86,-3.29l-0.4,-2.0l2.94,-0.79l9.97,-1.26l9.99,0.8l2.36,-0.46l1.98,0.02l0.98,-0.38l0.06,-0.65l-0.48,-0.4l-2.13,-0.95l-8.49,-2.27l-11.43,0.97l-1.68,-0.34l-3.45,0.18l-2.9,-0.23l-3.71,-2.81ZM435.02,68.68l3.8,-0.1l2.6,0.95l-4.73,0.45l-1.36,-0.35l-0.31,-0.94ZM441.45,151.89l-0.06,-0.26l0.16,0.18l-0.1,0.08ZM436.25,158.94l0.9,-0.75l0.91,0.47l-0.44,0.76l-1.37,-0.48ZM431.04,90.56l0.96,-0.93l-0.1,-0.64l-1.09,-0.45l-2.78,0.66l-0.45,-0.18l0.57,-0.66l-0.26,-0.66l-2.16,-0.11l-0.5,-0.38l0.11,-0.3l6.14,-1.3l2.26,0.22l0.42,1.75l2.04,1.41l-1.49,0.52l-0.78,0.9l-2.88,0.16ZM431.02,65.13l0.56,-0.51l0.9,-0.15l-0.76,0.55l-0.71,0.11ZM424.16,82.36l2.23,-0.5l0.22,0.87l1.51,-0.17l0.7,0.63l2.33,0.78l-1.68,0.66l-4.25,-0.02l-1.05,-2.25ZM422.82,97.28l0.97,-1.75l1.3,-0.71l1.26,0.05l0.97,0.47l0.92,1.69l-0.64,0.63l-2.33,0.46l-1.55,-0.29l-0.9,-0.55ZM422.07,160.33l1.5,0.12l0.58,0.52l-0.77,0.01l-1.31,-0.65ZM416.93,70.17l1.65,0.11l1.4,0.95l1.31,1.32l0.31,1.01l1.15,0.25l1.01,0.71l0.34,0.74l-0.14,0.62l-0.76,0.25l-2.4,-0.59l-1.6,-1.71l-2.27,-3.67ZM412.25,113.78l1.36,-1.43l6.44,-0.69l3.2,1.42l0.35,1.14l-0.14,1.01l-0.98,1.68l-1.41,1.63l-1.03,0.68l-3.46,-2.58l-0.69,-1.15l-1.83,-1.11l-1.81,-0.6ZM360.07,92.18l0.64,-0.68l0.77,-0.24l6.75,-0.72l2.54,-0.59l0.27,-0.44l-0.4,-0.34l-7.32,0.07l-0.68,-0.25l0.37,-0.47l-0.2,-0.8l2.36,-0.95l6.58,0.3l0.36,-0.33l-0.75,-0.67l-4.6,-0.6l-0.0,-0.32l1.03,-0.9l2.86,-0.61l2.26,-0.04l1.55,0.46l0.6,1.49l1.37,1.13l3.49,-0.5l2.25,0.55l3.87,2.52l-0.83,0.57l0.13,0.67l2.75,0.24l1.22,2.03l1.31,0.8l10.7,0.37l0.78,-1.07l-0.21,-1.42l-4.52,-2.02l1.9,-0.92l0.26,-0.7l-0.15,-0.69l-1.53,-1.18l-2.51,-0.82l-0.38,-0.56l2.11,-1.23l2.7,-2.53l1.08,-0.49l1.21,-0.09l1.5,0.67l-0.77,1.0l-0.0,0.48l0.65,1.72l1.63,1.17l0.25,0.71l-1.24,1.17l-0.01,0.84l0.82,0.32l2.14,-0.02l0.39,0.39l-1.45,1.63l0.23,0.62l0.76,0.02l1.87,-1.02l1.49,0.1l0.61,0.32l1.0,1.9l0.44,-0.33l0.06,-0.83l1.07,-0.59l-0.84,-1.28l0.72,-0.62l1.21,-0.33l2.41,0.51l1.26,0.6l0.63,1.83l-1.9,5.46l-1.0,0.89l-5.22,1.62l-3.49,-0.74l-3.24,0.54l-0.6,-0.13l0.02,-0.52l-0.34,-0.28l-1.17,-0.21l-3.34,1.81l-4.55,0.72l-2.83,1.78l-3.99,1.37l-3.98,0.85l-2.48,0.15l-3.22,-0.49l-2.51,-1.19l-0.73,-0.65l0.91,-0.59l4.12,-1.11l2.46,-1.01l5.99,-0.46l3.11,-1.85l0.27,-0.93l-1.0,-0.46l-2.35,0.95l-2.98,0.36l-2.05,-0.8l-1.78,1.06l-3.77,0.39l-0.38,-0.28l-0.02,-1.1l1.72,-1.31l0.25,-0.64l-1.01,-0.18l-1.38,0.34l-0.68,-0.56l-0.66,0.41l-0.47,1.54l-1.3,-0.42l-0.44,0.16l-0.12,0.62l0.74,0.93l-0.32,0.37l-2.66,1.06l-1.05,-1.15l-1.09,-0.23l-0.76,0.42l-0.71,1.05l-1.94,-0.69l-1.65,-1.29l-2.9,0.08l-2.4,-0.46l-0.28,-0.44l1.47,-1.45l6.03,-0.35l4.27,-1.53l0.7,-0.54l0.17,-0.6l-0.48,-0.31l-6.59,1.24l-3.23,-0.23ZM406.58,174.16l0.29,-0.0l-0.11,0.21l-0.19,-0.21ZM406.05,169.16l0.47,0.8l-0.03,0.24l-0.49,-0.34l0.05,-0.7ZM379.81,63.23l2.96,-1.41l4.78,-0.84l3.27,-1.5l2.22,-0.53l0.95,0.01l4.5,1.91l0.66,1.56l-0.16,0.52l-1.34,0.27l-5.27,-0.07l-2.08,-0.83l-1.94,1.22l-1.08,-0.08l-2.05,-0.93l-4.46,0.82l-0.94,-0.12ZM380.01,68.35l9.99,-1.93l3.8,-0.17l3.78,0.24l-0.48,0.6l-5.55,1.35l-0.18,0.64l0.9,0.67l2.76,0.1l0.1,1.22l-0.3,0.81l-2.3,0.78l-2.78,0.19l-3.66,0.9l-1.95,-0.19l-1.33,-0.83l-2.59,-0.93l0.3,-0.97l-0.75,-1.56l0.2,-0.94ZM372.18,80.09l1.45,-0.48l2.61,-0.2l1.65,0.7l-0.76,0.46l-4.94,-0.48ZM373.77,66.63l0.46,0.72l2.52,1.09l0.43,0.48l-2.05,0.75l-0.81,-0.01l-1.51,-0.48l-1.77,-1.5l2.74,-1.04ZM315.79,128.42l0.18,-1.02l0.7,-0.33l-0.04,-0.76l1.18,-1.63l1.99,-1.57l0.16,-2.54l2.1,-1.04l-0.13,-0.98l-0.94,-0.36l-0.16,-0.4l1.05,-1.14l0.85,-1.68l1.5,-1.01l0.55,-1.27l1.24,-1.45l-0.49,-0.85l-1.62,-0.74l-2.25,-3.88l15.66,-1.9l4.76,1.92l4.33,1.14l-0.39,0.55l0.11,0.66l0.52,0.05l1.22,-0.86l1.07,0.02l0.18,1.52l0.54,0.31l2.57,-2.19l2.03,-0.31l2.43,0.14l3.73,1.46l5.05,3.5l1.68,0.83l0.99,1.02l-0.01,0.45l-0.38,0.28l-4.9,1.61l-13.33,6.01l-2.22,3.25l-1.17,0.51l-1.68,0.16l-0.73,0.5l-1.34,5.47l-0.73,0.94l-4.09,1.04l-0.79,-0.54l-0.78,0.04l-2.18,1.72l-1.94,0.66l-1.48,0.89l-1.08,0.02l-0.94,-0.6l-1.82,-2.98l-1.85,-1.89l-6.58,-2.81l-2.33,0.07ZM331.11,86.43l1.94,-1.77l4.18,-0.58l2.4,-2.24l3.08,-1.37l0.96,-1.22l6.17,-4.28l5.38,-0.8l2.99,0.69l0.93,-0.01l0.58,-0.41l1.56,0.16l0.84,-0.5l-0.03,-0.66l-1.41,-0.51l0.64,-0.38l1.55,-0.19l1.36,0.31l3.43,1.78l-3.41,1.14l-0.71,0.51l-0.11,0.52l0.34,0.51l2.04,1.34l-1.44,-0.03l-0.58,0.64l1.46,1.88l-1.08,0.72l-3.89,0.82l-0.32,0.3l-0.21,1.61l-0.71,0.74l-1.14,0.08l-2.29,-1.24l0.18,-1.43l0.95,-2.26l-0.28,-0.58l-0.61,-0.14l-2.34,0.77l-0.73,0.97l-0.25,1.09l-1.7,0.48l-0.05,0.87l0.85,0.85l-1.03,0.88l-0.7,1.15l-0.77,-0.12l-1.37,-1.87l-0.92,0.17l-0.42,0.71l0.06,1.11l-0.49,0.76l1.06,0.86l-1.7,1.31l-2.17,0.33l-0.66,-1.68l-1.56,-2.01l-0.76,0.24l-0.67,1.51l-0.79,0.3l-3.54,-0.53l-2.47,0.93l-0.73,-0.32l0.43,-0.73l-0.25,-0.93l-0.41,-0.33l-0.65,0.07ZM348.7,92.43l3.57,-2.6l2.53,-0.94l1.85,-1.17l0.69,0.04l-1.82,2.53l-2.11,2.24l-1.34,0.61l-3.36,-0.71ZM304.86,299.15l1.07,-0.29l1.02,0.45l0.21,-0.39l-0.18,-1.54l-1.55,-0.18l-0.41,0.63l-1.09,0.1l-1.17,-1.05l0.33,-0.4l1.43,-0.18l6.14,2.3l5.93,1.15l2.89,3.93l0.54,1.34l1.13,0.82l3.21,1.31l0.8,0.81l1.63,3.26l0.75,0.03l0.21,0.5l-0.6,0.03l-0.45,0.51l-1.58,-0.33l-5.53,-2.1l-0.37,-0.22l1.39,-1.34l0.22,-1.44l-0.66,-0.25l-0.51,1.23l-2.02,0.09l-0.73,0.36l-0.78,-0.59l0.33,-0.33l-0.02,-0.57l-1.48,-0.65l0.11,-0.46l-0.58,-0.39l-2.6,-0.28l-0.03,-0.3l1.98,-0.46l-0.22,-0.8l-1.0,0.07l-0.87,-0.39l-0.7,-0.99l-1.15,-0.46l-1.1,0.41l-0.47,-1.57l-0.6,-0.11l-0.28,0.36l-0.63,-0.58l-1.48,0.18l-0.12,-0.94l-0.42,-0.25ZM318.16,299.33l0.52,0.81l-0.22,0.34l-0.39,-0.94l0.09,-0.21ZM310.07,303.42l0.08,-0.47l0.61,0.92l-0.33,-0.16l-0.36,-0.29ZM303.82,290.72l0.36,0.38l0.0,0.31l-0.15,-0.13l-0.21,-0.56ZM302.31,283.9l-0.01,-0.41l0.12,-0.19l-0.12,0.6ZM299.11,279.79l1.47,0.95l0.36,1.05l0.21,2.68l-0.35,0.56l-0.06,-2.08l-0.63,-0.36l-0.43,0.52l-1.17,-1.77l0.6,-1.55ZM298.52,283.66l0.24,0.22l0.04,0.06l-0.23,-0.2l-0.05,-0.08ZM297.76,280.11l-0.0,-0.01l0.01,-0.02l0.0,0.03l-0.01,-0.0ZM291.81,277.37l2.12,1.18l0.77,1.05l-0.22,0.1l-2.66,-2.33ZM291.2,274.44l0.56,-0.34l0.49,0.5l-0.31,0.35l-0.74,-0.51ZM282.34,280.67l1.98,-0.59l0.39,0.17l0.49,1.27l-1.3,0.07l-0.28,0.2l0.13,0.71l1.99,0.98l-0.32,0.6l0.26,0.58l-2.53,-2.18l-0.31,-0.48l0.53,-0.71l-1.03,-0.62ZM286.48,285.6l0.38,0.11l-0.07,0.33l-0.24,-0.3l-0.07,-0.14ZM287.53,286.56l0.18,0.0l-0.07,0.06l-0.11,-0.06ZM278.62,273.61l1.57,0.19l0.72,0.41l1.03,-0.24l0.31,0.34l0.22,0.84l-2.06,1.23l0.02,0.44l0.54,0.32l2.12,-0.45l0.42,-1.38l-0.08,-0.87l1.48,-0.4l-1.02,2.12l-0.47,2.92l-1.55,0.48l-1.38,-0.43l1.02,0.21l0.39,-0.53l-2.4,-1.57l-0.93,-1.88l0.04,-1.75ZM247.18,150.81l0.14,-0.08l0.06,0.0l-0.14,0.11l-0.06,-0.03Z\",\n            name: \"Canada\"\n          },\n          SV: {\n            path: \"M498.24,510.01l2.69,-2.02l0.04,-0.83l0.4,-0.08l1.42,0.34l1.29,1.21l1.56,0.72l0.45,0.73l1.73,-0.66l0.63,0.49l1.16,0.09l-0.53,2.53l-0.3,0.29l-1.07,0.07l-2.13,-0.61l-1.27,0.01l-2.07,-1.0l-2.7,-0.44l-1.31,-0.83Z\",\n            name: \"El Salvador\"\n          },\n          HT: {\n            path: \"M580.72,487.14l-0.81,-0.67l-1.65,-0.68l0.21,-0.8l7.95,1.07l0.97,-0.61l1.22,-0.15l0.35,-0.43l-0.14,-0.81l-2.01,-1.72l0.36,-1.85l-0.18,-0.49l-1.81,-0.91l-1.63,-0.4l2.36,-0.52l3.23,0.95l2.16,0.25l-0.0,1.87l0.48,0.56l-0.78,1.07l0.39,0.84l-0.45,0.62l-0.82,0.19l-0.05,0.51l1.21,1.38l-0.07,0.46l-1.12,-0.52l-4.14,0.4l-2.65,-0.52l-1.45,0.14l-1.12,0.76Z\",\n            name: \"Haiti\"\n          },\n          TT: {\n            path: \"M643.52,528.92l0.93,-0.6l0.17,-1.53l-0.28,-0.7l1.93,-0.33l-0.23,0.49l0.15,2.42l-2.67,0.25Z\",\n            name: \"Trinidad and Tobago\"\n          },\n          JM: {\n            path: \"M563.41,485.93l1.71,0.33l1.05,0.69l1.72,0.54l0.44,0.7l-1.0,0.07l-1.76,-0.57l-0.62,0.65l-0.64,-0.23l-0.7,0.66l-1.05,-0.44l-1.41,-0.09l-1.43,-1.54l-1.29,-0.34l0.31,-0.37l1.7,-0.38l2.99,0.33Z\",\n            name: \"Jamaica\"\n          },\n          GT: {\n            path: \"M487.5,505.99l0.25,-2.03l0.38,-0.47l-0.62,-1.16l2.22,-3.83l6.37,-0.01l0.39,-0.45l0.03,-1.91l-0.98,-0.53l-0.55,-1.15l-1.38,-0.86l-1.27,-1.3l0.96,0.01l0.4,-0.4l0.02,-2.57l8.53,0.01l-0.29,9.94l1.99,0.17l1.41,0.63l0.77,-0.52l0.62,0.38l-4.44,3.3l-0.33,1.31l0.26,0.98l-0.81,0.76l-1.08,0.27l-0.12,0.92l-1.83,1.18l-0.93,1.04l-2.11,-0.78l-2.79,0.01l-1.09,-0.31l-3.99,-2.61Z\",\n            name: \"Guatemala\"\n          },\n          HN: {\n            path: \"M502.26,506.51l0.75,-0.7l-0.22,-1.4l0.22,-0.76l0.93,-0.43l3.59,-2.89l0.67,0.01l1.18,-0.86l0.79,-0.15l0.82,0.55l1.25,-0.15l2.04,0.36l2.93,-0.16l2.22,-1.15l2.06,0.59l2.56,-0.46l2.09,0.97l1.4,-0.13l1.06,0.86l-0.51,0.53l0.45,0.84l0.71,0.01l1.02,0.94l0.74,-0.23l0.64,0.22l0.13,-0.28l0.44,0.62l-0.9,0.17l-1.73,0.96l-1.9,0.25l-1.12,0.53l-0.66,-0.08l-1.15,-0.79l-0.91,0.32l-1.1,1.41l-0.19,0.93l-2.71,2.24l-1.32,-0.93l-0.76,0.41l-0.87,1.1l-2.16,0.14l-0.23,0.62l0.25,1.74l-0.89,0.4l-0.51,1.1l-0.93,0.04l-1.08,-1.91l-0.97,-0.13l-0.21,-0.55l0.26,-1.52l-0.56,-0.53l-1.13,-0.04l-1.02,-0.52l-1.26,0.55l-0.33,-0.51l-0.89,-0.23l-2.12,-1.76l-0.83,-0.15Z\",\n            name: \"Honduras\"\n          },\n          BZ: {\n            path: \"M502.69,498.61l0.37,-10.07l1.09,0.23l0.57,-0.32l1.77,-2.64l0.22,0.62l0.94,0.05l0.11,0.31l-0.92,3.07l0.26,0.66l-0.37,1.02l-0.11,3.45l-1.14,1.6l-0.74,0.32l-1.16,1.71l-0.88,-0.02Z\",\n            name: \"Belize\"\n          },\n          BS: {\n            path: \"M582.19,471.96l0.6,-0.57l1.63,0.08l-0.22,0.3l-2.01,0.18ZM564.14,442.52l0.07,0.5l-0.12,0.1l-0.02,-0.38l0.08,-0.22ZM560.35,454.98l0.39,-0.1l0.0,0.48l0.37,0.24l0.5,-0.1l0.02,1.4l-0.36,-0.03l-0.92,-1.9ZM558.49,452.88l0.34,-0.69l-0.2,-0.32l0.53,-0.85l0.04,-1.03l1.41,2.26l0.04,0.9l-1.0,0.58l-0.29,-0.54l-0.87,-0.31ZM556.78,441.65l0.13,-0.32l0.39,0.16l-0.34,0.1l-0.18,0.07Z\",\n            name: \"Bahamas\"\n          },\n          CR: {\n            path: \"M520.07,525.02l0.84,-1.08l3.35,1.21l1.27,-0.52l1.6,0.38l1.02,1.02l1.33,0.23l1.32,-0.39l1.24,2.39l2.84,3.21l-0.83,1.04l-0.0,2.02l0.93,0.65l-0.76,0.8l0.32,1.39l-0.64,0.41l-0.37,-1.17l-1.44,-0.72l-0.4,0.06l-0.3,0.59l0.63,0.83l-0.72,-0.17l-0.38,-0.4l0.46,-0.81l-0.0,-1.05l-0.7,-1.14l-2.53,-1.66l-1.86,-0.57l-0.68,-1.7l-2.7,-1.79l-0.72,0.35l0.14,0.77l0.47,0.65l1.25,0.66l-0.38,0.41l-0.37,0.3l-0.87,-0.94l-1.49,-0.44l-0.95,-1.69l0.89,-1.55l0.03,-0.73l-0.85,-0.82Z\",\n            name: \"Costa Rica\"\n          },\n          US: {\n            path: \"M321.51,312.91l3.17,1.24l3.48,0.32l0.75,-0.21l0.58,0.45l1.06,-0.08l0.45,0.94l-0.72,0.39l-1.17,1.57l-0.52,1.54l0.45,0.4l0.64,-0.1l-0.43,0.79l0.26,0.67l1.68,0.18l0.71,-0.37l0.44,-0.83l1.04,-0.86l-0.23,-2.77l0.76,-1.59l-1.0,-1.26l0.19,-0.48l-0.73,-0.93l0.28,-0.43l-0.26,-1.75l-0.77,-0.33l-0.29,-0.68l140.63,0.01l0.4,-0.39l0.03,-2.05l0.58,0.07l1.0,3.41l0.67,0.6l2.89,0.55l1.75,0.87l0.97,-0.07l1.0,-0.52l1.68,0.04l2.33,1.07l0.74,1.14l0.81,-0.36l1.09,0.16l2.69,1.63l0.8,-0.02l2.28,-0.96l0.91,0.68l3.16,-0.07l1.02,0.77l-3.65,1.26l-1.88,1.09l-5.91,4.78l-0.02,0.76l0.69,0.46l2.78,-0.39l3.13,-1.26l-0.7,1.57l0.14,0.63l1.36,-0.29l1.13,0.51l0.83,-0.11l2.57,-1.26l2.59,-0.58l2.09,-1.04l1.08,-0.99l0.82,1.06l0.15,1.4l0.54,0.07l1.08,-0.9l1.98,0.39l0.58,0.32l1.68,2.04l1.72,-0.09l0.47,0.34l1.54,0.21l2.57,-1.47l3.57,-0.16l1.77,-0.47l-0.21,1.21l0.42,0.55l2.58,0.45l0.83,-0.41l0.48,1.05l-0.12,0.72l0.94,0.3l0.18,0.5l-2.01,-0.13l-0.7,-0.37l-0.64,0.33l-0.26,0.71l-1.43,-0.98l-2.06,-0.41l-1.26,0.77l-2.63,0.21l-1.2,1.11l-0.53,-0.65l-1.14,0.22l-0.57,0.76l0.03,-0.97l-0.68,-0.11l-0.66,1.39l-2.54,3.44l-0.15,0.83l-1.04,0.6l-0.86,1.58l-0.15,1.01l0.74,0.45l1.13,-0.74l0.82,-1.12l0.5,-0.14l0.26,0.25l-0.93,2.31l0.0,1.2l-0.88,1.36l-0.01,1.59l-1.04,3.06l0.08,1.53l0.52,1.33l-0.03,3.71l1.28,2.82l1.31,0.91l1.6,-0.18l2.06,-1.18l1.85,-2.94l0.65,-2.21l0.06,-1.63l-1.62,-4.6l0.51,-1.02l-0.37,-1.57l1.05,-1.53l0.25,-2.31l0.6,-0.28l0.29,-0.9l1.01,-0.36l0.59,-0.61l0.01,1.5l1.03,0.24l0.87,-1.74l0.03,-1.45l2.16,-0.77l0.11,-0.55l-0.79,-0.68l0.66,-0.98l0.67,-0.11l2.45,0.87l0.87,0.85l3.02,1.07l0.59,0.99l-0.47,0.25l-0.18,0.57l0.78,1.4l-0.16,2.39l-0.89,0.6l-0.43,1.17l-1.46,0.8l-0.33,1.56l0.64,0.78l1.29,0.3l1.2,-0.84l0.93,-1.39l1.36,-0.51l0.89,0.62l1.44,5.57l-0.32,1.53l-0.1,0.24l-0.61,-0.26l-0.79,0.4l-0.58,1.63l-1.04,0.7l-0.46,1.52l-0.85,0.97l-0.47,1.25l2.1,1.0l0.32,0.94l2.04,-0.01l0.77,0.36l2.0,-0.57l2.15,-0.15l2.51,-1.58l4.58,-1.66l4.22,-2.16l2.03,-1.39l1.41,-1.42l-0.18,-1.92l-0.77,-0.34l0.02,-0.49l4.11,-0.6l3.26,0.79l3.09,0.0l1.33,-0.54l1.21,-0.98l1.17,-0.25l0.47,-0.54l-0.21,-1.52l0.78,-0.89l-0.82,-1.14l2.0,-1.3l0.39,-0.78l1.78,-1.55l1.97,-1.19l17.64,-0.21l1.11,-1.73l0.86,0.11l0.68,-0.41l0.8,0.35l0.43,-0.86l0.64,-0.25l0.03,-0.88l1.31,-1.05l0.69,-1.13l0.3,-2.3l0.95,-1.3l0.29,-1.62l3.69,-4.59l0.38,0.09l0.16,0.96l0.77,0.52l0.79,0.03l2.53,-0.94l2.15,1.54l0.17,7.28l-0.35,1.42l1.9,1.06l0.04,1.81l0.98,0.94l0.74,-0.17l0.1,1.55l0.37,0.37l-0.54,0.49l-1.79,0.22l-0.49,0.51l-0.99,-0.07l-0.9,0.94l-0.85,-0.56l-1.66,0.31l-0.39,0.98l-0.32,-0.11l-0.12,-1.11l-0.63,-0.34l-0.98,0.84l-0.74,2.29l-0.51,0.44l-1.21,0.3l-1.16,-0.2l-0.88,1.04l-0.53,-0.28l-1.31,0.69l-0.46,0.59l0.1,0.56l-1.35,1.42l-1.19,1.91l-0.48,1.49l0.56,1.36l-1.58,1.56l0.05,0.59l1.52,0.6l1.05,2.4l0.85,0.62l-0.79,0.4l-0.05,-0.56l-0.51,-0.39l-2.2,1.14l0.22,-0.77l-0.39,-0.56l-0.51,0.21l-0.57,-0.49l-0.52,0.47l-0.5,2.09l-7.21,0.62l-3.28,1.55l-1.05,0.89l0.01,-1.67l-0.51,-0.54l-0.49,-0.02l0.07,2.24l-1.71,2.32l0.42,0.98l1.07,0.15l-0.34,1.93l-1.07,2.38l-0.83,0.71l-0.12,0.72l-0.79,0.46l-0.88,1.57l-0.11,-0.76l-1.29,-0.44l-1.72,-1.43l0.41,-1.38l1.16,-0.37l0.49,-0.53l0.05,-0.87l-2.07,0.88l-1.07,1.23l0.02,1.47l0.78,1.11l0.14,1.17l1.52,1.94l-0.49,1.01l0.74,0.44l-1.58,2.35l-1.26,2.95l-0.97,0.67l1.4,-2.64l-0.26,-0.53l-0.5,-0.13l-0.39,-0.9l0.13,-0.87l-0.47,-0.52l-0.93,0.36l-0.78,-0.8l0.09,-0.29l0.99,0.09l0.34,-0.6l-1.07,-0.91l0.45,-1.98l-0.51,-0.35l0.55,-0.74l0.92,-0.05l0.35,-0.34l-0.41,-1.27l-0.56,-0.42l-0.73,0.32l-0.2,0.75l-1.12,0.13l-0.44,0.81l-0.87,0.18l0.42,0.9l-0.32,0.59l0.25,0.51l-0.08,1.95l-0.53,-0.33l-0.29,0.43l0.19,1.0l0.91,0.92l-0.93,-0.24l-0.42,-0.62l-0.58,0.01l-0.46,-0.52l-0.79,0.22l1.1,-1.65l-0.03,-0.86l-0.39,-0.36l-0.6,1.12l-0.96,0.89l-0.2,1.56l0.61,0.47l0.84,-0.12l0.33,0.44l-0.8,0.22l0.12,0.44l4.21,3.97l-0.74,0.48l-1.12,-1.13l-0.45,-0.09l-0.19,0.7l0.75,0.95l-1.53,-0.55l-1.37,-0.09l-0.39,0.24l0.09,0.45l2.92,0.99l1.22,1.66l1.32,-0.3l0.96,0.18l0.27,0.87l-0.37,1.44l0.56,1.01l-0.77,-0.33l-2.22,1.47l-0.99,-1.23l-0.38,0.38l0.04,1.57l0.34,0.43l0.59,0.08l2.45,-0.21l-0.1,1.26l0.41,0.43l0.66,-0.27l0.52,-1.24l0.04,1.15l-1.73,1.51l-1.34,-0.29l-0.24,-0.53l-0.47,-0.2l-0.8,0.57l-1.36,-0.51l-0.49,0.12l0.34,0.9l2.11,0.88l-0.35,0.83l-0.53,0.33l-1.16,-0.84l-0.52,0.01l-0.07,0.52l0.49,0.75l1.43,0.66l1.34,-0.09l-1.45,0.66l-2.06,0.08l-0.56,0.49l-0.26,-0.54l-0.45,-0.16l-0.28,0.38l0.04,1.03l-2.19,1.99l-0.25,-0.18l-0.37,0.36l-0.16,1.11l-1.75,-0.03l-1.1,0.32l-1.41,0.9l-1.53,1.82l-0.52,0.1l-0.28,0.51l0.1,0.93l-1.44,0.68l-1.06,1.17l-0.5,-0.1l-0.4,0.91l-1.91,0.82l-1.5,-0.02l-0.25,0.37l0.24,0.34l-0.83,-0.36l-0.24,0.88l0.43,0.81l-0.63,0.37l-0.33,0.87l-0.88,0.33l-0.08,0.71l-0.46,0.37l-0.37,1.03l0.17,0.38l-0.82,0.89l0.35,0.47l-0.66,0.25l-0.1,0.41l-0.29,1.98l1.37,5.68l2.47,5.28l-0.38,0.46l0.46,2.11l3.22,7.28l0.34,1.36l-0.37,4.82l-0.85,1.44l-0.34,1.55l-0.41,0.38l-1.84,0.31l-0.23,-0.6l-0.69,-0.34l-1.2,-2.31l-1.88,-1.04l-0.41,-0.75l-0.27,-1.52l-0.34,-0.36l0.45,-1.21l-0.47,-0.11l-0.65,0.47l0.2,-1.38l-0.32,-0.63l-0.99,0.16l-0.22,0.38l-0.63,-0.87l-1.06,-2.1l1.14,-1.46l0.15,-0.73l-0.3,-0.42l-1.44,-0.52l-0.37,0.66l0.29,0.7l-0.38,-0.3l0.45,-2.01l0.46,-1.47l-0.02,-2.46l-0.68,-1.0l-2.63,-2.2l-2.16,-2.72l-2.05,-1.04l-1.55,0.31l-0.46,0.77l-1.88,0.76l-2.12,0.41l-0.27,-0.77l-1.32,-1.1l0.02,-0.78l-0.37,-0.62l-0.98,0.5l-1.5,-0.63l0.24,-0.27l-0.18,-0.37l-0.92,-0.39l-3.24,0.63l-0.14,-0.83l-0.55,-0.2l-0.71,0.14l-0.84,1.18l-0.74,-0.33l-1.24,0.74l-0.63,-0.84l-0.22,-1.09l-0.85,-0.45l-0.7,1.78l-2.49,0.05l-1.18,-0.33l-2.09,0.39l-1.41,0.98l-3.19,-1.17l-0.94,0.78l-0.41,0.77l0.14,0.53l0.74,0.46l0.77,0.22l1.47,-0.52l0.36,0.94l0.78,0.28l0.43,-0.07l0.44,-0.71l0.22,0.59l-1.41,0.71l-0.38,0.86l1.28,1.3l1.63,0.5l0.47,0.51l-0.24,0.22l-0.63,0.04l-0.48,-0.71l-1.66,-0.76l-0.56,-0.7l-1.57,-0.51l-0.52,0.36l0.54,0.81l-0.29,1.12l-0.39,-0.7l-0.57,-0.27l-1.21,0.16l-0.71,0.74l-1.16,-0.31l-0.62,-0.23l0.04,-0.51l-0.82,-1.35l-1.12,0.09l-0.69,-0.93l-1.58,-0.65l-1.06,0.47l-0.36,0.42l0.03,0.56l-0.38,0.09l-1.99,-0.21l-2.62,-1.02l-2.87,0.08l0.09,-0.92l-0.64,-0.28l-0.9,1.12l0.09,0.55l-2.58,0.9l-0.77,-0.22l-0.06,-0.74l-0.38,-0.33l-1.55,0.28l-0.29,0.45l0.59,1.7l-1.05,0.91l-0.69,1.13l-3.33,1.9l-2.03,-0.28l-0.36,0.27l-0.59,-0.59l-0.6,0.07l-0.18,0.53l0.69,1.3l-0.41,0.13l-0.34,-0.3l-0.66,0.22l-0.19,1.02l-1.47,0.21l-0.3,0.4l0.41,0.73l-0.32,0.38l-1.36,0.28l-0.05,0.55l0.59,0.75l-0.58,1.47l-1.66,-0.69l-0.13,0.47l0.39,0.94l1.07,0.44l-0.37,1.32l0.58,2.54l1.3,2.5l-0.7,0.35l-1.96,-0.86l-2.36,-0.36l-4.13,-1.76l-0.57,-1.63l-1.11,-1.55l-0.36,-2.86l-1.3,-1.03l-2.68,-3.2l-0.18,-0.96l-2.19,-3.83l-3.3,-3.22l-1.04,-0.43l-2.25,0.07l-1.89,-0.39l-1.64,0.74l-0.61,0.61l-0.81,2.36l-1.49,1.11l-3.68,-1.77l-2.02,-1.36l-1.01,-1.41l-0.3,-1.55l-1.27,-2.62l-6.36,-4.95l-1.58,-1.82l-9.2,-0.1l-0.4,0.4l-0.01,2.15l-13.99,0.03l-18.83,-6.51l0.31,-0.83l-0.42,-0.54l-11.88,1.0l-0.14,-0.52l-0.49,-0.26l-0.33,-2.13l-0.81,-1.22l-3.32,-2.59l-1.39,-0.06l-0.02,-0.56l-0.83,-1.09l-1.7,-0.05l-1.47,-0.47l-0.59,-0.81l-1.77,-0.95l-4.19,-0.28l-0.84,-0.52l-0.16,-3.08l-1.06,-0.64l-0.18,-1.14l-2.0,-1.55l-2.99,-3.75l-0.16,-1.06l0.6,-0.89l-0.05,-0.97l-0.68,-0.82l-1.32,-0.28l-1.0,-1.08l-0.52,-1.9l-0.0,-0.28l1.75,1.15l0.39,-0.59l-1.42,-2.56l3.89,-0.26l0.36,-0.35l-0.79,-0.59l-2.16,-0.25l-0.74,0.33l-1.08,-0.45l-0.93,0.58l-0.05,1.01l-1.32,-0.83l-0.02,-0.82l-1.1,-1.53l-2.94,-2.75l-0.58,-2.59l0.17,-1.5l-0.3,-1.11l-2.51,-2.91l-0.2,-1.18l0.86,-1.55l0.66,-4.41l-0.83,-2.11l0.12,-1.1l-0.77,-1.03l-0.25,-2.78l-0.63,-1.33l0.91,-2.99l0.68,-0.45l-0.16,-0.7l0.55,-1.26l1.12,-11.92l-0.09,-3.42l1.79,-0.24l1.06,0.48l0.86,-0.38l-0.2,-0.43l-1.45,-0.8l-2.57,-0.17l0.0,-0.28l0.5,-0.08l0.3,-1.51l-1.06,-1.14l1.07,-0.5l0.23,-0.41l-1.68,-0.81l-1.09,-3.83l-1.44,-1.99l-0.08,-1.99ZM600.53,354.34l0.0,-0.0l0.0,0.0l-0.0,0.0ZM565.54,376.21l1.34,0.45l1.32,1.05l-0.23,0.72l-0.34,-0.01l-2.09,-2.21ZM567.19,381.69l0.47,0.2l0.38,0.46l-0.19,-0.03l-0.65,-0.63ZM546.58,409.31l0.07,0.07l-0.02,0.1l-0.05,-0.17ZM330.49,318.83l-0.57,-0.55l1.23,-1.11l0.38,1.87l-1.04,-0.21ZM609.34,337.99l0.0,-0.0l0.0,0.0l-0.0,-0.0ZM580.89,360.6l2.41,-0.95l3.91,-0.3l0.1,0.27l-3.11,0.99l-2.68,0.36l-0.62,-0.36ZM530.89,327.73l0.08,-0.11l0.08,0.12l-0.17,-0.0ZM512.06,334.57l0.33,-0.38l-0.28,0.55l-0.04,-0.17ZM512.71,333.56l0.11,-0.21l0.12,-0.04l0.02,0.06l-0.24,0.19ZM505.9,320.05l0.92,-0.89l1.35,-0.49l0.06,0.31l-1.31,1.22l-0.1,-0.29l-0.92,0.14ZM99.81,185.08l0.47,0.25l1.71,-0.65l0.93,-0.84l1.72,-0.19l1.69,-1.48l1.69,-0.75l3.92,0.11l0.54,-0.43l-0.14,-0.62l-1.01,-0.61l1.53,-0.71l2.02,-0.26l2.97,-1.25l2.51,-0.2l0.47,0.44l-0.54,0.96l-0.02,0.78l-0.59,0.53l0.07,0.62l1.94,1.18l4.1,-0.12l1.54,0.4l4.04,-0.03l1.78,-1.88l2.33,0.69l0.21,-0.44l-0.51,-1.4l-1.87,-0.62l1.31,-0.11l2.59,1.04l2.27,-0.4l0.33,-0.38l0.0,-0.89l-0.84,-1.09l-1.59,-0.01l-1.28,-0.55l-2.69,0.98l-1.95,-1.09l-0.07,-0.52l1.16,-1.31l-0.03,-0.63l-0.65,-0.42l-1.38,-0.25l-1.83,0.22l0.01,-0.28l-0.66,-0.32l-0.75,0.62l-1.99,-0.05l-2.56,-0.61l-0.84,-0.7l-1.07,-2.33l-1.1,-1.32l-6.44,-3.84l-2.95,-0.99l-1.36,-1.04l-1.1,-0.35l0.99,-1.81l0.48,-2.5l5.5,0.0l4.72,-0.74l3.2,-1.91l1.87,-1.93l0.55,-2.25l0.66,-1.22l3.87,-3.74l0.79,0.16l5.1,-1.28l4.49,-2.62l-0.32,0.43l0.3,0.69l-0.3,0.69l0.36,0.56l0.7,0.01l0.53,0.48l0.34,-0.34l0.12,-1.58l2.04,-0.35l0.29,-0.43l-0.38,-0.35l-1.69,-0.05l-0.88,-0.77l1.26,-0.86l1.3,-0.59l0.1,0.79l0.7,0.2l1.33,-0.48l1.79,0.02l0.91,-0.39l2.84,-0.19l3.11,-1.74l3.35,-2.92l0.66,0.62l4.09,1.02l-0.02,0.48l-2.7,1.5l1.23,1.21l0.67,0.06l1.59,-0.59l1.99,-1.85l0.95,0.13l1.0,0.62l-0.36,0.47l0.12,0.64l3.05,0.88l1.67,-0.7l3.39,-0.49l2.19,0.5l1.51,-0.04l0.73,0.24l-0.76,0.65l-0.04,1.13l1.27,0.87l1.75,0.1l-0.33,0.28l0.23,0.7l3.68,0.31l2.9,-0.82l2.05,0.68l2.09,-0.69l1.53,-0.03l4.26,0.88l1.21,0.92l1.61,-0.35l1.3,0.46l1.01,0.81l3.28,0.43l1.7,-0.19l4.6,0.29l3.26,1.38l2.96,0.24l1.18,-0.53l3.37,-0.57l2.71,-0.1l2.39,0.69l2.15,1.51l3.01,0.89l1.58,1.09l1.74,-0.04l0.0,77.5l0.3,0.39l2.44,0.63l0.65,-0.52l2.14,0.78l1.79,-1.09l2.51,-0.1l-0.42,1.87l0.85,0.77l1.57,0.64l0.43,0.94l5.21,4.11l0.63,2.49l0.75,0.02l1.65,-1.05l-0.13,1.32l1.03,-0.02l1.22,0.49l0.72,0.66l0.18,0.83l1.07,0.06l0.68,1.12l-1.71,0.19l-0.72,0.59l-0.28,-0.1l-4.18,-2.27l-2.54,-2.74l-2.4,-1.35l-0.26,-0.41l-1.8,-0.51l-4.02,-1.92l1.05,-1.13l-0.23,-1.64l0.44,0.5l0.15,1.81l0.71,0.17l0.34,-1.56l0.94,0.01l0.33,-0.36l-2.46,-1.73l-0.88,-0.02l-1.98,1.58l-2.41,0.68l-2.05,-0.27l-2.34,-0.89l0.32,-0.8l-0.29,-0.75l-0.54,-0.36l-0.5,0.16l-0.09,0.63l-0.9,0.3l-4.41,-0.87l-2.08,-0.09l-5.47,0.66l-0.73,-1.04l-2.26,-0.55l-1.12,-0.6l0.97,-2.69l-0.72,-0.06l-2.25,1.91l-0.78,0.14l-1.79,-0.61l0.57,-0.89l-0.37,-0.53l-2.13,-0.06l-0.36,-0.56l-0.97,-0.05l-0.1,-0.54l-0.97,-0.43l0.1,-0.73l1.42,-0.41l0.29,-0.37l-0.27,-0.39l-1.68,-0.14l-1.98,1.13l-1.16,-0.11l-0.8,0.59l-1.34,-0.47l-0.39,0.6l-0.82,0.12l-0.23,-0.41l1.1,-1.52l-0.36,-0.63l-1.6,1.06l-1.08,0.01l-0.79,0.42l-0.22,0.32l0.19,0.56l0.4,0.04l-0.22,0.56l-0.82,0.07l-0.34,0.38l0.17,0.53l1.32,0.72l-0.11,0.34l-0.85,0.05l-0.66,0.45l-0.22,0.26l0.2,0.64l2.85,-0.62l0.28,0.24l-1.03,0.56l-0.16,1.68l-0.51,0.28l-0.51,0.95l-1.78,0.26l-1.63,-0.61l-0.54,0.2l-0.39,-0.59l-0.49,-0.15l-0.97,1.8l-0.8,-0.26l-0.54,1.05l-0.94,-0.04l0.06,0.82l-0.87,0.69l-0.62,-0.1l-0.79,0.34l-0.58,-0.2l-0.62,1.15l-1.26,1.17l-0.93,-0.32l-0.47,0.19l-0.02,0.32l-0.63,-0.1l-1.3,0.43l-1.19,-0.5l1.03,-0.8l1.61,-0.47l1.89,-2.03l0.0,-0.46l-0.42,-0.28l-2.04,1.04l-1.57,-0.61l0.52,-1.35l1.77,-2.29l0.44,-1.6l-0.22,-1.78l4.36,-2.11l1.6,0.7l2.38,-0.15l2.88,0.59l0.41,-0.29l-0.67,-0.96l-2.2,-0.42l-1.81,-0.93l1.15,-1.25l2.01,-1.01l0.23,-0.44l-0.37,-0.32l-1.58,0.09l-1.19,0.63l-0.71,0.99l-2.22,0.13l-0.95,-0.31l-3.49,2.03l-1.69,0.54l-1.07,1.06l0.01,0.75l-2.43,1.7l-0.32,0.76l0.14,0.44l-1.11,0.76l-0.74,0.18l-1.02,-0.43l-0.87,0.16l0.12,0.62l1.37,0.82l0.48,0.64l-0.5,0.66l-2.34,0.63l0.15,0.69l0.52,0.28l-0.79,0.27l-0.29,-0.46l-0.87,0.08l-1.09,0.74l0.07,0.42l-0.51,0.53l-1.62,1.04l-0.64,1.79l0.33,0.66l2.56,0.71l1.42,0.82l-1.29,1.35l-1.23,0.49l-0.87,0.75l-0.34,0.93l-0.93,0.41l-0.2,0.53l0.21,0.6l-1.39,0.23l-0.36,0.5l-1.82,0.25l-0.91,1.08l-2.22,1.07l-1.03,1.24l-1.1,0.17l-0.38,0.57l-0.72,0.07l-1.12,0.71l-0.39,0.64l0.4,0.72l-1.01,1.11l-0.62,0.07l-1.92,1.33l-1.56,0.28l-0.72,1.12l-1.44,-0.08l-0.94,0.48l-0.18,0.51l-1.65,0.52l-0.92,1.1l0.2,0.53l1.01,0.25l-0.39,0.46l-0.63,-0.54l-1.25,1.47l-3.18,1.01l-0.73,0.51l-0.6,-0.51l-0.61,0.07l-3.02,1.5l-0.53,0.61l-0.61,-0.1l-0.67,0.44l-0.79,-0.14l-1.34,0.85l-1.05,0.09l0.28,-0.5l0.66,0.09l0.42,-0.59l-0.19,-0.25l-0.86,-0.43l-1.07,-0.02l-0.88,0.55l-0.44,1.22l-1.17,1.32l-1.58,0.92l-0.72,-1.22l-0.68,-0.15l2.61,-2.67l2.26,-1.29l1.98,-0.66l0.41,0.35l0.58,-0.02l1.27,1.41l0.7,-0.12l0.14,-0.68l2.0,0.47l0.41,-0.39l-0.04,-0.46l-1.27,-0.97l1.09,-1.96l2.54,-1.72l2.52,-0.91l1.46,-1.2l1.62,0.43l0.34,-0.55l0.0,-1.45l1.62,-1.75l2.32,-1.63l1.37,0.35l0.61,-0.2l0.17,-0.59l-1.12,-1.08l0.43,-2.63l0.19,-0.45l1.59,-0.31l0.35,-0.35l-0.25,-0.42l-1.32,-0.39l-0.11,-0.83l1.34,-1.41l1.26,-0.69l-0.06,-0.7l1.08,-2.48l-0.16,-0.51l-0.53,0.11l-1.59,1.82l-5.12,1.91l-1.2,-1.43l0.09,-0.44l0.41,-0.27l1.22,0.23l0.4,-0.28l-0.17,-0.46l-1.82,-0.88l-0.72,0.12l-0.82,1.01l-0.82,-0.2l-0.42,2.15l0.44,1.6l-0.44,0.39l-3.5,-3.66l-0.75,0.06l-0.73,0.51l-2.47,-1.68l-2.3,1.32l-2.09,0.54l-0.87,1.03l-2.03,0.33l0.75,-0.62l-0.19,-1.8l0.71,-1.03l-1.72,-0.31l-0.15,-0.75l0.72,-1.08l0.21,-1.49l-2.11,-4.47l-0.79,-0.77l1.23,-2.15l0.89,-0.49l0.01,-0.71l-1.5,0.1l-2.66,3.1l0.02,0.73l0.58,0.29l-0.09,1.06l-0.82,0.06l-2.35,1.06l-3.31,0.29l-0.91,-0.52l-0.12,-0.84l-1.69,-1.15l-0.94,-1.14l-1.91,-0.77l-0.1,-0.86l-0.93,-0.22l1.68,-1.95l2.42,0.74l-0.3,1.35l0.45,0.12l1.89,-1.29l0.95,1.18l0.51,0.1l1.15,-0.68l0.55,-0.72l-0.09,-0.57l-0.88,-0.47l0.04,-0.65l-0.88,-0.55l-1.56,0.77l-5.11,-0.44l0.91,-0.52l0.24,-0.48l-0.37,-0.47l-0.98,0.1l0.03,-0.29l-0.76,-0.3l-0.26,-0.76l-0.75,0.22l-0.31,1.14l-0.32,-0.0l-0.5,-1.28l-0.96,-0.49l0.35,-0.64l-0.23,-0.83l-0.84,-0.28l-0.68,0.24l1.67,-0.7l-0.14,-0.66l-0.83,-0.32l1.78,-0.28l0.19,-0.68l-0.47,-0.54l0.07,-0.81l2.52,-2.85l0.74,-0.36l0.94,0.36l0.59,-0.22l-0.19,-0.67l0.56,-0.24l0.58,-0.97l-0.57,-0.43l-0.62,0.34l0.11,-1.53l0.42,-0.57l1.71,-0.37l-0.1,-0.6l-0.47,-0.36l0.24,-0.25l2.09,-0.24l1.3,0.7l-0.5,0.39l0.01,0.55l0.59,0.14l0.98,-0.6l1.18,0.43l1.82,-0.58l1.67,-1.22l1.8,-2.13l1.35,0.66l3.67,-0.36l1.05,-0.59l1.42,-1.41l0.33,-1.13l-1.16,-3.68l-1.93,-1.54l1.41,-0.11l0.73,-0.42l0.64,-1.0l-0.1,-0.97l-1.13,-1.33l-0.94,-0.3l-1.55,1.07l-1.66,-0.05l-0.49,0.53l-1.54,0.54l-2.74,2.39l-0.42,-1.06l-1.67,-1.12l-0.97,0.39l0.07,0.74l-1.82,-0.66l-3.13,0.02l-1.91,0.59l-0.61,-0.1l-0.93,0.59l-5.84,-1.05l-1.43,-0.96l0.37,-0.68l-0.31,-1.19l-1.56,-0.99l0.91,-0.13l0.62,-0.82l1.77,-0.27l-0.28,-0.71l-6.51,-1.21l-2.87,-1.18l-0.17,-0.49ZM131.96,178.57l-0.62,0.13l-0.11,-0.08l0.08,-0.39l0.65,0.34ZM129.77,176.2l-1.57,-0.58l-0.42,-0.77l1.02,-0.09l1.03,1.14l-0.05,0.31ZM126.91,265.27l-0.23,1.67l-0.56,0.25l-0.57,-0.56l-0.83,-0.24l-0.47,0.31l0.07,0.71l-0.19,0.28l-0.01,-1.02l0.71,-0.43l1.02,-0.0l1.07,-0.98ZM258.69,237.55l1.95,-0.47l0.57,-0.96l0.06,-1.14l0.94,-0.43l0.07,-0.83l3.61,-1.24l1.88,1.41l-0.11,1.0l0.77,1.29l2.52,1.51l0.74,1.4l2.46,1.48l1.96,2.02l0.03,0.67l5.91,8.15l-0.41,0.66l0.24,0.6l1.16,0.29l-0.25,0.84l0.24,0.49l0.88,0.34l0.3,1.26l0.42,0.37l1.16,-0.06l2.42,1.35l1.71,0.46l1.29,0.78l0.51,0.83l1.56,0.18l0.15,0.98l-0.63,1.85l0.56,2.42l-0.92,1.9l-1.5,1.44l-1.05,-0.13l-0.86,-2.16l1.22,-0.56l0.29,-0.5l-0.57,-0.48l-0.34,-2.73l-1.04,-1.57l0.41,-1.02l-0.46,-0.11l-3.87,1.54l-0.91,2.35l-0.45,-0.22l-0.26,-0.66l1.76,-2.77l1.38,-0.36l0.27,-0.42l-0.35,-0.35l-1.53,-0.19l-0.6,-0.9l-0.87,-0.36l-0.83,-1.4l-0.56,-0.22l-0.33,-0.97l-1.39,-0.79l-0.08,-1.11l-3.2,-0.96l0.09,-1.05l-0.84,-2.02l1.77,0.89l0.53,-0.09l0.02,-0.66l-1.94,-1.57l1.5,-0.03l-0.1,-0.76l-1.96,-0.36l-0.67,0.6l-1.39,-1.53l-0.03,-1.27l0.84,-1.67l-0.42,-0.55l-0.61,0.3l-1.1,1.75l-2.52,-1.43l-1.05,-2.29l-0.72,-0.55l-1.28,-4.45l-0.65,0.14l-0.67,2.01l0.55,0.8l1.62,5.81l-0.62,-0.11l-1.42,-1.16l-1.42,0.07l0.15,-1.09l-0.85,-1.46l0.84,-0.44l0.21,-0.43l-0.36,-0.32l-0.87,0.06l-0.57,-1.11l-0.64,0.29l0.06,1.73l-1.69,-1.29l-1.76,-0.53ZM285.0,265.19l-0.1,-0.78l1.01,-1.3l0.1,-1.53l1.43,-0.7l1.16,1.68l-0.52,2.55l-0.36,0.23l-0.75,-0.38l-0.07,-0.78l-0.72,-0.03l-1.18,1.04ZM286.27,266.56l0.09,-0.38l-0.06,-0.26l0.39,0.85l-0.41,-0.22ZM286.98,267.33l0.17,0.3l-0.22,-0.01l0.05,-0.29ZM275.68,261.7l0.04,-0.0l0.35,0.19l-0.18,0.01l-0.22,-0.2ZM276.58,261.93l0.6,-0.38l0.57,-0.95l-0.52,-1.01l-1.4,0.11l0.43,-0.76l-0.32,-0.84l1.45,0.1l0.56,1.63l1.67,0.66l1.03,0.99l0.59,1.2l-0.35,-0.01l-0.67,0.92l0.14,0.69l1.1,-0.03l1.02,0.83l-0.19,0.77l1.11,0.22l-0.11,2.84l-1.09,-1.3l-1.09,-0.39l-0.45,-1.29l-0.56,-0.04l-0.31,0.43l-1.08,-1.32l0.47,-0.38l-0.58,-1.05l0.03,-0.85l-1.31,-0.12l-0.73,-0.65ZM280.54,258.81l1.39,-1.79l1.0,1.39l-0.27,1.62l-0.68,0.12l-0.09,-0.57l-1.27,-0.38l-0.08,-0.39ZM276.74,265.42l0.24,-0.06l0.29,0.23l-0.23,-0.04l-0.31,-0.12ZM277.71,265.94l0.52,0.7l0.14,0.61l-0.46,-0.77l-0.2,-0.55ZM278.46,267.38l0.07,0.09l0.3,0.55l-0.25,-0.35l-0.13,-0.28ZM279.22,268.42l0.87,-0.18l-0.08,0.6l-0.23,0.13l-0.56,-0.54ZM278.87,257.49l0.32,-0.26l0.85,0.03l-0.07,0.49l-0.35,0.18l-0.74,-0.44ZM279.27,256.0l0.38,-0.91l0.64,0.64l-0.67,0.28l-0.35,-0.01ZM274.16,252.77l3.87,0.62l0.4,0.45l-0.02,1.22l-1.3,-1.33l-0.59,0.26l0.9,2.33l-1.72,0.04l-0.26,-2.27l-1.29,-1.32ZM275.48,263.85l0.19,0.04l0.47,0.03l-0.41,0.53l-0.26,-0.6ZM272.76,258.99l0.09,-1.62l0.4,-0.22l0.12,-0.6l-0.91,-0.82l-0.56,-1.06l0.06,-0.47l0.73,-0.44l0.85,0.95l0.62,0.16l0.23,0.49l-0.55,0.46l-0.45,3.0l-0.62,0.17ZM269.79,244.57l1.99,0.27l-0.26,0.42l0.22,1.2l1.68,2.24l0.04,1.38l-0.81,0.33l-0.78,1.07l-0.96,0.62l-0.18,-0.56l0.67,-2.22l-0.91,-1.32l-0.7,-3.43ZM264.84,252.18l-0.27,-1.27l0.91,-0.4l0.71,-1.18l2.01,1.19l1.65,4.18l-0.02,3.29l-0.97,-1.71l0.47,-1.25l-0.94,-0.11l-0.41,-0.29l-0.1,-0.68l-0.86,-0.09l0.68,-1.38l-0.73,-0.48l-0.23,-0.8l-0.41,-0.45l-0.6,-0.08l-0.9,1.52ZM261.72,244.6l0.54,0.46l0.66,-0.3l0.05,-0.34l1.32,-0.49l0.66,0.62l-0.48,0.84l0.58,0.51l1.53,-0.93l1.54,0.47l0.06,1.07l-1.21,-0.0l-0.55,0.35l0.01,0.68l1.83,0.37l0.2,0.92l-2.95,-1.28l-0.66,0.45l-0.19,1.33l-0.73,-0.13l-0.84,-1.63l-2.31,-1.95l0.18,-0.54l0.74,-0.49ZM208.99,227.43l0.32,-0.25l0.78,0.33l-0.85,0.37l-0.26,-0.45ZM203.17,231.47l1.01,-1.0l0.66,-0.42l-0.7,0.99l-0.96,0.43ZM205.79,229.04l0.61,-0.95l0.34,0.18l-0.95,0.77ZM202.92,228.29l0.13,-0.2l0.12,-0.48l0.06,0.13l-0.25,0.63l-0.06,-0.08ZM201.4,229.75l0.03,-0.01l-0.02,0.01l-0.02,-0.0ZM175.19,244.72l1.4,-1.03l0.98,0.13l0.36,-0.39l-0.12,-0.81l0.25,-0.08l1.16,0.65l0.72,-0.26l1.17,0.65l-0.23,0.26l-0.76,-0.62l-0.64,0.44l-0.11,0.49l-1.08,-0.25l-0.58,0.81l-1.04,0.42l-1.49,-0.41ZM168.94,251.96l-0.92,-1.76l0.72,-1.11l1.22,-0.55l0.86,0.01l1.15,1.97l0.71,0.46l0.48,-0.12l-0.58,-2.33l0.63,-0.59l-1.03,-0.91l0.19,-0.23l1.49,1.08l0.69,-0.53l1.05,-0.17l0.28,-0.98l0.61,0.15l0.02,0.9l0.49,0.35l1.84,-0.56l-0.15,0.92l1.11,0.69l-0.48,0.48l-2.71,-0.34l-0.49,0.32l0.12,0.7l1.22,0.29l-2.7,0.75l-2.55,1.63l-0.78,-0.33l-0.48,-0.66l-1.46,0.02l-0.58,0.47ZM168.99,252.11l0.34,0.43l0.53,0.07l-0.11,0.45l-0.68,-0.68l-0.08,-0.26ZM172.59,252.88l0.13,0.05l-0.15,0.19l0.01,-0.24ZM172.34,253.43l-0.11,0.14l-0.15,0.08l0.26,-0.23ZM174.9,252.33l0.03,-0.27l0.32,-0.15l-0.35,0.42ZM162.0,476.41l2.89,1.32l0.52,1.03l1.24,1.17l-0.94,0.68l-1.37,0.36l-1.15,0.8l-0.4,0.68l-0.86,-0.52l0.05,-1.42l-0.72,-1.78l1.03,-1.21l-0.28,-1.11ZM157.93,472.28l0.09,0.07l0.31,0.38l-0.45,-0.35l0.05,-0.1ZM158.79,472.87l0.75,-0.17l1.0,0.67l-1.39,0.38l-0.37,-0.88ZM156.39,472.94l0.0,0.0l-0.0,0.0l-0.0,-0.01ZM149.99,469.25l0.86,-0.5l0.49,0.96l0.64,0.47l-1.17,-0.55l-0.3,0.32l-0.52,-0.7ZM142.16,466.42l0.69,-0.53l0.91,0.11l-0.44,0.89l-1.16,-0.47ZM140.51,266.38l0.09,-0.12l0.02,-0.0l-0.09,0.11l-0.03,0.01ZM136.74,264.95l0.58,0.44l0.16,0.32l-0.75,-0.07l0.01,-0.69ZM135.34,240.76l0.42,-0.41l0.25,-0.09l-0.38,0.6l-0.29,-0.1ZM122.47,267.59l0.61,1.3l-0.73,0.57l-2.68,0.09l-2.03,1.38l-1.56,-0.05l-0.13,-0.58l0.85,-0.57l1.05,-1.44l1.1,0.01l2.23,-1.0l0.91,-0.01l0.38,0.3ZM103.3,229.09l2.32,0.09l0.71,-0.79l2.59,-0.58l0.74,0.47l1.36,0.05l-0.03,1.53l0.56,0.91l-1.51,0.13l-1.13,0.7l-4.64,-1.6l-0.98,-0.92ZM109.88,273.55l0.27,-0.32l0.5,0.19l-0.23,0.11l-0.54,0.01ZM101.42,279.05l0.19,-0.06l0.45,-0.04l-0.56,0.13l-0.08,-0.03ZM104.34,277.95l0.65,-1.12l0.97,0.33l0.38,-0.49l0.04,-0.66l-1.68,-0.5l-0.03,-0.27l1.68,-0.54l0.32,0.88l0.38,0.09l-0.33,0.71l0.34,0.32l-1.32,0.95l-1.4,0.31ZM95.96,281.16l0.47,-1.15l1.1,-0.14l-0.62,0.74l-0.96,0.54ZM98.16,279.26l-0.1,-0.69l0.39,-0.43l0.93,-0.34l0.8,0.21l-2.02,1.25ZM81.67,202.06l0.43,0.35l2.12,0.24l3.04,-0.91l1.29,0.53l0.72,1.13l1.92,0.48l0.43,0.47l3.9,0.43l-0.31,0.41l-2.74,0.09l-1.06,0.96l-0.18,0.59l-0.64,-1.17l-1.93,-0.65l-1.21,-1.2l-2.21,-0.79l-1.25,-0.03l-1.8,0.87l-0.91,-0.07l-0.63,-0.45l-0.02,-0.94l0.35,-0.83l0.67,0.5ZM74.39,226.48l-0.16,-0.06l0.01,-0.05l0.08,-0.04l0.06,0.15ZM66.52,287.35l1.04,-0.28l0.21,-0.15l0.01,0.11l-1.27,0.32ZM67.96,286.34l-0.26,-0.44l0.8,0.03l-0.05,0.21l-0.49,0.2ZM54.59,290.07l0.81,-0.77l0.42,0.4l-0.89,0.5l-0.34,-0.13ZM55.41,288.96l-0.0,-0.03l0.02,-0.05l-0.02,0.08ZM55.43,288.86l0.07,-0.19l0.04,0.0l-0.11,0.19ZM48.47,289.12l0.89,0.46l-0.35,0.6l0.03,-0.51l-0.57,-0.54ZM36.26,288.51l0.19,-0.11l0.18,0.1l-0.13,0.05l-0.24,-0.05ZM5.93,285.16l0.05,-0.02l-0.01,0.05l-0.04,-0.02ZM1.03,281.63l2.02,0.1l0.77,0.4l-1.6,0.43l-1.19,-0.92Z\",\n            name: \"United States\"\n          },\n          GL: {\n            path: \"M598.7,69.97l1.63,-0.74l0.09,-0.71l-1.9,-0.19l-1.15,0.49l-1.8,0.08l-5.77,-1.76l-3.11,-2.09l1.12,-1.04l-0.56,-1.19l1.29,-1.04l3.77,-1.32l3.78,-0.16l4.75,-1.56l5.05,-0.91l0.6,-0.42l-0.3,-0.74l2.82,-0.87l5.16,-0.96l6.51,0.06l1.49,-0.7l2.14,-1.96l0.73,-1.18l2.47,-6.42l2.94,-1.06l0.21,-0.66l-1.67,-0.63l-2.76,0.69l-2.12,0.06l-2.11,0.62l-3.18,-0.65l-2.01,0.04l-0.89,-0.44l-0.59,-0.94l0.69,-1.6l3.31,-2.23l3.77,-1.23l5.68,-3.71l3.89,-0.67l1.26,0.46l1.93,1.51l0.52,0.02l0.23,-0.58l-0.99,-2.17l0.07,-0.44l0.93,-0.64l3.31,0.18l3.37,0.94l1.28,-0.24l1.56,-1.92l0.38,-1.53l-0.56,-4.14l1.67,-1.2l2.01,-0.77l1.62,-0.2l4.06,0.65l4.29,2.36l4.71,1.83l3.29,1.91l1.42,0.28l0.37,-0.6l-1.4,-1.33l-5.09,-2.47l-4.9,-3.16l-1.73,-0.58l2.14,-0.82l5.07,-0.93l5.72,-0.73l5.34,-0.23l1.11,-0.68l3.92,-0.63l2.72,0.84l1.47,1.31l0.4,1.12l-0.04,4.69l0.24,0.49l0.56,0.12l2.13,-1.82l0.66,-1.07l0.6,-2.09l-0.89,-1.25l-0.04,-1.4l0.29,-0.57l0.91,0.0l5.13,2.98l2.08,0.67l2.29,1.58l5.5,0.1l1.81,-0.34l0.09,-0.67l-0.78,-0.67l-3.61,-1.87l-1.55,-1.38l-1.22,-2.22l4.34,-0.06l5.94,0.83l7.64,2.88l3.79,0.96l6.74,3.3l3.0,0.64l0.89,-0.47l0.57,-0.76l-0.53,-3.14l0.41,-1.71l1.08,-0.67l0.53,-1.07l-0.6,-1.5l-1.34,-0.93l-4.4,-2.03l1.74,-0.26l12.31,0.55l4.03,0.77l2.65,-0.31l0.35,-0.44l-0.17,-0.8l-0.6,-0.49l-17.03,-1.33l-6.91,0.32l-1.23,-0.83l1.08,-0.98l3.89,0.54l1.46,-0.76l2.3,-0.63l2.38,-0.24l5.1,-1.38l4.61,0.3l2.21,1.07l2.67,0.61l3.44,-2.28l1.54,-0.67l2.25,0.4l2.85,1.2l1.98,0.38l3.27,2.21l0.85,0.07l0.93,-0.77l0.49,-1.98l-0.46,-0.42l-2.74,-0.92l-0.85,-0.75l0.3,-0.37l2.85,-0.11l1.76,-1.1l4.75,0.4l0.59,-0.18l0.41,-0.72l5.83,-0.02l3.96,-0.42l2.67,0.54l1.61,-0.01l4.38,-0.91l11.61,0.08l3.8,0.37l4.86,0.77l2.56,0.89l7.47,0.77l5.3,1.07l-20.87,0.96l-9.71,0.92l-0.39,0.34l-0.2,1.3l0.37,0.46l1.07,0.07l9.55,-1.69l9.21,0.6l5.95,-0.04l9.4,-1.15l3.23,3.47l2.88,-0.0l1.23,0.83l1.6,-0.11l4.43,0.51l4.11,1.3l0.61,0.73l-2.1,1.33l-2.39,0.96l-3.25,0.74l-3.77,0.47l-29.21,1.57l-1.11,0.4l-0.79,1.11l0.35,1.56l1.69,0.47l8.79,-1.34l13.62,0.59l2.69,1.38l1.85,2.32l3.36,-0.5l0.85,-0.43l1.99,-2.93l2.63,-0.48l6.03,-0.2l0.71,0.86l0.21,1.23l-0.14,2.04l-0.39,1.05l-2.41,2.95l-6.98,5.17l-0.63,0.95l-0.1,0.89l0.72,0.54l1.12,-0.74l0.71,-0.91l3.71,-1.27l3.28,-1.91l2.9,-1.21l4.47,-3.5l1.85,-0.86l1.66,-0.0l0.29,1.25l0.35,0.31l3.57,0.18l5.27,1.2l1.28,-0.45l4.85,-3.92l3.97,-0.98l8.88,0.58l6.46,1.3l4.69,2.28l-3.7,1.5l-1.25,0.96l-4.94,2.29l-5.1,0.54l-0.43,0.38l0.07,0.57l1.16,1.03l-1.09,0.77l-3.48,0.49l-1.82,0.85l-4.02,0.03l-2.26,0.91l-0.11,0.68l0.88,0.74l3.04,0.95l-2.44,1.43l-2.5,0.69l-5.4,0.22l-5.75,-1.04l-1.23,0.04l-2.48,1.42l-1.51,1.63l-0.23,2.05l0.7,1.23l1.39,0.42l2.23,-0.0l0.26,0.43l-0.57,2.09l-0.08,1.72l0.32,0.33l1.17,0.2l0.71,1.1l-3.65,1.23l-0.91,1.82l-0.66,0.63l-2.82,0.42l-2.76,1.68l-0.22,0.44l0.2,0.44l0.75,0.5l-1.21,1.96l-1.01,3.34l-1.79,3.12l0.05,1.12l0.92,0.9l0.43,0.05l1.16,-0.62l1.21,-1.57l1.18,-0.61l2.59,0.52l4.13,1.53l0.77,0.82l-0.59,0.07l-3.48,-1.3l-2.71,0.79l-0.2,0.58l1.11,1.87l1.46,1.05l2.13,0.38l2.56,1.18l2.26,-0.6l2.06,0.18l0.57,1.06l-0.21,2.11l-1.04,1.41l-6.33,-1.61l-3.29,-0.07l-2.33,0.36l-0.38,0.6l-3.08,1.52l-2.67,-1.1l-0.92,-0.03l-1.33,0.75l-0.47,0.63l0.18,0.55l0.91,0.64l2.74,0.51l0.62,1.76l1.49,1.45l1.76,0.09l1.45,-0.35l1.66,0.65l2.24,0.2l0.93,0.78l-0.33,1.41l2.24,2.42l0.71,3.71l-0.04,0.81l-0.6,0.95l-0.98,0.19l-2.02,-1.51l-1.66,-0.13l-2.32,1.63l-1.67,0.24l-2.01,1.11l-2.79,-0.94l-0.5,0.16l0.1,0.52l2.48,1.6l1.08,-0.0l2.41,-1.0l0.65,0.05l0.63,1.44l-0.04,0.68l-1.25,1.67l0.32,0.39l0.9,0.18l1.6,-1.01l1.06,-2.53l0.74,-0.32l0.91,0.35l2.19,3.44l1.31,0.85l0.16,1.15l-0.45,0.88l-1.23,0.22l-3.12,-0.25l-0.4,0.47l0.07,0.44l-1.79,0.56l-2.33,0.25l-3.68,-1.13l0.81,-2.1l-0.12,-0.41l-1.36,-0.96l-0.42,0.49l0.14,1.41l-1.86,1.02l0.6,1.12l-0.69,1.38l1.22,1.12l5.8,0.53l3.14,0.87l-0.79,2.9l-5.04,0.49l-3.27,1.58l-0.68,0.01l-4.41,-1.23l-2.62,-1.39l-1.98,-2.14l-0.57,-0.01l-1.42,1.28l-0.91,0.21l-4.2,-2.44l-0.54,0.25l0.08,0.52l3.35,2.7l-2.16,0.71l-1.83,1.36l-1.83,0.33l-6.03,-1.77l-0.47,0.14l0.02,0.49l0.52,0.61l2.9,1.0l-0.46,0.34l-2.63,-0.06l-1.67,0.41l-0.18,0.57l0.22,0.35l1.22,0.54l0.96,-0.64l2.2,0.1l6.9,-1.51l0.81,-0.89l0.92,-0.29l2.33,-0.25l3.35,0.23l3.3,1.97l1.26,0.24l0.78,0.85l3.95,1.49l0.14,2.5l-0.31,2.02l-0.86,0.43l-0.22,0.43l0.06,1.57l-8.56,-3.46l-1.38,-1.7l-1.7,-3.6l-2.02,0.26l-0.91,0.32l-0.53,0.57l-4.75,1.23l-2.31,0.77l-0.27,0.37l0.25,0.38l1.59,0.44l7.81,-2.18l0.59,2.64l-0.16,0.47l-2.47,1.05l-0.07,0.62l0.44,0.44l2.87,-0.63l0.85,0.71l4.2,1.98l5.47,2.12l0.83,1.44l1.5,0.21l-2.37,1.69l0.04,1.46l0.32,1.27l0.38,0.3l0.39,-0.28l0.53,-1.55l1.46,-0.58l0.69,0.18l0.35,2.24l-0.01,3.23l0.7,3.0l-1.62,0.44l-1.9,-0.19l-0.27,-3.28l-0.69,-0.26l-0.56,0.73l-0.62,3.04l-2.98,-0.1l-2.25,-0.91l-0.83,-0.78l-1.24,-2.4l-0.24,-1.25l-0.67,-1.05l-1.0,-0.76l-6.82,-3.3l-4.19,-0.13l-1.73,-0.44l-0.94,0.32l-0.16,0.5l0.59,0.89l6.35,0.48l0.52,0.79l0.13,0.79l-0.27,0.55l-1.98,1.16l-2.75,0.9l-3.05,-0.02l-2.87,-0.46l-2.72,0.1l-0.13,0.71l1.95,0.87l-0.37,1.32l-1.61,1.03l-3.11,1.01l-0.44,0.68l0.39,0.26l2.65,-0.3l2.75,0.69l6.49,-0.68l0.62,0.23l-3.16,1.04l-1.87,1.23l-0.49,1.06l0.27,0.53l1.25,0.33l0.91,-0.49l1.22,-1.45l1.24,-0.33l1.65,0.18l1.44,-0.23l3.13,-0.98l3.91,0.52l5.57,1.44l6.94,0.13l-0.77,0.51l-3.1,0.8l-0.28,0.16l-0.02,0.77l-3.84,0.52l-0.13,0.72l0.58,0.69l-0.74,0.19l-1.88,-0.24l-0.14,1.37l-2.8,1.28l-1.69,0.31l-0.16,0.64l0.36,0.4l-2.19,1.0l-0.71,1.32l-3.85,1.84l-9.64,2.05l-4.52,1.3l-3.17,-0.11l-1.74,0.99l-2.42,-0.46l-0.49,0.46l0.52,0.82l-1.45,0.37l-2.1,-0.55l-4.63,-2.72l-0.57,0.42l0.67,1.38l-0.82,0.34l0.99,1.99l-0.83,0.75l-3.9,2.06l-1.23,1.87l-0.88,0.72l-0.11,1.0l-2.89,4.51l-0.58,0.64l-1.04,0.15l-1.02,1.61l-2.61,1.46l-1.03,-0.08l-2.18,-1.45l-0.63,0.37l0.03,0.3l1.09,2.07l-0.68,0.51l-2.33,1.58l-0.17,-0.75l-0.71,-0.41l-0.6,0.38l-0.49,1.37l-0.66,0.18l-1.44,-0.74l-1.44,0.95l-0.34,0.85l-1.57,0.42l-0.74,-0.45l0.92,-1.12l0.06,-1.04l2.62,-3.11l-0.38,-0.42l-2.63,-0.52l-1.93,-0.01l-0.31,0.32l0.18,0.41l1.52,0.83l-0.73,0.77l-0.65,1.62l-1.65,-0.75l-0.44,0.11l-0.05,0.45l0.54,0.9l1.03,0.63l0.0,0.51l-1.89,0.63l-7.78,0.57l-0.38,0.28l0.12,0.77l2.69,1.26l-1.87,1.53l-0.99,0.38l-2.0,-0.47l-2.16,0.06l-0.46,0.38l-0.02,0.54l0.65,1.52l0.42,0.28l1.43,-0.32l0.88,1.67l1.2,1.34l-1.19,0.85l-1.04,0.11l-0.5,0.87l-1.88,-0.47l-2.06,-0.14l-0.41,0.3l0.21,0.46l2.77,1.43l1.89,-0.12l-0.12,1.49l0.46,1.34l-0.92,0.66l-0.18,0.78l-0.98,0.06l-0.43,0.38l-0.52,1.46l0.14,0.44l-1.08,1.33l-2.06,-0.03l-1.7,-1.09l-0.52,0.51l0.58,0.95l2.07,1.04l-1.12,1.27l-0.67,0.32l-3.97,-0.25l-0.81,0.34l0.7,0.84l3.2,0.81l-0.72,2.84l0.87,1.41l0.14,0.93l-0.41,0.39l-1.35,0.14l-0.5,0.42l0.21,0.67l0.92,0.24l-1.53,4.34l-0.36,2.25l-1.49,1.67l-1.27,0.02l-2.35,-0.58l-1.04,0.25l0.07,0.7l0.55,0.35l3.06,0.93l0.35,2.12l-0.75,0.76l-1.22,-0.05l-1.72,-0.66l-0.51,0.52l0.96,0.9l-0.39,0.15l-0.51,-0.06l-0.3,-0.76l-1.38,0.18l-0.12,-0.39l1.33,-1.63l-0.32,-0.72l-0.52,-0.01l-1.73,1.86l-3.48,-1.27l0.04,-0.68l1.24,-0.35l1.24,-0.94l0.64,-1.04l-0.14,-0.56l-0.52,-0.04l-1.63,1.18l-1.22,0.41l-3.2,-1.21l-0.36,-0.92l1.45,-3.05l-0.12,-0.52l-0.48,-0.25l-0.59,0.25l-0.27,0.75l-2.89,1.04l-1.43,1.06l-1.68,0.25l-1.74,-0.48l-1.12,0.14l-0.41,0.47l0.08,0.34l-1.46,-0.32l2.11,-1.05l-0.08,-0.73l-2.85,-0.1l-0.37,-1.3l-1.07,-0.56l-1.42,-0.2l-0.57,-1.72l-0.97,-0.4l0.25,-0.57l-0.9,-1.63l2.5,-1.22l0.29,-0.39l-0.3,-0.38l-1.68,-0.26l-1.22,0.81l-1.1,0.07l-0.01,-0.61l0.51,-0.56l-0.12,-0.63l-2.0,-0.73l-1.57,-1.0l0.07,-1.79l2.35,-2.28l0.1,-0.51l-0.48,-0.18l-1.53,0.54l-1.2,1.09l-0.55,-0.8l-1.44,-1.08l-3.63,-5.13l0.39,-1.05l-0.26,-0.72l3.83,-1.03l1.75,-0.16l0.66,-0.46l0.1,-0.47l-0.99,-0.16l0.11,-0.38l-0.5,-0.49l-1.49,0.75l-4.06,0.99l-0.36,-0.37l1.4,-1.96l0.74,-0.68l1.77,0.03l0.46,-0.49l-0.08,-0.32l1.44,-0.29l0.49,0.06l0.87,1.41l0.95,0.52l0.57,-0.39l-0.72,-2.4l-0.98,-0.67l-1.14,0.04l-1.88,-3.34l-0.47,-0.25l-0.46,0.5l1.02,3.39l-1.31,0.68l0.16,-0.62l-0.53,-0.47l-0.59,0.23l-0.67,0.53l-2.35,3.81l-0.59,-0.71l-0.12,-2.7l-0.87,-3.91l-1.01,-0.64l-0.32,-0.63l1.57,-0.73l2.79,-2.22l2.57,-0.3l0.37,-0.62l-0.7,-0.47l-3.04,0.54l-3.19,2.19l-0.77,-0.0l-1.31,-1.08l-1.79,0.14l-0.14,-1.21l0.62,-1.65l-0.37,-0.54l-0.79,-0.21l6.36,-3.55l0.92,-1.04l1.86,-0.89l1.62,-1.43l-0.25,-0.56l-0.58,-0.05l-8.95,5.88l-2.44,0.46l-0.05,-1.84l1.02,-1.79l1.41,-0.81l0.45,-0.61l2.97,-0.28l0.37,-0.26l-0.03,-0.65l-1.04,-0.3l-4.55,-0.15l-1.01,-0.43l-0.84,-1.07l0.39,-2.11l4.03,-2.23l2.16,-0.6l3.03,0.85l3.64,0.22l2.39,1.09l0.77,-0.15l0.22,-0.56l-0.33,-0.46l-2.03,-0.88l0.78,-0.35l0.01,-0.72l-0.42,-0.2l-4.21,0.56l-3.06,-0.86l-3.3,0.71l-2.31,1.62l-0.85,0.27l0.58,-1.99l1.15,-1.19l0.97,-1.92l5.25,1.2l2.4,0.18l1.02,-0.67l1.55,-2.51l-0.61,-0.84l-1.47,0.31l-0.86,1.02l-2.72,0.43l-2.37,-0.34l-0.58,-0.45l-2.31,0.1l1.3,-2.09l1.96,-0.75l1.39,0.06l2.59,1.32l0.93,0.16l2.66,-0.57l1.12,-0.84l0.79,-1.02l0.04,-0.54l-0.57,-0.3l-1.56,0.63l0.55,-2.64l3.34,-0.1l0.85,-0.72l-0.32,-0.5l-1.37,-0.57l-2.22,0.35l0.87,-1.37l0.45,-2.19l2.33,-1.31l-0.64,-1.3l0.79,-0.43l-0.01,-0.64l-0.9,-0.3l-1.89,0.32l-1.65,-0.48l-1.91,0.64l-3.81,-0.64l-3.93,-2.23l-5.01,-1.09l-2.31,-2.03l0.65,-0.64l0.78,-0.25l6.85,0.64l1.93,0.56l4.61,2.32l3.01,0.7l1.46,-0.32l0.34,-0.39l-0.16,-0.53l-1.45,-0.37l-1.74,-1.08l0.35,-2.16l-0.17,-0.4l-1.34,-0.69l2.38,0.16l0.32,-0.37l-0.19,-0.51l-1.98,-1.14l-3.48,-0.03l-2.4,-0.73l-2.21,0.22l-0.4,-0.89l1.01,-1.06l4.52,-1.24l1.14,-0.75l0.14,-0.49l-0.49,-0.34l-2.05,0.49l-2.46,-0.38l-2.6,1.27l-1.02,-0.3l1.54,-1.28l0.07,-0.61l-0.47,-0.36l-0.62,0.11l-0.35,-1.69l-1.42,-1.59l-0.49,-1.05l0.65,-0.42l0.06,-0.46l-0.41,-0.21l-1.27,0.2l-0.41,0.4l0.02,0.45l0.64,1.67l1.45,1.56l0.17,0.8l-1.19,0.88l-0.33,0.7l-0.86,0.06l-0.38,0.59l0.48,1.04l-0.15,0.36l-1.59,0.59l-1.8,0.15l-3.16,-0.54l-1.14,-1.05l-0.31,-0.98l0.6,-0.71l1.13,-3.12l2.23,-2.04l0.27,-0.79l-0.51,-0.5l-0.44,0.05l-2.08,1.79l-1.02,0.15l-0.06,-0.5l0.93,0.06l0.73,-0.53l-0.01,-0.58l-0.9,-0.74l1.78,-0.07l1.71,-1.39l0.37,-0.81l-0.02,-1.87l-0.74,-1.05l-1.18,-0.55l-1.19,0.75l-1.66,-0.54l-0.08,-0.57l1.08,-0.41l0.89,-1.1l-0.15,-1.64l-0.67,-0.77l-0.49,-0.08l-1.01,0.57l-0.71,-0.94l-1.06,-0.52l0.56,-1.25l0.51,-0.08l0.29,-0.48l-0.49,-1.43l-1.98,-2.8l-0.74,-0.28l-1.24,0.18l0.36,-0.85l-0.27,-1.35l1.6,-0.37l0.48,-0.37l-0.02,-0.65l-3.09,-1.67l-1.64,-2.02l-3.24,-1.54l-2.2,-2.41l-1.41,-0.69l1.2,-0.65l0.33,-0.55l-0.7,-1.47l-0.89,-0.96l-2.86,-0.78l-1.87,-0.98l-8.98,-3.16l-4.7,-0.9l-3.31,-0.11l-1.28,-0.69l-1.62,-0.35l-0.91,0.2l-1.97,1.23l-0.38,0.05l-1.31,-0.96l-0.68,-0.14l-3.09,1.52l-2.33,0.42l-0.79,-0.12l-1.65,-1.01l-1.45,0.21l-1.63,0.82l-1.88,-0.78l-0.94,0.04l-0.44,0.19l-0.1,0.92l1.27,1.37l-6.39,-0.97l-3.06,-1.23l-3.36,-1.79l2.81,-1.44l3.68,-0.8l0.29,-0.24l-0.09,-0.65l-0.76,-0.33l-5.18,-0.09l-2.09,-0.51l-0.81,-0.7l0.85,-1.27l-0.01,-0.67l-0.46,-0.06l-3.68,1.89l-0.72,-0.13l-0.62,-0.29l0.04,-0.84l-1.88,-1.04l1.19,-0.85l1.25,-0.19l4.79,-0.38l3.43,0.36l2.14,-1.61l2.24,-0.39l6.02,0.16l2.72,0.89l0.6,-0.39l-0.37,-1.08l0.89,-1.26l-0.18,-0.88l-2.14,-1.48l-0.84,-0.11l-4.51,1.78l-2.17,-0.07l-2.46,-0.77l-2.07,1.22l-1.68,0.24l-3.11,-0.85l-0.49,-0.26l-0.22,-0.69l-1.47,-0.66ZM868.11,46.03l-2.0,1.23l-3.02,-0.1l-1.69,-0.55l-0.33,-0.57l0.5,-0.71l2.15,-0.77l2.79,-0.5l2.31,0.27l0.2,0.58l-0.9,1.11ZM866.15,95.15l0.55,1.88l0.94,0.75l1.08,-0.07l0.26,0.56l-0.54,0.24l-5.36,-0.09l-0.83,-0.53l0.15,-2.09l0.75,-0.48l1.1,0.53l1.91,-0.7ZM866.52,70.52l-0.75,-0.01l1.35,-1.66l0.58,0.02l-0.21,1.06l-0.96,0.59ZM862.98,87.68l-1.73,-3.8l0.1,-2.36l0.41,-0.04l0.52,0.45l0.7,5.76ZM862.47,22.09l-1.21,-0.05l-1.63,-1.05l-1.0,-0.79l-0.05,-0.69l0.98,-0.33l2.36,1.99l0.54,0.91ZM860.98,67.01l-0.81,-2.13l-0.08,-1.53l1.1,-0.81l-0.06,2.1l0.34,1.07l-0.49,1.29ZM815.5,142.48l0.34,-0.68l0.76,-0.35l0.47,-0.66l0.17,-1.68l1.92,0.41l3.19,-0.08l4.15,-1.56l1.5,0.87l0.18,0.5l-0.22,1.0l0.35,0.51l-2.53,0.72l-1.49,1.05l-0.43,-0.49l-1.5,-0.4l-6.88,0.84ZM768.9,185.81l-0.3,0.0l-0.09,-0.66l0.57,0.07l-0.18,0.58ZM728.75,18.92l-0.63,0.13l-2.09,-1.26l-6.4,-2.19l-2.68,-2.19l-0.15,-0.55l0.22,-0.39l4.2,-0.42l4.93,1.41l2.42,1.17l0.7,0.81l-0.51,3.48ZM720.41,224.31l0.99,-0.49l0.23,-0.06l-0.48,1.13l-0.74,-0.57ZM696.91,151.06l-0.52,-1.51l0.01,-0.96l0.83,-0.37l1.45,0.44l-0.9,0.55l-0.34,1.59l-0.54,0.26ZM692.3,138.73l0.41,-0.21l0.83,0.34l-1.25,-0.13ZM682.11,152.65l2.11,-0.27l0.15,-0.72l-1.13,-0.75l-4.46,-0.62l-0.66,-0.63l0.5,-1.73l1.82,0.27l0.55,-0.24l-0.11,-0.69l-1.65,-0.62l-0.69,-0.8l0.44,-0.73l1.55,-0.51l5.28,0.98l2.9,2.39l3.43,1.24l0.1,0.97l0.42,0.43l-0.83,0.78l-7.33,2.05l-0.91,-0.05l-1.48,-0.77ZM684.63,137.12l-0.3,0.04l-1.3,-0.54l1.33,-1.07l0.5,0.74l-0.23,0.83ZM671.71,121.68l0.62,-0.36l2.38,0.02l1.89,-0.49l-2.17,1.77l-1.42,-0.89l-1.29,-0.05ZM592.02,73.97l-1.72,0.09l-2.03,-0.62l1.64,-0.21l2.49,0.62l-0.39,0.12Z\",\n            name: \"Greenland\"\n          },\n          MX: {\n            path: \"M362.47,413.39l0.23,-0.35l-0.15,-0.86l-1.05,-0.75l-1.25,-2.44l11.15,-0.93l-0.28,0.47l0.19,0.62l19.52,6.73l14.45,-0.03l0.4,-0.4l0.01,-2.14l8.47,0.05l1.4,1.69l6.24,4.83l1.14,2.37l0.33,1.63l1.21,1.69l2.2,1.48l3.77,1.81l0.83,-0.01l1.55,-1.36l0.32,-1.33l0.93,-1.49l1.51,-0.63l1.42,0.41l2.78,0.12l3.32,3.19l2.01,3.53l0.31,1.19l2.78,3.32l1.2,0.93l0.27,2.72l0.8,0.97l1.13,2.52l4.35,1.88l2.45,0.39l2.13,0.92l0.85,-0.4l-0.33,1.42l-1.45,3.13l-0.83,3.43l-0.51,5.92l0.1,1.96l-0.56,1.64l0.08,0.81l1.05,4.87l0.67,0.83l1.68,4.01l3.71,4.48l0.82,2.69l1.64,1.74l0.42,1.29l1.6,0.73l2.25,-0.04l0.9,0.68l0.96,0.26l1.22,1.69l0.72,0.2l1.56,-0.17l3.2,-1.22l3.41,-0.21l1.09,-0.8l1.16,-0.28l2.2,-0.2l0.25,0.93l0.71,0.35l1.48,0.07l1.66,-1.3l-0.33,-1.4l1.84,-1.09l1.22,-1.3l0.23,-1.91l1.04,-1.24l0.04,-3.26l0.61,-2.19l2.48,-1.28l4.82,-0.75l2.05,-0.82l2.23,-0.19l3.89,0.84l0.71,-0.35l0.11,-0.51l1.02,0.85l0.23,1.26l-0.68,1.65l-2.53,2.96l-0.31,0.92l0.16,1.07l-1.21,1.17l0.27,0.96l0.81,-0.0l-1.01,0.79l0.01,0.5l0.55,0.4l-1.21,4.05l-0.57,-0.63l0.1,-1.68l-0.65,-0.3l-0.83,0.69l-0.49,1.19l-1.3,0.43l-1.51,2.51l-0.95,-0.38l-0.66,0.38l-0.18,0.57l-8.94,-0.01l-0.4,0.4l-0.02,2.57l-1.73,-0.01l-0.31,0.66l3.58,2.89l0.45,1.08l0.94,0.48l-0.2,1.11l-6.48,0.2l-2.42,4.23l0.53,1.19l-0.3,0.44l-0.12,1.68l-2.56,-2.75l-5.66,-4.79l-2.58,-1.32l-0.84,0.49l-0.13,-0.69l-0.88,0.03l-0.89,-0.52l-0.86,0.68l-0.09,0.54l-2.07,1.14l-3.76,1.45l-1.43,0.2l-3.39,-1.33l-2.82,-0.29l-1.88,-1.2l-1.96,-0.54l-1.41,-1.25l-4.63,-0.95l-1.73,-1.06l-4.17,-1.46l-3.77,-2.35l-1.67,-1.63l-4.08,-0.58l-3.66,-1.34l-2.42,-2.65l-5.2,-2.53l-1.74,-2.06l-0.95,-1.36l-0.82,-1.99l1.21,-0.31l0.78,-0.6l-0.04,-0.84l-0.87,-0.65l1.04,-1.46l0.14,-1.94l-0.19,-0.43l-1.03,-0.62l-1.02,-1.82l-0.02,-1.86l-0.75,-1.62l-3.18,-3.15l-2.76,-3.73l-2.83,-2.2l0.1,-0.57l-0.33,-0.59l-2.13,-0.62l-0.89,-1.5l0.54,-0.65l-0.22,-0.33l-3.45,-1.85l-0.15,-0.5l-0.73,-0.29l0.24,-0.68l-0.67,-0.27l-1.29,0.65l-0.6,-0.48l-0.18,-1.41l0.68,-0.98l0.43,0.08l0.41,-0.58l-0.79,-1.49l-1.16,-1.13l-1.48,-0.05l-1.04,-2.07l-2.06,-0.76l-0.97,-1.51l0.27,-1.45l-0.24,-0.61l-2.9,-0.53l-1.67,-2.18l-1.13,-0.58l-2.37,-2.92l-0.28,-1.27l-0.83,-0.66l-0.15,-0.87l-1.65,-2.52l-0.45,-1.76l-1.21,-2.02l-0.22,-0.66l0.34,-1.63l-0.16,-0.81l-2.82,-0.91l-0.5,-1.02l-1.38,-0.67l-1.11,0.65l-2.24,-1.39l-1.66,-0.78l-0.49,0.08l0.6,1.67l-0.44,2.77l1.26,3.75l0.07,2.09l1.48,1.99l3.04,2.49l0.99,1.37l0.25,0.97l0.79,0.19l0.14,0.48l0.63,0.2l0.66,1.62l0.99,0.44l0.7,3.15l2.1,1.8l0.7,1.79l0.88,0.58l0.87,2.3l0.89,0.73l0.47,-0.15l0.09,-0.55l-0.36,-0.52l0.32,0.27l1.18,3.07l0.27,1.95l0.73,1.19l0.57,0.32l0.7,1.95l1.04,1.47l-0.25,1.37l0.48,1.63l1.56,1.37l0.75,-0.23l0.22,-0.77l1.77,1.77l0.88,1.66l1.07,0.75l-0.28,1.3l-1.95,1.36l-1.88,-3.72l-1.43,-0.79l-2.04,-1.95l-3.29,-2.43l-0.63,-0.13l-1.34,-1.41l-0.21,-0.83l0.29,-2.97l-0.55,-1.92l-1.08,-1.73l-1.58,-0.71l-1.75,-1.38l-0.91,-2.11l-0.84,0.84l-1.45,0.33l-0.98,-1.14l-3.09,-1.42l-0.46,-1.12l-2.11,-1.59l1.67,0.27l0.99,-0.26l1.21,0.88l0.7,-0.3l-0.69,-1.7l0.78,-2.75l-0.6,-1.12l-3.99,-4.09l-1.3,-0.54l-2.44,-1.72l-0.58,-1.13l-0.15,-1.91l-0.9,-0.68l-0.3,-2.0l-1.21,-1.06l-0.24,-1.32l-1.61,-1.95l-0.03,-0.59ZM384.21,429.35l-0.58,-0.3l0.26,-1.28l0.34,-0.13l0.24,0.83l-0.26,0.88ZM378.19,425.87l0.19,0.17l0.13,0.37l-0.28,-0.39l-0.04,-0.15ZM379.15,427.07l0.28,0.07l0.03,0.24l-0.31,-0.31Z\",\n            name: \"Mexico\"\n          },\n          CU: {\n            path: \"M526.78,466.91l0.86,-0.32l-0.06,-1.77l1.1,-1.14l4.28,-1.81l3.02,-0.41l2.78,-0.77l2.61,0.39l1.41,-0.12l0.81,0.45l2.49,-0.25l1.42,0.83l1.49,0.02l1.02,0.39l3.0,2.45l3.16,0.29l5.23,2.99l0.75,0.14l0.33,-0.24l0.44,0.38l-0.33,0.18l0.11,0.47l0.79,0.78l0.89,-0.4l1.25,1.2l0.48,-0.14l0.46,0.4l1.89,0.29l1.05,0.52l1.73,0.12l0.28,0.17l-0.18,0.61l-0.57,0.69l0.33,0.57l4.07,0.3l2.21,1.51l1.66,0.49l-0.35,0.37l-1.87,0.12l-2.05,0.73l-0.14,-0.26l-0.71,0.01l-0.44,0.39l-4.36,-0.51l-7.17,0.69l2.68,-2.28l0.03,-0.82l-0.67,-0.9l-4.65,-0.75l-1.75,-1.39l-0.46,-1.95l-1.01,-1.15l-2.83,0.15l-3.2,-0.95l-1.56,-0.66l-1.23,-1.29l-2.67,0.26l-0.42,-0.16l-0.45,-0.82l-0.72,0.15l-0.33,0.55l-0.57,-0.41l-1.92,-0.11l-0.6,-0.4l1.1,-0.27l0.53,-0.82l-0.42,-0.69l-0.72,-0.33l-4.86,-0.02l-3.27,2.49l-2.67,0.3l-0.65,1.17l-1.77,0.65l-0.14,-0.35ZM534.15,467.72l0.23,-0.31l0.93,0.15l0.65,1.21l-1.53,0.5l0.22,-0.59l-0.5,-0.96Z\",\n            name: \"Cuba\"\n          }\n        },\n        height: 543.9752077221104,\n        projection: {\n          type: \"mill\",\n          centralMeridian: -11.5\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"oceania_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 606.4292604642054,\n          bbox: [{\n            y: -2119119.6569834785,\n            x: -7472412.761398178\n          }, {\n            y: 6796504.590523286,\n            x: 5759240.699079444\n          }],\n          left: 0\n        }],\n        paths: {\n          GU: {\n            path: \"M240.87,42.61l-0.01,-0.59l0.19,-0.14l-0.18,0.73Z\",\n            name: \"Guam\"\n          },\n          PW: {\n            path: \"M164.06,87.32l0.02,-0.17l0.14,-0.24l-0.03,0.17l-0.13,0.24Z\",\n            name: \"Palau\"\n          },\n          KI: {\n            path: \"M679.59,130.26l0.02,-0.03l0.02,0.04l-0.04,-0.01Z\",\n            name: \"Kiribati\"\n          },\n          NC: {\n            path: \"M416.93,308.88l0.36,0.45l0.68,0.17l-0.06,0.61l-0.58,0.13l-0.49,-0.35l-0.29,-0.93l0.39,-0.08ZM411.15,303.46l0.49,0.13l-0.03,1.1l1.04,1.41l-0.11,0.35l-1.92,-1.24l0.92,-0.97l-0.39,-0.79ZM387.8,299.51l0.1,0.08l-0.08,-0.04l-0.02,-0.04ZM388.42,299.97l0.82,0.48l1.04,-0.13l3.92,3.03l1.69,0.74l1.34,1.25l0.46,1.08l1.66,1.52l4.92,2.99l2.91,2.49l1.84,1.04l0.25,1.28l-1.16,0.29l-2.23,-0.94l-2.05,-1.21l-0.77,-1.13l-1.95,-0.76l-0.68,-0.65l-3.72,-1.95l-2.37,-1.87l-3.56,-3.62l-2.07,-2.66l-0.28,-1.29Z\",\n            name: \"New Caledonia\"\n          },\n          NU: {\n            path: \"M585.07,289.99l0.09,0.19l-0.28,0.16l0.14,-0.33l0.05,-0.02Z\",\n            name: \"Niue\"\n          },\n          NZ: {\n            path: \"M534.0,498.67l0.36,-0.21l0.11,0.44l-0.47,-0.23ZM534.78,500.22l0.77,0.62l-1.2,0.49l-0.15,-0.45l0.58,-0.66ZM456.17,419.08l-1.68,-1.97l-0.75,-0.96l1.06,-0.1l-0.2,0.67l1.56,2.36ZM456.68,419.85l0.23,0.29l0.07,0.25l-0.31,-0.53ZM457.03,420.47l0.58,0.21l0.67,-0.58l2.79,1.38l0.58,-0.3l1.64,0.84l0.08,0.94l0.47,0.51l0.77,-0.01l0.46,-0.36l1.44,2.46l-0.19,0.87l0.24,0.45l-0.71,-0.11l-0.42,0.67l3.03,4.43l-0.3,1.67l0.39,0.8l-0.65,2.1l0.33,0.36l0.55,0.1l0.25,0.12l0.26,0.27l0.74,-0.29l2.34,1.04l0.32,1.34l0.57,0.62l1.33,-0.05l0.51,-0.81l-0.73,-4.4l0.88,1.11l0.65,0.11l0.53,0.95l1.09,4.81l0.62,0.67l-0.26,0.77l0.68,0.6l1.46,0.35l3.68,1.86l3.95,0.93l1.46,-0.34l0.89,-0.57l1.35,-1.73l1.94,-1.2l1.76,0.09l1.67,0.89l-1.01,2.1l-0.91,5.05l-2.25,1.62l-0.51,2.71l0.29,1.27l-0.75,-0.82l-2.11,-0.34l-1.82,0.4l-1.83,1.05l-0.96,1.34l-0.2,1.33l0.27,1.17l0.92,0.6l-1.84,3.95l-3.46,4.58l-3.0,4.84l-4.81,3.42l-0.34,-0.17l-0.64,-1.52l-0.85,-0.24l-1.06,0.28l0.13,-1.04l-0.38,-0.71l-0.59,0.01l-0.34,0.74l-0.57,0.11l2.75,-3.69l1.16,-2.15l0.7,-3.0l-0.78,-1.83l-1.27,-1.61l-1.48,-0.82l-1.86,-0.43l-1.67,-1.52l-3.13,-1.19l-0.8,-0.64l-0.28,-0.74l0.44,-1.22l1.64,-0.91l2.56,-0.65l1.64,-1.73l0.9,-4.94l0.95,-1.82l-0.24,-1.18l0.67,-0.5l0.2,-0.58l-1.32,-2.57l0.14,-1.16l-0.75,-0.92l0.51,-0.24l0.33,-0.63l0.78,-0.17l0.26,-0.67l-1.11,-1.23l-1.67,0.22l-0.64,-0.25l-1.09,-2.38l0.54,-0.07l0.47,-1.07l-0.13,-0.71l-0.63,-0.64l0.32,-0.68l-0.15,-0.57l-0.85,-0.69l-0.81,0.36l-1.0,-0.67l-0.86,-1.73l-0.43,-0.24l-0.34,0.35l-0.0,0.82l-2.91,-3.94l1.5,-1.78l-0.31,-0.53l-0.58,-0.02l-1.4,1.37l-0.4,-0.98l-1.02,-0.98l0.42,-0.68l-0.04,-1.11ZM463.41,431.7l0.14,0.17l0.06,0.19l-0.06,-0.05l-0.14,-0.3ZM473.83,433.91l-0.09,-0.09l0.01,-0.04l0.05,0.08l0.02,0.05ZM473.39,430.83l0.04,-0.47l0.56,0.82l-0.04,-0.04l-0.56,-0.32ZM406.28,517.99l3.24,-0.57l0.56,-0.45l-0.24,-0.69l-1.17,-0.17l1.23,-0.78l0.19,-0.49l-0.45,-0.26l-1.43,0.13l0.15,-0.49l0.83,-0.01l0.28,-0.63l1.38,0.63l0.44,-0.13l-0.23,-0.9l0.87,-0.42l-0.21,-0.42l-1.32,-0.54l-0.02,-0.48l0.38,-0.34l1.08,0.15l0.16,-0.71l-0.45,-0.48l1.16,-0.93l0.64,0.96l0.37,-0.31l0.02,-1.52l2.05,-1.51l1.08,0.55l0.21,-0.42l-0.38,-1.33l3.71,-3.73l1.92,-0.91l1.22,0.16l1.86,-1.13l0.75,0.38l0.51,-0.52l-0.16,-0.82l2.48,-1.34l2.28,-0.78l0.34,-0.7l0.51,-0.26l-0.06,-0.35l2.54,-2.19l1.15,0.17l0.15,-0.47l-0.3,-0.58l0.42,-0.18l0.95,0.42l0.52,-0.13l-0.43,-0.81l0.36,-0.15l0.84,0.54l0.24,-1.09l1.31,-1.43l0.21,1.19l0.65,-0.3l0.05,-1.7l1.1,-1.61l0.68,-0.24l0.32,-0.57l-0.35,-0.49l1.65,-5.17l1.76,-0.59l1.7,-1.7l1.18,-3.2l0.35,-2.27l0.93,-1.57l1.42,-1.17l1.31,-0.91l0.05,1.65l0.47,0.66l1.58,0.66l0.53,2.86l0.7,1.09l1.15,-0.05l4.31,-2.8l0.11,0.54l-0.71,1.61l0.02,0.47l0.46,0.12l0.95,-0.46l0.96,-1.91l0.78,-0.14l0.31,0.23l-1.71,1.71l1.15,0.38l-0.89,1.09l0.03,0.71l0.52,0.71l-0.43,0.72l0.42,0.6l0.69,-0.01l0.28,0.32l-0.18,0.4l-2.57,2.75l-0.44,1.35l-2.23,2.26l-2.43,4.17l-2.39,1.27l-1.31,1.23l-0.61,0.11l-0.31,0.68l0.71,0.52l-1.35,0.68l-0.08,0.46l0.42,0.22l1.19,-0.12l0.75,1.55l1.92,0.5l0.03,0.99l-0.93,0.23l-1.38,-0.72l-0.98,0.11l0.01,-0.4l-0.89,-0.49l-0.81,0.3l-0.62,0.96l-1.84,-1.44l-0.47,0.01l-0.01,0.81l0.81,1.17l-3.5,1.79l-1.66,0.19l-0.67,1.11l-1.15,0.41l0.49,0.53l-0.81,4.15l-0.3,1.02l-0.81,-0.01l-0.32,0.64l0.82,0.76l-1.29,1.64l-0.42,1.57l-1.45,3.04l0.68,1.41l-2.5,0.63l-0.79,0.55l-1.17,1.63l-2.05,1.67l-1.65,1.96l-2.48,0.62l-1.76,0.09l-2.45,-0.6l-1.6,0.39l-1.29,-0.07l-0.22,-1.23l-1.12,-0.97l-2.65,-0.03l-1.13,-1.52l-1.23,-0.52l-0.58,0.04l-0.93,0.82l-1.95,0.07l-2.47,-0.39l1.36,-1.7l0.03,-0.51l-0.5,-0.12l-0.89,0.52l-0.06,-0.93l-0.63,-0.19l-1.14,0.59l0.02,-0.63ZM464.16,475.77l0.52,-0.33l-0.28,0.26l-0.25,0.06ZM461.7,471.81l0.05,-0.2l0.28,-0.24l-0.17,0.35l-0.16,0.08ZM425.9,583.44l0.01,-0.0l0.04,0.01l-0.02,0.01l-0.03,-0.02ZM414.34,530.94l1.81,-2.66l-0.07,-1.86l0.78,-0.03l0.94,1.05l-0.52,0.4l0.02,0.43l1.57,1.04l-1.43,0.31l-0.89,0.58l-0.91,-0.01l-1.28,0.74ZM407.01,516.29l0.33,-0.1l0.09,0.24l-0.23,-0.03l-0.19,-0.11ZM402.53,565.46l0.62,-0.57l0.23,-1.11l0.23,-0.02l-0.42,1.57l0.35,0.71l-1.02,-0.58Z\",\n            name: \"New Zealand\"\n          },\n          AU: {\n            path: \"M3.12,347.94l0.52,-0.43l1.06,2.65l-1.15,-1.41l-0.44,-0.81ZM4.9,350.4l1.59,0.34l0.85,-0.84l0.22,-1.59l-1.05,-1.13l0.68,-0.45l0.33,1.19l1.2,1.17l1.13,-0.44l0.47,-0.75l-0.08,-3.75l-4.08,-7.01l-0.76,-2.25l-1.13,-2.04l0.03,-2.27l0.5,-2.04l2.04,-3.72l0.29,-4.05l-0.82,-2.23l2.0,-5.31l0.64,-0.5l-0.35,2.13l0.52,1.26l-0.15,1.15l0.56,0.42l1.19,-0.44l0.74,-0.79l2.47,-4.07l5.57,-2.58l4.25,-3.68l5.17,-2.92l3.08,-0.08l1.06,0.52l1.15,0.09l2.17,-0.64l3.84,-2.09l4.16,-0.89l2.71,-2.08l3.47,0.33l1.53,-0.64l3.25,-0.39l6.19,-2.46l2.67,-2.33l1.21,-1.73l2.47,-4.79l1.32,-0.68l2.69,-2.42l-0.03,-0.98l-0.83,-0.51l-0.64,-3.04l0.08,-1.65l0.7,-1.28l3.49,-2.73l1.31,-2.45l1.18,2.99l1.88,3.44l1.4,1.82l0.67,-0.22l0.33,-2.33l-0.14,-1.24l0.99,0.77l0.53,0.0l0.63,-2.09l-2.7,-2.97l0.82,-0.71l-0.08,-1.51l1.13,1.36l0.46,0.16l1.29,-0.88l1.94,0.95l3.47,0.1l0.44,-0.57l-0.32,-0.42l-2.45,-0.43l0.07,-0.85l0.88,0.03l0.38,-0.37l0.54,-1.93l-0.0,-0.5l-0.56,-0.37l-0.84,0.81l-0.61,-0.92l0.34,-1.61l0.89,-0.02l1.08,-1.51l1.76,1.22l0.87,-0.06l0.29,-1.43l-0.48,-0.36l-0.91,0.03l-0.23,-0.66l1.2,-0.7l2.06,0.67l0.44,-0.18l0.27,-0.97l-1.07,-0.85l-0.47,-1.05l0.73,-1.22l1.06,-0.18l1.09,-0.66l0.65,0.5l0.52,-0.54l0.45,1.05l0.84,0.0l1.04,-1.16l-0.03,-0.89l0.71,-1.98l-0.35,-0.79l0.73,1.32l0.57,0.13l0.83,-0.97l1.02,0.91l0.5,0.04l1.7,-1.68l0.01,-1.23l0.61,-0.21l3.96,2.12l1.59,1.24l1.65,2.26l2.14,1.69l-0.83,2.64l-0.08,1.87l0.55,0.39l0.68,-0.63l0.28,0.3l0.69,-0.24l-0.61,-1.85l1.75,-1.57l0.9,-0.26l3.45,0.81l0.63,0.62l0.06,0.84l0.41,0.58l0.69,-0.16l0.15,-1.89l1.06,0.36l1.32,1.58l0.63,-0.2l0.12,-0.41l-0.19,-1.55l1.38,-0.16l0.16,-0.71l-1.53,-1.02l0.55,-0.78l-2.34,-1.36l0.47,-1.07l1.95,-1.97l0.89,-2.93l2.11,-0.87l1.1,-1.25l-0.01,-0.48l-0.84,-1.08l0.18,-1.06l1.15,-0.69l0.57,-1.37l1.48,-0.23l0.24,-1.76l1.27,1.03l0.53,-0.06l0.33,-0.61l-0.14,-0.81l1.1,-0.46l0.01,-0.83l1.1,-0.08l0.44,-0.35l0.23,0.52l0.96,0.59l2.18,0.01l1.21,-0.33l1.28,0.34l1.54,-0.67l0.84,0.62l0.72,-0.13l0.54,-0.97l1.43,-0.06l0.22,-0.66l-0.51,-0.55l0.17,-3.13l-1.71,-1.29l-2.87,-0.07l-1.51,-1.18l0.5,-0.31l1.47,0.96l0.63,-0.29l0.23,-0.48l0.26,0.07l1.6,1.04l0.92,1.02l0.5,0.08l1.22,-0.8l0.53,0.08l1.8,2.31l1.25,0.17l1.46,0.68l2.69,0.11l2.4,1.28l1.57,0.42l1.09,0.03l1.23,-0.5l2.28,1.54l1.71,0.15l4.14,-2.33l0.11,0.19l-1.09,0.98l0.04,1.05l0.67,0.32l1.31,-0.64l1.09,2.04l1.76,-0.13l0.54,-1.3l-0.44,-1.04l1.38,-1.13l0.55,1.27l0.83,0.71l1.31,0.14l0.2,0.43l-3.01,3.27l-0.1,0.75l0.48,1.02l-0.82,1.38l-1.19,-0.65l-2.8,1.29l-0.21,0.36l0.01,2.45l0.44,1.46l-0.74,2.43l-3.6,4.67l0.41,1.78l5.69,3.73l0.76,1.36l2.24,1.07l0.65,-0.14l-0.01,0.86l0.81,0.69l1.78,-0.03l2.18,1.4l2.99,1.27l1.56,1.85l2.58,1.93l2.07,0.6l0.95,-0.07l2.76,0.9l1.92,3.37l1.39,0.39l4.48,2.5l1.62,0.05l2.39,-0.67l2.45,-1.66l1.16,-3.27l1.88,-2.82l0.59,-1.5l0.92,-3.07l-0.11,-1.4l0.43,-2.24l1.33,-4.39l-0.76,-4.49l0.5,-2.62l-0.84,-1.71l-0.05,-0.84l1.29,-4.06l-0.2,-2.4l1.04,-1.03l0.66,0.14l0.59,-0.29l0.07,-0.49l-0.66,-1.54l-1.22,-0.66l0.06,-0.76l1.06,-2.33l0.38,0.28l0.64,-0.29l-0.06,-1.22l1.39,-4.7l0.21,-2.33l1.11,-0.48l0.94,-1.23l0.3,0.0l-0.07,1.19l1.23,0.99l0.79,2.11l0.26,3.9l1.04,1.03l1.21,0.23l-0.49,1.33l0.04,1.13l1.16,0.94l1.04,1.72l1.4,6.11l-0.26,2.37l1.57,4.67l0.72,0.67l1.4,0.47l1.89,-1.23l1.68,-0.45l1.22,1.88l4.65,3.33l-0.24,1.11l0.3,1.69l-0.14,1.29l1.39,4.45l-0.2,2.82l2.53,3.74l1.09,0.41l-0.02,1.01l1.65,4.27l-0.7,5.0l1.53,2.06l0.7,0.34l-0.22,1.98l0.71,1.31l1.68,1.41l1.9,0.79l1.28,0.17l1.14,1.09l2.1,-0.06l1.07,1.76l1.18,1.16l0.89,0.27l0.6,0.62l1.22,0.23l2.05,1.42l1.78,0.47l1.14,1.08l0.61,0.89l-0.91,0.1l-0.31,1.25l0.86,1.3l3.06,2.98l0.92,2.69l0.94,0.9l0.54,3.46l0.54,1.86l0.85,1.52l0.44,0.21l0.75,-0.25l0.94,1.02l0.56,-0.0l0.34,-0.63l-0.45,-1.59l0.39,-0.73l1.1,1.49l2.4,1.56l0.55,0.04l0.36,-0.48l-0.09,-0.86l0.7,1.22l0.15,4.76l0.58,2.47l2.43,2.67l2.57,1.8l1.56,0.28l0.93,0.59l2.19,3.73l2.47,1.67l0.33,1.24l1.17,1.95l1.08,0.67l0.82,1.11l0.09,2.11l0.86,1.54l0.92,0.63l-0.57,2.68l0.58,5.46l-0.32,1.88l2.04,4.7l0.55,2.35l0.86,1.48l-0.05,2.29l0.36,1.21l-0.08,1.31l-1.92,3.57l-0.59,5.03l-1.84,5.67l0.13,2.88l-0.77,4.3l-1.16,2.85l-1.68,2.13l-0.7,3.33l-2.59,2.21l0.13,0.44l-2.52,1.26l-2.53,3.86l-0.36,1.31l-0.93,0.47l-0.27,3.16l-1.04,0.48l0.32,0.72l-1.61,1.81l-0.74,1.82l-0.71,3.43l0.14,0.76l-0.75,0.47l0.03,0.92l-1.01,0.55l-2.85,5.41l-1.0,6.19l-0.78,2.59l0.18,3.67l-0.31,2.02l-0.87,0.21l-2.38,1.89l-9.12,0.5l-3.09,0.96l-3.7,2.54l-4.01,3.85l-4.82,0.58l-0.25,0.85l1.0,1.25l0.59,0.04l0.35,-0.33l0.09,1.47l-0.28,0.35l-1.63,-2.39l-0.67,-0.28l-0.99,0.43l-0.94,-1.74l-1.61,-0.29l-1.22,-0.83l0.99,-1.18l-0.82,-1.62l-1.54,-0.05l-0.99,1.39l-1.44,0.85l-0.72,-0.5l0.61,-0.12l0.82,-0.75l0.86,-1.62l-0.61,-1.13l-1.27,-1.04l-4.17,2.07l0.09,0.73l1.49,0.24l-3.81,1.9l-2.24,2.12l-1.83,0.97l-2.19,-0.64l-1.01,-0.79l-1.91,-0.63l-3.03,-1.75l-2.03,0.09l-1.87,-0.95l-1.67,-0.15l-1.18,1.01l-0.92,-0.15l-1.52,-1.61l-1.64,-0.91l-2.95,-0.46l-1.64,-1.06l-1.36,-2.23l-3.17,-3.37l-0.3,-1.39l0.9,-3.46l-1.02,-2.77l-2.03,-3.18l-3.34,-2.93l0.68,-0.54l0.92,0.67l0.5,-0.38l0.23,-1.42l-0.36,-0.85l-1.18,-0.37l-2.44,1.6l-1.03,0.14l-1.54,0.77l-1.87,-0.16l1.43,-2.04l0.84,-2.59l-0.14,-2.39l-3.1,-5.26l-0.69,0.02l-1.27,2.41l-0.4,2.44l-1.27,3.28l-1.59,-0.1l-2.37,0.89l-1.35,0.13l0.73,-2.06l2.6,-0.05l0.35,-0.26l0.79,-2.76l-0.25,-1.93l0.25,-1.77l1.14,-2.47l2.18,-2.64l-0.57,-2.93l1.03,-1.21l-0.63,-2.82l-1.03,-1.7l-0.44,-0.14l-0.28,0.38l0.05,1.97l-2.54,2.99l-1.56,3.69l-4.43,2.18l-1.7,1.27l-4.02,5.31l-0.05,0.91l0.65,1.55l-0.82,-0.72l-1.29,0.41l-1.9,-1.96l0.45,-0.11l0.26,-0.59l-1.75,-5.29l-2.51,-2.9l-0.81,-2.61l-1.47,-1.24l-2.3,-0.26l-0.83,-1.36l-0.43,-1.51l0.85,-0.32l0.18,-0.76l-0.33,-1.24l-2.24,-1.12l-1.04,-1.15l-1.12,-0.64l-3.42,-0.21l-3.53,-1.91l-3.99,0.44l-3.71,-2.58l-2.56,-1.27l-1.92,-0.45l-2.85,0.9l-4.94,-0.2l-9.01,1.04l-6.7,3.07l-5.64,1.65l-3.99,0.38l-4.84,-0.45l-1.78,0.34l-2.78,1.81l-2.28,0.91l-3.8,2.24l-3.92,1.13l-1.08,1.16l-1.92,3.89l-1.59,1.96l-0.92,0.57l-1.18,-0.03l-0.97,0.57l-0.85,-0.6l-1.1,-0.22l-5.89,0.88l-0.8,-0.95l-5.07,-0.41l-4.52,0.38l-2.98,0.76l-1.58,-0.22l-2.69,0.33l-1.84,1.15l-1.45,2.3l-1.35,0.66l-2.82,0.28l-5.68,4.28l-4.04,0.92l-7.93,-0.92l-3.9,-1.61l-1.9,-2.22l-1.3,-0.92l-2.23,-1.07l-1.27,0.2l-0.55,-0.45l-0.26,-1.61l0.11,-3.76l1.07,0.75l1.58,-0.11l1.3,-1.06l1.29,-2.9l-0.45,-4.53l0.66,-0.86l0.22,-5.83l-0.35,-1.75l-3.94,-7.4l-0.72,-1.99l-0.81,-4.24l-0.07,-5.04l-0.79,-2.48l-1.75,-2.31l-0.72,-2.74l-2.79,-3.76l-0.47,-4.23l-0.59,-1.78l-2.41,-4.07l-1.52,-1.87ZM5.49,346.12l-1.4,-2.96l0.13,-0.37l1.47,1.56l-0.2,1.77ZM307.15,358.08l0.01,-0.18l0.17,-0.41l-0.17,0.59ZM304.06,342.63l-0.11,-0.67l0.63,-1.96l-0.13,-0.79l1.06,-0.95l0.38,-0.95l0.09,0.6l-1.92,4.72ZM305.51,336.0l-0.11,-0.12l0.09,-0.06l0.01,0.18ZM289.28,325.66l0.66,0.31l0.41,1.19l-0.1,-0.07l-0.97,-1.43ZM266.67,467.87l1.59,-0.39l0.64,0.6l-0.17,0.16l-0.57,-0.46l-1.49,0.09ZM243.31,471.7l1.77,-0.15l4.12,2.28l3.94,1.28l1.95,-0.19l1.08,-0.5l1.13,0.69l0.22,-1.1l0.75,-0.44l2.34,-0.32l1.38,0.29l1.11,-1.28l1.78,0.23l0.91,-0.83l1.42,0.59l0.45,0.64l0.17,8.76l-1.01,0.49l-0.84,1.56l-0.47,2.5l-0.64,1.27l-0.07,2.29l0.48,2.95l-0.95,0.22l-0.68,-1.2l0.97,-0.2l-0.08,-1.09l-1.83,-0.81l-0.68,0.4l-0.09,1.11l-0.29,-0.96l-0.83,-0.94l-0.45,-0.1l-0.25,0.4l0.34,1.49l-0.6,0.9l-0.12,1.26l-1.28,-0.65l-0.61,0.22l-0.09,0.72l0.52,0.57l-1.23,2.68l-0.91,-0.12l-1.34,-0.88l-3.5,0.25l-0.25,-0.76l1.35,-0.11l0.38,-0.54l-0.14,-0.36l-0.42,-0.34l-2.38,-0.16l-1.79,-2.52l-0.91,-0.65l-1.62,-3.41l-0.37,-1.83l1.49,1.9l0.83,-1.19l-0.06,-0.58l-1.24,-1.29l-0.16,-0.56l-0.55,-0.23l-0.23,-1.11l-2.41,-3.36l-1.08,-2.17l-0.9,-3.6l0.5,-2.13l1.97,0.74ZM264.9,463.05l0.55,-0.7l1.44,1.63l0.8,0.35l-0.22,0.56l0.25,0.75l-1.02,0.51l-1.23,-1.81l-0.17,-1.04l-0.38,-0.24ZM259.93,495.5l0.38,-0.53l0.12,-0.34l-0.07,0.94l-0.43,-0.07ZM252.24,284.34l0.26,-0.08l0.33,0.97l-0.33,-0.6l-0.26,-0.29ZM245.66,449.75l0.13,-0.01l-0.11,0.06l-0.02,-0.05ZM235.03,464.86l-0.28,-1.49l0.15,-1.37l0.61,-1.0l0.36,0.27l0.32,2.59l-1.15,1.0ZM221.75,225.27l0.17,0.16l-0.1,0.07l-0.03,-0.02l-0.04,-0.22ZM199.24,271.61l0.83,-1.24l1.97,-0.48l0.13,0.16l-2.07,1.39l-0.86,0.17ZM186.63,426.84l0.35,0.43l1.81,0.2l0.78,-0.28l0.92,0.61l-1.74,-0.21l-1.25,0.26l-0.85,1.2l-0.66,0.25l-1.8,-0.72l-0.71,0.45l-2.69,-0.01l-1.3,-0.93l0.49,-0.77l5.11,-1.31l1.66,0.19l-0.12,0.63ZM178.36,252.29l0.17,-2.22l1.29,-1.17l0.24,0.75l0.61,0.43l-0.47,1.73l1.01,0.85l-2.87,-0.38ZM176.38,249.17l0.08,-0.08l0.09,-0.12l0.03,0.15l-0.2,0.04ZM148.87,228.94l0.1,0.2l-0.04,0.14l-0.12,-0.23l0.05,-0.11ZM132.92,230.01l0.94,0.93l1.29,0.21l1.25,-0.54l0.89,0.15l1.79,-0.92l1.49,1.32l-1.58,1.79l-2.31,1.48l-3.0,-2.14l-0.61,-1.2l-0.15,-1.09ZM130.25,233.73l0.95,-0.55l-0.08,-1.67l0.68,-0.72l0.78,2.33l1.01,0.62l-1.81,-0.41l-1.52,0.39ZM0.69,343.22l0.25,0.69l-0.14,-0.24l-0.11,-0.45Z\",\n            name: \"Australia\"\n          },\n          PG: {\n            path: \"M317.31,186.15l1.37,0.38l0.59,0.49l0.78,1.57l1.32,1.12l0.8,1.37l1.32,0.59l1.29,1.13l0.73,1.28l0.13,1.04l-1.43,0.68l-0.6,-0.04l-1.86,-0.92l-0.88,-1.24l0.16,-0.94l-0.24,-0.79l-1.55,-0.91l-1.82,-2.0l-0.34,-1.24l0.24,-1.57ZM316.23,184.69l-0.36,-1.75l0.21,-0.24l0.31,1.07l-0.16,0.92ZM306.38,231.17l1.21,0.64l1.04,0.34l-1.74,-0.38l-0.52,-0.59ZM287.63,164.8l0.1,-0.36l0.53,0.36l-0.63,-0.0ZM291.46,166.57l1.34,0.67l1.75,1.32l1.64,0.57l0.93,1.02l-1.67,-0.58l-3.99,-3.0ZM299.57,172.25l3.99,3.29l0.72,0.98l-0.75,2.84l-0.56,0.78l-1.26,-1.99l-0.13,-2.87l-2.0,-3.03ZM301.3,212.7l0.78,-0.03l1.13,0.78l-0.49,0.34l-0.8,-0.34l-0.63,-0.75ZM281.23,184.76l0.26,0.8l0.85,0.87l0.88,0.09l1.63,-0.56l0.93,0.45l0.82,-0.08l1.38,-0.51l0.57,-0.32l1.36,-2.3l1.34,-1.08l1.86,-0.18l0.95,-0.74l-0.05,-1.94l-0.86,-2.27l0.13,-0.59l1.32,0.1l1.16,0.75l1.25,-0.66l1.72,0.78l-0.21,0.9l0.27,1.65l-0.31,0.59l-0.64,0.92l-1.6,0.28l-0.57,0.78l0.14,0.98l0.96,1.31l-0.32,0.49l-1.36,0.69l-2.91,0.05l-0.71,1.48l-1.38,1.24l-3.11,1.11l-2.56,1.46l-5.93,0.18l-2.0,-1.59l-2.1,0.31l-2.9,-1.9l-2.34,-0.76l-0.34,-0.51l0.04,-0.64l0.37,-0.31l0.91,0.23l3.25,-0.17l2.72,0.75l2.15,-0.5l1.47,0.05l1.2,-0.63l0.31,-1.04ZM281.64,182.69l0.03,-0.1l0.06,-0.03l0.02,0.02l-0.1,0.11ZM288.07,219.52l0.46,0.33l-0.02,0.09l-0.11,-0.17l-0.33,-0.26ZM288.62,220.3l0.88,0.4l0.83,-0.66l-0.26,0.96l-1.44,-0.45l-0.02,-0.25ZM284.67,215.58l1.19,0.54l0.89,-0.08l0.52,0.55l0.06,0.55l-2.19,-0.22l0.04,-0.55l-0.5,-0.79ZM213.01,164.32l1.09,0.12l4.9,2.29l5.42,2.07l2.74,0.89l4.48,0.81l4.24,2.84l3.1,0.15l1.01,1.19l1.68,0.86l1.83,1.86l1.97,0.37l3.1,3.14l-0.03,4.53l0.96,0.58l4.09,1.08l4.82,2.31l2.65,0.26l1.23,0.7l1.73,1.94l0.26,2.21l-3.31,0.37l-1.76,-0.16l-1.51,0.92l-0.11,1.15l1.81,3.58l4.09,3.84l3.0,1.71l0.85,3.28l1.58,1.19l1.19,2.87l1.75,0.32l2.88,-0.48l0.28,0.73l-0.45,1.73l0.52,0.96l1.82,0.85l3.58,0.5l-1.41,0.41l-0.27,0.39l0.11,0.73l0.81,1.06l3.91,1.51l1.36,0.14l0.3,0.12l-1.18,-0.04l-0.3,0.81l1.51,1.15l-0.81,0.48l-1.06,0.11l-2.05,-0.52l-0.55,-0.72l-1.65,-1.07l-6.19,-0.75l-2.14,-0.75l-1.75,0.25l-1.16,-0.48l-3.73,-0.44l-1.44,-1.08l-1.16,-1.86l-2.93,-2.16l-0.59,-0.91l0.13,-1.64l-0.97,0.13l-1.46,-0.88l-3.39,-5.37l-1.22,-1.38l-2.44,-1.02l-2.0,-0.18l-3.71,-0.96l-1.01,-1.32l-2.54,-0.48l-0.73,0.27l-0.27,0.55l-1.79,0.62l-1.71,-0.58l-1.87,-1.63l-0.51,0.11l0.03,0.52l0.62,0.64l1.2,2.37l-0.43,0.64l-2.31,-0.17l-0.13,0.62l0.5,0.98l-3.46,0.73l-2.94,-0.29l-1.39,0.37l-1.32,-1.17l-1.15,0.23l-0.27,0.44l0.39,0.34l0.69,0.01l1.12,1.24l2.58,-0.12l2.26,0.94l1.87,2.04l-0.04,1.05l-5.2,2.66l-3.01,-1.17l-4.64,0.31l-1.74,-0.46l-1.9,0.52l-0.9,-0.59l-0.01,-16.66l-0.85,-1.35l0.84,-2.91l-0.01,-27.96ZM281.58,162.9l1.08,-0.28l1.29,0.55l0.03,0.76l-1.54,-0.0l-0.85,-1.03ZM283.27,215.97l-1.0,-0.85l0.34,-0.57l0.5,0.26l0.16,1.16ZM278.62,155.65l-0.66,-0.55l0.06,-0.28l0.55,0.39l0.04,0.43ZM264.59,186.19l1.37,0.79l-0.08,0.81l-0.73,-0.38l-0.56,-0.73l0.01,-0.49ZM255.56,160.21l0.22,-0.71l1.45,-0.19l3.04,0.38l-0.56,0.54l-4.15,-0.02ZM259.41,184.95l-0.68,-0.65l0.49,-0.31l0.23,0.19l-0.04,0.78ZM250.53,179.67l-0.3,-0.16l0.37,-0.5l0.09,0.28l-0.15,0.38Z\",\n            name: \"Papua New Guinea\"\n          },\n          SB: {\n            path: \"M401.2,226.2l0.44,-0.5l0.72,-0.08l0.27,0.05l-0.74,0.06l-0.7,0.48ZM366.91,222.26l0.24,-0.14l0.84,0.36l-0.52,-0.17l-0.56,-0.04ZM368.23,222.63l2.3,1.29l2.05,0.15l1.1,1.91l-2.39,-0.37l-2.49,-1.35l-0.58,-1.62ZM367.84,217.48l0.01,-0.37l0.01,-0.13l0.24,0.52l-0.26,-0.02ZM361.82,207.84l0.44,-0.16l1.63,1.97l-0.3,0.51l0.01,1.05l1.59,1.22l0.69,1.68l0.08,1.03l-2.27,-1.71l-1.47,-3.77l0.27,-0.91l-0.67,-0.9ZM354.72,214.98l1.57,1.16l3.02,-0.01l1.88,1.18l1.3,1.62l-0.83,0.27l-2.47,-0.81l-3.42,-0.21l-1.5,-1.73l-0.09,-1.16l0.54,-0.3ZM360.03,233.55l0.05,0.04l-0.05,-0.03l-0.01,-0.01ZM346.24,202.07l0.73,0.16l2.81,2.24l2.45,0.96l2.8,2.04l-0.16,0.49l-0.67,-0.62l-5.23,-2.49l-2.51,-2.06l-0.22,-0.72ZM350.09,212.96l0.09,-0.06l0.14,0.09l-0.14,-0.03l-0.09,-0.01ZM341.2,209.54l0.67,-0.31l0.12,0.68l-0.63,0.23l-0.17,-0.61ZM339.58,207.08l0.82,1.76l-1.56,-0.79l-0.5,-1.51l-1.69,0.03l-0.56,0.29l1.65,-1.83l0.45,0.17l0.45,1.56l0.94,0.31ZM330.29,194.75l3.73,2.02l0.42,0.38l0.41,1.25l1.22,1.1l-1.12,-0.16l-1.38,-1.01l-1.54,-2.01l-1.74,-1.59ZM337.16,200.01l0.15,0.02l-0.03,0.02l-0.13,-0.04ZM336.24,209.27l-0.13,-0.17l0.54,-0.43l-0.06,0.17l-0.36,0.43ZM335.04,205.4l-0.51,-0.03l-0.43,-0.53l0.3,-0.6l0.65,0.34l-0.01,0.82ZM331.51,203.67l-0.81,-1.21l0.1,-0.34l1.25,0.9l-0.54,0.65ZM324.56,197.56l0.23,0.13l-0.29,0.05l0.06,-0.18Z\",\n            name: \"Solomon Is.\"\n          },\n          PF: {\n            path: \"M818.2,218.52l0.51,-0.27l0.21,0.07l-0.66,0.22l-0.06,-0.02ZM809.81,211.26l0.74,0.09l-0.0,0.04l-0.63,0.19l-0.11,-0.33ZM740.27,279.5l-1.27,0.03l-0.3,-0.86l1.3,-0.09l0.27,0.91ZM741.11,280.1l0.34,0.11l0.08,0.22l-0.31,-0.13l-0.11,-0.2Z\",\n            name: \"Fr. Polynesia\"\n          },\n          FJ: {\n            path: \"M508.66,272.92l-0.0,-0.25l0.48,-0.39l-0.19,0.44l-0.29,0.21ZM497.43,272.16l0.3,-0.39l1.49,-0.09l1.33,-1.19l2.96,-0.78l1.51,-1.03l1.76,-0.2l-0.73,1.08l-1.04,0.74l-0.42,0.85l-0.01,1.03l-0.66,0.07l-0.66,-0.67l-1.06,-0.06l-1.33,0.86l-0.38,0.62l-0.94,-0.03l-0.92,0.55l-0.61,-1.13l-0.59,-0.21ZM506.04,271.76l0.18,-0.16l0.91,-0.62l-0.06,0.73l-1.03,0.05ZM494.84,277.19l0.18,0.54l2.2,1.7l-0.12,0.68l0.59,2.25l-2.1,0.26l-1.39,0.9l-1.42,0.11l-4.48,-1.33l-0.39,-1.1l1.18,-1.05l-0.08,-0.9l0.62,-0.57l2.18,-1.09l0.98,0.03l1.79,-0.6l0.27,0.17Z\",\n            name: \"Fiji\"\n          },\n          FM: {\n            path: \"M343.07,91.63l0.52,0.12l-0.04,0.44l-0.24,-0.01l-0.23,-0.55Z\",\n            name: \"Micronesia\"\n          },\n          WS: {\n            path: \"M569.03,249.95l0.88,-0.15l1.69,0.49l0.54,0.55l-2.46,-0.35l-0.65,-0.54ZM563.84,247.6l2.37,-0.43l0.64,0.55l0.25,0.72l-0.18,0.45l-1.9,0.02l-1.19,-1.3Z\",\n            name: \"Samoa\"\n          },\n          VU: {\n            path: \"M427.15,292.8l0.11,0.66l0.88,0.72l-0.11,0.23l-1.03,-0.95l0.15,-0.66ZM426.24,288.06l-0.02,0.44l0.75,0.77l-1.67,-0.73l0.05,-1.24l0.36,-0.08l0.52,0.83ZM419.3,279.22l0.36,-0.42l0.88,-0.01l0.69,0.96l-0.13,0.23l-1.13,-0.03l-0.17,-0.53l-0.5,-0.21ZM418.76,271.53l0.32,0.34l0.39,0.28l-0.55,0.09l-0.16,-0.71ZM417.42,268.27l1.12,-0.64l0.52,1.0l-1.39,-0.19l-0.26,-0.18ZM415.67,261.93l0.56,-0.52l0.37,-0.06l-0.54,0.6l-0.39,-0.01ZM411.57,267.12l-0.21,-0.24l0.28,-1.05l0.37,0.19l0.41,0.98l-0.85,0.12ZM412.83,267.52l2.5,1.78l0.24,0.51l-1.11,0.03l-0.96,0.5l-0.67,-2.83ZM413.26,252.79l0.07,-0.27l0.53,0.01l-0.14,0.32l-0.47,-0.07ZM413.39,249.66l-0.21,-0.43l0.16,-0.09l0.23,0.34l-0.18,0.19ZM406.71,256.46l0.77,1.0l0.47,2.45l0.4,0.33l0.73,-0.04l0.82,-0.96l0.52,0.72l0.47,2.25l-0.56,0.51l-1.03,-0.02l-0.95,0.43l-0.96,-1.46l0.1,-1.54l-0.89,-2.74l0.12,-0.93Z\",\n            name: \"Vanuatu\"\n          }\n        },\n        height: 606.4292604642054,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 180\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"se_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 1452.0211302823068,\n          bbox: [{\n            y: -9262763.575792028,\n            x: 1223668.3208382255\n          }, {\n            y: -6888448.113700481,\n            x: 2695330.0420880616\n          }],\n          left: 0\n        }],\n        paths: {\n          \"SE-O\": {\n            path: \"M30.44,1096.25l0.92,2.76l-0.08,6.39l0.24,0.37l2.22,0.95l4.39,0.22l4.65,-0.92l3.73,-2.88l2.0,-5.35l1.04,-4.84l2.48,-7.09l0.23,-4.85l1.83,-6.22l2.29,-4.33l5.69,1.46l1.9,-0.2l1.65,-1.07l0.8,0.08l7.15,4.43l0.98,0.15l0.89,-0.2l1.17,-0.93l0.16,-3.08l1.06,-0.69l3.83,-0.61l1.79,0.26l1.16,0.69l1.65,3.03l1.12,0.68l5.49,1.98l1.1,0.12l5.83,-1.35l1.0,0.11l0.33,0.22l-0.42,0.24l-3.27,0.56l-0.59,0.97l0.73,1.31l2.93,1.37l1.47,1.14l1.33,0.14l1.61,-0.68l1.31,-0.14l1.45,1.83l1.29,0.75l0.94,-0.3l1.0,-1.04l1.4,-2.24l2.16,-1.58l1.24,-0.1l3.68,2.8l0.79,0.9l0.47,1.37l0.96,6.18l5.55,7.34l4.96,17.51l24.53,7.29l6.04,0.02l2.09,-0.43l2.2,-0.84l0.91,-0.94l-0.22,-1.16l-3.96,-5.63l-0.29,-1.45l2.81,-7.77l2.38,-4.53l2.37,-3.17l1.59,-1.77l2.62,-2.1l2.13,-1.18l1.72,-0.31l41.61,1.01l1.61,0.52l3.98,2.19l2.69,6.26l3.08,5.78l0.13,3.53l0.75,1.56l3.8,4.77l0.92,1.65l0.5,3.39l0.64,1.17l1.95,0.86l2.64,0.31l0.54,0.23l0.67,1.19l0.84,0.16l2.71,-1.37l0.69,-0.66l0.62,-1.26l0.6,-0.22l1.12,0.22l1.22,0.7l1.12,1.98l0.88,2.52l1.5,1.67l4.16,2.51l-25.87,41.52l-13.05,22.06l0.84,4.96l-0.25,1.08l-0.77,1.13l-3.41,2.21l-9.04,3.69l-0.72,1.02l-0.52,2.22l-0.72,0.53l-0.93,-0.16l-3.24,-1.96l-1.6,-0.49l-7.15,0.63l-1.59,-0.33l-3.7,-0.08l-0.4,0.5l1.14,4.34l-0.06,2.56l-1.69,2.51l-1.18,3.46l0.36,4.35l-0.24,0.96l-2.14,3.5l-0.3,5.1l-0.49,1.23l-3.0,2.92l-2.88,3.7l-4.54,7.19l-3.69,2.55l-4.16,4.12l-2.73,1.94l-3.98,1.82l-1.2,1.32l-1.49,3.13l-1.52,0.36l-1.44,1.0l-1.72,1.85l-3.73,5.61l-2.23,2.18l-3.86,-0.99l-2.49,-2.44l-4.5,-0.66l-0.92,-0.76l-0.51,-1.15l0.1,-0.82l1.5,-2.85l0.11,-1.26l-0.46,-0.63l-5.98,-0.8l-1.14,-0.37l-1.95,-1.42l-3.31,0.59l-1.35,-0.56l-3.11,-3.23l-2.04,-1.13l-5.61,-0.39l-3.21,2.29l-2.4,2.91l-1.88,0.68l-2.28,-0.38l-0.74,-0.95l-2.65,-6.17l-0.1,-1.16l1.52,-3.42l-0.01,-1.84l-1.76,-2.17l-3.66,-3.37l-0.36,-1.35l0.26,-4.45l-0.18,-3.16l-2.1,-3.37l-0.46,-0.16l-10.62,3.51l-5.09,0.77l-7.64,-1.35l-2.66,0.29l0.14,-3.61l-1.49,-0.68l-0.48,0.29l-0.33,1.26l-0.59,0.48l-0.44,-0.06l-0.56,-2.31l-1.5,-2.7l0.53,-1.68l4.46,-0.54l0.96,-1.57l-0.04,-0.47l-3.69,0.8l-1.88,-0.0l-1.59,-0.25l-3.41,-1.57l-1.68,-0.17l-0.43,0.46l0.22,1.38l-1.64,0.13l-0.69,-0.34l0.06,-1.85l6.36,-5.04l0.74,-1.12l-0.49,-0.95l-1.26,-0.22l-2.52,0.46l-4.26,-5.02l-1.43,-0.22l0.82,-0.76l1.58,-0.6l0.3,-0.52l-0.63,-1.81l0.69,-0.75l3.44,-1.02l0.29,-0.38l0.0,-0.61l-0.86,-0.4l0.83,-0.49l0.45,-0.96l-0.19,-0.53l-1.71,-0.83l0.37,-1.29l2.93,-4.09l0.95,-2.61l0.17,-1.59l-1.32,-3.11l0.17,-0.69l0.89,-0.69l-0.25,-1.35l1.55,-0.47l0.7,-1.79l0.81,-7.01l2.34,-0.58l1.03,-1.88l-0.43,-0.53l-1.68,-0.1l-0.47,-0.64l-0.48,-2.56l-2.11,-2.55l-0.29,-2.1l0.99,-1.21l3.78,-1.58l0.18,-0.59l-1.25,-1.41l-1.54,0.31l-2.79,1.54l-3.64,-0.3l-1.8,0.27l-0.34,0.38l-0.06,1.18l-0.69,0.38l-2.35,0.09l-4.12,2.92l-2.47,2.63l-1.73,0.04l-1.68,-0.7l-0.48,0.08l0.56,1.72l-1.34,-0.34l-0.51,-1.21l0.45,-2.01l1.03,-2.46l1.52,-2.73l1.7,-2.08l3.7,-3.26l-0.04,-0.63l-0.61,-0.42l0.63,-0.72l0.96,-0.69l2.2,-0.84l0.17,-0.62l-1.18,-1.51l-0.46,-0.13l-1.75,0.69l-2.4,2.57l-2.09,-5.56l-0.81,-0.29l-0.4,0.46l0.43,2.87l-0.11,3.37l-0.67,3.34l-1.27,2.76l-1.82,2.3l-1.92,1.77l-3.66,2.25l0.82,-1.3l1.94,-1.77l0.0,-0.73l-0.44,-0.4l-1.16,0.15l-1.82,0.81l-0.33,-0.13l-0.28,-0.94l0.31,-0.87l0.66,-0.64l3.06,-0.44l0.3,-0.62l-1.68,-2.11l0.08,-2.26l-0.43,-0.41l-1.46,0.24l-1.67,3.3l-1.66,0.79l4.6,-7.79l0.59,-1.41l-0.19,-0.51l-0.52,0.16l-0.58,1.03l-2.85,3.11l-1.64,1.18l-0.98,2.02l-1.6,0.64l-1.75,-0.56l-1.87,0.01l-1.59,2.38l-0.32,-0.64l0.34,-1.9l-1.37,-3.0l0.26,-1.45l0.71,-0.43l2.29,0.25l0.43,-0.5l-0.47,-1.83l0.51,-0.76l1.19,-0.71l1.03,-1.09l-0.11,-0.63l-2.37,-1.16l-1.15,-2.23l0.91,-1.06l0.2,-3.53l1.59,-1.33l0.51,-1.11l-0.37,-0.55l-0.9,0.0l0.09,-1.07l-1.11,-1.32l0.46,-2.65l-0.66,-1.6l-2.62,-2.99l0.47,-2.63l-0.17,-0.45l-0.6,-0.3l-1.54,0.01l-0.43,-0.56l0.07,-1.56l0.66,-1.42l1.25,-0.39l0.27,-0.46l-0.23,-1.23l1.67,-2.86l0.0,-4.47l-0.65,-0.9l-1.39,-0.51l-0.27,-0.7l-0.0,-2.35l-0.47,-1.96l0.46,-1.36l-0.29,-0.48l-3.42,-0.86l-1.69,-0.89l-0.63,-1.01l0.51,-1.22l4.36,-2.16l0.23,-0.46l-0.41,-0.31l-2.78,0.18l-1.04,-0.36l-0.42,-1.13l0.26,-1.08l4.94,-5.8l1.68,-0.94l6.7,-0.92l2.02,0.7l1.4,4.79l1.23,2.33l1.46,1.94l1.06,0.97l0.55,0.11ZM32.09,1185.22l-0.46,-1.26l-2.63,-2.55l0.12,-1.16l1.26,-1.39l6.64,-5.07l2.3,-0.65l2.64,-1.74l2.99,0.32l1.22,-0.33l0.27,-0.49l-0.21,-1.83l1.18,-1.56l-0.36,-1.06l0.69,-0.38l1.01,-0.0l2.15,0.54l0.83,2.19l2.66,1.62l1.09,1.45l0.53,3.91l-0.1,4.36l-0.54,1.61l-3.16,0.7l-3.16,1.9l-3.48,-0.92l-1.7,0.66l-1.19,-1.71l-2.04,-0.44l-1.96,0.52l-1.66,1.15l-1.17,1.98l-1.0,-0.32l-2.13,-1.65l-0.65,0.32l0.0,1.29ZM50.9,1229.48l0.84,0.01l0.93,-0.64l0.22,0.28l0.86,-0.19l0.3,0.56l-0.19,0.78l-1.29,-0.67l-1.34,0.33l-0.32,-0.46ZM50.81,1188.98l-0.01,1.51l0.44,1.02l-0.81,2.94l-0.87,0.38l0.18,-1.35l-0.26,-0.48l-1.49,-0.3l-1.17,1.0l-0.83,1.67l-0.54,2.59l-0.49,0.64l-0.56,0.29l-1.63,-0.14l-1.49,1.71l-0.66,-0.02l-1.31,-1.24l-2.07,-0.38l-1.01,-3.6l0.14,-0.54l0.51,-0.29l1.89,0.27l1.19,-0.5l-0.24,-0.41l-1.39,-0.6l-2.68,-0.27l-0.41,-1.16l0.45,-1.46l1.0,-0.36l2.88,0.51l6.27,0.0l1.61,-0.49l2.28,-1.36l1.1,0.43ZM45.24,1223.62l-0.17,0.33l0.25,0.49l0.53,0.19l0.45,1.22l-1.44,-0.15l-0.95,-0.99l-1.01,-0.35l1.46,0.01l0.49,-0.39l-0.74,-1.31l0.05,-0.85l1.24,1.11l0.2,0.37l-0.36,0.32ZM39.79,1205.7l0.82,-0.69l1.09,-0.17l1.4,0.32l1.03,1.37l-2.79,2.35l0.03,-0.63l-0.46,-0.46l-0.6,0.29l-0.87,-0.36l0.17,-0.35l0.59,0.07l1.63,-0.72l0.22,-0.69l-0.97,-0.46l-0.96,0.34l-0.33,-0.19ZM0.64,1105.91l0.71,-0.72l-0.92,-1.0l1.41,-0.44l0.39,0.43l-0.11,1.06l0.3,0.43l1.34,-0.37l0.8,0.36l-0.56,0.84l0.37,0.64l0.71,0.23l-0.05,0.36l-0.53,0.56l-0.87,-0.25l-2.3,-1.8l-0.66,0.21l-0.04,-0.54Z\",\n            name: \"V\\xe4stra G\\xf6taland\"\n          },\n          \"SE-N\": {\n            path: \"M63.5,1235.91l2.51,-0.29l7.78,1.35l5.26,-0.8l10.36,-3.42l1.83,2.86l0.16,2.95l-0.26,4.5l0.45,1.69l5.34,5.38l0.01,1.41l-1.52,3.42l0.09,1.48l2.73,6.43l0.87,1.13l1.07,0.52l3.01,-0.17l1.94,-1.33l1.67,-2.22l2.87,-2.09l0.6,-0.1l5.41,0.76l4.0,3.93l1.64,0.71l1.24,0.01l2.18,-0.58l1.7,1.33l1.3,0.44l5.82,0.75l-0.25,1.55l-1.31,2.29l-0.1,1.22l0.59,1.34l1.34,1.11l4.45,0.64l2.37,2.37l3.6,0.96l-0.69,0.7l-0.69,2.19l0.23,2.91l0.57,1.36l2.92,4.45l0.98,0.16l1.53,-0.8l1.65,-2.08l2.29,-1.53l0.93,-1.74l10.06,-1.87l2.06,0.22l4.63,1.17l1.5,1.16l2.52,0.87l2.39,1.58l0.55,1.3l0.03,2.15l0.48,1.12l2.33,2.05l3.48,1.62l0.25,1.53l-1.33,2.73l-1.28,1.26l-2.29,1.28l-5.63,1.27l-2.67,1.23l-5.46,0.19l-4.69,1.16l-0.89,0.85l-0.88,1.58l-0.74,2.72l-0.13,9.84l-0.51,1.61l3.05,3.12l5.81,8.8l0.69,1.85l0.47,2.92l-0.29,3.44l0.32,1.86l1.08,2.6l1.39,1.62l-2.42,-0.29l-4.28,0.92l-4.9,2.42l-1.68,1.1l-4.36,3.84l-1.4,0.42l-0.88,-0.05l-2.62,-1.75l-9.41,-1.34l-2.29,-0.84l-0.15,-1.1l0.83,-2.49l-0.26,-1.54l-0.78,-1.04l-3.07,-1.67l-1.04,-1.0l1.39,-2.89l0.39,-2.22l-0.32,-2.02l-2.07,-4.42l-1.27,-4.39l-1.2,-1.33l-2.02,-0.43l-1.83,0.14l-2.68,0.79l-2.89,-0.24l-3.41,-3.04l-0.58,-1.09l-0.51,-2.3l-2.24,-1.92l-1.0,-1.46l-1.37,-3.53l0.37,-2.14l-0.34,-1.38l-4.33,-2.43l-0.36,-1.18l-1.98,-0.8l-1.26,-1.83l-0.79,-0.64l-2.31,-0.47l-1.77,-0.92l-2.41,-0.6l-1.13,-1.02l-0.7,-1.57l-0.2,-1.96l0.84,-1.49l-0.02,-0.8l-0.95,-2.91l-0.74,-0.85l-2.11,-0.8l-2.0,-1.28l-1.49,-1.6l-0.13,-1.65l-1.65,-1.35l1.12,-1.54l-0.36,-1.47l-1.93,-2.52l-0.43,-3.44l-0.36,-0.38l-2.56,0.0l2.4,-2.04l-0.12,-0.62l-0.88,-0.4l-2.77,-0.32l-1.53,-0.88l1.79,-0.2l1.01,-0.44l0.02,-0.72l-2.09,-0.74l-1.87,-0.03l1.51,-1.69l1.67,-0.6l0.37,-1.4l-0.29,-0.66l0.03,-1.27l-0.48,-0.92l-1.55,-1.34l-0.65,-1.14l-0.89,-0.36l-1.86,0.65l-0.8,-0.75l3.79,-3.94l-0.31,-0.65l-1.63,0.0l0.82,-1.03l-0.08,-1.43l-2.14,-3.66l-0.78,-0.57l-0.91,0.19l-2.56,2.75l-1.0,6.79l-0.45,0.9l-0.19,-0.7l-0.47,-0.29l-2.01,0.31l0.62,-2.11l-0.42,-0.51l-1.4,0.02l-0.8,-0.35l0.61,-0.85l-0.8,-4.43l0.23,-1.46l0.56,-0.95l1.83,-1.26l0.02,-0.68l-1.59,-0.99l0.65,-0.41l0.02,-0.66l-1.56,-1.1l0.81,-1.4l-0.3,-3.87Z\",\n            name: \"Halland\"\n          },\n          \"SE-M\": {\n            path: \"M131.13,1344.16l1.04,0.98l3.05,1.66l0.52,0.74l0.17,1.12l-0.86,3.25l0.79,1.3l2.34,0.72l9.36,1.33l2.48,1.7l1.23,0.12l1.81,-0.55l4.42,-3.89l1.6,-1.04l4.81,-2.37l4.01,-0.85l3.36,0.42l5.2,-0.0l28.38,-5.36l3.4,-1.33l1.58,-3.26l1.96,-1.4l1.62,0.22l1.52,1.19l1.25,0.32l7.92,-0.05l1.98,0.34l3.5,1.27l11.72,2.72l-5.27,6.29l-3.01,5.95l-0.24,1.08l0.2,0.91l1.81,3.37l0.68,2.8l0.82,1.03l3.39,1.38l2.31,0.33l0.85,0.79l1.26,2.69l0.51,2.13l0.18,2.12l-0.25,1.53l-1.84,3.96l-0.2,3.96l-1.13,0.66l-2.51,0.55l-1.26,0.84l-2.34,2.84l-2.54,2.43l-4.13,2.24l-1.72,3.73l-0.69,0.7l-2.84,1.3l-2.47,3.05l-1.84,4.06l-0.72,4.09l-0.15,5.38l0.77,1.76l1.2,1.18l2.56,1.55l0.75,1.05l0.14,2.99l0.62,1.3l2.26,2.07l2.76,3.61l0.58,1.59l-0.27,1.87l-0.88,1.13l-3.63,3.29l-2.05,1.38l-4.44,5.93l-1.16,0.72l-1.44,0.32l-4.3,-0.02l-1.98,-0.31l-1.9,-0.59l-5.43,-2.84l-1.87,-0.58l-2.23,-0.2l-3.84,1.3l-4.19,-0.59l-9.06,0.59l-1.45,0.38l-2.24,2.34l-0.86,0.35l-2.82,-0.41l-2.48,0.47l-6.38,3.46l-1.93,0.57l-4.61,0.31l-2.11,-0.25l-11.21,-3.3l-3.73,-0.11l-2.05,-0.48l-2.02,-1.27l-1.52,-0.34l-1.68,0.33l-1.75,1.13l-1.22,0.03l-1.85,-0.54l-2.64,1.05l-0.57,-0.03l-0.2,-1.2l1.89,-3.0l0.47,0.03l0.99,0.94l1.22,0.6l1.9,-0.04l1.7,-0.62l1.03,-1.04l-0.19,-1.72l1.48,0.53l0.16,-0.43l-0.67,-2.59l-3.25,-4.37l-0.7,-2.41l0.75,-2.81l1.86,-1.72l4.66,-2.7l1.64,-2.08l0.87,-2.76l-0.45,-2.03l-2.04,-1.95l-0.97,-1.47l-2.56,0.02l-0.5,-1.62l-0.4,-0.28l-1.61,0.07l-1.04,-0.32l-0.41,-0.74l1.14,-0.69l0.49,-2.12l-0.86,-4.3l-2.51,-2.1l-2.78,-1.18l-1.9,-1.91l-0.67,-1.39l-0.41,-2.61l-2.35,-1.92l-1.24,-4.54l-2.34,-1.66l-0.61,-0.74l-0.27,-1.75l-0.56,-1.26l-6.48,-6.83l-3.27,-5.56l-0.87,-3.88l-1.68,-2.92l-0.8,-2.2l-2.9,-1.87l12.0,4.11l1.32,1.69l2.7,1.67l2.25,-0.63l2.8,0.27l1.57,-0.22l1.31,-0.89l0.93,-1.44l0.42,-1.52l-0.27,-1.43l-3.25,-1.66l-3.59,-6.42l-5.91,-3.46l-1.31,-1.94l2.17,-3.13l3.62,-1.09l8.26,2.36l3.87,-1.23l1.37,-1.59Z\",\n            name: \"Sk\\xe5ne\"\n          },\n          \"SE-K\": {\n            path: \"M243.35,1383.41l0.15,-3.35l1.8,-3.87l0.31,-1.78l-0.75,-4.64l-1.3,-2.77l-0.71,-0.81l-1.16,-0.49l-1.77,-0.19l-3.08,-1.21l-0.62,-0.74l-1.15,-4.03l-1.47,-2.81l3.12,-6.54l5.46,-6.5l3.48,1.16l7.01,5.24l1.78,0.8l9.91,2.23l1.74,0.09l1.69,-0.43l2.29,-1.66l2.38,-2.63l1.25,-2.34l3.54,-0.28l3.22,-0.82l1.08,0.01l4.49,1.79l2.02,0.1l0.73,-0.38l1.56,-2.01l1.28,-0.34l3.31,0.41l1.84,-0.24l3.72,-3.02l2.56,-0.04l1.49,0.63l3.73,0.68l1.24,-0.29l1.42,-1.8l1.69,0.01l1.17,0.65l4.79,4.28l3.85,2.79l5.13,5.13l4.13,2.4l8.37,2.4l3.56,-0.01l1.83,-0.88l-1.75,7.15l-1.21,0.85l-1.06,2.54l-4.88,4.27l-3.97,6.95l-1.36,1.39l-0.83,-0.11l-2.73,-1.57l1.84,-2.94l0.53,-1.86l-0.18,-0.45l-1.71,-0.86l-3.31,1.06l-1.47,-0.04l-1.08,-1.52l-0.52,-0.12l-0.54,0.3l-0.6,-0.7l-1.44,-0.47l-1.55,-1.07l-1.52,0.9l-1.37,1.6l-0.99,0.62l-0.68,-0.84l0.95,-1.51l0.31,-1.19l-0.15,-0.42l-1.01,-0.56l-1.05,0.3l-2.54,1.7l-2.97,1.25l-0.53,0.72l-0.12,1.39l-3.02,-2.47l-1.19,-0.26l-1.11,0.23l-1.95,1.88l-0.65,1.79l-2.81,0.13l-0.95,-0.27l1.05,-0.27l0.35,-0.56l-1.89,-3.39l-0.64,-0.06l-1.41,1.59l-2.54,1.28l-2.68,0.39l-2.78,-1.48l-1.55,0.71l-2.39,0.0l-0.28,-0.18l-0.28,-1.67l-0.8,-0.78l-2.77,0.66l-0.33,0.55l0.64,1.85l-3.28,-1.19l-2.47,-0.38l-3.3,1.12l-3.95,-0.26l-0.38,0.42l0.08,1.29l-0.85,0.3l-2.24,-1.72l-1.44,-0.64l-3.68,0.02l-1.61,0.6l-1.23,1.47l-0.32,3.19l0.58,0.69l1.0,0.35l1.08,2.3l1.9,2.27l1.14,2.43l-1.38,0.81l-1.6,1.59l-0.73,-1.26l-1.36,0.0l-0.99,1.09l-1.39,-0.44l-2.27,-0.03l0.7,-0.64l0.0,-0.59l-1.02,-1.11l-0.25,-1.82l-0.68,-0.29l-1.17,1.11l-0.56,-0.59l-0.0,-0.47l-0.97,0.01ZM326.75,1386.94l0.39,-0.14l0.65,-0.35l-0.77,0.99l-0.27,-0.5ZM324.9,1376.76l0.99,0.15l-0.92,1.54l-0.58,-0.81l-1.85,-1.3l0.88,-0.2l1.49,0.62ZM319.08,1377.97l0.82,0.35l2.14,0.09l-1.33,0.52l-0.0,2.73l-0.65,-0.07l-2.03,-1.3l-0.47,-1.11l0.69,-1.14l0.62,-0.28l0.23,0.2ZM315.88,1378.93l-1.01,0.42l-0.63,-0.73l1.36,-1.69l0.57,-0.25l-0.28,2.26ZM311.19,1378.86l-0.16,0.29l-2.01,-0.2l-0.26,-0.38l0.36,-1.08l0.57,-0.3l1.42,0.32l0.33,0.4l-0.25,0.94ZM305.52,1379.24l-0.58,0.35l-1.16,-0.3l-0.22,-0.49l0.96,-0.74l1.7,-0.53l-0.7,1.7ZM300.53,1374.47l0.0,-0.09l0.03,0.02l-0.03,0.07ZM271.42,1377.85l0.08,-0.01l-0.03,0.06l-0.05,-0.04ZM262.46,1387.76l0.53,0.25l-0.28,0.68l-0.19,-0.24l-0.06,-0.69Z\",\n            name: \"Blekinge\"\n          },\n          \"SE-I\": {\n            path: \"M560.65,1196.09l0.19,1.07l1.18,0.61l2.42,-0.57l2.11,0.02l1.71,0.91l-1.63,0.38l-0.82,1.08l-3.28,-0.78l-1.6,0.67l-1.34,1.05l-3.07,1.0l-1.5,1.75l0.08,0.59l1.27,1.06l-0.03,1.21l-2.04,3.01l-1.61,-0.48l-1.71,-1.4l-2.26,-3.51l0.15,-0.92l1.91,-2.18l1.25,-2.82l0.68,-0.68l0.95,-0.26l2.26,0.06l1.17,-0.8l2.71,0.37l0.87,-0.43ZM565.47,1159.44l-2.58,0.68l-2.2,-1.05l-1.48,-3.3l1.65,0.0l1.82,0.88l3.8,0.69l1.17,0.75l-2.17,1.36ZM502.26,1291.76l-1.1,0.0l-0.4,0.4l0.0,0.67l0.66,0.71l-2.13,1.75l-0.72,2.07l-0.74,0.53l-6.35,2.53l-2.17,0.29l-1.57,-0.72l4.16,-5.86l0.24,-1.09l-0.34,-2.05l0.66,-0.63l2.42,-0.71l1.13,-0.8l1.8,-5.14l-0.08,-0.46l-0.46,-0.07l-1.62,0.81l-2.81,2.27l-1.07,-0.35l1.65,-2.54l0.15,-1.23l-0.75,-0.79l0.75,-1.62l-0.21,-0.58l-2.7,-1.01l-1.85,-8.32l-3.93,-2.72l0.1,-1.55l0.9,-1.69l2.46,-1.55l1.02,-1.94l0.39,-2.11l-0.31,-1.45l0.85,-1.42l-0.18,-0.59l-1.25,-0.99l-0.84,-1.26l-0.05,-1.74l-1.65,-3.79l-0.5,-2.18l-0.1,-2.16l1.06,-3.5l2.2,-2.83l11.17,-9.34l9.38,-12.82l2.39,-2.22l3.28,-1.2l2.93,0.77l1.2,-0.53l2.34,-5.05l2.4,-2.62l1.43,-0.68l1.43,-0.15l1.09,0.43l0.9,1.04l0.77,1.69l-0.46,1.45l0.15,0.79l0.71,0.66l0.67,1.95l1.37,1.45l0.68,-0.2l0.47,-2.4l2.28,-2.28l0.5,-2.05l-0.88,-1.6l4.31,-0.72l-0.99,1.67l0.11,0.53l1.56,1.01l1.66,-0.07l0.38,-0.41l-0.02,-1.06l0.79,-0.42l1.26,-0.35l1.54,0.09l-0.22,0.57l0.87,2.17l0.73,0.93l1.77,0.98l2.05,2.96l-4.4,0.4l-2.09,1.72l-0.25,2.7l-1.11,-0.76l-0.94,0.16l-0.35,1.42l-1.06,1.95l0.0,1.13l0.4,0.82l-4.51,0.49l-2.96,-1.33l-1.14,0.25l-0.38,0.98l0.29,1.8l-0.9,3.25l-2.17,4.77l-0.17,1.04l0.63,0.67l2.48,0.64l-0.91,2.52l-0.34,2.91l-1.92,3.95l0.93,1.24l-0.42,1.3l0.3,1.19l1.08,0.64l0.59,-0.0l-0.53,1.38l0.25,0.52l2.66,0.88l2.79,0.48l0.64,-0.47l0.28,-0.81l1.63,0.83l1.03,1.84l0.24,1.22l-0.19,0.88l-0.85,0.38l-1.94,0.0l-1.71,-0.6l-1.19,1.13l-2.65,0.63l-2.2,1.19l-1.95,1.62l-1.62,1.86l-2.61,1.87l-0.99,1.67l0.47,1.87l0.76,0.49l1.78,-0.02l0.18,2.56l-2.13,0.83l-0.18,0.38l-5.81,1.07l-1.84,0.91l-0.22,1.09l0.39,0.39l-9.23,3.89l-1.82,1.19l-1.41,1.52l0.29,0.67l3.32,0.0l-5.24,2.28l-1.28,1.64l-0.47,5.02l0.79,1.48l1.17,0.81Z\",\n            name: \"Gotland\"\n          },\n          \"SE-H\": {\n            path: \"M397.74,1309.11l-3.21,1.48l-1.09,1.58l-0.84,4.8l-3.95,9.9l-1.06,4.97l-1.15,1.6l-1.53,0.8l-0.46,0.96l-0.38,2.72l0.47,0.73l-0.9,1.92l-0.36,2.74l-2.98,6.71l-0.45,1.9l-0.19,3.82l-0.98,1.43l-0.73,2.43l-3.38,6.33l-1.16,1.11l-1.4,0.76l-1.21,0.05l-0.87,-0.88l0.03,-3.82l-0.91,-2.64l0.55,-2.07l-0.1,-6.42l0.55,-1.68l-1.53,-5.34l0.5,-8.22l1.35,-3.83l1.55,-2.19l0.75,-2.88l11.39,-22.66l1.03,-0.88l5.28,-0.88l1.27,-1.45l1.15,-3.65l3.06,-5.98l3.55,-5.4l2.92,-5.77l1.46,-8.14l2.01,-0.99l0.91,-0.91l0.45,-0.96l0.5,-7.17l1.45,-1.23l2.05,-2.59l1.05,-0.74l1.53,-0.46l0.47,1.19l0.82,0.41l0.92,-0.32l0.37,-0.55l1.25,2.3l-1.65,0.23l-1.46,1.2l-2.36,3.43l1.47,3.18l0.11,1.3l-1.04,2.4l-0.05,1.16l-1.47,0.78l-0.87,3.24l-2.87,4.33l-0.86,3.9l-1.03,0.96l-3.01,1.34l-0.17,0.53l0.42,0.84l1.45,1.14l-1.76,1.62l-1.94,2.69l0.83,3.53l-0.09,1.65l-0.99,0.82l-0.71,1.19l-1.11,5.08l-0.68,1.53ZM389.85,1209.83l0.3,-0.46l0.77,-0.03l1.15,1.38l0.9,0.21l0.35,1.49l-1.23,0.4l-0.73,-1.81l-1.51,-1.18ZM370.3,1313.9l-1.9,0.14l-1.46,0.89l-0.96,0.18l-0.58,0.7l1.39,3.47l0.09,4.69l-0.45,1.22l-1.75,0.82l-0.96,-0.07l-1.54,-1.02l-1.18,0.13l-2.35,1.1l-0.77,0.93l-1.76,3.33l-0.54,5.87l-0.3,0.67l-2.02,0.36l-0.87,2.82l-3.25,5.04l-1.56,3.52l-1.92,7.8l-1.48,0.4l-0.76,0.56l-3.25,-0.01l-8.11,-2.33l-3.96,-2.29l-5.11,-5.11l-3.88,-2.81l-4.81,-4.3l-1.35,-0.77l-2.42,0.04l-1.79,1.95l-3.99,-0.62l-2.79,-0.82l-1.76,0.26l-2.0,1.52l-0.25,-0.46l0.89,-3.58l0.96,-1.36l1.46,-1.13l0.36,-1.3l0.67,-10.51l-0.43,-3.26l-1.38,-4.43l0.1,-0.84l0.34,-0.47l1.63,-0.65l2.22,-1.47l4.25,-0.23l1.84,-0.88l0.68,-0.79l0.31,-1.08l-0.1,-1.39l-1.97,-5.41l-0.04,-0.86l0.34,-0.6l0.71,-0.59l1.72,-0.52l1.13,0.14l4.95,2.03l1.93,-0.6l6.22,-0.04l2.12,-0.53l1.65,-1.37l0.86,-1.84l-0.0,-1.66l-2.81,-6.12l-5.1,-6.08l-2.96,-2.43l-1.13,-2.32l-4.53,-1.81l-0.87,-0.67l-0.56,-3.5l-2.18,-1.83l-0.46,-2.93l-2.72,-3.37l-0.56,-2.29l0.13,-0.77l1.66,-1.76l0.39,-1.64l-0.39,-2.97l0.76,-2.89l-0.35,-3.5l0.27,-1.16l0.52,-0.86l1.11,-0.5l0.8,0.26l1.89,1.89l1.01,0.01l0.68,-0.54l0.63,-1.11l0.77,-2.68l1.38,-1.9l0.22,-1.24l-0.54,-1.92l-2.15,-0.92l-0.78,-0.93l3.63,-4.84l-0.48,-0.89l-1.83,-0.75l-1.49,-2.0l-2.58,-1.31l-2.44,-0.54l-5.14,-3.46l-1.21,-1.36l1.07,-3.54l1.82,-1.06l4.36,-1.55l1.43,-2.16l4.11,-4.51l2.3,-1.03l3.84,-0.46l2.55,0.35l4.3,2.09l4.84,0.85l2.11,0.93l1.66,0.1l1.64,-0.48l1.86,-1.22l2.71,-2.83l0.84,-1.34l0.31,-1.63l-0.92,-4.3l0.13,-0.7l1.28,-1.65l0.8,-1.66l-0.47,-1.67l-2.92,-3.61l-0.12,-0.72l0.64,-2.12l-0.87,-1.76l4.78,0.6l2.22,-0.13l2.04,0.3l1.0,-0.21l1.82,-2.97l1.18,-0.63l5.68,-1.48l4.38,0.41l2.42,-0.54l2.51,0.01l1.45,0.65l2.78,1.99l3.41,-0.2l1.74,0.49l1.02,1.43l0.96,4.6l1.77,3.39l0.86,0.77l2.66,0.34l1.27,2.51l0.53,0.11l1.45,-1.01l0.41,2.46l2.34,2.43l-2.79,-1.3l-0.45,0.06l-0.1,0.45l0.6,1.48l2.0,1.55l0.17,0.77l-0.51,0.75l-0.85,-0.01l-1.07,-0.56l-0.77,-0.69l-1.3,-2.4l-0.75,-0.44l-0.57,0.32l-0.22,1.9l-0.4,0.46l-3.41,-0.26l0.12,-1.38l-0.44,-1.31l1.93,0.73l0.54,-0.09l-0.06,-0.54l-8.81,-7.65l-0.94,-0.04l-0.76,0.63l-0.36,1.05l0.75,1.72l2.06,2.11l3.33,1.22l-1.01,1.42l0.41,0.93l-0.18,1.38l-0.33,0.3l-2.4,-1.64l-3.06,-0.9l-0.44,0.15l0.0,0.46l0.66,1.21l-1.62,-0.55l-0.51,0.39l0.14,1.03l4.04,3.54l-6.34,-4.18l-0.46,0.02l-0.14,0.44l0.55,1.75l0.91,1.33l2.4,1.86l3.81,2.1l2.87,2.87l1.46,2.23l1.69,0.69l2.84,2.54l-0.69,0.91l2.8,0.6l1.2,1.49l-0.83,0.0l-0.4,0.4l0.24,0.92l-3.44,-0.28l-4.13,-1.67l-0.46,0.08l0.41,1.38l1.82,1.8l0.57,1.38l-0.08,0.43l-0.5,0.08l-1.37,-0.47l-0.44,0.12l-0.04,0.45l0.81,1.19l1.52,0.37l0.8,1.41l-4.11,3.12l-0.14,-2.83l-0.66,-0.33l-0.9,0.53l-1.52,-0.52l-0.08,0.5l1.26,1.78l-1.1,1.02l-0.21,1.03l1.48,0.94l-1.46,0.0l-0.4,0.4l0.0,0.61l0.39,0.4l5.22,0.14l2.28,0.71l3.76,7.48l-1.32,-0.29l-0.44,0.58l0.74,1.39l-2.02,0.76l-0.53,1.39l0.52,1.45l1.45,0.92l-1.42,0.39l-0.96,0.8l0.15,1.59l-3.44,-0.56l-2.14,0.73l-0.87,2.18l0.17,0.5l1.98,1.12l-1.31,1.48l0.7,0.95l-4.72,2.16l-1.28,2.04l1.56,3.26l-1.81,1.48l-0.54,2.5l0.5,2.71l1.11,2.26l2.0,2.73l1.59,1.09l0.79,-0.08l0.5,0.6l0.97,1.91l-0.69,0.37l-0.18,0.49l1.68,2.99l-2.32,-0.63l0.07,-0.83l-0.97,-0.57l-0.63,0.2l-0.7,0.81l-0.46,1.38l-3.23,-1.03l-0.86,-0.03l-0.34,0.64l1.09,1.33l1.13,0.76l-1.26,0.14l-0.91,0.92l-0.44,1.78l0.38,2.35l1.84,2.52l-2.13,3.65l0.23,4.26l-2.1,5.7l-0.02,1.11l0.55,1.08l0.86,0.57ZM370.77,1314.0l1.72,-1.11l0.79,-0.1l-0.32,1.66l-0.52,0.18l-1.67,-0.64ZM380.08,1211.78l7.12,6.24l1.77,1.26l-4.02,-2.01l-4.87,-5.49ZM386.36,1235.27l0.37,-0.81l0.83,-0.46l1.26,0.18l0.45,-0.32l0.23,-1.82l1.16,0.29l-0.04,1.09l-1.59,2.36l-0.3,0.11l-1.37,-0.99l-0.99,0.37ZM389.41,1215.68l-1.18,-0.92l-1.56,-1.02l0.53,-0.29l2.36,0.25l0.62,0.64l-0.76,1.33ZM388.68,1242.22l0.23,0.11l0.63,0.53l-0.72,-0.37l-0.14,-0.27ZM381.52,1281.36l1.04,0.59l-1.02,0.17l-0.02,-0.76ZM379.55,1275.73l0.2,1.0l-1.62,0.86l-0.29,-0.24l-0.18,-0.61l0.56,-0.93l1.33,-0.08Z\",\n            name: \"Kalmar\"\n          },\n          \"SE-G\": {\n            path: \"M310.69,1272.3l2.02,1.63l0.1,2.24l0.57,1.42l1.12,0.85l4.34,1.7l0.47,1.47l0.58,0.76l2.97,2.44l5.02,5.96l2.26,4.69l0.44,1.2l-0.02,1.36l-0.64,1.38l-1.51,1.25l-1.82,0.42l-6.17,0.03l-1.8,0.59l-4.71,-1.98l-1.37,-0.19l-2.14,0.61l-1.0,0.84l-0.48,0.98l0.05,1.05l1.65,4.04l0.42,2.52l-0.19,0.77l-0.49,0.59l-1.54,0.73l-4.35,0.26l-2.3,1.51l-1.66,0.66l-0.73,0.97l-0.11,1.17l1.39,4.48l0.41,3.12l-0.67,10.42l-0.23,0.9l-1.33,0.99l-1.15,1.61l-0.98,3.29l0.44,1.63l-1.09,0.96l-1.5,0.18l-3.38,-0.41l-1.54,0.39l-2.14,2.35l-1.67,-0.08l-4.63,-1.81l-8.16,1.12l-0.8,0.65l-0.82,1.95l-2.32,2.57l-2.13,1.54l-1.3,0.32l-1.58,-0.08l-9.77,-2.19l-1.64,-0.73l-7.04,-5.26l-3.88,-1.3l-12.39,-2.88l-3.53,-1.27l-2.12,-0.36l-7.82,0.06l-0.96,-0.21l-1.5,-1.18l-1.26,-0.44l-1.13,0.15l-2.2,1.56l-0.63,0.85l-0.87,2.32l-3.11,1.21l-28.32,5.34l-4.91,-0.0l-1.86,-2.12l-1.02,-2.43l-0.3,-1.64l0.29,-3.55l-0.49,-2.99l-0.77,-2.05l-5.88,-8.9l-2.89,-2.81l0.5,-1.38l0.13,-9.82l0.66,-2.44l1.14,-1.9l3.68,-1.11l6.59,-0.35l2.7,-1.23l5.63,-1.27l1.45,-0.64l2.51,-2.14l1.15,-1.92l0.39,-1.38l-0.27,-1.65l3.69,-4.34l0.65,-0.24l1.06,-0.2l1.81,0.91l2.77,2.08l1.15,0.22l0.77,-0.21l5.35,-3.36l4.02,-0.5l1.57,-0.58l1.95,-0.0l5.08,2.69l1.98,1.47l1.42,2.21l2.71,6.31l0.81,1.03l1.16,0.88l2.15,0.86l2.31,0.26l1.16,-0.59l2.49,-3.27l1.55,-2.94l0.22,-1.89l-0.49,-2.7l-1.77,-1.39l-0.61,-1.62l0.87,-3.64l0.44,-5.18l0.55,-1.67l1.39,-1.21l1.76,-0.65l7.88,-1.31l11.63,-4.23l3.41,-0.75l2.57,-0.0l5.56,2.55l0.64,0.66l0.71,2.11l1.12,1.19l1.69,0.83l2.24,0.24l1.39,-0.18l1.45,-0.73l3.67,-2.79l1.89,-0.97l1.49,-0.28l2.6,0.5l0.66,-0.16l0.33,-1.23l-1.0,-3.12l4.56,0.71l9.3,-0.42l3.05,0.28l9.1,2.36Z\",\n            name: \"Kronoberg\"\n          },\n          \"SE-F\": {\n            path: \"M231.39,1292.76l0.42,3.06l-0.19,0.94l-1.43,2.7l-2.61,3.32l-0.55,0.2l-1.9,-0.23l-2.05,-0.82l-1.61,-1.55l-2.7,-6.29l-1.59,-2.45l-2.12,-1.58l-5.24,-2.77l-2.3,-0.03l-1.68,0.61l-4.03,0.5l-6.0,3.54l-0.64,-0.12l-2.73,-2.04l-2.02,-1.03l-1.48,0.19l-1.01,0.43l-3.68,4.33l-3.34,-1.56l-2.13,-1.89l-0.29,-0.71l-0.05,-2.25l-0.74,-1.63l-1.18,-0.95l-3.97,-1.66l-2.09,-1.38l-6.46,-1.24l-10.36,1.94l-0.51,0.44l-0.65,1.47l-1.68,1.01l-2.22,2.56l-1.19,0.63l-0.57,-0.17l-2.48,-4.07l-0.72,-2.4l0.02,-1.3l0.6,-1.95l3.55,-3.41l3.76,-5.65l1.63,-1.74l1.26,-0.87l1.72,-0.51l1.62,-3.31l1.04,-1.12l3.86,-1.73l2.8,-1.98l4.2,-4.15l3.73,-2.59l4.61,-7.28l2.84,-3.66l3.05,-2.97l0.63,-1.61l0.28,-5.02l2.05,-3.26l0.34,-1.24l-0.37,-4.3l1.11,-3.27l1.76,-2.71l0.07,-2.8l-1.03,-3.96l4.79,0.4l6.98,-0.64l1.35,0.4l3.34,2.01l1.39,0.21l0.7,-0.23l0.56,-0.7l0.97,-2.95l3.78,-1.4l0.78,-0.65l4.35,-1.58l2.17,-1.16l1.57,-1.29l0.84,-1.24l0.33,-1.35l-0.06,-1.36l-0.85,-3.37l12.65,-21.39l3.57,6.37l2.08,2.01l5.85,2.35l16.15,1.68l2.81,-0.23l1.55,-0.53l1.18,-0.98l1.19,-3.14l4.33,-1.0l2.45,4.25l1.47,5.24l2.4,2.81l0.45,1.05l-0.81,0.83l-2.18,0.57l-0.83,0.64l-1.43,3.8l0.49,2.05l-0.48,1.19l-0.01,1.07l0.55,1.28l3.26,4.39l0.49,2.39l1.22,3.37l3.28,5.77l1.49,1.32l1.79,0.52l16.59,1.15l1.35,1.51l5.19,3.49l1.0,0.46l1.62,0.17l1.82,0.87l1.07,0.81l1.39,1.92l1.55,0.48l-3.29,3.95l-0.34,0.91l0.49,1.21l2.3,1.04l0.59,0.75l-0.05,1.74l-1.39,1.94l-0.81,2.78l-0.51,0.87l-0.73,0.26l-2.26,-2.09l-1.51,0.02l-0.99,0.68l-0.96,2.4l0.35,3.53l-0.76,2.94l0.39,2.9l-0.27,1.3l-1.48,1.43l-0.42,1.59l0.69,2.68l2.7,3.34l0.3,2.2l-8.68,-2.25l-3.16,-0.29l-9.26,0.42l-4.66,-0.72l-0.68,0.39l-0.13,0.45l1.05,3.64l-2.69,-0.46l-1.88,0.34l-2.04,1.05l-3.61,2.75l-1.35,0.68l-1.05,0.12l-2.12,-0.22l-1.32,-0.65l-0.93,-0.95l-0.69,-2.06l-0.86,-0.96l-5.83,-2.7l-2.96,-0.02l-3.48,0.76l-11.67,4.25l-7.88,1.31l-1.99,0.77l-1.53,1.33l-0.73,2.09l-0.44,5.19l-0.87,3.82l0.76,2.01l1.7,1.3Z\",\n            name: \"J\\xf6nk\\xf6ping\"\n          },\n          \"SE-E\": {\n            path: \"M410.87,1168.7l0.1,-0.12l0.8,-0.18l-0.26,0.11l-0.63,0.18ZM408.13,1146.13l-1.01,-0.1l-0.27,-0.7l0.35,-0.21l1.61,0.54l-0.68,0.47ZM406.79,1152.69l-0.12,-0.34l0.91,-0.42l-0.31,0.42l-0.48,0.34ZM405.02,1143.8l-1.5,-0.39l-0.84,-0.93l0.59,-0.07l1.75,1.39ZM404.1,1174.75l0.57,0.37l0.42,-0.28l0.38,1.15l-0.36,0.32l-1.33,-0.53l0.0,-0.76l0.32,-0.28ZM335.52,1096.41l11.02,6.41l4.01,3.51l10.95,6.6l2.72,3.85l3.4,3.31l1.28,3.57l2.37,2.11l1.05,0.39l12.01,0.33l3.87,0.87l3.13,1.48l2.44,2.19l-36.35,-3.38l-0.44,0.4l0.0,0.74l1.64,1.23l0.21,0.61l-0.28,0.53l-0.76,0.17l-2.95,-0.49l-1.26,0.29l-0.31,1.01l0.55,0.37l1.5,-0.51l0.41,0.16l0.34,0.88l0.56,0.21l1.21,-0.64l2.91,1.15l1.77,-0.89l1.01,-1.15l0.66,-0.22l2.2,1.7l-0.02,1.39l0.36,1.01l1.17,0.61l1.05,-0.14l0.76,-0.61l1.29,-4.2l0.56,-0.63l5.18,2.31l7.98,-0.22l1.31,0.4l2.21,1.67l2.81,0.35l1.13,0.86l0.47,0.02l0.16,-0.44l-0.29,-1.44l2.15,0.49l-0.49,1.58l0.43,1.59l1.37,1.26l1.14,0.23l-0.44,0.47l0.0,0.56l0.4,0.4l1.46,0.0l-0.6,1.04l0.12,0.58l0.97,0.56l2.53,0.57l3.14,2.27l-0.94,0.44l-3.34,0.04l-1.63,0.58l-0.23,0.53l0.48,1.14l-1.22,0.87l-4.41,1.14l-1.1,1.11l-1.74,-0.73l-8.29,-1.2l-3.98,-1.94l-6.7,-1.77l-2.22,0.87l-0.24,0.43l0.35,0.34l2.37,0.26l14.34,5.95l2.28,0.22l0.71,0.4l0.54,1.07l-0.35,2.41l0.38,1.1l1.1,0.17l2.14,-1.09l0.58,0.61l0.19,1.73l-9.25,-1.34l-0.42,0.22l0.08,0.46l1.12,1.06l3.36,2.25l-0.04,1.67l1.09,0.59l0.95,-0.09l0.58,-0.49l-0.15,-1.51l4.22,-0.43l-0.43,1.16l-1.63,-0.09l-0.35,0.32l-0.35,1.8l-3.02,0.59l-0.35,0.4l0.0,0.68l0.33,0.39l1.5,0.28l4.41,2.08l-0.41,0.29l-0.03,0.68l1.53,1.53l0.66,2.54l-0.11,1.09l-1.57,-0.38l-0.73,0.76l0.3,0.76l0.97,0.92l-1.78,2.5l-3.45,-1.74l-4.08,-3.55l-3.03,-1.74l-0.48,0.06l-0.06,0.48l1.1,1.84l2.64,1.98l0.59,1.03l-1.08,0.02l-0.36,0.64l4.9,5.8l-0.95,0.34l-0.26,0.44l0.17,1.14l-0.23,0.46l-1.42,0.03l-0.44,0.26l0.17,0.48l3.6,1.81l0.78,1.16l-0.64,0.62l-1.38,-0.98l-1.97,1.0l-0.49,0.76l-1.25,-2.61l-1.13,-0.53l-0.44,0.11l-1.0,1.44l0.45,1.42l0.95,1.5l-1.54,-2.28l-1.48,-5.94l-1.24,-1.75l-1.18,-0.59l-4.28,0.14l-2.56,-1.9l-1.73,-0.76l-2.74,-0.02l-2.32,0.53l-4.36,-0.41l-1.81,0.27l-4.16,1.26l-1.36,0.72l-1.08,1.35l-0.65,1.54l-0.59,0.14l-2.09,-0.3l-2.12,0.13l-3.98,-0.7l-1.21,0.12l-0.59,0.88l0.97,1.66l-0.63,1.98l0.14,1.06l3.05,3.88l0.32,1.04l-2.01,3.12l-0.21,0.97l0.92,4.43l-0.23,1.21l-0.73,1.17l-2.65,2.77l-1.7,1.1l-1.27,0.38l-1.52,-0.09l-2.05,-0.92l-4.82,-0.84l-4.35,-2.1l-2.7,-0.36l-4.01,0.48l-2.69,1.24l-4.2,4.61l-1.32,2.04l-5.68,2.14l-0.71,0.75l-1.06,3.53l-16.41,-1.14l-1.42,-0.39l-1.31,-1.15l-1.43,-2.13l-2.54,-5.4l-0.95,-3.87l-3.32,-4.47l-0.44,-1.05l0.52,-2.1l-0.5,-1.84l1.31,-3.5l2.73,-0.95l0.86,-0.66l0.36,-0.88l-0.61,-1.5l-2.33,-2.68l-1.99,-6.45l-2.18,-3.35l-0.85,-0.23l-4.37,1.18l-0.63,0.75l-0.74,2.54l-0.93,0.8l-1.33,0.46l-2.65,0.22l-16.06,-1.67l-5.49,-2.19l-1.91,-1.82l-3.77,-6.72l25.92,-41.6l3.24,-2.35l2.25,-1.11l8.04,-1.85l3.59,-3.1l5.31,-6.08l1.97,-1.66l7.29,-3.71l2.02,-0.4l1.7,0.09l2.53,0.71l1.96,0.01l1.99,-0.43l7.59,-2.87l1.98,-1.2l1.78,-2.24l0.46,-1.79l-0.31,-2.44l0.49,-0.72l1.36,-0.83l6.55,-1.77l3.48,1.47l1.02,-0.13l1.13,-0.66l1.19,-2.35l1.77,-0.89l1.95,0.2l2.36,1.81ZM403.66,1169.3l0.65,-0.91l0.08,0.05l0.0,0.39l-0.73,0.47ZM398.39,1157.56l-0.45,0.14l-0.51,0.89l0.31,0.94l1.05,1.05l1.7,1.24l2.55,-0.25l-0.25,0.34l-1.37,0.79l-1.01,0.04l-2.34,-0.97l-1.72,-2.82l-0.32,-1.42l-0.66,-0.76l0.19,-0.51l1.02,-0.43l1.79,-0.58l1.42,-0.06l-0.61,1.0l-1.66,0.36l0.13,0.48l0.72,0.54ZM400.41,1167.12l-0.92,-0.17l-0.67,-1.34l-0.21,-1.05l0.46,-0.34l1.81,0.86l0.07,1.47l-0.54,0.58ZM396.85,1184.94l0.02,0.05l-0.98,-0.32l-0.66,-0.67l0.21,-0.47l1.29,-0.47l0.25,0.64l-0.66,0.77l0.52,0.47Z\",\n            name: \"\\xd6sterg\\xf6tland\"\n          },\n          \"SE-D\": {\n            path: \"M453.18,1112.79l1.54,0.83l1.98,1.37l-2.27,-0.95l-1.25,-1.25ZM360.53,1050.06l0.61,-0.33l38.13,-5.63l3.14,0.04l4.94,-2.29l7.0,1.07l5.3,-0.58l1.4,0.2l2.01,0.71l2.64,1.51l1.78,2.8l2.16,1.66l4.29,1.69l3.74,2.6l2.52,3.82l-0.36,1.55l-0.95,0.43l-3.68,0.37l-1.1,0.41l-0.77,0.82l-0.89,1.4l-0.31,2.37l0.1,2.71l-0.36,1.86l-3.18,2.68l-0.29,2.03l0.94,3.92l2.66,5.11l1.19,7.84l0.89,2.36l1.44,2.23l0.84,0.45l8.85,0.52l2.12,0.88l1.6,1.33l-0.35,1.05l1.15,1.03l1.07,0.39l-0.58,0.94l0.15,0.62l1.41,0.78l-0.44,1.16l-1.06,0.65l-4.15,-0.78l-0.4,0.59l0.67,1.24l1.0,1.02l2.01,1.25l-1.04,0.0l-0.37,0.25l0.12,0.46l-0.57,-0.02l-5.05,-3.14l-2.31,-0.94l-0.55,0.37l0.0,0.68l1.26,0.95l0.21,0.85l-1.29,5.39l0.18,0.39l2.01,1.2l-1.17,0.49l-8.21,-1.48l-0.42,0.19l0.04,0.46l2.27,2.67l0.28,1.15l-1.02,1.04l-3.4,-0.12l-2.07,0.36l-0.33,0.39l0.0,1.41l-7.29,-0.12l-1.94,-0.52l-2.17,-2.39l-0.95,-0.35l-1.03,0.21l-3.51,1.49l0.23,0.41l0.93,0.41l2.13,0.24l0.48,0.5l-0.35,1.33l-0.93,0.93l0.07,0.67l1.62,0.77l2.82,-0.29l1.01,0.22l-3.33,3.45l-1.34,-0.08l-4.06,-2.0l-2.45,-0.35l-1.79,1.74l0.28,0.67l3.14,0.13l1.05,0.69l0.7,1.16l-0.95,0.01l-5.98,1.58l-9.49,-0.88l-3.09,-2.94l-3.38,-1.6l-4.03,-0.9l-11.98,-0.33l-0.73,-0.28l-2.14,-1.92l-1.3,-3.61l-3.4,-3.3l-2.78,-3.91l-11.06,-6.69l-4.02,-3.51l-10.99,-6.39l-2.4,-1.85l-2.46,-0.32l-1.53,0.63l-1.14,1.07l-0.87,1.88l-1.29,0.46l-3.47,-1.46l-4.24,-3.03l-1.23,-1.87l0.87,-1.57l3.11,-2.76l0.83,-1.19l1.78,-0.95l3.34,-1.01l1.08,-0.77l0.45,-0.84l-0.15,-1.28l-2.2,-4.95l-0.16,-0.68l0.35,-0.68l5.24,-1.53l3.01,-2.12l0.51,-1.26l0.1,-2.57l4.5,-6.35l1.94,-1.46l2.7,-0.86l2.85,-0.06l4.3,0.94l1.68,0.06l2.16,-0.29l4.89,-1.47l2.36,-1.43l0.59,-1.35l-0.43,-0.84l-1.56,-0.79l-0.94,-1.09l-0.3,-1.51l0.28,-0.55ZM439.65,1122.24l0.7,-0.32l0.03,-1.12l-1.34,-0.88l0.74,-0.48l0.61,0.09l1.1,1.09l-1.05,2.09l-0.19,0.15l-0.59,-0.62ZM441.68,1120.54l0.05,-1.25l1.24,0.44l0.03,0.66l-1.32,0.16ZM442.16,1123.89l-0.84,0.39l0.18,-1.31l0.54,0.39l0.12,0.52Z\",\n            name: \"S\\xf6dermanland\"\n          },\n          \"SE-C\": {\n            path: \"M520.41,966.01l-0.26,-0.15l-0.63,0.58l-0.53,-0.3l0.5,-0.74l0.92,0.61ZM516.48,972.87l1.25,-0.3l2.03,1.11l-1.61,0.61l-1.67,-1.43ZM448.54,1029.37l-0.76,1.26l-0.2,3.09l0.45,1.19l1.59,1.89l-0.21,1.34l-3.26,4.48l-0.5,1.18l-0.44,4.56l-0.41,0.7l-2.66,1.74l-2.31,4.65l-1.51,-2.45l-1.62,-1.34l-2.44,-1.51l-4.18,-1.63l-1.99,-1.51l-1.62,-2.7l-3.12,-1.82l-3.65,-0.96l-5.29,0.59l-6.86,-1.05l-1.22,-2.9l-2.06,-7.85l-1.14,-2.88l-7.63,-13.01l0.17,-0.55l3.06,-1.6l1.14,-1.3l0.45,-1.41l-0.09,-3.47l1.23,0.07l4.7,1.35l3.72,0.54l1.97,2.31l1.21,0.35l1.4,-0.26l4.07,-2.66l3.51,-1.76l1.1,-1.42l0.74,-1.93l0.44,-4.36l-0.34,-1.35l-2.48,-1.53l-0.28,-1.07l3.56,-4.98l2.42,0.03l1.08,-0.28l1.24,-0.96l1.31,-1.89l5.36,-12.71l0.59,-2.44l-0.35,-1.76l-1.47,-1.33l-9.63,-5.93l-0.57,-7.43l0.41,-1.86l1.44,-2.4l2.42,-1.86l2.38,-4.1l4.11,-14.02l2.33,-1.39l8.98,-1.14l1.75,0.12l2.24,1.76l2.45,1.18l0.63,0.72l-0.54,0.58l-2.46,1.17l-0.63,0.81l0.24,1.6l2.13,5.55l2.53,1.4l4.83,0.58l0.45,-0.4l0.0,-0.76l-0.93,-2.88l2.21,-2.71l3.55,-2.19l6.87,-1.5l1.89,0.09l1.58,1.04l1.32,3.36l-0.47,2.03l-1.23,1.07l-0.2,1.05l0.37,0.4l1.68,0.12l1.59,0.83l3.1,2.47l2.27,1.31l0.86,2.73l2.3,2.59l2.51,1.54l4.71,1.4l-2.03,1.51l-1.03,1.2l0.13,1.06l1.84,2.03l0.55,0.11l2.9,-2.27l2.23,-0.71l3.07,0.95l4.63,-0.12l0.98,0.55l0.16,2.92l1.72,1.51l-2.33,0.1l-0.76,0.6l0.14,0.7l9.37,2.72l2.08,1.66l-2.03,0.79l-10.89,-3.2l-2.05,-1.9l-3.54,-4.27l-0.49,-0.1l-0.2,0.46l1.05,3.78l7.39,7.0l-0.98,-0.45l-1.65,-1.64l-0.47,-0.07l-0.2,0.43l0.58,2.68l1.48,1.54l3.25,1.73l2.61,2.12l1.49,0.02l1.18,-0.6l0.37,3.67l-3.29,4.24l-2.09,2.12l-0.93,1.67l-0.03,1.23l0.56,0.8l1.63,1.22l-2.68,1.31l-1.79,1.78l-0.41,1.68l0.03,4.22l-0.64,2.05l-1.37,1.79l-3.07,1.68l-4.65,1.69l-4.29,0.87l-2.35,1.12l-1.84,1.79l-2.87,5.03l-1.24,0.86l-5.55,0.14l-9.39,4.32l-4.07,0.92l-1.92,0.76l-4.3,-1.67l-3.09,-0.09l-2.86,2.94l-3.57,1.54l-0.39,1.81ZM507.3,947.7l1.81,1.32l0.22,0.48l-1.98,-1.07l-1.0,-0.18l-0.43,0.56l4.43,7.98l0.97,1.18l1.2,-0.03l0.93,-0.77l0.43,1.83l1.02,1.91l1.15,0.57l-0.08,0.73l-3.04,-1.33l-3.85,-3.4l-3.71,-1.57l-0.8,-1.97l-0.28,-2.67l0.21,-6.26l-0.85,-2.2l0.14,-0.42l1.29,0.2l1.03,1.43l0.25,2.56l0.93,1.11ZM515.02,974.35l-0.52,-0.03l-2.71,-1.71l-0.86,-1.07l1.79,0.2l2.14,1.1l-0.24,0.75l0.41,0.76ZM502.87,940.57l1.94,-0.54l0.53,1.2l-0.49,0.09l-1.98,-0.75Z\",\n            name: \"Uppsala\"\n          },\n          \"SE-Z\": {\n            path: \"M228.1,451.55l25.18,12.48l4.89,4.25l1.83,2.66l5.36,6.48l2.07,1.14l3.51,0.94l2.52,1.07l2.55,2.03l2.19,5.71l1.72,2.33l1.0,0.37l3.92,0.2l2.59,1.03l3.99,2.44l1.47,1.82l2.2,1.97l2.86,1.6l-4.32,1.68l-0.76,0.98l0.06,0.52l3.69,2.8l1.28,1.5l11.38,7.13l1.79,1.49l1.23,1.47l1.46,4.42l0.55,0.59l1.01,0.17l1.7,-0.6l1.1,-3.27l1.32,-2.72l2.34,-0.31l1.89,2.28l0.59,4.23l0.8,2.52l1.61,2.16l13.55,8.08l2.5,2.48l1.7,4.18l1.51,2.45l1.39,0.86l4.82,-1.2l2.46,0.01l4.56,1.95l32.56,25.73l-7.69,17.68l-0.79,6.43l-1.79,5.92l-4.17,2.25l-2.7,0.84l-15.25,1.63l-6.75,-1.08l-4.08,0.71l-6.33,2.36l-5.03,1.09l-1.98,2.77l0.01,0.45l3.73,5.21l1.49,3.15l2.24,10.9l2.08,1.45l2.63,0.72l3.19,2.28l3.04,4.59l53.46,41.05l-0.19,1.01l-16.24,3.88l-4.47,2.15l-14.86,14.57l-3.37,4.38l-2.42,1.39l-2.7,0.68l-29.1,1.52l-18.94,6.08l-29.66,5.32l-12.17,-0.81l-9.03,0.97l-2.13,1.08l-0.7,1.29l0.5,1.21l-0.09,2.45l1.28,2.42l1.48,5.22l-2.23,2.09l1.0,3.66l3.06,2.36l4.07,5.25l3.06,2.71l4.54,3.22l4.22,1.54l4.53,0.96l5.31,-1.42l5.71,0.57l1.38,4.14l3.46,4.31l0.92,1.77l0.67,2.27l-0.58,1.93l-1.87,2.31l-19.85,12.27l1.23,6.39l-0.44,3.31l-0.87,0.72l-0.41,0.92l0.38,4.48l-0.74,1.08l-1.38,-0.04l-2.05,-1.46l-3.51,-0.46l-3.21,0.36l-1.74,2.2l-2.11,0.22l-2.87,-1.61l-1.74,0.65l-0.24,0.49l0.82,2.68l-0.46,1.29l-1.49,-0.98l-4.8,-6.58l-0.37,-0.95l-0.42,-0.25l-1.31,0.16l-2.23,1.15l-5.72,6.02l-2.23,3.99l-1.71,5.57l-1.59,9.46l-2.58,3.95l-6.49,0.95l-5.84,-1.85l-46.89,-6.11l-3.96,-2.72l-1.51,-3.72l-1.95,-3.26l-3.29,-4.27l-2.55,-4.46l-5.48,-7.17l2.11,-7.56l1.55,-2.5l-0.11,-0.54l-6.59,-4.52l-6.88,0.35l-9.24,-3.91l-5.0,-5.2l-12.28,-8.12l-31.05,-7.1l-1.48,0.2l-0.07,-1.19l-1.92,-5.25l-13.25,-26.49l-0.07,-1.97l0.86,-2.85l3.47,-8.14l0.17,-2.57l-4.04,-16.38l-0.24,-2.09l0.68,-1.53l8.01,-8.29l0.07,-0.46l-15.57,-30.56l14.31,-17.62l1.06,-2.19l0.0,-2.7l-3.27,-10.69l8.22,-6.26l12.89,-16.49l13.55,-15.89l4.93,-3.76l15.39,-7.3l17.02,-3.46l47.97,8.84l1.76,0.01l1.56,-1.26l11.27,-16.28l0.94,-2.2l0.06,-2.04l-3.16,-25.9l-1.27,-2.64l-2.64,-1.42l-8.27,-1.63l-19.77,-9.93l35.77,-44.52l9.4,-10.24l1.41,-3.14Z\",\n            name: \"J\\xe4mtland\"\n          },\n          \"SE-Y\": {\n            path: \"M402.7,578.12l56.53,7.68l43.18,-10.13l4.25,-0.01l2.57,1.19l0.67,2.21l-0.57,0.63l-2.61,0.05l-0.36,0.69l0.27,0.94l4.6,6.92l1.68,1.5l4.08,1.95l1.55,0.4l6.17,0.03l3.33,1.4l3.19,0.73l1.26,0.61l1.68,1.43l1.64,0.69l4.0,0.11l1.3,0.42l1.39,1.04l0.68,1.43l0.14,1.61l0.57,0.68l3.5,1.3l3.54,3.2l8.58,10.78l7.06,13.51l-1.05,-0.26l-0.97,0.99l-0.32,1.87l-0.45,10.69l-0.62,1.27l-0.68,0.52l-0.39,-0.17l-0.26,-1.59l-0.7,-0.19l-1.39,1.65l-3.34,0.73l-1.75,1.22l0.01,0.65l1.07,1.16l-0.6,0.58l-2.01,3.65l0.34,0.62l0.71,0.0l-0.59,0.94l-0.95,-0.09l-2.61,-2.34l-0.62,0.11l-1.19,2.31l0.05,0.44l1.32,1.46l3.31,0.72l-0.23,0.55l-1.59,0.06l-0.83,0.58l-1.02,2.44l-0.67,0.06l-4.41,-4.2l-0.47,-0.61l0.17,-1.6l-0.78,-0.74l-1.28,-0.57l-2.14,-1.79l-1.72,-0.59l-0.89,0.36l-0.24,0.47l0.34,1.39l-0.43,0.17l-3.67,-1.1l-2.9,-0.2l-1.34,0.3l-1.21,0.74l-0.04,0.65l1.52,1.18l10.16,3.11l-0.82,0.97l-1.99,0.57l-4.44,0.05l-0.38,0.51l0.38,1.25l-0.78,0.75l-0.63,-0.05l-0.69,-0.75l-0.45,-2.75l1.09,-0.34l3.31,-0.02l0.4,-0.4l0.0,-0.8l-0.32,-0.39l-6.67,-1.32l-1.95,0.67l-0.11,0.7l0.85,0.64l0.88,2.83l1.62,2.97l-9.08,-2.12l-3.3,0.09l-0.39,0.4l0.0,0.73l0.39,0.4l1.38,0.04l1.46,0.54l2.19,1.84l0.88,2.28l-0.12,0.76l-0.68,0.29l-4.04,-1.55l-1.77,0.9l-1.4,3.52l-1.09,1.36l1.32,0.25l-2.91,1.55l-0.48,0.75l-0.69,2.72l-2.63,-2.7l-1.1,-0.67l-1.16,-0.31l-1.24,0.15l-1.24,0.77l0.02,0.68l2.2,1.28l1.44,1.43l-3.49,-0.51l-1.04,-1.67l-0.72,-0.38l-0.53,0.2l-0.35,1.56l-0.82,1.0l-1.54,0.73l-3.91,0.72l-0.32,0.32l0.19,0.41l1.9,1.07l17.5,-0.17l1.66,0.58l1.19,1.23l0.32,1.23l-0.19,0.18l-0.59,-0.33l-1.0,-1.68l-0.88,0.29l-0.52,1.85l-1.27,0.4l-1.77,-0.39l-3.97,-1.71l-1.34,0.48l-0.94,2.32l0.18,0.48l4.29,2.21l3.83,-0.78l0.51,0.51l-0.55,1.72l-2.42,0.23l-4.86,-0.99l-0.41,0.17l0.0,0.45l1.02,1.48l3.37,1.13l0.58,0.88l-0.64,1.29l-2.39,0.74l-1.78,1.3l-1.44,0.48l-3.3,-0.45l-0.47,-1.47l-2.21,-2.19l-1.37,-0.88l-1.35,-0.03l-0.38,0.55l0.31,0.98l-2.77,0.0l-0.4,0.4l0.0,0.66l0.79,0.68l0.09,0.46l-0.82,1.62l0.18,0.59l1.93,0.55l2.04,-1.82l0.8,0.41l-1.43,2.9l-0.93,1.12l-1.31,0.51l-1.74,1.63l-0.45,-0.77l1.11,-1.72l-0.14,-0.65l-0.99,-0.39l-0.46,0.12l-0.64,0.81l-1.2,2.53l-1.11,0.76l-3.63,-0.16l0.34,-0.88l-0.14,-0.5l-1.11,-0.74l-3.29,-0.17l0.89,-0.95l5.76,0.58l2.01,-1.87l-0.16,-0.66l-4.07,-1.54l-0.67,-0.92l0.28,-0.54l-0.43,-0.59l-1.65,0.35l-2.4,1.27l-2.16,1.63l-1.26,1.8l-1.89,-0.86l-0.47,-0.43l-0.12,-0.77l0.11,-3.89l-0.89,-1.7l0.88,-1.63l-0.32,-1.87l-0.39,-0.32l-0.82,-0.0l-1.15,0.52l-0.7,-0.02l-1.55,-4.53l-1.34,-1.68l-1.34,-0.81l1.09,-1.87l-0.39,-0.59l-1.71,0.23l-2.95,1.93l-1.05,-0.38l-2.23,-1.56l-1.52,0.48l-0.06,0.7l8.4,5.45l1.99,2.18l2.8,5.35l0.78,3.09l-1.03,1.67l-0.06,1.0l3.14,1.86l1.54,1.47l0.05,2.13l0.54,1.37l2.25,2.63l0.46,1.83l-0.79,3.02l0.29,1.85l-0.92,0.2l-2.87,-1.44l-4.21,0.0l-0.28,0.68l1.51,1.46l10.07,3.3l0.3,1.88l0.58,0.88l-0.77,0.23l-4.81,3.19l-0.7,-5.16l-0.51,-0.51l-1.2,-0.0l-0.91,1.38l-1.08,5.71l-1.87,0.75l-0.21,0.6l0.81,1.21l-3.1,3.66l-1.09,0.33l-2.41,-2.04l-3.69,-0.04l-2.95,0.87l-1.7,1.03l-0.91,1.41l0.05,1.81l1.31,0.98l1.29,0.48l0.36,0.64l-8.15,-0.28l-0.9,-0.33l-2.32,-2.16l-3.02,-4.31l-2.96,-3.29l-0.86,-0.53l-2.0,0.82l-0.67,2.41l-2.37,0.7l-1.31,0.75l-0.79,1.32l-0.02,1.64l3.08,3.9l0.23,1.06l-0.03,1.36l-0.34,0.32l-2.45,0.44l0.12,0.46l1.47,1.42l0.34,0.94l-0.42,2.41l0.63,1.6l0.86,1.1l0.95,0.57l2.33,-0.31l0.77,0.13l0.97,0.82l1.51,3.01l0.73,0.61l-1.75,0.92l0.08,0.69l5.88,2.53l1.56,-0.46l2.08,0.42l2.95,1.43l-5.0,2.54l-1.3,0.25l1.76,-2.52l-0.15,-0.59l-1.38,-0.59l-1.38,0.3l-1.08,0.75l-0.87,1.26l-0.3,1.55l0.29,4.23l-0.48,1.33l-16.34,-2.27l-3.14,-0.91l-13.48,-0.24l-35.62,-7.43l-18.96,-1.03l-39.68,-9.97l-3.25,-0.31l-3.49,0.95l-11.68,7.06l-5.91,-0.59l-5.24,1.42l-4.41,-0.94l-4.09,-1.5l-4.39,-3.13l-2.98,-2.64l-4.02,-5.21l-3.07,-2.39l-0.83,-2.78l0.49,-0.64l1.34,-0.78l0.45,-0.93l-1.52,-5.51l-1.26,-2.33l0.17,-1.75l-0.54,-1.88l0.46,-0.62l1.7,-0.84l8.92,-0.95l12.22,0.8l29.74,-5.33l18.87,-6.07l29.09,-1.52l2.87,-0.72l2.75,-1.6l3.37,-4.38l14.69,-14.43l4.29,-2.08l16.45,-3.93l0.3,-0.31l0.14,-1.9l-53.61,-41.16l-3.06,-4.6l-3.31,-2.37l-2.75,-0.78l-1.77,-1.26l-2.09,-10.64l-1.56,-3.29l-3.59,-5.02l1.49,-2.24l4.95,-1.08l6.25,-2.33l3.84,-0.69l6.85,1.08l15.35,-1.64l2.92,-0.91l4.55,-2.58l1.85,-6.11l0.77,-6.37l7.58,-17.42l2.34,1.91l8.0,4.06ZM557.57,651.89l-0.15,-0.09l-0.07,-0.1l0.03,-0.01l0.19,0.2ZM538.18,660.79l0.65,-0.07l-0.26,0.24l-0.39,-0.17ZM534.82,665.05l0.76,-0.57l0.05,0.01l-0.64,0.56l-0.18,0.01ZM532.53,666.31l-0.96,0.34l-0.61,-0.54l0.03,-0.04l1.54,0.23ZM523.87,666.7l-1.04,-0.47l0.36,-0.94l0.36,0.33l0.32,1.07ZM521.65,682.57l-1.32,0.68l0.46,-2.43l1.47,-1.06l-0.05,1.44l-0.56,1.38ZM519.76,674.67l-0.24,-1.21l0.4,-0.35l0.17,0.47l-0.33,1.08ZM511.87,678.55l0.38,-0.43l-0.24,-0.99l0.56,-1.43l1.71,-0.79l0.31,0.44l0.92,0.3l-1.02,1.99l-1.53,0.75l-0.58,0.64l-0.51,-0.47ZM491.57,706.9l0.04,-0.62l1.08,-1.31l0.85,-0.31l-1.98,2.24ZM483.74,708.32l0.81,0.39l1.91,-0.64l1.74,0.35l-0.19,1.89l-0.7,1.66l-1.83,0.34l-0.2,0.51l0.79,1.03l-0.15,0.24l-2.88,0.8l-3.27,-0.47l-1.22,-1.91l1.44,-3.98l0.71,-0.82l1.35,-0.3l1.02,0.32l0.67,0.6ZM478.75,717.31l0.53,-0.44l3.2,-0.32l0.33,0.57l1.35,0.51l-0.57,1.31l-4.84,-1.63ZM475.5,704.36l2.52,0.37l0.73,0.46l0.25,0.57l-0.19,0.43l-1.53,0.72l-1.51,-1.73l-0.27,-0.81ZM469.74,692.36l-0.12,-0.44l0.75,-0.26l-0.63,0.71ZM457.79,766.95l-0.58,0.15l-0.43,-0.74l-0.23,-1.28l0.33,-0.98l0.89,-0.63l2.26,0.64l-0.13,0.6l-2.1,2.24Z\",\n            name: \"V\\xe4sternorrland\"\n          },\n          \"SE-X\": {\n            path: \"M446.71,815.89l-0.77,0.76l-0.4,-0.25l0.13,-0.47l1.05,-0.04ZM444.06,791.75l0.09,0.02l1.32,0.11l-0.76,0.27l-0.65,-0.4ZM420.4,859.3l-1.39,-1.02l-1.25,-0.43l-1.53,-0.14l-0.43,0.4l0.26,1.09l1.6,0.59l3.91,3.25l1.29,1.65l0.75,2.19l-0.81,0.71l-1.89,0.75l-1.3,1.65l0.12,0.59l2.13,1.22l-0.29,2.26l-1.42,1.52l-0.04,0.59l1.3,1.32l0.2,1.0l-0.52,0.57l-1.58,0.03l-0.39,0.33l0.24,0.44l0.75,0.31l2.35,0.26l0.33,0.99l-1.23,1.12l-0.88,2.63l-0.12,1.57l1.06,1.23l-1.41,0.98l-0.19,0.47l0.43,0.28l3.55,-0.41l1.45,0.14l0.3,0.38l-3.42,0.68l-1.59,1.38l-0.74,3.07l-0.04,1.8l1.61,1.42l1.54,0.27l-0.13,1.14l1.03,2.4l0.52,0.15l0.95,-0.47l0.53,0.44l2.25,5.41l-1.48,1.02l-0.18,0.76l0.25,1.21l0.35,0.32l1.23,0.07l0.16,3.38l1.09,0.96l2.28,0.28l-1.37,1.82l-2.15,0.9l-1.91,1.71l-2.48,1.38l-1.78,0.61l-0.38,1.21l0.91,0.6l2.97,-0.76l1.16,0.29l1.46,1.52l2.14,0.69l3.08,2.04l-2.17,1.09l-0.22,0.36l0.21,1.06l1.22,0.64l2.0,0.04l-3.94,13.46l-2.3,3.97l-2.36,1.8l-1.62,2.71l-0.44,2.1l0.57,7.36l-4.27,1.17l-1.39,0.97l-1.16,0.34l-5.48,-0.51l-1.16,-0.5l-2.74,-0.28l-2.22,0.45l-1.73,1.69l-0.17,2.33l-0.65,0.85l-7.09,3.52l-3.32,0.44l-2.56,-0.93l-0.63,-1.11l-3.27,-2.73l-4.25,-6.66l-3.71,-3.92l-4.01,-2.67l-2.18,-0.6l-3.62,-3.0l-6.39,-8.54l-2.57,-1.55l-0.96,-1.14l-3.37,-5.19l0.15,-4.23l3.81,-2.4l5.5,-5.95l0.76,-1.82l2.91,-2.81l0.67,-1.84l0.15,-1.51l-0.26,-1.62l-1.27,-2.0l-8.44,-7.81l-0.89,-2.21l-2.58,-4.46l-3.76,-4.7l-2.68,-0.95l-13.7,-2.39l-7.89,-3.36l-2.26,-1.86l-4.29,-4.67l-0.41,-5.62l-1.46,-3.7l-2.71,-3.07l-12.66,-10.35l-14.02,-15.54l-0.69,-1.33l-1.05,-0.85l-2.25,-2.88l-0.61,-0.02l-4.67,4.84l-0.85,0.43l-26.28,0.0l-0.4,-0.33l-0.27,-1.07l-1.3,-1.63l-0.88,-4.02l-0.3,-0.3l-12.06,-2.84l2.48,-3.85l1.6,-9.52l1.65,-5.38l2.13,-3.83l5.53,-5.85l1.97,-1.04l0.93,-0.11l5.19,7.47l2.0,1.3l0.94,-0.53l0.43,-1.53l-0.75,-2.64l1.2,-0.45l2.47,1.54l2.68,-0.2l1.75,-2.2l2.88,-0.33l3.36,0.44l2.11,1.48l2.07,-0.12l1.01,-1.61l-0.41,-4.36l1.27,-1.56l0.38,-1.84l-0.17,-3.73l-1.04,-3.99l19.62,-12.06l2.14,-2.65l0.63,-2.35l-0.72,-2.42l-1.05,-2.01l-3.35,-4.12l-1.34,-4.02l11.37,-6.89l3.36,-0.92l3.01,0.31l39.64,9.97l18.99,1.03l35.63,7.43l13.54,0.25l3.07,0.9l16.0,2.23l-1.35,2.83l-0.11,3.41l-0.29,0.67l-1.28,0.79l0.05,0.71l1.1,0.47l-0.46,0.99l-2.21,2.28l0.07,0.61l2.03,1.98l-4.29,0.91l-0.59,1.32l-0.0,1.92l-1.95,0.66l-0.67,1.09l-0.27,2.62l1.36,3.88l-1.42,1.56l-0.06,1.67l0.74,0.84l-1.09,2.46l0.45,1.01l0.88,0.42l3.11,-0.57l-0.53,0.82l-1.25,0.4l-0.34,0.4l0.24,1.15l0.94,0.42l-0.19,4.22l0.35,1.92l0.66,0.77l5.89,-1.14l1.11,0.81l0.76,1.13l0.36,2.09l-0.96,2.5l-0.6,3.21l-0.77,0.51l-1.17,-0.08l-1.75,-0.91l-3.31,-5.48l-1.47,-1.78l-2.31,-1.05l-0.56,0.4l0.12,1.37l0.96,2.33l-1.67,-0.33l-0.67,-0.61l0.03,-1.76l-2.64,-1.8l-2.97,-0.6l-5.88,0.18l-0.31,0.63l1.02,1.31l1.2,0.44l2.24,-0.09l4.26,1.95l-0.43,1.25l-1.93,1.06l-4.13,0.64l-0.38,0.4l0.0,0.71l1.21,0.7l-0.9,0.29l-3.01,-0.94l-1.83,1.06l-0.16,0.42l0.32,0.31l8.63,1.46l0.97,0.88l-0.81,0.34l-1.02,-0.15l-2.41,-1.14l-1.58,-0.27l-4.66,0.23l-0.38,0.4l0.0,0.71l0.41,0.4l2.35,-0.09l0.88,0.32l0.38,0.59l-2.39,0.87l-3.12,0.29l-0.35,0.3l0.17,0.43l1.93,1.2l6.4,0.97l-5.78,-0.17l-0.97,0.67l-0.01,0.61l0.77,0.62l1.46,0.39l1.36,0.94l2.13,0.49l-2.44,0.1l-0.4,0.4l0.0,0.65l0.26,0.38l3.04,1.33l0.25,0.99l-0.98,1.12l-0.67,1.39l1.23,2.55l0.82,0.54l1.05,0.05l-1.71,1.08l-1.16,-1.47l-0.73,-0.37l-0.56,0.24l-0.57,1.83l-1.35,1.07l-0.26,1.35l2.43,3.25l1.97,1.41l2.12,0.76l0.31,1.22l3.95,1.87l-2.87,-0.16l-4.17,-1.53l-0.43,0.11l-0.07,0.44l0.85,1.79ZM421.85,860.36l0.78,0.39l1.42,0.35l-1.55,-0.27l-0.64,-0.47ZM422.77,846.39l0.99,-1.22l0.44,-0.06l-0.16,0.95l-1.27,0.33ZM442.54,792.44l-0.14,-0.26l0.11,-0.3l0.11,0.08l-0.08,0.48ZM439.39,834.16l1.05,0.76l-0.38,0.25l-3.45,-0.22l-0.47,-1.08l-0.63,0.23l-0.44,1.14l-0.46,-1.06l0.06,-0.44l0.7,-0.24l4.02,0.66ZM433.19,912.7l-2.67,0.39l-0.15,-0.61l0.52,-0.78l0.78,0.06l0.86,0.85l0.67,0.08ZM431.16,875.97l-0.55,-1.0l0.37,-0.87l0.5,-0.14l-0.32,2.0ZM428.78,833.6l-0.9,-0.22l0.33,-1.52l1.34,0.42l-0.14,1.01l-0.62,0.31ZM425.95,888.39l-1.88,-0.48l1.3,-1.64l1.11,0.65l-0.54,0.76l0.01,0.71Z\",\n            name: \"G\\xe4vleborg\"\n          },\n          \"SE-W\": {\n            path: \"M238.02,830.33l12.29,2.9l0.84,3.87l1.38,1.79l0.34,1.16l0.87,0.61l26.52,-0.0l1.33,-0.67l4.36,-4.52l1.99,2.55l0.98,0.76l0.73,1.38l14.08,15.6l12.7,10.39l2.6,2.94l1.32,3.37l0.44,5.76l4.51,4.98l2.42,1.97l7.99,3.4l13.8,2.42l2.32,0.78l3.6,4.51l2.56,4.41l0.97,2.34l8.46,7.83l1.15,1.83l0.18,1.33l-0.74,2.95l-2.82,2.67l-0.75,1.8l-5.41,5.86l-3.85,2.4l-0.49,3.46l0.21,1.7l3.47,5.33l1.09,1.27l2.44,1.43l6.44,8.6l3.81,3.14l2.21,0.6l3.81,2.53l3.64,3.84l4.25,6.66l3.31,2.78l0.55,1.02l0.1,1.09l-1.08,0.46l-9.85,2.06l-2.58,2.19l-3.12,4.54l-1.53,1.08l-1.71,0.83l-3.98,1.05l-2.93,0.29l-6.44,-0.57l-3.03,-1.33l-0.76,-1.29l-0.82,-4.0l-1.63,-1.46l-3.51,-0.92l-1.71,-0.94l-1.63,0.27l-1.32,-0.63l-4.41,-0.52l-5.6,1.49l-3.71,-0.3l-4.52,3.22l-0.3,1.04l0.45,1.2l-1.78,3.64l-1.31,1.33l-0.29,1.06l1.22,2.19l0.05,4.69l-0.9,1.51l-1.69,1.39l-1.19,0.41l-1.05,-0.11l-3.63,-1.45l-2.47,-0.04l-1.69,0.84l-0.94,1.41l-0.91,2.89l-2.42,2.31l-1.14,2.16l-13.05,-12.34l-1.42,-0.81l-15.03,-4.96l-6.16,-1.15l-3.05,-1.31l-1.22,-0.89l-0.33,-0.38l-0.27,-1.51l-0.59,-0.48l-1.15,-0.02l-1.38,0.43l-3.27,2.03l-0.86,2.01l-0.35,2.0l1.21,3.58l-3.15,0.36l-18.03,-1.88l-13.0,-7.09l-1.35,-2.99l-1.74,-2.17l-2.27,-4.88l-1.41,-2.27l-1.15,-1.12l-1.23,-0.57l-5.71,-0.4l-4.4,-1.18l-0.88,0.49l0.31,1.64l2.78,2.86l-2.49,1.25l-1.34,-0.57l-7.2,-5.83l-12.11,-14.94l-2.01,-1.26l-7.6,-2.81l-2.36,-1.8l-2.71,-3.33l-1.17,-2.62l-2.42,-3.95l-9.36,-12.43l-3.89,-2.4l-2.56,-5.76l-1.74,-2.58l-2.98,-3.13l-23.26,-18.98l-0.81,-1.33l-2.1,-4.28l1.43,-7.3l0.88,-2.18l4.94,-5.51l1.45,-2.42l1.03,-2.98l2.28,-9.8l-0.07,-1.35l-0.74,-1.18l-18.04,-18.44l-2.07,-1.47l-2.34,-0.67l-4.72,-0.24l-2.49,-0.44l-1.82,-0.86l-5.31,-5.25l-3.22,-1.94l-7.82,-6.26l-0.82,-1.2l10.58,-53.33l-0.14,-3.72l1.35,-0.21l30.91,7.07l12.05,8.0l5.09,5.26l9.4,3.98l6.77,-0.39l6.16,4.23l-1.42,2.33l-2.11,8.16l5.58,7.31l2.55,4.46l3.26,4.24l1.89,3.15l1.54,3.8l4.29,3.02l47.13,6.18l5.82,1.85l6.87,-0.96Z\",\n            name: \"Dalarna\"\n          },\n          \"SE-BD\": {\n            path: \"M704.1,423.5l-0.55,0.85l-2.95,0.33l-0.91,1.49l0.27,0.6l8.56,1.63l1.97,1.37l4.06,5.27l3.79,3.37l4.85,6.79l0.52,1.98l-0.98,0.75l-3.65,0.17l-0.36,0.28l1.23,1.85l-0.04,1.01l-1.22,3.22l-18.46,-9.35l-78.42,-16.34l-28.19,6.86l-5.24,4.65l-8.3,3.92l-3.79,1.18l-1.66,0.26l-1.21,-0.27l-1.01,-0.7l-0.06,-1.0l-0.47,-0.55l-3.37,-1.97l-2.19,-0.65l-1.94,0.01l-1.13,-0.72l-0.5,-3.21l-0.84,-2.04l-2.09,-1.88l-3.99,-2.14l-7.06,-1.39l-3.75,-3.72l-11.27,-3.63l-3.71,-3.0l-3.22,-4.07l-1.38,-0.43l-9.41,-0.27l-2.27,-0.87l-4.39,-3.37l-7.16,-1.44l-3.7,-1.55l-3.52,-2.44l-3.13,-3.24l-1.67,-2.38l-27.3,-8.48l-20.96,-10.99l-40.22,-28.15l-26.19,-7.9l-43.18,-22.65l-26.24,-8.88l-3.09,-12.09l-0.23,-2.89l16.47,-12.26l25.14,-32.88l5.87,-5.32l12.54,-8.63l3.99,-1.63l2.11,-1.38l1.21,-2.06l1.97,-15.09l-0.41,-2.17l-21.1,-25.67l3.53,-8.24l1.14,-1.22l11.26,-1.53l4.27,-1.45l3.87,-2.87l7.1,-7.9l1.54,-2.61l10.42,-26.74l1.38,-2.24l1.63,-1.52l28.02,-15.11l5.52,-6.82l1.23,-0.73l38.91,15.81l2.19,-0.47l2.06,-2.17l14.7,-19.61l1.55,-4.85l-3.59,-23.33l0.08,-3.55l1.64,-12.09l0.55,-0.53l17.77,-4.43l2.95,1.34l11.21,7.22l3.88,0.67l22.94,-1.18l30.16,9.62l30.6,8.71l3.04,-0.16l2.66,-1.49l16.11,-13.43l-0.11,-0.68l-18.57,-7.25l12.21,-7.35l5.87,-6.26l7.02,-12.71l0.93,-2.45l0.32,-2.34l-0.53,-10.6l-0.67,-2.31l-15.47,-12.71l34.32,-1.64l3.63,2.16l8.07,0.82l4.59,2.93l3.23,0.7l1.39,1.43l-0.02,1.87l-0.99,1.7l-1.91,0.65l-0.27,0.34l-0.21,2.43l1.56,1.76l11.46,3.09l9.73,6.14l3.99,4.81l1.22,1.0l0.98,1.57l5.53,0.25l1.18,0.5l0.96,2.42l3.02,4.96l2.32,1.4l5.15,0.95l6.0,3.97l3.67,1.66l1.62,3.8l12.3,2.31l2.91,2.4l3.33,3.65l1.52,1.1l0.33,2.27l2.3,1.33l15.89,0.16l4.47,0.88l0.0,1.04l0.65,0.68l5.31,0.27l4.34,1.58l3.02,0.24l3.0,1.35l3.59,-0.29l1.77,1.16l1.93,2.09l2.06,1.61l4.23,-0.99l1.5,1.05l2.8,3.92l2.01,1.77l10.15,4.56l0.9,0.84l1.02,2.94l0.96,1.21l3.01,2.46l0.94,1.78l-0.38,2.62l0.63,1.06l0.07,0.78l-0.7,4.68l0.25,1.28l0.93,0.93l1.96,0.11l5.71,-2.63l2.1,-0.07l1.46,1.87l3.0,7.96l0.7,1.17l6.92,4.13l6.03,4.96l4.77,1.23l1.11,1.28l-0.05,1.77l-1.58,2.09l-2.11,1.16l-4.87,1.17l-2.44,1.43l-1.25,2.2l-0.31,2.79l0.54,5.26l-0.0,6.92l1.02,3.32l1.32,6.53l1.63,3.08l0.51,1.75l0.2,2.54l-1.05,0.99l-2.4,1.22l-1.83,1.35l-0.11,0.51l0.66,1.21l-2.73,4.29l-0.84,2.48l0.96,3.02l2.56,2.09l2.53,-0.12l2.75,-0.84l2.63,-0.18l4.55,1.97l4.71,0.58l1.36,0.44l0.66,0.65l-0.12,2.39l-0.81,3.3l0.01,2.69l0.24,0.37l1.96,0.85l-1.34,3.15l-1.77,1.81l-7.61,2.36l-1.59,1.28l-0.57,1.91l-0.21,2.24l0.39,1.01l1.09,0.53l-1.01,2.29l-1.55,1.92l0.4,2.65l5.83,6.45l0.68,4.48l3.05,4.92l1.68,1.89l1.32,0.82l1.98,0.59l1.57,1.45l3.85,5.79l4.08,4.13l1.85,3.03l2.88,6.28l-0.24,0.73l-0.75,0.28l-1.6,-0.06l-1.77,0.5l-0.96,2.02l-2.27,2.72l0.72,5.09l0.01,2.29l-0.28,2.23l-1.15,3.88l0.75,4.23l-0.11,1.85l-0.59,1.58l-1.28,0.93l-3.61,1.73l-0.32,1.42l-1.19,0.96l-2.03,0.72l-1.71,1.03l-0.19,1.85l-3.48,1.44l-1.87,1.98l-0.69,2.75l0.35,1.51l1.28,2.05l0.73,4.63l-0.04,1.47l-0.92,3.91l1.84,6.83l2.44,5.81l1.85,1.99l2.42,1.47l7.08,1.78l1.38,1.29l4.29,8.53l3.07,2.7l2.37,7.04l0.02,4.34l3.22,4.41l1.56,4.52l2.56,3.05l-0.02,1.75l-1.37,1.8l-2.17,0.27l-4.87,-0.88l-0.41,0.61l0.77,1.28l-0.74,0.3l-3.21,-0.52l-1.79,0.67l-0.62,0.94l-0.49,1.77l-0.75,0.47l-2.61,-1.37l-0.43,-0.5l-0.36,-1.65l-0.39,-0.33l-0.68,0.1l-0.64,0.55l-3.14,-0.03l-1.4,-0.35l-1.25,-3.07l-1.9,-1.06l-3.55,-0.05l-1.18,0.66l-1.72,2.46l-0.78,0.65l-0.51,-0.01l-1.25,-1.52l-5.38,-0.03l-2.53,-0.56l0.23,-1.53l-0.82,-0.64l-1.02,0.15l-0.86,0.36l-0.68,1.72l-1.3,0.7l-0.61,0.87l0.12,0.55l0.9,0.88l-0.26,2.5l-1.65,-0.33l-0.97,-0.62l-0.66,-1.54l-0.25,-1.9l0.25,-1.56l-0.44,-0.46l-1.69,0.26l-2.64,2.74l-1.28,0.02l-4.0,-2.98l-1.15,-0.49l-1.35,-0.02l-1.23,1.2l-0.06,2.13l0.67,1.53l2.68,2.05l-4.74,1.73l-0.81,0.58l-1.39,1.34l-0.05,2.2l-1.48,0.95l-1.08,-0.19l0.39,-2.19l-1.95,-3.07l-0.91,-0.78l-3.99,-0.43l-3.02,-1.2l-2.05,-2.35l-1.16,-0.3l-1.52,0.41l-1.0,-0.11l-1.41,-1.17l-2.09,-4.51l-1.57,-1.94l-7.64,-4.65l-1.68,-0.35l-1.27,0.36l-0.21,0.63l2.61,2.65l0.59,1.09l1.17,7.4l-0.71,3.01l-1.53,1.84l-0.4,0.1l0.11,-2.36l-1.89,-1.46l-4.19,-0.61l-3.57,2.27l-0.22,-0.53l0.35,-1.05l1.3,-1.57l0.07,-0.51l-0.93,-1.45l-3.14,-2.26l0.39,-1.26l-0.32,-0.51l-4.99,-0.79l-2.41,0.25l-0.36,0.36l-0.16,1.8l-2.55,0.63l-0.2,0.66l2.7,2.92l-0.13,0.86l-0.52,0.08l-2.1,-0.61l-0.44,0.16l1.76,3.85l0.87,0.99l-1.97,2.41l-2.45,-0.78l-2.94,-1.93l-2.41,-0.11l-0.33,0.65l1.43,1.78l1.51,1.2l1.67,0.6l4.44,0.7l1.36,0.8l0.93,1.65l0.62,2.49l-1.32,0.05l-1.2,0.57l-0.54,-2.13l-1.59,-1.5l-2.26,-0.12l-1.63,0.95l-0.09,0.62l0.6,1.06l-0.65,1.61l1.7,3.73l-1.13,0.49l-4.89,0.16l-0.38,0.35l0.29,0.43l5.01,1.38l2.69,0.04l1.65,-2.75l-0.45,-1.33l-1.59,-1.48l-0.23,-0.77l0.29,-0.5l0.66,0.3l1.43,1.67l-0.34,0.46l0.19,0.62l3.61,1.39l-2.72,1.5l-0.59,1.56l0.84,1.08l1.61,0.78l2.54,0.62l1.36,3.25l-1.09,0.53l-2.26,-2.22l-1.48,-0.78l-3.37,-0.8l-1.71,-1.26l-1.16,-0.11l-0.84,0.72l0.12,1.38l-1.26,-0.22l-6.88,-3.51l-5.1,-1.52l-3.04,-2.7l-2.95,-0.6l-2.4,-1.88l-4.16,-1.01l-1.5,-1.15l-2.35,-3.03l-3.58,-1.97l-0.16,0.47l1.75,4.79l4.18,2.93l8.29,3.28l5.58,3.77l4.54,1.61l1.86,1.48l1.51,1.81l1.05,0.6l-0.39,0.22l-3.71,0.03l-1.98,0.48l-0.89,0.62l-0.83,1.63l-1.28,-1.1l-0.81,0.02l-1.72,0.79l-9.17,-2.13l-1.58,0.16l-0.26,0.65l3.26,3.87l2.26,1.37l1.53,-0.61l0.12,-0.67l-0.98,-0.87l0.35,-0.03l3.78,3.51l1.63,0.98l-1.19,3.46l-0.76,0.52l-0.86,-0.06l-0.89,-0.67l-1.59,-2.14l-0.68,0.06l-0.71,1.6l0.71,2.2l-0.03,0.82l-0.76,0.66l-1.18,0.13l-1.02,-0.44l-0.46,-1.08l-0.58,-0.19l-2.0,1.22l-1.95,0.69l-1.97,0.1l-5.87,-1.59l-1.2,0.24l-0.26,0.6l0.61,1.0l-2.44,0.08l-1.5,-0.28l-1.68,-2.11l-1.59,0.05l-2.96,0.72l-0.3,0.39l0.28,1.07l1.47,0.47l-2.56,-0.27l-2.88,0.54l-1.3,1.75l0.2,0.62l0.68,0.35l-2.18,1.19l-0.2,0.41l0.32,0.33l2.77,0.94l3.64,3.36l1.79,0.28l1.25,-0.57l0.33,-1.61l0.75,0.19l3.34,2.75l2.17,1.29l0.85,1.03l-0.13,1.28l-1.96,1.94l-2.96,1.27l-2.95,0.28l-2.01,-0.93l-2.73,-5.28l-2.05,-2.12l-1.29,-0.73l-1.46,-0.29l-1.7,-1.12l-2.04,-2.39l-2.28,-2.02l-2.57,0.12l-0.36,0.34l0.25,0.43l0.96,0.56ZM894.17,375.41l-0.4,0.23l1.03,-0.72l-0.02,0.14l-0.6,0.35ZM890.64,380.91l-0.32,0.11l-0.03,-0.05l0.34,-0.3l0.01,0.24ZM883.87,386.52l0.88,0.22l1.32,0.05l-0.5,0.59l-0.69,-0.05l-0.65,-0.24l-0.36,-0.56ZM884.9,390.45l0.14,-0.1l-0.07,0.15l-0.06,-0.05ZM883.9,376.42l0.01,0.08l-0.09,-0.03l0.05,-0.06l0.03,0.01ZM874.63,390.59l0.0,-0.02l0.0,0.03l-0.01,-0.01ZM872.63,392.65l-0.8,-0.19l-0.92,-0.43l0.54,-0.67l1.18,1.29ZM867.16,380.59l0.64,0.51l1.72,0.47l1.61,-0.88l0.38,0.45l0.68,-0.04l0.25,-0.52l0.06,0.31l-1.27,2.76l-2.75,2.06l-2.33,-1.07l-1.11,-1.41l0.01,-2.11l0.94,0.96l0.54,-0.06l0.61,-1.45ZM869.2,397.6l-0.06,0.9l1.18,2.64l-2.61,-1.22l0.03,-0.33l1.01,-0.68l0.45,-1.3ZM851.91,381.35l1.0,1.65l0.08,1.14l-1.16,-0.96l0.09,-1.83ZM846.66,380.19l0.09,-0.37l0.14,-0.25l0.17,0.83l-0.39,-0.21ZM833.6,382.29l0.49,0.24l0.57,-0.29l-0.22,-1.1l0.67,-0.37l1.47,0.61l-0.64,-0.2l-0.85,0.54l0.05,0.99l0.64,1.24l-0.29,0.32l-1.87,-1.99ZM837.92,383.27l0.38,0.22l0.06,0.06l-0.14,-0.03l-0.29,-0.25ZM835.25,379.28l1.22,-0.17l-0.02,0.7l-0.35,-0.11l-0.85,-0.42ZM831.44,380.11l2.0,-0.68l0.52,0.43l-1.46,0.7l-0.75,-0.01l-0.31,-0.44ZM834.19,375.83l-0.67,-0.04l-0.34,-0.51l0.89,0.24l0.12,0.31ZM822.39,389.19l0.51,-0.54l1.08,0.5l0.11,0.45l-0.4,0.14l-1.3,-0.55ZM818.29,388.88l0.81,0.0l0.13,0.4l-0.41,0.03l-0.53,-0.44ZM816.25,391.8l0.47,0.33l0.17,0.21l-0.48,-0.32l-0.16,-0.22ZM816.8,385.82l-1.39,0.35l-0.23,0.8l0.45,1.79l-3.94,-3.35l-1.06,-1.96l0.23,-1.56l0.96,-0.47l1.54,0.09l1.56,0.85l0.07,0.26l-0.54,0.05l-0.36,0.49l0.08,0.33l2.18,1.49l0.44,0.85ZM802.77,402.92l-1.18,-0.08l-0.23,-0.38l0.06,-0.07l1.35,0.53ZM803.59,403.3l1.45,0.63l-0.58,0.47l0.01,0.81l-0.88,-1.9ZM804.98,384.2l-0.24,0.59l-2.7,-0.32l-1.72,-1.02l-0.32,-0.93l0.6,-3.9l0.38,-0.22l2.7,2.03l1.3,3.77ZM804.87,402.17l-1.18,-0.04l-0.72,-0.74l1.04,-0.39l0.86,1.18ZM803.55,389.67l0.42,1.07l-0.21,0.06l-0.74,-0.21l-0.3,-0.75l0.84,-0.17ZM800.73,374.37l-0.23,-0.26l0.06,0.01l0.17,0.25ZM798.92,411.07l0.62,-1.07l0.75,-0.28l-0.2,1.38l-1.17,-0.03ZM799.05,405.81l-0.75,0.03l-0.09,-0.39l0.58,-0.24l0.26,0.6ZM798.86,388.92l-0.68,-0.13l-0.6,-0.33l0.96,-0.06l0.32,0.52ZM798.25,408.51l-1.57,-0.54l-0.39,-0.54l0.83,0.22l1.14,0.87ZM796.53,402.56l-1.67,0.73l-0.64,0.07l0.28,-0.88l0.55,-0.43l1.21,0.03l0.27,0.49ZM793.87,392.76l-0.5,0.2l-0.84,-0.22l-0.19,-0.43l1.45,0.02l0.08,0.44ZM791.45,390.29l0.78,-0.73l0.13,-1.13l0.54,-0.6l0.45,0.65l0.03,1.46l-1.93,0.36ZM791.76,377.39l0.24,-0.64l1.23,0.12l-0.2,0.31l-1.27,0.21ZM788.91,401.58l-1.79,-0.84l-0.5,-1.0l0.22,-0.27l2.74,-0.15l3.17,-1.15l0.61,0.28l-0.14,0.53l-1.55,0.94l-0.54,1.55l-0.39,0.26l-1.53,-0.43l-0.3,0.29ZM791.43,413.31l0.66,-0.48l0.44,0.48l-0.28,0.12l-0.82,-0.11ZM791.66,406.51l-1.34,-0.08l-1.27,-0.48l-0.8,-1.18l0.15,-0.34l3.04,1.38l0.21,0.71ZM790.81,396.83l-0.66,0.46l-1.02,-0.09l-0.72,-0.71l0.57,-0.49l1.43,-0.04l0.4,0.88ZM786.91,407.53l2.0,2.39l0.1,0.48l-0.3,0.21l-2.98,-0.17l-0.69,-0.47l-0.32,-0.82l0.28,-0.82l0.62,-0.65l1.29,-0.15ZM784.02,418.37l1.41,0.25l0.32,0.59l-0.9,0.06l-0.82,-0.9ZM782.01,373.8l0.02,0.06l0.14,0.43l-0.18,-0.37l0.02,-0.12ZM781.13,424.26l0.37,-0.31l0.47,0.05l-0.03,0.01l-0.81,0.25ZM782.18,421.57l-0.75,-0.35l-0.07,-0.37l0.6,0.29l0.22,0.43ZM781.63,388.75l0.22,-0.04l0.01,0.14l-0.24,-0.1ZM779.17,394.82l0.02,0.0l0.02,0.02l-0.02,-0.01l-0.02,-0.01ZM777.7,422.04l1.74,0.82l-0.21,0.67l-1.09,-1.14l-0.44,-0.35ZM778.76,385.36l-1.23,-0.38l0.06,-0.44l1.27,-0.36l-0.09,1.17ZM777.72,375.66l-0.61,0.03l-0.17,-0.45l0.11,-0.13l0.67,0.55ZM778.09,413.85l-0.3,0.58l-2.15,1.08l-5.32,0.28l-0.35,-0.2l0.52,-1.82l0.48,-0.17l1.61,1.29l1.71,-0.69l1.25,-1.09l1.13,-0.01l1.41,0.76ZM775.65,396.22l0.17,0.15l-0.03,0.55l-0.21,-0.13l0.07,-0.57ZM775.3,428.75l-0.02,-0.01l0.02,0.0l0.0,0.01ZM775.23,405.84l0.36,0.37l-0.12,0.39l-0.14,-0.04l-0.1,-0.72ZM768.35,407.86l-0.03,1.39l0.6,0.8l-3.6,-2.92l-1.67,-2.04l-0.32,-0.97l1.25,-0.58l0.86,0.11l5.19,2.31l1.12,-0.04l2.4,2.02l-0.02,0.54l-1.13,0.26l-1.73,-1.67l-2.08,-0.76l-0.87,0.44l0.02,1.11ZM765.61,416.66l-4.79,-1.08l-0.56,-1.39l0.31,-2.34l0.4,-0.4l0.95,0.0l2.26,0.87l-0.29,1.67l1.41,1.52l0.32,1.16ZM757.66,416.38l0.22,-0.38l0.15,-0.5l0.32,0.25l-0.5,0.5l0.14,0.44l-0.32,-0.32ZM755.96,406.91l1.8,0.76l-0.59,0.73l-0.97,0.45l-0.23,-1.94ZM754.78,409.27l0.11,-0.03l0.08,0.13l-0.11,-0.04l-0.08,-0.06ZM753.92,419.21l-0.68,-0.15l-0.18,-0.68l0.52,-0.1l0.83,0.44l-0.48,0.49ZM750.09,407.97l0.03,0.0l-0.01,0.01l-0.02,-0.01ZM751.19,407.81l0.25,-0.04l0.33,0.1l-0.06,0.13l-0.51,-0.19ZM751.44,422.22l-1.4,-0.28l-1.19,-0.76l-0.2,-0.44l0.29,-0.48l0.66,-0.13l1.43,0.77l0.42,1.33ZM742.66,425.23l0.26,-0.15l0.57,0.48l-0.35,-0.21l-0.48,-0.12ZM740.29,435.46l0.07,0.99l-0.99,-1.19l-1.8,0.28l-2.36,-0.63l-1.54,-2.56l2.12,0.34l1.76,1.42l2.74,1.34ZM739.53,442.0l-4.83,-3.34l-0.21,-0.56l0.72,-0.3l0.66,0.4l1.13,0.05l1.13,0.8l1.01,0.95l0.39,2.0ZM736.93,420.89l0.37,0.21l-0.24,-0.05l-0.13,-0.16ZM727.4,420.76l1.98,0.75l0.6,-0.37l0.16,-0.62l0.51,-0.14l2.5,0.51l2.46,1.46l2.01,2.48l-1.67,-0.34l-1.91,-0.96l-2.85,-2.74l-0.69,0.3l-0.35,0.83l-1.23,-0.28l-1.53,-0.87ZM736.93,428.44l-2.61,-0.58l-0.66,-0.66l0.52,-0.14l1.85,0.58l0.9,0.8ZM731.24,449.45l0.04,-0.09l0.06,-0.41l0.25,0.2l-0.35,0.29ZM728.86,449.09l-0.75,-0.13l-1.08,-0.89l0.12,-0.52l0.28,-0.14l1.43,1.68ZM721.21,453.92l-0.05,-0.78l0.92,-0.54l0.9,0.55l-0.03,0.54l-1.22,-0.15l-0.52,0.38Z\",\n            name: \"Norrbotten\"\n          },\n          \"SE-T\": {\n            path: \"M303.99,1006.09l1.75,2.63l0.11,0.81l-0.71,1.57l0.18,0.86l4.49,1.99l1.03,1.54l1.24,2.91l0.29,1.89l-1.64,6.62l-0.14,2.49l0.39,1.46l0.9,0.91l4.89,0.39l0.91,1.1l0.6,4.53l0.34,1.34l0.64,0.98l1.14,0.37l1.84,-0.18l1.11,0.58l-0.11,1.49l-1.37,2.09l-0.06,1.09l1.95,2.4l0.41,2.62l-0.6,0.95l-1.21,0.62l-5.37,1.44l-0.98,1.88l-0.17,1.33l0.29,1.21l1.53,2.11l-1.76,3.83l-0.11,1.43l0.55,0.52l2.72,1.1l1.63,1.17l2.53,3.15l1.19,0.4l3.38,-0.01l-1.75,2.4l-0.53,1.24l0.79,2.47l1.64,3.41l-0.11,1.24l-0.87,0.63l-3.27,0.98l-2.02,1.08l-0.86,1.22l-3.18,2.84l-1.06,2.0l1.46,2.5l3.74,2.69l-4.12,0.96l-3.41,1.57l-0.78,1.15l-0.1,0.96l0.39,1.74l-0.34,1.3l-1.69,2.12l-1.78,1.05l-7.46,2.82l-1.86,0.39l-1.77,-0.01l-2.42,-0.69l-1.89,-0.11l-2.33,0.47l-7.45,3.8l-2.07,1.75l-5.29,6.07l-3.42,2.96l-7.96,1.81l-2.38,1.18l-3.12,2.26l-4.14,-2.48l-1.32,-1.43l-0.86,-2.48l-1.22,-2.17l-1.52,-0.93l-1.41,-0.3l-1.02,0.31l-1.44,2.02l-2.27,1.19l-0.45,-0.21l-0.53,-1.01l-0.75,-0.31l-2.75,-0.34l-1.47,-0.59l-0.47,-0.8l-0.56,-3.58l-1.0,-1.78l-3.79,-4.76l-0.65,-1.38l-0.13,-3.51l-3.11,-5.87l-2.67,-6.23l0.99,-3.92l0.33,-4.05l-1.45,-6.6l-0.07,-4.56l1.35,-9.29l1.29,-4.02l4.63,-9.61l3.46,-3.64l0.39,-1.25l-0.31,-1.59l-2.26,-2.18l-0.39,-0.89l-0.02,-1.1l0.93,-2.2l0.46,-0.19l1.16,0.5l0.54,-0.17l0.37,-0.78l0.12,-1.52l-0.52,-4.46l-1.99,-6.11l-0.66,-4.0l0.08,-9.2l-0.61,-9.14l-0.79,-2.11l-1.21,-1.08l-2.85,-1.69l-0.12,-0.88l0.89,-0.69l5.78,-2.75l0.23,-0.4l-0.28,-3.06l17.65,1.84l3.81,-0.46l0.3,-0.53l-1.31,-3.72l0.3,-1.76l0.79,-1.85l2.87,-1.72l2.04,-0.37l0.32,1.49l0.57,0.7l1.37,0.98l3.14,1.34l6.21,1.16l14.96,4.94l1.28,0.74l13.29,12.59Z\",\n            name: \"Orebro\"\n          },\n          \"SE-S\": {\n            path: \"M56.58,1069.67l-0.33,-4.24l-1.56,-6.78l-7.26,-20.05l-0.42,-2.09l0.25,-2.51l1.14,-1.37l9.19,-3.81l1.69,-1.44l3.1,-4.2l0.37,-7.41l-0.96,-1.91l-2.34,-2.28l-0.72,-1.27l0.41,-3.15l2.58,-1.92l3.39,-0.9l10.87,0.81l3.03,-0.51l10.06,-6.17l10.68,-9.45l2.53,-3.14l1.89,-3.75l0.97,-4.56l-0.22,-3.85l-1.76,-6.56l-0.56,-3.38l0.28,-1.53l0.82,-1.26l4.99,-5.15l1.14,-2.09l0.81,-2.54l0.5,-3.8l-0.27,-3.19l-1.02,-3.07l-7.62,-14.63l-7.19,-9.98l-1.81,-3.98l-2.51,-11.19l-1.28,-3.51l-2.6,-4.68l-0.16,-1.8l1.64,-1.21l15.6,-3.48l3.87,-0.15l7.65,1.06l1.66,-0.63l0.4,-0.64l2.75,5.26l23.3,19.01l2.9,3.05l1.62,2.4l2.64,5.9l0.75,0.74l2.17,0.93l1.01,0.78l9.32,12.37l2.38,3.87l1.23,2.71l3.74,4.29l1.65,1.09l7.6,2.81l1.84,1.17l12.0,14.84l7.43,6.01l1.84,0.66l2.59,-1.13l0.49,-0.54l-0.08,-0.94l-2.71,-2.67l-0.3,-0.72l0.31,-0.25l4.14,1.19l5.68,0.4l0.96,0.47l2.29,3.11l2.29,4.92l1.7,2.11l1.56,3.25l13.0,7.09l0.28,3.06l-5.64,2.69l-1.02,0.79l-0.35,0.96l0.52,1.05l4.0,2.71l0.62,1.8l0.58,8.96l-0.07,9.27l0.68,4.09l1.98,6.09l0.5,4.26l-0.21,1.59l-1.36,-0.4l-0.87,0.43l-0.59,0.84l-0.53,1.76l0.01,1.36l0.56,1.3l2.12,1.92l0.27,1.39l-0.97,1.76l-2.76,2.69l-4.67,9.7l-1.34,4.16l-1.37,9.45l0.08,4.66l1.44,6.49l-0.31,3.91l-0.88,3.51l-3.67,-2.02l-1.91,-0.6l-41.7,-1.02l-2.02,0.38l-2.27,1.26l-2.68,2.14l-4.09,5.09l-2.46,4.68l-2.44,6.59l-0.43,1.55l0.32,1.61l0.98,1.8l3.06,4.02l0.1,0.63l-0.51,0.38l-3.9,1.15l-5.83,-0.01l-24.26,-7.21l-4.65,-17.09l-5.58,-7.41l-0.9,-5.97l-0.6,-1.7l-3.73,-3.36l-1.12,-0.64l-1.89,0.14l-2.32,1.69l-1.48,2.31l-1.35,1.04l-2.53,-2.54l-1.7,0.14l-1.89,0.68l-4.7,-2.48l-0.38,-0.42l0.11,-0.56l3.02,-0.47l0.8,-0.4l0.3,-0.74l-0.81,-0.83l-1.47,-0.19l-5.83,1.35l-0.71,-0.08l-6.4,-2.54l-1.47,-2.85l-1.64,-1.02l-2.05,-0.28l-4.13,0.69l-1.45,1.11l-0.26,1.59l0.18,1.37l-1.35,0.76l-0.65,-0.07l-7.35,-4.49l-1.23,-0.06l-1.61,1.06l-1.62,0.17l-5.54,-1.44Z\",\n            name: \"V\\xe4rmland\"\n          },\n          \"SE-U\": {\n            path: \"M406.77,1041.24l-4.52,2.11l-3.04,-0.05l-38.39,5.69l-0.95,0.59l-0.43,0.97l0.07,0.94l0.93,1.88l2.19,1.36l-0.27,0.86l-0.78,0.58l-1.39,0.74l-4.75,1.42l-2.04,0.27l-7.19,-1.08l-1.77,0.16l-2.89,0.93l-2.13,1.62l-4.15,5.68l-0.54,1.02l-0.12,2.67l-0.31,0.81l-2.69,1.92l-4.17,1.22l1.1,-1.58l-0.04,-0.77l-0.32,-0.33l-3.75,0.02l-0.85,-0.32l-2.37,-3.05l-1.8,-1.28l-2.89,-1.3l1.96,-4.9l-1.63,-2.44l-0.2,-0.81l0.54,-2.19l0.35,-0.44l5.16,-1.32l1.35,-0.69l0.88,-1.29l-0.41,-3.24l-1.91,-2.25l0.01,-0.67l1.37,-2.11l0.13,-2.01l-1.11,-0.99l-3.17,-0.11l-0.77,-1.89l-0.18,-2.82l-0.45,-1.83l-1.13,-1.44l-1.63,-0.39l-2.83,0.01l-1.11,-0.62l-0.33,-1.17l0.13,-2.38l1.64,-6.63l-0.3,-2.14l-1.31,-3.09l-1.15,-1.72l-2.27,-1.24l-2.16,-0.69l0.66,-1.83l-0.13,-1.15l-1.76,-2.66l1.18,-2.33l2.48,-2.4l0.93,-2.93l0.7,-1.12l1.31,-0.7l2.31,0.04l3.41,1.39l1.35,0.17l1.64,-0.55l1.88,-1.57l1.07,-1.93l-0.07,-4.9l-0.32,-0.96l-0.7,-0.67l0.02,-1.12l1.25,-1.25l1.9,-3.89l-0.33,-1.89l4.21,-3.02l3.49,0.35l5.54,-1.49l4.17,0.49l1.31,0.64l1.51,-0.3l1.77,0.94l3.42,0.88l1.35,1.24l1.0,4.62l0.78,0.85l1.92,1.01l1.44,0.44l6.52,0.57l3.08,-0.3l4.18,-1.11l3.45,-2.03l3.17,-4.58l2.28,-2.0l9.86,-2.07l1.38,-0.59l0.16,-1.24l2.34,0.82l3.57,-0.47l7.31,-3.61l0.99,-1.3l0.1,-2.15l1.36,-1.35l1.87,-0.39l2.6,0.26l1.22,0.51l5.6,0.52l1.45,-0.4l1.38,-0.97l4.35,-1.2l9.58,5.89l1.2,1.0l0.3,1.35l-0.54,2.26l-5.29,12.57l-1.25,1.8l-1.03,0.78l-2.64,-0.01l-0.93,0.3l-3.83,5.36l-0.09,0.94l0.46,0.87l2.49,1.56l0.1,2.66l-0.34,2.4l-0.63,1.65l-0.87,1.18l-3.45,1.73l-2.85,2.02l-2.28,0.8l-1.3,-0.74l-0.88,-1.35l-0.72,-0.55l-3.8,-0.56l-4.66,-1.34l-1.74,-0.06l-0.56,0.94l0.17,3.28l-0.38,1.09l-0.84,0.96l-3.15,1.64l-0.46,1.1l0.67,1.7l7.03,11.72l1.1,2.78l2.06,7.85l1.19,2.85Z\",\n            name: \"V\\xe4stmanland\"\n          },\n          \"SE-AC\": {\n            path: \"M562.49,440.1l1.57,1.16l2.1,0.03l2.01,0.6l3.23,1.87l0.41,1.45l1.24,0.89l1.64,0.36l1.76,-0.28l3.96,-1.23l8.38,-3.96l5.14,-4.6l27.82,-6.82l78.28,16.31l20.72,10.4l-0.46,0.26l-5.88,-0.01l-0.93,1.21l0.75,1.74l1.44,1.81l-2.1,1.16l-1.85,-0.75l-0.96,0.0l-0.77,1.62l-2.25,1.78l-0.17,1.38l0.71,0.83l-0.65,0.43l-8.18,0.36l-1.02,0.44l-0.36,1.16l0.7,1.5l-0.31,0.99l-1.21,1.57l-1.55,0.79l-0.3,0.48l0.64,2.7l-2.48,1.85l-0.17,0.46l0.5,1.64l-3.04,1.15l-1.06,0.07l-0.82,-0.41l-0.78,-3.16l-1.63,-0.58l-1.23,0.58l-0.79,1.08l-0.38,1.89l0.49,1.65l0.97,0.66l1.71,0.48l-0.2,1.6l1.37,1.13l1.34,0.45l2.66,0.03l4.31,-0.88l4.2,1.33l1.49,0.83l0.31,1.14l-0.51,0.32l-3.48,-0.19l-1.3,0.34l-0.24,0.6l1.16,1.86l1.48,1.54l2.95,1.94l-1.03,0.32l-0.56,0.92l0.3,1.04l0.71,0.63l-1.12,-0.36l-3.17,-2.5l-3.15,-1.4l-1.36,-1.62l-1.78,-1.34l-1.64,0.36l-1.0,1.68l0.1,2.08l0.82,1.93l1.48,1.45l6.08,1.15l0.81,1.21l-0.62,0.07l-0.35,0.41l0.03,1.06l0.96,1.43l1.43,0.72l1.57,0.09l1.11,0.52l0.92,1.91l0.79,0.67l0.88,1.47l0.79,0.49l1.22,-0.53l0.18,-0.8l-0.26,-0.64l0.56,-2.13l1.04,0.41l2.84,3.4l1.33,1.03l0.63,-0.21l0.72,-2.45l0.65,0.31l0.18,2.75l0.84,1.49l1.18,0.95l1.43,0.33l-1.56,0.64l-0.77,-0.31l-1.68,-2.16l-1.06,-0.47l-4.88,2.78l-0.9,-1.64l-1.27,-0.44l-0.84,0.68l-0.01,1.11l1.32,0.47l1.21,1.8l1.01,0.68l1.92,-0.98l3.26,-0.08l0.79,2.67l-0.76,1.56l0.1,1.41l0.98,0.97l1.71,0.28l0.81,-0.52l0.95,-1.65l2.55,0.7l0.52,-0.48l-0.29,-1.06l0.27,0.0l0.61,0.42l0.44,0.88l0.07,1.3l-0.32,0.78l-1.64,0.17l-1.67,1.38l-1.74,0.78l-4.66,5.48l-5.43,4.32l-1.19,-0.86l-1.27,-1.73l-1.02,-0.91l-0.48,-0.04l-0.17,0.45l0.37,1.8l-0.37,1.78l0.78,1.43l-2.61,1.25l-0.98,0.08l-1.6,-0.76l-0.58,0.27l-8.61,9.35l-2.61,-0.61l-0.67,0.66l-1.71,3.23l-5.26,4.55l-1.31,2.21l0.76,2.12l-0.4,1.77l-2.85,4.57l-0.35,2.0l0.45,1.21l-0.66,0.46l-0.2,0.56l-0.3,3.25l-1.14,0.61l-1.03,1.22l-1.56,0.76l-1.13,1.6l-3.22,8.12l-3.09,2.04l-2.93,0.11l-0.93,0.73l-0.38,2.02l0.79,0.86l1.44,0.14l-1.73,2.62l-1.77,-2.59l-1.07,-0.77l-1.2,-0.15l-3.55,2.67l-0.35,1.59l-0.82,0.78l-0.37,-0.3l0.55,-1.1l-0.22,-1.16l-2.59,-2.44l-0.48,0.17l-3.21,5.35l-1.06,0.98l-1.79,-0.5l0.26,1.24l-0.37,2.08l0.5,2.89l-0.99,2.27l-0.69,0.85l-0.55,0.27l-0.96,-0.26l-0.54,-0.71l-0.07,-1.12l0.59,-1.66l-0.08,-1.17l-1.6,-2.75l-1.07,-0.54l-0.54,0.22l-0.63,1.66l0.1,6.55l-0.62,2.39l-0.46,0.12l-0.87,-0.61l-0.7,-1.07l-0.04,-0.96l1.33,-4.27l-0.15,-1.42l-0.69,-0.23l-1.39,1.5l-1.32,2.42l-0.69,2.67l0.35,2.06l-5.61,0.09l-2.18,0.87l-0.5,-0.36l-0.71,-1.47l-0.72,-0.52l-1.4,-0.18l-1.47,0.35l-1.29,0.71l-1.08,1.08l-0.69,1.57l0.13,1.42l0.74,1.45l-4.37,-1.49l-1.37,0.01l-0.95,0.77l-2.52,1.05l-0.6,0.6l-1.0,2.69l-7.49,5.21l-0.32,1.55l1.11,2.83l0.35,2.3l-1.71,0.55l-3.04,2.49l-0.61,0.19l-2.92,-1.31l-0.14,-3.42l-1.52,-0.91l0.3,-1.23l-0.21,-0.47l-0.85,-0.4l-1.97,-1.9l-3.48,-0.98l-2.19,-2.3l-1.61,-1.02l-2.08,0.09l-1.76,1.33l-0.01,0.63l1.61,1.08l1.41,0.41l-0.73,2.74l1.05,0.98l1.76,0.36l1.35,0.84l-2.12,0.93l-1.08,0.11l-0.55,0.61l0.7,1.36l2.72,2.89l0.08,1.66l-3.37,-1.96l-5.56,-5.18l-1.93,-0.77l-0.54,0.34l-0.02,1.11l1.65,3.12l-0.83,0.3l-2.13,-1.67l-7.51,-14.76l-8.62,-10.83l-2.22,-2.27l-1.6,-1.15l-3.62,-1.49l-0.15,-1.63l-0.76,-1.59l-1.64,-1.29l-1.69,-0.54l-3.87,-0.09l-1.44,-0.62l-1.57,-1.36l-1.43,-0.71l-3.22,-0.74l-3.42,-1.43l-6.22,-0.04l-1.38,-0.35l-3.93,-1.87l-0.97,-0.76l-5.01,-7.29l-0.19,-0.67l2.22,0.08l0.8,-0.38l0.5,-1.05l-0.2,-1.22l-0.8,-1.65l-2.79,-1.29l-4.65,-0.02l-43.01,10.12l-56.26,-7.62l-7.9,-4.01l-35.54,-28.16l-2.73,-1.37l-2.16,-0.69l-2.67,0.0l-4.69,1.17l-0.84,-0.63l-1.32,-2.19l-1.72,-4.23l-2.68,-2.7l-13.48,-8.03l-1.46,-1.93l-0.75,-2.36l-0.65,-4.43l-0.84,-1.35l-1.37,-1.3l-3.36,0.46l-1.46,3.0l-0.81,2.87l-1.79,0.45l-1.77,-4.72l-1.4,-1.69l-1.87,-1.56l-11.35,-7.11l-1.23,-1.45l-3.43,-2.55l0.3,-0.44l4.19,-1.56l0.52,-0.44l-0.22,-0.97l-2.93,-1.65l-4.83,-4.66l-2.95,-1.64l-2.85,-1.11l-4.55,-0.41l-1.49,-2.06l-1.34,-4.02l-0.96,-1.84l-1.44,-1.41l-1.38,-0.82l-2.62,-1.11l-3.45,-0.92l-1.86,-1.02l-7.11,-9.05l-5.02,-4.36l-25.32,-12.56l2.13,-10.89l0.94,-2.63l1.3,-1.59l5.51,-3.66l2.37,-3.58l0.27,-5.22l-0.54,-11.11l3.42,-26.35l0.62,-1.67l4.53,-7.2l0.86,-2.62l-0.31,-4.61l-6.98,-31.38l34.61,-3.14l29.19,-13.75l0.9,-1.87l-0.9,-6.93l25.65,8.66l43.19,22.65l26.13,7.86l40.23,28.15l21.07,11.04l27.27,8.49l1.38,2.15l3.25,3.35l3.59,2.49l3.85,1.62l7.18,1.45l4.19,3.27l2.49,0.97l9.56,0.3l1.12,0.36l2.99,3.91l3.84,3.1l11.38,3.69l3.81,3.75l7.12,1.4l3.78,2.05l1.81,1.59l0.76,1.82l0.52,3.34ZM701.97,477.32l-0.76,-0.03l-1.24,-1.28l-0.08,-1.5l1.44,0.86l0.61,1.07l0.04,0.88ZM692.3,498.41l0.65,0.33l0.45,-0.13l0.99,-0.82l1.08,0.91l0.31,0.76l-0.55,0.16l-3.62,-1.34l-0.66,-1.41l-0.13,-1.12l1.12,0.39l-0.06,1.53l0.4,0.73ZM682.61,594.47l-0.06,-0.25l0.23,-0.1l-0.02,0.24l-0.15,0.1ZM675.58,606.11l-0.84,0.48l-0.93,-0.05l-0.72,0.48l1.19,-5.51l0.47,-0.7l2.85,-2.1l0.17,0.9l-0.7,1.3l0.24,2.02l-0.24,1.21l-0.61,1.19l-0.88,0.78ZM672.01,597.74l1.03,-1.86l2.22,0.29l0.82,1.64l-1.87,1.26l-0.66,-1.15l-0.67,-0.3l-0.88,0.13ZM671.18,611.56l-0.56,0.03l0.05,-0.42l2.11,-2.14l-0.34,1.11l-1.26,1.43ZM665.52,616.45l0.82,0.25l0.68,-1.67l-0.25,1.52l-1.01,0.49l-0.37,-0.26l0.12,-0.33ZM653.14,596.97l0.31,-0.58l-0.12,0.5l-0.19,0.08ZM652.57,602.21l-0.01,-0.24l0.22,-0.17l0.19,0.54l-0.4,-0.13ZM632.45,610.65l0.02,0.01l0.01,0.03l-0.03,-0.04ZM606.63,629.21l0.07,0.37l-0.06,0.01l-0.09,-0.33l0.09,-0.05ZM605.73,622.27l-0.0,-0.08l0.02,0.05l-0.01,0.03ZM579.98,632.39l0.57,0.48l-0.36,-0.09l-0.21,-0.4ZM580.71,633.01l0.9,0.46l-0.17,0.33l-0.52,-0.24l-0.22,-0.55Z\",\n            name: \"V\\xe4sterbotten\"\n          },\n          \"SE-AB\": {\n            path: \"M560.47,1050.72l-0.02,-0.04l0.02,-0.0l-0.0,0.04ZM557.18,1016.75l0.82,-0.5l0.99,-0.0l-1.09,1.56l-0.73,-1.06ZM558.26,1028.28l0.02,-0.44l0.56,0.12l-0.35,0.27l-0.24,0.05ZM556.86,1035.44l0.53,-0.3l0.1,0.14l-0.32,0.15l-0.31,0.02ZM555.04,1028.71l0.36,-0.0l0.14,0.26l-0.28,-0.18l-0.22,-0.08ZM555.47,1019.41l0.17,0.24l-0.65,0.26l-1.01,-0.32l-0.43,-0.55l1.92,0.36ZM552.55,1010.95l1.29,-2.29l1.03,-0.44l-0.05,1.0l-0.61,0.27l-1.17,1.42l-0.49,0.05ZM552.09,1016.43l-0.52,-0.12l-0.04,-0.4l0.48,-0.35l0.53,0.09l-0.45,0.77ZM449.5,1097.99l-1.81,-1.49l-2.34,-0.95l-3.12,-0.35l-4.49,0.07l-1.61,-0.44l-1.36,-2.1l-0.79,-2.1l-1.2,-7.88l-2.7,-5.21l-0.9,-4.6l0.65,-1.1l2.81,-2.33l0.39,-2.05l-0.1,-2.81l0.29,-2.17l0.76,-1.12l0.63,-0.67l0.8,-0.26l3.6,-0.34l1.3,-0.56l0.64,-1.38l0.04,-0.96l-0.68,-0.97l1.18,-2.07l0.8,-2.2l0.43,-0.58l2.58,-1.66l0.62,-0.98l0.48,-4.65l0.41,-1.0l3.27,-4.5l0.36,-1.05l-0.16,-1.17l-1.11,-1.18l-0.81,-1.57l0.17,-2.75l0.71,-1.14l0.29,-1.64l3.38,-1.38l2.65,-2.83l2.69,0.09l3.47,1.51l1.19,0.16l1.94,-0.77l4.16,-0.95l9.35,-4.3l5.65,-0.17l1.51,-1.08l2.92,-5.11l1.57,-1.53l2.15,-1.04l4.33,-0.88l4.7,-1.71l3.23,-1.76l1.59,-2.02l0.74,-2.3l-0.01,-4.36l0.37,-1.45l1.47,-1.39l3.03,-1.66l-0.13,-0.79l-2.1,-1.88l0.07,-0.75l0.75,-1.31l2.11,-2.13l3.0,-3.88l1.34,4.12l0.39,0.31l0.81,-0.3l0.45,-3.59l-0.25,-2.02l-0.49,-1.23l2.72,-0.69l1.59,0.24l2.26,1.72l2.41,0.53l0.83,0.96l0.3,1.5l-0.11,3.47l0.48,1.6l3.02,3.37l0.51,1.22l0.52,0.22l0.22,-0.52l-2.32,-5.19l-0.61,-2.52l0.79,-2.66l2.23,-0.94l0.64,0.29l0.06,3.45l0.36,1.41l2.98,7.6l2.39,4.77l1.56,1.52l2.94,0.75l2.6,1.47l0.21,1.52l1.64,1.59l1.02,-0.0l0.36,-0.5l-0.3,-1.49l1.38,0.4l-0.25,5.68l-1.7,-0.1l-0.77,-0.43l-4.87,-6.03l-2.23,-2.2l-2.22,-0.96l-0.45,0.1l-0.06,0.46l0.7,1.3l2.31,3.18l0.28,1.51l-0.69,1.48l-4.18,4.91l-1.12,0.69l-1.42,0.27l-2.94,-0.12l-1.62,0.28l-1.26,0.93l-0.47,1.65l0.39,0.49l1.23,-0.01l2.66,-1.03l17.02,-0.6l2.53,1.11l-0.6,1.87l-1.04,1.25l-1.37,0.71l-4.04,0.93l-1.13,-0.01l-0.9,-0.4l-1.86,-2.78l-0.65,0.1l-0.78,1.66l-1.37,1.24l-1.57,0.81l-5.14,1.21l-1.6,1.06l-0.29,1.41l-2.08,0.08l-0.6,0.31l-0.51,1.72l-1.06,1.14l0.39,0.3l2.53,0.17l-2.07,1.83l-1.63,-1.27l-1.1,-0.14l-0.35,0.63l1.65,2.67l-1.29,0.64l-1.6,1.37l-2.94,1.0l-3.8,2.81l-3.91,1.19l-1.84,1.31l-3.02,3.09l-2.17,1.41l-2.23,0.31l-5.13,-0.44l-0.43,0.4l0.2,1.03l1.79,1.06l-0.31,0.21l-1.84,-0.16l-1.23,0.59l2.27,1.56l-0.19,1.57l1.25,0.93l1.84,0.45l-0.88,0.5l-3.91,-0.09l-3.9,-0.95l-1.41,-1.05l0.88,-0.25l1.86,0.51l0.15,-0.42l-0.56,-3.0l-0.66,-0.81l-0.86,-0.12l-2.49,1.42l-1.2,-1.1l-0.5,-0.17l-0.72,0.27l-2.15,1.93l0.02,1.26l0.73,1.67l-1.79,0.91l-1.27,-0.02l-2.32,-1.13l-0.48,0.2l0.12,0.5l8.59,6.33l-1.43,0.25l-0.97,-0.22l-0.49,0.39l0.01,1.17l0.4,0.4l5.29,0.02l1.67,-0.75l0.36,0.08l0.42,1.1l0.79,0.26l2.6,-4.4l4.08,-1.25l4.74,0.63l3.31,1.31l-0.94,0.94l0.17,0.69l2.05,0.49l1.32,-0.32l0.84,-1.5l-2.12,-4.22l2.7,0.0l0.39,-0.3l-0.2,-0.45l-3.82,-2.3l-0.44,-1.05l3.25,0.18l1.67,0.58l1.61,1.12l0.68,2.18l4.24,1.88l-0.42,0.68l-3.61,-0.57l-0.42,0.3l0.22,0.47l1.54,0.69l4.38,1.4l0.79,1.4l-0.41,1.21l-1.08,0.57l-3.53,0.16l-3.16,0.83l-1.95,-0.94l-2.03,-0.47l-6.57,0.58l-1.37,-0.48l0.36,-1.76l-0.37,-0.51l-1.5,-0.01l-2.43,1.27l-1.05,0.98l0.09,0.64l1.55,1.09l1.03,1.59l-1.9,-0.02l-0.92,0.55l-0.15,0.46l0.43,1.26l4.19,1.96l1.61,0.39l1.75,1.0l1.56,1.46l0.23,0.43l-4.91,-3.11l-1.76,0.13l-0.35,0.39l0.16,1.54l1.21,0.81l2.33,0.47l0.75,1.74l0.64,0.82l0.52,0.1l-0.23,1.08l0.53,0.38l2.1,-0.57l0.03,1.62l-0.41,0.8l-0.35,0.2l-0.72,-0.45l-1.63,-0.24l-2.64,0.63l-2.46,1.05l-1.3,1.15l-0.09,0.48l1.62,0.15l0.53,0.69l-4.8,1.8l0.85,-0.54l0.02,-0.66l-0.51,-0.37l0.67,-0.62l0.0,-0.63l-0.37,-0.4l-2.27,0.11l-2.68,2.03l-2.17,0.19l-1.16,0.49l-2.03,3.05l-0.66,0.37l-3.5,-0.13l-0.4,0.5l0.3,1.35l-1.13,-0.41l-1.05,0.14l-0.75,0.64l-0.07,0.53l0.93,1.36l-2.69,3.46l-1.1,2.32l0.58,2.87l-0.55,1.16l-0.77,0.68l-1.06,0.42l-1.02,0.02l-0.79,-0.52l-0.6,0.22l-0.38,1.31l-0.11,3.48l-0.82,-0.98l-0.24,-0.99l0.41,-1.49l-0.83,-1.86l-0.92,-0.67l-1.32,0.23l-0.97,-0.5l-1.92,-2.51l-1.3,-0.76l-0.05,1.84l0.8,2.17l1.02,1.62l-1.12,2.06l0.55,-2.7l-0.24,-0.51l-2.05,-0.73l-0.14,-1.58l0.35,-2.2l-0.71,-2.03l0.0,-0.56l0.97,-1.57l0.35,-3.13l-0.29,-4.83l0.83,-2.25l0.01,-1.31l-1.26,-0.91l-1.08,0.42l-0.81,0.83l-0.45,1.25l-0.1,3.08l-0.31,1.29l-0.39,0.33l-2.6,-2.44l0.16,-1.19l1.33,-2.19l0.38,-1.64l-0.91,-2.32l-1.57,-1.65l-0.48,-0.04l-0.17,0.45l0.92,3.28l-1.6,2.44l-2.35,1.35l-0.23,0.48l0.61,2.05l-0.4,4.0l1.1,1.49l-1.41,4.51l-0.7,-0.15l-0.52,0.41ZM547.92,1037.33l1.36,-0.32l1.18,0.12l-1.09,0.6l-1.45,-0.4ZM547.62,1030.31l0.64,-0.68l0.57,0.55l-0.35,0.16l-0.86,-0.03ZM544.89,1012.85l-0.03,0.68l0.68,0.32l-0.01,0.36l-0.75,0.8l-1.88,0.22l-1.31,-0.53l-0.93,0.53l-2.02,0.12l-0.18,-0.4l0.71,-1.41l3.89,-5.26l1.0,0.48l1.03,1.65l-0.2,2.46ZM543.98,1031.85l-1.26,0.51l-1.67,-0.41l-0.58,0.22l-1.4,3.76l-1.08,0.38l-1.17,-0.42l-0.23,-0.82l0.54,-0.81l4.63,-4.32l0.74,-0.29l0.59,0.38l1.29,1.68l-0.42,0.13ZM542.79,1052.93l1.05,0.46l-1.45,1.48l-0.46,-1.53l0.86,-0.41ZM541.85,1056.73l-0.33,0.26l-0.85,-0.46l-1.3,-1.3l-0.02,-0.37l0.34,-0.32l0.62,0.03l0.84,0.61l0.61,0.85l0.09,0.7ZM540.63,1067.13l-1.13,-0.67l-0.08,-0.41l0.57,-0.05l0.67,0.76l-0.04,0.36ZM536.98,1062.37l0.56,-2.06l0.32,-0.48l0.54,0.28l-0.02,0.74l0.31,0.31l-0.81,0.92l-0.91,0.28ZM539.0,1059.88l0.3,-0.29l0.71,0.3l-0.51,-0.02l-0.5,0.01ZM539.29,1052.7l-0.88,0.92l-1.05,-0.11l-0.6,-1.21l0.7,-1.22l2.3,-0.67l0.57,0.82l-1.03,1.47ZM530.64,1036.85l1.55,-0.92l4.63,-4.33l3.41,-2.08l-4.38,4.41l-1.89,1.24l-0.29,0.63l-3.02,1.05ZM535.62,1028.01l2.03,-0.92l0.73,0.99l-0.63,0.27l-1.01,-0.52l-1.12,0.17ZM537.22,1063.98l0.08,-0.04l0.57,0.02l-0.05,0.04l-0.6,-0.02ZM536.36,1055.5l-0.38,0.22l-0.22,-0.42l0.24,-0.31l0.36,0.51ZM527.94,1047.68l2.32,-0.59l0.31,0.27l-2.63,0.33ZM531.48,1047.24l0.14,-0.25l1.94,-0.03l-0.01,0.02l-2.08,0.26ZM530.38,1068.64l-0.12,0.67l-0.4,0.03l-1.43,-0.73l-1.09,-0.18l0.09,-0.68l0.84,-1.13l1.2,-0.86l1.09,-0.29l1.65,0.35l0.15,0.48l-1.97,2.34ZM530.83,975.72l-0.08,0.57l0.47,0.22l0.67,-0.23l0.34,1.07l-2.72,0.92l-2.19,-0.47l-0.66,-2.42l0.28,-0.94l0.79,-0.53l0.0,-0.38l-0.97,-1.19l1.98,0.62l0.85,1.33l1.14,0.66l0.11,0.77ZM527.72,1074.8l-4.52,2.25l-0.08,-0.04l1.84,-2.64l0.69,-0.2l2.3,0.42l-0.23,0.21ZM525.14,1057.83l2.73,2.21l0.28,1.56l-0.32,0.99l-0.87,0.7l-2.96,1.16l0.72,-1.05l-0.22,-1.87l-0.53,-1.05l-2.24,-2.38l3.4,-0.27ZM515.32,1044.34l0.79,-1.21l2.18,-2.07l2.53,-1.04l1.37,-0.02l1.23,0.4l1.0,1.23l1.21,-0.11l-1.67,0.61l-1.76,1.49l-0.75,0.28l-0.6,0.53l-0.36,0.92l-1.78,-0.4l-0.91,1.16l0.7,1.92l-0.17,0.78l-0.63,0.05l-0.23,-0.7l-0.45,-0.27l-0.33,0.41l0.14,2.83l-1.02,0.38l-0.4,0.51l-0.82,-2.13l-1.15,-1.75l-0.54,-1.85l0.16,-0.48l1.22,-0.33l0.51,0.18l0.51,0.97l0.7,0.01l0.08,-0.84l1.1,-0.31l0.19,-0.58l-2.05,-0.62ZM521.95,1050.58l1.26,-1.14l2.54,-0.08l0.8,-0.5l0.72,0.12l-1.35,0.42l-0.32,0.4l0.13,0.38l-1.74,-0.21l-0.83,0.48l-1.23,0.13ZM521.28,1077.43l0.49,-0.81l0.2,-0.09l-0.36,0.66l-0.33,0.25ZM518.56,1086.69l-0.0,-0.69l0.42,-0.46l-0.21,1.06l-0.21,0.09ZM519.08,1071.95l0.06,-0.01l-0.0,0.03l-0.05,-0.02ZM513.2,1066.37l4.59,2.32l-3.23,-0.19l-1.49,-1.09l-0.64,0.34l0.25,2.56l1.29,0.79l2.05,-0.18l-0.93,0.97l-1.84,-0.24l-3.47,-2.31l-2.58,-0.65l-1.18,-2.03l-2.58,-1.3l5.62,0.07l4.12,0.95ZM517.31,1082.25l0.24,-0.25l0.14,0.06l-0.39,0.18ZM513.22,1089.7l0.51,0.07l0.07,1.07l-0.58,0.78l-0.34,-0.04l0.34,-1.89ZM502.07,1089.77l1.5,-0.88l0.29,-0.88l-0.35,-0.59l2.64,-1.4l2.43,-1.93l1.45,-0.43l0.49,2.56l-2.06,2.71l-1.49,0.94l-0.57,2.4l-0.83,1.23l-1.27,0.01l-0.92,0.38l-1.21,-0.76l-0.82,-1.39l1.1,-0.32l0.21,-0.51l-0.61,-1.14ZM502.94,1053.26l1.78,0.5l-1.34,0.1l0.23,0.63l2.37,0.58l-1.77,-0.07l-0.77,-0.36l-0.5,-1.38ZM506.24,1073.2l0.05,0.02l0.01,0.06l-0.07,-0.08ZM498.28,1102.06l-4.47,1.14l-1.5,0.85l-1.01,-0.32l0.09,-0.59l0.97,-1.38l3.31,-2.35l2.51,-0.3l3.38,-1.62l-0.13,0.56l-0.88,0.82l-3.23,1.32l-0.19,0.94l1.16,0.93ZM500.56,1052.15l-1.77,0.29l0.08,-1.16l0.47,-0.4l0.63,0.16l1.35,0.86l-0.76,0.25ZM493.71,1057.9l-2.13,-0.1l-0.38,0.25l1.13,1.59l-0.45,0.66l-1.27,0.27l-1.55,-0.21l-2.71,-1.51l-1.04,-2.28l0.76,-0.29l7.63,1.62ZM488.04,1104.06l1.17,-0.7l0.46,-1.81l2.01,-0.34l-3.05,2.72l-0.58,0.14ZM481.53,1098.6l0.51,-1.94l1.47,-1.06l0.17,-1.35l1.15,-1.12l1.5,0.16l3.08,-0.64l2.1,0.2l-1.79,0.62l-0.08,0.81l1.09,-0.05l-0.16,0.74l-0.85,-0.49l-1.01,0.36l-0.67,-0.66l-0.64,0.03l-0.19,0.43l0.28,2.6l-0.26,0.55l-0.66,0.31l-0.69,-0.19l-1.57,-1.18l-2.79,1.87ZM488.73,1089.61l0.59,0.51l-0.71,0.39l-0.68,-0.3l0.79,-0.6ZM484.73,1109.25l-0.31,-0.62l0.8,-1.08l1.73,-1.27l-0.39,1.69l-1.55,0.72l-0.28,0.56ZM478.57,1101.62l-0.36,-0.36l-0.65,-0.04l1.52,-2.39l0.21,1.92l-0.73,0.88ZM479.27,1098.53l0.0,-0.0l0.48,-0.5l-0.17,0.29l-0.31,0.21ZM464.08,1114.84l1.3,-1.01l0.15,-1.03l-0.46,-2.28l0.13,-0.44l0.68,-0.36l-0.24,-2.22l1.83,-2.01l0.22,0.95l-1.04,1.21l-0.66,1.61l0.36,0.61l1.57,0.47l0.4,1.07l0.07,2.32l-0.93,0.64l-0.13,0.67l-0.63,-0.28l-2.62,0.07ZM458.09,1110.34l0.2,0.17l-0.11,0.5l-0.15,-0.37l0.06,-0.31ZM453.97,1102.72l-0.46,-0.9l0.05,-1.77l-1.06,-1.45l0.16,-1.64l1.31,-2.84l-0.13,-5.18l0.59,-0.74l0.33,1.03l1.25,0.95l0.47,1.06l0.81,2.98l0.06,1.39l-0.47,1.65l0.26,2.18l-0.62,2.49l-0.79,0.57l-0.04,1.18l-1.0,-1.19l-0.71,0.25Z\",\n            name: \"Stockholm\"\n          },\n          \"SE-\": {\n            path: \"M117.39,1399.24l-0.38,0.12l-1.79,-2.07l1.54,0.13l1.05,0.7l0.1,0.42l-0.52,0.7Z\",\n            name: \"\"\n          }\n        },\n        height: 1452.0211302823068,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"south_america_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 905.8723093907364,\n          bbox: [{\n            y: -1391900.644539083,\n            x: -12188330.527048683\n          }, {\n            y: 6974170.643481547,\n            x: -3876492.223609794\n          }],\n          left: 0\n        }],\n        paths: {\n          PY: {\n            path: \"M617.96,397.13l0.51,1.91l1.38,1.97l0.3,2.45l1.0,1.01l-0.05,1.74l0.83,1.52l0.04,1.56l-0.79,2.14l0.2,0.71l-0.84,1.85l0.34,2.51l-0.39,1.88l0.17,0.76l-0.61,1.7l0.39,1.02l1.95,0.65l1.21,-0.52l1.83,1.03l2.79,0.41l1.23,-0.23l3.66,0.95l3.93,-0.58l1.27,-1.62l0.68,-0.25l2.31,2.35l4.74,0.56l0.93,1.05l0.07,1.18l0.56,1.17l0.98,0.9l-0.38,2.67l0.61,2.74l0.48,0.79l0.07,1.93l0.43,1.23l-0.23,2.16l0.98,1.51l0.19,2.21l0.44,1.29l0.79,0.59l2.22,0.34l2.64,-0.58l4.14,-2.0l1.99,1.02l1.98,1.6l-0.65,0.98l0.44,2.31l-0.37,2.72l-1.7,6.89l0.19,0.79l-2.08,4.0l-0.26,7.36l-0.54,3.86l-0.91,2.83l-0.75,1.36l-1.31,0.69l-0.41,0.81l-1.98,1.6l-0.15,0.58l-3.31,0.93l-0.92,1.42l-0.93,0.58l-0.44,0.95l0.04,0.94l-1.19,1.34l-0.63,0.01l-2.02,-1.17l-1.4,-0.23l-1.29,0.18l-1.17,0.72l-1.52,2.14l-0.42,0.11l-0.91,-0.8l-1.12,-0.26l-1.47,0.32l-0.9,-0.1l-0.93,-0.59l-1.23,-0.06l-1.71,0.44l-3.26,-0.5l-5.11,-1.49l-4.29,-0.56l-5.03,0.5l-0.32,-1.1l0.2,-0.59l0.84,-0.63l1.26,-2.01l1.43,-0.89l0.0,-0.67l0.66,-0.53l0.44,-1.29l0.59,-0.7l-0.14,-3.19l1.09,-2.51l2.55,-2.09l1.75,-4.11l2.13,-2.02l0.17,-1.15l-1.03,-1.97l-2.17,-2.5l-1.74,-1.19l-2.27,-0.98l-1.4,-0.3l-0.78,0.28l-0.42,-0.16l-0.74,-0.85l-1.17,-0.66l-2.51,-0.75l-5.54,-2.85l-8.55,-6.02l-2.63,-1.08l-1.95,0.03l-2.86,-0.63l-3.98,-1.33l-2.19,-1.23l-0.67,-1.28l-1.49,-1.27l-2.41,-1.31l-1.98,-1.74l-2.72,-1.73l-1.52,-1.52l-1.64,-2.37l-1.82,-3.31l-1.91,-2.2l-2.96,-1.82l-0.24,-0.59l4.43,-14.56l0.02,-6.33l4.27,-6.28l1.89,-5.0l20.85,-4.31l10.9,-0.14l10.79,6.54l0.38,1.99l-0.23,2.03Z\",\n            name: \"Paraguay\"\n          },\n          CO: {\n            path: \"M382.29,58.03l1.56,1.88l0.98,-0.25l2.33,-1.73l0.19,-1.72l1.79,-1.65l-1.04,-2.95l-0.78,-1.05l-0.8,-1.99l-0.67,-0.67l0.8,-1.35l0.99,1.69l1.67,1.23l1.6,1.76l0.66,1.21l0.85,0.55l-0.61,0.55l-0.15,0.73l0.42,0.74l0.73,0.4l1.24,-0.35l0.59,-1.11l-0.36,-3.74l-0.58,-1.95l-1.11,-1.22l2.52,-1.13l4.97,-3.58l1.8,-3.44l1.22,-1.13l1.32,-0.71l1.84,0.16l1.66,-0.66l0.45,-1.32l-0.86,-2.26l0.99,-3.06l-0.02,-1.6l0.61,-0.86l-0.23,-0.83l-0.47,-0.08l0.57,-0.7l0.72,-2.4l0.5,-0.9l1.92,-1.37l0.46,-0.73l3.88,-3.31l0.74,-0.51l4.13,1.29l-0.32,0.28l-0.23,1.24l0.86,1.06l1.13,0.18l0.71,-0.74l1.56,-3.51l0.25,-1.96l0.51,-0.5l0.81,-0.19l3.06,0.77l1.53,0.07l4.63,-0.37l7.08,-5.05l3.26,-1.08l2.13,-1.09l1.48,-2.23l0.37,-1.53l0.73,-0.46l1.16,-0.09l0.7,-0.9l2.26,-1.24l2.45,-0.14l2.61,1.11l1.18,1.92l0.17,1.15l-2.04,2.08l-0.88,0.44l-6.86,2.03l-3.47,5.68l-2.36,1.01l-2.99,3.45l-2.24,4.36l-1.65,8.53l-4.17,6.75l-0.05,0.91l0.7,0.41l1.73,-0.32l1.57,-0.75l1.08,1.47l1.73,0.21l1.53,5.67l3.03,3.09l0.28,1.03l0.37,2.2l-1.05,1.57l-0.28,5.55l0.35,0.84l0.7,0.64l2.22,0.57l1.42,3.15l1.16,0.98l1.59,0.53l3.22,-0.51l5.94,0.56l1.52,-0.12l3.19,-1.13l0.89,0.08l3.23,1.33l3.11,0.24l8.1,9.77l0.58,0.26l0.74,-0.25l1.13,0.56l1.03,-0.25l1.18,-0.78l1.68,-0.15l2.44,0.5l3.24,-0.0l4.0,-0.5l2.46,-0.54l0.98,-0.57l3.23,0.55l0.85,0.61l0.46,1.64l-0.34,0.94l-1.24,1.23l-0.71,1.63l-0.13,1.75l-0.56,1.19l-1.19,1.0l-0.44,1.27l0.23,1.82l-0.61,7.54l0.53,0.81l0.35,2.99l1.52,4.17l0.71,1.15l1.29,1.0l2.13,3.14l-0.36,0.75l-5.79,5.18l-0.45,0.76l0.03,0.74l0.56,0.35l0.98,-0.42l1.57,0.43l0.66,1.25l4.09,3.45l-0.07,1.32l1.17,2.57l-0.12,0.84l1.66,3.72l0.07,0.9l1.15,2.95l0.01,1.28l-1.7,0.4l0.02,-4.85l-0.37,-1.18l-2.84,-4.69l-0.9,-0.57l-0.84,-0.04l-1.3,0.64l-3.15,3.42l-1.23,0.42l-0.83,-0.34l-1.13,-1.95l-0.94,-0.54l-0.78,0.46l-0.53,1.5l0.58,1.21l-13.01,0.01l-2.73,-0.63l-3.63,0.78l-0.43,0.4l-0.04,7.83l0.53,0.38l0.58,-0.2l4.28,0.47l1.36,-0.17l0.52,0.34l1.04,1.68l0.07,2.24l-1.95,-0.23l-1.53,-0.92l-4.05,1.48l-2.91,0.34l-0.36,0.39l-0.16,8.83l0.4,0.81l1.46,1.46l3.45,2.29l0.41,1.31l-0.22,1.57l0.91,2.04l1.07,0.93l-0.03,0.91l0.57,1.24l-6.52,35.85l-2.02,-1.67l-0.8,-1.87l-1.34,-1.01l-2.43,0.56l-1.95,-0.86l7.71,-12.05l0.15,-0.77l-0.67,-0.91l-1.66,-0.57l-2.19,-1.44l-2.71,-1.02l-0.69,-0.74l-3.29,-1.68l-1.92,0.47l-1.09,0.84l-2.1,0.23l-1.96,-1.3l-2.57,-0.87l-0.78,0.26l-2.04,1.82l-0.94,0.05l-1.83,0.85l-2.05,0.32l-2.9,-0.91l-1.1,0.49l-2.39,0.05l-0.67,-0.68l-1.79,-0.66l-0.14,-0.55l0.53,-1.63l-0.9,-3.15l-0.53,-0.68l-1.58,-0.08l-1.53,-0.94l-0.23,-0.43l0.32,-1.31l-0.33,-1.05l-1.79,-2.55l-1.0,-0.53l-1.48,-0.19l-2.25,-1.97l-2.36,-0.75l-0.88,-1.2l-1.1,-3.4l-2.43,-2.59l-1.65,-0.86l-0.51,-1.08l-1.95,-0.35l-2.39,-1.67l-1.12,-0.11l-0.83,0.71l-1.87,-0.71l-1.81,-1.2l-2.0,-0.37l-1.13,-0.68l-2.27,-2.35l-2.6,-1.21l-0.77,-0.07l-1.02,0.6l-0.42,0.57l-0.11,1.15l-0.53,0.2l-2.73,-0.44l-0.54,0.36l-0.64,-0.06l-3.31,-1.25l-2.26,-0.1l-1.1,-0.36l-0.8,-2.85l-2.15,-1.04l-0.63,-1.31l-1.83,-0.07l-2.4,-0.85l-3.25,-1.74l-2.39,-1.83l-2.03,-1.02l-2.09,-2.02l-0.43,-0.89l-1.37,-1.0l0.6,-1.14l1.73,-1.01l2.43,0.84l0.53,-0.31l0.32,-1.81l-0.93,-1.77l0.38,-3.3l0.62,-0.73l1.16,-0.61l0.77,0.24l0.83,-0.56l1.92,0.24l0.84,-0.28l1.77,-1.55l0.54,-1.01l0.53,0.08l0.45,-0.32l1.74,-2.05l-0.35,-1.59l1.65,-0.61l1.61,-3.0l0.86,-0.36l0.37,-1.45l2.97,-5.29l-0.41,-0.58l-1.18,0.59l-0.58,-0.19l0.15,-1.51l-0.55,-0.6l-0.53,0.11l-0.61,0.87l-0.47,-0.79l0.23,-2.17l-0.57,-0.33l1.22,-1.33l0.81,-4.16l-0.63,-1.42l-0.41,-5.85l-0.46,-1.29l-1.22,-1.12l2.21,-1.49l0.95,-1.66l-1.15,-2.6l-1.47,-2.16l-0.02,-0.62l0.88,-0.37l0.46,-2.78l-0.16,-1.13l-0.85,-1.39l-1.15,-0.22l-3.27,-5.22l-1.04,-1.0l0.75,-2.21l0.65,-0.42l0.41,-0.84l-0.26,-1.77ZM377.29,119.74l-0.18,-0.14l-0.03,-0.35l0.19,0.19l0.03,0.3Z\",\n            name: \"Colombia\"\n          },\n          VE: {\n            path: \"M451.67,10.36l0.06,2.29l1.39,2.81l1.8,1.73l-0.62,0.51l0.49,1.94l1.11,1.39l0.04,0.63l-0.8,2.44l-3.51,4.12l-1.87,3.97l1.4,2.05l0.27,1.17l2.47,2.5l-0.19,1.07l0.57,1.54l0.81,0.86l0.95,0.32l1.12,-0.02l2.97,-0.98l0.82,-0.56l1.93,-2.47l0.4,-4.32l-0.36,-1.69l-2.29,-3.98l-1.44,-1.4l-1.54,-4.23l-0.28,-1.64l0.97,-0.9l-0.08,-1.21l2.22,-0.4l5.31,-2.53l3.32,-0.65l3.78,-1.36l2.02,-1.88l2.17,1.0l1.19,-0.57l0.4,-1.09l1.36,1.25l4.73,-0.46l2.15,0.69l2.65,0.35l5.0,3.19l1.34,3.16l-0.53,0.96l0.38,1.55l0.85,1.59l1.36,1.02l3.34,0.25l8.88,-1.19l1.76,-0.49l8.81,-0.26l1.44,0.59l0.26,1.24l2.88,2.62l2.52,0.45l2.03,0.84l4.45,1.1l3.53,-0.39l7.89,-4.33l4.17,0.11l1.46,-0.74l-0.07,-0.7l-1.58,-0.67l-3.12,-0.25l2.84,-0.27l4.51,0.25l3.78,-0.81l2.95,0.02l2.89,-0.51l5.49,0.61l3.11,-0.35l-2.98,0.35l-1.85,1.06l-3.74,-0.19l-2.65,0.38l-0.34,0.36l0.85,0.62l0.19,1.15l0.8,0.28l0.93,1.07l0.25,0.96l-0.89,1.93l0.42,0.22l1.28,-0.28l0.61,-0.56l0.15,-0.95l2.61,4.93l0.92,0.06l0.67,-0.75l0.66,0.39l0.49,-0.5l0.07,-1.45l0.36,0.08l1.86,1.18l0.76,0.95l0.16,0.71l1.52,1.36l0.32,-0.37l0.05,-0.87l-0.36,-0.99l1.26,-0.02l0.61,-0.77l3.03,2.97l3.58,0.95l2.35,2.07l-0.4,0.8l-1.42,0.53l-0.85,0.93l-1.22,3.83l-1.36,2.68l-4.25,0.03l-0.38,0.3l0.19,0.45l3.76,2.25l0.46,0.0l1.23,-0.87l1.95,-0.11l2.67,-1.15l3.78,0.54l1.8,-0.98l1.94,0.13l1.65,0.75l2.11,2.79l-1.52,0.97l-0.82,1.63l-1.68,0.71l-2.36,1.95l-1.73,0.27l-0.6,0.63l-0.63,1.46l-1.23,1.27l-0.07,0.98l1.25,1.92l-0.32,0.81l0.14,0.8l0.82,0.79l2.76,0.04l-0.25,1.24l-0.42,0.56l-3.74,2.04l-1.78,-0.2l-0.95,0.67l-2.64,0.61l-0.76,1.63l0.62,1.69l0.25,2.62l-3.06,3.2l0.19,0.9l7.65,8.53l0.82,0.46l0.73,1.86l-0.23,0.96l-1.25,1.3l-1.96,1.05l-1.21,1.85l-1.0,0.3l-2.38,-0.03l-0.98,0.94l-1.48,0.51l-0.83,1.27l-6.99,2.2l-3.19,-0.67l-2.41,1.37l-1.28,0.33l-0.57,1.26l-0.28,3.07l-0.88,0.76l-1.01,-0.0l-4.47,-4.19l-2.45,0.55l-1.55,-0.55l-4.26,0.14l-1.07,-1.54l-1.06,-0.83l-4.62,-0.17l-1.63,-1.56l-1.35,0.09l-0.33,1.0l1.81,2.68l5.29,4.98l0.04,4.53l2.2,4.98l0.32,1.43l-0.47,1.81l0.15,0.53l1.72,0.71l6.15,0.46l-0.11,1.78l-0.6,0.8l-1.36,0.24l-3.19,1.68l-2.09,0.6l-0.5,0.57l-0.92,3.32l-1.0,0.99l-1.08,0.81l-2.24,0.07l-2.88,2.35l-1.09,-0.01l-3.51,1.83l-1.96,2.15l-1.26,0.87l-1.23,1.95l-0.42,0.02l0.4,-1.64l-0.52,-1.0l-1.81,-0.9l-1.67,0.59l-2.95,1.81l-3.18,0.24l-6.2,-5.36l-0.09,-1.58l-1.14,-2.89l-0.1,-0.97l-1.66,-3.77l0.15,-0.68l-1.18,-2.59l0.18,-0.77l-0.28,-0.89l-4.27,-3.63l-0.63,-1.21l-1.95,-0.59l-0.86,0.26l6.02,-5.53l0.6,-1.29l-2.32,-3.65l-1.29,-1.0l-0.64,-1.04l-1.45,-3.99l-0.37,-3.08l-0.48,-0.67l0.62,-7.4l-0.24,-1.65l0.37,-1.06l1.15,-0.95l0.67,-1.49l0.13,-1.75l0.62,-1.36l1.27,-1.27l0.42,-1.16l-0.66,-2.33l-1.17,-0.81l-1.92,-0.52l-1.68,-0.07l-1.13,0.6l-2.38,0.52l-3.92,0.49l-3.13,-0.0l-2.5,-0.5l-1.84,0.17l-2.0,0.99l-1.1,-0.54l-0.83,0.22l-7.84,-9.65l-0.56,-0.3l-3.16,-0.25l-3.21,-1.33l-1.09,-0.11l-3.46,1.16l-1.32,0.09l-5.9,-0.56l-3.26,0.5l-1.21,-0.45l-0.82,-0.68l-1.44,-3.22l-2.44,-0.76l-0.72,-1.05l0.31,-5.13l1.07,-1.65l-0.4,-2.46l-0.43,-1.36l-2.93,-2.91l-1.55,-5.75l-0.89,-0.58l-1.19,0.02l-0.51,-1.1l-0.81,-0.44l-3.41,1.04l4.24,-6.94l1.67,-8.58l2.13,-4.13l2.81,-3.27l2.52,-1.15l2.87,-4.97ZM545.6,22.4l-0.48,0.2l-0.11,-0.2l0.47,0.01l0.12,-0.01ZM477.95,9.05l-1.38,-0.12l-3.1,0.53l-0.93,-2.76l0.89,-2.29l2.03,-0.82l0.87,0.63l0.89,1.27l0.73,3.57ZM451.82,10.18l0.36,-0.43l0.42,-0.11l-0.29,0.15l-0.5,0.39ZM457.21,8.44l0.52,-0.19l-0.25,0.13l-0.26,0.06ZM583.99,43.13l-0.26,0.09l-0.05,-0.57l1.3,-1.07l0.44,0.72l-1.43,0.84ZM543.68,17.62l0.28,-0.37l1.2,-0.33l1.08,0.82l-2.55,-0.13ZM546.28,17.77l1.28,0.14l0.62,-0.99l1.03,-0.91l0.16,0.14l0.33,1.34l-0.97,1.02l-1.39,0.03l-1.06,-0.78ZM531.54,18.25l0.57,0.0l0.46,0.27l-0.95,-0.22l-0.07,-0.05Z\",\n            name: \"Venezuela\"\n          },\n          CL: {\n            path: \"M517.81,894.4l-0.79,0.6l-0.46,-0.09l0.86,-0.87l0.51,0.17l-0.13,0.19ZM421.18,761.07l-2.03,-0.3l-1.45,-0.97l-2.2,-0.83l-0.44,-1.36l0.76,-1.63l-0.34,-0.57l-0.7,0.08l-1.47,1.3l-3.87,0.91l-1.03,0.73l-0.3,0.45l0.13,0.56l1.37,0.37l0.57,1.35l-0.32,0.68l-0.48,0.05l-1.49,-1.05l-0.77,-1.17l0.02,-0.86l0.53,-1.27l4.9,-3.62l2.05,-2.01l1.78,-1.11l0.08,-0.61l-1.69,-2.18l0.07,-1.51l3.28,-0.69l3.63,0.25l3.78,-1.12l0.91,-0.86l0.27,-0.74l-0.46,-2.78l0.79,-0.87l0.81,-0.17l1.1,0.44l-1.54,5.48l-1.13,1.55l0.35,1.85l-0.57,0.88l-3.56,1.23l-0.28,0.59l0.62,0.64l1.97,-0.11l1.65,-0.32l1.47,-1.03l1.2,-4.69l1.18,-0.37l0.27,0.4l-0.15,3.02l-1.2,4.5l-1.44,1.8l-0.25,0.78l0.06,0.58l0.43,0.36l1.46,-0.22l0.97,-1.09l1.32,-3.1l0.41,-4.74l0.46,-1.41l-0.17,-2.14l-1.88,-1.11l-0.21,-0.82l0.49,-1.81l2.11,-0.03l2.03,-1.48l1.21,-0.49l3.23,1.51l0.71,0.07l0.41,-0.46l-0.63,-1.13l-3.04,-2.07l-2.39,-0.3l0.38,-1.57l0.44,-1.61l3.33,-0.88l4.09,-2.77l0.88,-2.38l0.2,-2.34l-0.28,-0.42l-1.91,-0.59l-5.02,-3.18l0.42,-3.5l1.89,-0.74l0.87,-3.39l-1.23,-2.75l0.26,-1.68l1.55,-1.55l0.75,-2.29l1.19,-0.1l0.36,-0.38l-0.1,-1.98l-0.95,-1.54l-0.03,-1.83l0.76,-2.02l1.31,0.11l0.47,-0.71l-1.0,-1.42l-0.67,-1.77l1.28,-0.63l0.77,0.62l1.39,2.52l0.73,-0.07l0.22,-0.66l-1.03,-6.09l-0.51,-0.33l-1.42,0.4l-1.16,-0.19l-0.76,-0.9l0.79,-1.26l0.88,-0.73l1.98,-0.28l1.69,-1.12l0.67,-2.4l-0.55,-0.46l-0.5,0.21l-0.97,1.97l-1.14,0.53l-1.24,-0.38l-1.71,-1.69l-1.92,-0.46l-1.1,0.6l-1.87,2.85l-0.66,0.4l-3.21,0.22l-1.16,-0.32l-0.99,-0.33l0.39,-0.93l0.87,-0.68l0.01,-0.44l-0.36,-0.41l-0.95,-0.1l-1.04,-0.7l-1.79,-5.56l-0.2,-1.9l0.74,-1.44l1.64,-5.77l0.51,-2.94l0.87,-2.54l0.01,-1.61l2.1,-1.43l1.02,-1.12l1.94,-5.2l0.31,-2.9l-3.54,-10.18l-0.14,-1.9l0.81,-4.57l-0.68,-2.04l-1.7,-2.87l-0.03,-1.31l0.71,-1.78l-0.67,-1.8l0.56,-1.65l2.57,0.44l1.43,-0.32l0.79,-0.74l0.54,-1.66l0.63,-4.83l1.36,-0.77l1.6,-3.54l1.14,-5.58l2.26,-2.95l-0.34,-2.53l1.38,-1.84l1.38,-2.73l2.04,-2.14l0.49,-2.37l1.54,-4.22l0.77,-4.4l-0.12,-1.7l2.02,-4.56l2.04,-2.38l0.34,-1.8l-0.71,-1.4l-0.02,-1.86l-0.51,-2.37l1.7,-1.62l1.73,-4.25l-0.08,-1.75l0.47,-1.97l-1.1,-2.58l-0.16,-5.34l-1.63,-8.46l0.09,-2.38l-0.66,-4.75l0.45,-3.75l3.26,-2.6l1.03,-6.55l-0.14,-2.86l-0.39,-1.37l-1.53,-1.91l-0.38,-3.37l0.24,-0.73l1.31,-1.02l0.93,-1.39l0.53,-2.24l0.99,-1.8l0.38,-4.07l0.81,-3.21l0.38,-1.04l1.57,-1.94l0.33,-5.2l3.01,-11.05l-0.16,-1.5l0.32,-2.95l-0.93,-2.7l0.92,-2.9l1.7,-2.14l0.53,-1.81l0.07,-1.15l-1.54,-6.68l0.8,-6.51l0.0,-3.12l1.39,-4.07l-0.39,-0.78l-1.16,-0.66l-0.8,-1.28l-0.06,-1.27l0.35,-2.24l1.28,-0.35l0.8,-0.92l0.72,-1.61l0.87,-3.71l0.38,-4.64l1.7,-8.88l-0.01,-3.08l-1.31,-6.65l0.6,-6.19l-0.12,-6.61l-1.43,-5.53l-0.71,-5.45l-0.02,-2.92l-0.58,-2.84l2.15,-0.1l1.58,-0.56l1.71,-1.07l1.05,-1.4l0.53,-1.52l-0.57,-3.4l1.84,-0.52l1.55,-1.29l0.18,0.86l1.59,1.82l0.67,2.27l2.42,1.24l-0.54,1.06l0.63,1.71l1.55,8.66l1.39,1.64l4.58,3.84l-2.7,3.49l0.06,0.76l1.37,1.39l0.16,1.07l-0.35,0.72l-1.34,0.27l-0.66,0.6l0.3,1.93l0.44,0.84l-0.64,0.6l-0.13,0.91l0.33,0.72l2.88,1.88l-0.85,1.02l0.06,2.43l0.59,0.58l1.03,0.27l2.73,4.21l0.13,3.93l0.9,1.79l0.43,2.87l1.1,1.08l0.45,3.44l0.8,1.96l0.03,4.19l1.15,0.93l1.31,0.22l1.61,0.03l4.44,-0.85l1.92,1.96l-4.06,12.75l-10.62,4.51l-3.31,3.25l-0.66,1.51l0.01,1.51l0.42,0.79l0.74,0.43l0.43,1.46l0.45,0.51l-1.25,0.6l-0.58,1.04l-0.63,2.41l-0.08,1.02l1.07,3.27l1.13,5.09l-1.87,2.49l-0.24,1.73l1.34,2.79l1.95,2.61l0.0,1.02l-0.22,0.48l-2.13,0.68l-0.74,0.72l-1.3,-0.48l-1.76,0.68l-1.3,3.38l-0.74,0.69l-2.09,6.08l-0.88,0.62l-2.14,2.75l-0.79,0.32l-0.43,1.04l-1.62,1.82l-0.36,1.88l-0.59,1.15l-0.1,1.83l-0.98,4.01l-1.97,1.91l-0.45,1.09l1.17,6.05l-0.38,3.95l1.33,1.24l-1.15,2.19l-1.43,0.32l-0.48,-0.28l-0.54,0.14l-0.17,1.2l-2.21,6.04l0.43,1.59l-0.8,1.11l-1.02,-0.06l-0.7,0.73l-0.79,5.6l1.77,3.99l0.68,0.56l0.88,0.06l0.6,0.64l-0.27,0.6l-0.89,0.43l-0.1,0.69l0.53,2.48l0.78,0.71l0.31,1.47l0.71,0.66l-0.06,2.0l0.73,2.44l1.08,1.06l-0.81,1.74l0.11,2.49l1.11,1.24l0.84,0.08l0.71,-0.31l0.57,0.27l0.21,1.22l-0.99,2.68l-0.16,1.85l0.49,6.59l-1.6,0.48l-0.79,0.6l-0.56,1.68l-2.27,4.09l-1.25,5.6l-1.9,1.34l0.2,1.23l0.82,0.44l0.16,0.41l-0.05,1.17l0.45,0.88l0.42,3.31l-0.41,1.53l0.13,2.36l-0.47,0.73l-1.36,0.31l-1.85,1.82l-0.42,1.55l-1.61,0.26l-1.93,1.48l-0.41,0.99l0.05,0.89l-1.48,2.77l0.86,3.83l-0.95,2.47l0.74,2.23l-0.59,2.43l0.22,1.99l1.68,3.94l0.73,5.66l1.42,1.4l-0.51,1.61l-0.53,0.65l-1.61,0.29l-2.37,1.23l-1.52,1.36l-0.39,1.01l0.07,4.14l-1.39,4.21l-1.17,-0.16l-0.98,0.72l0.5,3.12l0.39,0.76l-0.23,1.72l-0.39,0.77l-0.74,0.1l-0.46,0.43l-0.32,1.12l0.35,1.18l1.1,1.06l-1.27,1.28l-1.51,3.54l-0.16,1.56l0.82,1.61l-0.22,7.08l0.24,2.36l-0.44,1.53l1.9,5.57l-0.09,0.53l-0.99,0.56l-0.76,0.21l-0.43,-0.35l-0.83,0.15l-1.13,1.62l-0.22,1.14l0.52,0.81l0.25,1.4l-1.06,1.69l0.36,2.84l-0.39,3.07l0.57,1.33l0.81,0.74l3.12,0.91l0.26,0.72l-0.11,0.56l-1.74,1.02l0.07,1.58l1.83,2.19l0.13,1.3l-0.59,0.61l-0.05,0.49l1.28,2.37l-1.55,2.63l-0.27,3.3l0.19,0.89l0.35,0.31l7.17,0.83l0.53,0.55l-0.08,0.69l-0.75,1.1l-0.42,1.74l-0.81,0.23l-1.26,-0.5l-5.97,0.61l-1.22,-0.28l-0.48,0.33l-0.09,0.89l0.7,1.53l5.17,1.06l1.78,2.71l1.01,0.89l0.04,1.16l-1.57,1.46l-0.28,1.06l-1.95,0.29l-0.97,1.0l-0.32,2.18l0.27,1.84l0.94,0.81l0.45,0.86l-0.5,1.04l-2.29,1.8l-0.03,0.5l1.31,2.28l0.74,4.81l-0.33,0.68l-2.57,2.1l-0.28,2.9l0.11,1.09l0.61,1.37l-1.46,0.58l-0.87,1.63l-2.88,2.26l-0.08,1.42l-2.1,4.61l0.08,1.66l1.34,0.93l0.86,1.31l0.38,1.65l-0.65,1.84l-1.67,0.79l-1.02,0.9l-0.41,0.82l0.23,2.39l-0.31,1.85l-1.23,1.43l-2.97,1.21l-0.76,0.67l-1.48,2.83l0.09,1.55l-3.52,0.18l-0.37,0.32l-0.25,1.21l-0.87,1.16l-0.27,1.86l1.25,3.35l-0.68,1.9l0.33,3.34l1.44,1.86l0.87,1.99l0.74,3.14l1.17,2.79l1.46,0.59l2.56,-1.67l2.76,-0.05l1.43,-0.63l1.1,0.34l0.52,0.62l0.73,3.43l-0.33,1.73l-0.64,0.52l-0.23,0.77l0.21,1.2l0.68,0.92l-0.01,1.01l-1.19,4.16l1.67,2.41l1.69,0.95l2.02,1.99l-0.0,1.56l0.85,0.47l23.55,0.3l5.63,2.04l3.47,0.02l5.87,1.91l2.84,0.53l0.04,0.2l-6.15,-1.37l-1.64,-0.85l-1.48,-0.07l-2.68,1.21l-1.96,3.01l-1.59,0.61l-1.8,0.15l-5.78,2.37l-2.14,0.23l-2.86,1.58l-0.7,2.2l0.19,1.27l-1.54,4.21l-0.41,2.48l0.43,3.31l-0.54,3.2l-0.87,0.63l-2.4,0.89l-4.63,-1.27l-2.09,-1.29l-3.6,-1.46l-2.34,-2.54l-0.37,-1.67l1.08,-1.33l4.07,-0.27l0.81,0.64l0.25,1.57l-0.81,1.43l0.08,0.8l0.57,0.24l1.21,-0.64l0.79,-4.22l3.92,-1.96l1.43,-1.26l1.42,-2.0l0.33,-1.31l-0.18,-0.39l-0.94,-0.61l-2.3,-0.72l-6.12,3.85l-2.82,1.04l-1.86,1.16l-2.23,2.07l-0.46,0.69l-0.63,2.4l-1.65,-0.51l-3.18,-2.06l-0.43,-0.51l1.56,-1.94l0.29,-3.92l1.77,-1.6l0.58,0.04l0.46,0.9l2.09,-0.05l4.17,-2.68l1.49,-0.06l2.3,0.59l2.63,-0.41l1.06,-0.99l-0.16,-0.63l-3.69,-1.13l-5.05,-0.27l-1.38,0.4l-1.23,1.19l-0.65,-0.93l-1.69,-0.5l-0.98,0.09l-0.99,0.78l-0.37,2.24l-1.58,1.18l-1.07,1.8l-0.07,2.14l-0.9,0.62l-2.33,-0.28l-2.01,-2.42l-1.0,-0.65l4.2,-1.87l2.13,-2.89l-0.0,-0.5l-0.61,-0.76l-1.03,-0.15l-0.4,0.42l0.06,1.06l-0.53,0.67l-1.72,-0.36l-2.31,1.39l-1.52,-0.36l-2.3,0.41l-0.94,-0.62l-0.19,-0.73l0.4,-1.18l-0.45,-1.78l-0.85,-0.67l-0.62,-0.01l-1.49,-3.58l5.13,2.0l1.66,-0.6l0.44,-1.81l1.49,1.11l3.29,0.07l1.62,-0.5l2.34,-1.34l1.61,-1.5l0.79,0.35l0.07,0.98l1.27,1.62l0.16,0.7l-0.11,0.66l-1.55,1.66l0.06,0.48l0.87,0.54l1.41,-0.88l0.68,-1.48l0.0,-1.51l-1.1,-2.27l-0.11,-1.11l1.06,-0.78l0.47,-0.84l0.03,-1.75l-0.72,-1.01l-2.64,-2.13l-4.82,-2.19l-0.99,0.71l0.07,0.59l4.91,2.19l2.28,1.79l-0.1,0.52l-3.84,0.97l-5.31,3.29l-1.32,-0.38l-1.5,-2.81l-1.35,-1.12l-0.91,-0.0l-1.21,-0.65l-0.77,0.35l-2.13,-1.26l1.06,-1.13l1.44,0.54l0.54,-0.34l0.41,-4.59l-0.57,-1.26l-2.37,-1.31l-2.61,-0.04l-5.69,-2.07l-2.77,-4.22l-0.32,-1.11l2.64,-0.04l2.1,-0.45l0.47,-1.08l-1.39,-2.21l1.16,-1.24l2.95,1.81l2.09,4.52l0.63,0.67l3.67,2.08l0.71,0.02l0.38,-0.45l-0.2,-1.52l0.92,-2.01l1.15,-0.58l0.45,-0.71l-0.88,-1.08l0.37,-0.98l-0.32,-0.54l-0.63,0.06l-0.94,0.92l-1.66,3.75l-0.65,0.44l-2.31,-3.05l0.1,-1.37l2.41,0.34l0.43,-0.25l-0.15,-0.48l-5.71,-2.55l-2.08,-2.13l3.1,-3.01l3.56,0.71l1.02,-0.49l0.14,-0.55l-0.63,-1.04l-1.07,0.08l-0.96,-0.53l-1.68,-1.78l0.35,-2.4l1.9,-0.61l2.68,1.03l0.67,-0.22l0.23,-0.56l-0.87,-1.53l-2.17,-1.28l0.83,-2.65l0.12,-2.34l0.92,-0.78l0.04,-0.39l-0.43,-0.43l-1.47,0.36l-0.56,2.48l-0.79,1.02l-0.84,3.42l-1.1,-1.04l-0.2,-9.35l0.47,-2.9l1.67,-1.35l1.39,0.12l0.82,-0.53l-0.1,-0.69l-1.96,-0.74l-2.28,0.95l-1.17,-0.33l-0.32,-1.48l-0.88,-1.27l-0.09,-3.66l3.65,0.67l4.67,-0.04l4.11,2.4l1.73,-0.32l0.32,-0.46l-0.31,-0.78l-1.21,-0.55l-1.24,-1.65l-1.24,-5.08l-0.47,-0.28l-0.68,0.36l-1.14,3.03l-0.99,0.83l-1.62,0.36l-1.62,0.21l-1.22,-0.31l-0.37,-1.75l-0.78,-0.53l-1.98,-0.56l-0.36,-0.55l1.14,-1.62l1.18,0.4l1.13,1.08l0.96,0.19l1.41,-0.88l0.35,-0.73l-0.19,-0.5l-2.26,-0.9l-1.6,-1.29l0.74,-1.21l2.85,-2.14l0.17,-0.49l-0.54,-1.37l0.6,-1.84l-0.75,-1.44l-1.48,-1.6l-2.08,-0.19l-0.46,0.65l0.09,1.01ZM510.37,893.33l-0.97,1.27l-1.7,0.73l-0.49,-0.23l-0.73,-1.45l-0.62,-0.23l-1.31,0.26l-2.05,1.11l-3.5,-0.62l-0.57,-0.61l-0.56,-1.81l-1.09,-1.08l1.69,-0.62l2.71,0.0l7.45,0.79l1.47,1.28l0.27,1.2ZM505.41,902.73l1.67,-1.52l1.07,2.27l-0.22,0.12l-2.52,-0.88ZM502.27,905.06l0.32,-0.07l2.45,0.16l-0.62,0.32l-2.15,-0.4ZM476.34,893.09l0.57,-1.17l0.37,-2.55l11.47,2.16l3.11,-1.0l2.05,0.03l0.42,0.83l-2.07,1.26l-0.27,1.07l0.59,0.5l2.35,0.22l0.85,0.75l-0.38,1.45l2.88,2.49l0.31,0.55l0.12,1.69l-1.5,-0.69l-0.72,-1.27l-0.71,-0.43l-3.28,-0.98l-3.12,-0.05l-0.53,-0.99l0.51,-1.73l-0.35,-0.75l-1.46,0.22l-2.11,-1.36l-1.37,-0.13l-0.4,0.25l-0.78,2.38l1.71,2.55l-1.78,-0.47l-1.18,-1.23l-1.47,-0.72l-0.27,-1.64l-0.55,-0.22l-1.56,0.27l-0.57,-0.89l-0.89,-0.4ZM485.33,852.61l1.5,0.19l3.38,-1.53l1.48,0.98l-0.27,35.73l-1.42,0.0l-0.65,0.41l-2.7,0.52l-4.73,-0.83l-2.72,-2.35l-0.53,-0.04l-3.54,1.65l-1.12,0.05l-1.72,-1.11l-2.71,0.93l-5.05,-1.55l-3.67,-0.34l-2.67,-1.25l-4.61,0.11l-0.59,-0.29l-0.11,-1.18l0.84,-0.28l0.4,-0.61l2.12,1.01l2.96,-1.68l2.26,0.88l1.14,-0.08l1.65,-0.58l0.68,-1.21l1.0,-0.14l0.85,0.26l-0.06,1.91l0.32,0.45l3.43,0.29l1.22,0.42l0.52,-0.29l0.04,-1.1l-2.99,-3.08l-1.27,-0.73l-1.32,-0.31l-1.1,-1.92l-0.04,-3.37l2.41,-0.91l0.23,-0.52l-0.53,-1.36l1.25,-1.16l0.95,3.93l0.59,1.21l-2.45,0.15l-0.35,0.59l1.14,2.16l2.0,0.89l1.44,1.43l0.23,1.34l1.09,0.58l2.22,0.03l1.49,-0.23l1.38,-0.98l1.29,0.86l3.01,1.16l0.56,2.06l0.51,0.28l0.89,-0.36l1.4,-1.56l1.03,-0.51l0.18,-0.67l-0.23,-0.37l-11.3,-4.9l-1.08,-1.49l-0.74,-1.91l0.02,-1.85l0.53,-0.49l8.91,-3.99l0.13,-1.39l-0.52,-0.9l-1.74,-0.7l-2.98,-0.08l-1.57,0.25l-2.52,1.07l-1.31,-0.06l-1.25,-0.53l-0.93,-1.07l-0.49,-1.48l0.18,-1.75l0.53,-0.81l2.31,-0.59l0.93,-1.2l-0.47,-0.86l-1.19,-0.72l-1.09,-1.31l1.56,-0.15l2.22,1.5l1.14,0.02l2.18,-1.55l3.08,-3.78l0.68,-0.06l2.85,2.82ZM458.81,889.3l0.04,-0.8l1.28,0.06l-0.34,0.09l-0.98,0.65ZM460.72,888.6l0.33,0.03l1.27,0.37l1.04,0.02l0.74,1.15l1.65,0.51l4.58,-0.94l1.4,2.27l-0.11,0.49l-1.77,0.89l-0.4,-0.13l-0.16,-0.7l-0.67,-0.66l-1.7,0.31l-2.48,-0.71l-0.56,-1.12l-3.17,-1.79ZM458.58,875.06l2.71,1.34l1.54,0.03l0.2,1.77l-1.23,1.74l-4.09,-2.32l-0.93,0.22l-2.48,-0.25l-0.87,0.82l-1.04,0.27l-0.32,-1.34l-2.67,-2.48l0.58,-1.36l1.6,-0.8l5.07,1.12l1.93,1.24ZM438.65,864.65l1.03,0.56l0.79,2.23l2.68,-0.15l2.32,0.47l2.9,3.18l-0.97,0.77l-0.8,1.95l-2.08,1.35l-1.35,0.09l-2.16,0.77l-0.61,-0.39l0.72,-0.36l1.21,-1.44l0.31,-1.69l-0.31,-0.45l-3.75,-0.34l-0.6,1.48l0.13,1.14l-1.08,-0.26l-0.95,-0.58l0.16,-2.27l-0.37,-1.33l-0.41,-0.2l-1.6,0.2l-1.15,-1.14l-0.69,-1.35l-1.99,-0.49l1.28,-1.3l2.55,-0.24l1.05,0.96l3.21,0.69l0.48,-0.46l-0.18,-0.99l0.25,-0.42ZM439.33,729.48l-2.73,1.11l-1.19,-0.32l-0.46,-0.71l-0.5,-1.71l1.87,-2.12l0.27,-1.98l2.3,0.57l2.16,1.05l0.67,0.63l0.08,0.3l-1.49,2.26l-0.98,0.92ZM419.21,853.86l2.7,1.87l0.72,1.21l3.81,0.62l3.46,1.49l1.44,0.21l1.26,0.9l1.17,0.32l3.01,2.72l-4.07,-0.81l-0.51,-1.2l-2.13,-1.78l-0.98,-0.45l-1.61,-0.37l-3.31,0.05l-3.27,-2.45l-0.7,-1.33l-0.99,-1.0ZM427.21,686.6l3.24,1.04l2.21,0.26l0.85,3.61l0.35,0.46l-0.13,0.83l-1.17,0.84l0.1,1.13l0.46,0.84l-2.58,1.0l-0.9,0.6l-0.13,0.52l1.47,1.82l1.25,0.84l1.43,2.3l-1.07,1.68l-2.38,1.18l-0.25,0.4l0.13,1.82l-0.3,0.56l-1.44,0.31l-2.32,-0.2l-2.93,-1.55l1.12,-2.0l0.98,-3.0l0.64,-4.2l-0.5,-1.69l0.34,-3.03l1.17,-2.29l0.64,-3.09l-0.28,-0.96ZM431.41,730.15l-1.49,-2.32l0.34,-0.97l0.45,-0.15l0.56,0.72l0.14,2.72ZM428.94,737.79l-2.39,-0.13l-0.1,-1.99l-1.2,-0.71l-1.78,-3.35l-2.95,-3.65l1.21,-0.69l0.2,-0.41l-0.21,-1.38l1.98,-0.93l1.14,0.42l0.96,-0.16l0.63,-0.49l0.26,-3.05l0.84,-0.54l0.79,-0.05l0.9,1.31l1.3,0.6l-0.33,1.3l-0.44,0.47l-2.38,0.87l-0.37,0.96l-0.07,0.79l1.53,2.24l0.99,3.12l0.08,1.32l0.72,1.35l-0.26,1.83l-0.65,0.11l-0.38,0.86ZM427.8,716.68l-1.72,-0.45l-0.06,-0.22l1.71,-0.05l1.27,-0.44l0.33,0.61l-0.8,-0.1l-0.73,0.66ZM422.28,837.67l0.49,0.19l2.74,2.06l-0.3,0.24l-1.75,-0.62l-0.88,-0.73l-0.3,-1.14ZM423.33,743.11l-0.65,0.64l-0.93,0.26l-1.03,-0.46l-1.22,0.14l-0.08,-0.6l2.3,-3.45l-0.04,-2.1l0.85,-1.09l0.75,-0.25l0.2,1.05l-0.35,2.73l1.02,2.25l-0.82,0.88ZM421.18,796.33l0.11,2.25l-0.66,5.2l0.08,0.57l0.67,0.5l-0.41,2.43l-0.99,2.09l-1.58,0.1l-0.47,-1.05l-0.16,-1.88l-0.67,-1.3l0.2,-1.1l0.62,-0.66l0.08,-1.29l1.01,-1.22l-0.39,-0.76l-0.5,0.04l-2.74,1.88l-0.41,1.25l-0.04,2.29l-0.6,1.25l-2.57,-0.07l-1.74,-1.16l-1.09,0.16l-0.15,-0.91l0.42,-0.83l1.96,0.09l0.41,-0.33l0.38,-2.1l-1.86,-2.16l1.36,-1.04l1.27,0.38l1.58,-0.35l0.31,-0.42l-0.09,-1.32l-1.31,-0.78l0.16,-0.5l2.77,-1.9l0.18,-1.38l-0.4,-1.13l0.82,-0.97l1.46,-0.33l1.08,0.6l1.11,0.15l0.8,5.73ZM417.08,836.08l0.53,2.87l0.6,0.57l1.09,0.2l1.17,1.4l-1.52,2.77l-0.33,1.71l-1.29,-0.09l-1.89,-3.53l-0.98,-3.74l0.82,-0.73l0.92,0.19l0.48,-0.37l0.05,-1.14l0.34,-0.1ZM420.19,829.96l-0.02,1.13l-0.3,0.28l-1.31,-0.42l-1.6,1.06l-2.12,-0.54l-0.48,0.17l-1.18,1.99l-1.08,1.09l1.53,-4.25l1.28,0.47l1.92,-0.62l1.74,-1.13l1.2,-0.01l0.43,0.77ZM420.06,787.59l-1.35,-0.18l-2.34,0.36l-0.88,-1.15l-0.46,-2.14l-1.95,-3.9l-0.34,-1.58l0.38,-0.52l2.56,-0.76l1.01,-1.22l0.23,0.05l-0.15,2.5l1.55,1.86l0.62,2.36l0.62,0.76l-0.08,1.15l0.58,2.42ZM418.79,712.15l-1.08,0.16l-0.14,-0.16l0.73,-0.31l0.49,0.3ZM414.38,813.99l-2.1,1.13l-0.73,-0.45l-1.15,0.0l1.18,-4.31l4.87,1.37l0.26,0.81l-1.27,0.55l-1.07,0.9ZM413.76,775.65l-0.43,0.1l-0.62,-0.81l1.54,-0.76l1.55,0.37l-2.04,1.1ZM414.42,731.21l-0.29,-0.22l-0.04,-0.55l0.22,0.22l0.1,0.54ZM413.58,791.47l-0.09,1.08l-1.69,2.26l-2.78,2.39l-0.89,-0.2l1.64,-1.82l-0.42,-1.3l-1.33,-0.92l0.13,-0.52l0.69,-0.51l0.61,0.14l2.33,-0.62l0.77,-0.49l0.94,-0.06l0.08,0.58ZM411.23,820.33l-0.25,1.09l-0.47,-0.06l-0.54,-1.41l0.6,-2.3l2.67,0.23l-1.89,1.17l-0.11,1.29ZM408.98,789.92l-0.87,0.01l-0.28,-2.31l1.59,-4.01l0.11,-1.51l-0.74,-2.09l1.62,-0.71l2.58,5.86l-0.03,2.8l-0.61,0.58l-2.43,0.75l-0.93,0.64ZM368.15,572.05l0.38,-0.32l0.5,0.2l-0.87,0.12ZM1.37,485.84l-0.92,0.2l0.24,-0.38l0.68,0.18Z\",\n            name: \"Chile\"\n          },\n          SR: {\n            path: \"M630.17,84.15l0.35,-0.04l1.45,-4.82l0.82,-0.52l5.91,0.65l2.74,0.63l3.38,1.03l0.43,0.99l0.44,0.23l0.32,-0.38l-0.12,-2.19l0.73,-0.62l2.0,-0.27l3.19,0.4l2.87,-0.49l3.73,0.06l5.71,0.94l3.37,1.1l0.06,2.07l-0.39,1.21l-0.86,1.63l-2.1,2.06l-1.49,2.14l-0.32,1.39l0.03,2.07l0.54,1.95l-0.27,1.27l0.61,3.33l0.66,0.91l-0.03,1.12l1.19,1.9l1.7,1.59l1.37,1.96l-0.2,1.55l-2.31,3.72l0.36,1.9l-0.28,1.97l-2.39,4.14l-0.91,0.49l-0.63,0.83l-1.15,0.19l-0.77,-1.36l-1.74,-0.06l-1.53,-1.83l-1.2,0.61l-1.43,0.03l-1.78,0.68l-0.62,0.59l-3.9,0.38l-2.9,-1.35l-0.63,0.39l-0.4,1.35l-1.23,1.03l-0.21,0.69l2.66,2.86l-0.36,1.71l-0.5,0.13l-5.12,-1.07l-1.35,-0.88l-1.53,-0.33l-2.61,-4.14l-2.1,-4.49l-1.17,-1.15l-0.33,-2.82l-0.58,-0.87l-0.35,-2.56l-1.82,-0.18l-1.43,0.27l-0.9,-0.38l-0.08,-1.49l-2.15,-1.87l-0.91,-2.15l-1.48,-1.73l-0.24,-1.06l-0.0,-0.68l1.22,-2.08l1.28,-3.91l-0.81,-1.91l0.64,-0.92l1.59,-0.82l4.71,-0.47l0.36,-1.17l1.19,-1.16l-0.16,-0.71l-0.8,-0.35l-0.28,-0.65l1.21,-2.21Z\",\n            name: \"Suriname\"\n          },\n          BO: {\n            path: \"M481.86,363.93l-0.21,-1.65l-1.26,-1.21l0.02,-0.65l2.3,-1.5l2.8,-3.83l2.14,-1.55l0.02,-0.91l1.11,0.37l0.77,-0.25l0.19,-0.99l-0.51,-0.9l1.73,-0.47l0.58,-0.69l1.21,-0.3l0.26,-0.47l-0.32,-1.04l-2.78,-0.6l-0.49,-0.84l1.01,-1.29l-0.11,-0.53l-0.63,-0.37l-1.83,-0.26l-0.33,-1.39l-3.24,-2.34l-0.58,-1.06l2.22,-3.47l-2.41,-3.34l0.15,-1.72l1.02,-0.74l0.47,-1.71l2.61,-2.67l0.2,-1.48l1.26,-0.63l0.35,-0.61l-2.38,-6.1l1.04,-2.26l0.06,-7.46l1.18,-1.34l1.33,-0.85l0.11,-1.16l0.88,-1.61l-10.45,-18.37l3.51,0.07l4.51,0.67l1.37,1.31l1.63,-0.14l3.87,-1.71l2.83,-3.26l0.83,-0.3l3.51,-0.07l1.61,-2.08l1.92,-1.36l3.68,-1.48l4.62,-3.59l1.77,-0.87l3.72,-0.89l4.04,-0.49l2.49,-0.2l0.99,0.48l0.95,-0.14l0.97,-0.85l0.72,-0.19l0.84,1.57l-0.16,1.89l0.31,1.46l-0.15,1.15l-1.43,2.29l-0.19,0.88l0.1,1.14l1.27,3.72l0.11,1.43l-0.82,1.92l0.03,0.89l0.63,1.05l0.24,1.47l1.7,2.39l-0.1,1.25l0.44,0.48l0.86,-0.25l1.28,2.87l1.94,0.67l2.56,2.08l1.11,0.55l1.33,2.4l5.84,1.11l1.96,-0.72l1.04,0.09l4.11,2.47l1.17,0.34l1.1,-0.52l0.89,-0.03l0.72,1.68l3.03,2.37l1.08,0.03l4.06,1.69l2.55,0.23l0.32,0.99l1.84,2.04l1.92,1.5l3.64,0.25l5.13,-0.61l6.65,3.58l1.09,2.5l-0.82,2.12l0.27,1.16l0.71,0.79l0.67,2.82l0.47,0.65l0.28,5.26l-3.33,0.11l-0.36,0.27l4.1,5.0l0.79,9.64l0.38,0.37l19.75,0.73l1.97,-0.5l-0.1,1.98l-1.37,1.87l-0.16,0.81l0.99,6.73l0.78,0.89l4.27,2.85l1.18,0.31l0.8,-0.18l0.43,1.68l2.34,5.61l0.68,1.01l-0.54,0.67l-2.52,7.93l0.63,0.53l0.1,0.87l-0.91,0.62l-3.99,8.31l0.09,0.47l3.01,2.72l-1.73,0.63l-0.82,1.1l-0.15,-3.41l-0.43,-0.75l-11.19,-6.72l-11.14,0.15l-21.08,4.35l-2.23,5.36l-4.3,6.32l-0.08,6.51l-4.26,14.13l-0.68,-0.53l-1.41,-2.18l-10.12,0.08l-0.61,0.29l-1.77,-0.23l-1.61,1.02l-3.5,6.73l-0.46,2.17l-1.91,-5.07l-1.19,-2.03l-4.8,-1.55l-9.25,-0.11l-3.98,-3.34l-1.59,-0.44l-0.74,0.64l-1.29,3.36l-4.25,1.41l-1.05,2.39l-2.8,1.82l-0.35,1.35l-1.55,1.99l-4.43,0.85l-1.48,-0.03l-0.91,-0.11l-0.84,-0.59l0.02,-3.95l-0.82,-2.06l-0.48,-3.53l-1.09,-1.06l-0.4,-2.73l-0.9,-1.77l-0.19,-4.12l-2.87,-4.43l-1.45,-0.57l-0.05,-1.9l0.83,-0.91l0.04,-0.69l-3.11,-2.12l-0.12,-0.34l0.82,-1.46l-0.77,-2.37l1.56,-0.39l0.8,-1.36l-0.24,-1.54l-1.39,-1.46l2.68,-3.41l0.02,-0.7l-4.8,-4.15l-1.19,-1.38l-1.5,-8.5l-0.6,-1.61l0.58,-1.29l-2.69,-1.51l-0.59,-2.16l-1.57,-1.8l-0.17,-1.28ZM486.75,346.77l0.46,0.22l0.77,0.76l-1.43,-0.14l0.2,-0.84Z\",\n            name: \"Bolivia\"\n          },\n          EC: {\n            path: \"M351.85,191.66l1.45,-0.54l2.45,-2.11l2.84,-7.02l-0.16,-1.37l-0.93,-1.61l-0.24,-3.45l-0.73,-0.13l-0.62,0.94l0.09,3.51l-0.46,1.28l-0.51,0.17l0.25,-2.18l-0.2,-0.4l-0.44,0.04l-0.66,0.57l-0.86,1.59l-1.41,1.18l-0.32,0.73l-1.61,-0.8l-2.8,-2.73l-1.94,-0.65l-1.01,-0.87l-0.22,-0.49l2.26,-1.55l0.12,-1.71l-0.06,-1.52l-0.83,-2.2l0.39,-3.03l-1.17,-3.56l0.56,-0.96l2.49,-0.87l0.95,-0.67l1.14,-2.98l1.0,0.37l0.92,-0.06l0.37,-0.34l-0.26,-0.43l-1.09,-0.39l-1.02,-2.17l1.78,-2.24l2.28,-1.95l1.12,-2.03l0.3,-3.34l-0.73,-4.29l0.4,-0.38l1.61,-0.33l1.92,-1.38l1.59,0.04l1.72,-1.04l6.8,-1.76l1.07,-1.21l-0.1,-1.21l1.36,1.47l2.02,1.0l4.03,2.8l4.28,1.74l1.43,-0.1l0.65,1.28l2.05,0.92l0.52,2.44l0.59,0.67l1.33,0.42l2.12,0.08l3.42,1.27l0.96,0.06l0.59,-0.33l2.57,0.42l1.22,-0.63l0.33,-1.5l1.04,-0.35l2.36,1.09l2.19,2.28l1.32,0.81l1.98,0.36l3.17,1.71l-1.28,0.15l-1.85,-0.4l-0.39,0.33l0.12,0.83l1.57,1.0l0.77,1.85l1.95,1.98l-0.28,1.41l0.37,2.77l-0.61,-0.0l-0.67,-0.46l-0.58,0.22l-1.94,7.25l-6.17,7.17l-7.02,5.12l-14.19,5.04l-1.12,0.92l-2.95,3.66l-0.2,0.76l0.39,0.66l-0.22,0.09l-0.77,-1.05l-1.0,-0.0l-0.87,2.64l-0.28,2.18l-1.56,2.57l-1.54,4.05l-0.1,0.81l0.37,0.91l-0.32,1.01l-2.62,1.84l-0.31,0.83l0.1,0.87l-0.66,0.3l-0.63,1.05l-3.05,-0.51l-1.42,-1.84l-0.86,-2.87l-1.45,-1.0l-2.06,0.17l-4.33,-2.15l-0.89,0.3l-1.11,1.23l-0.93,0.48l-0.72,-0.26l1.5,-2.18l-0.31,-0.63l-1.26,-0.29l-0.07,-1.44l0.36,-0.21l1.55,0.28l1.86,-1.75l-0.53,-1.83l0.08,-1.57l-0.86,-2.63ZM367.75,135.25l-0.11,-0.03l0.13,-0.1l-0.01,0.13ZM353.01,186.43l-0.93,0.17l0.51,-2.41l1.47,-0.87l1.33,0.35l-0.78,0.7l-0.97,0.33l-0.64,1.74ZM239.56,161.54l2.01,-1.78l1.29,-0.3l-1.73,1.91l-1.15,0.4l-0.42,-0.23ZM230.19,159.62l-1.94,-0.96l0.08,-0.76l0.56,-0.58l2.12,-0.35l0.7,0.5l-0.07,1.02l-0.66,0.81l-0.8,0.31ZM229.08,166.48l-0.46,-0.21l0.18,-0.33l0.5,0.31l-0.21,0.23ZM227.12,154.48l-0.32,0.21l-2.0,-0.37l-0.4,-0.39l0.64,-0.84l1.09,0.28l1.08,0.84l-0.1,0.27ZM215.69,150.78l0.98,-0.97l1.2,-0.19l1.54,1.76l0.5,2.31l2.33,2.26l0.2,2.12l1.8,1.75l-1.07,1.91l-2.51,0.88l-2.75,-0.03l-1.06,-0.9l-0.09,-0.51l0.33,-0.54l1.4,-1.05l2.24,-0.99l0.5,-1.0l-0.96,-1.14l-0.73,-1.56l-1.32,-0.95l-0.69,-3.03l-0.75,-0.45l-1.09,0.32ZM214.83,154.5l1.78,-0.28l0.48,0.53l-0.01,0.91l-1.08,0.4l-0.8,-0.32l-0.38,-1.24Z\",\n            name: \"Ecuador\"\n          },\n          AR: {\n            path: \"M473.96,528.95l0.46,0.15l2.01,-0.59l1.39,-2.75l-0.23,-0.72l-1.1,-0.6l0.35,-3.93l-1.18,-5.81l0.31,-0.8l2.07,-2.06l1.02,-4.17l0.11,-1.86l0.57,-1.07l0.35,-1.83l1.49,-1.59l0.45,-1.02l0.64,-0.19l2.22,-2.83l1.05,-0.85l2.06,-6.05l0.72,-0.66l1.12,-3.14l1.2,-0.48l0.86,0.54l0.72,-0.11l0.82,-0.75l2.23,-0.72l0.55,-0.92l-0.04,-1.64l-2.0,-2.68l-1.22,-2.41l0.17,-1.34l1.97,-2.76l-1.17,-5.37l-1.06,-3.23l0.09,-0.73l1.02,-3.03l1.2,-0.52l0.28,-0.62l-0.98,-2.35l-1.14,-1.13l0.0,-0.97l0.57,-1.31l3.05,-3.0l10.9,-4.77l4.19,-13.16l-2.11,-2.45l1.48,-1.86l0.32,-1.31l2.81,-1.83l0.94,-2.25l4.28,-1.44l1.58,-3.75l1.06,0.33l4.14,3.41l9.37,0.13l4.45,1.42l3.34,7.52l0.68,-0.05l0.74,-2.9l3.44,-6.6l0.54,-0.46l0.95,-0.24l1.32,0.27l0.61,-0.3l9.74,-0.09l1.03,1.86l1.02,0.82l0.51,0.95l3.04,1.88l1.84,2.11l3.5,5.73l3.04,2.7l1.89,1.08l0.22,0.5l3.58,2.1l1.4,1.19l0.75,1.36l2.4,1.34l4.03,1.35l2.97,0.65l1.85,-0.05l2.51,1.03l8.51,6.0l5.59,2.87l2.49,0.74l1.88,1.5l2.78,0.24l3.65,1.96l2.73,3.33l0.17,1.32l-2.12,1.99l-1.73,4.07l-2.27,1.67l-1.21,2.2l-0.31,1.14l0.16,3.0l-0.54,0.62l-0.12,0.78l-0.83,0.78l-0.17,0.89l-1.2,0.66l-1.34,2.09l-0.95,0.79l-0.28,1.07l0.45,1.54l0.42,0.29l5.22,-0.53l4.22,0.55l5.05,1.47l3.42,0.53l1.77,-0.44l1.05,0.05l0.9,0.58l1.08,0.12l1.4,-0.32l0.92,0.21l1.19,0.88l1.05,-0.4l0.7,-1.25l1.58,-1.38l2.31,0.06l2.07,1.19l1.14,-0.1l1.1,-0.88l0.76,-2.58l0.82,-0.47l0.87,-1.35l3.35,-0.94l0.3,-0.78l1.92,-1.53l0.38,-0.77l1.34,-0.71l0.88,-1.61l0.95,-2.96l0.56,-3.95l0.18,-5.15l1.57,0.61l3.51,-1.28l0.68,0.52l0.92,0.15l0.59,0.76l0.76,0.34l0.79,3.64l1.78,3.33l0.02,0.61l-0.51,0.9l-0.51,5.12l0.42,1.72l-1.35,2.85l-3.01,1.84l-0.78,-0.14l-1.97,2.14l-2.74,0.4l-1.41,0.97l-1.88,0.28l-0.78,0.84l-0.43,1.4l-1.48,0.69l-0.64,1.2l-1.73,0.44l-1.24,0.74l-1.56,1.73l-3.02,1.52l-0.41,0.87l0.8,1.42l-1.74,-0.39l-0.79,0.44l-0.2,0.99l-0.87,0.46l-0.66,1.28l-2.26,1.99l-1.22,1.59l-0.83,1.85l-0.91,1.14l-1.07,0.56l-0.89,0.94l-0.49,1.19l-3.15,3.95l-1.76,1.55l-1.69,0.93l-0.92,0.98l-0.28,1.19l-0.96,1.13l-1.88,1.37l-1.05,1.21l-0.15,1.03l-2.07,2.5l-0.58,1.4l0.63,1.84l0.09,1.8l-1.04,1.5l0.33,0.94l-0.26,1.96l-1.64,2.86l-0.3,1.17l0.77,1.71l-0.6,1.84l-1.37,1.24l-0.42,0.89l0.32,1.06l-0.05,2.63l0.53,0.9l-1.2,4.04l0.57,5.32l-0.77,1.29l-1.56,0.0l-0.71,0.77l-1.48,7.43l0.2,1.36l1.47,4.18l0.18,1.62l-0.36,0.56l-1.07,0.61l-0.14,0.44l0.75,2.26l2.24,3.13l6.39,2.98l2.56,1.67l2.88,2.27l1.51,2.24l0.12,1.7l-2.34,3.03l-0.26,2.47l0.5,1.89l0.96,1.8l2.38,2.17l1.86,0.81l2.04,-0.08l0.44,0.8l0.35,4.18l-0.04,1.5l-0.62,1.38l-4.32,6.74l-3.74,4.2l-1.34,2.3l-0.5,2.47l-1.07,1.05l-6.36,3.69l-9.93,3.32l-9.89,2.31l-15.4,2.17l-3.23,-0.17l-2.65,0.25l-5.41,-1.08l-1.39,-1.41l-2.0,-0.3l-0.86,0.93l0.78,2.17l-0.37,2.39l0.52,1.31l2.39,1.35l-0.65,0.04l-0.29,0.65l1.14,1.1l-0.61,4.69l-1.86,1.06l-1.43,4.43l-0.29,2.43l0.44,1.56l1.69,2.93l-0.58,1.74l-1.0,0.98l-6.7,3.09l-2.98,0.6l-4.88,0.1l-1.73,-0.13l-7.32,-3.25l-5.0,-1.43l-0.08,-0.95l-0.88,-0.32l-0.82,-0.01l-1.84,1.06l-0.9,1.19l-0.33,3.53l1.65,6.64l0.13,2.48l-0.62,3.2l0.91,2.16l1.29,1.08l3.25,1.4l1.05,-0.01l-0.58,0.82l-0.04,1.13l0.34,0.38l1.82,0.26l3.99,-0.57l0.71,-0.75l0.1,-1.51l-0.36,-0.4l-1.24,-0.12l4.3,-1.27l1.11,0.91l0.61,1.26l0.39,1.71l-0.25,4.05l-0.77,1.36l-3.88,1.04l-0.91,-0.23l-0.94,-1.35l-0.41,-1.69l-0.92,-1.08l-2.33,-0.99l-1.96,0.26l-2.07,1.51l-2.09,0.67l-0.68,1.35l0.19,0.54l4.86,2.21l3.18,0.66l-0.89,0.79l-3.35,1.1l-1.64,0.86l-1.82,1.6l-3.26,4.16l-0.41,0.97l-0.25,2.32l0.77,3.84l-0.81,1.79l0.49,1.69l-1.06,2.66l-3.52,2.87l-0.61,2.0l1.17,1.45l-0.33,1.41l-6.58,-0.59l-1.94,1.05l-2.77,2.17l-3.52,0.65l-0.85,0.5l-3.91,4.88l-4.18,7.24l-0.14,1.85l0.28,1.65l1.05,2.81l1.48,1.71l7.35,6.86l1.76,0.71l7.78,0.73l1.59,0.87l0.93,1.39l0.33,1.21l-0.43,3.28l-0.42,0.96l-2.56,2.08l-2.17,0.65l-0.12,0.7l0.91,0.55l2.79,-0.45l0.6,0.29l0.41,0.85l-0.86,0.38l-1.39,1.74l-4.48,3.93l-7.74,4.44l-5.32,5.15l-2.69,4.75l-0.11,0.89l0.36,0.73l-1.43,7.88l-0.45,0.84l-0.98,0.95l-2.69,1.62l-1.13,0.18l-1.61,-0.88l-0.93,-0.94l-2.16,-3.52l-0.43,-0.17l-0.36,0.99l0.39,1.16l-0.19,0.77l-2.77,0.48l-0.96,0.6l-0.15,0.47l0.41,0.27l2.68,-0.24l1.75,0.32l0.66,0.35l1.1,1.56l-3.63,1.63l-2.35,1.64l-1.41,2.02l-0.57,1.39l-0.78,4.41l-2.45,2.86l0.68,0.51l1.37,-0.7l1.48,4.57l0.36,2.8l-0.19,0.64l-3.33,0.16l-1.39,0.42l-0.09,0.72l0.94,0.47l1.02,-0.13l1.48,0.91l1.89,-0.33l0.64,0.52l3.27,5.36l2.93,3.8l-2.82,-0.52l-5.89,-1.92l-3.46,-0.02l-5.75,-2.06l-23.82,-0.5l0.07,-1.42l-2.24,-2.22l-1.59,-0.86l-1.49,-2.15l1.2,-3.82l0.02,-1.21l-0.72,-1.02l-0.18,-0.99l0.82,-0.95l0.37,-1.96l-0.78,-3.81l-0.86,-1.01l-1.53,-0.46l-1.45,0.63l-2.26,-0.13l-3.28,1.88l-0.47,-0.19l-1.15,-2.68l-0.74,-3.15l-0.9,-2.07l-1.36,-1.66l-0.32,-3.17l0.68,-1.98l-1.25,-3.28l0.23,-1.63l0.78,-0.95l0.29,-1.18l3.63,-0.19l0.38,-0.44l-0.15,-1.65l1.3,-2.52l0.52,-0.49l3.11,-1.3l1.45,-1.7l0.4,-2.2l-0.26,-2.18l1.14,-1.3l1.89,-1.0l0.74,-2.11l-0.47,-2.19l-0.96,-1.45l-1.17,-0.68l-0.08,-1.18l2.08,-4.55l-0.0,-1.23l2.75,-2.14l0.81,-1.58l1.74,-0.87l0.05,-0.87l-0.66,-1.04l-0.09,-0.95l0.25,-2.56l2.39,-1.85l0.54,-1.11l0.05,-1.2l-0.82,-3.96l-1.24,-2.26l2.0,-1.48l0.79,-1.5l-0.59,-1.49l-0.84,-0.64l-0.23,-1.49l0.29,-2.0l0.45,-0.47l2.1,-0.31l0.33,-0.32l0.19,-0.99l1.61,-1.49l0.07,-1.82l-1.18,-1.19l-2.03,-2.93l-5.17,-1.09l-0.24,-1.12l1.0,0.2l5.95,-0.6l1.34,0.5l1.17,-0.33l0.74,-2.18l0.77,-1.17l-0.0,-1.3l-0.96,-0.9l-7.07,-0.84l0.17,-3.57l1.56,-2.91l-1.25,-2.39l0.59,-0.74l-0.17,-1.81l-1.85,-2.23l0.0,-0.95l1.51,-0.72l0.33,-1.32l-0.66,-1.29l-3.17,-0.91l-0.9,-1.35l0.38,-3.09l-0.34,-2.79l1.06,-1.66l-0.3,-1.67l-0.52,-0.87l1.04,-1.82l0.81,0.36l1.09,-0.32l1.2,-0.67l0.33,-1.08l-1.15,-4.16l-0.76,-1.67l0.46,-1.3l-0.25,-2.38l0.23,-7.15l-0.81,-1.6l0.09,-1.19l1.5,-3.54l1.18,-0.92l0.16,-0.66l-0.38,-0.82l-0.91,-0.79l-0.16,-0.74l0.4,-0.78l0.92,-0.21l0.58,-1.19l0.26,-1.88l-0.94,-3.56l0.36,-0.25l1.46,0.09l0.31,-0.32l1.44,-4.49l-0.06,-4.24l0.23,-0.56l1.26,-1.13l2.32,-1.2l1.81,-0.4l0.72,-0.9l0.62,-2.06l-1.48,-1.62l-0.72,-5.62l-1.66,-3.84l-0.21,-1.7l0.61,-2.54l-0.75,-2.08l0.96,-2.64l-0.86,-3.73l1.39,-2.5l0.17,-1.65l1.68,-1.34l1.87,-0.39l0.51,-1.65l1.76,-1.73l1.41,-0.35l0.63,-0.98l-0.06,-2.7l0.41,-1.58l-0.42,-3.32l-0.49,-1.07l-0.2,-1.79l-0.8,-0.42l-0.14,-0.43l1.89,-1.38l1.26,-5.65l2.24,-4.03l0.58,-1.68l1.82,-0.5l0.63,-0.84l-0.5,-6.64l0.14,-1.69l1.02,-2.88l-0.26,-1.54l-1.15,-0.74l-1.45,0.27l-0.63,-0.75l-0.08,-2.03l0.62,-0.91l0.24,-1.06l-1.17,-1.35l-0.68,-2.27l0.09,-2.0l-0.76,-0.8l-0.31,-1.47l-0.79,-0.73l-0.48,-2.22l0.84,-0.54l0.42,-1.35l-1.02,-1.13l-0.87,-0.06l-0.48,-0.39l-1.55,-3.48l0.76,-5.32l1.29,-0.18l1.15,-1.42l0.08,-0.71l-0.42,-1.13l2.2,-6.0l-0.02,-0.61ZM571.67,647.98l1.23,0.43l0.29,0.6l-1.36,-0.77l-0.16,-0.25ZM541.48,886.55l1.2,0.32l3.93,-0.29l0.99,0.34l2.02,-0.31l-1.35,0.62l-0.7,-0.27l-3.55,0.07l-2.46,0.8l-1.34,0.91l-0.82,-0.48l-0.13,-0.25l0.51,-0.54l0.82,-0.08l0.87,-0.83ZM492.22,887.65l0.26,-34.63l2.78,3.31l0.75,1.5l-0.52,-0.13l-1.18,0.58l-0.75,1.11l-0.56,1.25l0.45,1.58l1.47,0.75l2.65,0.18l1.72,4.11l8.65,8.05l5.23,2.91l4.86,3.63l2.79,1.57l5.91,2.01l4.67,-0.34l1.27,0.09l0.53,0.4l-1.76,2.89l-1.36,0.55l-5.76,0.07l-1.38,0.64l-2.74,0.36l-2.57,0.87l-4.9,-1.76l-2.46,-0.38l-8.05,-0.59l-5.18,-0.86l-4.82,0.28Z\",\n            name: \"Argentina\"\n          },\n          GY: {\n            path: \"M598.52,50.1l0.76,0.22l0.42,-0.4l0.34,0.08l5.53,3.44l4.64,4.08l3.57,4.02l0.35,0.75l-0.04,3.3l-1.23,2.39l-0.37,4.09l-0.67,1.27l0.1,0.49l0.5,0.01l0.95,-0.74l0.44,-2.3l1.71,-2.5l1.14,-0.28l3.62,1.06l4.43,3.98l0.78,1.37l2.53,0.88l1.27,1.03l0.38,0.84l0.27,2.46l-0.41,4.02l-1.38,2.79l0.47,1.07l0.8,0.3l-1.11,0.99l-0.16,0.92l-4.43,0.32l-2.29,1.47l-0.51,1.1l0.82,1.74l-1.2,3.69l-1.22,2.07l-0.06,1.16l0.35,1.38l1.48,1.73l0.85,2.07l2.18,1.95l-0.05,1.1l0.3,0.58l1.37,0.55l2.73,-0.29l0.14,2.2l0.56,0.74l0.44,3.14l1.17,1.17l2.07,4.42l2.75,4.35l2.21,0.78l-3.46,0.45l-1.99,-0.46l-1.32,-1.11l-2.68,0.63l-1.31,0.8l-1.51,2.09l-2.8,0.25l-2.26,0.62l-0.77,1.56l-0.96,0.03l-0.44,-0.37l-2.19,-0.49l-0.91,1.33l-1.28,0.56l-0.05,1.78l-1.84,0.03l-1.69,0.96l-1.63,-1.23l-3.07,-0.84l-3.57,-3.8l-1.47,-0.57l-0.22,-1.23l-0.86,-0.46l0.0,-4.44l-1.67,-1.27l-1.21,-3.79l0.26,-3.48l1.71,-4.39l-0.24,-2.7l1.89,-1.21l1.72,-3.26l-2.23,-3.51l0.45,-1.51l-0.18,-0.59l-1.8,-1.24l-3.38,-0.49l1.36,-2.28l0.33,-4.49l-0.98,-0.69l-0.77,-1.12l-1.39,-0.36l-1.34,0.67l-4.68,-0.05l-7.5,-8.41l3.02,-3.15l-0.19,-3.05l-0.61,-1.7l0.53,-0.98l2.28,-0.39l0.88,-0.66l1.99,0.14l3.81,-2.09l0.73,-0.93l0.38,-1.24l-0.19,-0.78l-1.05,-0.46l-2.1,0.14l-0.42,-0.47l0.3,-1.31l-1.33,-2.28l1.23,-1.3l1.02,-1.86l1.67,-0.24l2.39,-1.98l1.71,-0.7l0.91,-1.72l1.48,-0.8l0.2,-1.14Z\",\n            name: \"Guyana\"\n          },\n          BR: {\n            path: \"M468.22,283.24l0.06,-13.55l0.81,-1.43l-0.35,-1.23l0.59,-2.44l-0.45,-0.11l-1.19,0.51l-7.26,5.93l-4.28,0.45l-6.49,-0.01l-0.05,-1.87l-0.91,-0.74l-0.72,-2.6l-0.86,-0.74l-5.41,-1.29l-3.99,-0.01l2.34,-2.87l-0.05,-2.06l-2.76,-3.32l-1.21,-0.82l-0.54,-0.87l-0.26,-1.32l-2.07,-1.47l-1.19,-3.29l-1.52,-1.65l0.7,-1.0l-0.23,-1.04l-1.22,-0.54l-1.87,-1.82l0.4,-0.6l-0.07,-1.31l2.23,-0.42l0.71,-0.74l-1.0,-2.74l0.51,-1.93l2.98,-2.61l2.01,-1.21l1.1,-0.18l1.36,-1.31l0.09,-1.76l-1.17,-2.94l3.04,-5.5l1.02,-5.98l2.2,-0.64l4.18,-3.39l6.02,-3.36l3.84,-0.41l3.49,-0.98l3.15,-0.46l2.19,-2.16l4.48,-0.24l1.87,1.73l1.49,-0.08l1.03,0.53l0.8,-0.16l0.53,-0.59l6.88,-37.63l-0.57,-1.26l-0.0,-1.07l-1.18,-1.12l-0.82,-1.85l0.26,-1.39l-0.54,-1.66l-3.58,-2.44l-1.64,-1.93l0.19,-8.2l2.73,-0.33l3.83,-1.42l0.87,0.7l1.46,0.51l1.49,-0.13l0.5,-0.59l-0.22,-2.81l-1.11,-1.78l-0.75,-0.54l-6.33,-0.34l0.04,-6.84l3.26,-0.81l2.7,0.62l13.8,0.02l0.34,-0.62l-0.86,-1.35l0.42,-1.15l1.58,2.21l0.74,0.52l0.75,0.04l1.7,-0.65l3.03,-3.33l1.52,-0.47l0.42,0.27l2.74,4.5l0.32,0.96l-0.04,4.81l0.38,0.68l2.53,-0.39l5.23,4.7l1.68,0.92l3.18,-0.41l4.38,-2.35l1.13,0.57l0.38,0.73l-0.41,0.98l0.05,0.92l0.41,0.36l1.0,-0.04l1.64,-2.26l1.15,-0.76l1.93,-2.12l3.24,-1.69l1.19,-0.02l2.83,-2.34l2.14,-0.04l1.4,-0.97l1.23,-1.28l1.16,-3.58l1.88,-0.49l3.29,-1.72l1.35,-0.23l1.03,-1.32l0.23,-1.57l-0.52,-1.18l-6.42,-0.49l-1.17,-0.4l0.46,-1.94l-0.38,-1.66l-2.14,-4.77l-0.1,-4.77l-0.73,-0.99l-3.5,-2.84l-1.15,-1.28l-1.57,-2.57l0.98,0.35l1.19,1.25l4.64,0.17l1.34,1.77l0.9,0.65l4.37,-0.13l1.72,0.54l2.05,-0.58l4.24,4.08l1.65,0.15l1.51,-1.32l0.55,-3.91l1.13,-0.25l2.2,-1.31l3.0,0.68l4.2,-1.2l3.24,-1.1l1.03,-1.42l1.37,-0.43l0.92,-0.88l1.99,0.13l1.39,-0.41l1.29,-1.9l1.94,-1.04l1.49,-1.58l0.31,-1.39l-0.91,-2.28l2.24,0.35l1.73,-0.2l0.97,-0.61l0.95,0.19l0.73,1.07l0.86,0.61l-0.47,3.84l-1.41,2.53l0.64,0.69l3.42,0.47l1.33,0.96l-0.4,1.85l2.18,3.3l-1.48,2.63l-1.97,1.26l-0.18,0.4l0.28,2.69l-1.37,3.17l-0.62,3.96l0.04,1.08l1.26,3.94l1.62,1.19l0.03,4.46l1.02,0.73l0.25,1.3l1.5,0.54l3.61,3.84l3.24,0.94l1.47,1.26l1.01,-0.07l1.28,-0.86l2.3,-0.24l0.34,-0.87l-0.18,-1.04l0.97,-0.28l0.82,-1.3l2.14,0.88l1.36,-0.04l0.59,-0.46l0.33,-1.1l2.0,-0.61l2.5,-0.08l0.71,-0.35l2.07,-2.51l2.82,-0.81l1.09,1.04l2.18,0.52l2.72,-0.48l0.86,0.13l0.79,-0.35l5.5,1.17l0.87,-0.18l0.7,-0.72l0.08,-2.13l-1.88,-2.35l-0.64,-0.31l1.25,-1.09l0.47,-1.39l2.79,1.36l4.13,-0.41l0.68,-0.61l1.78,-0.68l1.39,-0.01l0.72,-0.46l1.26,1.55l1.84,0.14l0.32,0.95l1.78,0.82l0.52,0.62l2.7,1.11l1.95,0.39l4.41,-2.72l0.4,0.47l2.78,0.68l2.1,-0.96l1.38,1.54l3.31,0.22l3.22,-2.19l0.71,-0.87l1.15,-1.82l0.1,-0.99l1.63,-3.07l1.04,-3.24l1.98,-2.21l2.12,-4.08l1.85,-1.94l0.77,-1.5l1.44,-0.93l1.27,-2.82l0.57,-0.02l1.46,0.97l1.21,1.48l1.69,4.98l0.3,4.74l2.71,7.6l0.46,2.11l1.33,3.2l-0.34,0.58l0.29,0.66l0.96,0.24l0.38,1.2l1.44,2.08l3.49,0.67l2.54,1.38l0.84,2.68l-0.21,2.92l-4.61,3.78l-0.66,1.08l-1.48,1.43l-1.41,2.58l-2.04,2.33l-0.62,0.51l-1.84,0.54l-1.67,1.95l-2.35,0.93l-0.19,1.07l-1.22,2.49l-1.81,1.87l-1.78,2.57l-0.29,3.15l-2.23,1.78l-0.33,1.85l-0.44,0.45l-0.32,0.25l-2.58,-0.38l-5.2,2.27l-0.27,0.44l0.39,0.34l4.14,0.09l1.59,0.97l3.0,-0.64l3.73,-2.35l4.23,-2.07l4.56,-3.3l0.37,0.57l-0.91,1.23l0.88,1.37l0.69,3.11l1.29,1.88l-0.04,1.56l3.48,3.09l0.49,0.04l1.67,-1.09l2.94,-1.05l3.57,1.09l4.03,-1.91l-2.02,5.74l-0.54,2.81l-0.98,1.63l0.06,0.45l0.45,0.1l1.42,-0.76l0.9,-1.21l2.96,-7.06l2.64,-1.06l3.27,-3.98l0.96,0.01l1.6,1.44l0.62,-0.26l0.17,-0.91l0.95,-0.38l0.02,-0.74l-1.2,-0.8l-0.09,-0.64l0.74,-1.01l-0.31,-1.12l1.46,-1.08l0.05,-1.17l1.21,-1.38l0.81,-0.36l0.35,-0.79l0.54,-0.22l0.71,0.64l0.55,-0.01l1.57,-1.14l1.52,0.7l1.44,-0.57l1.61,1.05l0.51,-0.5l-0.41,-0.91l0.34,-0.24l1.37,0.2l1.81,1.22l2.11,-0.01l0.73,0.43l0.79,-0.0l2.44,2.29l2.42,0.73l2.1,0.05l0.33,0.78l1.99,0.08l0.91,0.97l2.27,0.74l1.57,1.13l2.2,0.12l1.16,2.33l0.28,1.75l0.56,0.3l0.74,-0.4l1.17,-2.19l0.89,-0.34l3.58,3.06l-0.25,0.67l1.09,0.13l0.67,-0.4l0.99,1.95l0.09,1.08l-1.32,1.88l-1.09,0.44l-0.1,0.64l1.09,1.25l0.67,-0.03l0.96,-1.65l1.2,-0.56l0.45,1.62l-1.35,0.39l-0.29,1.14l-0.82,1.19l-1.6,6.86l-0.03,0.83l0.62,0.34l1.28,-0.86l2.23,-2.34l1.61,-4.97l0.76,-0.61l0.96,0.17l-0.07,0.78l-1.34,1.87l0.39,1.07l0.62,0.09l2.96,-2.6l0.92,0.07l1.56,-0.89l3.2,-0.19l0.99,-1.51l1.64,0.11l3.44,0.93l3.1,1.48l1.06,0.89l4.15,1.58l3.13,0.2l1.53,-0.68l1.64,0.66l1.1,0.88l1.98,0.47l1.95,0.24l1.63,-0.61l3.83,-0.2l4.79,-0.88l5.98,0.77l11.37,6.33l3.96,3.18l2.53,0.79l5.16,6.0l3.02,2.25l2.17,2.35l3.79,1.42l1.75,2.48l2.61,0.29l1.03,0.33l1.44,1.04l1.89,0.57l5.27,-0.03l2.22,-0.47l5.05,0.88l0.71,0.39l0.99,0.94l1.85,3.72l1.67,7.41l1.3,2.58l0.7,4.67l0.6,1.52l0.04,1.08l0.53,0.5l0.32,2.94l-0.88,5.53l0.53,2.67l-3.86,11.56l-2.17,3.59l-4.98,5.61l-1.61,-0.11l0.35,1.33l-0.35,0.71l-2.0,2.72l-2.07,1.87l-2.04,3.06l-4.4,2.27l-2.1,1.85l-1.92,2.9l-1.17,0.43l0.02,1.32l-0.93,1.32l0.03,-0.87l-0.68,-0.27l-0.45,0.46l-1.02,1.81l0.25,1.44l-0.64,1.78l-2.62,5.41l-3.97,5.99l-2.6,3.03l-1.82,1.39l-0.67,-0.05l-0.4,-2.34l-2.08,-1.75l-0.57,0.19l-0.6,1.43l-1.02,0.36l-0.2,0.71l0.88,1.08l-0.76,1.39l-0.07,1.43l-2.28,2.6l-0.78,2.9l1.18,0.47l-0.6,1.7l-0.07,3.41l0.54,1.02l0.53,-0.05l-1.21,6.7l0.76,7.39l1.38,7.47l-2.18,7.84l-1.69,8.41l-0.15,1.8l0.7,4.67l-1.32,1.59l-1.55,0.84l-0.98,0.94l-2.09,3.47l-1.08,4.92l0.48,7.96l-0.36,2.11l-0.59,1.39l-0.67,0.87l-1.96,1.26l-1.69,2.84l-0.75,2.98l-1.2,1.24l-0.23,1.61l-0.88,1.7l-2.33,2.6l-1.51,0.75l-0.86,0.83l-0.56,1.7l-1.53,2.64l-1.12,3.38l0.58,6.14l-1.29,0.95l-5.5,2.0l-1.63,0.93l-3.42,3.61l-0.08,2.12l0.43,0.62l-0.95,1.59l-6.26,-0.06l-4.45,0.34l-1.24,-0.69l0.23,-1.57l-0.25,-0.6l-1.2,-0.22l-1.28,0.58l-0.16,0.76l0.55,1.71l-0.19,0.34l-5.02,0.85l0.16,-0.43l-0.53,-0.72l-2.18,-0.72l-2.19,0.43l-1.25,0.83l-2.61,-0.07l-3.25,0.64l-0.76,0.8l0.0,1.55l1.06,0.82l-0.7,0.4l-3.56,0.66l-3.11,2.42l-1.42,0.38l-1.18,1.09l-0.44,1.4l-2.19,-0.49l-2.15,-0.01l-1.66,0.42l-10.89,5.67l-3.31,3.32l-5.47,3.68l-3.37,2.71l-1.36,0.52l-0.11,0.63l0.78,0.52l-0.14,0.69l-2.38,2.24l-0.33,-0.59l-2.52,-0.47l-1.02,0.56l0.15,1.38l-0.28,0.25l-1.7,-0.07l-0.97,-0.8l-0.48,-0.02l-0.16,0.45l0.79,1.86l2.19,0.38l0.92,0.58l-1.53,2.47l-1.57,0.57l-0.16,0.4l0.37,0.55l0.56,-0.0l0.26,0.45l-0.47,2.86l-1.5,1.12l-0.03,0.44l1.11,1.72l-0.31,3.7l0.76,2.36l0.72,3.97l-0.47,1.03l0.26,1.31l-0.83,2.49l0.44,3.44l-0.18,3.2l-0.83,2.92l-1.23,1.69l-0.1,1.74l-5.53,3.79l-2.83,2.75l-3.0,3.82l-3.47,5.76l-3.23,8.28l-5.37,8.46l-4.82,5.43l-5.34,4.0l2.3,-2.36l2.19,-1.18l1.24,-1.96l0.17,-2.82l0.38,-0.28l1.76,-0.05l0.48,-2.47l1.91,-1.11l1.11,-1.57l-0.22,-3.55l0.57,0.38l0.83,-0.23l0.61,-1.85l-0.2,-1.03l-1.3,-0.52l-3.62,1.8l-0.68,-0.05l-0.14,-1.1l-1.79,-0.92l-0.93,-2.02l-0.58,-0.33l-0.6,0.36l0.2,2.8l1.4,1.6l-0.96,1.19l-0.49,2.72l-0.25,-0.18l-0.63,0.29l-0.2,2.13l-0.88,0.77l-0.43,1.02l0.2,1.05l-2.83,2.28l-2.5,1.25l-0.67,0.69l-0.73,2.95l-1.14,1.34l-0.89,2.55l0.01,1.3l0.69,2.51l-1.61,1.95l-0.84,1.61l-2.03,5.88l-1.7,3.48l-3.17,3.48l-5.27,4.47l-1.37,-0.72l-0.13,-0.48l0.03,-0.51l0.97,-0.6l0.2,-0.8l-0.17,-1.74l0.49,-2.41l0.56,-0.71l1.62,-0.69l1.14,-2.74l0.59,-0.39l0.68,0.11l1.17,1.27l1.4,-0.15l2.4,-3.78l0.3,-2.0l-1.17,-2.14l-0.02,-1.47l-0.4,-0.71l-0.61,0.0l-0.79,0.94l-0.41,1.7l-1.6,0.91l-0.96,1.78l-1.4,0.79l-2.15,-1.05l-2.73,-2.26l-2.11,-4.77l-1.92,-1.4l-3.56,-1.27l-1.72,-1.41l-2.78,-3.56l-3.64,-1.23l-1.63,-1.44l-0.97,0.31l-0.75,-0.34l-0.87,-0.64l-1.36,-2.39l-2.39,-2.33l-0.55,-0.33l-0.63,0.06l-0.65,0.99l-1.65,1.44l-1.86,0.49l0.2,-2.78l-0.65,-1.1l-1.63,-2.02l-7.93,-6.91l-2.7,-0.05l-1.18,0.49l-1.1,1.8l-3.72,-0.27l-0.4,-0.57l2.25,-1.8l1.06,-1.25l0.27,-1.16l0.79,-0.85l1.65,-0.89l1.86,-1.64l2.03,-2.36l1.67,-2.84l1.9,-1.42l1.0,-1.25l0.89,-1.94l1.11,-1.43l2.32,-2.07l0.52,-1.12l1.06,-0.69l0.16,-0.92l1.65,0.33l0.86,-0.32l0.18,-0.78l-0.79,-1.12l0.11,-0.29l2.93,-1.46l1.59,-1.75l1.12,-0.67l1.83,-0.49l0.69,-1.23l1.62,-0.83l0.21,-0.92l0.73,-1.09l1.87,-0.28l1.27,-0.91l2.9,-0.47l0.93,-0.68l0.94,-1.38l0.64,0.16l0.89,-0.4l2.63,-1.77l1.47,-3.13l-0.4,-1.95l0.49,-4.94l0.46,-0.74l0.03,-1.04l-1.85,-3.55l-0.82,-3.73l-0.9,-0.49l-0.62,-0.8l-2.09,-0.86l-3.5,1.27l-1.6,-0.59l0.05,-1.33l2.08,-3.99l-0.18,-0.87l1.68,-6.76l0.4,-2.89l-0.44,-2.19l0.77,-0.85l-0.03,-0.65l-2.4,-1.86l-2.28,-1.16l-5.75,2.34l-1.28,0.24l-1.89,-0.31l-0.42,-0.36l-0.47,-3.21l-0.96,-1.38l0.24,-2.08l-0.42,-1.26l-0.09,-2.06l-0.51,-0.87l-0.57,-2.57l0.35,-2.84l-1.08,-1.1l-0.42,-0.82l-0.16,-1.44l-0.59,-0.75l-0.88,-0.7l-4.55,-0.49l-1.2,-1.01l-0.47,-0.99l-0.87,-0.42l-1.36,0.47l-1.16,1.51l-3.46,0.47l-3.59,-0.95l-1.19,0.23l-2.73,-0.4l-1.84,-1.03l-1.97,0.44l-0.72,-0.26l-0.24,-0.53l0.58,-1.48l-0.15,-0.96l0.38,-1.8l-0.33,-2.62l0.82,-1.63l-0.18,-0.88l0.79,-2.1l-0.04,-1.71l-0.82,-1.54l0.05,-1.76l-0.29,-0.72l-0.78,-0.47l-0.28,-2.38l-1.47,-2.18l-0.29,-1.14l0.63,-0.26l0.76,-1.06l1.5,-0.41l0.55,-0.68l-0.07,-0.51l-3.04,-2.75l3.85,-8.01l1.06,-0.72l-0.17,-1.54l-0.5,-0.39l2.35,-7.38l0.94,-0.81l-1.1,-1.49l-2.3,-5.53l-0.17,-1.36l-0.53,-0.76l-2.07,-0.13l-4.68,-3.27l-0.97,-6.42l1.54,-2.61l0.06,-2.59l-0.75,-0.37l-1.97,0.55l-19.38,-0.72l-0.78,-9.41l-3.51,-4.3l2.75,-0.09l0.39,-0.42l-0.31,-5.79l-0.5,-0.75l-0.69,-2.85l-0.78,-0.94l-0.14,-0.77l0.82,-2.12l-0.24,-1.09l-1.19,-2.0l-6.9,-3.69l-5.38,0.59l-3.26,-0.18l-1.7,-1.35l-1.73,-1.93l-0.47,-1.18l-0.91,-0.35l-1.98,-0.01l-3.97,-1.67l-1.0,-0.0l-2.8,-2.21l-0.81,-1.79l-0.82,-0.23l-1.57,0.65l-0.94,-0.28l-2.83,-1.94l-1.42,-0.56l-1.39,-0.08l-1.7,0.69l-5.5,-1.03l-1.22,-2.33l-1.15,-0.56l-2.63,-2.12l-1.82,-0.62l-1.2,-2.78l-0.55,-0.26l-0.58,0.22l0.12,-1.08l-1.74,-2.48l-0.26,-1.53l-0.56,-0.8l0.2,-1.42l0.6,-1.23l-0.15,-1.72l-1.33,-4.54l1.56,-2.91l0.23,-1.44l-0.31,-1.56l0.16,-1.96l-0.4,-1.11l-1.0,-1.11l-1.32,0.26l-0.85,0.8l-0.68,0.1l-0.95,-0.48l-2.64,0.21l-4.09,0.49l-3.89,0.94l-1.93,0.96l-4.58,3.55l-0.85,0.46l-1.22,0.15l-1.63,0.87l-2.06,1.47l-1.61,2.04l-1.17,-0.26l-2.96,0.51l-2.98,3.37l-3.62,1.57l-1.1,0.13l-0.57,-0.88l-0.92,-0.45l-4.62,-0.68l-8.83,-0.31l-3.27,1.46l-1.32,0.21l-1.09,-0.43l-0.96,-0.92l-1.19,0.28ZM790.43,433.84l-0.02,0.0l-0.01,-0.01l0.03,0.0ZM696.21,547.6l-2.86,2.1l-1.1,1.28l0.26,-1.22l-0.22,-1.57l1.88,0.51l1.04,-0.9l1.0,-0.2ZM853.5,308.31l0.11,-0.19l0.08,-0.48l0.14,0.42l-0.34,0.25ZM849.97,314.42l-0.36,-0.63l0.15,-0.14l0.39,0.01l-0.18,0.75ZM786.3,434.46l0.48,0.39l-1.39,0.38l0.65,-0.45l0.26,-0.33ZM782.69,186.02l-0.18,-0.98l0.33,-0.72l0.05,0.32l-0.21,1.37ZM777.56,166.79l0.08,-0.36l0.35,0.04l-0.43,0.32ZM773.52,444.28l-1.38,0.1l1.31,-1.56l0.35,0.64l-0.29,0.83ZM734.68,493.07l0.06,-1.19l1.05,-1.79l-0.22,1.43l-0.89,1.54ZM721.16,153.87l2.85,-0.17l1.13,-0.57l2.22,-0.04l6.36,0.82l1.64,0.46l0.51,0.55l-1.36,3.62l-0.86,0.53l0.31,1.32l-0.32,0.92l-1.57,2.51l-1.61,1.42l0.28,1.49l-1.28,1.53l-1.1,0.32l-1.33,-1.09l-0.69,0.22l-0.54,1.9l-1.01,-0.04l-1.91,-0.98l-0.56,0.3l-0.21,1.33l-0.62,0.82l-2.43,0.84l-3.04,-1.01l-0.73,0.54l-2.6,0.09l-1.3,0.52l-0.54,-0.11l-0.97,-0.93l-1.85,-5.31l0.25,-0.95l1.68,0.09l0.21,-0.98l-0.56,-0.58l-1.24,0.05l-0.66,-0.6l-0.13,-1.07l0.27,-2.96l0.63,-0.81l0.31,-2.62l0.5,-0.96l2.06,-1.29l2.43,-0.47l7.4,1.35ZM733.71,476.03l-0.38,-0.82l1.01,-1.02l-0.24,1.09l-0.39,0.75ZM723.29,151.69l-2.97,0.35l-0.92,-0.38l1.02,-0.78l2.31,-0.76l0.97,0.25l0.2,0.4l-0.62,0.92ZM719.68,147.83l0.23,0.29l-1.47,2.18l-0.77,0.3l-0.85,0.06l-1.44,-0.74l-2.34,-0.03l-0.04,-0.67l0.66,-0.89l1.67,0.04l2.89,-0.91l1.46,0.38ZM714.69,145.63l-0.92,0.26l0.24,-1.86l1.84,-0.51l0.03,0.75l-1.2,1.37ZM712.79,127.06l-1.24,0.28l-0.51,-1.16l0.16,-0.87l1.1,-0.17l0.5,1.91ZM711.3,148.79l-0.24,1.48l-1.41,-0.49l0.11,-1.28l0.93,-0.49l1.0,-1.14l0.44,-2.79l0.2,3.38l-1.03,1.32ZM708.5,152.08l-2.92,2.09l-0.9,-0.75l0.37,-1.12l1.64,-0.59l1.72,0.06l0.09,0.32ZM694.54,167.62l-0.4,0.07l1.22,-2.23l1.43,-1.36l0.14,-2.96l1.49,-2.31l1.32,-0.91l1.73,-0.25l0.86,1.15l-1.25,3.83l-2.26,2.38l-2.01,1.52l-2.26,1.07Z\",\n            name: \"Brazil\"\n          },\n          PE: {\n            path: \"M375.3,192.04l0.75,1.03l0.88,0.05l0.64,-0.63l-0.35,-1.15l3.74,-4.3l14.18,-5.04l7.27,-5.3l6.25,-7.25l1.89,-6.98l1.43,0.29l0.66,-0.63l-0.4,-2.91l0.24,-1.86l-2.01,-1.96l-0.9,-2.03l-0.91,-0.63l0.92,0.25l1.6,-0.18l1.55,-1.21l0.69,0.08l2.31,1.64l1.68,0.22l0.6,1.11l1.65,0.85l1.75,1.71l0.52,0.69l1.02,3.28l1.1,1.49l2.41,0.8l2.37,2.04l2.28,0.58l1.63,2.33l0.26,0.83l-0.31,1.42l0.35,0.65l1.94,1.26l1.14,-0.09l0.51,0.46l0.8,2.82l-0.52,1.48l0.22,1.04l2.15,0.98l0.71,0.7l1.72,0.15l2.17,-0.63l2.66,0.89l2.35,-0.33l2.01,-0.9l0.96,-0.06l2.54,-2.0l2.14,0.79l2.16,1.38l2.5,-0.26l1.1,-0.84l1.59,-0.42l2.9,1.53l0.88,0.85l2.65,0.99l4.05,2.32l-8.02,12.69l0.24,0.6l2.55,1.04l2.21,-0.61l0.98,0.67l0.86,1.96l1.86,1.42l0.51,0.73l-0.04,0.48l-0.51,0.18l-1.08,-0.54l-1.13,0.16l-2.17,-1.81l-4.78,0.28l-2.22,2.17l-3.12,0.46l-3.39,0.96l-3.98,0.45l-6.23,3.48l-4.04,3.3l-2.31,0.7l-0.41,0.58l-0.91,5.83l-3.08,5.61l1.19,3.22l-0.02,1.21l-1.0,0.96l-1.1,0.17l-2.15,1.3l-3.17,2.79l-0.65,2.46l1.0,2.53l-2.66,0.63l-0.27,0.38l0.09,1.39l-0.47,0.99l2.2,2.25l1.16,0.51l-0.69,1.6l1.63,1.89l1.26,3.43l2.17,1.57l0.05,1.01l0.65,1.06l1.27,0.88l2.64,3.18l0.04,1.25l-2.79,3.43l0.32,0.65l4.71,-0.01l5.12,1.19l0.58,0.44l0.78,2.71l0.88,0.71l-0.09,1.76l0.38,0.41l6.96,0.03l4.52,-0.5l7.47,-6.04l-0.26,1.41l0.35,1.05l-0.81,1.46l-0.07,14.46l0.64,0.32l1.0,-0.61l1.58,1.23l0.83,0.15l1.61,-0.26l3.06,-1.4l4.29,0.27l10.53,18.52l-0.79,1.08l-0.04,1.03l-1.19,0.74l-1.45,1.8l-0.05,7.48l-1.05,2.18l1.17,3.89l1.22,2.28l-1.47,0.89l-0.22,1.5l-2.52,2.55l-0.6,1.9l-1.06,0.81l-0.14,2.32l2.33,3.1l-2.03,2.92l-3.75,-2.91l-1.85,0.58l-1.43,1.2l-0.1,0.39l1.31,2.69l-0.54,-0.27l-0.74,0.13l-0.77,0.93l-0.27,0.96l0.25,1.04l1.74,1.12l0.78,0.04l0.26,-0.33l-0.11,-0.58l2.01,1.5l2.04,0.73l-0.54,1.41l0.4,0.58l2.6,0.85l2.57,-0.4l-0.3,1.9l-0.53,1.18l0.69,0.68l0.16,0.94l-1.99,1.4l-2.93,3.94l-0.73,0.23l-1.58,1.34l-0.25,0.91l1.48,1.75l0.11,1.12l-1.86,1.58l-1.35,0.17l-0.77,0.58l0.46,3.8l-0.41,1.16l-0.96,1.29l-1.5,0.9l-1.4,0.48l-2.65,0.2l-4.66,-3.51l-1.47,-1.48l-4.73,-3.08l-0.74,-3.19l-1.7,-1.69l-3.0,-1.23l-2.33,-1.68l-1.69,-0.74l-4.29,-3.64l-3.99,-1.19l-7.35,-3.85l-3.92,-1.26l-4.97,-3.52l-2.77,-1.01l-2.2,-1.66l-6.57,-3.51l-1.96,-2.76l-1.53,-1.13l-1.61,-2.34l-4.84,-3.31l-2.85,-4.9l-1.35,-1.19l-0.09,-2.09l-0.76,-0.98l1.21,-0.7l0.91,-3.53l-0.48,-1.97l-3.38,-4.81l-0.63,-1.93l-2.47,-3.69l-0.88,-2.16l-2.05,-1.73l-0.92,-1.44l-0.88,-0.46l-0.06,-1.52l-0.81,-3.31l-1.17,-1.69l-3.75,-2.88l-0.37,-3.1l-0.89,-2.35l-5.42,-9.12l-3.13,-8.71l-2.65,-4.89l-1.06,-2.74l-0.17,-1.66l-1.94,-2.54l-1.1,-2.43l-4.35,-4.48l-2.52,-4.98l-0.39,-1.57l-4.6,-6.45l-1.49,-1.52l-8.45,-4.44l-3.84,-2.61l-0.39,-1.17l0.14,-0.58l0.58,-0.5l1.27,0.49l0.96,-0.42l0.63,-1.19l0.01,-1.5l-0.81,-2.17l-2.6,-3.58l0.62,-1.8l-2.68,-4.2l0.61,-3.99l0.55,-0.96l4.07,-4.22l1.13,-1.81l1.74,-1.12l1.77,-1.69l1.9,-1.15l0.24,0.18l0.63,2.19l-0.09,1.48l0.55,1.57l-1.27,1.15l-1.61,-0.26l-0.81,0.6l-0.24,0.97l0.34,1.3l0.42,0.48l0.76,0.15l-1.19,1.62l0.24,1.03l1.53,0.41l2.73,-1.96l3.94,2.09l2.03,-0.17l1.2,0.83l0.15,1.4l0.59,1.29l1.55,2.03l0.9,0.48l2.66,0.4l2.11,-1.91l0.1,-1.58l2.71,-1.94l0.4,-1.46l-0.31,-1.41l1.52,-3.97l1.54,-2.52l0.96,-4.49Z\",\n            name: \"Peru\"\n          },\n          UY: {\n            path: \"M649.15,535.28l2.55,2.37l1.33,2.36l1.09,0.85l1.06,0.5l0.8,-0.32l1.59,1.36l3.62,1.22l2.54,3.37l1.86,1.53l3.64,1.33l1.83,1.36l1.97,4.62l2.94,2.44l1.94,0.89l-1.36,1.08l-0.54,2.05l-1.42,0.45l-1.55,1.63l-0.37,0.89l1.1,7.23l0.32,0.56l1.21,0.7l-0.81,1.17l-0.73,2.21l-2.47,3.09l-0.54,1.78l-2.59,1.78l-1.85,2.02l-1.33,0.04l-1.08,0.86l-6.31,2.66l-2.2,-0.49l-1.68,-0.0l-1.69,-1.2l-3.65,-0.44l-2.49,0.51l-3.0,1.29l-1.43,-0.08l-1.51,-0.5l-1.04,-1.21l-4.65,-1.32l-3.99,-3.09l-4.5,-0.06l-3.34,0.38l-1.44,-2.2l-2.95,-2.67l-2.24,-2.57l-0.43,-2.45l1.01,-6.11l-0.09,-0.94l1.58,-0.63l1.66,-2.4l0.11,-1.16l-1.38,-5.53l0.87,-1.86l0.08,-1.13l-0.56,-1.02l0.07,-2.53l-0.31,-0.82l1.66,-1.82l0.72,-2.13l-0.01,-0.86l-0.72,-1.04l1.88,-3.77l0.31,-1.31l-0.33,-1.74l0.73,-0.6l0.28,-0.78l-0.07,-2.1l-0.62,-1.59l0.41,-1.05l1.42,-1.47l0.75,-1.18l0.14,-0.98l0.66,0.72l4.12,0.3l0.7,-0.47l0.74,-1.46l0.87,-0.37l2.16,-0.04l7.77,6.78l1.56,1.95l0.45,0.65l-0.22,1.96l0.21,1.32l0.98,0.24l1.15,-0.2l2.52,-1.93l0.51,-0.88Z\",\n            name: \"Uruguay\"\n          },\n          FK: {\n            path: \"M609.94,830.2l1.99,0.93l2.23,-0.32l0.75,0.2l0.23,0.72l-1.24,0.15l-0.28,0.43l0.12,0.96l0.66,0.72l2.54,1.08l0.45,0.06l0.45,-0.47l-0.63,-1.8l0.21,-0.38l3.07,-0.45l1.39,1.46l-0.92,0.3l-0.54,0.79l0.21,0.61l1.59,0.61l-0.34,0.71l-3.51,0.83l-0.97,0.98l-1.32,0.62l-4.16,1.16l-0.25,0.57l0.46,0.88l-0.06,1.06l-5.34,-1.36l-0.96,0.15l-0.26,0.6l1.29,2.11l-2.79,0.17l-0.77,1.58l-1.18,-0.83l-1.28,-1.5l-0.0,-0.64l1.27,-1.61l-0.2,-0.86l3.45,-2.81l2.42,-0.84l0.17,-0.38l-0.48,-1.56l0.03,-1.31l2.39,-2.02l-0.11,-1.3l0.21,-0.01ZM614.6,841.93l0.03,0.54l-0.38,-0.4l0.35,-0.14ZM590.03,837.03l2.86,-0.67l0.53,-0.32l0.11,-0.57l-0.69,-0.94l-1.46,-0.67l-1.0,-0.87l-0.3,-1.2l2.45,1.44l1.86,0.34l2.79,-1.46l1.59,0.91l3.43,-0.77l0.68,0.11l0.74,-0.64l0.91,0.7l-7.63,8.27l-2.3,0.34l-1.44,-0.11l-1.53,2.58l-1.79,0.78l-1.86,-0.09l-1.4,-0.61l-1.36,-1.1l1.87,-1.4l2.17,0.0l3.16,-1.86l1.26,-1.35l-0.19,-0.96l-0.69,-0.33l-2.78,0.48ZM599.15,844.3l0.46,0.33l-0.3,0.48l-0.15,-0.36l-0.01,-0.44ZM594.57,831.41l-1.18,0.0l-0.14,-1.08l0.79,-0.07l0.85,0.38l-0.31,0.77ZM584.01,838.51l1.03,0.14l-0.56,1.58l-0.59,-0.04l-0.95,-1.06l1.07,-0.62Z\",\n            name: \"Falkland Is.\"\n          }\n        },\n        height: 905.8723093907364,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 0\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"us_aea\", {\n        insets: [{\n          width: 220,\n          top: 440,\n          height: 172.39541268576795,\n          bbox: [{\n            y: -8441276.54251503,\n            x: -4774054.664881942\n          }, {\n            y: -6227982.667213126,\n            x: -1949590.5739843722\n          }],\n          left: 0\n        }, {\n          width: 80,\n          top: 460,\n          height: 151.48337407091987,\n          bbox: [{\n            y: -4196208.652471859,\n            x: -5906305.806252358\n          }, {\n            y: -3657293.3059425415,\n            x: -5621698.812337889\n          }],\n          left: 245\n        }, {\n          width: 900,\n          top: 0,\n          height: 550.1122047105795,\n          bbox: [{\n            y: -5490816.561605522,\n            x: -2029882.6485830692\n          }, {\n            y: -2690009.0242363815,\n            x: 2552322.14899711\n          }],\n          left: 0\n        }],\n        paths: {\n          \"US-VA\": {\n            path: \"M682.42,289.98l1.61,-0.93l1.65,-0.48l1.12,-0.95l3.57,-1.69l0.74,-2.33l0.82,-0.19l2.32,-1.53l0.05,-1.81l2.04,-1.86l-0.13,-1.58l0.26,-0.41l5.0,-4.09l4.76,-6.0l0.09,0.63l0.96,0.54l0.33,1.37l1.32,0.74l0.71,0.81l1.46,0.09l2.09,1.13l1.41,-0.09l0.79,-0.41l0.76,-1.22l1.17,-0.57l0.53,-1.38l2.72,1.49l1.42,-1.1l2.25,-0.99l0.76,0.06l1.08,-0.97l0.33,-0.82l-0.48,-0.96l0.23,-0.42l1.9,0.58l3.26,-2.62l0.3,-0.1l0.51,0.73l0.66,-0.07l2.38,-2.34l0.17,-0.85l-0.49,-0.51l0.99,-1.12l0.1,-0.6l-0.28,-0.51l-1.0,-0.46l0.71,-3.03l2.6,-4.8l0.55,-2.15l-0.01,-1.91l1.61,-2.55l-0.22,-0.94l0.24,-0.84l0.5,-0.48l0.39,-1.7l-0.0,-3.18l1.22,0.19l1.18,1.73l3.8,0.43l0.59,-0.28l1.05,-2.52l0.2,-2.36l0.71,-1.05l-0.04,-1.61l0.76,-2.3l1.78,0.75l0.65,-0.17l1.3,-3.3l0.57,0.05l0.59,-0.39l0.52,-1.2l0.81,-0.68l0.44,-1.8l1.38,-2.43l-0.35,-2.57l0.54,-1.76l-0.3,-2.01l9.18,4.57l0.59,-0.29l0.63,-4.0l2.6,-0.07l0.63,0.57l1.05,0.23l-0.5,1.74l0.6,0.88l1.61,0.85l2.52,-0.04l1.03,1.18l1.49,0.13l2.24,1.73l-0.0,1.31l0.44,1.27l-1.67,0.96l-0.12,0.65l-0.64,0.14l-0.27,0.45l-0.47,5.03l-0.36,0.13l-0.04,0.48l1.17,0.97l-0.29,0.11l-0.04,0.76l2.03,-0.01l2.41,-1.45l0.49,-0.72l0.34,0.74l-0.52,0.63l1.21,0.88l0.69,0.13l0.42,1.11l1.62,0.52l1.94,-0.2l0.84,0.43l0.82,-0.65l0.89,0.02l0.23,0.6l1.33,0.48l0.46,1.1l1.12,-0.05l0.02,0.3l1.18,0.42l2.84,0.65l0.4,1.01l-0.85,-0.41l-0.57,0.45l0.89,1.74l-0.35,0.57l0.62,0.79l-0.43,0.89l0.24,0.59l-1.36,-0.36l-0.59,-0.72l-0.67,0.18l-0.1,0.43l-2.44,-2.29l-0.56,0.05l-0.37,-0.56l-0.52,0.32l-1.47,-1.32l-1.19,-0.38l-0.43,-0.64l-0.9,-0.39l-0.7,-1.29l-0.77,-0.64l-1.34,-0.12l-1.11,-0.81l-1.17,0.05l-0.39,0.52l0.47,0.71l1.1,-0.01l0.63,0.68l1.33,0.07l0.59,0.42l0.38,1.52l2.73,1.56l1.86,1.88l1.95,0.61l1.59,2.1l0.98,0.24l1.35,-0.45l1.28,0.47l-0.61,0.7l0.3,0.49l2.03,0.34l0.26,0.72l0.47,0.12l0.31,1.96l-0.57,-0.83l-0.52,-0.22l-0.39,0.21l-1.13,-1.0l-0.58,0.3l0.1,0.82l-0.31,0.68l0.7,0.7l-0.18,0.59l0.51,0.28l0.43,-0.14l0.28,0.35l-1.39,0.72l-6.15,-4.74l-0.58,0.11l-0.19,0.81l0.24,0.54l2.28,1.53l2.09,2.14l2.77,1.18l1.26,-0.68l0.45,1.05l1.27,0.26l-0.44,0.67l0.29,0.56l0.93,-0.19l-0.0,1.24l-0.92,0.41l-0.57,0.73l-0.64,-0.88l-3.14,-1.26l-0.42,-1.53l-0.59,-0.59l-0.87,-0.12l-1.2,0.67l-1.71,-0.44l-0.36,-1.15l-0.71,-0.05l-0.05,1.31l-0.33,0.41l-1.42,-1.32l-0.51,0.09l-0.49,0.57l-0.64,-0.4l-0.99,0.45l-2.23,-0.1l-0.37,0.94l0.34,0.46l1.9,0.22l1.4,-0.31l0.85,0.24l0.56,-0.69l0.63,0.88l1.34,0.43l1.95,-0.31l0.82,0.72l0.84,0.12l0.51,-0.55l0.77,2.44l1.35,0.13l0.23,0.43l1.68,0.71l0.45,0.68l-0.57,1.03l0.56,0.44l1.72,-1.32l0.88,-0.02l0.83,0.65l0.8,-0.26l-0.61,-0.9l0.0,-0.82l-0.46,-0.34l3.99,0.08l0.93,-0.73l2.07,3.53l-0.4,0.7l0.65,3.09l-1.19,-0.58l-0.02,0.88l-30.94,7.83l-37.18,8.41l-19.51,3.35l-11.78,1.24l-0.82,0.62l-28.2,5.01ZM781.17,223.48l0.11,0.08l-0.08,0.06l0.0,-0.03l-0.03,-0.11ZM808.02,244.55l0.53,-1.15l-0.62,-0.62l0.58,-0.97l-0.39,-0.71l-0.03,-0.49l0.44,-0.35l-0.17,-0.73l0.62,-0.3l0.23,-0.6l0.14,-2.33l1.01,-0.39l-0.12,-0.9l0.48,-0.14l-0.26,-1.53l-0.79,-0.4l0.87,-0.57l0.1,-0.96l2.64,-1.01l0.31,2.47l-0.97,2.12l-2.32,7.36l-0.58,1.0l0.17,1.12l-0.48,0.31l-0.33,1.09l0.25,4.27l-1.1,-1.81l0.23,-0.94l-0.33,-1.57l0.28,-0.97l-0.38,-0.29Z\",\n            name: \"Virginia\"\n          },\n          \"US-PA\": {\n            path: \"M716.45,159.95l0.63,-0.19l4.3,-3.73l1.12,5.19l0.48,0.31l34.84,-7.93l34.27,-8.64l1.42,0.58l0.71,1.39l0.63,0.13l0.77,-0.33l1.24,0.59l0.14,0.85l0.81,0.41l-0.16,0.58l0.89,2.69l1.9,2.07l2.12,0.75l2.2,-0.2l0.72,0.79l-0.89,0.87l-0.73,1.48l-0.17,2.25l-1.41,3.35l-1.37,1.58l0.04,0.79l1.79,1.72l-0.31,1.65l-0.84,0.43l-0.22,0.66l0.14,1.48l1.04,2.87l0.52,0.25l1.2,-0.18l1.18,2.39l0.95,0.58l0.66,-0.26l0.6,0.9l4.23,2.75l0.12,0.41l-1.29,0.93l-3.71,4.22l-0.23,0.75l0.17,0.9l-1.36,1.13l-0.84,0.15l-1.33,1.08l-0.31,0.66l-1.72,-0.12l-2.03,0.84l-1.15,1.37l-0.41,1.39l-37.22,9.21l-39.1,8.66l-10.03,-48.2l1.92,-1.22l3.07,-3.04Z\",\n            name: \"Pennsylvania\"\n          },\n          \"US-TN\": {\n            path: \"M571.74,341.02l0.86,-0.84l0.29,-1.37l1.0,0.04l0.65,-0.79l-0.99,-4.89l1.41,-1.93l0.06,-1.32l1.18,-0.46l0.36,-0.48l-0.63,-1.31l0.57,-1.21l-0.89,-1.33l2.55,-1.57l1.09,-1.13l-0.14,-0.84l-0.85,-0.53l0.14,-0.19l0.34,-0.16l0.85,0.37l0.46,-0.33l-0.27,-1.31l-0.85,-0.9l0.06,-0.71l0.51,-1.43l1.0,-1.11l-1.35,-2.06l1.37,-0.21l0.61,-0.55l-0.13,-0.64l-1.17,-0.82l0.82,-0.15l0.58,-0.54l0.13,-0.69l-0.58,-1.38l0.02,-0.36l0.37,0.53l0.47,0.08l1.18,-1.15l23.66,-2.81l0.35,-0.41l-0.1,-1.34l-0.84,-2.39l2.98,-0.08l0.82,0.58l22.78,-3.54l7.64,-0.46l7.5,-0.86l8.82,-1.42l24.01,-3.09l1.11,-0.6l29.29,-5.2l0.73,-0.6l3.56,-0.54l-0.4,1.44l0.43,0.85l-0.4,2.0l0.36,0.82l-1.15,-0.03l-1.71,1.79l-1.21,3.89l-0.55,0.7l-0.56,0.08l-0.63,-0.74l-1.44,-0.02l-2.66,1.73l-1.42,2.73l-0.96,0.89l-0.34,-0.34l-0.13,-1.05l-0.73,-0.54l-0.53,0.15l-2.3,1.81l-0.29,1.32l-0.93,-0.24l-0.9,0.48l-0.16,0.77l0.32,0.73l-0.85,2.18l-1.28,0.06l-1.75,1.14l-1.89,2.3l-0.78,0.27l-2.28,2.46l-4.04,0.78l-2.58,1.7l-0.49,1.09l-0.88,0.55l-0.55,0.81l-0.18,2.88l-0.35,0.6l-1.65,0.52l-0.89,-0.16l-1.06,1.14l0.21,5.24l-20.21,3.32l-21.61,3.04l-25.56,2.95l-0.34,0.31l-7.39,0.9l-28.72,3.17Z\",\n            name: \"Tennessee\"\n          },\n          \"US-WV\": {\n            path: \"M693.03,248.37l3.95,-1.54l0.35,-0.71l0.12,-2.77l1.15,-0.22l0.4,-0.61l-0.57,-2.49l-0.61,-1.24l0.49,-0.64l0.36,-2.77l0.68,-1.66l0.45,-0.39l1.24,0.55l0.41,0.71l-0.14,1.13l0.71,0.46l0.78,-0.44l0.48,-1.42l0.49,0.21l0.57,-0.2l0.2,-0.44l-0.63,-2.09l-0.75,-0.55l0.81,-0.79l-0.26,-1.71l0.74,-2.0l1.65,-0.51l0.17,-1.6l1.02,-1.42l0.43,-0.08l0.65,0.79l0.67,0.19l2.28,-1.59l1.5,-1.64l0.79,-1.83l2.45,-2.67l0.37,-2.41l-0.73,-1.0l0.71,-2.33l-0.25,-0.76l0.59,-0.58l-0.27,-3.43l0.47,-3.93l0.53,-0.8l0.08,-1.11l-0.38,-1.21l-0.39,-0.33l-0.04,-2.0l-1.57,-1.9l0.44,-0.54l0.85,-0.1l0.3,-0.33l4.03,19.33l0.47,0.31l16.59,-3.55l2.17,10.68l0.5,0.37l2.06,-2.5l0.97,-0.56l0.34,-1.03l1.63,-1.99l0.25,-1.05l0.52,-0.4l1.19,0.45l0.74,-0.32l1.32,-2.6l0.6,-0.46l-0.04,-0.85l0.42,0.59l1.81,0.52l3.2,-0.57l0.78,-0.86l0.08,-1.46l2.0,-0.74l1.02,-1.69l0.67,-0.1l3.16,1.5l1.8,-0.71l-0.45,1.02l0.56,0.92l1.27,0.42l0.09,0.96l1.13,0.43l0.09,1.2l0.33,0.42l-0.58,3.64l-9.0,-4.48l-0.64,0.24l-0.31,1.14l0.38,1.61l-0.52,1.62l0.41,2.28l-1.36,2.4l-0.42,1.76l-0.72,0.53l-0.42,1.11l-0.27,0.21l-0.61,-0.23l-0.37,0.33l-1.25,3.28l-1.84,-0.78l-0.64,0.25l-0.94,2.77l0.08,1.46l-0.73,1.14l-0.19,2.33l-0.89,2.2l-3.25,-0.36l-1.44,-1.76l-1.71,-0.24l-0.5,0.41l-0.26,2.17l0.19,1.3l-0.32,1.45l-0.49,0.45l-0.31,1.04l0.23,0.92l-1.58,2.44l-0.04,2.1l-0.52,2.0l-2.58,4.73l-0.75,3.16l0.14,0.76l1.13,0.55l-1.08,1.38l0.06,0.6l0.45,0.4l-2.16,2.13l-0.55,-0.7l-0.84,0.15l-3.12,2.53l-1.03,-0.56l-1.32,0.26l-0.44,0.91l0.45,1.17l-0.91,0.91l-0.73,-0.05l-2.27,1.0l-1.21,0.96l-2.18,-1.36l-0.73,-0.01l-0.82,1.58l-1.1,0.49l-1.22,1.46l-1.08,0.08l-1.98,-1.09l-1.3,-0.01l-0.61,-0.74l-1.19,-0.6l-0.31,-1.33l-0.89,-0.55l0.36,-0.67l-0.3,-0.81l-0.85,-0.37l-0.84,0.25l-1.33,-0.17l-1.26,-1.19l-2.06,-0.79l-0.76,-1.43l-1.58,-1.24l-0.7,-1.49l-1.0,-0.6l-0.12,-1.09l-1.38,-0.95l-2.0,-2.27l0.71,-2.03l-0.25,-1.62l-0.66,-1.46Z\",\n            name: \"West Virginia\"\n          },\n          \"US-NV\": {\n            path: \"M139.46,329.14l-12.69,-16.93l-36.58,-51.09l-25.34,-34.51l13.7,-64.18l46.88,9.24l46.98,7.74l-18.71,125.81l-0.9,1.16l-0.99,2.19l-0.44,0.17l-1.34,-0.22l-0.98,-2.24l-0.7,-0.63l-1.41,0.22l-1.95,-1.02l-1.6,0.23l-1.78,0.96l-0.76,2.48l0.88,2.59l-0.6,0.97l-0.24,1.3l0.38,3.12l-0.76,2.54l0.77,3.71l-0.13,3.07l-0.3,1.07l-1.04,0.31l0.2,1.31l-0.52,0.62Z\",\n            name: \"Nevada\"\n          },\n          \"US-TX\": {\n            path: \"M276.24,412.51l33.07,1.98l32.79,1.35l0.41,-0.39l3.6,-98.69l25.86,0.61l26.29,0.22l0.05,42.08l0.44,0.4l1.02,-0.13l0.78,0.28l3.74,3.82l1.66,0.21l0.88,-0.58l2.49,0.64l0.6,-0.68l0.11,-1.05l0.6,0.76l0.92,0.22l0.38,0.93l0.77,0.78l-0.01,1.64l0.52,0.83l2.85,0.42l1.25,-0.2l1.38,0.89l2.78,0.69l1.82,-0.56l0.62,0.1l1.89,1.8l1.4,-0.11l1.25,-1.43l2.43,0.26l1.67,-0.46l0.1,2.28l0.91,0.67l1.62,0.4l-0.04,2.08l1.56,0.79l1.82,-0.66l1.57,-1.67l1.02,-0.65l0.41,0.19l0.45,1.64l2.01,0.2l0.24,1.05l0.72,0.48l1.47,-0.21l0.88,-0.93l0.39,0.33l0.59,-0.08l0.61,-0.99l0.26,0.41l-0.45,1.23l0.14,0.76l0.67,1.14l0.78,0.42l0.57,-0.04l0.6,-0.5l0.68,-2.36l0.91,-0.65l0.35,-1.54l0.57,-0.14l0.4,0.14l0.29,0.99l0.57,0.64l1.21,0.02l0.83,0.5l1.25,-0.2l0.68,-1.34l0.48,0.15l-0.13,0.7l0.49,0.69l1.21,0.45l0.49,0.72l1.52,-0.05l1.49,1.74l0.52,0.02l0.63,-0.62l0.08,-0.71l1.49,-0.1l0.93,-1.43l1.88,-0.41l1.66,-1.13l1.52,0.83l1.51,-0.22l0.29,-0.83l2.29,-0.73l0.52,-0.55l0.5,0.32l0.38,0.88l1.82,0.42l1.69,-0.06l1.86,-1.14l0.41,-1.05l1.06,0.31l2.24,1.56l1.16,0.17l1.79,2.08l2.14,0.41l1.04,0.92l0.76,-0.11l2.48,0.85l1.04,0.04l0.37,0.79l1.38,0.97l1.45,-0.12l0.39,-0.72l0.8,0.36l0.88,-0.4l0.92,0.35l0.76,-0.15l0.64,0.36l2.22,34.02l1.51,1.67l1.3,0.82l1.25,1.87l0.57,1.63l-0.1,2.64l1.0,1.21l0.85,0.4l-0.12,0.85l0.75,0.54l0.28,0.87l0.65,0.7l-0.19,1.17l1.0,1.02l0.59,1.63l0.5,0.34l0.55,-0.1l-0.16,1.71l0.81,1.22l-0.64,0.25l-0.35,0.68l0.77,1.27l-0.55,0.89l0.19,1.39l-0.75,2.69l-0.74,0.85l-0.36,1.54l-0.79,1.13l0.64,2.0l-0.83,2.28l0.17,1.07l0.83,1.2l-0.19,1.01l0.49,1.6l-0.24,1.41l-1.18,1.78l-1.18,0.4l-1.16,2.72l-0.03,2.1l1.39,1.67l-3.43,0.08l-7.37,3.78l-0.02,-0.43l-0.69,-0.24l-0.23,0.23l-0.78,-0.43l-3.38,1.13l0.65,-1.31l0.35,-2.04l-0.34,-1.36l-0.8,-0.78l-1.79,0.16l-1.18,2.58l-0.42,0.15l-0.36,-0.65l-2.38,-1.23l-0.4,0.31l-0.18,0.82l0.23,0.45l1.07,0.38l-0.3,0.82l0.54,0.81l-0.47,0.64l0.04,0.99l1.48,0.76l-0.44,0.47l0.5,1.12l0.91,0.23l0.28,0.37l-0.4,1.25l-0.45,-0.12l-0.97,0.81l-1.72,2.25l-1.18,-0.4l-0.49,0.12l0.32,1.0l0.08,2.54l-1.85,1.49l-1.91,2.11l-0.96,0.37l-4.1,2.9l-3.3,0.44l-2.54,1.07l-0.2,1.12l-0.75,-0.34l-2.04,0.89l-0.33,-0.34l-1.11,0.18l0.43,-0.87l-0.52,-0.6l-1.43,0.22l-1.22,1.08l-0.6,-0.62l-0.11,-1.2l-1.38,-0.81l-0.5,0.44l0.65,1.44l0.01,1.12l-0.71,0.09l-0.54,-0.44l-0.75,-0.0l-0.55,-1.34l-1.46,-0.37l-0.58,0.39l0.04,0.54l0.94,1.7l0.03,1.23l0.58,0.37l0.37,-0.16l1.13,0.78l-0.75,0.37l-0.12,0.9l0.7,0.23l1.08,-0.55l0.96,0.6l-4.27,2.42l-0.57,-0.13l-0.37,-1.44l-0.5,-0.19l-1.13,-1.47l-0.48,-0.03l-1.05,1.99l1.19,1.61l-0.31,1.04l0.33,0.85l-1.66,1.79l-0.37,0.2l0.37,-0.63l-0.18,-0.72l0.25,-0.73l-0.46,-0.67l-0.52,0.17l-0.71,1.1l0.26,0.72l-0.39,0.95l-0.07,-1.13l-0.52,-0.55l-1.95,1.29l-0.78,-0.33l-0.69,0.51l0.07,0.75l-0.81,0.99l0.02,0.49l1.25,0.63l0.03,0.56l0.78,0.29l0.7,-1.41l0.86,-0.41l0.01,0.62l-2.82,4.36l-1.23,-1.0l-1.36,0.39l-0.32,-0.34l-2.4,0.39l-0.46,-0.31l-0.65,0.16l-0.18,0.58l0.41,0.61l0.55,0.38l1.53,0.03l0.54,1.55l2.07,1.03l-2.7,7.63l-0.2,0.1l-0.39,-0.54l-0.33,0.1l0.18,-0.75l-0.57,-0.43l-2.35,1.95l-1.67,-2.31l-1.23,-0.97l-0.61,0.4l0.09,0.52l1.44,2.0l-0.24,0.46l0.36,0.47l-1.17,-0.21l-0.33,0.63l0.5,0.56l0.89,0.23l1.12,-0.16l0.66,0.62l1.37,0.18l1.0,-0.03l0.99,-0.62l-0.34,1.59l0.24,0.77l-0.98,0.7l0.37,1.59l-1.12,0.14l-0.43,0.41l0.4,2.11l-0.33,1.6l0.45,0.64l0.84,0.24l0.87,2.86l0.71,2.8l-0.91,0.82l0.62,0.49l-0.08,1.28l0.71,0.3l0.18,0.61l0.58,0.29l0.4,1.79l0.68,0.31l0.45,3.21l1.46,0.62l-0.52,1.1l0.31,1.08l-0.62,0.77l-0.84,-0.05l-0.54,0.44l0.09,1.3l-0.49,-0.33l-0.49,0.25l-0.39,-0.67l-1.49,-0.45l-2.92,-2.53l-2.2,-0.18l-0.81,-0.51l-4.2,0.09l-0.9,0.42l-0.79,-0.62l-1.64,0.24l-2.12,-0.89l-0.73,-0.97l-0.6,-0.14l-0.21,-0.72l-1.17,-0.49l-0.99,-0.02l-1.98,-0.87l-1.45,0.39l-0.83,-1.09l-0.6,-0.21l-1.43,-1.38l-1.96,0.01l-1.47,-0.64l-0.86,0.11l-1.62,-0.41l0.35,-0.9l-0.3,-0.97l-1.11,-0.7l0.3,-0.29l-0.26,-1.44l0.56,-1.21l-0.35,-0.67l0.88,-0.38l0.12,-0.54l-1.04,-0.54l-0.91,0.67l-0.32,-0.31l0.03,-1.09l-0.59,-0.83l0.31,-0.09l0.53,-1.43l-0.22,-0.71l-0.71,0.09l-1.03,0.96l-0.57,-0.89l-0.85,-0.28l-0.26,-1.34l-1.51,-0.77l0.29,-0.65l-0.24,-0.76l0.34,-2.18l-0.45,-0.96l-1.04,-1.01l0.65,-1.99l0.05,-1.19l-0.18,-0.7l-0.54,-0.33l-0.15,-1.81l-1.85,-1.44l-0.86,0.21l-0.3,-0.41l-0.81,-0.11l-0.74,-1.31l-2.22,-1.71l0.01,-0.69l-0.51,-0.58l0.12,-0.87l-0.97,-0.92l-0.08,-0.75l-1.12,-0.61l-1.3,-2.88l-2.66,-1.48l-0.38,-0.91l-1.13,-0.59l-0.06,-1.16l-0.82,-1.19l-0.59,-1.95l0.41,-0.22l-0.04,-0.72l-1.03,-0.49l-0.26,-1.29l-0.82,-0.58l-0.94,-1.73l-0.61,-2.38l-1.85,-2.36l-0.87,-4.24l-1.81,-1.34l0.05,-0.7l-0.75,-1.21l-4.07,-2.82l-0.29,-1.39l1.68,-0.02l0.79,-0.84l-0.29,-0.39l-0.65,-0.06l-0.09,-0.72l0.08,-0.89l0.64,-0.7l-0.11,-0.74l-0.48,0.05l-0.77,0.72l-0.45,0.69l0.01,0.66l-0.88,0.15l-0.39,1.07l-0.54,-0.04l-1.81,-1.75l0.06,-0.67l-0.41,-0.68l-0.77,-0.2l-0.64,0.29l-0.33,-0.53l-0.73,-0.13l-0.89,-2.16l-1.49,-0.8l-0.85,0.27l-0.44,-0.87l-0.61,0.1l-0.25,0.61l-1.05,0.16l-2.88,-0.47l-0.39,-0.38l-1.48,-0.03l-0.79,0.29l-0.77,-0.44l-2.66,0.27l-2.42,-1.08l-1.14,-0.89l-0.68,-0.07l-1.03,0.82l-0.64,1.61l-1.99,-0.17l-0.51,0.44l-0.49,-0.17l-2.52,0.78l-3.07,6.25l-0.18,1.77l-0.76,0.67l-0.38,1.8l0.35,0.59l-1.97,0.98l-0.75,1.32l-1.07,0.61l-0.62,0.83l-0.29,1.09l-2.91,-0.34l-1.04,-0.87l-0.54,0.3l-1.69,-1.21l-1.31,-1.63l-2.9,-0.85l-1.15,-0.95l-0.02,-0.67l-0.42,-0.4l-2.75,-0.51l-2.28,-1.03l-1.89,-1.75l-0.91,-1.53l-0.96,-0.91l-1.53,-0.29l-1.76,-1.26l-0.22,-0.56l-1.14,-0.97l-0.83,-2.9l-0.86,-1.01l-0.24,-1.1l-0.76,-1.27l-0.26,-2.34l0.52,-3.04l-3.0,-5.07l-0.06,-1.94l-1.26,-2.51l-0.99,-0.44l-0.43,-1.24l-1.43,-0.81l-2.15,-2.17l-1.02,-0.1l-2.01,-1.25l-3.18,-3.35l-0.59,-1.55l-3.13,-2.55l-1.59,-2.45l-1.19,-0.95l-0.61,-1.05l-4.42,-2.6l-2.4,-5.42l-1.37,-1.08l-1.12,-0.08l-1.76,-1.68l-0.79,-3.05ZM502.12,468.09l-0.33,0.17l0.18,-0.16l0.15,-0.02ZM498.72,470.76l-0.09,0.12l-0.04,0.02l0.13,-0.14ZM467.58,489.09l0.03,0.02l-0.02,0.02l-0.0,-0.03ZM453.97,547.08l0.76,-0.5l0.25,-0.68l0.11,1.08l-1.11,0.1Z\",\n            name: \"Texas\"\n          },\n          \"US-NH\": {\n            path: \"M829.91,105.39l0.2,-1.33l-1.43,-5.38l0.53,-1.45l-0.28,-2.22l1.0,-1.86l-0.13,-2.3l0.64,-2.28l-0.44,-0.62l0.29,-2.3l-0.93,-3.8l0.08,-0.7l0.3,-0.45l1.83,-0.8l0.7,-1.39l1.43,-1.62l0.74,-1.8l-0.25,-1.13l0.52,-0.62l-2.34,-3.49l0.87,-3.26l-0.11,-0.78l-0.81,-1.29l0.28,-0.59l-0.23,-0.7l0.48,-3.2l-0.36,-0.82l0.91,-1.49l2.44,0.33l0.65,-0.86l12.99,34.86l0.84,3.65l2.6,2.21l0.88,0.34l0.36,1.6l1.71,1.31l0.0,0.35l0.77,0.23l-0.06,0.58l-0.46,3.09l-1.57,0.24l-1.32,1.19l-0.51,0.94l-0.96,0.37l-0.5,1.68l-1.1,1.44l-17.61,4.74l-1.7,-1.43l-0.41,-0.89l-0.1,-2.0l0.54,-0.59l0.03,-0.52l-1.02,-5.18Z\",\n            name: \"New Hampshire\"\n          },\n          \"US-NY\": {\n            path: \"M821.95,168.59l-0.84,-0.72l0.83,-3.23l1.03,-0.3l0.37,-0.48l0.74,0.21l0.64,-0.32l-0.06,-0.58l0.43,-0.05l0.28,-0.66l0.72,-0.32l-0.21,-1.42l0.73,-0.47l0.35,0.56l1.04,-0.16l0.49,-0.33l0.01,-0.54l1.46,-0.18l0.24,-0.74l1.66,0.02l0.91,-0.54l0.45,-1.21l0.62,0.24l0.43,-0.5l4.32,-1.28l2.35,-1.12l2.36,-2.84l0.18,0.17l-2.53,3.41l-0.01,0.46l0.56,0.38l1.59,-0.33l0.28,0.61l-1.3,1.19l-2.05,0.53l-0.37,0.58l-1.16,0.41l0.23,0.43l-0.24,0.3l-0.68,-0.16l-0.74,0.7l-1.04,0.17l-0.37,0.55l-1.42,0.45l-0.26,0.67l-1.34,0.19l-0.44,0.7l-1.35,0.96l-2.77,1.33l-1.02,0.88l-1.04,0.09l-0.32,0.93l-0.28,0.03l-0.26,-0.68l-1.45,-0.25l-0.88,0.74l0.07,0.96l-0.94,0.56ZM844.29,155.03l0.88,-2.14l1.18,-0.48l0.6,-0.93l0.81,0.34l0.13,-0.83l0.75,0.63l-3.84,3.68l-0.51,-0.28ZM845.16,149.15l0.06,-0.06l0.18,-0.06l-0.11,0.19l-0.13,-0.07ZM722.08,155.52l3.76,-3.85l1.27,-2.19l1.75,-1.86l1.16,-0.78l1.28,-3.35l2.09,-2.13l-0.21,-1.84l-1.61,-2.42l0.42,-1.13l-0.17,-0.78l-0.83,-0.53l-2.09,-0.0l0.04,-0.99l-0.58,-2.23l4.98,-2.94l4.48,-1.79l2.38,-0.2l1.84,-0.74l5.64,-0.24l3.12,1.25l3.16,-1.68l5.49,-1.06l0.59,0.45l0.68,-0.2l0.12,-0.99l3.23,-1.85l0.69,-2.05l1.87,-1.76l0.78,-1.26l1.12,0.03l1.13,-0.52l1.07,-1.63l-0.46,-0.69l0.36,-1.2l-0.25,-0.51l-0.64,0.02l-0.17,-1.18l-0.94,-1.58l-1.01,-0.62l0.12,-0.18l0.59,0.39l0.53,-0.27l0.75,-1.43l-0.01,-0.92l0.81,-0.64l-0.01,-0.98l-0.93,-0.19l-0.6,0.7l-0.28,0.12l0.56,-1.3l-0.81,-0.63l-1.26,0.05l-0.87,0.77l-0.98,-0.7l2.05,-2.51l1.78,-1.47l1.67,-2.63l0.7,-0.56l0.89,-1.54l0.07,-0.56l-0.49,-0.94l0.78,-1.9l4.82,-7.61l4.76,-4.5l2.84,-0.51l19.65,-5.66l0.4,0.87l-0.08,2.01l1.02,1.22l0.43,3.79l2.29,3.25l-0.09,1.89l0.85,2.41l-0.59,1.07l-0.0,3.41l0.71,0.89l1.32,2.76l0.19,1.09l0.62,0.84l0.12,3.92l0.55,0.85l0.54,0.07l0.53,-0.61l0.06,-0.87l0.33,-0.07l1.05,1.12l3.87,14.48l0.11,1.59l0.62,1.09l0.33,14.92l0.6,0.62l3.57,16.23l1.26,1.34l-2.82,3.18l0.03,0.54l1.74,1.62l-1.86,3.37l0.21,1.06l-1.03,0.45l-0.24,-4.26l-0.56,-2.23l-0.74,-1.62l-1.46,-1.1l-0.17,-1.13l-0.7,-0.09l-0.42,1.33l0.8,1.45l0.94,0.69l0.95,2.79l-13.74,-4.06l-1.28,-1.47l-2.39,0.24l-0.63,-0.43l-1.06,-0.15l-1.74,-1.91l-0.75,-2.33l0.12,-0.72l-0.36,-0.63l-0.56,-0.21l0.09,-0.46l-0.35,-0.42l-1.64,-0.68l-1.08,0.32l-0.53,-1.22l-1.92,-0.93l-34.6,8.73l-34.43,7.84l-1.11,-5.15Z\",\n            name: \"New York\"\n          },\n          \"US-HI\": {\n            path: \"M293.44,610.32l-0.16,-1.33l-1.79,-3.5l-1.21,-1.37l0.23,-0.95l-0.21,-0.49l0.64,-1.68l4.55,-5.05l0.88,-5.09l0.45,-0.65l0.48,-2.22l-0.34,-2.5l0.41,-1.79l1.19,-0.79l1.55,-0.08l1.27,-0.5l1.51,0.3l2.68,-1.18l1.51,-0.07l1.15,-1.13l-0.03,-3.17l0.35,-1.25l0.99,-1.6l1.21,-0.53l2.67,2.45l-0.1,1.68l1.07,1.67l0.81,2.19l1.64,1.05l2.04,2.64l3.96,7.75l0.59,3.31l-2.1,3.31l0.14,0.54l0.73,0.44l1.2,0.23l0.29,0.68l-0.01,0.53l-0.8,1.13l-0.09,1.86l0.56,2.06l1.01,1.51l0.17,1.18l-0.37,0.44l-2.35,0.67l-1.45,-0.32l-2.49,0.4l-1.2,-0.39l-2.49,-0.11l-3.15,-1.01l-0.9,-0.94l-1.39,-0.68l-2.87,0.15l-4.73,-0.64l-1.91,0.32l-1.08,1.21l-1.89,0.33l-1.22,0.8l-1.62,0.21ZM302.97,554.35l1.47,-2.4l0.62,-1.93l-0.3,-0.8l-0.55,-0.42l-1.1,0.04l-1.49,-2.22l-0.31,-2.64l0.31,-0.99l0.92,-0.89l0.88,-0.53l1.05,-0.12l0.9,0.44l0.73,1.4l0.05,3.78l1.07,0.23l1.89,1.04l1.66,0.12l1.88,1.67l0.65,3.28l0.56,0.34l0.11,1.09l2.18,2.69l-0.14,1.17l-1.45,1.15l-0.84,-0.19l-0.81,0.3l-0.68,-0.4l-1.7,-0.23l-1.91,-1.3l-3.1,-0.5l-0.96,-1.02l-1.42,-0.79l-0.16,-1.4ZM273.53,509.24l-0.16,-0.35l0.54,-1.85l-0.3,-1.63l0.39,-1.12l-0.31,-1.61l0.83,-1.4l-0.26,-1.26l3.14,2.06l2.55,-0.17l1.08,-0.64l1.25,-0.12l0.77,0.28l0.39,1.22l-0.11,1.03l-0.4,0.54l0.01,2.42l0.41,1.21l-0.78,0.43l-0.61,1.27l0.64,2.46l0.61,0.41l0.56,-0.16l-0.24,0.78l0.3,0.88l-0.35,0.37l-0.14,1.04l0.56,1.3l-1.15,0.14l-0.29,-0.77l-2.67,-0.85l-0.05,-0.86l-0.79,-1.25l0.15,-0.76l-0.26,-0.63l-1.05,0.24l-0.45,-0.78l0.16,-0.27l1.0,0.06l0.45,-0.62l-0.42,-0.96l-0.64,-0.2l-0.35,-0.61l-0.47,0.25l-0.47,-0.55l-0.38,0.32l0.14,1.95l-2.85,-1.22ZM284.15,511.85l0.1,-0.21l-0.0,-0.01l0.1,0.09l-0.19,0.14ZM246.14,461.52l2.01,-0.42l1.12,-0.67l1.33,0.51l3.66,0.37l0.71,1.4l1.04,-0.06l1.12,1.14l0.89,0.21l0.72,0.89l0.28,1.56l-0.23,1.15l-0.51,0.62l-2.05,0.87l-1.37,1.99l-0.6,-0.19l-0.46,0.49l-2.84,0.16l-3.61,-3.83l-0.24,-1.91l-1.68,-2.24l0.05,-1.26l0.66,-0.81Z\",\n            name: \"Hawaii\"\n          },\n          \"US-VT\": {\n            path: \"M805.54,72.68l26.02,-7.96l0.89,1.85l-0.74,2.37l-0.03,1.54l2.22,2.75l-0.51,0.58l0.26,1.13l-0.67,1.6l-1.35,1.49l-0.64,1.32l-1.72,0.7l-0.62,0.92l-0.1,0.98l0.93,3.74l-0.29,2.44l0.4,0.54l-0.6,2.11l0.15,2.19l-1.0,1.87l0.27,2.36l-0.53,1.54l1.43,5.44l-0.22,1.22l1.05,5.3l-0.58,0.85l0.11,2.31l0.6,1.26l1.51,1.1l-11.72,3.08l-4.31,-16.79l-1.72,-1.59l-0.91,0.25l-0.3,1.19l-0.12,-0.26l-0.11,-3.91l-0.68,-1.0l-0.14,-0.98l-1.37,-2.85l-0.63,-0.68l0.01,-3.15l0.6,-1.15l-0.86,-2.57l0.08,-1.93l-0.39,-0.91l-1.55,-1.63l-0.38,-0.81l-0.41,-3.71l-1.03,-1.27l0.11,-1.87l-0.42,-1.0Z\",\n            name: \"Vermont\"\n          },\n          \"US-NM\": {\n            path: \"M230.94,422.8l11.82,-123.64l25.66,2.24l26.09,1.86l26.12,1.45l25.74,1.02l-0.31,10.24l-0.74,0.39l-3.59,98.67l-32.38,-1.34l-33.52,-2.02l-0.44,0.76l0.54,2.31l0.44,1.26l1.0,0.77l-30.53,-2.46l-0.43,0.36l-0.81,9.46l-14.64,-1.33Z\",\n            name: \"New Mexico\"\n          },\n          \"US-NC\": {\n            path: \"M676.72,321.71l0.92,0.17l1.52,-0.39l0.42,-0.39l0.52,-0.97l0.13,-2.7l1.34,-1.19l0.47,-1.05l2.24,-1.47l2.12,-0.52l0.76,0.18l1.32,-0.52l2.36,-2.52l0.78,-0.25l1.84,-2.29l1.48,-1.0l1.55,-0.19l1.15,-2.65l-0.28,-1.22l1.65,0.06l0.51,-1.65l0.93,-0.77l1.08,-0.77l0.51,1.52l1.07,0.33l1.34,-1.17l1.35,-2.64l2.49,-1.59l0.79,0.08l0.82,0.8l1.06,-0.21l0.84,-1.07l1.47,-4.18l1.08,-1.1l1.47,0.09l0.44,-0.31l-0.69,-1.26l0.4,-2.0l-0.42,-0.9l0.38,-1.25l7.42,-0.86l19.54,-3.36l37.21,-8.42l31.11,-7.87l0.4,1.21l3.54,3.24l1.0,1.53l-1.2,-1.0l-0.16,-0.63l-0.92,-0.41l-0.52,0.05l-0.24,0.65l0.66,0.54l0.59,1.56l-0.53,0.01l-0.91,-0.75l-2.31,-0.8l-0.4,-0.48l-0.55,0.13l-0.31,0.69l0.14,0.64l1.37,0.44l1.69,1.38l-1.1,0.66l-2.49,-1.2l-0.35,0.5l0.14,0.42l1.6,1.18l-1.84,-0.33l-2.23,-0.87l-0.46,0.14l0.01,0.48l0.6,0.7l1.7,0.83l-0.97,0.58l0.0,0.6l-0.43,0.53l-1.48,0.75l-0.89,-0.77l-0.61,0.22l-0.1,0.35l-0.2,-0.13l-1.31,-2.32l0.21,-2.63l-0.42,-0.48l-0.89,-0.22l-0.37,0.64l0.62,0.71l-0.43,0.99l-0.02,1.03l0.49,1.73l1.6,2.2l-0.31,1.28l0.48,0.29l2.97,-0.59l2.1,-1.49l0.27,0.01l0.37,0.79l0.76,-0.34l1.56,0.05l0.16,-0.72l-0.57,-0.32l1.29,-0.76l2.04,-0.46l-0.1,1.19l0.64,0.29l-0.6,0.88l0.88,1.19l-0.84,0.1l-0.19,0.66l1.38,0.46l0.26,0.94l-1.21,0.05l-0.19,0.66l0.66,0.59l1.25,-0.16l0.52,0.26l0.41,-0.38l0.18,-1.95l-0.75,-3.33l0.41,-0.48l0.56,0.43l0.94,0.06l0.28,-0.58l-0.29,-0.44l0.48,-0.57l1.71,1.84l-0.01,1.4l0.62,0.9l-0.78,0.65l0.9,1.14l-0.08,0.37l-0.42,0.55l-0.78,0.09l-0.91,-0.86l-0.32,0.34l0.13,1.26l-1.08,1.62l0.2,0.57l-0.33,0.22l-0.15,0.98l-0.74,0.55l0.1,0.91l-0.9,0.97l-1.06,0.21l-0.6,-0.37l-0.52,0.52l-0.93,-0.81l-0.86,0.1l-0.4,-0.82l-0.59,-0.21l-0.52,0.38l0.08,0.94l-0.52,0.22l-1.42,-1.24l1.31,-0.4l0.23,-0.88l-0.57,-0.42l-2.02,0.31l-1.14,1.01l0.29,0.67l0.44,0.16l-0.06,0.39l0.15,0.43l0.35,0.25l-0.03,0.12l-0.57,-0.34l-1.69,0.83l-1.12,-0.43l-1.45,0.06l-3.32,-0.7l0.42,1.08l0.97,0.45l0.36,0.64l1.51,-0.21l4.03,1.02l3.51,0.11l0.47,0.42l-0.06,0.52l-0.99,0.05l-0.25,0.72l-1.62,1.44l0.32,0.58l1.85,0.01l-2.56,3.5l-1.67,0.04l-1.6,-0.98l-0.9,-0.19l-1.21,-1.02l-1.12,0.07l0.07,0.47l1.04,1.14l2.32,2.09l2.68,0.26l1.31,0.49l1.7,-2.16l0.51,0.47l1.17,0.33l0.4,-0.57l-0.55,-0.9l0.87,0.16l0.19,0.57l0.66,0.23l1.63,-1.2l-0.18,0.61l0.29,0.57l-0.29,0.38l-0.43,-0.21l-0.41,0.37l0.03,0.9l-0.97,1.72l0.01,0.78l-0.71,-0.07l-0.06,-0.74l-1.12,-0.61l-0.42,0.47l0.27,1.45l-0.52,-1.1l-0.65,-0.15l-1.22,1.08l-0.21,0.53l0.25,0.27l-2.03,0.32l-2.75,1.84l-0.67,-1.03l-0.75,-0.3l-0.37,0.49l0.43,1.26l-0.57,-0.01l-0.09,0.82l-0.94,1.73l-0.91,0.84l-0.59,-0.26l0.49,-0.69l-0.02,-0.77l-1.06,-0.93l-0.08,-0.52l-1.69,-0.41l-0.16,0.47l0.43,1.16l0.2,0.33l0.58,0.07l0.3,0.61l-0.88,0.37l-0.08,0.71l0.65,0.64l0.77,0.18l-0.01,0.37l-2.12,1.67l-1.91,2.65l-2.0,4.31l-0.34,2.13l0.12,1.33l-0.15,-1.03l-1.0,-1.6l-0.55,-0.17l-0.3,0.48l1.17,3.95l-0.63,2.27l-3.9,0.19l-1.43,0.65l-0.35,-0.52l-0.58,-0.18l-0.54,1.07l-1.9,1.14l-0.61,-0.02l-23.25,-15.36l-1.05,-0.02l-18.68,3.49l-0.65,-2.77l-3.25,-2.84l-0.47,0.08l-1.23,1.31l-0.01,-1.29l-0.82,-0.54l-22.82,3.35l-0.64,-0.27l-0.62,0.46l-0.25,0.65l-3.98,1.92l-0.89,1.23l-1.01,0.08l-4.78,2.66l-20.95,3.93l-0.34,-4.55l0.7,-0.95ZM816.97,271.42l0.19,0.35l0.24,0.38l-0.45,-0.41l0.02,-0.32ZM807.5,290.22l0.2,0.32l-0.16,-0.09l-0.04,-0.24ZM815.28,299.09l0.16,-0.36l0.16,0.07l-0.13,0.29l-0.19,0.01ZM812.72,299.05l-0.06,-0.29l-0.03,-0.11l0.3,0.26l-0.21,0.13Z\",\n            name: \"North Carolina\"\n          },\n          \"US-ND\": {\n            path: \"M438.58,42.78l2.06,6.89l-0.73,2.53l0.57,2.36l-0.27,1.17l0.47,1.99l0.01,3.26l1.42,3.95l0.45,0.54l-0.08,0.97l0.39,1.52l0.62,0.74l1.48,3.74l-0.06,3.9l0.42,0.7l0.5,8.35l0.51,1.54l0.51,0.25l-0.47,2.64l0.36,1.63l-0.14,1.75l0.69,1.1l0.2,2.16l0.49,1.13l1.8,2.56l0.15,2.2l0.51,1.08l0.17,1.39l-0.24,1.36l0.28,1.74l-27.89,0.73l-28.38,0.19l-28.38,-0.37l-28.48,-0.93l2.75,-65.45l23.09,0.78l25.56,0.42l25.56,-0.06l24.09,-0.49Z\",\n            name: \"North Dakota\"\n          },\n          \"US-NE\": {\n            path: \"M422.62,173.98l3.92,2.71l3.93,1.9l1.33,-0.22l0.51,-0.47l0.36,-1.08l0.48,-0.2l2.49,0.34l1.32,-0.47l1.58,0.25l3.45,-0.65l2.37,1.98l1.4,0.14l1.55,0.77l1.45,0.08l0.88,1.1l1.49,0.17l-0.06,0.98l1.68,2.08l3.32,0.6l-0.02,2.55l1.13,1.94l0.01,2.29l1.15,1.07l0.34,1.72l1.73,1.46l0.07,1.88l1.5,2.11l-0.49,2.33l0.44,3.09l0.52,0.54l0.93,-0.2l-0.04,1.25l1.21,0.5l-0.41,2.36l0.21,0.44l1.12,0.4l-0.6,0.77l-0.09,1.01l0.13,0.59l0.82,0.5l0.16,1.45l-0.26,0.92l0.26,1.27l0.55,0.61l0.3,1.93l-0.22,1.33l0.23,0.72l-0.57,0.92l0.02,0.79l0.45,0.88l1.23,0.63l0.25,2.5l1.1,0.51l0.03,0.79l1.18,2.75l-0.23,0.96l1.16,0.21l0.8,0.99l1.1,0.24l-0.15,0.96l1.31,1.68l-0.21,1.12l0.51,0.91l-26.14,1.05l-27.83,0.63l-27.84,0.14l-27.88,-0.35l0.46,-21.65l-0.39,-0.41l-32.35,-1.04l1.85,-43.23l43.35,1.22l44.66,-0.04Z\",\n            name: \"Nebraska\"\n          },\n          \"US-LA\": {\n            path: \"M509.0,412.88l-1.33,-21.76l51.43,-4.07l0.34,0.83l1.48,0.65l-0.92,1.35l-0.25,2.13l0.49,0.72l1.18,0.31l-1.21,0.47l-0.45,0.78l0.45,1.36l1.04,0.84l0.08,2.15l0.46,0.54l1.51,0.74l0.45,1.05l1.42,0.44l-0.87,1.22l-0.85,2.34l-0.75,0.04l-0.52,0.51l-0.02,0.73l0.63,0.72l-0.22,1.16l-1.34,0.96l-1.08,1.89l-1.37,0.67l-0.68,0.83l-0.79,2.42l-0.25,3.52l-1.55,1.74l0.13,1.2l0.62,0.96l-0.35,2.38l-1.61,0.29l-0.6,0.57l0.28,0.97l0.64,0.59l-0.26,1.41l0.98,1.51l-1.18,1.18l-0.08,0.45l0.4,0.23l6.18,-0.55l29.23,-2.92l-0.68,3.47l-0.52,1.02l-0.2,2.24l0.69,0.98l-0.09,0.66l0.6,1.0l1.31,0.7l1.22,1.42l0.14,0.88l0.89,1.39l0.14,1.05l1.11,1.84l-1.85,0.39l-0.38,-0.08l-0.01,-0.56l-0.53,-0.57l-1.28,0.27l-1.18,-0.59l-1.51,0.17l-0.61,-0.98l-1.24,-0.86l-2.84,-0.47l-1.24,0.63l-1.39,2.3l-1.3,1.42l-0.42,0.91l0.07,1.2l0.55,0.89l0.82,0.57l4.25,0.82l3.35,-1.0l1.32,-1.19l0.68,-1.2l0.34,0.59l1.08,0.43l0.59,-0.4l0.81,0.03l0.51,-0.46l-0.76,1.21l-1.12,-0.12l-0.57,0.32l-0.38,0.62l0.0,0.83l0.76,1.22l1.48,-0.02l0.65,0.89l1.1,0.48l1.44,-0.66l0.46,-1.11l-0.02,-1.37l0.93,-0.57l0.42,-0.99l0.23,0.05l0.1,1.16l-0.24,0.25l0.19,0.57l0.42,0.15l-0.07,0.75l1.34,1.08l0.35,-0.16l-0.48,0.59l0.18,0.63l-0.24,0.17l-0.84,-0.72l-0.71,-0.08l-1.0,1.89l-0.84,0.14l-0.46,0.53l0.16,1.19l-1.59,-0.6l-0.43,0.19l0.04,0.46l1.14,1.06l-1.17,-0.14l-0.92,0.6l0.68,0.43l1.26,2.04l2.74,0.97l-0.08,1.2l0.33,0.4l2.07,-0.31l0.77,0.17l0.17,0.53l0.73,0.32l1.35,-0.34l0.53,0.78l1.08,-0.46l1.13,0.73l0.14,0.3l-0.41,0.63l1.54,0.86l-0.39,0.65l0.39,0.58l-0.18,0.62l-0.95,1.49l-1.3,-1.56l-0.68,0.34l0.1,0.66l-0.38,0.12l0.41,-1.88l-1.32,-0.76l-0.51,0.5l0.2,1.17l-0.54,0.45l-0.27,-1.02l-0.57,-0.25l-0.89,-1.27l0.03,-0.77l-0.96,-0.14l-0.47,0.5l-1.41,-0.17l-0.74,-0.77l-2.31,-0.09l0.38,-0.86l-0.13,-0.66l-0.64,-0.69l-0.91,0.04l0.1,-0.96l-0.37,-0.36l-0.91,-0.03l-0.22,0.59l-0.85,-0.38l-0.48,0.27l-2.61,-1.26l-1.24,-0.02l-0.67,-0.64l-0.61,0.18l-0.3,0.56l-0.05,1.25l1.72,0.94l1.67,0.35l-0.16,0.92l0.28,0.4l-0.34,0.34l0.23,0.68l-0.76,0.94l-0.03,0.66l0.81,0.97l-0.95,1.43l-1.33,0.94l-0.76,-1.15l0.22,-1.5l-0.35,-0.92l-0.49,-0.18l-0.4,0.36l-1.15,-1.08l-0.6,0.42l-0.76,-1.05l-0.62,-0.2l-0.64,1.33l-0.85,0.26l-0.89,-0.53l-0.85,0.53l-0.1,0.62l0.48,0.41l-0.67,0.56l-0.13,1.44l-0.46,0.13l-0.4,0.84l-0.92,0.08l-0.11,-0.68l-1.6,-0.4l-0.76,0.97l-1.92,-0.93l-0.3,-0.54l-0.99,0.01l-0.35,0.6l-1.15,-0.51l0.42,-0.4l0.0,-1.46l-0.38,-0.57l-1.9,-1.19l-0.08,-0.54l-0.83,-0.71l-0.09,-0.91l0.73,-1.15l-0.34,-1.14l-0.88,-0.19l-0.34,0.57l0.16,0.43l-0.58,0.81l0.04,0.91l-1.8,-0.4l0.07,-0.39l-0.47,-0.54l-1.97,0.76l-0.7,-2.22l-1.32,0.23l-0.18,-2.12l-1.31,-0.35l-1.89,0.3l-1.08,0.66l-0.21,-0.71l0.84,-0.26l-0.05,-0.8l-0.6,-0.58l-1.03,-0.1l-0.85,0.42l-0.94,-0.15l-0.4,0.8l-2.0,1.11l-0.63,-0.31l-1.29,0.71l0.54,1.37l0.81,0.31l1.04,1.55l-1.27,0.36l-1.82,1.06l-7.63,-0.92l-6.7,-2.31l-3.46,-0.65l-6.85,0.69l-3.41,0.8l-1.57,0.73l-0.91,-1.41l1.2,-0.46l0.79,-0.98l0.27,-2.3l-0.59,-0.84l1.15,-1.62l0.23,-1.59l-0.5,-1.83l0.07,-1.46l-0.66,-0.7l-0.21,-1.04l0.83,-2.21l-0.64,-1.95l0.76,-0.84l0.3,-1.49l0.78,-0.94l0.79,-2.83l-0.18,-1.42l0.58,-0.97l-0.75,-1.33l0.84,-0.39l0.2,-0.44l-0.89,-1.36l0.03,-2.13l-1.07,-0.23l-0.57,-1.57l-0.92,-0.84l0.28,-1.27l-0.81,-0.76l-0.33,-0.95l-0.64,-0.34l0.22,-0.98l-1.16,-0.58l-0.81,-0.93l0.16,-2.46l-0.68,-1.93l-1.33,-1.98l-2.63,-2.21ZM548.97,462.65l0.0,-0.0l0.0,0.0l-0.0,0.0ZM607.49,467.36l-0.03,-0.03l-0.08,-0.04l0.13,-0.01l-0.03,0.08ZM607.51,465.75l-0.02,-0.01l0.03,-0.01l-0.02,0.02ZM567.05,468.89l-2.0,-0.42l-0.66,-0.5l0.73,-0.43l0.35,-0.75l0.39,0.49l0.83,0.21l-0.14,0.6l0.5,0.81Z\",\n            name: \"Louisiana\"\n          },\n          \"US-SD\": {\n            path: \"M336.43,128.81l0.3,-0.53l0.75,-19.92l28.49,0.93l28.39,0.37l28.39,-0.19l27.77,-0.73l-0.18,1.71l-0.73,1.71l-2.9,2.46l-0.42,1.27l1.59,2.13l1.06,2.06l0.55,0.36l1.74,0.24l1.01,0.84l0.57,1.02l1.45,38.83l-1.84,0.09l-0.42,0.56l0.24,1.44l0.88,1.14l0.01,1.45l-0.65,0.36l0.17,1.48l0.48,0.43l1.09,0.04l0.34,1.68l-0.16,0.91l-0.62,0.83l0.02,1.73l-0.68,2.45l-0.49,0.44l-0.67,1.88l0.5,1.1l1.33,1.08l-0.16,0.62l0.64,0.66l0.35,1.15l-1.65,-0.28l-0.34,-0.94l-0.85,-0.73l0.19,-0.61l-0.28,-0.59l-1.58,-0.23l-1.03,-1.18l-1.57,-0.11l-1.51,-0.75l-1.34,-0.12l-2.38,-1.99l-3.78,0.6l-1.65,-0.25l-1.19,0.46l-2.62,-0.33l-0.98,0.48l-0.76,1.45l-0.72,0.05l-3.66,-1.82l-4.13,-2.8l-44.82,0.05l-43.33,-1.22l1.79,-43.19Z\",\n            name: \"South Dakota\"\n          },\n          \"US-DC\": {\n            path: \"M783.1,218.48l-0.45,-0.64l-1.55,-0.67l0.58,-1.01l2.03,1.26l-0.61,1.06Z\",\n            name: \"District of Columbia\"\n          },\n          \"US-DE\": {\n            path: \"M798.42,195.12l0.48,-1.56l0.92,-1.11l1.72,-0.71l1.12,0.06l-0.33,0.56l-0.08,1.38l-0.46,1.09l-0.6,0.54l-0.09,0.77l0.13,0.61l1.03,0.85l0.11,2.31l3.98,3.32l1.13,3.99l1.96,1.68l0.47,1.26l3.17,2.27l1.35,-0.08l0.48,1.21l-0.58,0.27l-0.31,0.67l0.03,0.76l0.36,0.19l-0.82,0.57l-0.08,1.21l0.66,0.21l0.85,-0.73l0.72,0.34l0.3,-0.21l0.59,1.55l-9.84,2.64l-8.37,-25.89Z\",\n            name: \"Delaware\"\n          },\n          \"US-FL\": {\n            path: \"M630.29,423.61l47.18,-6.86l1.52,1.91l0.86,2.72l1.47,1.0l48.78,-5.11l1.03,1.38l0.03,1.09l0.55,1.05l1.04,0.48l1.64,-0.28l0.85,-0.75l-0.14,-4.57l-0.98,-1.49l-0.22,-1.77l0.28,-0.74l0.62,-0.3l0.12,-0.7l5.59,0.96l4.03,-0.16l0.14,1.24l-0.75,-0.12l-0.32,0.43l0.25,1.54l2.11,1.81l0.22,1.01l0.42,0.38l0.3,1.92l5.3,11.5l1.81,3.07l7.14,10.22l0.63,0.36l6.82,7.53l-0.48,-0.02l-0.27,0.61l-1.35,-0.02l-0.34,-0.65l0.38,-1.38l-0.16,-0.56l-2.3,-0.92l-0.46,0.53l1.0,2.8l0.78,0.97l2.14,4.77l9.92,13.71l1.37,3.11l3.66,5.34l-1.38,-0.35l-0.43,0.74l0.8,0.65l0.85,0.24l0.56,-0.22l1.46,0.94l2.05,3.05l-0.5,0.34l-0.12,0.53l1.16,0.53l0.89,1.83l-0.08,1.06l0.59,0.95l0.61,2.64l-0.27,0.75l0.93,8.98l-0.31,1.07l0.46,0.67l0.5,3.1l-0.78,1.26l0.03,2.43l-0.84,0.74l-0.22,1.8l-0.48,0.85l0.21,1.47l-0.31,1.74l0.54,1.74l0.45,0.23l-1.15,1.8l-0.39,1.28l-0.94,0.24l-0.53,-0.22l-1.37,0.45l-0.35,1.06l-0.89,0.3l-0.18,0.58l-0.85,0.67l-1.44,0.14l-0.27,-0.32l-1.23,-0.1l-0.9,1.05l-3.17,1.13l-1.06,-0.59l-0.7,-1.04l0.06,-1.8l1.0,0.84l1.64,0.47l0.26,0.63l0.52,0.07l1.35,-0.72l0.2,-0.69l-0.26,-0.64l-1.58,-1.11l-2.4,-0.26l-0.91,-0.46l-0.85,-1.67l-0.89,-0.72l0.22,-0.98l-0.48,-0.28l-0.53,0.15l-1.38,-2.51l-0.44,-0.3l-0.64,0.07l-0.44,-0.61l0.22,-0.89l-0.7,-0.65l-1.21,-0.6l-1.06,-0.08l-0.75,-0.54l-0.57,0.18l-2.8,-0.59l-0.5,0.64l0.25,-0.91l-0.46,-0.42l-0.87,0.12l-0.26,-0.72l-0.88,-0.65l-0.61,-1.41l-0.55,-0.11l-0.73,-2.95l-0.77,-0.98l-0.16,-1.52l-0.44,-0.83l-0.71,-0.89l-0.49,-0.15l-0.12,0.93l-1.29,-0.26l1.07,-1.3l0.18,-1.37l0.86,-1.46l0.65,-0.34l0.28,-0.83l-0.61,-0.38l-1.42,0.93l-1.03,1.67l-0.28,1.79l-1.37,0.35l-0.2,-1.33l-0.79,-1.33l-0.27,-4.04l-0.86,-0.6l1.63,-1.33l0.22,-0.97l-0.58,-0.42l-3.05,1.92l-0.75,-0.66l-0.4,0.26l-1.27,-0.89l-0.37,0.74l1.13,1.09l0.52,0.1l1.26,2.0l-1.04,0.24l-1.43,-0.38l-0.84,-1.6l-1.13,-0.6l-1.94,-2.54l-1.04,-2.28l-1.28,-0.87l0.1,-0.87l-0.97,-1.8l-1.77,-0.98l0.09,-0.67l0.99,-0.41l-0.35,-0.49l0.44,-0.73l-0.39,-0.35l0.4,-1.21l2.47,-4.47l-1.05,-2.41l-0.68,-0.46l-0.92,0.42l-0.28,0.93l0.29,1.19l-0.24,0.03l-0.73,-2.44l-0.99,-0.28l-1.18,-0.87l-1.52,-0.31l0.29,1.94l-0.48,0.61l0.27,0.59l2.21,0.56l0.24,0.97l-0.37,2.46l-0.31,-0.58l-0.8,-0.21l-2.13,-1.53l-0.41,0.2l-0.29,-0.62l0.59,-2.11l0.07,-2.97l-0.66,-1.97l0.42,-0.51l0.48,-1.91l-0.24,-0.54l0.66,-3.04l-0.37,-5.41l-0.69,-1.56l0.35,-0.47l-0.47,-2.18l-2.1,-1.33l-0.05,-0.53l-0.55,-0.43l-0.1,-1.01l-0.92,-0.73l-0.55,-1.51l-0.64,-0.25l-1.44,0.32l-1.02,-0.2l-1.57,0.54l-1.15,-1.74l-1.5,-0.47l-0.19,-0.6l-1.35,-1.51l-3.81,-1.88l-0.51,-2.75l-3.06,-1.14l-0.65,-0.59l-0.52,-1.23l-2.15,-1.93l-2.19,-1.09l-1.45,-0.12l-3.44,-1.68l-2.85,0.98l-1.01,-0.4l-1.04,0.42l-0.36,0.68l-1.33,0.68l-0.5,0.71l0.03,0.64l-0.73,-0.22l-0.59,0.6l0.67,0.94l1.51,0.08l0.41,0.21l-3.03,0.23l-1.58,1.51l-0.91,0.45l-1.3,1.56l-1.56,1.03l-0.32,0.13l0.2,-0.48l-0.26,-0.54l-0.67,-0.04l-2.07,2.24l-2.2,0.23l-2.11,1.06l-0.78,0.03l-0.27,-2.03l-1.71,-2.23l-2.21,-1.0l-0.18,-0.41l-2.51,-1.5l2.8,1.33l1.21,-0.74l-0.0,-0.74l-1.32,-0.34l-0.35,0.55l-0.21,-1.01l-0.34,-0.1l0.12,-0.52l-0.49,-0.33l-1.4,0.61l-2.3,-0.76l0.65,-1.08l0.83,-0.1l1.03,-1.45l-0.91,-0.96l-0.46,0.13l-0.49,1.02l-0.44,-0.04l-0.81,0.56l-0.72,-0.9l-0.7,0.09l-0.17,0.38l-1.34,0.73l-0.14,0.68l0.28,0.46l-3.95,-1.35l-5.05,-0.71l0.11,-0.24l1.27,0.29l0.61,-0.53l2.1,0.39l0.23,-0.78l-0.94,-1.02l0.09,-0.69l-0.62,-0.29l-0.5,0.32l-0.28,-0.47l-1.9,0.19l-2.25,1.1l0.3,-0.64l-0.41,-0.58l-0.96,0.35l-0.58,-0.25l-0.23,0.44l0.2,0.71l-1.45,0.79l-0.4,0.64l-5.17,0.97l0.32,-0.52l-0.4,-0.52l-1.35,-0.28l-0.72,-0.53l0.69,-0.53l0.01,-0.78l-0.68,-0.13l-0.81,-0.66l-0.46,0.11l0.14,0.76l-0.42,1.77l-1.05,-1.39l-0.69,-0.45l-0.55,0.07l-0.3,0.71l0.82,1.77l-0.25,0.79l-1.39,0.99l-0.05,1.04l-0.6,0.22l-0.17,0.57l-1.48,0.55l0.28,-0.66l-0.22,-0.45l1.14,-1.03l0.07,-0.74l-0.4,-0.58l-1.18,-0.24l-0.42,-0.84l0.3,-1.7l-0.18,-1.61l-2.17,-1.12l-2.39,-2.46l0.32,-1.44l-0.15,-1.04ZM644.36,434.04l-0.94,0.26l0.4,-0.44l0.53,0.18ZM665.13,435.61l0.98,-0.28l0.35,0.31l0.08,0.72l-1.42,-0.75ZM770.53,454.92l0.42,0.56l-0.43,0.75l0.0,-1.31Z\",\n            name: \"Florida\"\n          },\n          \"US-CT\": {\n            path: \"M823.41,156.51l2.83,-3.23l-0.07,-0.54l-1.31,-1.25l-3.5,-15.89l9.81,-2.41l0.6,0.46l0.65,-0.26l0.23,-0.58l14.16,-4.0l3.2,10.18l0.47,1.96l-0.04,1.69l-1.66,0.32l-0.92,0.81l-0.69,-0.36l-0.5,0.1l-0.18,0.91l-1.14,0.07l-1.27,1.27l-0.62,-0.14l-0.56,-1.02l-0.89,-0.09l-0.21,0.67l0.75,0.64l0.08,0.54l-0.89,-0.02l-1.02,0.87l-1.65,0.07l-1.15,0.94l-1.44,0.13l-1.21,0.93l-0.65,-1.0l-0.61,0.11l-1.01,2.46l-1.06,0.61l-0.25,1.02l-0.77,-0.26l-0.96,0.56l-0.09,0.85l-1.72,0.98l-1.94,2.27l-1.19,0.46l-0.24,0.38l-1.4,-1.23Z\",\n            name: \"Connecticut\"\n          },\n          \"US-WA\": {\n            path: \"M38.51,55.06l0.37,-1.08l0.93,0.65l0.55,-0.14l0.54,-0.65l0.49,0.67l0.71,-0.01l0.17,-0.77l-0.98,-1.47l0.85,-0.83l-0.09,-1.36l0.49,-0.39l-0.1,-1.03l0.81,-0.27l0.05,0.5l0.48,0.41l0.95,-0.31l-0.09,-0.68l-1.44,-1.82l-1.84,-0.1l-0.15,0.32l-0.78,-0.82l0.26,-1.62l0.66,0.53l0.52,-0.07l0.29,-0.56l-0.17,-0.68l3.33,-0.52l0.25,-0.68l-2.59,-1.29l-0.05,-0.79l-0.67,-0.57l-1.3,-0.31l0.37,-4.73l-0.5,-1.29l0.25,-0.72l-0.52,-0.48l0.55,-3.93l0.04,-4.38l-0.56,-1.02l-0.04,-0.98l-1.56,-2.34l0.33,-4.24l-0.21,-1.29l0.78,-0.79l0.04,-0.71l0.97,-1.44l-0.6,-1.43l1.04,0.8l0.44,0.0l3.35,3.31l0.99,0.35l2.18,2.41l3.73,1.49l1.21,0.07l0.79,0.71l0.67,0.31l0.6,-0.15l1.57,1.07l1.49,0.47l1.28,0.28l1.22,-0.61l0.53,0.31l0.46,0.71l-0.05,1.24l0.55,0.74l0.8,-0.24l0.07,-0.75l0.44,0.03l0.63,1.39l-0.4,0.58l0.34,0.49l0.56,-0.04l0.73,-0.84l-0.38,-1.7l1.03,-0.24l-0.44,0.23l-0.22,0.69l1.27,4.41l-0.46,0.1l-1.67,1.72l0.22,-1.29l-0.22,-0.41l-1.31,0.31l-0.38,0.81l0.09,0.95l-1.37,1.7l-1.98,1.38l-1.06,1.41l-0.96,0.69l-1.1,1.67l-0.06,0.71l0.62,0.6l0.96,0.12l2.77,-0.48l1.22,-0.58l-0.03,-0.7l-0.64,-0.23l-2.94,0.79l-0.35,-0.3l3.23,-3.42l3.06,-0.88l0.89,-1.51l1.73,-1.54l0.53,0.57l0.54,-0.19l0.22,-1.81l-0.06,2.25l0.26,0.91l-0.98,-0.21l-0.64,0.77l-0.41,-0.73l-0.53,-0.19l-0.39,0.64l0.32,2.34l-0.21,-1.07l-0.67,-0.21l-0.46,0.69l-0.07,0.75l0.46,0.66l-0.63,0.58l-0.0,0.45l0.42,0.17l1.67,-0.57l0.25,1.09l-1.08,1.79l-0.08,1.05l-0.83,0.7l0.13,1.0l-0.85,-0.68l1.12,-1.44l-0.23,-0.96l-1.96,1.08l-0.38,0.64l-0.05,-2.11l-0.52,0.02l-1.03,1.59l-1.26,0.53l-1.14,1.87l-1.51,0.3l-0.46,0.44l-0.21,1.18l1.11,-0.03l-0.25,0.36l0.27,0.37l0.93,0.02l0.06,0.68l0.53,0.47l0.52,-0.27l0.35,-1.76l0.15,0.42l0.83,-0.15l1.11,1.48l1.31,-0.61l1.64,-1.48l0.98,-1.56l0.63,0.78l0.73,0.14l0.44,-0.23l-0.06,-0.86l1.56,-0.55l0.35,-0.94l-0.33,-1.26l0.22,-1.19l-0.18,-1.35l0.83,0.2l0.3,-0.92l-0.19,-0.75l-0.72,-0.63l0.89,-1.13l0.07,-1.75l1.24,-1.24l0.61,-1.37l1.61,-0.49l0.78,-1.15l-0.45,-0.66l-0.51,-0.02l-0.86,-1.3l0.16,-2.09l-0.26,-0.87l0.49,-0.79l0.06,-0.84l-1.15,-1.73l-0.63,-0.4l-0.17,-0.64l0.18,-0.5l0.59,0.24l0.53,-0.33l0.24,-1.8l0.79,-0.24l0.3,-1.0l-0.61,-2.32l0.44,-0.53l-0.03,-0.86l-0.96,-0.88l-0.95,0.3l-1.09,-2.65l0.93,-1.82l41.31,9.4l38.95,7.65l-10.13,55.39l1.04,3.0l0.13,2.0l-1.0,1.3l0.73,1.88l-31.18,-5.92l-1.67,0.79l-7.24,-1.02l-1.68,0.92l-4.19,-0.12l-3.18,0.45l-1.64,0.75l-0.88,-0.26l-1.2,0.3l-1.51,-0.23l-2.43,-0.94l-0.91,0.46l-3.45,0.51l-2.11,-0.71l-1.65,0.3l-0.31,-1.36l-1.09,-0.88l-4.34,-1.46l-2.32,-0.11l-1.15,-0.51l-1.27,0.21l-1.89,0.86l-4.49,0.58l-2.26,-1.01l-1.61,-1.15l-1.84,-0.51l-0.63,-0.81l0.64,-6.82l-0.46,-0.95l-0.22,-1.9l-0.98,-1.35l-1.96,-1.67l-1.59,-0.23l-1.31,0.28l-1.95,-3.24l-2.07,-0.23l-0.56,-0.3l-0.1,-0.52l-0.55,-0.47l-1.22,0.28l-0.81,-0.15l-1.0,0.52l-1.03,-1.77l-0.93,-0.23ZM61.97,39.77l0.16,0.74l-0.42,0.48l0.0,-0.91l0.26,-0.31ZM71.38,20.37l-0.61,0.87l-0.15,0.52l0.18,-1.38l0.58,-0.01ZM71.25,15.62l-0.09,-0.05l0.05,-0.04l0.04,0.1ZM70.48,15.47l-0.77,0.39l0.37,-0.68l-0.07,-0.6l0.22,-0.07l0.25,0.97ZM57.68,42.43l0.04,-0.02l-0.01,0.0l-0.03,0.01Z\",\n            name: \"Washington\"\n          },\n          \"US-KS\": {\n            path: \"M477.93,239.62l0.44,0.63l0.76,0.18l1.04,0.8l2.19,-1.08l-0.0,0.75l1.08,0.79l0.23,1.44l-0.95,-0.15l-0.6,0.31l-0.17,0.97l-1.14,1.37l-0.06,1.14l-0.79,0.5l0.04,0.64l1.56,2.1l2.0,1.49l0.2,1.13l0.42,0.86l0.74,0.56l0.32,1.11l1.89,0.91l1.54,0.26l2.67,46.81l-31.54,1.48l-31.97,0.88l-31.98,0.26l-32.04,-0.37l1.21,-65.46l27.89,0.35l27.85,-0.14l27.84,-0.64l27.67,-1.12l1.65,1.23Z\",\n            name: \"Kansas\"\n          },\n          \"US-WI\": {\n            path: \"M510.09,124.06l0.41,-0.27l0.28,-0.9l-0.45,-1.48l0.04,-1.91l0.7,-1.16l0.53,-2.25l-1.61,-2.91l-0.83,-0.36l-1.28,-0.01l-0.21,-2.31l1.67,-2.26l-0.05,-0.77l0.77,-1.55l1.95,-1.09l0.48,-0.75l0.97,-0.25l0.45,-0.75l1.16,-0.14l1.04,-1.56l-0.97,-12.11l1.03,-0.35l0.22,-1.1l0.73,-0.97l0.78,0.7l1.68,0.64l2.61,-0.56l3.27,-1.57l2.65,-0.82l2.22,-2.12l0.31,0.29l1.39,-0.11l1.25,-1.48l0.79,-0.58l1.04,-0.1l0.4,-0.52l1.07,0.99l-0.48,1.68l-0.67,1.01l0.23,1.61l-1.21,2.21l0.64,0.66l2.5,-1.09l0.72,-0.87l2.15,1.22l2.34,0.47l0.44,0.53l0.86,-0.13l1.6,0.7l2.23,3.54l15.47,2.52l4.65,1.96l1.67,-0.16l1.63,0.42l1.33,-0.59l3.17,0.71l2.18,0.09l0.85,0.41l0.56,0.89l-0.42,1.09l0.41,0.77l3.4,0.63l1.4,1.13l-0.16,0.71l0.59,1.11l-0.36,0.81l0.43,1.25l-0.78,1.25l-0.03,1.76l0.91,0.63l1.38,-0.26l1.02,-0.72l0.2,0.26l-0.79,2.44l0.04,1.31l1.32,1.46l0.84,0.35l-0.24,2.02l-2.42,1.2l-0.51,0.78l0.04,1.26l-1.61,3.49l-0.4,3.5l1.11,0.83l0.91,-0.04l0.5,-0.37l0.49,-1.37l1.82,-1.47l0.66,-2.54l1.06,-1.7l0.59,0.18l0.58,-0.71l0.87,-0.4l1.12,1.12l0.59,0.2l-0.28,2.18l-1.19,2.85l-0.57,5.58l0.23,1.11l0.8,0.93l0.07,0.52l-0.51,0.98l-1.3,1.34l-0.86,3.88l0.15,2.57l0.72,1.2l0.06,1.24l-1.07,3.23l0.12,2.11l-0.73,2.11l-0.28,2.46l0.59,2.02l-0.04,1.32l0.49,0.53l-0.21,1.7l0.92,0.78l0.54,2.44l1.2,1.54l0.08,1.69l-0.33,1.45l0.48,2.95l-44.2,4.6l-0.19,-0.79l-1.56,-2.19l-4.94,-0.84l-1.06,-1.35l-0.36,-1.68l-0.9,-1.21l-0.86,-4.89l1.04,-2.61l-0.09,-0.99l-0.71,-0.79l-1.44,-0.48l-0.71,-1.76l-0.47,-6.02l-0.7,-1.4l-0.52,-2.56l-1.15,-0.6l-1.1,-1.56l-0.93,-0.11l-1.17,-0.75l-1.71,0.09l-2.67,-1.79l-2.3,-3.5l-2.64,-2.1l-2.94,-0.53l-0.73,-1.24l-1.12,-1.0l-3.12,-0.45l-3.53,-2.74l0.45,-1.24l-0.12,-1.61l0.25,-0.81l-0.88,-3.11Z\",\n            name: \"Wisconsin\"\n          },\n          \"US-OR\": {\n            path: \"M10.81,140.09l0.63,-3.94l1.32,-2.52l0.23,-1.22l-0.01,-1.26l-0.46,-0.66l-0.14,-1.12l-0.42,-0.32l-0.11,-1.85l2.73,-3.63l2.2,-4.73l0.1,-1.09l0.42,-0.27l0.01,0.79l0.73,0.1l0.42,-1.11l0.88,-0.84l0.23,0.94l1.39,0.27l-0.51,-2.64l-0.92,0.08l2.09,-3.81l1.11,-0.76l0.8,0.4l0.55,-0.33l-0.66,-1.35l-0.6,-0.3l1.71,-4.39l0.41,-0.38l0.04,-0.96l1.74,-5.49l0.97,-1.98l0.4,0.33l0.67,-0.29l-0.12,-0.97l-0.56,-0.32l0.96,-2.74l0.81,0.17l0.23,-0.45l-0.16,-0.52l-0.52,-0.28l0.54,-2.86l1.58,-2.7l0.83,-3.02l1.14,-1.76l0.97,-3.1l-0.08,-1.04l1.21,-1.1l0.04,-0.6l-0.46,-0.65l0.14,-0.52l0.51,0.64l0.45,0.05l0.39,-0.63l0.17,-1.39l-0.74,-0.72l0.5,-1.2l1.28,-0.78l0.05,-0.46l-0.86,-0.5l-0.26,-1.11l0.86,-2.17l-0.06,-1.44l0.92,-0.59l0.4,-0.85l0.07,-3.75l0.49,0.86l0.9,0.41l-0.04,0.91l0.55,0.53l0.43,-0.82l0.39,-0.14l-0.27,-0.98l1.12,0.84l1.53,0.0l1.45,-0.68l1.44,2.36l1.99,0.78l1.39,-0.67l0.91,0.06l1.72,1.51l0.77,1.04l0.21,1.9l0.43,0.78l-0.03,2.05l-0.39,1.24l0.19,0.93l-0.43,1.74l0.26,1.45l0.79,0.85l1.94,0.56l1.44,1.05l2.4,1.1l4.98,-0.53l2.9,-1.06l1.14,0.51l2.23,0.09l4.24,1.43l0.69,0.54l0.19,1.15l0.57,0.58l1.86,-0.27l2.11,0.71l3.79,-0.55l0.69,-0.42l2.19,0.93l1.64,0.24l1.19,-0.3l0.88,0.26l1.89,-0.78l3.07,-0.43l4.16,0.13l1.61,-0.91l7.16,1.02l0.96,-0.19l0.79,-0.58l31.27,5.93l0.23,1.81l0.93,1.82l1.16,0.63l1.96,1.86l0.57,2.45l-0.16,1.0l-3.69,4.54l-0.4,1.41l-1.39,2.63l-2.21,2.42l-0.65,2.68l-1.49,1.84l-2.23,1.5l-1.92,3.35l-1.49,1.27l-0.62,2.02l-0.12,1.87l0.28,0.92l0.56,0.61l0.54,0.04l0.39,-0.35l0.63,0.76l0.89,-0.05l0.07,0.88l0.8,0.95l-0.46,1.0l-0.65,0.06l-0.33,0.4l0.21,1.8l-1.03,2.56l-1.22,1.41l-6.86,39.15l-26.21,-4.99l-28.89,-6.05l-28.8,-6.61l-28.87,-7.22l-1.54,-2.51l0.26,-2.47l-0.29,-0.87Z\",\n            name: \"Oregon\"\n          },\n          \"US-KY\": {\n            path: \"M583.03,306.53l0.35,-2.18l1.13,0.96l0.72,0.2l0.75,-0.36l0.46,-0.88l0.87,-3.55l-0.54,-1.75l0.38,-0.86l-0.1,-1.87l-1.27,-2.04l1.79,-3.21l1.24,-0.51l0.73,0.06l7.03,2.56l0.81,-0.2l0.65,-0.72l0.24,-1.93l-1.48,-2.14l-0.24,-1.44l0.2,-0.87l0.4,-0.52l1.1,-0.18l1.24,-0.83l3.0,-0.95l0.64,-0.51l0.15,-1.13l-1.53,-2.05l-0.08,-0.68l1.33,-1.97l0.14,-1.16l1.25,0.42l1.12,-1.33l-0.68,-2.0l1.92,0.9l1.72,-0.84l0.03,1.18l1.0,0.46l0.99,-0.94l0.02,-1.36l0.51,0.16l1.9,-0.96l4.41,1.52l0.64,0.94l0.86,0.18l0.59,-0.59l0.73,-2.53l1.38,-0.55l1.39,-1.34l0.86,1.29l0.77,0.42l1.16,-0.13l0.11,0.75l0.95,0.19l0.67,-0.62l0.03,-1.0l0.84,-0.38l0.26,-0.48l-0.25,-2.09l0.84,-0.4l0.34,-0.56l-0.06,-0.69l1.25,-0.56l0.34,-0.72l0.38,1.47l0.61,0.6l1.46,0.64l1.25,-0.0l1.11,0.81l0.53,-0.11l0.26,-0.55l1.1,-0.46l0.53,-0.69l0.04,-3.47l0.85,-2.18l1.02,0.18l1.55,-1.19l0.75,-3.46l1.04,-0.37l1.65,-2.23l0.0,-0.81l-1.18,-2.88l2.78,-0.59l1.54,0.81l3.85,-2.82l2.23,-0.46l-0.18,-1.07l0.36,-1.47l-0.32,-0.36l-1.22,-0.04l0.58,-1.39l-1.09,-1.54l1.65,-1.83l1.81,1.18l0.92,-0.11l1.93,-1.01l0.78,0.88l1.75,0.54l0.57,1.28l0.94,0.92l0.79,1.84l2.6,0.67l1.87,-0.57l1.63,0.27l2.18,1.85l0.96,0.43l1.28,-0.18l0.61,-1.31l0.99,-0.54l1.35,0.5l1.34,0.04l1.33,1.09l1.26,-0.69l1.41,-0.15l1.81,-2.55l1.72,-1.03l0.92,2.35l0.7,0.83l2.45,0.81l1.35,0.97l0.75,1.05l0.93,3.35l-0.37,0.45l0.09,0.72l-0.44,0.61l0.02,0.53l2.24,2.62l1.35,0.92l-0.08,0.89l1.34,0.97l0.58,1.35l1.55,1.2l0.98,1.62l2.14,0.84l1.09,1.12l2.14,0.25l-4.86,6.13l-5.06,4.15l-0.42,0.86l0.22,1.25l-2.07,1.93l0.04,1.64l-3.06,1.63l-0.8,2.38l-1.71,0.6l-2.7,1.83l-1.66,0.48l-3.39,2.42l-23.95,3.09l-8.8,1.42l-7.47,0.86l-7.68,0.46l-22.71,3.52l-0.64,-0.56l-3.63,0.09l-0.41,0.6l1.03,3.57l-22.99,2.73Z\",\n            name: \"Kentucky\"\n          },\n          \"US-ME\": {\n            path: \"M837.01,56.27l0.87,-1.15l1.42,1.7l0.84,0.04l0.39,-2.12l-0.46,-2.19l1.7,0.36l0.73,-0.42l0.21,-0.52l-0.32,-0.7l-1.18,-0.47l-0.44,-0.62l0.19,-1.42l0.86,-2.02l2.08,-2.25l0.01,-0.98l-0.52,-0.93l1.02,-1.64l0.39,-1.51l-0.22,-0.92l-1.02,-0.35l-0.07,-1.42l-0.4,-0.43l0.55,-0.96l-0.04,-0.63l-1.0,-1.26l0.13,-1.73l0.37,-0.63l-0.15,-0.97l1.22,-1.93l-0.96,-6.17l5.58,-18.87l2.25,-0.23l1.14,3.18l0.55,0.43l2.54,0.56l1.83,-1.73l1.68,-0.83l1.24,-1.72l1.25,-0.12l0.64,-0.47l0.25,-1.43l0.42,-0.3l1.36,0.04l3.68,1.41l1.14,0.96l2.36,1.05l8.38,22.7l0.64,0.65l-0.19,1.26l0.64,0.86l-0.1,1.52l-0.33,0.05l-0.24,0.66l1.72,1.13l1.79,0.22l0.82,0.41l1.88,-0.19l1.25,-0.64l0.34,0.86l-0.59,1.43l1.69,1.86l0.28,2.69l2.72,1.68l0.98,-0.1l0.47,-0.74l-0.06,-0.5l0.36,0.08l0.25,0.49l0.64,0.07l1.41,1.11l0.27,0.75l1.27,0.94l0.04,0.47l-0.52,-0.14l-0.39,0.41l0.18,0.77l-0.76,-0.15l-0.35,0.4l0.16,0.63l0.81,0.53l0.55,0.92l0.48,0.17l0.16,-0.88l0.39,-0.17l0.8,0.32l0.25,-0.83l0.34,0.41l-0.31,0.85l-0.53,0.19l-1.21,3.24l-0.63,-0.04l-0.31,0.44l-0.55,-1.05l-0.72,0.03l-0.3,0.5l-0.56,0.06l-0.02,0.49l0.58,0.85l-0.9,-0.45l-0.33,0.63l0.26,0.52l-1.2,-0.28l-0.36,0.3l-0.37,0.78l0.07,0.45l0.44,0.08l0.07,1.21l-0.37,-0.57l-0.55,-0.06l-0.39,0.45l-0.2,1.09l-0.48,-1.53l-1.14,0.01l-0.68,0.75l-0.36,1.48l0.59,0.63l-0.83,0.63l-0.69,-0.46l-0.73,1.04l0.1,0.64l0.99,0.63l-0.35,0.21l-0.1,0.82l-0.46,-0.21l-0.85,-1.82l-1.03,-0.46l-0.39,0.22l-0.45,-0.41l-0.57,0.63l-1.24,-0.19l-0.26,0.85l0.78,0.4l0.01,0.37l-0.51,-0.05l-0.56,0.4l-0.09,0.7l-0.49,-1.02l-1.17,-0.02l-0.16,0.64l0.52,0.88l-1.44,0.96l0.84,1.11l0.08,1.06l0.53,0.65l-0.97,-0.41l-0.96,0.22l-1.2,-0.42l-0.17,-0.91l0.74,-0.28l-0.08,-0.56l-0.42,-0.49l-0.67,-0.12l-0.3,0.33l-0.23,-2.37l-0.37,-0.22l-1.1,0.27l0.04,1.96l-1.85,1.92l0.02,0.49l1.25,1.47l-0.64,0.96l-0.19,3.87l0.77,1.41l-1.08,1.72l-0.8,-0.19l-0.45,0.93l-0.62,-0.06l-0.41,-1.15l-0.73,-0.21l-0.52,1.03l0.11,0.69l-0.45,0.59l0.12,2.41l-0.95,-1.01l0.14,-1.28l-0.24,-0.59l-0.82,0.29l-0.08,2.01l-0.44,-0.25l0.15,-1.54l-0.47,-0.4l-0.68,0.49l-0.76,3.04l-0.77,-1.97l0.17,-1.21l-0.4,-0.27l-0.46,0.21l-1.05,2.59l0.35,0.53l0.85,-0.15l0.95,2.08l-0.28,-0.59l-0.51,-0.23l-0.66,0.3l-0.07,0.64l-1.38,-0.1l-2.16,3.17l-0.53,1.86l0.29,0.6l-0.68,0.65l0.51,0.43l0.91,-0.21l0.37,0.92l-0.77,0.3l-0.2,0.39l-0.4,-0.04l-0.51,0.57l-0.14,1.03l0.67,1.37l-0.08,0.68l-0.79,1.29l-0.94,0.61l-0.54,1.29l0.44,1.56l-0.4,2.81l-0.8,-0.33l-0.42,0.59l-1.02,-0.76l-0.57,-1.85l-0.93,-0.37l-2.36,-1.99l-0.76,-3.45l-13.24,-35.53ZM863.91,81.24l0.08,0.26l-0.08,0.23l0.03,-0.29l-0.04,-0.2ZM865.32,81.46l0.47,0.7l-0.04,0.47l-0.32,-0.25l-0.1,-0.93ZM867.66,78.32l0.42,0.82l-0.16,0.14l-0.42,-0.19l0.16,-0.77ZM877.03,64.89l-0.14,0.2l-0.03,-0.24l0.17,0.04ZM873.08,75.23l0.01,0.02l-0.03,0.03l0.01,-0.06Z\",\n            name: \"Maine\"\n          },\n          \"US-OH\": {\n            path: \"M665.07,178.88l1.66,0.36l0.97,-0.31l1.75,1.07l2.07,0.26l1.47,1.17l1.7,0.24l-2.17,1.18l-0.12,0.47l0.42,0.24l2.45,0.19l1.39,-1.1l1.76,-0.25l3.39,0.96l0.92,-0.08l1.48,-1.3l1.73,-0.59l1.15,-0.97l1.91,-0.97l2.61,-0.03l1.09,-0.62l1.24,-0.06l1.07,-0.8l4.24,-5.46l4.53,-3.47l6.92,-4.36l5.83,28.04l-0.51,0.54l-1.28,0.43l-0.41,0.95l1.65,2.23l0.02,2.11l0.41,0.26l0.31,0.94l-0.04,0.76l-0.54,0.83l-0.5,4.08l0.18,3.21l-0.58,0.41l0.34,1.11l-0.35,1.74l-0.39,0.54l0.76,1.23l-0.25,1.87l-2.41,2.65l-0.82,1.86l-1.37,1.5l-1.24,0.67l-0.6,0.7l-0.87,-0.92l-1.18,0.14l-1.32,1.74l-0.09,1.32l-1.78,0.85l-0.78,2.25l0.28,1.58l-0.94,0.85l0.3,0.67l0.63,0.41l0.27,1.3l-0.8,0.17l-0.5,1.6l0.06,-0.93l-0.91,-1.26l-1.53,-0.55l-1.07,0.71l-0.82,1.98l-0.34,2.69l-0.53,0.82l1.22,3.58l-1.27,0.39l-0.28,0.42l-0.25,3.12l-2.66,1.2l-1.0,0.05l-0.76,-1.06l-1.51,-1.1l-2.34,-0.73l-1.16,-1.92l-0.31,-1.14l-0.42,-0.33l-0.73,0.13l-1.84,1.17l-1.1,1.28l-0.4,1.05l-1.43,0.15l-0.87,0.61l-1.11,-1.0l-3.14,-0.59l-1.37,0.72l-0.53,1.25l-0.71,0.05l-3.04,-2.26l-1.93,-0.29l-1.77,0.56l-2.14,-0.52l-0.55,-1.54l-0.96,-0.97l-0.63,-1.38l-2.03,-0.76l-1.14,-1.01l-0.97,0.26l-1.31,0.89l-0.46,0.03l-1.79,-1.23l-0.61,0.2l-0.6,0.7l-8.67,-55.57l20.65,-4.25ZM675.61,181.3l0.53,-0.79l0.67,0.41l-0.48,0.35l-0.72,0.03Z\",\n            name: \"Ohio\"\n          },\n          \"US-OK\": {\n            path: \"M399.11,359.23l-0.05,-42.02l-0.39,-0.4l-51.81,-0.82l0.31,-10.23l36.69,0.74l35.99,-0.07l35.98,-0.86l35.56,-1.62l0.6,10.68l4.55,24.34l1.41,37.87l-1.2,-0.22l-0.29,-0.36l-2.13,-0.21l-0.82,-0.79l-2.11,-0.39l-1.77,-2.05l-1.23,-0.22l-2.25,-1.56l-1.5,-0.4l-0.8,0.46l-0.23,0.88l-0.82,0.24l-0.46,0.62l-2.47,-0.14l-1.79,-1.48l-2.3,1.29l-1.16,0.2l-0.19,0.56l-0.63,0.28l-2.12,-0.77l-1.7,1.18l-2.06,0.51l-0.83,1.37l-1.48,0.06l-0.57,1.25l-1.26,-1.55l-1.7,-0.1l-0.32,-0.58l-1.21,-0.46l-0.02,-0.96l-0.44,-0.5l-1.24,-0.18l-0.73,1.38l-0.66,0.11l-0.84,-0.5l-0.97,0.07l-0.71,-1.51l-1.09,-0.35l-1.17,0.57l-0.45,1.7l-0.7,-0.08l-0.49,0.43l0.29,0.73l-0.51,1.68l-0.43,0.19l-0.86,-1.45l0.39,-1.65l-0.75,-0.86l-0.8,0.18l-0.49,0.76l-0.84,-0.18l-0.92,0.98l-1.07,0.13l-0.53,-1.36l-1.99,-0.19l-0.3,-1.48l-1.19,-0.53l-0.82,0.33l-2.12,2.15l-1.21,0.51l-0.97,-0.38l0.19,-1.25l-0.28,-1.13l-2.33,-0.67l-0.07,-2.18l-0.43,-0.55l-2.11,0.39l-2.52,-0.25l-0.64,0.26l-0.81,1.21l-0.95,0.06l-1.76,-1.77l-0.97,-0.12l-1.5,0.56l-2.68,-0.63l-1.86,-1.0l-1.05,0.25l-2.46,-0.3l-0.17,-2.12l-0.85,-0.87l-0.43,-1.02l-1.16,-0.41l-0.7,-0.83l-0.83,0.08l-0.44,1.64l-2.22,-0.68l-1.07,0.6l-0.96,-0.09l-3.79,-3.78l-1.12,-0.43l-0.8,0.08Z\",\n            name: \"Oklahoma\"\n          },\n          \"US-ID\": {\n            path: \"M132.48,121.36l-0.34,-0.44l0.08,-1.99l0.53,-1.74l1.42,-1.22l2.11,-3.59l1.68,-0.92l1.39,-1.52l1.08,-2.15l0.05,-1.22l2.21,-2.41l1.43,-2.7l0.37,-1.37l2.04,-2.26l1.89,-2.81l0.03,-1.01l-0.79,-2.95l-2.13,-1.94l-0.87,-0.36l-0.85,-1.61l-0.41,-3.02l-0.59,-1.19l0.94,-1.19l-0.12,-2.35l-1.04,-2.69l10.12,-55.42l13.39,2.35l-3.54,20.71l1.29,2.89l1.0,1.27l0.27,1.55l1.17,1.76l-0.12,0.83l0.39,1.14l-0.99,0.95l0.83,1.76l-0.83,0.11l-0.28,0.71l1.93,1.68l1.03,2.04l2.24,1.22l0.54,1.58l1.09,1.33l1.49,2.79l0.08,0.68l1.64,1.81l0.01,1.88l1.79,1.71l-0.07,1.35l0.74,0.19l0.9,-0.58l0.36,0.46l-0.36,0.55l0.07,0.54l1.11,0.96l1.61,0.15l1.81,-0.36l-0.63,2.61l-0.99,0.54l0.25,1.14l-1.83,3.73l0.06,1.72l-0.81,0.07l-0.37,0.54l0.6,1.33l-0.62,0.9l-0.03,1.16l0.96,0.93l-0.37,0.81l0.28,1.01l-1.57,0.43l-1.21,1.41l0.1,1.11l0.46,0.77l-0.13,0.73l-0.83,0.77l-0.2,1.52l1.48,0.63l1.38,1.79l0.78,0.27l1.08,-0.35l0.56,-0.8l1.85,-0.41l1.21,-1.28l0.81,-0.29l0.15,-0.76l0.78,0.81l0.23,0.71l1.05,0.64l-0.42,1.23l0.73,0.95l-0.34,1.38l0.57,1.34l-0.21,1.61l1.54,2.64l0.31,1.73l0.82,0.37l0.67,2.08l-0.18,0.98l-0.76,0.64l0.51,1.89l1.24,1.16l0.3,0.79l0.81,0.08l0.86,-0.37l1.04,0.93l1.06,2.79l-0.5,0.81l0.89,1.83l-0.28,0.6l0.11,0.98l2.29,2.41l0.97,-0.14l-0.01,-1.14l1.07,-0.89l0.93,-0.22l4.53,1.62l0.69,-0.32l0.67,-1.35l1.19,-0.39l2.25,0.93l3.3,-0.1l0.96,0.88l2.29,-0.58l3.23,0.78l0.45,-0.49l-0.67,-0.76l0.26,-1.06l0.74,-0.48l-0.07,-0.96l1.23,-0.51l0.48,0.37l1.07,2.11l0.12,1.11l1.36,1.95l0.73,0.45l-6.27,53.85l-47.47,-6.31l-46.96,-7.72l6.88,-39.16l1.12,-1.18l1.07,-2.67l-0.21,-1.74l0.74,-0.15l0.77,-1.62l-0.9,-1.27l-0.18,-1.2l-1.24,-0.08l-0.64,-0.81l-0.88,0.29Z\",\n            name: \"Idaho\"\n          },\n          \"US-WY\": {\n            path: \"M218.62,206.98l10.1,-86.59l25.45,2.74l26.79,2.4l26.83,1.91l27.84,1.46l-3.67,87.1l-27.31,-1.41l-28.2,-1.97l-29.69,-2.63l-28.14,-3.02Z\",\n            name: \"Wyoming\"\n          },\n          \"US-UT\": {\n            path: \"M220.28,185.78l-2.51,21.5l0.35,0.45l32.23,3.42l-8.32,87.13l-42.53,-4.67l-42.4,-5.77l16.08,-108.32l47.1,6.26Z\",\n            name: \"Utah\"\n          },\n          \"US-IN\": {\n            path: \"M600.87,189.59l1.42,0.87l2.1,0.15l1.52,-0.38l2.63,-1.39l2.73,-2.1l32.14,-4.8l8.96,57.41l-0.66,1.15l0.3,0.92l0.81,0.79l-0.66,1.14l0.49,0.8l1.12,0.04l-0.36,1.14l0.18,0.51l-1.81,0.29l-3.18,2.55l-0.43,0.17l-1.4,-0.81l-3.46,0.91l-0.09,0.78l1.19,3.1l-1.4,1.88l-1.18,0.49l-0.45,0.89l-0.31,2.6l-1.11,0.88l-1.06,-0.24l-0.47,0.47l-0.85,1.95l0.05,3.13l-0.39,1.0l-1.38,0.85l-0.93,-0.68l-1.24,0.01l-1.47,-0.69l-0.62,-1.84l-1.89,-0.73l-0.44,0.3l-0.04,0.5l0.83,0.68l-0.62,0.31l-0.89,-0.35l-0.36,0.29l0.5,1.42l-1.08,0.68l0.14,2.37l-1.06,0.65l-0.0,0.83l-0.16,0.37l-0.25,-1.01l-1.6,0.18l-1.4,-1.69l-0.5,-0.08l-1.67,1.5l-1.57,0.69l-1.07,2.89l-0.81,-1.07l-2.79,-0.77l-1.11,-0.61l-1.08,-0.18l-1.76,0.92l-0.64,-1.02l-0.58,-0.18l-0.53,0.56l0.64,1.86l-0.34,0.84l-0.28,0.09l-0.02,-1.18l-0.42,-0.4l-0.58,0.01l-1.46,0.79l-1.41,-0.84l-0.85,0.0l-0.48,0.95l0.71,1.55l-0.49,0.74l-1.15,-0.39l-0.07,-0.54l-0.53,-0.44l0.55,-0.63l-0.35,-3.09l0.96,-0.78l-0.07,-0.58l-0.44,-0.23l0.69,-0.46l0.25,-0.61l-1.17,-1.47l0.46,-1.16l0.32,0.19l1.39,-0.55l0.33,-1.8l0.55,-0.4l0.44,-0.92l-0.06,-0.83l1.52,-1.07l0.06,-0.69l-0.41,-0.93l0.57,-0.86l0.14,-1.29l0.87,-0.51l0.4,-1.91l-1.08,-2.54l0.06,-1.91l-0.93,-0.91l-0.61,-1.5l-1.05,-0.78l-0.04,-0.58l0.92,-1.39l-0.63,-2.25l1.27,-1.31l-6.5,-50.67Z\",\n            name: \"Indiana\"\n          },\n          \"US-IL\": {\n            path: \"M540.1,225.5l0.86,-0.35l0.37,-0.67l-0.23,-2.33l-0.73,-0.93l0.15,-0.41l0.72,-0.69l2.42,-0.98l0.71,-0.65l0.63,-1.68l0.17,-2.11l1.65,-2.47l0.27,-0.94l-0.03,-1.22l-0.59,-1.95l-2.23,-1.88l-0.11,-1.77l0.67,-2.38l0.45,-0.37l4.6,-0.85l0.81,-0.41l0.82,-1.12l2.55,-1.0l1.43,-1.56l0.39,-3.28l1.42,-1.46l0.29,-0.74l0.33,-4.37l-0.76,-2.14l-4.02,-2.47l-0.28,-1.5l-0.48,-0.82l-3.64,-2.48l44.57,-4.64l-0.01,2.65l0.57,2.59l1.38,2.49l1.3,0.95l0.76,2.6l1.26,2.71l1.42,1.85l6.6,51.47l-1.22,1.13l-0.1,0.69l0.67,1.76l-0.84,1.09l-0.03,1.11l1.19,1.09l0.56,1.41l0.89,0.82l-0.1,1.8l1.06,2.31l-0.28,1.49l-0.87,0.56l-0.21,1.47l-0.59,0.93l0.34,1.2l-1.48,1.13l-0.23,0.41l0.28,0.7l-0.93,1.17l-0.31,1.19l-1.64,0.67l-0.63,1.67l0.15,0.8l0.97,0.83l-1.27,1.15l0.42,0.76l-0.49,0.23l-0.13,0.54l0.43,2.94l-1.15,0.19l0.08,0.45l0.91,0.78l-0.48,0.17l-0.03,0.64l0.83,0.29l0.04,0.42l-1.31,1.97l-0.25,1.19l0.59,1.22l0.7,0.64l0.37,1.08l-3.31,1.22l-1.19,0.82l-1.24,0.24l-0.77,1.01l-0.18,2.04l1.7,2.81l0.07,0.54l-0.53,1.19l-0.96,0.03l-6.3,-2.43l-1.08,-0.08l-1.57,0.64l-0.68,0.72l-1.44,2.95l0.06,0.66l-1.18,-1.2l-0.79,0.14l-0.35,0.47l0.59,1.13l-1.24,-0.79l-0.01,-0.68l-1.6,-2.21l-0.4,-1.12l-0.75,-0.37l-0.05,-0.49l0.94,-1.35l0.2,-1.03l-0.32,-1.01l-1.44,-2.02l-0.47,-3.18l-2.26,-0.99l-1.55,-2.14l-1.95,-0.82l-1.72,-1.34l-1.56,-0.14l-1.82,-0.96l-2.32,-1.78l-2.34,-2.44l-0.36,-1.95l2.37,-6.85l-0.25,-2.32l0.98,-2.06l-0.38,-0.84l-2.66,-1.45l-2.59,-0.67l-1.29,0.45l-0.86,1.45l-0.9,0.15l-1.3,-1.9l-0.43,-1.52l0.16,-0.87l-0.54,-0.91l-0.29,-1.65l-0.83,-1.36l-0.94,-0.9l-4.11,-2.52l-1.01,-1.64l-4.53,-3.53l-0.73,-1.9l-1.04,-1.21l-0.04,-1.6l-0.96,-1.48l-0.75,-3.54l0.1,-2.94l0.6,-1.28ZM585.53,295.46l0.05,0.05l0.04,0.04l-0.05,-0.0l-0.04,-0.09Z\",\n            name: \"Illinois\"\n          },\n          \"US-AK\": {\n            path: \"M64.88,530.75l0.06,-0.04l0.04,0.06l-0.06,-0.01l-0.05,-0.0ZM66.64,530.24l1.13,0.16l0.11,0.52l-1.21,0.78l-0.23,-0.24l0.3,-0.47l-0.09,-0.76ZM69.51,530.52l0.7,-0.13l0.3,-0.66l2.1,-0.44l2.68,0.09l1.86,0.74l0.99,0.81l0.04,2.23l0.65,0.89l0.77,-0.37l-0.07,-0.76l0.56,0.36l-0.1,0.53l1.05,1.08l-1.24,-0.51l-0.68,0.56l-0.08,-0.76l-1.26,-0.01l-0.76,-0.43l-0.82,0.28l-1.12,-0.26l-0.44,-0.54l0.4,-0.34l0.95,0.84l0.47,-0.03l0.2,-0.5l-0.7,-1.62l-1.11,-0.6l-1.17,0.32l-0.66,0.82l-1.29,0.37l-0.52,-0.37l-0.59,0.38l-0.74,-0.26l-0.58,0.37l0.21,-2.07ZM81.1,534.87l0.81,-0.72l-0.68,-1.59l0.14,-0.29l1.83,-1.05l3.86,-0.11l2.68,0.81l0.57,-0.32l1.04,0.3l0.88,1.1l0.7,-0.06l0.9,-1.66l2.68,-0.78l1.06,0.33l1.28,-0.46l0.86,0.05l-0.14,0.54l0.5,0.59l1.15,0.33l0.6,-0.91l-0.56,-0.35l-0.31,0.15l0.28,-0.7l-0.2,-0.46l2.24,-2.37l1.05,0.07l0.63,0.82l0.66,-0.29l-0.11,-0.63l-1.04,-0.94l0.19,-0.63l0.96,-0.57l3.31,-0.22l-0.15,-0.63l0.81,-0.73l0.76,-0.04l1.14,-1.23l-0.94,-0.25l-0.69,0.62l-0.61,-0.12l-0.59,0.33l-5.45,-1.21l0.08,-1.16l-0.36,-0.69l0.61,-0.46l0.52,-0.18l0.49,0.51l-0.04,1.27l0.91,-0.05l0.15,-0.75l-0.06,-0.85l-0.98,-1.22l0.01,-0.82l-0.67,-0.19l-0.29,0.86l-0.73,0.37l-0.19,0.06l0.24,-0.27l-0.27,-0.52l-0.4,-0.11l-0.76,0.98l-0.97,0.24l-0.67,2.38l-0.33,0.05l-0.36,-0.33l0.03,-4.92l-0.66,-0.64l-1.23,0.46l0.07,-0.72l-0.68,-0.92l0.27,-0.42l-0.12,-1.01l-2.89,-0.21l-0.54,-0.39l-1.37,-0.13l-0.43,-0.56l-1.2,0.69l-0.99,-0.27l-0.29,-0.65l1.23,-0.02l-0.05,-0.92l0.46,-0.72l1.47,-0.11l-0.03,-0.81l-1.33,-0.74l0.14,-0.43l0.85,-0.72l1.34,-0.01l0.43,-0.43l0.58,-4.63l1.27,-1.41l-0.84,-0.73l1.97,-1.03l1.58,0.21l0.44,-0.55l-0.81,-0.46l-0.34,-0.75l-0.6,0.5l-0.57,-0.1l-1.3,0.72l-2.17,0.25l-0.12,0.5l0.5,0.82l-0.72,0.78l-0.48,-0.47l-2.21,-0.3l-2.19,-1.17l-1.56,-1.56l0.03,-0.37l0.7,-0.05l0.04,-0.67l-0.61,-1.28l-0.09,-1.54l0.39,-0.61l-0.72,-0.34l-0.58,-1.19l0.93,-0.28l0.14,-0.6l-1.09,-0.61l1.52,0.14l0.51,-0.46l0.88,0.03l0.05,0.6l1.07,1.2l-1.21,0.44l-0.39,0.39l0.31,0.47l1.11,-0.1l0.47,0.28l1.12,-0.22l0.18,0.15l-0.72,1.13l0.74,0.73l1.63,0.09l0.68,-0.64l-0.26,-0.92l0.44,-0.39l-0.14,-1.27l-0.59,-0.28l-1.31,0.1l-1.81,-1.44l0.01,-0.63l-0.97,-1.12l0.81,0.16l0.53,-0.4l-1.18,-1.08l0.63,-0.51l-0.14,-0.67l1.25,-0.21l0.53,0.32l0.83,-0.05l0.73,-0.46l-0.08,-0.52l-3.03,-0.29l-1.91,0.63l-0.4,0.68l-0.19,-0.22l0.72,-1.02l-0.63,-1.4l0.68,0.09l0.47,-0.54l-0.48,-1.21l0.96,0.46l0.42,-0.51l-0.63,-0.98l1.73,1.01l0.42,-1.53l0.59,-0.35l3.77,-0.6l0.5,0.35l0.25,0.85l-0.36,0.21l0.14,0.47l1.2,0.19l0.3,-0.42l-0.18,-1.0l1.6,-0.11l0.29,-0.63l-1.51,-0.29l0.59,-0.27l0.16,-0.74l0.9,-0.32l1.37,1.16l0.47,-0.57l-0.32,-0.84l0.37,-0.03l1.02,0.42l1.03,1.2l-0.04,0.6l-0.87,-0.06l-0.35,0.64l1.72,0.3l0.1,0.67l1.21,0.8l3.02,0.17l1.92,-0.37l0.11,0.59l2.89,1.88l2.0,0.37l1.83,-0.33l0.67,-0.63l0.41,-1.78l0.72,-1.29l-0.14,-1.81l0.74,0.39l1.24,-0.12l0.86,-0.71l-0.17,-1.62l0.3,-0.04l0.11,-0.44l-0.25,-0.34l-0.83,-0.45l-1.45,0.34l-0.98,-1.22l-1.22,0.1l-0.5,-0.38l-2.79,-0.15l-0.75,0.51l0.35,-0.85l-0.56,-1.94l-1.57,-0.24l-3.01,-2.71l-1.14,-0.28l-0.95,-0.93l-0.77,0.17l-3.27,-3.98l-0.31,-1.07l0.73,-0.34l0.39,-0.82l-0.53,-1.14l0.14,-0.32l0.52,0.26l1.05,-0.26l1.2,1.12l0.36,-0.78l-2.39,-3.21l-1.44,-1.39l-1.03,-2.33l0.73,0.11l1.02,0.72l1.24,-0.42l0.31,0.63l0.57,0.29l1.08,0.2l0.98,-0.22l1.81,0.53l1.37,1.81l1.19,0.53l0.56,-0.47l-0.6,-1.16l1.94,0.62l0.58,0.79l2.66,0.53l1.79,1.18l0.34,0.64l-0.69,0.11l-0.63,0.77l-1.35,-0.42l-0.12,0.69l0.75,0.66l0.19,1.01l2.13,1.87l1.3,0.71l-0.16,0.68l2.13,1.1l0.66,1.36l0.45,0.21l2.16,-0.88l0.7,1.0l-0.4,0.08l0.01,0.51l0.87,0.33l0.96,-0.71l-0.06,-1.11l-0.58,-0.85l0.4,0.0l1.01,2.11l1.88,1.12l0.85,-0.28l0.74,-1.61l-0.17,-0.25l-1.34,-0.47l-0.61,-1.11l-1.03,-0.61l-1.16,0.14l-0.44,-0.38l-0.48,-1.61l1.18,-0.54l0.78,0.4l0.37,-0.59l-0.87,-1.38l-1.35,-0.8l0.0,-1.23l-0.47,-0.25l-1.01,0.43l-3.2,-3.27l0.71,-1.39l0.04,-2.41l-2.35,-5.81l-1.25,-1.7l-0.54,-1.91l1.29,-0.66l1.24,-1.29l3.37,2.86l2.53,1.62l1.6,0.63l4.17,0.25l2.43,-1.65l1.96,0.17l1.51,-0.27l4.46,2.3l3.16,0.43l0.14,0.68l-0.34,0.08l-0.14,0.66l0.53,0.23l0.34,1.4l0.55,-0.29l0.38,-1.21l1.25,0.75l0.88,0.14l0.29,-0.35l-0.22,-0.39l-1.5,-1.03l0.05,-0.38l0.97,-0.06l0.34,0.13l0.34,1.14l0.55,0.33l0.18,-0.22l0.76,0.21l3.84,2.25l2.9,0.43l2.71,-0.19l0.31,0.85l0.85,0.61l0.02,0.66l1.47,0.88l-0.91,-0.04l-0.91,-0.49l-0.93,0.25l0.42,0.83l-0.26,0.43l0.18,0.59l0.73,-0.04l1.12,0.51l1.03,-0.39l1.07,0.65l0.92,-0.02l0.21,0.47l-0.71,0.01l-0.29,0.34l1.75,2.14l1.64,0.18l2.21,1.14l1.47,1.72l0.67,-0.07l0.41,0.37l-1.57,0.55l-0.18,0.63l2.16,1.28l-0.22,0.75l1.74,1.13l0.58,0.79l0.82,-0.05l1.56,0.52l0.51,0.45l0.14,0.61l2.14,0.56l1.96,1.16l1.82,1.63l0.39,0.96l1.19,0.37l1.05,0.92l-0.12,0.41l0.45,0.47l1.93,1.39l4.48,2.43l1.5,1.94l1.21,0.76l1.38,0.67l0.93,0.04l0.77,0.37l0.03,0.38l1.6,0.03l1.23,0.61l0.47,0.58l0.29,-0.26l1.69,1.44l1.68,2.36l1.24,0.84l0.65,1.11l1.25,0.49l-27.91,60.77l0.17,0.48l1.69,1.44l0.83,-0.19l1.44,1.5l2.05,-0.3l2.16,0.82l-0.98,1.08l-0.15,0.61l0.53,1.11l1.01,1.05l0.05,1.28l2.81,5.56l-0.47,2.71l0.54,0.33l1.98,-0.35l0.06,0.23l-1.19,0.71l0.29,0.54l0.84,-0.22l1.03,0.71l0.36,1.46l-0.28,0.03l-0.1,0.51l0.26,0.36l1.11,0.26l-0.24,0.59l0.49,0.49l-0.11,0.51l-0.36,-0.03l-0.12,-0.59l-0.85,-0.8l-0.47,-0.03l-1.0,0.68l-0.32,-0.86l-1.11,-0.57l-1.15,-1.83l0.58,-0.48l-0.09,-0.3l-0.99,-0.27l-0.56,-1.13l-0.02,-1.29l-1.34,-2.12l0.09,-0.76l-1.17,-0.46l-1.47,-1.72l-0.33,-0.8l-1.65,-1.66l1.58,-0.72l-0.4,0.98l0.71,0.53l0.48,-0.34l0.48,-1.49l0.98,0.8l0.73,-0.31l-0.53,-0.92l-0.81,-0.46l-0.73,-1.81l-0.41,-0.17l-2.16,1.02l-2.27,-0.06l-1.73,-1.01l-1.8,-1.85l0.52,-0.4l0.26,-0.96l-0.45,-1.04l-0.92,0.09l-0.12,0.64l-0.81,-0.05l-1.0,-1.05l-3.3,-2.31l-5.2,-1.56l-0.48,-1.29l0.16,-0.55l-1.83,-0.99l-0.64,-1.23l0.85,-0.63l0.26,-0.77l1.16,-0.21l0.15,-0.7l-0.98,-0.3l-2.56,1.0l-1.03,-0.01l-0.22,-0.7l-0.85,-0.75l1.1,-0.51l0.19,-0.4l-0.31,-0.45l-0.64,-0.02l-0.47,-0.8l0.14,-0.59l-0.49,-1.17l-0.45,-0.22l-0.62,0.19l-0.57,-0.49l0.25,-0.73l0.46,-0.09l1.22,0.53l0.42,-0.5l-0.16,-0.48l-1.49,-0.88l-1.82,0.34l-0.6,-0.61l-1.17,-0.28l-0.22,-0.32l0.32,-1.1l-0.72,-0.3l0.35,-0.97l-0.33,-0.29l-2.04,0.78l-0.28,-0.64l-1.38,-0.22l-0.75,0.57l0.31,0.89l-1.75,-0.34l-0.8,0.99l0.26,0.62l0.9,-0.03l-0.2,0.34l-1.52,0.34l-0.23,0.63l0.38,0.29l1.02,-0.16l0.49,0.83l-0.47,0.61l-0.59,-0.24l-0.7,0.58l0.05,0.63l-0.31,0.35l-0.27,-0.15l-0.68,0.39l-1.38,-1.05l0.03,-0.72l-1.08,-0.12l0.11,-0.8l-0.55,-0.46l-1.0,1.06l-1.09,-0.68l-0.44,0.5l-0.48,-0.1l-0.2,0.41l-0.8,-0.43l-0.29,0.55l-0.7,-0.52l-1.3,0.56l-0.16,-0.45l-0.91,-0.04l-0.56,0.81l-1.73,0.25l-1.02,-0.92l-0.6,0.32l-0.44,-0.36l-1.29,0.01l-0.44,-1.08l0.64,0.17l0.17,-0.48l0.68,0.04l0.89,0.91l0.56,-0.11l0.11,-0.54l0.9,0.16l1.67,-0.74l0.32,-0.52l-0.22,-0.4l-2.72,-0.16l-0.79,-1.25l1.54,-1.19l1.91,-0.52l0.81,-0.85l0.52,-0.09l0.76,-1.03l0.15,-1.27l1.37,0.34l3.53,-0.14l0.24,1.07l0.66,0.57l1.41,0.31l2.69,2.59l0.5,-0.37l-0.13,-0.93l-0.99,-0.67l-1.76,-2.54l1.94,-0.66l2.25,0.33l0.05,-0.75l-1.75,-0.86l-1.62,0.15l-0.71,0.63l-1.07,-0.92l-0.7,-0.18l0.17,-0.32l-0.28,-0.7l-1.24,0.32l-1.57,-0.23l-0.99,0.48l-1.49,-0.52l-1.37,0.05l-0.78,0.4l-0.2,0.55l-1.24,-0.08l-1.92,0.49l-0.59,0.81l-0.62,0.26l-0.75,-0.02l-0.97,-1.32l-1.1,-0.29l-0.3,0.28l0.16,0.51l0.44,0.07l0.66,2.11l-0.91,0.44l-2.4,-0.95l-0.46,0.21l0.03,0.68l0.78,0.42l-0.2,0.15l-0.56,0.01l-0.54,-1.57l-0.76,0.74l-0.24,-0.5l-0.88,0.16l-0.13,0.57l-0.85,-0.44l-0.36,0.28l0.3,0.67l-1.93,-0.49l-0.81,1.18l-0.83,0.28l-0.17,1.22l0.33,0.36l0.71,-0.05l1.13,0.82l0.76,1.64l-0.81,0.65l-1.11,0.16l-1.09,-0.54l-0.98,0.53l-0.75,-0.18l-0.37,0.73l-1.4,-0.13l-0.46,0.82l-0.5,-0.62l-0.4,0.44l-1.47,0.04l-1.12,-0.71l-1.09,0.61l-0.67,-0.22l-0.91,0.37l-0.64,-0.78l-0.94,0.73l-0.49,-0.21l-0.32,0.36l-0.62,-0.1l-0.41,-0.5l-0.83,0.37l-2.51,-0.14l-0.57,0.44l0.28,1.17l-0.59,0.14l-1.31,-0.59l-0.58,0.52l-0.3,-0.46l-2.04,0.38l-0.15,-0.68l-0.48,-0.37l-0.79,0.47l-0.83,0.0l-0.29,0.61l-0.03,-0.62l-0.42,-0.3l-1.95,-0.18l-0.77,0.39l-0.34,-0.37l-0.72,-0.1l-1.8,0.43l-0.28,0.75l-0.4,-0.03l-0.82,0.77l-2.9,-0.76l-0.87,-0.79l-0.66,0.16l-0.84,-0.82l-1.36,-0.26l-0.93,0.26ZM89.01,536.65l-0.02,0.01l-0.0,0.03l0.02,-0.04ZM89.06,536.61l0.02,-0.01l-0.01,0.01l-0.0,0.01ZM91.61,484.22l-0.0,0.01l-0.0,-0.01l0.01,0.0ZM87.17,484.0l-0.0,-0.0l0.01,-0.0l-0.0,0.01l-0.01,-0.0ZM186.66,475.29l-0.0,0.02l-0.01,-0.01l0.01,-0.0ZM156.69,531.75l-0.95,1.06l-0.87,0.02l-0.13,-0.28l0.69,-0.51l1.26,-0.28ZM151.45,532.97l-0.11,0.02l0.12,-0.04l-0.01,0.02ZM152.06,535.54l-0.09,-0.14l0.41,-0.11l-0.1,0.3l-0.22,-0.05ZM116.92,535.18l-0.13,0.11l-0.06,-0.02l0.04,-0.19l0.16,0.1ZM90.72,536.66l0.27,-0.19l0.07,0.3l-0.17,0.07l-0.17,-0.19ZM121.46,528.8l-0.0,-0.02l0.04,0.01l-0.03,0.01ZM186.96,558.95l-0.09,-1.09l0.4,-0.11l0.13,0.57l-0.44,0.62ZM196.09,568.76l2.06,0.17l0.88,-0.72l0.4,-0.93l0.62,0.05l0.66,-0.45l0.12,-0.56l3.59,0.11l1.22,2.1l-0.59,0.6l0.11,1.69l1.05,0.86l0.25,0.97l0.46,0.34l0.11,1.76l1.72,2.25l0.24,1.0l-1.26,-0.23l-0.94,0.69l-0.72,1.06l-0.71,-1.34l-1.02,-0.73l0.15,-0.58l-0.32,-1.25l0.48,-1.41l-0.8,-0.55l0.41,-2.32l-0.18,-1.24l0.62,-1.53l-0.66,-0.25l-0.62,0.87l-0.78,-0.09l0.03,0.58l-0.38,0.41l0.37,1.24l-0.41,0.99l0.15,1.56l-0.41,1.27l0.03,2.19l-0.37,0.45l-0.41,-0.46l0.02,-1.59l-0.29,-0.45l-0.66,0.28l-1.11,-0.29l0.47,-0.38l0.24,-0.99l-0.35,-1.47l1.14,0.14l0.45,-0.45l-0.11,-0.36l-0.86,-0.52l-0.27,0.12l-0.01,-1.01l-0.61,-0.4l-0.96,1.15l0.46,0.38l-0.33,0.4l-0.04,-0.54l-0.68,-0.29l0.29,-0.67l-0.28,-0.54l-0.39,-0.02l-0.2,-0.62l-0.47,-0.15l-0.26,0.42l-0.35,-0.7ZM209.19,578.54l0.61,1.19l-0.23,0.77l0.66,1.82l0.05,1.22l1.73,7.29l-0.66,0.56l0.03,0.64l1.0,0.69l-0.59,0.84l0.05,0.52l0.72,0.67l-0.2,1.56l0.37,0.44l1.07,0.31l1.71,2.17l1.4,0.95l0.39,0.88l0.67,0.5l0.09,0.91l1.53,1.02l-0.19,0.84l-1.17,1.01l-0.41,1.68l-0.0,2.19l-2.07,1.87l-1.09,0.57l-0.63,-0.13l-0.02,-1.13l-0.64,0.07l-0.3,1.04l-0.22,0.05l0.16,-1.54l1.09,0.23l2.31,-1.69l-0.23,-0.63l-0.64,0.13l-0.33,-0.61l-0.71,0.13l0.71,-2.09l0.22,-1.84l-0.43,-0.29l-0.4,-1.06l0.62,-0.2l0.58,-0.88l-0.43,-0.27l-1.78,0.52l-0.59,-0.36l-2.75,0.29l-0.13,0.71l0.35,0.37l-0.57,0.72l-0.64,-0.46l-0.2,1.01l-0.3,-0.39l0.1,-0.81l0.89,-0.27l0.51,-0.97l0.54,-0.2l0.43,-1.37l1.49,0.53l1.01,-0.36l-0.17,-0.59l-1.8,-0.6l0.03,-1.02l-0.82,-0.63l0.03,-0.53l-0.51,-0.72l0.35,-0.41l-0.16,-0.68l-0.59,-0.0l0.81,-0.68l0.22,-0.62l-0.41,-0.27l-0.79,0.23l-0.68,-1.21l0.4,-0.26l0.21,-1.19l-0.39,-0.3l-0.8,0.09l-0.48,-1.2l-0.52,-0.26l-0.49,0.27l-0.37,-0.39l0.13,-0.25l1.84,0.29l0.62,-0.37l-0.23,-0.67l-1.19,-0.13l0.23,-0.72l-0.6,-0.28l0.07,-0.27l0.81,-0.01l0.81,1.13l0.62,-0.14l0.04,-0.52l-1.77,-2.58l0.17,-0.56l1.59,1.01l0.37,-0.69l-0.4,-0.48l-1.89,-0.89l0.24,-0.34l-0.2,-0.47l0.54,-0.81l-0.81,-0.3l-0.88,0.87l-0.2,-0.58l0.08,-0.72l0.74,-0.62l0.17,-0.66l0.54,-0.5l0.92,-0.14ZM214.84,608.68l-0.72,0.37l-0.3,-0.26l-0.82,0.1l0.74,-0.58l1.09,0.36ZM207.55,585.56l-0.21,-0.06l0.0,-0.24l0.08,0.17l0.13,0.13ZM124.33,461.82l-0.72,-0.79l0.08,-0.62l0.61,0.33l0.02,1.08ZM96.68,478.86l-0.08,-0.01l0.0,-0.01l0.08,0.02ZM87.61,480.71l-0.14,-0.07l0.02,0.0l0.12,0.07ZM87.75,487.21l-0.01,0.0l-0.04,-0.04l0.05,0.04ZM210.21,605.25l0.95,-0.39l0.15,-0.88l1.01,-0.37l0.59,-1.12l0.76,0.04l0.47,2.53l-1.46,2.49l0.34,-0.93l-0.25,-0.46l0.16,-1.74l-0.39,-0.42l-0.42,0.19l-0.21,0.58l-0.85,0.26l-0.29,1.23l-0.57,-1.01ZM204.53,604.41l0.23,-0.52l-0.58,-0.47l0.16,-0.56l-0.41,-0.26l1.05,-0.38l0.21,-0.67l-2.13,-0.56l1.59,-0.9l0.16,-0.86l-0.36,-0.08l0.35,-1.05l0.21,0.49l1.38,0.95l0.65,1.87l-0.18,0.82l-0.68,0.31l-0.12,0.51l-0.79,0.23l-0.06,0.42l0.07,0.51l0.76,-0.09l-0.11,0.29l0.38,0.45l0.87,0.16l0.31,0.67l-0.54,-0.15l-0.4,0.8l0.23,0.39l0.85,0.22l-1.39,0.74l0.11,0.7l0.57,0.32l-0.22,0.31l0.26,0.63l-0.39,0.4l-0.4,-0.2l0.24,-0.39l-0.45,-1.27l0.19,-0.92l-0.49,-0.5l-0.25,-1.87l-0.67,0.18l-0.2,-0.66ZM204.7,605.12l-0.02,0.03l0.0,-0.0l0.02,-0.03ZM204.91,597.51l-0.15,-0.81l-1.16,-0.79l0.71,0.03l0.44,0.61l0.43,-0.21l0.17,0.98l-0.44,0.18ZM204.03,589.42l1.73,1.0l0.58,0.52l0.11,0.57l0.56,0.15l0.24,-0.39l0.54,0.65l-0.54,1.63l-0.36,-1.55l-0.5,-0.5l-0.56,0.05l-0.21,0.96l0.31,0.54l-0.25,0.39l0.51,0.85l-0.29,0.21l-0.99,-0.68l-0.46,0.33l-0.4,-0.11l0.95,-2.9l-0.98,-1.74ZM204.3,590.82l0.01,0.01l0.01,0.01l-0.01,-0.0l-0.01,-0.01ZM201.28,587.91l0.24,-0.68l0.52,-0.17l-0.03,-0.45l0.42,-0.22l0.35,0.32l0.6,-0.35l-0.0,-0.8l-0.62,-0.4l0.7,-0.07l0.24,-0.65l-1.03,-0.28l-0.02,-1.43l0.48,-2.46l0.45,-0.43l0.87,0.22l0.37,0.4l-0.69,2.23l0.41,0.23l0.08,1.49l0.51,0.53l-0.12,0.39l-0.62,-0.22l-0.31,0.8l-0.69,0.34l0.04,0.32l-0.11,0.42l-0.22,0.32l-1.81,0.61ZM204.42,586.23l0.02,0.16l-0.19,-0.27l0.07,0.06l0.09,0.05ZM203.16,578.77l0.02,-0.02l0.01,0.06l-0.01,0.0l-0.03,-0.05ZM202.08,593.81l-0.03,-0.32l0.05,-0.01l0.09,0.19l-0.11,0.14ZM202.25,593.0l-0.25,-0.54l0.16,-0.07l0.34,0.48l-0.24,0.13ZM201.87,592.45l-0.2,-0.02l-0.02,-0.03l0.04,-0.01l0.17,0.06ZM201.97,591.45l-0.19,-0.44l-0.52,-0.05l0.08,-0.24l1.42,-0.09l-0.01,0.81l-0.39,0.25l-0.38,-0.25ZM195.26,578.67l0.22,-0.17l0.78,1.25l0.56,-0.45l-0.67,-1.58l0.86,0.26l0.05,-1.05l0.36,0.52l1.18,-0.42l0.77,0.97l-0.44,0.2l-0.8,-0.21l-0.17,0.33l-0.79,0.06l0.06,0.48l1.78,2.24l-0.07,0.74l0.9,0.5l1.08,0.01l-0.34,1.59l-0.43,-0.2l-2.75,-3.68l-0.61,0.35l0.09,0.44l-0.28,0.18l0.52,0.86l-0.19,0.56l0.29,0.37l-0.52,0.14l-0.52,-1.4l0.33,-0.19l-0.16,-0.49l-1.1,-2.22ZM197.81,583.65l0.03,-0.01l-0.01,0.04l-0.02,-0.02l-0.0,-0.0ZM197.98,583.86l0.65,0.02l0.94,0.95l0.23,2.78l-0.4,2.69l-0.3,0.89l-0.47,0.37l-0.63,1.95l-0.37,-2.3l1.14,-0.59l-0.06,-0.73l-0.28,-0.06l0.01,-0.56l-0.47,-0.3l-0.19,-0.68l-0.71,-0.04l0.39,-0.63l0.81,-0.06l0.22,-0.32l-0.13,-0.54l-0.66,-0.34l0.68,-0.34l-0.35,-1.27l-0.73,-0.27l0.59,-0.15l0.09,-0.48ZM196.56,583.11l-0.06,-0.04l0.15,-0.08l-0.09,0.12ZM199.05,579.52l1.11,-0.49l0.92,0.47l0.59,0.75l-0.17,0.31l-0.56,-0.63l-0.63,-0.07l-0.13,0.57l0.35,0.67l-1.49,-1.58ZM121.86,538.8l-0.0,-0.01l0.02,0.02l-0.02,-0.01ZM122.16,539.2l0.38,0.41l0.59,-0.1l-0.04,-0.62l0.83,0.53l0.61,-1.11l0.62,0.04l-0.13,0.7l0.46,0.88l-0.67,0.48l-0.23,-0.84l-0.37,-0.03l-0.81,0.68l-0.2,-0.29l-0.67,0.31l-0.36,-1.02ZM125.68,539.91l0.02,-0.0l-0.01,0.0l-0.01,-0.0ZM126.24,540.18l-0.05,-0.09l0.07,0.07l-0.02,0.02ZM126.1,539.97l-0.36,-0.07l0.27,-0.16l0.09,0.23ZM111.97,541.9l0.13,-1.11l-0.41,-0.51l0.57,-0.47l0.58,-0.31l0.5,0.27l1.58,-0.22l0.55,0.47l-0.75,0.07l0.02,0.5l0.56,0.37l-0.31,0.99l0.56,1.75l0.45,0.16l0.28,-0.39l-0.23,-0.7l0.33,-1.09l0.38,0.2l0.37,-0.33l1.06,0.15l0.41,-0.28l0.62,0.17l0.21,0.41l0.91,-0.72l0.49,0.31l-0.22,0.73l0.26,0.4l0.49,-0.02l0.33,-0.47l1.39,0.19l-0.09,0.39l-0.85,0.24l-0.21,0.41l0.21,1.1l0.75,0.33l-0.77,0.3l-2.35,-2.03l-0.88,0.42l-0.02,0.69l-0.56,-0.49l-0.44,0.12l-0.27,0.58l-1.74,-0.5l-0.49,0.58l-0.32,-0.15l-0.13,-0.86l-0.79,-0.03l-1.07,-1.18l-1.1,-0.44ZM119.11,544.38l0.82,0.17l0.33,0.72l-0.52,-0.07l-0.2,-0.66l-0.42,-0.16ZM117.78,540.47l-0.76,-0.83l0.17,-0.28l0.83,0.02l-0.24,1.09ZM121.13,540.99l0.32,0.07l-0.59,0.51l0.31,-0.44l-0.03,-0.14ZM113.0,545.5l-0.71,0.24l-0.07,-0.11l0.36,-0.03l0.42,-0.1ZM111.68,543.33l0.69,-0.15l0.23,0.13l-0.51,0.43l-0.41,-0.41ZM76.93,452.59l0.44,-0.56l0.74,-0.21l0.04,0.98l0.81,0.62l0.81,1.25l1.59,0.48l1.11,0.77l0.29,0.97l-0.62,0.7l1.28,1.78l-0.03,0.76l0.83,0.73l0.06,0.6l-0.76,-0.35l-1.49,0.03l-0.08,-1.15l-0.71,-1.29l0.16,-0.62l-1.2,-2.9l-0.96,-0.77l-1.79,-0.42l-0.51,-1.4ZM84.52,461.74l0.69,0.18l0.56,0.73l-0.43,0.12l-0.82,-1.03ZM75.58,485.5l0.07,-0.44l1.7,1.61l0.78,-0.27l0.53,0.4l0.88,-0.0l-0.06,0.37l0.83,0.24l0.29,0.89l1.02,0.89l-0.67,0.62l-0.55,1.49l-2.66,-1.39l-0.92,-0.99l-0.64,-2.06l-0.55,-0.58l-0.06,-0.77ZM55.82,528.18l0.22,-0.57l1.29,0.26l2.05,-0.81l0.73,0.9l0.76,-0.1l1.99,0.58l0.55,0.5l0.05,0.8l-0.49,1.14l-1.03,0.31l-2.5,-1.87l-2.52,0.16l-1.15,-0.81l0.05,-0.5ZM37.73,525.86l0.44,0.13l0.4,0.44l-0.66,-0.33l-0.17,-0.24ZM43.99,527.71l-0.32,-0.33l-0.55,0.04l0.82,-0.2l0.41,-0.61l-1.11,-1.43l0.35,-0.53l1.55,0.81l-0.4,0.52l0.03,0.83l-0.39,0.13l-0.39,0.76ZM42.84,527.18l-0.0,-0.0l0.0,0.0l0.0,0.0ZM43.98,526.54l0.02,-0.01l0.01,0.01l-0.02,0.0l-0.0,-0.0ZM42.63,527.12l-0.35,0.44l-0.22,-0.21l0.3,-0.36l-0.18,-0.32l0.39,-0.07l0.05,0.51ZM42.72,526.39l-0.0,-0.06l0.01,0.01l-0.01,0.05ZM31.87,524.21l0.91,-0.8l0.8,0.02l0.72,0.69l-1.15,0.35l-1.28,-0.25ZM35.31,524.02l0.44,-0.89l0.8,-0.04l0.97,0.45l0.25,0.65l-0.43,0.37l-2.04,-0.54ZM4.9,508.63l0.28,0.1l-0.04,0.24l-0.12,0.03l-0.12,-0.37ZM6.12,508.53l-0.05,-0.66l0.53,0.07l0.12,0.71l-0.59,-0.13Z\",\n            name: \"Alaska\"\n          },\n          \"US-NJ\": {\n            path: \"M801.65,165.2l1.31,-1.55l0.48,-1.57l0.5,-0.62l0.54,-1.45l0.11,-2.05l0.67,-1.35l0.92,-0.71l14.12,4.16l-0.4,6.03l-0.35,0.55l-0.23,-0.44l-0.7,0.11l-0.26,1.18l-0.76,0.97l0.12,1.42l-0.46,0.6l0.08,1.71l0.58,0.62l1.2,0.29l1.38,-0.43l2.3,0.24l0.9,6.92l-0.56,0.39l0.18,0.66l-0.61,0.95l0.46,0.58l-0.21,0.6l0.53,1.94l-0.47,2.0l0.11,0.61l0.62,0.64l-0.39,1.13l-0.49,0.45l-0.01,0.59l-0.93,1.13l0.02,0.52l-1.07,0.1l0.09,1.21l0.64,0.83l-0.82,0.56l-0.18,1.15l1.05,0.77l-0.31,0.29l-0.17,-0.44l-0.53,-0.18l-0.5,0.22l-0.44,1.51l-1.28,0.61l-0.2,0.45l0.46,0.55l0.8,0.06l-0.66,1.26l-0.26,1.5l-0.68,0.65l0.19,0.48l0.4,0.04l-0.89,1.57l0.07,0.95l-1.65,1.72l-0.12,-1.34l0.36,-2.44l-0.11,-0.87l-0.58,-0.82l-0.89,-0.28l-1.11,0.34l-0.81,-0.35l-1.51,0.88l-0.31,-0.7l-1.62,-0.96l-1.0,0.04l-0.65,-0.71l-0.7,0.07l-3.24,-2.03l-0.06,-1.73l-1.02,-0.94l0.48,-0.68l0.0,-0.87l0.43,-0.83l-0.12,-0.73l0.51,-1.18l1.2,-1.16l2.6,-1.49l0.54,-0.86l-0.38,-0.85l0.5,-0.37l0.47,-1.44l1.24,-1.7l2.52,-2.22l0.18,-0.67l-0.47,-0.82l-4.26,-2.78l-0.75,-1.05l-0.9,0.24l-0.48,-0.33l-1.24,-2.46l-1.62,-0.02l-1.0,-3.44l1.02,-1.03l0.36,-2.23l-1.87,-1.91Z\",\n            name: \"New Jersey\"\n          },\n          \"US-CO\": {\n            path: \"M364.23,239.52l-1.22,65.86l-29.29,-0.9l-29.38,-1.43l-29.35,-1.95l-32.17,-2.75l8.32,-87.13l27.79,2.39l28.22,1.92l29.58,1.46l27.95,0.87l-0.46,21.65Z\",\n            name: \"Colorado\"\n          },\n          \"US-MD\": {\n            path: \"M740.67,219.62l-2.04,-10.06l19.85,-4.49l-0.66,1.29l-0.94,0.08l-1.54,0.81l0.16,0.7l-0.42,0.49l0.23,0.78l-1.76,0.5l-1.48,0.03l-1.14,-0.39l0.21,-0.36l-0.3,-0.49l-1.11,-0.31l-0.47,1.8l-1.63,2.84l-1.37,-0.39l-1.03,0.62l-0.41,1.26l-1.6,1.93l-0.36,1.04l-0.88,0.45l-1.3,1.87ZM760.74,204.54l36.93,-9.13l8.48,26.19l0.45,0.26l1.06,-0.21l8.18,-2.08l-0.9,0.53l0.31,0.64l0.52,0.01l0.37,0.76l0.52,-0.05l-0.38,1.96l-0.12,-0.26l-0.47,0.07l-0.73,0.86l-0.17,2.7l-0.6,0.19l-0.36,0.71l-0.02,1.66l-3.62,1.37l-0.45,0.7l-2.2,0.43l-0.56,0.65l-0.3,-1.09l0.5,-0.31l0.86,-1.84l-0.4,-0.51l-0.45,0.12l0.08,-0.5l-0.44,-0.42l-2.29,0.63l0.3,-0.6l1.15,-0.83l-0.17,-0.69l-1.36,-0.18l0.38,-2.24l-0.18,-1.02l-0.91,0.16l-0.53,1.76l-0.34,-0.68l-0.62,-0.07l-0.44,0.47l-0.5,1.39l0.53,1.02l-2.87,-2.14l-0.43,-0.19l-0.61,0.36l-0.73,-0.76l0.33,-1.67l0.76,-0.6l-0.08,-1.35l2.55,0.23l0.78,-1.5l-0.32,-1.42l-0.72,0.27l-0.28,1.29l-0.98,-0.25l-0.38,-1.07l-0.52,-0.28l-0.55,0.23l-0.22,-0.68l-0.63,0.08l1.0,-0.82l0.22,-1.04l-0.54,-0.55l-0.75,0.83l-0.21,-0.61l1.06,-0.92l-0.25,-0.65l-0.54,-0.08l-0.51,-0.75l-0.42,0.22l-0.53,-0.37l0.83,-1.03l-0.24,-1.02l0.84,-1.95l-0.07,-0.86l-0.46,0.02l-0.66,0.66l-0.56,-0.16l-0.48,0.45l-0.19,0.97l-0.95,-1.2l0.75,-3.46l0.59,-0.51l0.07,-0.74l3.89,-0.78l0.49,-0.41l-0.23,-0.67l-0.45,-0.07l-2.38,0.56l0.88,-1.55l1.42,-0.05l0.35,-0.5l-0.99,-0.67l0.44,-1.9l-0.63,-0.32l-0.48,0.39l-0.87,1.96l0.21,-2.02l-0.59,-0.34l-0.88,1.43l-1.42,0.34l-0.31,1.65l0.39,0.53l0.65,0.12l-1.45,1.92l-0.2,-1.64l-0.64,-0.42l-0.61,0.73l0.07,1.45l-0.85,-0.29l-1.16,0.64l0.02,0.71l1.01,0.27l-0.37,0.54l-0.83,0.22l-0.05,0.34l-0.44,-0.04l-0.35,0.64l1.2,1.22l-0.29,0.17l-1.52,-0.76l-1.33,0.48l0.16,0.69l0.82,0.1l1.26,1.21l1.49,0.58l0.1,0.28l-0.44,0.33l-1.37,0.5l-0.12,1.19l1.83,1.04l0.47,0.63l-0.66,-0.43l-1.05,0.29l0.2,0.64l0.92,0.48l-0.34,0.47l0.4,1.15l0.6,0.09l-0.63,1.26l0.13,0.43l0.63,0.65l1.28,4.18l2.83,2.58l-0.01,0.35l-0.38,0.54l-0.67,-1.23l-1.21,-0.22l-1.69,-0.87l-1.51,-3.64l-0.74,-0.68l-0.28,0.69l1.17,3.94l0.65,0.92l1.45,0.81l1.3,0.31l1.49,1.39l0.89,-0.33l0.37,1.32l1.47,1.47l0.1,1.07l-1.08,-0.68l-0.33,-1.23l-0.63,-0.45l-0.45,0.04l-0.13,0.44l0.27,0.78l-0.74,0.13l-0.62,-0.73l-1.16,-0.38l-1.53,0.0l-0.92,0.43l-0.55,-0.2l-1.0,-2.19l-1.26,-0.71l-0.46,0.14l0.01,0.48l1.19,2.0l-0.67,-0.12l-0.28,-0.5l-0.89,-0.4l-1.61,-2.6l-0.48,-0.14l-0.43,1.47l-0.25,-0.74l-0.62,-0.04l-0.4,0.46l0.33,0.72l-0.18,0.69l-0.64,0.59l-0.57,-0.26l-0.63,-1.86l0.25,-1.14l0.71,-0.37l0.2,-0.51l-0.37,-0.52l0.83,-0.52l0.21,-1.61l1.06,-0.35l0.07,-0.66l-0.33,-0.42l0.23,-0.42l-0.38,-0.38l-0.04,-0.7l1.27,-2.2l-0.14,-0.54l-2.72,-1.68l-0.56,0.14l-0.69,1.19l-1.81,-0.37l-1.09,-1.19l-2.96,-0.09l-1.25,-0.91l0.61,-1.35l-0.4,-0.97l-1.19,-0.3l-0.89,-0.66l-2.69,0.07l-0.36,-0.23l-0.11,-1.26l-1.04,-0.6l0.09,-1.2l-0.51,-0.29l-0.49,0.19l-0.23,-0.64l-0.52,-0.13l0.26,-0.83l-0.45,-0.58l-0.69,-0.12l-1.81,0.67l-2.24,-1.27ZM790.07,212.25l0.29,-0.0l0.93,0.21l-0.44,0.4l-0.78,-0.61ZM796.79,218.15l0.0,0.16l-0.13,-0.11l0.13,-0.06ZM803.02,225.62l-0.02,0.33l-0.21,-0.15l0.23,-0.19ZM806.99,229.08l-0.16,0.3l-0.12,0.07l0.02,-0.25l0.26,-0.12ZM797.54,220.57l-0.06,0.01l-0.09,0.03l0.12,-0.06l0.03,0.02ZM797.21,220.69l-0.26,0.57l-0.18,0.12l0.15,-0.61l0.29,-0.07ZM796.09,217.04l-0.61,0.32l-0.58,-0.42l0.02,-0.53l0.16,-0.23l0.68,0.3l0.32,0.56ZM794.46,213.09l-0.25,0.5l-0.8,0.39l0.15,-1.17l0.9,0.27Z\",\n            name: \"Maryland\"\n          },\n          \"US-MA\": {\n            path: \"M820.4,120.02l30.04,-8.0l1.53,-1.8l0.34,-1.48l0.95,-0.35l0.61,-1.04l1.17,-1.05l1.35,-0.1l-0.44,1.05l1.03,0.32l0.21,1.55l1.17,0.55l-0.06,0.32l0.39,0.28l1.31,0.19l-0.17,0.56l-2.29,1.79l-0.05,1.07l0.45,0.16l-1.11,1.41l0.23,1.08l-1.01,0.96l0.58,1.41l1.4,0.45l0.5,0.63l1.36,-0.57l0.33,-0.59l1.2,0.09l0.79,0.47l0.23,0.68l1.79,1.37l-0.07,1.25l-0.56,0.55l0.12,0.6l1.23,0.66l1.73,-0.23l0.68,1.2l0.21,1.14l0.89,0.68l1.33,0.41l1.48,-0.12l0.43,0.38l1.05,-0.23l2.92,-2.34l0.82,-1.11l0.54,0.02l0.56,1.86l-3.32,1.52l-0.94,0.82l-2.75,0.98l-0.49,1.64l-1.93,1.37l-0.82,-2.64l0.11,-1.34l-0.55,-0.31l-0.5,0.39l-0.93,-0.1l-0.3,0.51l0.25,0.92l-0.26,0.79l-0.4,0.06l-0.63,1.1l-0.6,-0.2l-0.5,0.48l0.22,1.86l-0.9,0.87l-0.63,-0.8l-0.47,0.01l-0.11,0.55l-0.26,0.03l-0.71,-2.03l-1.02,-0.35l0.44,-2.5l-0.21,-0.4l-0.78,0.4l-0.29,1.47l-0.69,0.2l-1.4,-0.64l-0.78,-2.12l-0.8,-0.22l-0.78,-2.15l-0.49,-0.24l-6.13,2.0l-0.3,-0.15l-14.84,4.19l-0.28,0.5l-0.46,-0.28l-0.86,0.17l-9.54,2.36l-0.25,-0.18l-0.32,-14.66ZM860.63,110.12l-0.02,-0.37l-0.14,-0.48l0.51,0.23l-0.35,0.62ZM876.24,122.86l-0.12,-0.42l0.25,0.35l-0.13,0.06ZM875.23,121.15l-0.78,0.0l-0.55,-1.2l0.56,0.44l0.77,0.76ZM871.43,119.57l-0.08,0.14l-0.09,-0.07l0.0,-0.0l0.17,-0.07Z\",\n            name: \"Massachusetts\"\n          },\n          \"US-AL\": {\n            path: \"M608.67,337.4l25.17,-2.91l19.4,-2.75l14.04,43.29l1.01,2.45l1.17,1.59l0.59,1.87l2.24,2.5l0.92,1.8l-0.11,2.13l1.8,1.13l-0.17,0.74l-0.63,0.1l-0.16,0.7l-0.98,0.84l-0.22,2.29l0.25,1.48l-0.76,2.3l-0.14,1.84l1.1,2.94l1.21,1.52l0.53,1.6l-0.08,5.02l-0.25,0.81l0.48,2.03l1.35,1.16l1.14,2.07l-47.64,6.92l-0.42,0.61l-0.08,2.99l2.64,2.75l2.0,0.96l-0.34,2.7l0.56,1.61l0.43,0.39l-0.94,1.69l-1.24,1.0l-1.13,-0.75l-0.34,0.49l0.66,1.46l-2.81,1.05l0.29,-0.63l-0.45,-0.86l-0.99,-0.76l-0.1,-1.11l-0.57,-0.22l-0.52,0.61l-0.32,-0.1l-0.89,-1.53l0.41,-1.67l-0.97,-2.21l-1.32,-0.65l-0.3,-0.89l-0.56,-0.17l-0.37,0.61l0.15,0.35l-0.77,3.1l-0.01,5.08l-0.59,0.0l-0.24,-0.71l-2.22,-0.44l-1.64,0.31l-5.46,-31.98l-0.99,-66.48l-0.02,-0.37l-1.07,-0.63l-0.69,-1.02Z\",\n            name: \"Alabama\"\n          },\n          \"US-MO\": {\n            path: \"M468.72,225.49l24.71,-0.73l18.94,-1.42l22.1,-2.58l0.42,0.35l0.39,0.91l2.43,1.65l0.29,0.74l1.21,0.87l-0.51,1.36l-0.1,3.21l0.78,3.65l0.95,1.44l0.03,1.59l1.11,1.37l0.46,1.55l4.96,4.1l1.06,1.69l4.93,3.31l0.7,1.15l0.27,1.62l0.5,0.82l-0.18,0.69l0.47,1.8l0.97,1.63l0.77,0.73l1.04,0.16l0.83,-0.56l0.84,-1.4l0.57,-0.19l2.41,0.61l1.68,0.76l0.84,0.77l-0.97,1.95l0.26,2.28l-2.37,6.86l0.01,1.02l0.7,1.92l4.67,4.05l1.99,1.05l1.46,0.09l1.66,1.3l1.92,0.8l1.5,2.11l2.04,0.83l0.42,2.96l1.72,2.9l-1.1,1.94l0.18,1.38l0.75,0.33l2.31,4.25l1.94,0.92l0.55,-0.32l0.0,-0.65l0.87,1.1l1.07,-0.08l0.14,1.85l-0.37,1.07l0.53,1.59l-1.07,3.86l-0.51,0.07l-1.37,-1.13l-0.65,0.13l-0.78,3.34l-0.52,0.74l0.13,-1.06l-0.56,-1.09l-0.97,-0.2l-0.74,0.63l0.02,1.05l0.53,0.66l-0.04,0.7l0.58,1.34l-0.2,0.4l-1.2,0.39l-0.17,0.41l0.15,0.55l0.86,0.84l-1.71,0.37l-0.14,0.62l1.53,1.97l-0.89,0.75l-0.63,2.13l-10.61,1.42l1.06,-2.28l0.87,-0.61l0.18,-0.87l1.43,-0.96l0.25,-0.96l0.63,-0.37l0.29,-0.59l-0.22,-2.28l-1.05,-0.75l-0.2,-0.77l-1.09,-1.18l-39.24,3.6l-37.71,2.58l-3.21,-58.18l-1.03,-0.63l-1.2,-0.02l-1.52,-0.73l-0.19,-0.93l-1.11,-1.3l-0.36,-1.55l-0.55,-0.09l-0.3,-0.56l-1.13,-0.66l-1.4,-1.84l0.73,-0.51l0.09,-1.24l1.12,-1.27l0.09,-0.79l1.01,0.16l0.56,-0.43l-0.2,-2.24l-1.02,-0.74l-0.32,-1.1l-1.17,-0.01l-1.31,0.96l-0.81,-0.7l-0.73,-0.17l-2.67,-2.35l-1.05,-0.28l0.13,-1.6l-1.32,-1.72l0.1,-1.01l-0.37,-0.36l-1.01,-0.18l-0.59,-0.85l-0.84,-0.26l0.07,-0.52l-1.24,-2.88l-0.0,-0.74l-0.4,-0.49l-0.85,-0.29l-0.05,-0.54ZM583.78,294.53l-0.1,-0.1l-0.08,-0.15l0.11,-0.01l0.07,0.26Z\",\n            name: \"Missouri\"\n          },\n          \"US-MN\": {\n            path: \"M443.67,67.68l-0.4,-1.37l0.05,-1.19l-0.48,-0.53l-1.36,-3.77l0.0,-3.22l-0.47,-1.97l0.27,-1.12l-0.57,-2.32l0.73,-2.56l-2.06,-6.89l29.55,-1.22l0.47,-0.81l-0.38,-7.12l2.84,0.15l1.24,0.82l0.38,2.69l1.73,5.31l0.13,2.3l0.52,0.86l1.46,1.05l1.3,0.49l3.23,-0.36l0.39,0.85l0.54,0.38l5.25,0.04l0.38,0.24l0.54,1.58l0.72,0.61l4.27,-0.78l0.77,-0.65l0.07,-0.69l0.69,-0.35l1.74,-0.44l3.97,-0.02l1.42,0.7l3.38,0.66l-1.01,0.79l0.0,0.82l0.51,0.45l2.91,-0.06l0.52,2.08l1.58,2.29l0.71,0.05l1.03,-0.78l-0.04,-1.73l2.67,-0.46l1.43,2.16l2.01,0.79l1.54,0.18l0.54,0.57l-0.03,0.83l0.58,0.35l1.32,0.06l0.19,0.75l0.41,0.1l1.2,-0.22l1.12,0.22l2.21,-0.85l2.78,-2.55l2.49,-1.54l1.24,2.52l0.96,0.51l2.23,-0.66l0.87,0.36l5.98,-1.3l0.56,0.18l1.32,1.64l1.24,0.59l0.62,-0.01l1.61,-0.83l1.3,0.1l-0.89,1.0l-4.69,3.07l-6.35,2.82l-3.68,2.47l-2.15,2.49l-0.96,0.57l-6.62,8.67l-0.95,0.61l-1.07,1.56l-1.96,1.97l-4.18,3.55l-0.86,1.78l-0.55,0.44l-0.14,0.96l-0.78,-0.01l-0.46,0.51l0.98,12.22l-0.79,1.2l-1.04,0.08l-0.52,0.82l-0.83,0.15l-0.61,0.83l-2.06,1.19l-0.94,1.86l0.06,0.72l-1.69,2.39l-0.01,2.06l0.38,0.91l2.15,0.39l1.42,2.49l-0.52,1.92l-0.71,1.25l-0.05,2.12l0.45,1.32l-0.71,1.23l0.91,3.14l-0.51,4.08l3.95,3.03l3.02,0.4l1.89,2.25l2.87,0.5l2.45,1.93l2.39,3.59l2.63,1.8l2.09,0.09l1.07,0.71l0.88,0.1l0.82,1.36l1.26,0.84l0.28,2.03l0.68,1.3l0.39,4.82l-40.62,3.2l-40.63,2.09l-1.46,-38.98l-1.52,-2.05l-2.57,-0.79l-0.94,-1.91l-1.46,-1.79l0.21,-0.68l2.82,-2.34l0.93,-2.03l0.43,-2.53l-0.35,-1.58l0.23,-1.86l-0.18,-1.51l-0.5,-1.03l-0.18,-2.33l-1.81,-2.59l-0.47,-1.13l-0.21,-2.16l-0.66,-0.98l0.15,-1.66l-0.35,-1.52l0.53,-2.69l-1.08,-1.85l-0.49,-8.32l-0.42,-0.79l0.06,-3.92l-1.58,-3.95l-0.53,-0.65Z\",\n            name: \"Minnesota\"\n          },\n          \"US-CA\": {\n            path: \"M3.07,175.36l0.87,-1.1l0.96,0.24l1.21,-2.15l0.92,0.12l0.64,-0.23l0.41,-0.57l-0.27,-0.82l-0.71,-0.36l1.52,-2.68l0.12,-0.78l-0.43,-0.48l0.1,-1.34l0.85,-0.88l1.17,-2.25l1.26,-3.01l0.39,-2.1l-0.28,-1.0l0.05,-3.89l-1.25,-1.24l0.92,-1.24l0.94,-2.81l32.73,8.13l32.57,7.34l-13.67,64.67l25.44,34.66l36.59,51.09l13.3,17.72l-0.19,2.73l0.73,0.94l0.21,1.71l0.85,0.63l0.81,2.56l-0.07,0.91l0.63,1.46l-0.16,1.36l3.8,3.82l0.01,0.5l-1.95,1.53l-3.11,1.26l-1.2,1.99l-1.72,1.14l-0.33,0.81l0.38,1.03l-0.51,0.51l-0.1,0.9l0.08,2.29l-0.6,0.72l-0.64,2.44l-2.02,2.47l-1.6,0.14l-0.42,0.51l0.33,0.89l-0.59,1.34l0.54,1.11l-0.01,1.19l-0.78,2.68l0.57,1.02l2.74,1.13l0.34,0.83l-0.19,2.4l-1.18,0.78l-0.42,1.37l-2.27,-0.62l-1.26,0.61l-43.36,-3.35l0.04,-0.76l0.39,-0.07l0.3,-0.56l-0.12,-1.38l-1.1,-1.65l-1.08,0.02l0.16,-1.13l-0.24,-1.11l0.35,-0.13l0.36,-0.93l0.05,-2.47l-0.39,-2.64l-2.46,-5.66l-3.47,-4.07l-1.29,-1.98l-2.42,-2.12l-2.07,-2.86l-2.01,-1.04l-1.23,0.18l-0.29,0.88l-1.56,-0.95l-0.11,-0.38l0.63,-0.52l0.22,-0.95l-0.46,-2.65l-1.0,-1.95l-0.7,-0.58l-2.17,-0.43l-1.45,-0.13l-1.11,0.3l-0.49,-0.59l-1.66,-0.65l-3.05,-1.95l-1.24,-1.35l-0.54,-2.64l-0.89,-0.66l-1.77,-2.24l-1.66,-1.3l-1.92,-0.51l-1.09,0.24l-1.1,-0.72l-1.51,-0.14l-2.0,-1.52l-2.34,-0.84l-5.72,-0.67l-0.4,-1.69l-1.01,-0.93l-0.92,-0.35l1.28,-2.62l-0.33,-1.38l0.84,-2.21l-0.65,-1.27l1.18,-2.39l0.32,-2.41l-0.99,-1.24l-1.32,-0.26l-1.34,-1.39l-0.08,-0.75l1.44,-1.4l-0.5,-2.3l-0.34,-0.54l-1.68,-0.76l-1.88,-4.27l-1.79,-1.16l-0.32,-2.63l-1.62,-2.61l-0.22,-2.75l-1.01,-0.76l-1.13,-3.38l-2.16,-2.3l-0.75,-1.6l0.04,-3.93l0.55,-1.46l-0.54,-0.6l0.52,-0.53l0.56,0.71l0.58,-0.1l0.8,-0.59l0.9,-1.64l0.83,0.01l0.08,-0.52l-0.51,-0.5l0.4,-0.88l-0.05,-0.93l-0.49,-2.22l-0.61,-1.2l-0.6,-0.44l-0.92,0.25l-2.02,-0.43l-1.45,-1.81l-0.86,-2.15l-0.53,-0.38l-0.32,-1.18l-0.46,-0.5l0.04,-1.12l0.85,-2.26l-0.21,-2.94l-0.89,-1.29l1.1,-2.74l0.21,-2.34l1.33,-0.2l0.23,1.52l-0.62,0.31l-0.1,2.71l1.73,1.17l0.7,1.42l1.0,0.72l0.4,1.01l0.89,0.41l0.85,-0.4l-0.19,-1.18l-0.68,-0.51l-0.37,-1.53l0.13,-1.99l-0.54,-1.26l-0.37,-0.02l-0.11,-0.14l0.62,-0.35l-0.0,-0.34l-1.62,-1.2l0.69,-0.67l-0.17,-1.88l-0.94,-0.36l-0.3,-0.61l1.07,-0.66l0.99,-0.01l0.96,-0.71l1.25,1.03l2.63,-0.1l5.01,2.23l0.53,-0.22l0.04,-0.59l0.61,-0.67l-0.3,0.75l0.39,0.76l0.81,-0.06l0.35,-0.49l1.35,1.6l0.7,-0.16l0.02,-0.38l-0.53,-1.14l-0.97,-0.74l-0.27,-0.8l-0.66,-0.38l-1.09,-0.07l0.27,-0.58l-0.25,-0.54l-2.48,1.29l-0.7,-0.34l-0.75,0.18l-0.18,-0.55l-1.09,-0.25l0.28,-0.66l-0.36,-0.69l-1.09,-0.17l-1.86,1.57l-0.34,-0.46l-1.36,-0.54l-0.36,-0.88l-1.36,-1.35l-2.59,0.52l0.1,0.92l-0.7,1.21l0.53,0.72l-0.88,0.92l-0.07,2.28l-0.37,-0.09l-1.52,-2.07l-1.18,-0.34l-1.16,-2.44l-1.41,-1.2l0.09,-0.69l-0.68,-0.18l0.73,-1.18l0.93,2.05l0.44,0.25l0.33,-0.38l-1.77,-5.65l-0.41,-0.59l-0.57,-0.2l0.2,-0.84l-0.53,-2.28l-2.72,-3.32l-1.0,-2.99l-3.45,-6.17l-0.03,-0.38l1.14,-1.43l0.12,-0.85l-0.51,-6.75l0.61,-1.87l1.33,-2.02l0.4,-3.04l-0.36,-1.21l0.19,-2.39l-0.7,-1.04l-1.24,-3.68l-0.57,-0.53l0.1,-0.93l-0.32,-0.88l-1.04,-0.88l-2.01,-3.32l0.52,-1.23l-0.26,-2.71l2.38,-3.44ZM33.36,240.61l0.01,-0.01l0.01,0.01l-0.02,-0.01ZM45.67,326.22l-0.02,0.03l0.02,-0.03l0.01,0.01ZM31.63,240.38l-0.09,0.14l-0.63,0.23l-0.2,-0.07l0.92,-0.3Z\",\n            name: \"California\"\n          },\n          \"US-IA\": {\n            path: \"M452.94,162.22l42.82,-2.19l40.55,-3.19l0.96,2.52l2.0,1.0l0.08,0.59l-0.9,1.8l-0.16,1.04l0.9,5.09l0.92,1.26l0.39,1.75l1.46,1.72l4.94,0.85l1.27,2.03l-0.3,1.03l0.29,0.66l3.61,2.37l0.85,2.41l3.84,2.31l0.62,1.68l-0.31,4.21l-1.64,1.98l-0.5,1.94l0.13,1.28l-1.26,1.36l-2.51,0.97l-0.89,1.18l-0.55,0.25l-4.56,0.83l-0.89,0.73l-0.61,1.71l-0.15,2.55l0.4,1.08l2.01,1.47l0.54,2.65l-1.87,3.25l-0.22,2.24l-0.52,1.42l-2.88,1.39l-1.02,1.02l-0.2,0.99l0.72,0.87l0.2,2.15l-0.58,0.23l-1.34,-0.82l-0.31,-0.76l-1.29,-0.82l-0.29,-0.51l-0.88,-0.36l-0.3,-0.82l-0.95,-0.68l-22.3,2.61l-15.12,1.17l-7.59,0.51l-20.78,0.47l-0.22,-1.06l-1.3,-0.73l-0.33,-0.67l0.58,-1.16l-0.21,-0.95l0.22,-1.39l-0.36,-2.19l-0.6,-0.73l0.07,-3.65l-1.05,-0.5l0.05,-0.91l0.71,-1.02l-0.05,-0.44l-1.31,-0.56l0.33,-2.54l-0.41,-0.45l-0.89,-0.16l0.23,-0.8l-0.3,-0.58l-0.51,-0.25l-0.74,0.23l-0.42,-2.81l0.5,-2.36l-0.2,-0.67l-1.36,-1.71l-0.08,-1.92l-1.78,-1.54l-0.36,-1.74l-1.09,-0.94l0.03,-2.18l-1.1,-1.87l0.21,-1.7l-0.27,-1.08l-1.38,-0.67l-0.87,-2.17l0.05,-0.63l-1.81,-1.82l0.56,-1.61l0.54,-0.47l0.73,-2.68l0.0,-1.68l0.55,-0.69l0.21,-1.19l-0.51,-2.24l-1.33,-0.29l-0.05,-0.73l0.45,-0.56l-0.0,-1.71l-0.95,-1.42l-0.05,-0.87Z\",\n            name: \"Iowa\"\n          },\n          \"US-MI\": {\n            path: \"M612.25,185.8l1.83,-2.17l0.7,-1.59l1.18,-4.4l1.43,-3.05l1.01,-5.05l0.09,-5.37l-0.86,-5.54l-2.4,-5.17l0.6,-0.5l0.3,-0.79l-0.57,-0.42l-1.08,0.55l-3.82,-7.03l-0.21,-1.1l1.13,-2.68l-0.01,-0.97l-0.74,-3.13l-1.29,-1.65l-0.05,-0.62l1.73,-2.73l1.22,-4.14l-0.21,-5.35l-0.77,-1.59l1.09,-1.15l0.81,-0.02l0.56,-0.47l-0.27,-3.49l1.08,-0.11l0.67,-1.43l1.18,0.47l0.66,-0.33l0.76,-2.59l0.82,-1.2l0.56,-1.68l0.55,-0.18l-0.58,0.87l0.6,1.65l-0.71,1.8l0.71,0.42l-0.48,2.61l0.88,1.43l0.73,-0.05l0.52,0.56l0.64,-0.24l0.89,-2.26l0.67,-3.51l-0.08,-2.07l-0.76,-3.42l0.58,-1.02l2.13,-1.64l2.74,-0.55l0.98,-0.63l0.28,-0.64l-0.25,-0.54l-1.76,-0.11l-0.96,-0.86l-0.52,-1.98l1.85,-2.98l-0.1,-0.73l1.72,-0.23l0.74,-0.94l4.16,2.0l0.83,0.12l1.98,-0.4l1.37,0.4l1.19,1.04l0.53,1.15l0.77,0.49l2.41,-0.29l1.7,1.01l1.92,0.09l0.8,0.64l3.27,0.45l1.1,0.77l-0.01,1.12l1.04,1.31l0.64,0.21l0.37,0.91l-0.14,0.55l-0.67,-0.25l-0.94,0.57l-0.23,1.83l0.81,1.29l1.6,0.98l0.69,1.37l0.65,2.26l-0.12,1.73l0.77,5.57l-0.14,0.59l-0.58,0.21l-0.48,0.96l-0.74,0.07l-0.8,0.81l-0.17,4.47l-1.12,0.49l-0.18,0.82l-1.86,0.43l-0.72,0.6l-0.58,2.61l0.26,0.45l-0.21,0.52l0.25,2.57l1.38,1.31l2.89,0.84l0.91,-0.08l1.08,-1.23l0.6,-1.44l0.62,0.19l0.39,-0.24l1.01,-3.59l0.6,-1.06l-0.08,-0.51l0.97,-1.45l1.39,-0.39l1.07,-0.69l0.83,-1.1l0.87,-0.44l2.06,0.59l1.13,0.7l1.0,1.09l1.21,2.16l2.01,5.91l0.82,1.6l1.03,3.71l1.49,3.63l1.29,1.74l-0.34,3.92l0.45,2.48l-0.48,2.79l-0.36,0.45l-0.57,-1.21l0.03,-0.85l-1.46,-0.52l-0.47,0.08l-1.48,1.36l-0.06,0.83l0.55,0.67l-0.82,0.57l-0.29,0.79l0.28,2.94l-0.48,0.75l-1.62,0.92l-1.06,1.85l-0.43,3.73l0.27,1.56l-0.33,0.93l-0.42,0.19l0.02,0.91l-0.64,0.3l-0.89,1.6l-0.5,1.29l-0.02,1.05l-0.52,0.91l-20.5,4.22l-0.15,-0.92l-0.45,-0.33l-31.44,4.71ZM621.47,115.84l0.0,-0.07l0.11,-0.12l-0.01,0.03l-0.11,0.16ZM621.73,114.93l-0.07,-0.16l0.07,-0.14l-0.0,0.3ZM543.5,88.02l4.87,-2.38l3.55,-3.62l5.77,-1.36l1.39,-0.84l2.36,-2.71l0.98,0.04l1.52,-0.73l1.0,-2.24l2.82,-2.85l0.23,1.72l1.85,0.59l0.05,1.44l0.67,0.14l0.51,0.6l-0.17,3.14l0.44,0.95l-0.34,0.47l0.2,0.47l0.74,-0.02l1.08,-2.21l1.08,-0.89l-0.42,1.15l0.58,0.45l0.83,-0.67l0.52,-1.22l1.0,-0.43l3.09,-0.25l1.5,0.21l1.18,0.93l1.54,0.44l0.47,1.05l2.31,2.58l1.17,0.55l0.53,1.55l0.73,0.34l1.87,0.07l0.73,-0.4l1.06,-0.06l1.4,-1.09l1.0,1.11l1.1,0.64l1.01,-0.25l0.68,-0.82l1.87,1.06l0.64,-0.34l1.65,-2.58l2.81,-1.89l1.7,-1.65l0.92,0.11l3.27,-1.21l5.17,-0.25l3.25,-2.09l2.28,-0.88l1.52,-0.11l-0.01,3.24l0.29,0.71l-0.36,1.1l0.46,0.7l0.68,0.28l0.91,-0.41l2.2,0.7l1.14,-0.43l1.03,-0.87l0.66,0.48l0.21,0.7l0.85,0.22l1.22,-0.76l0.79,-1.57l0.69,-0.28l1.06,0.23l1.35,-1.15l0.53,-0.01l0.22,0.08l-0.3,2.02l0.75,1.32l-1.11,-0.04l-0.36,0.5l0.84,1.83l-0.87,1.04l0.12,0.45l0.83,0.79l1.37,-0.42l0.6,0.47l0.62,0.04l0.18,1.19l0.98,0.87l1.53,0.51l-1.17,0.68l-4.96,-0.15l-0.53,0.3l-1.35,-0.17l-0.88,0.41l-0.66,-0.75l-1.63,-0.07l-0.59,0.47l-0.07,1.22l-0.49,0.76l0.38,2.05l-0.92,-0.22l-0.89,-0.92l-0.77,-0.13l-1.96,-1.65l-2.41,-0.6l-1.6,0.04l-1.04,-0.5l-2.89,0.47l-0.61,0.45l-1.18,2.52l-3.47,0.73l-0.57,0.77l-2.06,-0.33l-2.82,0.93l-0.68,0.83l-0.56,2.51l-0.78,0.28l-0.81,0.87l-0.65,0.28l0.16,-1.95l-0.74,-0.91l-1.02,0.34l-0.77,0.92l-0.97,-0.39l-0.68,0.17l-0.37,0.4l0.1,0.82l-0.73,2.01l-1.2,0.59l-0.1,-1.37l-0.46,-1.06l0.34,-1.69l-0.17,-0.37l-0.66,-0.17l-0.45,0.57l-0.6,2.13l-0.22,2.57l-1.12,0.91l-1.26,3.03l-0.62,2.65l-2.55,5.33l-0.69,0.73l0.12,0.91l-1.4,-1.28l0.18,-1.74l0.63,-1.69l-0.41,-0.81l-0.62,-0.31l-1.36,0.85l-1.16,0.1l0.04,-1.29l0.81,-1.45l-0.41,-1.34l0.3,-1.09l-0.58,-0.98l0.15,-0.83l-1.9,-1.55l-1.1,-0.06l-0.59,-0.44l-1.48,-0.0l0.3,-1.36l-0.94,-1.45l-1.13,-0.51l-2.23,-0.1l-3.2,-0.71l-1.55,0.59l-1.43,-0.42l-1.62,0.17l-4.56,-1.94l-15.37,-2.5l-1.99,-3.39l-1.88,-0.96l-0.76,0.26l-0.1,-0.29ZM603.39,98.63l-0.0,0.52l-0.46,0.32l-0.7,1.39l0.08,0.57l-0.65,-0.58l0.91,-2.15l0.83,-0.06ZM570.53,72.73l-0.51,-0.27l-1.16,0.06l-0.04,-1.56l1.0,-1.02l1.18,-2.09l1.83,-1.5l0.63,-0.0l0.53,-0.58l2.08,-0.89l3.34,-0.42l1.1,0.66l-0.54,0.38l-1.32,-0.12l-2.26,0.78l0.15,0.87l0.71,0.13l-1.19,0.98l-1.4,1.89l-0.69,0.28l-0.36,1.45l-1.15,1.36l-0.66,2.04l-0.67,-0.87l0.75,-0.97l0.14,-1.95l-0.84,-0.23l-0.6,0.92l-0.05,0.67Z\",\n            name: \"Michigan\"\n          },\n          \"US-GA\": {\n            path: \"M654.05,331.64l22.02,-3.57l20.65,-3.86l-0.07,0.58l-2.59,3.35l-0.41,1.73l0.11,1.23l0.82,0.78l1.84,0.8l1.03,0.12l2.7,2.03l0.84,0.24l1.9,-0.37l0.6,0.25l0.8,1.64l1.51,1.6l1.04,2.5l1.33,0.82l0.84,1.16l0.56,0.26l1.0,1.77l1.07,0.3l1.17,0.99l3.81,1.85l2.41,3.16l2.25,0.58l2.53,1.67l0.5,2.34l1.25,1.01l0.47,-0.16l0.31,0.49l-0.1,0.62l0.79,0.73l0.79,0.09l0.56,1.2l4.99,1.88l0.4,1.78l1.54,1.73l1.02,2.01l-0.07,0.8l0.48,0.69l0.11,1.24l1.04,0.79l1.16,0.17l1.25,0.62l0.28,0.53l0.57,0.23l1.12,2.56l0.76,0.57l0.08,2.68l0.77,1.48l1.38,0.9l1.52,-0.27l1.44,0.76l1.45,0.12l-0.59,0.78l-0.55,-0.35l-0.47,0.28l-0.4,0.99l0.62,0.91l-0.38,0.48l-1.38,-0.16l-0.77,-0.55l-0.65,0.44l0.26,0.71l-0.49,0.52l0.36,0.6l1.44,0.25l-0.58,1.35l-1.43,0.27l-1.08,-0.44l-0.6,0.21l0.03,0.82l1.45,0.6l-1.76,3.73l0.36,1.73l-0.48,0.97l0.85,1.48l-2.29,-0.19l-0.46,0.29l0.06,0.63l0.55,0.34l2.76,0.24l1.07,0.66l-0.02,0.34l-0.56,0.22l-0.88,1.95l-0.5,-1.41l-0.45,-0.13l-0.6,0.33l-0.15,0.84l0.34,0.96l-0.6,0.12l-0.03,0.84l-0.3,0.16l0.07,0.46l1.34,1.15l-1.09,1.03l0.32,0.47l0.77,0.08l-0.39,0.92l0.06,0.88l-0.46,0.51l1.1,1.66l0.03,0.76l-0.79,0.33l-2.64,-0.17l-4.06,-0.96l-1.31,0.35l-0.18,0.74l-0.68,0.26l-0.35,1.25l0.28,2.08l0.95,1.36l0.13,4.25l-1.97,0.4l-0.54,-0.92l-0.12,-1.3l-1.33,-1.82l-49.21,5.14l-0.72,-0.56l-0.86,-2.7l-0.94,-1.51l-0.56,-0.38l0.16,-0.68l-0.73,-1.51l-1.82,-1.81l-0.43,-1.75l0.25,-0.8l0.06,-5.18l-0.6,-1.81l-1.19,-1.47l-1.03,-2.65l0.12,-1.65l0.78,-2.36l-0.25,-1.53l0.19,-2.11l1.62,-1.33l0.46,-1.47l-0.55,-0.61l-1.42,-0.69l0.09,-2.15l-0.97,-1.87l-2.18,-2.42l-1.03,-2.81l-0.75,-0.68l-0.17,-0.96l-0.77,-1.37l-13.99,-43.11Z\",\n            name: \"Georgia\"\n          },\n          \"US-AZ\": {\n            path: \"M128.51,384.14l0.44,-1.81l1.29,-1.29l0.53,-1.12l0.48,-0.25l1.66,0.62l0.96,-0.03l0.52,-0.46l0.28,-1.17l1.31,-1.0l0.24,-2.73l-0.46,-1.24l-0.84,-0.66l-2.07,-0.66l-0.3,-0.61l0.8,-2.4l0.0,-1.39l-0.52,-1.19l0.57,-0.86l-0.2,-0.87l1.57,-0.27l2.29,-2.81l0.65,-2.43l0.65,-0.81l0.02,-3.17l0.55,-0.62l-0.29,-1.43l1.71,-1.14l1.03,-1.85l3.16,-1.29l2.03,-1.58l0.26,-0.53l-0.13,-1.04l-3.25,-3.49l-0.51,-0.22l0.22,-1.26l-0.66,-1.46l0.07,-0.91l-0.88,-2.76l-0.84,-0.56l-0.19,-1.65l-0.69,-0.8l0.19,-3.54l0.58,-0.87l-0.3,-0.86l1.03,-0.4l0.4,-1.42l0.14,-3.2l-0.76,-3.66l0.76,-2.55l-0.4,-3.0l0.85,-2.56l-0.8,-1.87l-0.03,-0.92l0.78,-1.88l2.54,-0.63l1.75,0.99l1.43,-0.19l0.96,2.24l0.79,0.71l1.54,0.14l1.01,-0.5l1.02,-2.27l0.94,-1.19l2.57,-16.94l42.42,5.78l42.56,4.67l-11.82,123.64l-36.87,-4.05l-36.33,-18.97l-28.43,-15.56Z\",\n            name: \"Arizona\"\n          },\n          \"US-MT\": {\n            path: \"M166.39,57.3l0.69,-0.1l0.33,-0.38l-0.9,-1.99l0.83,-0.96l-0.39,-1.3l0.09,-0.96l-1.24,-1.93l-0.24,-1.49l-1.03,-1.33l-1.19,-2.44l3.53,-20.64l43.67,6.71l43.04,5.23l42.75,3.84l43.13,2.53l-3.53,86.04l-28.1,-1.47l-26.82,-1.91l-26.78,-2.4l-25.83,-2.79l-0.44,0.35l-1.22,10.41l-1.51,-2.01l-0.03,-0.91l-1.18,-2.35l-1.25,-0.74l-1.8,0.92l0.03,1.05l-0.72,0.42l-0.34,1.56l-2.42,-0.41l-1.91,0.57l-0.92,-0.85l-3.36,0.09l-2.38,-0.96l-1.68,0.58l-0.84,1.49l-4.66,-1.6l-1.3,0.37l-1.12,0.9l-0.31,0.67l-1.65,-1.4l0.22,-1.43l-0.9,-1.71l0.4,-0.36l0.07,-0.62l-1.17,-3.08l-1.45,-1.25l-1.44,0.36l-0.21,-0.64l-1.08,-0.9l-0.41,-1.37l0.68,-0.61l0.2,-1.41l-0.77,-2.38l-0.77,-0.35l-0.31,-1.58l-1.51,-2.54l0.23,-1.51l-0.56,-1.26l0.34,-1.4l-0.73,-0.86l0.48,-0.98l-0.21,-0.74l-1.14,-0.75l-0.13,-0.59l-0.85,-0.91l-0.8,-0.4l-0.51,0.37l-0.07,0.74l-0.7,0.27l-1.13,1.22l-1.75,0.37l-1.21,1.07l-1.08,-0.85l-0.64,-1.01l-1.06,-0.44l0.02,-0.86l0.74,-0.63l0.24,-1.06l-0.61,-1.6l0.9,-1.09l1.07,-0.08l0.83,-0.8l-0.26,-1.14l0.38,-1.07l-0.95,-0.81l-0.04,-0.81l0.66,-1.28l-0.59,-1.07l0.74,-0.07l0.38,-0.42l-0.04,-1.77l1.83,-3.73l-0.14,-1.05l0.89,-0.62l0.6,-3.16l-0.78,-0.5l-1.8,0.37l-1.33,-0.11l-0.64,-0.55l0.37,-0.83l-0.62,-0.97l-0.66,-0.23l-0.72,0.35l-0.07,-0.95l-1.74,-1.62l0.04,-1.84l-1.68,-1.82l-0.08,-0.69l-1.55,-2.88l-1.07,-1.29l-0.57,-1.63l-2.35,-1.34l-0.95,-1.95l-1.43,-1.19Z\",\n            name: \"Montana\"\n          },\n          \"US-MS\": {\n            path: \"M555.51,431.02l0.67,-0.97l-1.05,-1.76l0.18,-1.63l-0.81,-0.87l1.69,-0.25l0.47,-0.54l0.4,-2.74l-0.77,-1.82l1.56,-1.79l0.25,-3.58l0.74,-2.26l1.89,-1.25l1.15,-1.97l1.4,-1.04l0.34,-0.78l-0.04,-0.99l-0.63,-0.96l1.14,-0.28l0.96,-2.58l0.91,-1.31l-0.16,-0.86l-1.54,-0.43l-0.35,-0.96l-1.83,-1.04l-0.07,-2.14l-0.93,-0.74l-0.45,-0.84l-0.02,-0.37l1.14,-0.29l0.46,-0.69l-0.26,-0.89l-1.41,-0.49l0.23,-1.77l0.98,-1.54l-0.77,-1.06l-1.08,-0.31l-0.15,-2.82l0.9,-0.54l0.23,-0.8l-0.62,-2.52l-1.25,-0.66l0.7,-1.33l-0.07,-2.22l-2.02,-1.52l1.13,-0.47l0.12,-1.41l-1.34,-0.89l1.58,-2.04l0.93,-0.31l0.36,-0.69l-0.52,-1.56l0.42,-1.35l-0.9,-0.89l2.84,-1.1l0.59,-0.76l-0.09,-1.07l-1.41,-0.95l1.39,-1.08l0.62,-1.77l0.94,-0.17l0.34,-0.97l-0.2,-0.77l1.48,-0.43l1.22,-1.21l0.07,-3.53l-0.46,-1.53l0.36,-1.78l0.73,0.09l0.68,-0.33l0.42,-0.87l-0.41,-1.06l2.72,-1.71l0.58,-1.06l-0.29,-1.28l36.44,-4.1l0.86,1.26l0.85,0.45l0.99,66.49l5.52,32.95l-0.73,0.69l-1.53,-0.3l-0.9,-0.94l-1.32,1.06l-1.23,0.17l-2.17,-1.26l-1.85,-0.19l-0.83,0.36l-0.34,0.44l0.32,0.41l-0.56,0.36l-3.96,1.66l-0.05,-0.5l-0.96,-0.52l-1.0,0.05l-0.58,1.0l0.76,0.61l-1.59,1.21l-0.33,1.28l-0.69,0.3l-1.33,-0.06l-1.16,-1.86l-0.08,-0.89l-0.92,-1.47l-0.21,-1.0l-1.4,-1.63l-1.16,-0.54l-0.47,-0.77l0.1,-0.62l-0.69,-0.92l0.21,-1.99l0.5,-0.93l0.66,-2.98l-0.06,-1.22l-0.43,-0.29l-34.66,3.41Z\",\n            name: \"Mississippi\"\n          },\n          \"US-SC\": {\n            path: \"M697.55,324.05l4.86,-2.69l1.02,-0.05l1.11,-1.38l3.93,-1.9l0.45,-0.88l0.63,0.22l22.71,-3.36l0.07,1.22l0.42,0.57l0.71,0.01l1.21,-1.3l2.82,2.54l0.46,2.48l0.55,0.52l19.74,-3.49l22.74,15.07l0.02,0.55l-2.48,2.18l-2.44,3.67l-2.41,5.72l-0.09,2.74l-1.08,-0.21l0.85,-2.72l-0.63,-0.23l-0.76,0.87l-0.56,1.38l-0.11,1.55l0.83,0.95l1.05,0.23l0.44,0.91l-0.75,0.08l-0.41,0.56l-0.87,0.02l-0.24,0.68l0.94,0.45l-1.1,1.13l-0.07,1.02l-1.34,0.63l-0.5,-0.61l-0.5,-0.08l-1.06,0.87l-0.56,1.77l0.43,0.87l-1.19,1.23l-0.61,1.44l-1.2,1.01l-0.9,-0.4l0.27,-0.6l-0.53,-0.74l-1.37,0.31l0.25,1.2l-0.52,0.03l0.05,0.76l2.02,1.01l-0.12,0.39l-0.88,0.94l-1.22,0.23l-0.24,0.51l0.33,0.45l-2.29,1.34l-1.42,-0.84l-0.56,0.11l-0.1,0.67l1.19,0.78l-1.54,1.57l-0.72,-0.75l-0.5,0.52l-0.0,0.74l-1.54,-0.37l-1.34,-0.84l-0.44,0.5l0.16,0.53l-1.73,0.17l-0.44,0.37l-0.06,0.78l2.07,0.05l-0.26,0.55l0.42,0.25l1.91,-0.15l0.11,0.22l-0.97,0.86l-0.32,0.78l0.57,0.49l0.94,-0.53l0.03,0.21l-1.12,1.09l-0.99,0.43l-0.21,-2.04l-0.69,-0.27l-0.22,-1.54l-0.88,-0.15l-0.3,0.58l0.86,2.69l-1.12,-0.66l-0.63,-1.0l-0.39,-1.76l-0.65,-0.21l-0.52,-0.63l-0.69,0.0l-0.27,0.6l0.84,1.02l0.01,0.68l1.11,1.83l-0.02,0.86l1.22,1.17l-0.62,0.35l0.03,0.98l-1.2,3.56l-1.51,-0.78l-1.52,0.26l-0.97,-0.68l-0.54,-1.03l-0.17,-2.93l-0.86,-0.75l-1.06,-2.47l-1.04,-0.95l-3.23,-1.33l-0.49,-2.65l-1.12,-2.17l-1.43,-1.58l-0.06,-1.07l-0.76,-1.21l-4.81,-1.69l-0.58,-1.27l-1.21,-0.37l0.02,-0.7l-0.53,-0.87l-0.87,0.0l-0.73,-0.61l0.03,-1.21l-0.66,-1.26l-2.7,-1.78l-2.16,-0.52l-2.36,-3.12l-3.93,-1.93l-1.22,-1.03l-0.83,-0.12l-1.04,-1.81l-0.51,-0.22l-0.91,-1.21l-1.18,-0.68l-0.99,-2.42l-1.54,-1.65l-1.02,-1.87l-1.06,-0.37l-1.93,0.37l-0.46,-0.16l-2.75,-2.19l-1.06,0.02l-2.23,-1.27l0.36,-2.22l2.6,-3.31l0.15,-1.07ZM750.36,375.19l0.73,-0.08l0.51,0.45l-1.23,1.9l0.28,-1.22l-0.3,-1.06Z\",\n            name: \"South Carolina\"\n          },\n          \"US-RI\": {\n            path: \"M851.1,141.46l0.22,-0.46l-0.53,-2.22l-3.14,-10.0l5.61,-1.84l0.76,2.06l0.8,0.25l0.19,0.73l0.08,0.42l-0.77,0.25l0.03,0.29l0.51,1.45l0.59,0.5l-0.75,0.28l-0.3,0.6l0.87,0.97l-0.14,1.23l0.89,1.9l0.03,1.67l-0.27,0.71l-0.9,0.16l-3.59,2.35l-0.18,-1.31ZM855.89,131.53l0.26,0.1l0.01,0.1l-0.17,-0.08l-0.1,-0.12ZM857.28,132.21l0.25,0.54l-0.05,0.32l-0.15,0.01l-0.05,-0.87Z\",\n            name: \"Rhode Island\"\n          },\n          \"US-AR\": {\n            path: \"M498.76,376.91l-1.42,-38.01l-4.48,-23.98l37.68,-2.58l39.02,-3.58l0.8,1.6l1.01,0.7l0.11,1.77l-0.77,0.57l-0.22,0.94l-1.42,0.93l-0.29,1.04l-0.83,0.54l-1.19,2.59l0.02,0.7l0.53,0.26l10.94,-1.46l0.86,0.93l-1.18,0.37l-0.52,0.96l0.25,0.49l0.84,0.41l-3.6,2.7l0.02,0.84l0.83,1.04l-0.6,1.15l0.62,0.97l-1.42,0.74l-0.11,1.44l-1.45,2.09l0.12,1.64l0.91,3.1l-0.15,0.27l-1.08,-0.01l-0.33,0.26l-0.51,1.73l-1.52,0.95l-0.04,0.51l0.79,0.91l0.05,0.65l-1.11,1.21l-2.02,1.13l-0.21,0.62l0.43,1.0l-0.19,0.27l-1.23,0.03l-0.42,0.67l-0.32,1.89l0.47,1.57l0.02,3.08l-1.27,1.09l-1.54,0.13l0.23,1.49l-0.21,0.48l-0.93,0.25l-0.59,1.77l-1.49,1.19l-0.02,0.93l1.39,0.76l-0.03,0.7l-1.23,0.3l-2.24,1.23l0.03,0.67l0.99,0.82l-0.45,1.14l0.53,1.38l-1.09,0.62l-1.9,2.57l0.52,0.7l1.0,0.49l0.01,0.58l-0.98,0.29l-0.42,0.64l0.51,0.84l1.63,1.01l0.06,1.77l-0.59,0.98l-0.09,0.84l1.34,0.79l0.5,2.17l-1.09,1.01l0.06,2.11l-51.45,4.07l-0.83,-11.53l-1.18,-0.85l-0.9,0.16l-0.83,-0.35l-0.93,0.39l-1.22,-0.33l-0.57,0.72l-0.47,0.01l-0.49,-0.48l-0.82,-0.15l-0.63,-1.0Z\",\n            name: \"Arkansas\"\n          }\n        },\n        height: 612.395412685768,\n        projection: {\n          type: \"aea\",\n          centralMeridian: -100\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"vietnam\", {\n        width: \"210\",\n        height: \"297\",\n        paths: {\n          1: {\n            name: \"An Giang\",\n            path: \"m70.81 255.70l0.57 -0.74c0.38 0.04 0.38 0.07 0.64 -0.26c0.25 -0.31 0.38 -0.03 0.51 0.01c-0.30 0.59 1.56 0.12 1.80 0.00c0.17 -0.08 -0.02 -0.34 0.04 -0.48c0.09 -0.24 0.38 -0.07 0.58 -0.14c0.12 -0.04 0.44 -0.34 0.57 -0.48l0.15 -0.14l0.00 0.00c0.00 -0.21 -0.06 -0.37 0.14 -0.51c0.20 -0.13 0.34 -0.08 0.30 -0.39c-0.02 -0.20 0.02 -0.24 0.19 -0.35c0.19 -0.11 0.17 -0.32 0.25 -0.50c0.12 -0.25 0.55 0.08 0.55 -0.43c0.05 -0.43 -0.25 -0.97 -0.58 -1.23c-0.57 -0.44 -0.78 -0.39 -1.50 -0.42c-0.60 -0.02 -0.71 -0.33 -1.19 -0.48c-0.72 -0.23 -0.60 -1.21 -0.85 -1.74c0.02 -0.19 0.33 -0.86 0.02 -0.95c-0.22 -0.06 -1.30 0.27 -0.82 -0.38c0.23 -0.31 0.30 -0.39 -0.18 -0.47c-0.50 -0.07 -0.10 -0.44 -0.48 -0.61c-0.18 -0.08 -0.35 0.02 -0.38 -0.23c-0.03 -0.27 -0.32 -0.25 -0.42 -0.48l-0.22 -0.71l0.00 0.00c-0.85 -0.11 -1.66 -0.20 -1.80 -0.43c-0.19 -0.31 0.28 -0.57 -0.32 -0.57l-0.47 0.35c0.08 0.23 0.00 0.48 -0.12 0.76c-0.24 0.55 0.24 1.62 0.69 1.92c0.18 0.12 0.27 0.32 0.33 0.53l-0.49 0.48c-0.34 0.42 -0.59 0.52 -1.02 0.74c-0.43 0.21 -1.05 0.73 -1.33 1.10c-0.61 0.49 -0.91 1.92 -1.74 1.98c-0.32 0.02 -0.66 -0.00 -1.00 -0.06l0.00 0.00l0.11 0.44l1.30 2.16l2.60 0.55l1.94 1.34l1.37 1.16l0.25 -0.35l0.00 0.00z\"\n          },\n          2: {\n            name: \"B\\xE0 R\\u1ECBa - V\\u0169ng T\\xE0u\",\n            path: \"m110.30 245.89l0.01 0.49c0.19 0.15 0.46 0.36 0.54 0.60c0.14 0.45 0.15 0.79 0.40 1.22c0.22 0.38 0.35 0.92 0.35 1.36l0.00 0.00c-0.66 0.52 -1.11 1.28 -1.52 1.28c-0.61 0.00 -1.01 0.49 -1.32 0.43c-0.51 -0.10 -0.78 0.08 -1.33 0.12c-0.36 0.03 -0.55 0.51 -0.75 0.54l-0.05 0.13c-0.40 0.10 -0.64 1.06 -1.04 0.84c-0.54 -0.30 -0.21 -0.52 -1.01 -0.21c-0.65 0.25 -1.78 1.89 -2.10 0.69c-0.15 -0.56 -0.57 -0.73 0.33 -1.03c0.00 -0.20 -0.58 -0.63 -0.76 -0.81c-0.38 -0.38 0.10 -0.87 -0.04 -1.28l0.00 0.00c0.00 -0.09 -0.13 -0.34 -0.15 -0.42c-0.02 -0.10 -0.08 -0.16 -0.11 -0.25c-0.09 -0.23 0.28 -0.37 0.18 -0.64l-0.43 -0.30l0.00 0.00c0.17 -0.59 -0.08 -0.44 0.57 -0.69c0.77 -0.30 1.54 0.20 1.76 -0.93c0.04 -0.20 -0.02 -0.79 0.28 -0.79c0.29 0.00 0.38 -0.33 0.64 -0.33c0.24 0.37 1.28 0.27 1.72 0.25c0.73 -0.04 -0.13 1.70 0.80 1.37c0.29 -0.09 0.39 -0.60 0.55 -0.86c0.11 -0.17 0.41 -0.58 0.57 -0.68c0.20 -0.12 0.41 -0.22 0.57 -0.41c0.59 -0.75 0.72 0.19 1.37 0.32l0.00 0.00z\"\n          },\n          3: {\n            name: \"B\\u1EA1c Li\\xEAu\",\n            path: \"m73.38 266.59c0.25 -0.05 0.66 -0.01 0.85 -0.16c0.02 0.02 0.54 0.08 0.57 0.08c0.04 0.13 0.64 0.19 0.79 0.19c0.38 0.00 0.66 -0.27 1.01 -0.35l0.00 0.00l-0.11 2.47c0.02 0.01 0.01 0.01 0.01 0.04c0.21 0.07 0.11 0.74 0.64 0.74c0.36 0.00 0.45 -0.24 0.77 0.08c0.29 0.29 0.35 0.05 0.63 0.18c0.22 0.10 0.35 0.39 0.62 0.43c0.25 0.04 0.38 -0.17 0.57 -0.31c0.15 -0.11 0.91 -0.19 1.04 -0.07c0.17 0.15 0.08 0.67 0.46 0.32c0.35 -0.32 0.87 -0.09 0.64 0.36c-0.09 0.19 -0.38 0.11 -0.51 0.21c-0.25 0.19 -0.07 0.29 -0.18 0.54l0.17 1.30l0.00 0.00c-1.25 0.44 -2.45 0.93 -3.65 1.62c-1.74 0.87 -2.59 1.14 -3.34 2.22l0.00 0.00c-0.24 -0.41 -0.82 -0.81 -1.32 -0.69c-0.72 0.17 -0.66 -0.40 -1.16 -0.53c-0.34 -0.09 -0.56 0.02 -0.56 -0.45l-0.01 -1.17c-0.69 -0.69 0.18 -0.93 0.61 -1.41c0.45 -0.50 -0.73 -0.68 -0.49 -1.36c0.13 -0.35 0.46 -0.46 0.68 -0.75l0.00 0.00l0.38 -0.12l-0.45 -1.05c0.00 -0.60 0.12 -0.79 0.52 -1.19c0.37 -0.37 -0.33 -0.91 -0.50 -1.24c-0.07 -0.15 -0.13 -0.78 0.14 -0.61c0.33 0.21 0.34 0.30 0.76 0.36c0.05 0.01 0.15 0.11 0.15 0.11c0.02 0.10 0.14 0.17 0.24 0.20l0.00 0.00z\"\n          },\n          4: {\n            name: \"B\\u1EAFc K\\u1EA1n\",\n            path: \"m75.98 31.35c0.00 0.03 0.02 0.17 -0.01 0.19c0.01 0.03 0.06 0.18 0.06 0.20c0.47 0.16 1.06 1.41 1.06 1.91c-0.02 0.01 -0.02 0.02 -0.02 0.05c-0.02 0.01 -0.01 -0.00 -0.01 0.02c-0.95 0.32 -0.32 1.30 -0.58 1.68c-0.16 0.23 -0.55 -0.09 -0.75 0.47c-0.10 0.29 0.02 0.58 -0.06 0.88c-0.50 0.10 -0.43 0.81 -0.51 1.15c-1.12 0.22 -0.73 0.99 -0.46 1.73c0.17 0.33 0.18 0.39 0.54 0.48c0.00 0.38 -0.35 0.61 -0.32 1.05c0.02 0.29 0.13 0.43 0.06 0.74c-0.13 0.56 0.28 0.71 0.46 1.12c0.08 0.18 0.22 0.37 0.33 0.51c0.07 0.09 0.51 0.44 0.52 0.49l0.00 0.00c0.80 -0.43 0.62 -1.05 1.57 -1.22c0.96 -0.16 0.45 -0.89 1.50 -0.05c0.60 0.48 0.67 0.01 0.67 0.95c0.00 0.74 0.21 1.20 0.07 2.04c-0.13 0.77 0.28 1.54 0.86 0.49c0.33 -0.60 0.82 -0.35 1.31 -0.72c0.49 -0.37 1.49 -1.34 1.99 -1.27c0.35 0.05 0.23 -0.53 0.74 -0.36c0.37 0.13 0.55 0.22 0.97 0.27l0.00 0.00l0.14 -0.30c0.44 -0.73 -1.05 -2.35 0.51 -2.35c0.44 0.00 1.65 -1.87 1.61 -1.98c-0.26 -0.67 0.49 -1.20 0.01 -1.67c0.03 -0.01 -0.22 -0.24 -0.30 -0.30c-0.13 -0.09 -0.28 -0.18 -0.30 -0.36c-0.04 -0.39 0.41 -0.44 0.23 -0.92l-0.50 -0.54l0.00 0.00c-0.06 -0.06 -0.29 -0.14 -0.29 -0.23c-0.36 -0.12 -0.76 0.34 -1.14 0.06c-0.30 -0.22 -0.06 -0.95 0.01 -1.23c0.12 -0.47 0.01 -1.73 -0.64 -1.84c-0.74 -0.13 -1.05 0.79 -1.76 0.79c-0.78 0.00 -0.79 0.86 -1.76 0.37c-0.17 -0.08 -0.26 -0.31 -0.46 -0.33c-0.51 -0.06 -0.53 -0.06 -0.95 -0.37c-0.33 -0.24 -0.00 -0.76 -0.49 -0.76c-0.15 -0.45 0.02 -0.40 -0.37 -0.82c-0.02 -0.03 -0.02 -0.04 -0.02 -0.07c-0.08 -0.03 0.07 -0.21 0.11 -0.24c0.11 -0.09 0.25 -0.16 0.35 -0.26c0.16 -0.16 0.23 -0.35 0.13 -0.56c-0.17 -0.34 0.09 -0.97 -0.61 -0.72c-0.32 0.12 -0.55 0.14 -0.87 0.18c-0.22 0.03 -0.95 0.58 -0.98 0.47l-0.02 0.00c-0.07 -0.29 -0.36 0.17 -0.39 0.26c-0.09 0.23 -0.02 0.29 -0.30 0.31c-0.53 0.03 -0.53 0.33 -0.91 0.58l0.00 0.00z\"\n          },\n          5: {\n            name: \"B\\u1EAFc Giang\",\n            path: \"m82.24 55.59l0.38 0.36c0.08 0.14 0.23 0.22 0.33 0.36c0.12 0.17 0.03 0.31 0.09 0.48c0.06 0.16 0.13 0.32 0.13 0.50l0.00 0.00c0.10 0.01 0.46 0.11 0.55 0.16c0.23 -0.13 0.22 -0.07 0.27 -0.38c0.06 -0.30 0.53 -0.26 0.74 -0.13c0.26 0.16 0.02 0.67 0.24 0.77c0.12 0.05 0.37 -0.15 0.58 -0.10c0.16 0.04 0.24 0.23 0.43 0.27c0.28 0.06 0.48 -0.25 0.71 -0.18c0.19 0.06 0.36 0.29 0.51 0.44c0.26 0.27 0.40 0.09 0.70 0.20c-0.00 0.01 0.13 0.27 0.13 0.27c0.10 0.45 0.54 -0.31 0.80 0.14c0.17 0.28 0.34 0.32 0.54 0.53l0.00 0.00c0.12 -0.19 0.28 -0.03 0.35 -0.39c0.04 -0.20 -0.06 -1.28 0.33 -0.86c0.29 0.31 0.42 0.41 0.74 0.06c0.17 -0.19 0.37 -0.13 0.54 -0.27c0.28 -0.24 0.27 -0.55 0.76 -0.49c0.31 0.04 0.60 -0.05 0.90 -0.05l0.00 0.00c0.58 0.02 0.43 0.63 1.17 0.67c0.25 0.01 0.35 0.21 0.55 0.31c0.33 0.17 1.15 0.05 1.57 0.12c0.72 0.12 1.37 0.31 2.12 0.31c0.51 0.00 0.27 -0.34 0.35 -0.61c0.06 -0.21 0.51 0.05 0.65 0.10c0.02 0.00 0.06 0.00 0.07 0.01c0.16 -0.04 0.25 -0.15 0.44 -0.09c0.28 0.09 0.45 0.31 0.70 -0.03c0.37 -0.51 0.68 -0.81 0.56 -1.49c-0.14 -0.77 0.53 -0.55 0.91 -0.77l0.12 -0.26l0.00 0.00c0.00 -0.14 -0.37 -0.32 -0.42 -0.51c-0.07 -0.31 -0.22 -0.37 -0.48 -0.54c-0.36 -0.37 0.49 -0.68 0.21 -1.04c-0.29 -0.37 -0.61 0.40 -1.06 0.10c-0.37 -0.25 0.00 -0.18 -0.45 -0.18c-0.13 -0.41 -0.10 -0.86 -0.61 -0.99c-0.70 -0.17 -0.62 -0.03 -0.62 -0.82c-0.35 -0.12 -0.84 -1.13 -1.35 -0.37c-0.68 1.02 -0.75 -0.22 -1.28 -0.68c-0.35 -0.31 -0.96 -0.11 -1.39 -0.23c-0.82 -0.23 -1.06 0.73 -1.39 1.25c-0.10 0.21 -0.31 0.32 -0.31 0.58c0.00 0.18 0.24 0.32 0.11 0.45c-0.25 0.25 -0.75 0.35 -0.75 0.74c0.00 0.32 -0.39 0.22 -0.56 0.16c-0.29 -0.11 -0.54 0.29 -0.56 0.51c-0.05 0.59 -0.57 0.37 -0.97 0.29c-0.62 -0.13 -0.13 -1.02 -0.88 -0.95c-0.47 -0.10 0.05 -0.66 -0.27 -0.78c-0.34 -0.12 -0.80 0.16 -1.10 -0.02c-0.30 -0.18 -0.25 -0.19 -0.63 -0.19c-0.46 0.00 -0.30 -0.51 -0.46 -0.56c0.00 -0.25 0.09 -0.45 0.07 -0.70c-0.03 -0.35 0.10 -0.37 0.27 -0.62l0.00 0.00c-0.37 -0.37 -0.86 -0.13 -1.19 -0.43c-0.46 -0.41 -0.85 0.27 -1.01 0.68c-0.44 1.11 -0.03 2.23 -0.52 3.34c-0.35 0.79 -1.25 -0.98 -1.25 0.12c0.00 0.45 -0.02 0.71 -0.51 0.55c-0.02 0.05 -0.13 0.27 -0.17 0.39c-0.07 0.20 -0.34 0.07 -0.38 0.14c-0.07 0.12 0.04 0.21 -0.05 0.37l0.00 0.00z\"\n          },\n          6: {\n            name: \"B\\u1EAFc Ninh\",\n            path: \"m86.48 61.94l0.17 -0.33c0.48 0.15 0.44 0.62 1.01 0.38c0.42 -0.18 0.70 -0.37 1.14 -0.24c0.32 0.10 0.36 -0.12 0.44 -0.34c0.05 -0.15 0.31 -0.18 0.24 -0.41c-0.12 -0.39 0.19 -0.50 0.11 -0.79c-0.06 -0.24 -0.15 -0.41 -0.20 -0.67l-0.03 -0.27l0.00 0.00c-0.20 -0.20 -0.38 -0.24 -0.54 -0.53c-0.27 -0.45 -0.71 0.31 -0.80 -0.14c0.00 0.00 -0.13 -0.26 -0.13 -0.27c-0.30 -0.11 -0.44 0.07 -0.70 -0.20c-0.14 -0.14 -0.31 -0.37 -0.51 -0.44c-0.23 -0.08 -0.43 0.24 -0.71 0.18c-0.19 -0.04 -0.27 -0.23 -0.43 -0.27c-0.21 -0.05 -0.46 0.15 -0.58 0.10c-0.22 -0.10 0.02 -0.61 -0.24 -0.77c-0.21 -0.13 -0.68 -0.17 -0.74 0.13c-0.06 0.30 -0.05 0.24 -0.27 0.38c-0.08 -0.05 -0.45 -0.14 -0.55 -0.16l0.00 0.00l-0.45 0.16c0.01 0.23 0.07 0.24 0.01 0.48c-0.03 0.13 0.10 0.20 0.17 0.30c0.16 0.23 0.05 0.56 0.11 0.82c0.08 0.35 0.13 0.96 0.54 1.12c0.21 0.08 0.50 0.03 0.74 0.10c0.28 0.09 0.31 0.35 0.40 0.58l-0.31 0.76l0.00 0.00c0.19 0.08 0.33 0.09 0.53 0.03c0.29 -0.08 0.58 0.02 0.86 -0.09c0.17 -0.06 0.54 0.23 0.71 0.39l0.00 0.00z\"\n          },\n          7: {\n            name: \"B\\u1EBFn Tre\",\n            path: \"m84.90 253.99c-0.18 0.82 -0.06 0.68 0.71 0.90c0.35 0.10 0.80 -0.08 1.13 0.25c0.25 0.25 0.30 0.57 0.52 0.81c0.31 0.34 0.76 0.44 1.10 0.78c0.34 0.34 0.54 0.55 0.79 1.04l0.35 0.44l0.00 0.00l1.62 1.48l2.23 1.53l0.64 1.19l0.00 0.00c0.43 0.22 0.50 1.38 1.22 0.42l0.31 -0.30c0.37 -0.35 0.61 -0.94 0.55 -1.47c-0.04 -0.32 -1.01 -0.79 -0.76 -0.99c0.24 -0.42 0.47 -0.36 0.68 -0.94c0.14 -0.39 0.42 -0.19 0.73 -0.21c0.40 -0.03 1.12 -1.11 1.16 -1.47c0.05 -0.52 -0.21 -0.63 -0.26 -1.07l0.00 0.00c-0.23 -0.19 -0.57 -0.46 -0.77 -0.66c-0.16 -0.16 -0.36 -0.31 -0.55 -0.43c-0.47 -0.29 -1.09 -0.32 -1.63 -0.50c-0.35 -0.11 -0.91 -0.38 -1.26 -0.29c-0.39 -0.17 -0.82 -0.19 -1.16 -0.49c-0.19 -0.17 -0.50 -0.41 -0.74 -0.50c-0.95 -0.36 -0.84 -0.11 -1.70 0.16c-0.28 0.09 -0.80 -0.09 -1.19 0.00c-0.58 0.13 -1.20 0.44 -1.79 0.62c-1.09 0.34 -1.05 -0.20 -1.91 -0.29l0.00 0.00z\"\n          },\n          8: {\n            name: \"B\\xECnh D\\u01B0\\u01A1ng\",\n            path: \"m91.88 239.48l0.39 -0.40c0.24 0.15 0.47 0.16 0.71 0.31c0.39 0.25 0.17 0.39 0.26 0.64c0.14 0.00 0.12 0.54 0.29 0.69c0.22 0.21 0.29 0.28 0.61 0.23c0.65 -0.12 0.37 0.35 0.52 0.62c0.05 0.09 0.23 0.04 0.31 0.20c0.10 0.22 0.03 0.20 0.24 0.33c0.44 0.14 0.08 0.82 0.64 1.00c0.42 0.14 0.27 0.52 0.49 0.82c0.22 0.30 0.41 -0.40 0.66 -0.08c0.15 0.19 0.21 0.47 0.44 0.16c0.24 -0.31 0.38 0.10 0.65 -0.03c0.20 -0.09 0.36 -0.34 0.55 -0.38l0.00 0.00c-0.06 -0.20 -0.92 -0.52 -1.16 -0.87c-0.24 -0.35 0.38 -0.15 0.36 -0.42c-0.03 -0.34 -0.17 -0.34 -0.08 -0.72c0.37 -0.12 0.22 -0.33 0.27 -0.62c0.17 -0.06 0.28 -0.32 0.50 -0.10c0.23 0.24 0.93 0.74 1.29 0.54c0.37 -0.21 0.20 -0.48 0.60 -0.65c0.02 -0.01 0.38 -0.89 0.38 -0.99c0.00 -0.39 -0.02 -0.63 -0.17 -1.02c-0.03 -0.26 -1.02 -0.51 -0.74 -0.92c0.13 -0.19 0.21 -0.16 0.25 -0.41c0.04 -0.21 0.08 -0.35 0.18 -0.53l0.13 -0.50l0.00 0.00c-0.19 -0.19 0.36 -0.44 0.15 -0.73c-0.13 -0.18 -0.81 0.03 -0.96 0.14c-0.13 0.09 -0.38 0.51 -0.51 0.47c-0.28 -0.08 -0.14 -0.57 -0.20 -0.78c-0.12 -0.43 -0.69 -0.32 -1.07 -0.35c-0.23 -0.02 -0.18 -0.37 -0.29 -0.54c-0.26 -0.39 1.35 -1.53 0.14 -1.39c-0.46 0.05 -0.27 0.52 -0.60 0.78c-0.40 0.30 -0.56 0.68 -1.05 0.89c-0.22 0.09 -0.12 0.45 -0.18 0.64c-0.29 0.07 -0.67 -0.27 -0.92 -0.19c-0.20 -0.04 -0.28 -0.25 -0.38 -0.28c-0.08 -0.34 -0.78 0.43 -0.97 0.01c-0.03 -0.06 0.01 -0.85 0.04 -0.93c0.07 -0.16 0.48 -0.19 0.39 -0.41c-0.16 -0.38 -0.05 -0.53 -0.53 -0.38c-0.58 0.19 -0.60 -0.33 -1.12 -0.35c-0.31 -0.01 -0.56 -0.01 -0.85 0.11l0.00 0.00l-0.36 0.47c-0.37 0.31 -0.66 0.27 -0.73 0.87c-0.05 0.36 -0.19 0.68 -0.24 1.03c-0.05 0.28 0.03 0.43 -0.06 0.72c-0.14 0.45 0.25 0.49 0.14 0.96c-0.10 0.41 0.61 0.34 0.61 0.79c0.00 0.20 -0.01 0.42 0.14 0.56c0.15 0.13 0.61 0.15 0.63 0.40c0.01 0.10 0.01 0.21 0.04 0.32c0.03 0.10 0.14 0.19 0.15 0.26l0.00 0.00z\"\n          },\n          9: {\n            name: \"B\\xECnh \\u0110\\u1ECBnh\",\n            path: \"m129.54 178.81c0.12 0.30 -0.10 0.49 0.01 0.76c0.05 0.13 0.38 1.06 -0.02 0.91c-0.14 -0.06 -0.28 -0.21 -0.34 0.00c-0.07 0.26 0.05 0.41 0.08 0.66c0.05 0.21 0.26 0.40 0.28 0.62c0.05 0.75 0.47 1.25 0.51 1.99c0.03 0.49 0.34 0.74 0.41 1.16c0.04 0.28 -0.20 0.35 -0.15 0.73c0.19 0.44 0.45 0.76 0.69 1.15c0.21 0.34 0.23 0.44 0.57 0.66c0.31 0.21 0.29 0.88 0.29 1.24c0.00 0.25 -0.04 0.38 -0.16 0.59c-0.12 0.21 -0.09 0.42 -0.13 0.64c0.18 0.34 0.40 0.77 0.69 1.06c0.29 0.29 0.17 0.59 0.36 0.85c0.36 0.48 0.51 0.70 0.54 1.37c0.02 0.44 -0.31 0.59 -0.24 1.12c0.09 0.42 0.19 0.86 0.40 1.24c0.09 0.15 0.22 0.57 0.10 0.73l0.00 0.00c0.55 0.85 1.05 0.08 1.74 0.69c0.39 0.34 1.10 -0.02 1.45 -0.27c0.27 -0.19 0.35 -0.57 0.80 -0.57c0.86 0.00 0.38 -0.83 0.66 -1.18c0.18 -0.22 0.59 -0.03 0.63 -0.41c0.05 -0.44 0.40 -0.47 0.46 -0.66c0.36 0.00 0.61 0.14 0.86 0.39l0.00 0.00c0.16 -0.31 -0.33 -1.54 0.23 -1.54c0.06 0.25 1.00 0.64 0.95 0.14c-0.03 -0.31 -0.38 -0.53 -0.41 -0.92c-0.04 -0.60 0.10 -1.01 -0.14 -1.55c-0.23 -0.53 -0.67 -0.48 -0.35 -1.34c0.07 -0.69 -0.03 -1.09 -0.48 -1.60c-0.59 -0.67 -0.25 -0.76 0.11 -1.23c-0.20 -0.27 -0.63 -0.63 -0.76 -0.93c-0.32 -0.73 0.15 -1.31 -0.41 -2.05c-0.21 -0.28 -0.55 -0.64 -0.69 -0.93c-0.19 -0.39 0.15 -1.04 0.11 -1.53c-0.25 -0.43 -1.12 -1.99 -1.02 -2.39c0.09 -0.02 0.13 -0.13 0.12 -0.28l0.00 0.00l-0.51 -0.36c0.10 -0.23 -0.21 -0.96 -0.43 -1.06l-1.40 -0.61c-0.41 -0.18 -2.98 0.46 -3.04 0.68c-0.27 1.01 0.39 1.07 -0.89 1.03c-0.49 -0.02 -0.48 0.15 -0.85 0.40l-0.61 0.58l0.00 0.00z\"\n          },\n          10: {\n            name: \"B\\xECnh Ph\\u01B0\\u1EDBc\",\n            path: \"m100.45 236.40c0.81 0.07 2.37 -1.43 2.45 -2.22c0.02 -0.21 -0.28 -0.41 0.06 -0.57c0.44 -0.20 0.48 -0.62 1.02 -0.73l1.74 -0.34l1.55 -0.24l0.00 0.00c-0.06 -0.25 -0.46 -0.36 -0.54 -0.58c-0.14 -0.39 0.12 -0.67 -0.26 -0.98c-0.28 -0.23 -0.43 -0.41 -0.20 -0.78c0.18 -0.28 0.10 -0.62 0.28 -0.90c0.26 -0.40 0.68 -0.28 0.99 -0.54l0.66 -0.14l0.00 0.00c0.09 -0.74 0.72 -0.77 0.79 -1.35c0.04 -0.36 -0.62 -1.27 -0.95 -1.49c-0.52 -0.35 -0.59 -0.64 -0.87 -1.15c-0.34 -0.61 -0.76 -0.45 -1.33 -0.70c-0.34 -0.15 -0.16 -0.62 -0.30 -0.80c0.27 -0.36 -0.12 -0.73 -0.12 -1.00l-0.33 -2.88l0.00 0.00c-0.26 0.09 -0.54 0.17 -0.84 0.25c-0.18 0.00 -0.91 1.21 -0.98 1.44c-0.01 0.04 -1.30 0.99 -1.25 1.19c-0.79 0.11 -2.27 2.00 -3.42 0.97c-1.04 -0.94 -1.53 1.95 -2.73 1.91l-2.38 -0.08c-1.64 -0.06 -2.78 -0.74 -1.64 1.31c0.26 0.47 -0.13 1.15 -0.26 1.73c-0.98 0.24 0.59 1.83 0.25 2.14l0.00 0.00l0.40 0.54c0.03 0.17 -0.00 0.31 0.14 0.44c0.48 0.44 0.45 1.06 -0.21 1.26c-0.46 0.14 -0.58 0.55 -0.58 1.00l0.00 0.00c0.28 -0.13 0.54 -0.13 0.85 -0.11c0.52 0.02 0.54 0.54 1.12 0.35c0.48 -0.16 0.37 -0.01 0.53 0.38c0.09 0.22 -0.32 0.25 -0.39 0.41c-0.03 0.07 -0.07 0.86 -0.04 0.92c0.19 0.43 0.88 -0.34 0.97 -0.01c0.10 0.03 0.18 0.24 0.38 0.28c0.25 -0.08 0.63 0.26 0.92 0.19c0.06 -0.19 -0.04 -0.54 0.18 -0.64c0.49 -0.21 0.65 -0.58 1.05 -0.89c0.33 -0.25 0.14 -0.72 0.60 -0.78c1.21 -0.14 -0.40 1.00 -0.14 1.39c0.11 0.16 0.05 0.52 0.29 0.54c0.39 0.03 0.95 -0.08 1.07 0.35c0.06 0.21 -0.09 0.70 0.20 0.78c0.13 0.04 0.38 -0.39 0.51 -0.47c0.15 -0.10 0.83 -0.32 0.96 -0.14c0.21 0.29 -0.34 0.53 -0.15 0.73l0.00 0.00z\"\n          },\n          11: {\n            name: \"B\\xECnh Thu\\u1EADn\",\n            path: \"m134.83 250.43c-0.12 -0.18 -0.22 -0.36 -0.19 -0.59c0.04 -0.38 0.51 0.20 0.56 0.30c0.06 0.10 0.16 0.27 0.17 0.38c0.01 0.16 -0.33 0.09 -0.41 0.06l-0.13 -0.14zm-24.52 -4.54l0.89 -0.58c0.50 -0.45 0.01 -0.80 -0.01 -1.28c-0.04 -0.86 -0.09 -1.90 -0.97 -2.29l-1.10 -0.48l-0.41 -0.16c-0.30 -0.12 0.06 -0.20 0.09 -0.35c0.11 -0.04 0.09 -0.18 0.13 -0.28c0.06 -0.17 0.36 -0.20 0.36 -0.42c0.00 -0.16 -0.09 -0.28 -0.18 -0.40c-0.16 -0.22 0.26 -0.30 0.32 -0.55c0.03 -0.12 0.01 -0.23 0.07 -0.35c0.09 -0.20 0.26 -0.34 0.35 -0.54c0.06 -0.21 0.09 -0.38 0.30 -0.49c0.25 -0.12 0.44 -0.36 0.38 -0.66c-0.07 -0.36 -0.26 -0.44 0.07 -0.76l0.21 -0.67l0.00 0.00c0.49 -0.30 0.32 -0.84 0.89 -0.13c0.18 0.22 0.83 0.34 1.13 0.54c0.83 0.56 1.00 -0.54 1.69 -0.69c0.66 -0.13 1.56 -0.12 2.23 -0.04c0.66 0.19 1.93 0.36 2.43 0.83c0.41 0.39 0.24 0.95 0.35 1.40c0.11 0.47 0.61 -0.29 0.80 -0.42c0.71 -0.46 1.70 -0.62 2.26 -1.19c0.36 -0.36 1.23 -1.13 1.40 -1.58c-0.35 -0.58 -0.93 -0.54 -0.49 -1.42c0.45 -0.24 1.05 -0.78 1.45 -0.17c0.21 0.32 0.66 -0.26 1.08 -0.10c0.31 0.12 0.80 -0.15 1.14 -0.14c0.68 0.02 1.45 0.70 1.45 -0.47l0.00 0.00l1.19 0.05c0.35 0.32 0.25 1.48 0.97 1.36c1.59 -0.26 0.53 0.87 1.63 1.42c0.41 0.20 1.55 0.54 1.32 1.11l0.00 0.00c-0.20 -0.05 -0.40 0.00 -0.62 0.16l-0.64 0.13c-0.26 0.05 -0.29 0.39 -0.62 0.39c-0.03 0.10 -0.16 0.27 -0.05 0.42c-0.45 0.59 -0.30 0.68 -0.49 1.36c-0.11 0.40 -1.12 -0.23 -1.23 0.11c-0.06 0.00 -0.02 0.00 -0.13 0.06c-0.33 0.00 -0.84 0.53 -0.97 0.02c-0.23 0.00 -1.57 1.24 -1.69 1.60c-0.34 1.02 -0.71 1.23 -1.75 1.06c-0.35 -0.06 -0.29 0.18 -0.58 0.32c-0.67 0.34 0.08 1.31 -0.88 0.94c-0.43 -0.17 -0.32 0.64 -0.43 0.75c-0.14 0.14 -0.19 -0.07 -0.23 -0.19c-0.19 -0.66 -2.59 -0.30 -3.05 0.02c-0.79 0.55 -0.64 1.16 -1.12 1.83c-0.83 0.83 0.37 2.96 -1.92 2.03c-1.74 -0.71 -2.33 1.29 -3.88 1.42c-0.33 0.03 -0.34 0.58 -0.75 0.61c-0.43 0.03 -0.80 0.22 -1.11 0.47l0.00 0.00c0.00 -0.44 -0.13 -0.98 -0.35 -1.36c-0.25 -0.43 -0.26 -0.77 -0.40 -1.22c-0.07 -0.24 -0.34 -0.45 -0.54 -0.60l-0.01 -0.49l0.00 0.00z\"\n          },\n          12: {\n            name: \"C\\xe0 Mau\",\n            path: \"m63.85 267.31l1.19 0.88l0.51 -1.23l0.45 0.51l0.24 -0.24l0.57 0.16l0.30 -0.31l3.80 2.39l1.22 0.67l0.00 0.00c-0.22 0.29 -0.55 0.40 -0.68 0.75c-0.24 0.68 0.94 0.86 0.49 1.36c-0.43 0.48 -1.30 0.72 -0.61 1.41l0.01 1.17c0.00 0.47 0.22 0.37 0.56 0.45c0.50 0.13 0.44 0.70 1.16 0.53c0.50 -0.12 1.08 0.28 1.32 0.69l0.00 0.00c-0.25 0.36 -0.49 0.80 -0.74 1.38c-1.06 2.39 -1.05 2.21 -3.15 3.45c-1.13 0.67 -1.53 1.82 -2.76 2.54c-1.40 0.82 -3.61 0.80 -4.92 0.32c-0.78 -0.28 -1.44 -0.86 -0.26 -0.86c0.01 -0.03 0.04 -0.04 0.05 -0.07c1.30 0.00 0.20 -1.66 0.91 -1.37c0.10 0.04 1.07 -0.33 1.29 -0.81c0.30 -0.69 -0.56 -0.31 -1.11 -0.31c-1.24 0.00 0.06 -5.60 -0.17 -6.76c0.00 -1.28 0.32 -2.50 0.32 -3.81c0.00 -0.64 -0.09 -2.02 0.02 -2.90l0.00 0.00z\"\n          },\n          13: {\n            name: \"Cao B\\u1EB1ng\",\n            path: \"m93.89 35.08c-0.22 -0.74 0.22 -0.48 0.29 -1.26c0.04 -0.44 0.24 -0.49 0.35 -0.95l0.21 -0.99c0.24 0.00 2.25 1.14 1.76 -0.21c-0.13 -0.36 0.23 -0.62 0.39 -0.93c0.15 -0.17 0.17 -0.42 0.32 -0.55c0.09 -0.08 0.39 -0.14 0.41 -0.27c0.03 -0.29 -0.17 -0.53 -0.02 -0.90c0.11 -0.28 1.53 -1.15 0.51 -1.23c-0.90 -0.07 -0.53 -0.05 -1.02 -0.55c-0.16 -0.16 -0.62 -0.01 -0.66 -0.35c-0.06 -0.49 -0.01 -0.31 -0.46 -0.42c-0.32 -0.07 -0.63 -0.10 -0.74 0.32c-0.41 0.00 -0.45 -0.51 -0.61 -0.82c-0.29 -0.59 -0.80 0.09 -1.04 -0.25c-0.76 -1.09 -0.57 0.56 -1.43 0.41c-0.23 0.03 -0.94 0.27 -1.00 0.50c-0.36 0.00 -0.70 -0.23 -0.91 0.14c-0.25 0.45 -0.49 0.12 -0.82 -0.01c-0.04 -0.02 -0.41 0.14 -0.56 0.14c-0.43 0.00 -0.38 -0.53 -0.36 -0.80c0.02 -0.25 -0.20 -0.37 -0.26 -0.60c-0.24 -0.17 -0.34 -0.55 -0.63 -0.69c-0.24 -0.12 -0.49 0.06 -0.72 -0.07c-0.55 -0.34 -0.64 0.16 -1.23 -0.20c-0.38 -0.23 -0.53 0.24 -0.95 0.10c-0.86 -0.29 -0.41 0.57 -0.62 0.74c-0.21 0.17 -0.41 0.01 -0.67 0.01c-0.09 0.00 -0.33 0.18 -0.36 0.17c-0.22 0.33 -0.38 -0.30 -0.61 -0.13c-0.29 0.22 -0.22 0.43 -0.66 0.43c-0.14 -0.57 -1.02 -1.18 -1.30 -1.59c-0.18 -0.26 -1.46 -1.06 -1.72 -0.99c-0.59 0.17 -0.92 -0.75 -1.22 -0.41c-0.12 0.14 -0.52 0.02 -0.64 0.06c-0.06 0.02 -0.05 0.16 -0.15 -0.01c-0.07 -0.13 -0.15 -0.38 -0.20 -0.62l0.00 0.00l-0.69 0.34c-0.01 0.32 -0.53 1.49 -0.82 1.67c-0.35 0.22 -2.03 0.39 -1.97 0.70c0.15 0.70 -1.05 0.65 -1.05 1.49c-0.80 0.27 -0.29 0.64 0.23 0.81c0.00 0.10 1.47 1.37 1.67 1.48c1.06 0.56 1.31 0.73 1.31 1.97l-0.01 0.51l0.00 0.00l0.73 0.08l0.00 0.00c0.37 -0.25 0.37 -0.55 0.91 -0.58c0.28 -0.02 0.21 -0.08 0.30 -0.31c0.03 -0.09 0.32 -0.55 0.39 -0.26l0.02 0.00c0.03 0.12 0.75 -0.44 0.98 -0.47c0.32 -0.04 0.55 -0.06 0.87 -0.18c0.70 -0.25 0.44 0.37 0.61 0.72c0.10 0.21 0.03 0.40 -0.13 0.56c-0.10 0.10 -0.23 0.17 -0.35 0.26c-0.04 0.03 -0.19 0.21 -0.11 0.24c0.00 0.03 0.01 0.05 0.02 0.07c0.39 0.43 0.22 0.37 0.37 0.82c0.49 0.00 0.16 0.53 0.49 0.76c0.43 0.31 0.45 0.31 0.95 0.37c0.21 0.03 0.30 0.25 0.46 0.33c0.97 0.49 0.98 -0.37 1.76 -0.37c0.71 0.00 1.02 -0.91 1.76 -0.79c0.65 0.11 0.76 1.37 0.64 1.84c-0.07 0.28 -0.31 1.01 -0.01 1.23c0.39 0.28 0.79 -0.18 1.14 -0.06c0.00 0.09 0.22 0.17 0.29 0.23l0.00 0.00l0.21 -0.62c0.06 -0.08 0.36 -0.39 0.37 -0.43c0.12 0.06 0.44 -0.39 0.66 -0.07c0.34 0.50 0.76 0.49 1.26 0.74c0.33 0.17 0.17 0.69 0.57 0.90c0.21 0.10 0.58 -0.11 0.85 -0.08c0.65 0.08 0.62 0.47 1.12 -0.18c0.41 -0.53 0.94 -0.61 1.49 -0.94l0.00 0.00z\"\n          },\n          14: {\n            name: \"C\\u1EA7n Th\\u01A1\",\n            path: \"m78.85 256.88l1.22 0.87c0.16 0.18 0.42 0.34 0.62 0.48c0.18 0.13 0.48 0.50 0.55 0.68c0.05 0.14 0.24 0.63 0.39 0.67l0.00 0.00l-0.43 0.37c-0.54 0.11 -0.63 0.04 -1.11 -0.07c-0.52 -0.12 -0.62 0.29 -1.07 0.36c-0.19 0.03 -0.46 -0.07 -0.35 -0.31c-0.48 -0.16 -0.34 0.24 -0.75 0.24c-0.17 0.00 -0.51 -0.49 -0.66 -0.63c-0.36 -0.36 -0.75 1.01 -1.01 1.17l0.00 0.00l-3.04 -2.90l-0.17 -0.54l-0.49 -0.53l-0.35 0.14l-1.41 -1.18l0.00 0.00l0.57 -0.74c0.38 0.04 0.38 0.07 0.64 -0.26c0.25 -0.31 0.38 -0.03 0.51 0.01c-0.30 0.59 1.56 0.12 1.80 0.00c0.17 -0.08 -0.02 -0.34 0.04 -0.48c0.09 -0.24 0.38 -0.07 0.58 -0.14c0.12 -0.04 0.44 -0.34 0.57 -0.48l0.15 -0.14l0.00 0.00l1.35 1.24c0.21 0.18 0.35 0.40 0.51 0.62c0.21 0.29 0.30 0.68 0.55 0.93c0.19 0.19 0.49 0.55 0.76 0.62l0.00 0.00z\"\n          },\n          15: {\n            name: \"\\u0110\\xE0 N\\u1EB5ng\",\n            path: \"m123.56 153.34c-0.65 -0.94 -1.17 -2.08 0.04 -2.22c0.68 -0.08 0.84 -0.75 0.51 -0.53c-0.49 0.34 -0.77 -0.54 -1.36 -0.32c-0.29 0.10 -0.25 0.88 -0.49 1.12c-0.50 0.51 -1.93 -0.95 -1.08 -1.25c0.64 -0.23 0.99 -1.15 0.32 -0.97c-0.20 0.06 -0.35 0.01 -0.47 -0.07l0.00 0.00c-0.43 0.16 -1.51 0.48 -1.94 0.34c-0.41 -0.13 -0.89 -0.52 -1.27 -0.33c-0.34 0.17 -0.28 0.44 -0.74 0.05c-0.36 -0.31 -0.75 -0.00 -0.81 0.42c-0.03 0.20 -0.48 1.14 -0.44 1.25c-0.12 0.12 -0.25 0.25 -0.33 0.39c-0.10 0.19 -0.00 0.40 -0.10 0.56l0.00 0.00l0.75 -0.02c0.87 0.73 0.82 -0.14 1.53 -0.14l0.01 0.01c0.00 0.41 0.21 0.55 0.32 0.91c0.20 0.66 -0.50 0.81 0.14 1.60c0.15 0.19 0.49 -0.04 0.69 -0.08c0.33 -0.06 0.47 0.06 0.77 0.12c0.23 0.05 0.37 -0.17 0.58 -0.20c0.19 -0.03 0.30 0.11 0.46 0.11c0.17 0.00 0.21 -0.24 0.36 -0.30c0.31 -0.12 0.24 0.35 0.55 -0.16c0.34 -0.55 0.46 0.70 0.84 -0.07c0.19 -0.39 0.81 -0.09 1.17 -0.21l0.00 0.00z\"\n          },\n          16: {\n            name: \"\\u0110\\u1EAFk L\\u1EAFk\",\n            path: \"m130.42 218.48c0.11 -0.60 -0.27 -1.71 0.07 -2.14c0.10 -0.13 0.23 -0.64 0.50 -0.54c0.58 0.22 0.58 -0.88 1.26 -0.19c0.25 0.25 0.83 0.41 1.16 0.50c0.77 0.21 0.26 -0.47 0.14 -0.68c-0.07 -0.12 0.21 -1.17 0.26 -1.37c0.14 -0.60 0.61 -0.47 1.18 -0.58c0.14 0.00 0.43 0.01 0.47 -0.14c0.04 -0.13 0.01 -0.28 -0.05 -0.41c-0.06 -0.14 0.16 -0.38 0.18 -0.54c0.05 -0.27 -0.11 -0.37 0.11 -0.64l0.14 -0.21l0.00 0.00c-0.31 -0.52 0.13 -1.10 -0.30 -1.72c-0.39 -0.56 -1.71 0.25 -2.00 -0.48c-0.34 -0.82 -0.32 -0.51 -1.06 -0.66c-0.10 -0.42 -0.64 -0.87 -0.83 -1.25c-0.27 -0.54 -0.96 0.07 -0.80 -0.49l-0.55 -0.64l0.00 0.00c-0.80 0.00 -1.18 -0.61 -1.82 -0.56c-1.46 0.11 -0.52 -0.75 -1.28 -1.30c-0.90 -0.65 -0.85 -2.47 -2.04 -2.77c0.00 -2.01 -2.10 -1.77 -3.53 -2.33c-0.63 -0.21 -1.17 -0.40 -1.84 -0.18c-0.56 0.18 -1.64 0.67 -2.15 0.33c-0.28 -0.18 -1.18 -0.21 -1.56 -0.29c-0.76 -0.15 -1.26 0.67 -1.92 0.67c-0.27 0.00 -0.43 -0.34 -0.69 -0.25c-0.42 0.14 -0.43 0.35 -0.74 0.62l-0.89 0.62l0.00 0.00l-1.40 3.68c-0.17 0.34 -0.43 0.77 -0.45 1.13c-0.01 0.16 0.07 0.83 -0.01 0.94c0.09 0.12 -0.64 0.89 0.05 1.12c0.00 0.59 -0.38 0.68 0.30 1.22c0.30 0.24 0.49 0.79 0.54 1.25l0.00 0.00l1.88 -0.04c1.04 0.20 1.67 0.41 2.65 0.21c0.08 -0.30 1.43 -0.69 1.01 0.07c-0.27 0.49 0.22 0.90 0.68 1.05c0.00 0.52 -0.13 0.62 0.04 1.12c0.08 0.24 0.13 0.69 0.20 0.98c0.15 0.57 -0.86 1.00 -0.33 1.30c0.24 0.14 0.61 -0.08 0.88 0.07c0.29 0.16 0.36 0.33 0.57 0.55c0.64 0.93 -0.35 0.77 -0.79 1.12c-0.65 0.53 -0.03 0.87 0.10 1.40c0.27 1.14 1.63 0.51 2.12 1.31c0.20 0.33 0.25 0.63 0.50 0.92c0.12 0.14 0.55 0.68 0.39 0.90l0.00 0.00c0.34 -0.07 0.60 -0.42 0.98 -0.23c0.29 0.14 0.84 0.49 1.17 0.38c0.30 -0.09 0.76 -1.19 1.07 -0.95c0.29 -0.21 0.69 -0.45 0.98 -0.67c0.60 0.44 0.85 -0.01 1.35 -0.29c0.18 -0.10 0.45 -0.58 0.63 -0.56c0.28 0.03 0.33 0.64 0.79 0.36c0.54 -0.33 0.86 0.19 1.35 0.04c0.43 -0.13 0.97 -0.51 1.32 -0.78l0.00 0.00z\"\n          },\n          17: {\n            name: \"\\u0110\\u1EAFk N\\xF4ng\",\n            path: \"m105.08 219.01l0.33 2.88c0.00 0.27 0.39 0.64 0.12 1.00c0.14 0.18 -0.04 0.65 0.30 0.80c0.57 0.25 1.00 0.09 1.33 0.70c0.28 0.51 0.35 0.80 0.87 1.15c0.33 0.22 0.99 1.14 0.95 1.49c-0.07 0.58 -0.70 0.61 -0.79 1.35l0.00 0.00c0.19 -0.01 0.28 0.14 0.49 0.14c0.16 0.00 0.21 -0.14 0.31 -0.14c0.01 -0.02 0.46 -0.03 0.62 -0.39c0.21 -0.48 1.10 0.13 1.42 -0.27c0.42 -0.52 0.99 -0.64 1.39 -1.07c0.24 -0.26 1.36 -1.54 1.57 -0.76c0.32 1.15 0.83 0.98 1.94 0.56c0.24 0.00 0.89 -0.11 1.04 0.13c0.12 0.19 -0.06 0.59 -0.01 0.84c0.08 0.35 0.45 0.17 0.62 0.04c0.27 -0.22 0.46 0.54 1.10 0.20c0.53 -0.28 1.61 -0.84 1.78 -1.48c0.04 -0.15 -0.62 -1.13 -0.77 -1.21c-0.14 -0.07 -0.45 -0.78 -0.58 -0.99c-0.24 -0.40 -0.01 -0.37 -0.44 -0.62c-0.92 -0.55 -0.06 -0.90 0.12 -1.37c0.30 -0.77 1.08 0.08 1.53 -0.19l0.49 -0.61l0.00 0.00c0.16 -0.22 -0.27 -0.76 -0.39 -0.90c-0.25 -0.29 -0.30 -0.59 -0.50 -0.92c-0.49 -0.80 -1.85 -0.17 -2.12 -1.31c-0.13 -0.53 -0.74 -0.87 -0.10 -1.40c0.43 -0.35 1.43 -0.19 0.79 -1.12c-0.22 -0.22 -0.28 -0.39 -0.57 -0.55c-0.27 -0.15 -0.64 0.06 -0.88 -0.07c-0.53 -0.30 0.48 -0.73 0.33 -1.30c-0.07 -0.29 -0.12 -0.74 -0.20 -0.98c-0.17 -0.50 -0.04 -0.60 -0.04 -1.12c-0.46 -0.15 -0.95 -0.56 -0.68 -1.05c0.42 -0.76 -0.94 -0.38 -1.01 -0.07c-0.97 0.20 -1.60 -0.02 -2.65 -0.21l-1.88 0.04l0.00 0.00c0.01 0.07 0.01 0.13 0.01 0.19c0.00 1.21 0.52 1.88 0.52 3.03c0.13 0.04 0.01 0.52 -0.04 0.61c0.16 0.43 -0.49 0.50 -0.24 0.95c0.37 0.67 0.07 0.11 -0.02 0.70c-0.04 0.22 0.17 0.34 0.01 0.56c-0.11 0.16 -0.49 0.53 -0.49 0.69c0.00 0.36 0.30 0.44 0.04 0.92c-0.20 0.37 -1.03 0.61 -1.10 0.87c-0.23 0.00 -1.03 2.32 -1.60 0.60c-0.30 -0.90 -1.28 -1.27 -2.09 -0.73c-0.28 0.18 -0.55 0.30 -0.83 0.40l0.00 0.00z\"\n          },\n          18: {\n            name: \"\\u0110\\u1ED3ng Nai\",\n            path: \"m101.49 248.64c0.17 -0.59 -0.08 -0.44 0.57 -0.69c0.77 -0.30 1.54 0.20 1.76 -0.93c0.04 -0.20 -0.02 -0.79 0.28 -0.79c0.29 0.00 0.38 -0.33 0.64 -0.33c0.24 0.37 1.28 0.27 1.72 0.25c0.73 -0.04 -0.13 1.70 0.80 1.37c0.29 -0.09 0.39 -0.60 0.55 -0.86c0.11 -0.17 0.41 -0.58 0.57 -0.68c0.20 -0.12 0.41 -0.22 0.57 -0.41c0.59 -0.75 0.72 0.19 1.37 0.32l0.00 0.00l0.89 -0.58c0.50 -0.45 0.01 -0.80 -0.01 -1.28c-0.04 -0.86 -0.09 -1.90 -0.97 -2.29l-1.10 -0.48l-0.41 -0.16c-0.30 -0.12 0.06 -0.20 0.09 -0.35c0.11 -0.04 0.09 -0.18 0.13 -0.28c0.06 -0.17 0.36 -0.20 0.36 -0.42c0.00 -0.16 -0.09 -0.28 -0.18 -0.40c-0.16 -0.22 0.26 -0.30 0.32 -0.55c0.03 -0.12 0.01 -0.23 0.07 -0.35c0.09 -0.20 0.26 -0.34 0.35 -0.54c0.06 -0.21 0.09 -0.38 0.30 -0.49c0.25 -0.12 0.44 -0.36 0.38 -0.66c-0.07 -0.36 -0.26 -0.44 0.07 -0.76l0.21 -0.67l0.00 0.00c-0.18 -0.18 -0.34 -0.64 -0.62 -0.70c0.01 -0.01 -0.12 -0.21 -0.13 -0.30c-0.02 -0.14 -0.06 -0.25 -0.18 -0.33c-0.18 -0.12 -0.69 -0.04 -0.69 -0.23c0.00 -0.22 0.27 -0.26 0.30 -0.43c0.26 -0.41 0.05 -0.32 -0.18 -0.60c-0.20 -0.24 -0.49 -0.17 -0.67 -0.37c-0.14 -0.15 -0.26 -0.10 -0.45 -0.02c-0.23 0.10 -0.24 -0.40 -0.27 -0.56c-0.09 -0.63 -0.39 0.24 -0.64 0.20l0.00 0.00l-1.55 0.24l-1.74 0.34c-0.54 0.11 -0.58 0.52 -1.02 0.73c-0.34 0.16 -0.04 0.36 -0.06 0.57c-0.09 0.79 -1.65 2.29 -2.45 2.22l0.00 0.00l-0.13 0.50c-0.11 0.18 -0.15 0.32 -0.18 0.53c-0.04 0.24 -0.12 0.21 -0.25 0.41c-0.28 0.41 0.71 0.66 0.74 0.92c0.15 0.39 0.17 0.63 0.17 1.02c0.00 0.10 -0.36 0.98 -0.38 0.99c-0.40 0.17 -0.23 0.44 -0.60 0.65c-0.36 0.20 -1.05 -0.31 -1.29 -0.54c-0.22 -0.22 -0.33 0.04 -0.50 0.10c-0.06 0.29 0.09 0.50 -0.27 0.62c-0.09 0.37 0.05 0.38 0.08 0.72c0.02 0.28 -0.60 0.08 -0.36 0.42c0.24 0.35 1.10 0.67 1.16 0.87l0.00 0.00l0.33 0.84c0.08 0.15 0.72 1.24 0.30 1.34c-0.01 0.04 -0.31 -0.03 -0.41 0.05c-0.38 0.30 -0.29 -0.21 -0.62 0.00c-0.42 0.27 -1.18 0.84 -0.94 1.42c0.09 0.22 0.91 0.75 1.14 0.97c0.34 0.34 0.62 -0.21 1.02 -0.16c0.27 0.03 0.35 0.35 0.52 0.52c0.14 0.14 0.72 0.38 0.94 0.51c0.29 0.17 0.57 -0.21 0.57 -0.46l0.00 0.00z\"\n          },\n          19: {\n            name: \"\\u0110\\u1ED3ng Th\\xE1p\",\n            path: \"m70.52 243.60l0.22 0.71c0.10 0.23 0.38 0.21 0.42 0.48c0.03 0.24 0.20 0.15 0.38 0.23c0.38 0.17 -0.01 0.54 0.48 0.61c0.49 0.07 0.42 0.15 0.18 0.47c-0.48 0.64 0.60 0.31 0.82 0.38c0.30 0.09 -0.00 0.76 -0.02 0.95c0.25 0.54 0.14 1.51 0.85 1.74c0.48 0.15 0.59 0.46 1.19 0.48c0.71 0.03 0.92 -0.02 1.50 0.42c0.34 0.26 0.64 0.80 0.58 1.23c0.00 0.51 -0.43 0.18 -0.55 0.43c-0.08 0.17 -0.06 0.38 -0.25 0.50c-0.18 0.10 -0.21 0.15 -0.19 0.35c0.04 0.32 -0.11 0.26 -0.30 0.39c-0.20 0.14 -0.14 0.29 -0.14 0.51l0.00 0.00l1.35 1.24c0.21 0.18 0.35 0.40 0.51 0.62c0.21 0.29 0.30 0.68 0.55 0.93c0.19 0.19 0.49 0.55 0.76 0.62l0.00 0.00l0.82 -1.21c0.24 0.10 0.35 0.06 0.46 0.30c0.10 0.20 0.23 0.16 0.38 0.05c0.25 0.19 0.40 0.46 0.79 0.60c0.39 0.14 0.48 -0.03 0.74 -0.29c0.29 -0.29 0.95 -0.11 0.95 -0.68c0.00 -0.42 -0.81 -0.65 -0.60 -0.94l0.03 -0.30l0.00 0.00c-0.02 -0.05 -0.13 -0.15 -0.17 -0.19c-0.08 -0.06 -0.22 -0.10 -0.32 -0.14c-0.13 -0.06 -0.26 -0.14 -0.37 -0.22l-0.46 -0.43l0.10 -0.72l0.47 -0.12l0.25 -0.62l0.63 -0.66l0.68 -0.79l0.04 -0.66l0.00 0.00l-0.64 -0.13l-1.42 -1.89l-0.71 -0.16l-1.72 -1.59l-1.47 -1.52l0.28 -0.10l-0.39 -1.12l-1.08 -0.07l-0.28 -0.63l0.00 0.00c-0.38 -0.02 -0.82 -0.08 -0.81 -0.07c-0.92 0.00 -0.48 -0.27 -1.31 0.48c-0.26 0.23 -0.87 1.39 -1.22 1.09c-0.35 -0.31 -1.19 -0.45 -1.99 -0.55l0.00 0.00z\"\n          },\n          20: {\n            name: \"\\u0110i\\u1EC7n Bi\\xEAn\",\n            path: \"m20.46 32.79c-0.25 0.29 -0.40 0.61 -0.61 1.02c-0.11 0.22 -0.63 0.71 -0.57 0.85c0.06 0.15 0.39 0.61 0.15 0.58l-1.68 -0.20l-0.30 0.60l0.00 0.00l0.30 0.51c0.14 0.36 0.09 0.54 0.37 0.82c0.29 0.29 -0.06 0.49 0.41 0.81c0.31 0.21 0.28 0.53 0.62 0.79c0.26 -0.20 0.60 0.11 0.66 0.35c0.24 0.91 0.44 0.10 0.83 0.58c0.09 0.11 -0.02 0.48 0.23 0.48c0.29 0.00 0.33 0.04 0.56 0.10c0.00 0.40 0.10 0.55 0.38 0.76c0.33 -0.25 0.61 0.46 0.66 0.66c0.15 0.42 0.75 0.56 0.75 0.81c1.23 0.30 -0.71 1.67 1.49 1.85c0.82 0.07 1.00 1.51 1.43 2.09c-0.17 0.23 0.35 1.18 0.04 1.60c0.14 0.19 0.21 1.58 0.39 1.60c0.71 0.08 2.56 -0.52 2.56 -1.42c0.00 -0.53 -0.37 -1.94 0.35 -2.02c0.82 -0.09 -0.51 3.08 1.02 2.39c1.01 -0.45 0.53 0.41 1.13 0.41c0.63 0.00 0.14 0.82 0.35 1.36c-0.15 0.57 0.16 0.84 -0.37 1.27c-0.12 0.10 -0.79 0.72 -0.79 0.84c-0.02 0.01 -0.02 0.03 -0.02 0.06c-0.41 0.14 -0.75 1.01 -0.60 1.47l0.05 0.00c0.15 -0.46 1.01 -0.10 0.68 -0.01c-0.02 0.09 -0.48 0.77 -0.50 0.78c0.00 0.03 0.01 0.06 -0.01 0.08c0.53 0.71 -0.80 1.75 -1.19 1.95c-0.92 0.46 0.74 0.46 0.80 0.48c0.54 0.13 0.86 0.48 0.64 1.06l0.05 0.64c0.88 0.22 0.54 0.88 0.88 1.56c0.24 0.49 0.91 -0.04 1.38 0.91c0.51 1.04 0.95 1.98 1.60 2.65l0.00 0.00l1.35 -0.40c0.19 -0.07 0.25 -0.04 0.44 -0.04c0.19 0.00 0.16 -0.19 0.24 -0.21c-0.20 -0.79 -0.14 -0.18 0.15 -0.78c0.10 -0.20 -0.01 -0.61 -0.15 -0.78c-0.22 -0.25 0.23 -0.29 0.08 -0.62c-0.06 -0.14 -0.41 -0.79 -0.01 -0.66c0.31 0.11 -0.19 -0.91 0.71 -0.45c0.36 0.18 0.46 0.55 0.98 0.55c1.35 0.00 0.24 -0.68 0.19 -1.23c-0.03 -0.28 0.35 -0.50 0.52 -0.64c0.17 -0.14 0.20 -0.97 0.20 -1.21c0.18 -0.41 0.05 -2.26 -0.74 -1.67c-0.04 -0.03 -0.59 -0.22 -0.46 -0.42c0.04 -0.06 0.65 -0.54 0.42 -0.54c-0.03 -0.13 -0.58 -0.59 -0.70 -0.76c-0.49 -0.70 1.46 -0.25 1.75 -0.47c0.43 -0.32 -0.02 -0.77 0.01 -1.23c0.04 -0.53 0.37 -0.33 0.69 -0.33c0.20 0.00 0.90 -0.90 0.86 -1.04c-0.09 -0.33 0.34 -0.47 0.32 -0.79c-0.02 -0.39 -0.25 -0.62 0.20 -0.87c0.15 -0.19 0.03 -0.29 0.31 -0.29c0.11 0.00 0.33 -0.04 0.33 -0.17c-0.02 -0.01 -0.00 -0.00 -0.02 -0.01c0.00 -0.24 -0.57 -0.46 -0.57 -0.90c0.00 -0.29 -0.26 -0.68 -0.38 -0.95c-0.21 -0.47 -0.21 -1.04 -0.58 -1.46c-0.14 -0.16 -0.24 -0.36 -0.41 -0.53c-0.37 -0.37 -0.11 -0.48 -0.11 -0.86l0.01 -0.01l0.29 -0.53l0.00 0.00c-0.42 -0.19 -0.95 -0.46 -0.77 -1.02c0.22 -0.72 -0.32 -0.66 -0.64 -1.23c-0.19 -0.34 -0.27 -0.75 -0.48 -1.07c-0.16 -0.26 -1.13 -0.14 -1.28 0.10c-0.14 0.23 -0.21 0.51 -0.49 0.62c-0.08 0.31 -0.29 0.36 -0.09 0.76c0.10 0.21 0.23 0.54 -0.20 0.48c-0.52 -0.07 -1.01 -0.59 -1.56 -0.59c-0.40 0.00 -0.57 0.13 -0.91 -0.12c-0.51 -0.58 -0.44 -0.42 -0.64 0.32c-0.05 0.17 -0.94 0.14 -1.13 0.15c-0.34 0.02 -0.56 0.42 -0.79 0.42c-0.34 0.00 -0.59 -0.63 -0.69 -0.89c-0.26 -0.70 -0.81 -0.03 -1.35 0.02c-1.14 0.12 -0.89 -0.09 -1.67 -0.78c-0.86 -0.77 0.13 -0.98 -0.17 -1.80c-0.09 -0.25 -1.14 -0.92 -1.26 -0.66c-0.12 0.27 0.24 0.75 0.24 1.06c0.00 0.77 -0.87 0.19 -1.09 -0.09c-0.28 -0.35 -0.13 -1.43 -1.05 -1.18c-0.52 0.14 -0.47 0.42 -0.93 -0.17c-0.18 -0.23 -0.66 -1.02 -0.69 -1.31c-0.30 -0.37 -0.50 -0.64 -0.88 -0.92c-0.32 -0.24 -0.45 -0.47 -0.35 -0.87c0.23 -0.91 -0.74 -0.86 -0.89 -1.67l-0.29 -0.41l0.00 0.00z\"\n          },\n          21: {\n            name: \"Gia Lai\",\n            path: \"m130.31 206.29l0.75 -0.31c0.13 -0.01 0.66 -0.11 0.57 -0.33l0.14 -0.95c0.04 -0.24 0.11 -0.69 0.25 -0.88c0.26 -0.36 0.90 0.15 1.26 -0.62c0.13 -0.27 0.49 -1.87 0.35 -2.10c-0.09 -0.14 -0.61 -0.86 -0.71 -0.91c-0.78 -0.32 -0.49 -0.40 -0.49 -1.16c0.15 -0.21 0.08 -0.48 0.08 -0.73c0.00 -0.53 -0.47 -0.14 -0.81 -0.14c-0.32 0.00 -0.56 0.01 -0.69 -0.32c-0.27 -0.67 0.48 -0.74 0.54 -1.29c0.02 -0.23 0.17 -0.43 0.42 -0.43c0.13 0.00 0.26 0.01 0.39 0.01c0.18 0.00 0.29 0.11 0.44 0.13l0.60 0.05l0.00 0.00c0.12 -0.16 -0.01 -0.58 -0.10 -0.73c-0.21 -0.38 -0.31 -0.83 -0.40 -1.24c-0.06 -0.52 0.27 -0.68 0.24 -1.12c-0.03 -0.66 -0.18 -0.89 -0.54 -1.37c-0.19 -0.26 -0.07 -0.56 -0.36 -0.85c-0.29 -0.29 -0.50 -0.72 -0.69 -1.06c0.04 -0.22 0.01 -0.44 0.13 -0.64c0.12 -0.21 0.16 -0.35 0.16 -0.59c0.00 -0.37 0.03 -1.03 -0.29 -1.24c-0.34 -0.23 -0.35 -0.32 -0.57 -0.66c-0.24 -0.39 -0.50 -0.72 -0.69 -1.15c-0.05 -0.38 0.20 -0.46 0.15 -0.73c-0.07 -0.42 -0.38 -0.67 -0.41 -1.16c-0.04 -0.74 -0.46 -1.25 -0.51 -1.99c-0.02 -0.22 -0.23 -0.41 -0.28 -0.62c-0.04 -0.25 -0.16 -0.39 -0.08 -0.66c0.06 -0.21 0.19 -0.06 0.34 0.00c0.40 0.15 0.07 -0.78 0.02 -0.91c-0.10 -0.27 0.12 -0.47 -0.01 -0.76l0.00 0.00c-0.03 0.08 -0.35 0.13 -0.43 0.12c-0.16 -0.03 -0.21 -0.22 -0.26 -0.35c-0.14 -0.35 -0.41 -0.51 -0.79 -0.54l0.00 0.00l-0.39 0.31c-0.46 0.46 -0.74 0.76 -1.32 0.23c-0.22 -0.20 -1.30 -1.30 -1.46 -0.64c-0.11 0.45 0.17 0.63 0.32 0.98c0.21 0.46 -0.22 0.78 -0.55 1.04c-0.44 0.35 -0.61 1.23 -1.07 1.52c-0.46 0.19 -0.70 -0.04 -1.11 0.07c-0.42 0.11 -0.69 0.62 -1.16 0.56c-0.27 -0.04 -0.59 0.03 -0.83 0.16c-0.27 0.14 -0.54 0.65 -0.58 0.94c-0.11 0.69 -0.65 0.40 -0.78 0.81c-0.11 0.32 -0.21 0.21 -0.46 0.22c-0.13 0.01 -0.17 0.15 -0.29 0.19c-0.74 0.07 -0.88 -0.46 -1.45 -0.81c-0.62 -0.38 -0.94 0.78 -1.33 1.01c-0.34 0.20 -0.59 -0.09 -0.95 0.21c-0.27 0.22 -0.88 -0.14 -1.19 -0.21c-0.00 -0.01 -0.00 -0.01 -0.01 -0.01c-0.11 -0.42 0.01 -0.74 -0.18 -1.19c0.00 -0.79 0.47 -0.64 0.88 -1.10c0.19 -0.21 -0.42 -1.05 -0.52 -1.29c-0.11 -0.24 0.09 -0.87 -0.36 -0.84c-0.48 0.03 -0.79 0.40 -1.22 0.48c-0.39 0.08 -0.71 -0.23 -1.05 -0.23l-1.14 -0.08l0.00 0.00c-0.08 0.49 0.24 1.35 -0.56 1.12c-0.47 -0.13 -0.20 0.46 -0.60 0.57c-0.19 0.05 -0.60 0.97 -0.55 1.19c0.07 0.29 0.20 0.43 0.20 0.79c0.00 0.98 -0.53 1.29 -0.98 2.18c-0.20 0.57 -0.08 0.66 0.33 0.90c0.28 0.16 -0.06 0.67 -0.12 0.88c-0.26 1.00 0.63 0.79 1.22 0.79c0.58 0.00 0.22 0.70 0.37 1.00c0.07 0.15 0.32 0.26 0.44 0.42c-0.10 0.13 -0.54 0.76 -0.32 0.81c0.00 0.47 -0.24 1.28 0.21 1.50c0.66 0.33 1.18 0.70 1.36 1.44c0.09 0.40 0.15 1.18 0.39 1.50l0.82 1.75l0.02 3.04l-0.23 0.62l0.00 0.00l0.89 -0.62c0.30 -0.27 0.32 -0.48 0.74 -0.62c0.26 -0.09 0.42 0.25 0.69 0.25c0.66 0.00 1.16 -0.81 1.92 -0.67c0.38 0.07 1.28 0.10 1.56 0.29c0.50 0.33 1.58 -0.15 2.15 -0.33c0.67 -0.22 1.20 -0.03 1.84 0.18c1.43 0.55 3.53 0.32 3.53 2.33c1.19 0.29 1.14 2.12 2.04 2.77c0.75 0.55 -0.18 1.41 1.28 1.30c0.64 -0.05 1.03 0.56 1.82 0.56l0.00 0.00z\"\n          },\n          22: {\n            name: \"H\\xe0 Giang\",\n            path: \"m76.59 22.29l-0.69 0.34c-0.01 0.32 -0.53 1.49 -0.82 1.67c-0.35 0.22 -2.03 0.39 -1.97 0.70c0.15 0.70 -1.05 0.65 -1.05 1.49c-0.80 0.27 -0.29 0.64 0.23 0.81c0.00 0.10 1.47 1.37 1.67 1.48c1.06 0.56 1.31 0.73 1.31 1.97l-0.01 0.51l0.00 0.00c0.07 0.02 -0.16 0.26 -0.19 0.29c-0.11 0.08 -0.22 0.14 -0.33 0.20c-0.22 0.13 -0.45 0.12 -0.69 0.06c-0.56 -0.13 -0.82 -0.51 -1.24 -0.67c-0.38 -0.14 -0.52 0.51 -0.89 0.45c-0.49 -0.08 -0.56 -0.62 -1.10 -0.78c-0.34 -0.10 -1.49 -0.63 -1.70 -0.38c-0.16 0.18 0.27 0.88 0.21 1.19c-0.07 0.40 -0.55 0.49 -0.56 0.87l-0.02 1.35l-0.04 0.12c0.22 0.52 -0.35 0.76 -0.35 1.16c0.00 0.51 0.31 0.44 -0.26 0.58c-0.07 0.34 0.19 0.90 -0.37 0.78c-0.45 -0.10 0.04 0.68 -0.08 0.98c-0.02 -0.01 -0.11 0.18 -0.14 0.23c-0.06 0.09 -0.15 0.14 -0.26 0.14c-0.23 0.02 -0.44 -0.05 -0.57 -0.23c-0.25 -0.35 -0.38 -0.56 -0.85 -0.49c-0.38 0.06 -0.43 -0.31 -0.75 -0.31c-0.11 0.32 0.15 0.46 0.17 0.75c0.02 0.36 -0.17 0.36 -0.33 0.62c-0.16 0.25 0.97 1.12 -0.11 1.46c-0.49 0.15 -0.42 -0.50 -0.93 0.17l0.00 0.00c-0.23 0.00 -1.30 0.31 -1.36 0.25c-0.34 0.17 -0.44 -1.26 -0.45 -1.41c-0.04 -0.49 -0.84 -0.52 -1.20 -0.57c-0.34 -0.05 -0.41 -0.26 -0.66 -0.32c-0.34 -0.09 -0.73 0.55 -0.92 0.78l0.00 0.00l-0.45 -0.14c-0.04 -0.21 -0.32 -0.30 -0.07 -0.47c0.23 -0.15 0.39 -0.12 0.39 -0.47c0.00 -0.18 0.05 -0.16 0.13 -0.29c0.12 -0.19 0.01 -0.46 -0.19 -0.55c-0.53 -0.24 0.02 -0.20 -0.27 -0.49c-0.14 -0.14 -0.37 -0.25 -0.55 -0.32c-0.40 -0.23 -0.41 -0.32 -0.58 -0.68c-0.11 -0.22 -0.43 -0.16 -0.51 -0.42c-0.21 -0.69 0.37 -0.75 -0.41 -1.18c-0.35 -0.20 -0.07 -0.60 -0.07 -0.90c0.41 -0.14 1.20 -0.22 0.56 -0.80c-0.50 -0.45 -0.57 -0.54 -0.87 -1.11c-0.13 -0.24 -0.79 -0.08 -1.07 -0.33l0.14 -0.42l0.00 0.00c0.14 0.20 0.31 0.34 0.61 0.21c0.55 -0.25 3.31 -3.07 3.56 -2.98l0.00 0.02c0.12 0.04 0.23 1.03 0.66 0.44c0.33 -0.46 0.53 -0.10 0.82 0.12c0.21 -0.01 0.38 -0.10 0.58 -0.10c0.14 0.00 0.23 0.18 0.37 0.18c0.12 -0.37 0.61 -1.28 0.95 -1.49c0.41 -0.25 1.24 -0.58 1.24 -1.12c-0.22 -0.07 -0.20 -0.54 -0.20 -0.73c-0.06 -0.02 -0.14 -0.18 -0.27 -0.20c-0.10 -0.42 0.21 -0.81 0.01 -1.13c-0.20 -0.32 -0.19 -0.73 -0.10 -1.03c0.37 0.00 0.88 0.09 0.88 -0.39c0.00 -0.39 0.21 -0.90 0.66 -0.90c0.06 0.18 0.39 0.29 0.58 0.29c0.08 -0.24 -0.06 -0.52 0.21 -0.60c0.35 -0.10 0.44 0.30 0.74 -0.07c0.21 -0.11 0.82 -0.57 0.95 -0.75c0.42 -0.59 0.44 -0.20 0.75 -0.20c0.01 0.05 0.24 -0.03 0.31 0.00c0.62 0.28 0.62 -0.38 1.31 -0.32c0.40 0.03 0.93 -0.17 0.93 -0.58c0.00 -0.78 0.19 -0.35 0.58 -0.66c0.31 -0.24 0.68 -1.65 1.20 -0.55l0.63 1.34c0.26 0.55 0.70 -0.28 1.01 0.12c0.33 0.42 0.54 1.14 0.82 1.60c0.27 0.44 1.29 0.34 1.29 1.22c-0.03 0.11 -0.01 0.35 0.04 0.59l0.00 0.00z\"\n          },\n          23: {\n            name: \"H\\xe0 Nam\",\n            path: \"m81.79 72.24c0.11 0.09 0.25 0.22 0.33 0.33c0.14 0.19 0.21 0.31 0.41 0.46c0.14 0.10 0.37 0.17 0.55 0.17l0.01 0.01l0.00 0.00c0.09 -0.14 -0.09 -0.35 -0.04 -0.56c0.33 0.00 0.79 -1.08 0.88 -0.40c0.08 0.70 0.68 0.24 0.86 -0.14c0.13 -0.27 0.08 -0.73 0.46 -0.82c0.26 -0.06 0.34 0.26 0.62 0.26c0.33 0.00 0.18 -0.65 0.63 -0.68c0.24 -0.02 0.25 0.46 0.63 0.46l0.46 -0.08l0.00 0.00c0.00 -0.38 -0.08 -0.74 -0.20 -1.10c-0.13 -0.40 -0.67 -0.56 -0.76 -0.88c-0.10 -0.34 -0.14 -0.43 -0.48 -0.61l0.00 0.00c-0.42 0.10 -0.65 0.49 -1.02 0.08c-0.23 -0.25 -0.37 -0.97 -0.30 -1.33l-0.55 -0.37l0.00 0.00c0.00 0.13 -0.14 0.45 -0.21 0.57c-0.08 0.14 -0.50 0.54 -0.66 0.37c-0.10 -0.10 -0.07 -0.28 -0.18 -0.38c-0.13 -0.12 -0.47 0.14 -0.60 0.19c-0.17 0.17 -0.19 0.32 -0.42 0.38c-0.14 0.04 -0.43 -0.13 -0.56 -0.20c-0.63 -0.37 -0.36 0.31 -0.54 0.56c-0.21 0.29 -0.17 0.30 -0.25 0.63c-0.08 0.35 -0.20 0.57 -0.58 0.64l0.00 0.00l0.36 0.58c0.08 0.11 0.07 0.23 0.20 0.30c0.16 0.09 0.35 0.11 0.46 0.27c0.15 0.22 0.36 0.34 0.39 0.61c0.03 0.24 0.04 0.45 0.10 0.68l0.00 0.00z\"\n          },\n          24: {\n            name: \"H\\xE0 N\\u1ED9i\",\n            path: \"m80.28 69.80c0.38 -0.07 0.50 -0.29 0.58 -0.64c0.08 -0.33 0.04 -0.34 0.25 -0.63c0.18 -0.25 -0.09 -0.92 0.54 -0.56c0.13 0.08 0.42 0.24 0.56 0.20c0.23 -0.06 0.25 -0.22 0.42 -0.38c0.13 -0.05 0.47 -0.31 0.60 -0.19c0.11 0.10 0.08 0.27 0.18 0.38c0.17 0.17 0.58 -0.23 0.66 -0.37c0.07 -0.12 0.21 -0.44 0.21 -0.57l0.00 0.00l-0.54 -0.78c0.00 -0.17 -0.07 -0.34 -0.07 -0.49c-0.05 -0.02 -0.24 -0.27 -0.36 -0.32c-0.11 -0.05 -0.29 -0.01 -0.36 -0.11c-0.13 -0.19 -0.10 -1.02 0.15 -1.10c0.00 -0.37 -0.11 -0.40 -0.43 -0.53c-0.38 -0.15 0.11 -0.46 0.18 -0.60c0.10 -0.20 -0.23 -0.32 -0.23 -0.43c-0.13 -0.04 0.22 -0.38 0.24 -0.42c0.47 0.00 0.97 0.18 0.83 -0.50l0.67 -0.17l0.00 0.00l0.31 -0.76c-0.09 -0.23 -0.12 -0.49 -0.40 -0.58c-0.24 -0.07 -0.53 -0.02 -0.74 -0.10c-0.41 -0.16 -0.46 -0.77 -0.54 -1.12c-0.06 -0.25 0.05 -0.58 -0.11 -0.82c-0.07 -0.10 -0.20 -0.17 -0.17 -0.30c0.06 -0.24 -0.00 -0.25 -0.01 -0.48l0.45 -0.16l0.00 0.00c0.00 -0.18 -0.07 -0.34 -0.13 -0.50c-0.06 -0.17 0.03 -0.31 -0.09 -0.48c-0.09 -0.14 -0.25 -0.22 -0.33 -0.36l-0.38 -0.36l0.00 0.00l-0.01 0.01c-0.22 0.00 -0.21 0.01 -0.39 -0.11c-0.06 -0.04 -0.16 -0.20 -0.18 -0.27c-0.06 -0.27 0.05 -0.47 -0.25 -0.58c-0.08 -0.03 -0.38 0.03 -0.41 -0.05c-0.44 0.00 -0.37 0.16 -0.61 0.45l0.00 0.00l-0.33 0.72c-0.36 0.60 -1.13 0.94 -0.13 1.58c0.78 0.50 0.40 1.18 0.02 1.72c-0.19 0.28 -0.31 1.10 -0.63 0.45c-0.39 -0.77 -0.95 -0.24 -1.49 -0.64c-0.83 -0.63 -1.36 0.32 -2.17 -0.08c-0.39 -0.20 -0.72 -0.48 -0.95 -0.86c-0.38 -0.62 -0.24 -0.66 -0.18 -1.36l0.00 0.00l-0.75 -0.28c-0.24 -0.05 -0.62 -0.33 -0.72 0.09c-0.11 0.47 -0.09 1.30 -0.51 1.59c-0.22 0.15 -0.44 0.20 -0.55 0.47c-0.14 0.38 0.01 0.38 0.06 0.70c0.60 0.65 -0.33 1.23 -0.01 1.89l0.21 0.50l0.00 0.00l0.55 0.04c0.40 -0.08 0.63 -0.21 1.01 -0.14c0.32 0.06 0.70 0.03 1.01 0.11c0.25 0.07 0.70 0.48 0.90 0.66c0.33 0.30 -0.24 0.95 0.17 0.92c0.20 -0.01 1.06 -0.19 0.94 0.10c-0.17 0.41 -0.86 0.59 -0.11 0.96c0.10 -0.01 0.04 0.00 0.10 0.02c0.04 0.15 0.06 0.56 0.26 0.56c0.09 0.00 0.14 -0.09 0.26 -0.06c0.08 0.02 0.11 0.13 0.21 0.13c0.15 0.00 0.38 -0.15 0.36 0.11c-0.01 0.15 -0.07 0.35 -0.02 0.50c0.10 0.28 0.23 0.21 0.15 0.63c-0.12 0.63 0.36 0.71 0.61 1.15c0.15 0.27 -0.04 0.27 -0.11 0.52c-0.02 0.08 0.23 0.35 0.20 0.57c0.00 0.16 -0.50 0.41 -0.07 0.51c0.09 0.02 0.21 -0.01 0.32 0.01c0.14 0.02 0.07 0.24 0.30 0.24c0.29 0.00 0.48 0.11 0.67 0.30c0.07 0.07 0.30 0.39 0.30 0.48l0.00 0.00z\"\n          },\n          25: {\n            name: \"H\\xE0 T\\u0129nh\",\n            path: \"m78.03 116.99l1.23 -0.45c0.14 -0.16 0.37 -0.68 0.60 -0.68c0.16 0.00 0.26 0.31 0.43 0.31c0.25 0.00 2.03 0.05 1.55 -0.58c0.42 -0.14 0.80 -1.01 1.50 -0.50c0.48 0.34 1.82 0.70 1.94 1.19c0.18 0.69 -0.50 1.43 0.88 1.43c1.04 0.00 2.60 0.73 3.43 -0.31c1.42 -1.76 1.76 0.27 2.92 -0.16l0.00 0.00c-0.12 -0.13 -0.23 -0.27 -0.30 -0.41c-0.27 -0.52 -0.35 -1.05 -0.55 -1.59c-0.21 -0.59 -1.52 -0.34 -2.06 -1.18c-0.54 -0.86 -1.09 -1.35 -2.03 -1.81c-0.60 -0.43 -0.97 -0.15 -1.49 -0.38c-1.03 -0.46 -2.96 -2.29 -2.96 -3.47c-0.02 -0.01 -0.03 -0.02 -0.04 -0.04c-0.06 0.00 -0.23 0.16 -0.29 0.20c-1.33 -1.00 -1.54 -2.82 -2.23 -4.20c-0.05 -0.26 -0.27 -1.44 -0.36 -1.44c-0.02 -0.05 -0.20 -0.05 -0.37 -0.09l0.00 0.00c-0.16 0.75 0.44 1.48 -0.34 1.78c-0.27 0.10 -0.25 0.06 -0.42 0.31c-0.19 0.29 -0.11 0.62 -0.36 0.94c-0.76 0.76 -1.18 -0.01 -1.74 0.39c-1.05 0.76 -0.74 -0.23 -1.44 -0.66c-0.36 -0.22 -0.62 0.08 -0.95 0.20c-0.70 0.27 -1.37 0.27 -2.04 -0.10c-0.82 -0.45 -0.76 -0.50 -1.58 0.10l-0.94 -0.29l0.00 0.00c-0.09 0.08 -0.22 0.13 -0.41 0.15c-0.60 0.04 -0.62 0.64 -0.62 1.06c-0.32 0.08 -0.20 0.84 -0.21 1.07c-0.05 0.65 -0.20 0.68 0.24 1.31c0.38 0.27 1.10 0.57 1.10 0.99c0.00 0.86 0.71 1.70 1.50 2.14c0.29 0.16 0.67 -0.37 0.73 -0.21c0.22 0.58 -0.23 1.17 0.52 1.55c0.27 0.13 0.88 0.64 1.00 0.27c0.36 -1.10 0.50 -1.01 1.44 -0.60c0.63 0.28 -0.45 1.48 0.68 1.48c0.14 0.57 0.17 0.46 0.66 0.51c0.27 0.03 0.00 1.27 0.82 1.48c0.30 0.08 0.46 0.17 0.54 0.27l0.00 0.00z\"\n          },\n          26: {\n            name: \"H\\u1EA3i D\\u01B0\\u01A1ng\",\n            path: \"m86.48 61.94l0.17 -0.33c0.48 0.15 0.44 0.62 1.01 0.38c0.42 -0.18 0.70 -0.37 1.14 -0.24c0.32 0.10 0.36 -0.12 0.44 -0.34c0.05 -0.15 0.31 -0.18 0.24 -0.41c-0.12 -0.39 0.19 -0.50 0.11 -0.79c-0.06 -0.24 -0.15 -0.41 -0.20 -0.67l-0.03 -0.27l0.00 0.00c0.12 -0.19 0.28 -0.03 0.35 -0.39c0.04 -0.20 -0.06 -1.28 0.33 -0.86c0.29 0.31 0.42 0.41 0.74 0.06c0.17 -0.19 0.37 -0.13 0.54 -0.27c0.28 -0.24 0.27 -0.55 0.76 -0.49c0.31 0.04 0.60 -0.05 0.90 -0.05l0.00 0.00l-0.23 0.88c-0.03 0.26 0.03 0.69 -0.13 0.92c-0.07 0.11 -0.78 0.56 -0.53 0.62c0.00 0.01 0.00 0.01 0.01 0.01c0.11 0.42 -0.11 0.69 0.49 0.56c0.31 -0.07 0.37 0.25 0.68 0.23c0.37 -0.03 0.84 -0.22 1.17 -0.01c0.25 0.16 0.32 0.39 0.48 0.61l0.00 0.00l-0.41 0.12c-1.17 0.00 0.18 0.84 -0.09 1.28c-0.13 0.21 -0.36 0.13 -0.53 0.21c-0.26 0.12 0.05 0.63 -0.08 0.84c0.00 0.35 0.10 0.50 -0.32 0.57c-0.16 0.03 -0.65 -0.25 -0.67 0.10c-0.01 0.16 0.19 0.23 0.14 0.36c-0.09 0.25 0.07 0.18 0.21 0.36c0.19 0.24 -0.43 0.26 -0.21 0.65c0.30 0.56 -0.46 0.43 -0.58 0.68c-0.03 0.06 0.01 0.58 -0.24 0.33c-0.10 -0.10 -0.07 0.07 -0.14 0.07c-0.11 0.00 -0.18 -0.11 -0.28 -0.15l-0.42 0.10l0.00 0.00c-0.02 0.00 -0.04 0.02 -0.05 0.04c-0.10 0.02 -0.39 0.27 -0.51 0.33c-0.28 0.14 -0.51 0.03 -0.78 0.07c-0.13 0.02 -0.24 0.12 -0.36 0.17c-0.22 0.10 -0.29 -0.20 -0.46 -0.18c-0.17 0.01 -0.20 0.18 -0.34 0.20l0.00 0.00c-0.10 -0.18 -0.27 -0.43 -0.45 -0.48c0.00 -1.21 -2.36 -0.89 -1.49 -2.63c0.20 -0.41 -0.37 -0.58 0.04 -0.99c0.20 -0.20 0.06 -0.40 0.01 -0.63l-0.43 -0.55l0.00 0.00z\"\n          },\n          27: {\n            name: \"H\\u1EA3i Ph\\xF2ng\",\n            path: \"m103.43 68.81c0.00 -0.27 -0.00 -1.17 0.48 -0.72c0.19 0.18 0.56 0.29 0.82 0.32c0.25 0.03 0.57 0.05 0.69 0.32c0.07 0.17 -0.02 0.32 -0.21 0.32c-0.37 0.00 -1.47 0.45 -1.72 0.10l-0.06 -0.33zm-2.11 -4.51c-0.18 0.00 -0.35 0.12 -0.48 0.24c-0.28 0.25 -0.93 0.02 -0.91 0.54c0.02 0.40 0.57 0.37 0.79 0.62c0.11 0.13 0.00 0.65 0.19 0.64c0.42 -0.03 0.82 0.12 1.19 0.38c0.11 0.08 0.30 0.27 0.41 0.08c0.07 -0.13 -0.52 -0.83 -0.08 -0.83c0.24 0.00 0.39 -0.10 0.44 -0.34c0.07 -0.36 -0.38 -0.42 -0.63 -0.57c-0.22 -0.14 -0.01 -0.86 -0.48 -0.70l-0.43 -0.06zm-10.02 2.30l0.42 -0.10c0.10 0.04 0.17 0.15 0.28 0.15c0.08 0.00 0.04 -0.17 0.14 -0.07c0.26 0.26 0.21 -0.27 0.24 -0.33c0.12 -0.25 0.89 -0.12 0.58 -0.68c-0.21 -0.39 0.41 -0.41 0.21 -0.65c-0.14 -0.18 -0.30 -0.11 -0.21 -0.36c0.05 -0.13 -0.15 -0.21 -0.14 -0.36c0.02 -0.35 0.50 -0.07 0.67 -0.10c0.42 -0.07 0.32 -0.22 0.32 -0.57c0.13 -0.21 -0.18 -0.72 0.08 -0.84c0.17 -0.08 0.40 -0.00 0.53 -0.21c0.27 -0.44 -1.09 -1.28 0.09 -1.28l0.41 -0.12l0.00 0.00c0.19 0.22 0.24 0.20 0.49 0.09c0.31 -0.14 0.67 0.21 0.98 0.27c0.53 0.11 1.10 -0.06 1.30 0.60c0.08 0.26 0.07 0.48 0.07 0.75c0.00 0.27 -0.23 0.49 -0.23 0.76c0.12 0.16 0.04 0.41 0.22 0.58c0.36 0.36 1.06 0.63 1.06 1.26l0.00 0.00c-0.19 -0.06 -0.38 -0.24 -0.38 -0.53c-0.12 -0.03 -0.65 -0.04 -0.69 -0.07c-0.16 -0.10 -0.35 -0.50 -0.55 -0.30c-0.19 0.19 0.09 1.17 0.23 1.36c-0.24 0.32 0.18 0.88 0.29 1.17c0.27 0.74 -0.46 -0.22 -0.69 0.14c-0.19 0.30 -0.36 0.38 -0.71 0.38c-0.12 0.49 -0.15 1.02 -0.61 1.21l0.00 0.00c-0.17 -0.17 -0.68 -0.43 -0.92 -0.51c-0.13 -0.05 -0.31 0.08 -0.42 0.13c-0.26 0.12 -0.77 0.49 -1.05 0.35c-0.41 -0.19 -0.27 -0.19 -0.69 0.01c-0.19 0.09 -0.48 -0.50 -0.55 -0.66c-0.11 -0.27 -0.68 -0.76 -0.63 -0.98c0.08 -0.34 0.20 -0.31 -0.14 -0.53l0.00 0.00z\"\n          },\n          28: {\n            name: \"H\\xf2a B\\xecnh\",\n            path: \"m76.44 73.20c0.36 0.15 0.40 -0.02 0.73 0.05c0.59 0.14 0.96 0.66 1.43 1.00c0.31 0.23 0.51 -0.09 0.80 -0.26c0.39 -0.23 -0.30 -0.97 -0.37 -1.27c-0.25 -1.06 0.98 0.35 1.01 0.38c0.03 -0.02 0.14 -0.01 0.15 -0.07c0.07 -0.02 -0.04 -0.28 -0.06 -0.33c-0.07 -0.19 -0.15 -0.51 -0.07 -0.72c0.01 -0.03 0.55 -0.33 0.61 -0.33c0.33 0.03 0.29 0.60 0.66 0.65l0.48 -0.07l0.00 0.00c-0.05 -0.23 -0.07 -0.44 -0.10 -0.68c-0.03 -0.27 -0.24 -0.39 -0.39 -0.61c-0.11 -0.16 -0.30 -0.18 -0.46 -0.27c-0.13 -0.07 -0.11 -0.19 -0.20 -0.30l-0.36 -0.58l0.00 0.00c0.00 -0.09 -0.23 -0.40 -0.30 -0.48c-0.19 -0.19 -0.39 -0.30 -0.67 -0.30c-0.23 0.00 -0.16 -0.22 -0.30 -0.24c-0.10 -0.02 -0.22 0.02 -0.32 -0.01c-0.42 -0.10 0.07 -0.35 0.07 -0.51c0.03 -0.21 -0.23 -0.48 -0.20 -0.57c0.07 -0.25 0.26 -0.25 0.11 -0.52c-0.25 -0.44 -0.73 -0.51 -0.61 -1.15c0.08 -0.42 -0.05 -0.35 -0.15 -0.63c-0.05 -0.15 0.00 -0.34 0.02 -0.50c0.02 -0.26 -0.21 -0.11 -0.36 -0.11c-0.10 0.00 -0.13 -0.10 -0.21 -0.13c-0.11 -0.03 -0.17 0.06 -0.26 0.06c-0.20 0.00 -0.22 -0.41 -0.26 -0.56c-0.06 -0.01 -0.01 -0.02 -0.10 -0.02c-0.75 -0.37 -0.06 -0.55 0.11 -0.96c0.12 -0.29 -0.75 -0.11 -0.94 -0.10c-0.41 0.03 0.16 -0.63 -0.17 -0.92c-0.20 -0.18 -0.65 -0.59 -0.90 -0.66c-0.31 -0.08 -0.69 -0.05 -1.01 -0.11c-0.38 -0.07 -0.61 0.06 -1.01 0.14l-0.55 -0.04l0.00 0.00c0.08 0.33 0.75 0.91 0.60 1.19c-0.32 0.58 -1.18 0.27 -1.60 0.18c-0.42 -0.10 -0.52 0.36 -0.86 0.36c-0.07 -0.22 -0.30 -0.60 -0.46 -0.73c-0.08 0.05 -1.00 0.41 -1.05 0.25c-0.25 0.00 -0.91 -1.00 -1.23 -1.19c-0.48 -0.30 -1.04 -0.68 -1.57 -0.82c-0.59 -0.16 -0.71 0.11 -0.71 -0.54l-0.20 -0.48l0.00 0.00l-0.66 0.23c-0.03 0.12 -0.29 0.44 -0.26 0.49c-0.11 0.03 0.19 0.44 0.23 0.51c0.28 0.58 1.08 1.96 1.63 2.30c0.61 0.38 0.20 1.62 0.56 1.80c0.97 0.48 -0.11 0.51 -0.02 1.03c0.06 0.34 0.37 0.74 -0.33 0.50c-0.45 -0.15 -1.26 -0.46 -1.74 -0.33c-1.08 0.28 -0.29 0.75 -0.48 1.18l-0.25 0.80l0.00 0.00l0.91 -0.38c0.64 -0.21 0.87 -0.13 1.47 0.31c0.27 0.19 0.36 0.83 0.52 1.10c0.03 0.05 0.78 0.40 0.86 0.38c0.26 -0.07 0.56 -0.34 0.83 -0.34c0.20 0.00 0.82 0.33 1.01 0.45c0.45 0.28 0.20 0.72 0.82 0.72c0.63 0.06 1.15 0.50 1.30 1.15c0.17 0.75 1.87 1.34 2.58 1.34c0.68 0.00 0.70 0.01 1.32 0.25c0.28 0.11 0.82 -0.19 0.97 -0.04l0.00 0.00z\"\n          },\n          29: {\n            name: \"H\\u1EADu Giang\",\n            path: \"m82.60 260.37l-0.97 -0.80l0.00 0.00l-0.43 0.37c-0.54 0.11 -0.63 0.04 -1.11 -0.07c-0.52 -0.12 -0.62 0.29 -1.07 0.36c-0.19 0.03 -0.46 -0.07 -0.35 -0.31c-0.48 -0.16 -0.34 0.24 -0.75 0.24c-0.17 0.00 -0.51 -0.49 -0.66 -0.63c-0.36 -0.36 -0.75 1.01 -1.01 1.17l0.00 0.00c0.32 0.82 -0.35 1.23 -0.97 1.54c-0.18 0.09 -0.56 0.03 -0.67 0.24c-0.09 0.17 0.10 0.36 -0.08 0.55c-0.13 0.13 -0.38 0.09 -0.45 0.24c-0.06 0.12 0.07 0.19 -0.04 0.36c-0.20 0.33 -1.28 0.63 -1.28 1.05c0.00 0.33 0.44 0.35 0.68 0.42c0.38 0.11 0.35 0.27 0.54 0.53c-0.11 0.15 -0.23 0.44 -0.46 0.50c-0.03 0.15 -0.14 0.30 -0.14 0.48l0.00 0.00c0.25 -0.05 0.66 -0.01 0.85 -0.16c0.02 0.02 0.54 0.08 0.57 0.08c0.04 0.13 0.64 0.19 0.79 0.19c0.38 0.00 0.66 -0.27 1.01 -0.35l0.00 0.00l0.69 -0.26c0.57 -0.22 1.76 -0.40 2.16 -0.90c0.58 -0.72 1.92 -0.95 2.22 -1.85c0.15 -0.44 0.55 -2.86 0.93 -2.98l0.00 0.00z\"\n          },\n          30: {\n            name: \"H\\u01B0ng Y\\xEAn\",\n            path: \"m84.28 67.05l0.55 0.37c-0.07 0.36 0.08 1.08 0.30 1.33c0.37 0.42 0.60 0.02 1.02 -0.08l0.00 0.00c0.07 -0.08 0.29 -0.08 0.29 -0.16c-0.04 -0.01 -0.06 -0.23 -0.04 -0.27c0.07 -0.18 0.30 -0.38 0.47 -0.24c0.19 0.15 0.20 0.17 0.42 0.05c0.30 -0.17 0.50 0.19 0.76 0.13c0.21 -0.05 0.48 -0.40 0.66 -0.55l0.09 -0.41l0.00 0.00c-0.10 -0.18 -0.27 -0.43 -0.45 -0.48c0.00 -1.21 -2.36 -0.89 -1.49 -2.63c0.20 -0.41 -0.37 -0.58 0.04 -0.99c0.20 -0.20 0.06 -0.40 0.01 -0.63l-0.43 -0.55l0.00 0.00c-0.17 -0.16 -0.54 -0.45 -0.71 -0.39c-0.29 0.11 -0.57 0.01 -0.86 0.09c-0.20 0.06 -0.34 0.05 -0.53 -0.03l0.00 0.00l-0.67 0.17c0.13 0.68 -0.37 0.50 -0.83 0.50c-0.01 0.04 -0.37 0.37 -0.24 0.42c0.00 0.11 0.32 0.23 0.23 0.43c-0.07 0.14 -0.55 0.45 -0.18 0.60c0.32 0.12 0.43 0.15 0.43 0.53c-0.25 0.08 -0.29 0.91 -0.15 1.10c0.07 0.10 0.25 0.05 0.36 0.11c0.11 0.06 0.31 0.31 0.36 0.32c0.00 0.15 0.07 0.32 0.07 0.49l0.54 0.78l0.00 0.00z\"\n          },\n          31: {\n            name: \"TP. H\\u1ED3 Ch\\xED Minh\",\n            path: \"m101.49 248.64l0.43 0.30c0.11 0.28 -0.27 0.41 -0.18 0.64c0.03 0.09 0.09 0.15 0.11 0.25c0.02 0.09 0.15 0.33 0.15 0.42l0.00 0.00c-0.49 0.00 -0.66 0.85 -1.23 1.04c-0.81 0.26 0.95 0.78 0.04 1.16c-0.38 0.15 -0.62 0.04 -0.98 0.35c-0.81 0.69 -0.47 -0.29 -0.91 -0.29c-0.24 0.70 -1.04 -0.72 -1.25 -0.50l0.00 0.00l-0.85 -1.24l0.00 0.00c0.28 -0.38 0.27 -1.07 0.16 -1.48c0.00 -0.33 -0.54 -0.25 -0.30 -0.69c0.24 -0.45 0.02 -0.32 -0.28 -0.60c-0.59 -0.54 -0.84 0.82 -1.52 -0.01c-0.30 -0.37 -0.95 0.21 -1.12 -0.30c-0.14 -0.42 -0.32 -0.98 -0.76 -0.98c-0.41 0.00 -0.41 -0.54 -0.75 -0.63c0.00 -0.13 0.35 -0.35 0.44 -0.45c0.21 -0.23 0.14 -0.46 0.27 -0.69c0.12 -0.33 0.15 -0.70 0.24 -1.03c0.08 -0.29 0.17 -0.47 -0.14 -0.59c-0.44 -0.17 -1.14 -0.51 -1.51 -0.84c-0.45 -0.39 -0.89 -0.01 -1.10 -0.60l0.00 0.00c0.10 -0.04 0.17 -0.11 0.28 -0.13c0.53 -0.09 0.63 -0.10 0.63 -0.68c0.00 -0.36 0.28 -0.80 0.43 -1.13l0.07 -0.47l0.00 0.00l0.39 -0.40c0.24 0.15 0.47 0.16 0.71 0.31c0.39 0.25 0.17 0.39 0.26 0.64c0.14 0.00 0.12 0.54 0.29 0.69c0.22 0.21 0.29 0.28 0.61 0.23c0.65 -0.12 0.37 0.35 0.52 0.62c0.05 0.09 0.23 0.04 0.31 0.20c0.10 0.22 0.03 0.20 0.24 0.33c0.44 0.14 0.08 0.82 0.64 1.00c0.42 0.14 0.27 0.52 0.49 0.82c0.22 0.30 0.41 -0.40 0.66 -0.08c0.15 0.19 0.21 0.47 0.44 0.16c0.24 -0.31 0.38 0.10 0.65 -0.03c0.20 -0.09 0.36 -0.34 0.55 -0.38l0.00 0.00l0.33 0.84c0.08 0.15 0.72 1.24 0.30 1.34c-0.01 0.04 -0.31 -0.03 -0.41 0.05c-0.38 0.30 -0.29 -0.21 -0.62 0.00c-0.42 0.27 -1.18 0.84 -0.94 1.42c0.09 0.22 0.91 0.75 1.14 0.97c0.34 0.34 0.62 -0.21 1.02 -0.16c0.27 0.03 0.35 0.35 0.52 0.52c0.14 0.14 0.72 0.38 0.94 0.51c0.29 0.17 0.57 -0.21 0.57 -0.46l0.00 0.00z\"\n          },\n          32: {\n            name: \"Kh\\xe1nh H\\xf2a\",\n            path: \"m142.53 213.35c-0.26 -0.20 -0.72 -0.47 -1.02 -0.17c-0.22 0.22 -0.10 0.50 0.15 0.57c0.36 0.11 0.64 0.40 0.94 0.58c0.07 0.04 0.30 0.19 0.36 0.06c0.09 -0.20 -0.17 -0.47 -0.31 -0.61l-0.12 -0.44zm-1.99 7.39c-0.17 -0.09 -0.40 -0.35 -0.08 -0.39c0.09 -0.01 0.19 0.00 0.28 -0.03c0.07 -0.02 0.14 -0.07 0.21 -0.01c0.15 0.13 0.30 -0.02 0.47 -0.02c0.23 0.00 0.37 0.35 0.13 0.46c-0.11 0.05 -0.22 0.12 -0.34 0.16c-0.16 0.06 -0.32 -0.01 -0.48 0.00l-0.18 -0.16zm-9.40 0.69l0.64 0.01c0.13 -0.03 0.43 -0.03 0.53 -0.10c0.07 0.20 -0.13 0.50 -0.05 0.76c0.07 0.25 0.24 1.08 0.35 1.26c0.17 0.25 0.73 0.29 0.89 0.61c0.12 0.24 -0.21 0.59 0.20 0.76c0.29 0.12 1.09 0.37 1.27 0.56c0.43 0.43 0.89 0.13 1.36 0.37c0.37 0.21 0.70 0.70 0.84 1.12c0.17 0.51 0.32 0.67 0.76 0.88c0.15 0.08 0.30 0.17 0.48 0.16c0.27 -0.02 0.66 -0.38 0.89 -0.42l0.00 0.00c-0.12 -0.43 0.07 -1.02 -0.21 -0.60c-0.13 0.19 -0.43 0.81 -0.74 0.69c-0.22 -0.09 -0.50 -0.29 -0.32 -0.54c0.21 -0.29 0.13 -0.35 0.13 -0.68c0.00 -0.30 0.38 -0.22 0.56 -0.33c0.14 -0.09 0.62 -1.12 0.82 -0.84c0.49 0.70 -0.61 1.06 0.88 1.48c0.43 0.12 0.42 -0.24 0.25 -0.51c-0.37 -0.60 0.04 -0.71 -0.44 -1.37c-0.39 -0.55 -0.60 -1.23 -0.88 -1.86c-0.21 -0.47 -0.08 -0.69 0.36 -0.88c0.50 -0.22 -0.15 -0.60 -0.15 -0.80c-0.05 -0.28 -0.14 -0.79 -0.01 -1.01c0.22 -0.37 -0.19 -0.62 -0.08 -0.91c0.09 -0.22 0.61 -0.06 0.50 -0.54c-0.10 -0.44 -1.31 -1.98 -1.16 -2.18c0.45 -0.57 0.95 0.23 1.23 0.57c0.21 0.26 0.89 0.56 1.19 0.79c0.13 -0.20 0.57 -0.45 0.37 -0.81c-0.18 -0.33 -0.54 -0.35 -0.77 -0.58c-0.24 -0.24 0.18 -0.72 -0.32 -1.17c-0.32 -0.29 -0.63 -0.29 -0.63 -0.76c0.00 -0.14 0.30 -0.82 -0.04 -0.55c-0.52 0.41 -0.78 -0.23 -0.44 -0.69c0.19 -0.26 0.21 -0.29 0.18 -0.58c-0.04 -0.38 0.23 -0.42 0.41 -0.73c0.43 -0.29 0.74 -0.68 1.13 -0.97c0.33 -0.24 0.57 -0.55 0.85 -0.84c0.22 -0.22 0.11 0.49 0.15 0.64c0.26 0.93 0.23 0.70 -0.35 1.50c-0.47 0.66 0.94 -0.28 0.98 0.07c0.04 0.38 -0.23 0.79 -0.02 0.97c0.26 0.23 0.34 0.54 0.55 0.78c0.08 0.09 0.30 0.09 0.30 -0.07c0.00 -0.42 -0.62 -0.84 -0.12 -1.24c0.34 -0.27 -0.47 -1.00 -0.71 -1.30c-0.17 -0.21 -0.66 -1.45 -0.50 -1.77c0.13 -0.27 0.38 -0.44 0.62 -0.65l0.00 0.00c-0.02 -0.10 -0.21 -0.44 -0.31 -0.44c-0.08 -0.24 -0.55 0.08 -0.62 0.18c-0.29 0.41 -0.57 0.27 -0.99 0.37c-0.89 0.21 -1.37 -0.20 -2.00 0.56c-0.30 0.37 -0.79 0.28 -1.17 0.36c-0.08 0.41 -0.28 0.74 -0.73 0.74c-0.55 0.00 -0.72 0.51 -1.18 0.64l0.00 0.00l-0.14 0.21c-0.21 0.27 -0.06 0.37 -0.11 0.64c-0.03 0.17 -0.25 0.40 -0.18 0.54c0.06 0.13 0.08 0.27 0.05 0.41c-0.04 0.16 -0.33 0.14 -0.47 0.14c-0.57 0.11 -1.04 -0.01 -1.18 0.58c-0.05 0.20 -0.33 1.25 -0.26 1.37c0.12 0.21 0.62 0.89 -0.14 0.68c-0.33 -0.09 -0.91 -0.25 -1.16 -0.50c-0.68 -0.69 -0.68 0.42 -1.26 0.19c-0.27 -0.10 -0.40 0.41 -0.50 0.54c-0.34 0.42 0.03 1.53 -0.07 2.14l0.00 0.00c0.16 0.22 0.42 0.39 0.50 0.67c0.04 0.14 -0.10 0.50 -0.02 0.61c-0.02 0.02 0.00 0.06 0.00 0.10c0.09 0.03 0.18 0.63 0.23 0.75c0.06 0.19 -0.08 0.69 0.01 0.82l0.00 0.00z\"\n          },\n          33: {\n            name: \"Ki\\xean Giang\",\n            path: \"m49.16 257.52c-0.21 -0.94 -0.28 -2.23 -1.07 -2.84c-0.64 -0.49 -1.56 -0.60 -1.26 -1.83c0.49 0.00 0.97 0.41 1.45 0.02c0.58 -0.46 0.87 -1.77 1.51 -0.81c0.24 0.36 0.67 0.37 0.87 0.78c0.30 0.60 0.24 1.79 0.24 2.48c0.00 0.59 -0.50 0.93 -0.61 1.48c-0.11 0.59 -0.18 1.32 -0.18 1.91c0.00 0.24 0.07 0.61 -0.30 0.58c-0.51 -0.04 -0.31 -0.77 -0.56 -1.01l-0.10 -0.76zm10.91 5.43c0.09 -0.12 0.23 -0.24 0.38 -0.28c0.11 -0.03 0.25 -0.01 0.35 0.05c0.20 0.14 -0.07 0.27 -0.19 0.29c-0.10 0.02 -0.18 0.07 -0.28 0.10c-0.13 0.05 -0.20 0.01 -0.32 -0.02l0.07 -0.15zm3.17 -12.55c-0.65 -0.10 -1.31 -0.30 -1.90 -0.41c-0.38 -0.07 -0.77 0.25 -1.07 0.02c-0.13 0.10 -0.87 0.60 -1.00 0.60c-0.00 0.01 -0.05 0.05 -0.06 0.06c0.00 0.02 0.01 0.02 -0.01 0.02c0.00 0.30 -0.22 0.56 -0.29 0.76c-0.03 0.00 -0.05 -0.00 -0.06 0.02c-0.19 0.00 -0.65 0.58 -0.70 0.75c-0.15 0.00 -0.30 -0.21 -0.42 -0.31l-0.65 0.10l0.00 0.00c0.11 0.24 0.13 0.50 0.40 0.72c0.51 0.41 0.87 0.88 1.07 1.49c0.19 0.58 1.11 0.42 1.11 1.25c0.07 0.74 0.00 1.80 0.99 1.55c0.00 -0.60 1.77 -1.55 2.35 -1.21c0.85 0.50 0.86 1.35 1.49 1.98c0.39 0.39 0.39 1.00 0.85 0.37c1.14 -1.58 3.37 1.58 3.15 2.49c-0.54 0.00 -0.76 -0.34 -1.29 0.13c-0.60 0.53 -0.80 1.49 -1.80 1.35c-0.72 -0.10 -0.86 1.32 -1.17 1.87c0.05 0.56 -0.56 2.28 -0.24 2.71c-0.06 0.14 -0.10 0.33 -0.13 0.56l0.00 0.00l1.19 0.88l0.51 -1.23l0.45 0.51l0.24 -0.24l0.57 0.16l0.30 -0.31l3.80 2.39l1.22 0.67l0.00 0.00l0.38 -0.12l-0.45 -1.05c0.00 -0.60 0.12 -0.79 0.52 -1.19c0.37 -0.37 -0.33 -0.91 -0.50 -1.24c-0.07 -0.15 -0.13 -0.78 0.14 -0.61c0.33 0.21 0.34 0.30 0.76 0.36c0.05 0.01 0.15 0.11 0.15 0.11c0.02 0.10 0.14 0.17 0.24 0.20l0.00 0.00c0.00 -0.17 0.11 -0.33 0.14 -0.48c0.24 -0.06 0.35 -0.35 0.46 -0.50c-0.19 -0.25 -0.15 -0.42 -0.54 -0.53c-0.24 -0.07 -0.68 -0.09 -0.68 -0.42c0.00 -0.42 1.07 -0.72 1.28 -1.05c0.10 -0.17 -0.02 -0.24 0.04 -0.36c0.08 -0.15 0.32 -0.11 0.45 -0.24c0.18 -0.18 -0.00 -0.38 0.08 -0.55c0.10 -0.21 0.49 -0.15 0.67 -0.24c0.62 -0.31 1.28 -0.71 0.97 -1.54l0.00 0.00l-3.04 -2.90l-0.17 -0.54l-0.49 -0.53l-0.35 0.14l-1.41 -1.18l0.00 0.00l-0.25 0.35l-1.37 -1.16l-1.94 -1.34l-2.60 -0.55l-1.30 -2.16l-0.11 -0.44l0.00 0.00z\"\n          },\n          34: {\n            name: \"Kon Tum\",\n            path: \"m109.85 180.33l1.14 0.08c0.34 0.00 0.66 0.31 1.05 0.23c0.42 -0.09 0.73 -0.45 1.22 -0.48c0.45 -0.03 0.26 0.60 0.36 0.84c0.11 0.25 0.71 1.08 0.52 1.29c-0.41 0.46 -0.88 0.31 -0.88 1.10c0.19 0.45 0.07 0.77 0.18 1.19c0.01 0.00 0.01 0.00 0.01 0.01c0.30 0.08 0.91 0.44 1.19 0.21c0.36 -0.30 0.62 -0.01 0.95 -0.21c0.39 -0.23 0.72 -1.39 1.33 -1.01c0.57 0.35 0.71 0.88 1.45 0.81c0.12 -0.03 0.16 -0.18 0.29 -0.18c0.26 -0.01 0.36 0.10 0.46 -0.22c0.13 -0.41 0.67 -0.12 0.78 -0.81c0.05 -0.28 0.32 -0.80 0.58 -0.94c0.24 -0.13 0.56 -0.19 0.83 -0.16c0.48 0.06 0.74 -0.44 1.16 -0.56c0.41 -0.11 0.65 0.13 1.11 -0.07c0.46 -0.28 0.64 -1.16 1.07 -1.52c0.33 -0.27 0.76 -0.59 0.55 -1.04c-0.16 -0.35 -0.43 -0.53 -0.32 -0.98c0.15 -0.66 1.24 0.44 1.46 0.64c0.57 0.53 0.86 0.23 1.32 -0.23l0.39 -0.31l0.00 0.00c0.00 -0.41 -0.26 -0.62 -0.66 -0.62c-0.68 0.00 0.04 -0.79 0.11 -0.97c0.10 -0.25 -0.29 -0.42 -0.18 -0.62c0.25 -0.44 0.29 -0.34 0.12 -0.90c-0.30 -0.97 -0.44 -0.24 -1.07 -0.63c-0.87 -0.54 -0.80 -0.69 -1.30 -1.48c-0.06 -0.09 -0.45 -0.32 -0.44 -0.35l-1.28 -1.42l-0.42 -0.91l0.00 0.00c-0.66 0.17 -0.78 -0.37 -1.30 -0.37c-0.91 0.00 -0.20 1.04 -0.39 1.48c-0.14 0.33 -0.84 0.10 -1.12 0.10c-0.54 0.00 -0.56 -0.71 -1.29 -0.64c-0.41 0.00 -0.92 -0.49 -0.86 -0.91c0.07 -0.49 0.50 -0.68 0.69 -1.10c0.29 -0.66 -0.73 -1.66 -1.35 -1.62c-0.86 0.05 -1.27 -0.26 -2.01 -0.35c-1.49 -0.18 -0.65 -0.73 -1.36 -1.43c-0.37 -0.37 -0.60 -0.02 -0.89 -0.67c-0.12 -0.27 -0.24 -1.52 -0.79 -1.15l-0.66 0.58l0.00 0.00c0.50 0.55 1.21 1.46 1.32 1.70c0.34 0.72 0.02 0.87 0.18 1.49c0.09 0.36 -0.28 0.27 -0.46 0.32c-0.47 0.12 -0.05 0.35 -0.15 0.49c0.10 0.14 -0.02 0.39 -0.08 0.55c-0.19 0.38 -0.64 0.36 -0.46 0.88c0.08 0.24 0.21 0.51 -0.14 0.55c-0.63 0.07 -0.07 0.29 -0.85 0.01c-0.30 -0.11 -0.48 0.17 -0.68 0.32c-0.11 -0.08 -0.71 0.08 -0.77 0.24c-0.18 0.47 0.85 1.30 1.11 1.50c0.35 0.27 0.53 0.55 0.98 0.82c0.29 0.18 -0.83 0.95 -1.01 1.22c-0.14 0.20 -0.60 0.54 -0.18 0.78c0.45 0.25 -0.14 0.69 0.06 0.69c0.00 0.01 0.12 0.14 0.14 0.18l0.07 0.45l0.00 0.00c0.56 0.00 0.03 1.58 -0.39 1.83c0.01 0.02 0.02 0.79 0.08 1.01c0.08 0.30 -0.22 0.76 -0.43 0.99c-0.05 0.06 -0.08 0.14 -0.09 0.23l0.00 0.00z\"\n          },\n          35: {\n            name: \"Lai Ch\\xe2u\",\n            path: \"m47.66 48.82c0.04 -0.21 -0.12 -0.63 0.04 -0.74c0.34 -0.24 1.04 -0.14 0.77 -0.82c-0.19 -0.50 -0.81 -1.05 -1.11 -1.53c-0.20 -0.31 -0.31 -0.84 -0.13 -1.21c0.16 -0.31 0.52 -0.08 0.79 -0.08c0.08 0.25 0.53 -0.28 0.58 -0.32l0.26 -0.41l0.00 0.00c-0.03 -0.17 -0.20 -0.63 -0.39 -0.68c-0.07 -0.34 0.02 -0.43 0.02 -0.74c0.00 -0.33 -0.28 -0.41 -0.38 -0.67c-0.20 -0.48 0.24 -1.05 -0.27 -1.46c-0.24 -0.19 -0.79 -0.23 -0.93 -0.42c0.16 -0.22 -0.20 -0.51 -0.20 -0.68c-0.03 -0.01 -0.09 -0.13 -0.10 -0.14c-0.21 -0.37 -0.25 -0.91 -0.58 -1.13c-0.22 -0.15 -0.85 -0.24 -0.88 -0.50c-0.04 -0.34 0.35 -0.53 0.35 -0.75c0.00 -1.71 -2.08 -0.95 -2.97 -0.95c-0.09 -0.28 -0.28 -0.87 -0.61 -0.97c-0.44 -0.14 -0.37 -0.52 -0.11 -0.81c0.70 -0.79 0.40 -0.94 -0.29 -1.64l-0.56 -0.46l0.00 0.00c-0.03 -0.08 -0.39 -0.42 -0.49 -0.42c-0.00 -0.01 -0.09 -0.09 -0.10 -0.10c0.00 -0.09 -0.08 -0.19 -0.08 -0.27c-0.02 -0.01 -0.02 -0.03 -0.02 -0.06c-0.02 -0.01 -0.38 -0.70 -0.50 -0.81c-0.36 -0.36 -0.07 -0.37 0.02 -0.79c0.10 -0.45 -1.21 -0.99 -1.54 -1.12c-0.07 -0.03 -0.39 -0.21 -0.41 -0.17l-0.02 0.00l-0.50 1.78c-0.31 1.08 -1.46 0.90 -2.11 1.50c-0.85 0.85 0.64 1.08 -0.26 1.64c-0.39 0.24 -1.53 0.75 -1.42 1.28c0.09 0.43 -0.22 1.00 -0.70 0.63c-0.08 0.05 -0.65 -0.06 -0.68 -0.18c-0.04 -0.01 -0.20 -0.36 -0.21 -0.42c-0.03 -0.01 -0.03 -0.03 -0.06 -0.04c-0.09 -0.37 -1.06 0.35 -1.16 -0.61c-0.03 -0.25 -0.19 -0.30 -0.33 -0.48c-0.16 -1.27 -0.71 -1.62 -1.92 -1.62c-0.10 -0.39 -1.59 -1.53 -1.89 -1.46c-0.34 0.09 -0.55 0.23 -0.76 -0.20c-0.28 -0.56 -0.43 -0.32 -0.77 0.02c-0.31 0.31 -0.97 -0.80 -1.08 -1.05c-0.43 -0.97 -1.26 0.60 -1.38 1.00c-0.21 0.69 -0.81 0.49 -0.92 0.68c-0.11 0.19 0.10 0.42 0.18 0.63c0.00 0.27 -0.76 1.18 -1.00 1.36c-0.15 0.11 -0.27 0.22 -0.38 0.34l0.00 0.00l0.29 0.41c0.16 0.81 1.12 0.76 0.89 1.67c-0.10 0.40 0.03 0.63 0.35 0.87c0.39 0.29 0.58 0.55 0.88 0.92c0.03 0.29 0.51 1.07 0.69 1.31c0.46 0.59 0.41 0.31 0.93 0.17c0.92 -0.25 0.78 0.82 1.05 1.18c0.22 0.28 1.09 0.86 1.09 0.09c0.00 -0.31 -0.37 -0.79 -0.24 -1.06c0.11 -0.26 1.17 0.40 1.26 0.66c0.29 0.81 -0.69 1.02 0.17 1.80c0.79 0.69 0.53 0.90 1.67 0.78c0.54 -0.06 1.08 -0.72 1.35 -0.02c0.10 0.26 0.34 0.89 0.69 0.89c0.22 0.00 0.44 -0.40 0.79 -0.42c0.20 -0.01 1.09 0.02 1.13 -0.15c0.20 -0.75 0.13 -0.91 0.64 -0.32c0.33 0.25 0.51 0.12 0.91 0.12c0.55 0.00 1.04 0.52 1.56 0.59c0.43 0.06 0.30 -0.27 0.20 -0.48c-0.20 -0.41 0.01 -0.46 0.09 -0.76c0.28 -0.11 0.34 -0.39 0.49 -0.62c0.15 -0.24 1.11 -0.36 1.28 -0.10c0.20 0.32 0.29 0.74 0.48 1.07c0.32 0.57 0.86 0.51 0.64 1.23c-0.17 0.56 0.35 0.83 0.77 1.02l0.00 0.00c0.43 -0.60 0.49 -1.61 1.43 -0.84c0.30 0.25 0.75 0.25 1.04 0.48c0.15 0.12 0.28 0.19 0.43 0.36c0.04 0.04 0.05 0.19 0.06 0.26c0.01 0.06 0.08 0.27 0.06 0.27c0.17 0.14 0.80 1.22 0.73 1.47c-0.22 0.73 -0.57 0.97 0.32 1.18c0.38 0.09 0.40 0.35 0.57 0.62c0.35 0.54 0.89 0.33 1.23 1.13c0.37 0.88 0.75 0.27 1.30 0.27l0.00 0.00z\"\n          },\n          36: {\n            name: \"L\\xe0o Cai\",\n            path: \"m48.86 43.72l0.25 0.43c-0.06 0.58 1.17 0.87 1.48 0.70c0.53 -0.30 1.13 0.14 1.66 0.35c1.53 0.59 -0.15 -1.71 1.24 -0.79c0.10 0.06 0.95 0.10 1.13 0.14c0.27 0.06 0.42 0.86 0.67 0.86c0.06 0.17 0.35 -0.24 0.38 -0.27c0.06 -0.09 0.37 -0.38 0.38 -0.44c1.72 -0.34 -0.35 -2.87 -0.15 -3.31c0.14 -0.31 0.38 -0.37 0.25 -0.78c-0.17 -0.52 -0.16 -0.88 0.37 -1.07c0.58 -0.21 0.93 0.62 1.26 0.95c0.21 0.16 0.57 0.33 0.71 0.54c0.08 0.11 0.29 0.36 0.43 0.36c0.01 0.02 0.07 0.02 0.10 0.02c0.04 0.12 0.32 -0.35 0.32 -0.50c0.00 -0.32 -0.19 -0.97 0.29 -1.00c0.43 -0.03 0.60 -0.22 0.60 -0.68c-0.41 -0.14 -0.94 0.04 -0.94 -0.69l0.00 0.00l-0.45 -0.14c-0.04 -0.21 -0.32 -0.30 -0.07 -0.47c0.23 -0.15 0.39 -0.12 0.39 -0.47c0.00 -0.18 0.05 -0.16 0.13 -0.29c0.12 -0.19 0.01 -0.46 -0.19 -0.55c-0.53 -0.24 0.02 -0.20 -0.27 -0.49c-0.14 -0.14 -0.37 -0.25 -0.55 -0.32c-0.40 -0.23 -0.41 -0.32 -0.58 -0.68c-0.11 -0.22 -0.43 -0.16 -0.51 -0.42c-0.21 -0.69 0.37 -0.75 -0.41 -1.18c-0.35 -0.20 -0.07 -0.60 -0.07 -0.90c0.41 -0.14 1.20 -0.22 0.56 -0.80c-0.50 -0.45 -0.57 -0.54 -0.87 -1.11c-0.13 -0.24 -0.79 -0.08 -1.07 -0.33l0.14 -0.42l0.00 0.00c-0.16 -0.23 -0.26 -0.54 -0.45 -0.63c-1.04 -0.52 -0.99 -0.06 -0.80 -1.52c0.10 -0.75 -1.84 0.16 -2.31 0.16c-0.86 0.00 -0.66 0.67 -1.20 1.04c-0.13 0.08 -0.65 0.55 -0.56 0.68c-0.52 0.52 -0.30 2.88 -0.54 3.70l-0.94 0.33c-0.89 -1.02 -1.73 -2.12 -2.75 -2.90c-0.98 -0.74 -1.83 -1.65 -2.65 -2.55l-0.45 0.45c-0.27 0.34 -0.16 0.69 -0.58 0.95c-0.25 0.16 -0.09 0.56 -0.11 0.81c-0.04 0.72 -0.42 1.21 -1.14 1.21l0.00 0.00l0.56 0.46c0.69 0.70 0.99 0.85 0.29 1.64c-0.26 0.29 -0.34 0.68 0.11 0.81c0.33 0.10 0.52 0.69 0.61 0.97c0.89 0.00 2.97 -0.76 2.97 0.95c0.00 0.23 -0.38 0.41 -0.35 0.75c0.03 0.27 0.66 0.35 0.88 0.50c0.34 0.23 0.37 0.77 0.58 1.13c0.01 0.01 0.06 0.13 0.10 0.14c0.00 0.17 0.37 0.46 0.20 0.68c0.14 0.19 0.68 0.22 0.93 0.42c0.51 0.41 0.08 0.97 0.27 1.46c0.10 0.25 0.38 0.34 0.38 0.67c0.00 0.31 -0.09 0.40 -0.02 0.74c0.19 0.05 0.36 0.51 0.39 0.68l0.00 0.00z\"\n          },\n          37: {\n            name: \"L\\u1EA1ng S\\u01A1n\",\n            path: \"m85.96 44.18l0.49 0.31c-0.12 0.32 -0.10 0.35 -0.30 0.61c-0.18 0.24 0.35 0.54 0.10 0.87c-0.14 0.18 -0.38 0.76 -0.14 0.99c-0.02 0.01 0.15 0.12 0.18 0.14c0.26 0.21 0.54 0.62 0.80 0.78c0.20 0.13 1.55 0.39 1.13 0.81c-0.38 0.38 -0.34 0.86 -0.54 1.32l-0.35 0.41l0.00 0.00c-0.18 0.25 -0.31 0.27 -0.27 0.62c0.02 0.25 -0.07 0.45 -0.07 0.70c0.16 0.05 0.01 0.56 0.46 0.56c0.38 0.00 0.34 0.01 0.63 0.19c0.30 0.18 0.76 -0.09 1.10 0.02c0.32 0.11 -0.19 0.68 0.27 0.78c0.75 -0.07 0.26 0.83 0.88 0.95c0.39 0.08 0.92 0.30 0.97 -0.29c0.02 -0.22 0.27 -0.62 0.56 -0.51c0.17 0.06 0.56 0.17 0.56 -0.16c0.00 -0.39 0.50 -0.49 0.75 -0.74c0.13 -0.13 -0.11 -0.28 -0.11 -0.45c0.00 -0.26 0.21 -0.37 0.31 -0.58c0.33 -0.52 0.57 -1.48 1.39 -1.25c0.43 0.12 1.04 -0.08 1.39 0.23c0.52 0.46 0.60 1.70 1.28 0.68c0.51 -0.76 0.99 0.25 1.35 0.37c0.00 0.79 -0.08 0.65 0.62 0.82c0.50 0.13 0.47 0.58 0.61 0.99c0.46 0.00 0.08 -0.07 0.45 0.18c0.46 0.30 0.78 -0.47 1.06 -0.10c0.27 0.36 -0.58 0.67 -0.21 1.04c0.25 0.17 0.41 0.23 0.48 0.54c0.04 0.19 0.42 0.37 0.42 0.51l0.00 0.00c0.08 -0.10 0.33 -0.51 0.48 -0.51c0.01 -0.02 0.44 -0.09 0.55 -0.36c0.26 -0.67 0.68 0.07 0.99 -0.02c0.23 -0.07 0.30 -0.27 0.57 -0.27c0.27 0.00 0.36 0.08 0.57 0.12c0.06 0.24 0.56 -0.09 0.63 -0.21c0.12 -0.22 -0.00 -0.58 -0.07 -0.80c-0.14 -0.44 -0.30 -0.77 -0.17 -1.28c-0.00 -0.03 -0.01 -0.19 -0.06 -0.20c0.00 -0.12 -0.22 -0.36 -0.26 -0.50c-0.16 -0.53 0.30 -0.35 0.55 -0.39c0.34 -0.05 0.34 -0.53 0.66 -0.53c0.02 -0.05 0.22 -0.02 0.27 -0.02c0.14 0.00 0.61 -0.19 0.75 -0.19l0.00 0.00c-0.13 -0.25 -0.18 -0.75 -0.27 -1.22c-0.69 -0.17 -0.04 -1.40 -1.26 -0.99c-0.48 0.16 -1.31 0.74 -1.53 -0.13c-0.73 -0.19 -0.77 -0.71 -1.28 -1.07c-0.43 -0.31 -1.43 -0.27 -1.51 -0.78c0.00 -0.28 -0.30 -0.44 0.01 -0.67c0.29 -0.21 0.44 -0.30 0.56 -0.62c0.15 -0.40 -0.84 -0.61 -0.92 -0.85l-0.07 0.00c-0.41 1.25 -1.14 -0.00 -1.47 -0.25c-0.56 -0.43 -1.58 -0.16 -2.23 -0.26c-0.41 -0.06 -1.13 -0.58 -1.39 0.20c-0.72 0.00 0.33 -2.77 -0.23 -3.38c-0.52 -0.57 0.14 -0.93 0.10 -1.38c-0.03 -0.15 -0.21 -0.81 -0.27 -0.94c-0.22 -0.45 -0.47 -0.05 -0.42 -0.74c0.07 -0.95 -1.36 -0.21 -1.57 -0.75c-0.14 -0.37 0.17 -0.90 0.02 -1.32c-0.01 -0.04 -0.03 -0.08 -0.04 -0.12l0.00 0.00c-0.55 0.33 -1.08 0.41 -1.49 0.94c-0.50 0.64 -0.47 0.26 -1.12 0.18c-0.27 -0.03 -0.64 0.19 -0.85 0.08c-0.40 -0.20 -0.24 -0.73 -0.57 -0.90c-0.50 -0.25 -0.92 -0.24 -1.26 -0.74c-0.22 -0.32 -0.53 0.13 -0.66 0.07c-0.01 0.04 -0.31 0.35 -0.37 0.43l-0.21 0.62l0.00 0.00l0.50 0.54c0.18 0.48 -0.27 0.53 -0.23 0.92c0.02 0.18 0.16 0.27 0.30 0.36c0.08 0.06 0.33 0.28 0.30 0.30c0.47 0.47 -0.27 1.00 -0.01 1.67c0.04 0.11 -1.17 1.98 -1.61 1.98c-1.56 0.00 -0.08 1.62 -0.51 2.35l-0.14 0.30l0.00 0.00z\"\n          },\n          38: {\n            name: \"L\\xE2m \\u0110\\u1ED3ng\",\n            path: \"m130.42 218.48c0.16 0.22 0.42 0.39 0.50 0.67c0.04 0.14 -0.10 0.50 -0.02 0.61c-0.02 0.02 0.00 0.06 0.00 0.10c0.09 0.03 0.18 0.63 0.23 0.75c0.06 0.19 -0.08 0.69 0.01 0.82l0.00 0.00l-0.30 0.05c-0.12 -0.03 -0.24 0.22 -0.26 0.32c-0.03 0.17 0.07 0.28 0.10 0.42c0.06 0.02 0.17 0.32 0.19 0.39c0.04 0.14 0.02 0.34 -0.04 0.47c-0.15 0.56 -0.64 1.09 -0.70 1.62c-0.07 0.61 -0.11 1.17 -0.11 1.80c0.00 0.60 -0.22 0.35 -0.48 0.79c-0.21 0.35 0.59 0.58 0.64 0.79c0.09 0.32 0.04 1.22 0.46 1.32c0.00 1.41 -2.89 0.16 -2.24 2.01l0.22 0.68l0.00 0.00c0.00 1.17 -0.78 0.49 -1.45 0.47c-0.35 -0.01 -0.84 0.25 -1.14 0.14c-0.42 -0.16 -0.87 0.42 -1.08 0.10c-0.40 -0.61 -1.00 -0.08 -1.45 0.17c-0.44 0.89 0.14 0.84 0.49 1.42c-0.17 0.44 -1.04 1.21 -1.40 1.58c-0.57 0.57 -1.56 0.72 -2.26 1.19c-0.20 0.13 -0.70 0.89 -0.80 0.42c-0.10 -0.46 0.06 -1.02 -0.35 -1.40c-0.50 -0.47 -1.77 -0.64 -2.43 -0.83c-0.67 -0.07 -1.57 -0.09 -2.23 0.04c-0.69 0.14 -0.87 1.25 -1.69 0.69c-0.30 -0.20 -0.95 -0.31 -1.13 -0.54c-0.57 -0.72 -0.40 -0.18 -0.89 0.13l0.00 0.00c-0.18 -0.18 -0.34 -0.64 -0.62 -0.70c0.01 -0.01 -0.12 -0.21 -0.13 -0.30c-0.02 -0.14 -0.06 -0.25 -0.18 -0.33c-0.18 -0.12 -0.69 -0.04 -0.69 -0.23c0.00 -0.22 0.27 -0.26 0.30 -0.43c0.26 -0.41 0.05 -0.32 -0.18 -0.60c-0.20 -0.24 -0.49 -0.17 -0.67 -0.37c-0.14 -0.15 -0.26 -0.10 -0.45 -0.02c-0.23 0.10 -0.24 -0.40 -0.27 -0.56c-0.09 -0.63 -0.39 0.24 -0.64 0.20l0.00 0.00c-0.06 -0.25 -0.46 -0.36 -0.54 -0.58c-0.14 -0.39 0.12 -0.67 -0.26 -0.98c-0.28 -0.23 -0.43 -0.41 -0.20 -0.78c0.18 -0.28 0.10 -0.62 0.28 -0.90c0.26 -0.40 0.68 -0.28 0.99 -0.54l0.66 -0.14l0.00 0.00c0.19 -0.01 0.28 0.14 0.49 0.14c0.16 0.00 0.21 -0.14 0.31 -0.14c0.01 -0.02 0.46 -0.03 0.62 -0.39c0.22 -0.48 1.10 0.13 1.42 -0.27c0.42 -0.52 0.99 -0.64 1.39 -1.07c0.24 -0.26 1.36 -1.54 1.57 -0.76c0.32 1.15 0.83 0.98 1.94 0.56c0.24 0.00 0.89 -0.11 1.04 0.13c0.12 0.19 -0.06 0.59 -0.01 0.84c0.08 0.35 0.45 0.17 0.62 0.04c0.27 -0.22 0.46 0.54 1.10 0.20c0.53 -0.28 1.61 -0.84 1.78 -1.48c0.04 -0.15 -0.62 -1.13 -0.77 -1.21c-0.14 -0.07 -0.45 -0.78 -0.58 -0.99c-0.24 -0.40 -0.01 -0.37 -0.44 -0.62c-0.92 -0.55 -0.06 -0.90 0.12 -1.37c0.30 -0.77 1.08 0.08 1.53 -0.19l0.49 -0.61l0.00 0.00c0.34 -0.07 0.60 -0.42 0.98 -0.23c0.29 0.14 0.84 0.49 1.17 0.38c0.30 -0.09 0.76 -1.19 1.07 -0.95c0.29 -0.21 0.69 -0.45 0.98 -0.67c0.60 0.44 0.85 -0.01 1.35 -0.29c0.18 -0.10 0.45 -0.58 0.63 -0.56c0.28 0.03 0.33 0.64 0.79 0.36c0.54 -0.33 0.86 0.19 1.35 0.04c0.43 -0.13 0.97 -0.51 1.32 -0.78l0.00 0.00z\"\n          },\n          39: {\n            name: \"Long An\",\n            path: \"m75.84 242.66l0.28 0.63l1.08 0.07l0.39 1.12l-0.28 0.10l1.47 1.52l1.72 1.59l0.71 0.16l1.42 1.89l0.64 0.13l0.00 0.00l1.97 0.21c0.38 -0.02 0.79 0.01 0.70 -0.44c-0.12 -0.57 0.27 -0.38 0.66 -0.41l2.49 -0.18c0.86 -0.06 1.32 1.88 2.08 1.94c1.65 0.12 -0.31 0.93 0.49 1.10c0.28 0.06 0.86 0.36 0.95 0.07c0.40 -0.40 0.56 -0.36 1.07 -0.17c0.59 0.22 0.39 0.08 0.80 -0.26c0.22 -0.18 0.48 -0.10 0.66 -0.38c0.38 -0.62 0.37 0.05 0.57 0.39c0.19 0.31 0.71 -0.64 0.88 -0.72c0.10 -0.05 0.18 -0.12 0.24 -0.21l0.00 0.00c0.28 -0.38 0.27 -1.07 0.16 -1.48c0.00 -0.33 -0.54 -0.25 -0.30 -0.69c0.24 -0.45 0.02 -0.32 -0.28 -0.60c-0.59 -0.54 -0.84 0.82 -1.52 -0.01c-0.30 -0.37 -0.95 0.21 -1.12 -0.30c-0.14 -0.42 -0.32 -0.98 -0.76 -0.98c-0.41 0.00 -0.41 -0.54 -0.75 -0.63c0.00 -0.13 0.35 -0.35 0.44 -0.45c0.21 -0.23 0.14 -0.46 0.27 -0.69c0.12 -0.33 0.15 -0.70 0.24 -1.03c0.08 -0.29 0.17 -0.47 -0.14 -0.59c-0.44 -0.17 -1.14 -0.51 -1.51 -0.84c-0.45 -0.39 -0.89 -0.01 -1.10 -0.60l0.00 0.00c-0.05 0.01 -0.09 -0.02 -0.13 -0.05c0.01 -0.04 -0.25 -0.15 -0.30 -0.17c-0.13 -0.08 -0.24 -0.17 -0.36 -0.26c-0.25 -0.18 -0.54 -0.10 -0.72 0.14c-0.12 0.17 0.15 0.35 0.06 0.47c-0.13 0.18 -0.47 0.09 -0.67 0.15l-0.89 0.13l0.00 0.00c-0.38 0.09 -0.79 -0.34 -0.75 0.21c0.03 0.39 -0.34 0.68 -0.07 1.03c0.24 0.31 1.43 1.60 0.66 1.60c-0.46 0.00 -0.97 -0.01 -1.41 0.08c-0.75 0.16 -1.26 -0.40 -1.78 -0.92l-0.91 -0.91c-0.16 -0.16 -0.14 1.18 -0.46 1.18c-0.04 0.16 -0.44 -0.11 -0.51 -0.14c-0.19 -0.09 -0.57 -0.03 -0.70 -0.16c-0.28 -0.25 0.24 -0.78 -0.31 -1.30c-0.33 -0.41 -0.66 -0.90 -0.82 -1.38c-0.04 -0.11 -0.16 -0.20 -0.17 -0.23c-0.34 0.09 -0.67 0.19 -1.02 0.23c-0.09 0.01 -1.03 0.53 -1.04 0.55c-0.55 0.00 -1.34 0.37 -1.88 0.50c-0.10 0.02 -0.27 0.02 -0.45 0.01l0.00 0.00z\"\n          },\n          40: {\n            name: \"Nam \\u0110\\u1ECBnh\",\n            path: \"m83.09 73.21c0.13 0.18 0.45 0.26 0.21 0.50c-0.33 0.33 0.59 0.49 0.67 0.90c0.13 0.64 0.16 0.48 0.80 0.52c0.40 0.02 0.04 0.63 0.30 0.80c0.27 0.18 0.48 -0.30 0.65 -0.44c0.38 -0.30 0.10 0.58 0.63 0.36c0.49 -0.21 0.40 0.06 0.63 0.34c-0.04 0.47 0.13 0.95 0.01 1.47c-0.07 0.30 -0.20 0.56 -0.27 0.88c-0.06 0.26 -0.20 0.37 -0.36 0.55c-0.24 0.25 -0.14 0.64 -0.32 0.91c-0.16 0.24 -0.06 0.68 0.04 0.93l-0.25 0.69l0.00 0.00c0.07 0.08 0.12 0.24 0.18 0.46c0.48 0.00 1.53 -2.03 2.00 -2.36c0.44 -1.04 1.82 -2.33 2.78 -2.92c0.52 -0.32 1.77 -0.81 2.36 -0.81c0.43 0.00 0.25 0.79 1.10 0.23c0.14 -0.09 0.16 -0.68 0.14 -1.23l0.00 0.00c-0.30 -0.23 -0.75 -0.48 -1.05 -0.72c-0.39 -0.32 -0.88 0.40 -1.26 0.39c-0.31 -0.01 -0.56 -0.40 -0.69 -0.64c-0.14 -0.03 -0.24 -0.36 -0.46 -0.42c-0.18 -0.04 -0.48 -0.09 -0.57 -0.28c-0.26 -0.53 -0.90 0.37 -1.32 0.46c-0.44 0.10 -0.47 -0.29 -0.29 -0.60c0.15 -0.25 0.86 -0.75 0.04 -0.78c-0.84 -0.04 -1.05 0.07 -0.78 -0.79c0.13 -0.41 -0.21 -0.29 -0.41 -0.35l0.00 0.00l-0.46 0.08c-0.38 0.00 -0.39 -0.48 -0.63 -0.46c-0.45 0.03 -0.30 0.68 -0.63 0.68c-0.28 0.00 -0.36 -0.32 -0.62 -0.26c-0.38 0.10 -0.33 0.55 -0.46 0.82c-0.18 0.37 -0.77 0.84 -0.86 0.14c-0.08 -0.68 -0.54 0.40 -0.88 0.40c-0.05 0.21 0.13 0.41 0.04 0.56l0.00 0.00z\"\n          },\n          41: {\n            name: \"Ngh\\u1EC7 An\",\n            path: \"m70.04 105.50l0.94 0.29c0.83 -0.60 0.77 -0.55 1.58 -0.10c0.67 0.37 1.33 0.36 2.04 0.10c0.33 -0.13 0.60 -0.42 0.95 -0.20c0.70 0.43 0.39 1.41 1.44 0.66c0.56 -0.40 0.98 0.37 1.74 -0.39c0.25 -0.32 0.17 -0.66 0.36 -0.94c0.17 -0.26 0.15 -0.21 0.42 -0.31c0.79 -0.30 0.18 -1.04 0.34 -1.78l0.00 0.00c-0.14 -0.03 -0.27 -0.08 -0.32 -0.20c-0.20 -0.45 -0.32 -0.97 -0.49 -1.46c-0.28 -0.78 -1.20 -0.22 -1.31 -1.54c-0.07 -0.80 -0.37 -1.71 0.19 -2.41c0.27 -0.36 0.78 -0.44 1.20 -0.44c0.49 0.00 0.59 -0.01 0.29 -0.47c-0.22 -0.33 -0.08 -1.28 0.14 -1.64c0.15 -0.25 0.05 -0.55 0.38 -0.67c0.31 -0.11 0.41 -0.17 0.56 -0.43c-0.10 -0.13 0.33 -0.39 0.49 -0.67l0.00 0.00c-0.46 0.00 -0.96 -0.30 -1.46 -0.30c-0.74 0.00 -0.56 0.32 -1.01 -0.49c-0.56 -1.00 -1.19 -0.33 -1.76 -1.62c-0.45 -1.01 -0.74 -0.53 -1.55 -0.33c-0.40 0.10 -1.68 -0.52 -1.81 -0.94c-0.13 -0.42 -0.05 -1.14 -0.62 -0.73c-0.31 0.23 -0.71 1.76 -0.95 0.62c-0.11 -0.52 0.10 -1.29 -0.06 -1.74c-0.36 -1.05 0.20 -0.74 -0.88 -1.04c-0.36 -0.10 -0.41 -0.57 -0.83 -0.66c-0.17 -0.24 -0.43 -0.21 -0.27 -0.60c0.07 -0.18 0.22 -0.43 -0.02 -0.55c-0.52 -0.26 -0.48 -0.47 -0.48 -1.11c0.00 -0.33 0.25 -0.51 0.25 -0.78c0.14 -0.04 0.51 -0.33 0.77 -0.39c0.00 -0.21 0.01 -0.82 -0.33 -0.85c-0.42 -0.03 -0.76 -0.31 -1.08 -0.33c-0.21 -0.02 -0.45 0.02 -0.68 0.02c-0.33 0.00 -0.58 -0.19 -0.87 -0.20l-1.12 -0.73l0.00 0.00c-0.10 0.14 -0.32 0.19 -0.71 0.06c-0.38 -0.13 -1.53 0.82 -1.91 1.21c-1.36 1.36 -0.46 0.63 0.36 1.46c-0.42 0.83 0.40 1.18 -1.11 1.18l-0.27 0.67c-1.18 0.00 -0.66 0.17 -1.73 0.99c0.33 0.61 -0.23 0.46 -0.07 0.92c0.08 0.24 -0.17 0.49 -0.41 0.38c-0.58 -0.26 -0.51 -0.04 -0.97 0.19c-0.33 0.17 -0.95 -0.14 -0.99 -0.12c-0.18 -0.24 -0.25 -0.60 -0.57 -0.51c-0.70 0.19 -0.79 -0.35 -1.08 -0.84c-0.26 -0.42 -1.06 0.10 -1.28 0.31l-0.43 0.22c0.00 -0.09 -0.00 -0.19 -0.01 -0.29c-0.00 -0.02 -0.08 -0.11 -0.08 -0.11c-0.42 -0.00 -1.00 -0.33 -1.35 -0.20c-0.18 0.07 -0.34 0.23 -0.55 0.23c-0.41 0.00 -0.61 -0.29 -0.85 0.30c-0.24 0.58 -1.12 -0.13 -1.44 -0.29c-0.24 -0.12 -0.42 -0.04 -0.60 0.13c-0.07 0.07 -0.17 0.11 -0.27 0.12l0.21 0.51c-0.20 1.05 1.26 1.22 1.26 1.62c0.00 0.22 0.15 0.92 0.12 0.99c-0.07 0.20 -0.41 0.38 -0.51 0.78c-0.51 0.00 -0.18 0.31 -0.36 0.63c-0.11 0.20 -0.26 0.10 -0.42 0.02c-0.22 -0.11 -0.17 0.15 -0.31 0.19c0.00 0.18 -0.50 0.19 -0.66 0.19c-0.51 0.00 -0.83 1.43 -1.58 1.43c-0.01 0.04 -0.62 0.54 0.02 0.49c0.47 -0.04 0.95 0.36 1.18 0.73c0.75 1.19 1.73 -0.37 2.23 0.55c0.08 0.14 0.85 0.69 0.95 0.66c0.70 -0.24 0.56 0.08 0.91 0.54c0.57 0.62 0.06 1.03 1.28 0.90c0.15 -0.02 2.11 1.17 2.20 1.42c0.12 0.31 0.49 0.81 0.88 0.81c0.22 0.00 0.49 -0.25 0.63 -0.20c0.21 0.07 0.15 0.39 0.41 0.39l0.75 1.01c0.68 0.93 2.74 1.36 3.00 2.15c0.42 0.00 0.42 0.19 0.95 0.19c0.55 0.00 1.07 0.56 1.75 0.32c1.17 -0.41 0.63 1.22 1.60 0.74c0.48 0.12 0.55 -0.20 0.87 0.29c0.15 0.23 0.43 0.09 0.67 0.36c0.22 0.25 1.26 -0.30 1.26 0.08c0.00 0.59 0.14 0.39 0.58 0.70c0.38 0.28 0.47 0.64 0.24 0.85l0.00 0.00z\"\n          },\n          42: {\n            name: \"Ninh B\\xecnh\",\n            path: \"m84.60 81.10c0.28 0.05 0.27 0.48 0.58 0.72c0.34 -0.26 0.51 -0.32 0.63 -0.19l0.00 0.00l0.25 -0.69c-0.09 -0.25 -0.19 -0.69 -0.04 -0.93c0.18 -0.27 0.09 -0.66 0.32 -0.91c0.16 -0.18 0.30 -0.29 0.36 -0.55c0.07 -0.32 0.20 -0.58 0.27 -0.88c0.12 -0.52 -0.06 -1.01 -0.01 -1.47c-0.22 -0.28 -0.13 -0.55 -0.63 -0.34c-0.53 0.22 -0.25 -0.66 -0.63 -0.36c-0.17 0.14 -0.38 0.61 -0.65 0.44c-0.25 -0.17 0.10 -0.78 -0.30 -0.80c-0.64 -0.04 -0.67 0.12 -0.80 -0.52c-0.08 -0.41 -1.00 -0.57 -0.67 -0.90c0.24 -0.24 -0.08 -0.32 -0.21 -0.50l0.00 0.00l-0.01 -0.01c-0.18 0.00 -0.41 -0.07 -0.55 -0.17c-0.21 -0.15 -0.27 -0.27 -0.41 -0.46c-0.08 -0.12 -0.22 -0.24 -0.33 -0.33l0.00 0.00l-0.48 0.07c-0.36 -0.05 -0.32 -0.62 -0.66 -0.65c-0.06 -0.01 -0.60 0.30 -0.61 0.33c-0.08 0.20 0.00 0.52 0.07 0.72c0.02 0.05 0.13 0.32 0.06 0.33c-0.01 0.06 -0.12 0.05 -0.15 0.07c-0.03 -0.02 -1.26 -1.44 -1.01 -0.38c0.07 0.29 0.76 1.03 0.37 1.27c-0.29 0.17 -0.48 0.48 -0.80 0.26c-0.47 -0.34 -0.84 -0.86 -1.43 -1.00c-0.32 -0.08 -0.37 0.09 -0.73 -0.05l0.00 0.00l-0.07 0.39c0.10 0.54 0.50 0.52 0.91 0.71c0.32 0.15 0.59 0.48 0.88 0.66c0.50 0.06 0.94 1.12 1.44 1.39c0.63 0.35 1.23 0.36 1.81 0.94c0.31 0.31 0.97 0.24 1.13 0.72c0.43 0.31 0.97 0.74 1.51 0.77c0.52 0.03 0.98 -0.08 1.45 -0.08c0.11 0.33 -0.06 0.65 -0.22 0.98c-0.15 0.33 -0.46 0.45 -0.55 0.79l-0.11 0.63l0.00 0.00z\"\n          },\n          43: {\n            name: \"Ninh Thu\\u1EADn\",\n            path: \"m128.63 232.09l-0.22 -0.68c-0.65 -1.85 2.24 -0.60 2.24 -2.01c-0.42 -0.11 -0.38 -1.01 -0.46 -1.32c-0.06 -0.21 -0.85 -0.44 -0.64 -0.79c0.26 -0.44 0.48 -0.19 0.48 -0.79c0.00 -0.63 0.04 -1.19 0.11 -1.80c0.06 -0.53 0.55 -1.06 0.70 -1.62c0.06 -0.12 0.07 -0.32 0.04 -0.47c-0.02 -0.07 -0.13 -0.38 -0.19 -0.39c-0.02 -0.14 -0.13 -0.25 -0.10 -0.42c0.02 -0.11 0.14 -0.35 0.26 -0.32l0.30 -0.05l0.00 0.00l0.64 0.01c0.13 -0.03 0.43 -0.03 0.53 -0.10c0.07 0.20 -0.13 0.50 -0.05 0.76c0.07 0.25 0.24 1.08 0.35 1.26c0.17 0.25 0.73 0.29 0.89 0.61c0.12 0.24 -0.21 0.59 0.20 0.76c0.29 0.12 1.09 0.37 1.27 0.55c0.43 0.43 0.89 0.13 1.36 0.37c0.37 0.21 0.70 0.70 0.84 1.12c0.17 0.51 0.32 0.67 0.76 0.88c0.15 0.08 0.30 0.17 0.48 0.16c0.27 -0.02 0.66 -0.38 0.89 -0.42l0.00 0.00c0.04 0.14 0.11 0.27 0.25 0.34c0.59 0.29 0.68 1.36 -0.08 1.55c0.00 0.14 -0.07 0.39 -0.17 0.51c-0.29 0.29 -0.38 0.75 -0.38 1.13c-0.73 0.24 -0.26 1.08 -0.99 0.90c-0.33 -0.09 -1.49 -0.72 -1.49 0.10c0.00 1.28 -0.70 2.74 -0.18 3.68c0.13 0.23 -1.58 1.21 -2.12 0.67c-0.13 -0.13 -0.26 -0.21 -0.39 -0.25l0.00 0.00c0.23 -0.57 -0.92 -0.91 -1.32 -1.11c-1.10 -0.55 -0.05 -1.68 -1.63 -1.42c-0.73 0.12 -0.62 -1.04 -0.97 -1.36l-1.19 -0.05l0.00 0.00z\"\n          },\n          44: {\n            name: \"Ph\\xFA Th\\u1ECD\",\n            path: \"m74.53 56.56l-0.75 -0.28c-0.24 -0.05 -0.62 -0.33 -0.72 0.09c-0.11 0.47 -0.09 1.30 -0.51 1.59c-0.22 0.15 -0.44 0.20 -0.55 0.47c-0.14 0.38 0.01 0.38 0.06 0.70c0.60 0.65 -0.33 1.23 -0.01 1.89l0.21 0.50l0.00 0.00c0.08 0.33 0.75 0.91 0.60 1.19c-0.32 0.58 -1.18 0.27 -1.60 0.18c-0.42 -0.10 -0.52 0.36 -0.86 0.36c-0.07 -0.22 -0.30 -0.60 -0.46 -0.73c-0.08 0.05 -1.00 0.41 -1.05 0.25c-0.25 0.00 -0.91 -1.00 -1.23 -1.19c-0.48 -0.30 -1.04 -0.68 -1.57 -0.82c-0.59 -0.16 -0.71 0.11 -0.71 -0.54l-0.20 -0.48l0.00 0.00c0.00 -0.12 -0.27 -0.23 -0.30 -0.36c-0.01 -0.04 -0.38 -0.25 -0.37 -0.27c-0.12 -0.03 -0.22 -0.30 -0.31 -0.39c-0.16 -0.16 0.11 -0.44 0.06 -0.66c-0.11 -0.49 -0.18 -0.95 -0.18 -1.48c0.00 -0.40 -0.32 -0.61 -0.55 -0.91l0.00 0.00l0.27 -0.20c0.54 0.41 0.29 -0.49 0.55 -0.39c0.16 0.06 0.49 0.41 0.60 0.14c0.04 -0.10 -0.31 -0.54 -0.36 -0.68c-0.03 -0.08 0.42 -0.44 0.43 -0.74l0.01 -0.61c0.00 -0.20 -0.12 -0.36 -0.12 -0.55c0.00 -0.39 -0.78 -0.99 -0.31 -1.27c0.44 -0.26 0.17 -1.15 0.45 -1.21c0.02 -0.09 0.48 -0.29 0.55 -0.24c0.05 -0.03 0.09 -0.04 0.14 -0.08c-0.12 -0.25 0.74 -0.37 0.82 -0.41c0.34 -0.15 0.21 -0.81 0.91 -0.49c0.11 0.05 0.46 0.22 0.57 0.12c0.09 -0.08 0.17 -0.53 0.11 -0.62l0.00 0.00c0.63 -0.06 0.97 0.48 1.63 0.57c0.29 0.04 0.86 0.40 1.08 0.56c0.31 0.22 -0.37 0.56 -0.01 0.78c0.56 0.33 0.28 0.85 0.73 1.19c0.50 0.39 0.28 0.76 1.08 0.76l0.00 0.00c-0.08 0.42 -0.17 0.86 -0.05 1.29c0.15 0.53 0.55 -0.02 0.97 0.36c0.24 0.22 0.08 0.82 0.08 1.09c0.09 0.02 0.51 0.53 0.64 0.66c0.21 0.21 0.39 0.55 0.21 0.86l0.00 0.00z\"\n          },\n          45: {\n            name: \"Ph\\xfa Y\\xean\",\n            path: \"m135.85 211.53c0.46 -0.13 0.63 -0.64 1.18 -0.64c0.45 0.00 0.65 -0.33 0.73 -0.74c0.38 -0.08 0.86 0.01 1.17 -0.36c0.63 -0.77 1.11 -0.35 2.00 -0.56c0.42 -0.10 0.70 0.04 0.99 -0.37c0.07 -0.10 0.54 -0.42 0.62 -0.18c0.10 0.00 0.29 0.34 0.31 0.44l0.00 0.00c0.08 -0.07 0.16 -0.14 0.24 -0.21c0.06 -0.06 0.52 -0.42 0.49 -0.18c-0.02 0.20 -0.25 0.34 -0.20 0.51c1.24 0.00 0.30 -1.19 -0.06 -1.77c0.03 -0.43 -0.77 -1.38 -1.02 -1.79c-0.47 -0.77 -0.49 -0.29 -1.04 -0.69c-0.22 -0.16 0.14 -0.73 0.14 -0.97c0.00 -0.43 -0.50 -0.81 -0.31 -1.31c0.04 -0.11 0.54 -1.13 0.15 -1.13c-0.03 -0.09 -0.21 0.15 -0.24 0.20c-0.05 0.09 -0.12 0.26 -0.24 0.26c-0.06 -0.19 -0.18 -0.40 -0.24 -0.62c-0.06 -0.20 0.77 -0.01 0.41 -0.42c-0.43 -0.48 -0.05 -0.30 -0.05 -0.72c-0.01 -0.00 -0.04 -0.04 -0.05 -0.05c-0.25 0.00 -0.92 -0.05 -0.75 -0.49c0.22 -0.57 -0.30 -0.85 -0.12 -1.55c0.10 -0.40 0.46 -0.33 0.69 -0.02c0.39 0.52 -0.29 0.42 -0.29 0.76c1.05 0.35 1.09 0.39 0.80 -0.78c0.07 -0.37 -0.18 -0.51 -0.31 -0.80c-0.22 -0.50 0.45 -0.55 -0.26 -1.21c-0.67 -0.62 -1.03 -0.99 -0.60 -1.86l0.00 0.00c-0.25 -0.25 -0.50 -0.39 -0.86 -0.39c-0.06 0.19 -0.42 0.21 -0.46 0.66c-0.04 0.37 -0.45 0.18 -0.63 0.41c-0.28 0.35 0.20 1.18 -0.66 1.18c-0.44 0.00 -0.53 0.38 -0.80 0.57c-0.35 0.25 -1.07 0.62 -1.45 0.27c-0.69 -0.61 -1.19 0.15 -1.74 -0.69l0.00 0.00l-0.60 -0.05c-0.15 -0.02 -0.26 -0.13 -0.44 -0.13c-0.13 0.00 -0.26 -0.01 -0.39 -0.01c-0.25 0.00 -0.39 0.20 -0.42 0.43c-0.06 0.55 -0.81 0.62 -0.54 1.29c0.13 0.33 0.37 0.32 0.69 0.32c0.34 0.00 0.81 -0.39 0.81 0.14c0.00 0.25 0.07 0.52 -0.08 0.73c0.00 0.76 -0.29 0.84 0.49 1.16c0.10 0.04 0.63 0.77 0.71 0.91c0.15 0.23 -0.22 1.83 -0.35 2.10c-0.36 0.77 -1.00 0.26 -1.26 0.62c-0.14 0.20 -0.21 0.64 -0.25 0.88l-0.14 0.95c0.09 0.22 -0.45 0.32 -0.57 0.33l-0.75 0.31l0.00 0.00l0.55 0.64c-0.16 0.56 0.53 -0.05 0.80 0.49c0.19 0.38 0.73 0.84 0.83 1.25c0.74 0.15 0.72 -0.17 1.06 0.66c0.30 0.72 1.61 -0.09 2.00 0.48c0.43 0.62 -0.01 1.20 0.30 1.72l0.00 0.00z\"\n          },\n          46: {\n            name: \"Qu\\u1EA3ng B\\xECnh\",\n            path: \"m93.62 134.98l0.86 0.16c0.33 1.63 1.03 0.20 1.70 0.50c0.38 0.17 1.05 1.03 1.37 0.25c0.10 -0.25 0.09 -0.50 0.29 -0.69c0.14 -0.14 0.31 -0.12 0.44 -0.29c0.18 -0.23 -0.15 -0.87 0.43 -0.87c0.70 0.00 0.28 -0.75 0.99 -0.88c0.35 -0.07 1.43 -0.86 1.51 -1.21l0.00 0.00c-0.31 -0.26 -0.60 -0.52 -0.84 -0.78c-0.83 -0.92 -2.45 -1.35 -3.11 -2.41c0.00 -0.31 -1.38 -1.69 -1.73 -1.86c-0.79 -0.38 -1.12 -2.26 -1.62 -2.98c-0.17 -0.24 -0.48 -0.27 -0.64 -0.47c-0.48 -0.58 -0.99 -2.26 -1.24 -3.06c-0.17 -0.40 -0.17 -0.82 -0.17 -1.25c0.00 -0.39 0.55 -0.47 0.55 -0.86c0.80 -0.26 0.44 -0.64 0.10 -1.04l0.00 0.00c-1.16 0.43 -1.50 -1.60 -2.92 0.16c-0.83 1.04 -2.40 0.31 -3.43 0.31c-1.38 0.00 -0.71 -0.74 -0.88 -1.43c-0.13 -0.50 -1.47 -0.85 -1.94 -1.19c-0.70 -0.51 -1.08 0.36 -1.50 0.50c0.48 0.64 -1.29 0.58 -1.55 0.58c-0.17 0.00 -0.27 -0.31 -0.43 -0.31c-0.22 0.00 -0.46 0.52 -0.60 0.68l-1.23 0.45l0.00 0.00c0.25 0.33 -0.43 0.77 -0.48 1.14c-0.15 0.57 0.02 0.56 0.12 0.98c0.86 0.22 0.92 1.39 1.62 2.10c0.31 0.31 0.38 0.82 0.58 1.22c0.36 0.70 0.32 0.29 0.97 0.45c0.01 0.03 0.02 0.03 0.05 0.04c0.07 0.29 1.48 1.62 1.75 1.97l2.20 2.84l3.44 2.70c0.11 -0.05 0.33 -0.14 0.45 -0.14c0.06 -0.19 0.13 -0.36 0.13 -0.58c0.02 -0.01 0.01 -0.02 0.01 -0.05c0.55 -0.18 0.54 -0.31 0.54 0.26c0.00 0.44 0.48 0.48 0.48 0.81c-1.03 0.34 0.23 1.04 0.44 1.31c0.14 0.18 0.09 0.40 0.15 0.60c0.12 0.36 0.57 0.36 0.68 0.84c0.12 0.51 0.24 1.25 0.73 1.60c0.80 0.58 0.95 -0.10 1.72 -0.10l0.01 0.01z\"\n          },\n          47: {\n            name: \"Qu\\u1EA3ng Nam\",\n            path: \"m127.36 153.78c-0.06 -0.07 -0.21 -0.41 -0.04 -0.41c0.21 0.00 0.38 0.30 0.49 0.46c0.04 0.07 0.17 0.22 0.14 0.30c-0.05 0.16 -0.35 -0.06 -0.42 -0.09l-0.17 -0.27zm-4.41 16.38c-0.03 -0.28 -0.25 -0.54 -0.12 -0.84c0.32 -0.73 0.99 -1.25 0.99 -2.08c-0.04 -0.01 -0.11 -0.19 -0.15 -0.20c0.00 -0.15 0.24 -0.20 0.35 -0.32c0.00 -0.00 -0.48 -0.21 -0.17 -0.57c0.32 -0.37 0.40 -0.94 1.18 -0.68c0.67 0.22 0.86 -0.35 1.45 -0.35c1.18 0.00 1.78 -0.51 2.87 -0.72c0.93 -0.18 1.33 -0.10 2.08 -0.86l0.00 0.00c-0.18 -0.08 -0.36 -0.19 -0.47 -0.30c-0.30 -0.30 -0.02 -0.86 -0.33 -1.18c-0.85 -0.36 -1.22 -0.13 -1.87 -1.03c-0.74 -1.02 -1.51 -1.86 -2.07 -2.97c-0.24 -0.48 -0.40 -1.04 -0.70 -1.47c-0.15 -0.21 -0.31 -0.55 -0.31 -0.81c0.00 -0.12 0.20 -0.72 0.06 -0.76l-1.24 -0.50c-0.16 -0.19 -0.56 -0.65 -0.92 -1.18l0.00 0.00c-0.36 0.12 -0.98 -0.17 -1.17 0.21c-0.39 0.77 -0.50 -0.48 -0.84 0.07c-0.31 0.51 -0.24 0.04 -0.55 0.16c-0.15 0.06 -0.20 0.30 -0.36 0.30c-0.16 0.00 -0.27 -0.14 -0.46 -0.11c-0.21 0.03 -0.35 0.25 -0.58 0.20c-0.30 -0.06 -0.44 -0.18 -0.77 -0.12c-0.19 0.03 -0.54 0.26 -0.69 0.08c-0.63 -0.79 0.07 -0.94 -0.14 -1.60c-0.11 -0.35 -0.32 -0.50 -0.32 -0.91l-0.01 -0.01c-0.71 0.00 -0.66 0.87 -1.53 0.14l-0.75 0.02l0.00 0.00c-0.18 0.00 -0.32 0.07 -0.51 0.02c-0.25 -0.07 -0.33 0.02 -0.49 0.20c-0.52 0.19 -0.69 1.02 -1.01 1.02c-0.41 0.00 -0.66 -0.54 -1.11 -0.67c-0.37 -0.11 -0.08 -0.64 -0.48 -0.54c-0.27 0.07 -1.02 0.20 -1.02 0.52c0.00 0.85 -0.74 -0.09 -0.99 -0.10l-0.54 0.25l0.00 0.00c-0.05 0.61 -0.63 1.99 -0.79 2.25c-0.21 0.33 -0.65 0.08 -0.94 0.06c-0.35 -0.03 -0.48 0.35 -0.62 0.57c-0.08 0.13 -0.55 0.04 -0.72 0.04c-0.25 0.00 -0.25 0.19 -0.39 0.33c-0.14 0.14 -0.88 -0.20 -0.63 0.49c0.21 0.59 -0.38 1.21 -0.05 1.59c0.16 0.19 1.74 0.08 0.86 0.95c0.21 1.08 0.65 0.31 1.20 0.93c0.25 0.28 0.25 0.68 0.37 1.03c0.46 1.34 1.59 1.36 2.78 1.60c0.15 0.61 0.01 1.32 0.86 1.32c0.06 0.00 0.24 0.17 0.46 0.42l0.00 0.00l0.66 -0.58c0.55 -0.37 0.67 0.88 0.79 1.15c0.29 0.65 0.52 0.29 0.89 0.67c0.71 0.71 -0.13 1.25 1.36 1.43c0.74 0.09 1.16 0.39 2.01 0.35c0.62 -0.04 1.64 0.96 1.35 1.62c-0.19 0.42 -0.62 0.61 -0.69 1.10c-0.06 0.42 0.45 0.91 0.86 0.91c0.72 -0.07 0.75 0.64 1.29 0.64c0.28 0.00 0.98 0.23 1.12 -0.10c0.19 -0.44 -0.51 -1.48 0.39 -1.48c0.52 0.00 0.64 0.54 1.30 0.37l0.00 0.00z\"\n          },\n          48: {\n            name: \"Qu\\u1EA3ng Ng\\xE3i\",\n            path: \"m137.18 163.18c-0.03 -0.07 -0.07 -0.36 0.05 -0.36c0.05 0.00 0.09 0.02 0.14 0.02c0.12 0.01 0.24 -0.02 0.36 -0.02c0.15 0.01 0.09 0.23 0.05 0.31c-0.10 0.17 -0.34 0.20 -0.52 0.20l-0.09 -0.16zm0.89 1.06c-0.01 0.00 -0.05 0.02 -0.05 0.02c-0.13 0.00 -0.58 -0.05 -0.52 -0.28c0.07 -0.25 0.76 -0.31 0.97 -0.27c0.12 0.03 0.34 0.18 0.42 0.27c0.16 0.16 -0.41 0.21 -0.48 0.23l-0.34 0.03zm-8.53 14.58l0.61 -0.58c0.36 -0.25 0.36 -0.42 0.85 -0.40c1.28 0.05 0.62 -0.02 0.89 -1.03c0.06 -0.22 2.63 -0.86 3.04 -0.68l1.40 0.61c0.23 0.10 0.53 0.83 0.43 1.06l0.51 0.36l0.00 0.00c-0.00 -0.34 -0.20 -0.90 -0.20 -1.07c0.00 -0.44 0.25 -0.71 -0.06 -1.15c-0.42 -0.58 -0.75 -1.16 -1.10 -1.79c-0.42 -0.76 -0.39 -1.59 -0.76 -2.34c0.07 -0.70 -0.67 -1.65 -0.73 -2.48c-0.04 -0.52 -0.27 -1.00 -0.30 -1.54c-0.03 -0.49 0.73 -0.56 0.73 -1.00c-0.01 -0.00 -0.11 -0.08 -0.12 -0.10c-0.51 -0.10 -1.01 -0.70 -1.01 -1.21c0.00 -0.56 -0.19 -0.55 -0.62 -0.93c-0.25 -0.22 -0.06 -0.85 -0.36 -0.98c-0.24 -0.11 -0.53 0.22 -0.79 0.16c-0.15 -0.04 -0.35 -0.10 -0.53 -0.19l0.00 0.00c-0.76 0.76 -1.15 0.68 -2.08 0.86c-1.09 0.21 -1.69 0.72 -2.87 0.72c-0.60 0.00 -0.78 0.57 -1.45 0.35c-0.78 -0.26 -0.86 0.31 -1.18 0.68c-0.31 0.37 0.17 0.57 0.17 0.57c-0.10 0.12 -0.35 0.17 -0.35 0.32c0.04 0.01 0.12 0.19 0.15 0.20c0.00 0.83 -0.67 1.35 -0.99 2.08c-0.13 0.30 0.09 0.55 0.12 0.84l0.00 0.00l0.42 0.91l1.28 1.42c-0.01 0.02 0.39 0.26 0.44 0.35c0.50 0.79 0.43 0.94 1.30 1.48c0.64 0.39 0.77 -0.34 1.07 0.63c0.17 0.55 0.13 0.46 -0.12 0.90c-0.11 0.20 0.28 0.37 0.18 0.62c-0.07 0.17 -0.79 0.97 -0.11 0.97c0.40 0.00 0.66 0.21 0.66 0.62l0.00 0.00c0.38 0.03 0.64 0.19 0.79 0.54c0.05 0.13 0.10 0.32 0.26 0.35c0.08 0.01 0.40 -0.03 0.43 -0.12l0.00 0.00z\"\n          },\n          49: {\n            name: \"Qu\\u1EA3ng Ninh\",\n            path: \"m114.37 55.63c0.22 -0.07 0.80 -0.61 0.99 -0.54c0.00 0.21 -0.61 0.61 -0.79 0.70c-0.13 0.07 -0.24 0.18 -0.39 0.24c-0.27 0.10 -0.16 -0.04 -0.09 -0.23l0.27 -0.17zm2.66 -0.66c-0.20 0.12 -0.77 0.32 -0.92 0.07c-0.20 -0.33 0.60 -0.35 0.77 -0.38c0.33 -0.05 0.69 -0.17 1.02 -0.24c0.11 -0.03 0.53 -0.20 0.61 -0.10c0.15 0.18 -0.39 0.37 -0.49 0.41c-0.09 0.03 -0.21 0.14 -0.29 0.21c-0.07 0.07 -0.30 0.04 -0.41 0.08l-0.30 -0.04zm-9.27 7.48c-0.18 0.23 -0.24 0.10 -0.47 0.10c-0.41 0.00 -0.55 0.78 0.13 0.39c0.17 -0.09 0.38 -0.08 0.52 -0.19c0.16 -0.12 0.21 -0.21 -0.01 -0.30l-0.17 -0.01zm0.80 2.93c-0.14 -0.26 -0.34 -0.01 -0.31 0.20c0.01 0.10 0.10 0.24 0.20 0.26c0.10 0.02 0.18 -0.13 0.18 -0.20l-0.07 -0.26zm-0.96 -0.53c-0.06 -0.04 -0.10 -0.10 -0.17 -0.12c-0.14 -0.03 -0.35 0.08 -0.26 0.24c0.05 0.08 0.18 0.13 0.26 0.20c0.08 0.07 0.21 0.26 0.33 0.22c0.12 -0.04 0.12 -0.28 0.06 -0.36l-0.22 -0.17zm0.01 -1.07c-0.13 -0.06 -0.43 -0.14 -0.56 -0.07c-0.06 0.04 0.15 0.30 0.18 0.35c0.07 0.09 0.16 0.08 0.26 0.06c0.05 -0.01 0.16 0.05 0.21 0.06c0.10 0.03 0.27 0.03 0.35 -0.05c0.11 -0.09 0.09 -0.27 -0.07 -0.29l-0.39 -0.07zm3.12 -0.94c-0.10 0.21 -0.15 0.39 -0.32 0.58c-0.30 0.34 -0.61 0.36 -0.64 0.91c-0.01 0.11 -0.02 0.28 -0.06 0.38c-0.20 0.48 -0.08 0.41 0.14 0.02c0.14 -0.25 0.23 -0.53 0.41 -0.76c0.19 -0.25 0.37 -0.55 0.57 -0.80c0.06 -0.08 0.24 -0.45 0.02 -0.42l-0.11 0.08zm-1.42 0.08c0.42 -0.50 0.73 -1.10 1.17 -1.58c0.52 -0.56 0.28 0.44 0.24 0.69c-0.04 0.26 -0.05 0.63 -0.22 0.85c-0.13 0.16 -0.65 0.23 -0.87 0.32c-0.09 0.04 -0.98 0.44 -0.61 -0.02l0.29 -0.25zm1.37 -2.87c0.09 -0.20 0.28 -0.38 0.47 -0.50c0.13 -0.08 0.24 -0.07 0.22 0.10c-0.02 0.22 -0.20 0.45 -0.33 0.63c-0.10 0.13 -0.39 0.31 -0.39 0.03l0.02 -0.26zm0.70 1.21c0.06 -0.24 0.02 -0.64 0.14 -0.85c0.09 -0.16 0.38 -0.83 0.57 -0.83l0.01 0.01c0.00 0.29 -0.18 0.67 -0.24 0.97c-0.08 0.38 -0.29 0.75 -0.39 1.12c-0.04 0.14 -0.07 0.38 -0.18 0.47c-0.21 0.19 -0.00 -0.43 -0.01 -0.49l0.11 -0.39zm-3.32 -0.89c0.00 -0.68 0.60 -0.82 0.71 -1.32c0.03 -0.14 -0.08 -0.44 0.01 -0.53c0.26 -0.26 0.34 -0.53 0.43 -0.88c0.05 -0.17 0.15 -0.91 0.33 -0.90c0.40 0.03 0.68 1.33 1.23 1.33c0.33 0.00 1.14 -0.59 1.00 -0.01c-0.11 0.44 -1.80 1.43 -2.23 1.71c-0.31 0.20 -1.04 1.18 -1.39 0.97l-0.08 -0.39zm0.53 -2.83c0.27 -0.39 -0.35 -0.72 -0.29 -0.14c0.02 0.20 -0.03 0.27 -0.11 0.45c-0.03 0.06 -0.08 0.16 -0.08 0.23c0.00 0.08 0.04 0.11 0.06 0.17c0.12 0.03 0.35 -0.28 0.41 -0.40l0.02 -0.30zm6.85 4.02c0.03 -0.14 0.31 -0.47 0.43 -0.54c0.13 -0.07 0.36 -0.09 0.26 0.13c-0.07 0.16 -0.20 0.31 -0.31 0.44c-0.10 0.12 -0.15 0.31 -0.27 0.41c-0.05 0.04 -0.17 0.15 -0.24 0.12c-0.07 -0.04 0.01 -0.14 0.01 -0.20l0.11 -0.36zm-1.11 0.41c-0.08 -0.02 -0.41 -0.63 -0.23 -0.63c0.10 0.00 0.17 0.14 0.25 0.19c0.20 0.12 0.48 -0.02 0.48 0.33c0.00 0.33 -0.11 0.56 -0.30 0.81c-0.07 0.09 -0.33 0.14 -0.26 -0.01c0.06 -0.13 0.26 -0.29 0.12 -0.43l-0.05 -0.26zm-14.25 1.05c-0.03 -0.12 -0.17 -0.22 -0.29 -0.18c-0.13 0.03 -0.12 0.12 -0.14 0.23c-0.01 0.10 0.19 0.24 0.24 0.32c0.09 0.13 0.32 0.15 0.32 -0.05l-0.13 -0.32zm-7.07 -5.76c0.58 0.02 0.43 0.63 1.17 0.67c0.25 0.01 0.35 0.21 0.55 0.31c0.33 0.17 1.15 0.05 1.57 0.12c0.72 0.12 1.37 0.31 2.12 0.31c0.51 0.00 0.27 -0.34 0.35 -0.61c0.06 -0.21 0.51 0.05 0.65 0.10c0.02 0.00 0.06 0.00 0.07 0.01c0.16 -0.04 0.25 -0.15 0.44 -0.09c0.28 0.09 0.45 0.31 0.70 -0.03c0.37 -0.51 0.68 -0.81 0.56 -1.49c-0.14 -0.77 0.53 -0.55 0.91 -0.77l0.12 -0.26l0.00 0.00c0.08 -0.10 0.33 -0.51 0.48 -0.51c0.01 -0.02 0.44 -0.09 0.55 -0.36c0.26 -0.67 0.68 0.07 0.99 -0.02c0.23 -0.07 0.30 -0.27 0.57 -0.27c0.27 0.00 0.36 0.08 0.57 0.12c0.06 0.24 0.56 -0.09 0.63 -0.21c0.12 -0.22 -0.00 -0.58 -0.07 -0.80c-0.14 -0.44 -0.30 -0.77 -0.17 -1.28c-0.00 -0.03 -0.01 -0.19 -0.06 -0.20c0.00 -0.12 -0.22 -0.36 -0.26 -0.50c-0.16 -0.53 0.30 -0.35 0.55 -0.39c0.34 -0.05 0.34 -0.53 0.66 -0.53c0.02 -0.05 0.22 -0.02 0.27 -0.02c0.14 0.00 0.61 -0.19 0.75 -0.19l0.00 0.00c0.14 0.26 0.39 0.23 0.89 -0.43c1.07 -1.40 1.16 -0.04 1.35 0.72c0.20 0.05 0.82 0.35 0.91 0.10c0.05 -0.15 0.57 -0.97 0.70 -0.45c0.32 0.08 0.40 0.28 0.85 0.23c0.67 -0.06 2.89 -1.33 3.32 -0.73c0.40 0.55 0.81 -0.65 1.00 0.60c0.08 0.52 0.91 0.37 0.91 0.80c0.03 0.01 0.05 0.40 0.23 0.49c0.28 0.14 0.86 -0.19 1.17 -0.19c0.48 0.00 0.75 0.66 1.07 0.73l0.00 0.00c-0.56 0.22 -1.12 0.49 -1.38 0.41c-0.81 -0.26 -0.53 0.03 -0.87 0.55c-0.06 0.09 -0.37 0.63 -0.45 0.38c-0.04 -0.10 -0.03 -0.60 -0.12 -0.63c1.09 -1.47 -1.21 -0.68 -1.78 -0.60c-0.21 0.03 -0.67 -0.29 -0.75 0.01c-0.13 0.45 0.31 0.59 -0.04 1.11c-0.54 0.81 -0.69 0.91 -1.56 0.91c-0.34 0.00 -0.44 0.59 -0.77 0.78c-0.29 0.29 -0.17 0.67 -0.41 0.93c-0.24 0.27 -0.50 0.09 -0.70 0.32c-0.59 0.67 -0.42 -0.75 -1.07 -0.50c-0.37 0.14 -0.89 0.91 -1.28 0.82c-0.28 -0.06 -0.40 -0.17 -0.68 0.02c-0.43 0.30 -0.10 0.53 -0.10 0.87c0.00 0.39 -0.42 0.37 -0.20 0.80c0.14 0.28 0.49 0.38 0.29 0.75c-0.22 0.41 -0.09 0.65 -0.38 1.09c-0.23 0.35 -0.07 0.84 -0.15 1.29c-0.65 0.65 -0.92 0.15 -1.58 0.23c-0.73 0.08 -0.46 0.85 -1.00 1.18c-0.51 0.32 -0.52 0.02 -0.97 0.02c-0.19 0.00 -0.44 0.18 -0.61 0.12c-0.68 -0.24 -0.64 -0.67 -0.64 -1.30c0.00 -0.21 -0.72 -0.02 -0.83 0.06c-0.21 0.14 0.07 0.79 -0.25 0.64c-0.21 -0.09 -0.76 -0.30 -0.95 -0.20c-0.43 0.22 -0.64 0.60 -1.16 0.21c-0.07 0.21 -0.30 0.19 -0.30 0.66c0.07 0.15 0.03 0.18 0.00 0.29c-0.32 0.00 -0.63 -0.34 -0.50 0.35c0.04 0.19 0.12 0.82 0.20 0.93c0.46 0.59 0.11 0.81 -0.22 0.71l0.00 0.00c0.00 -0.63 -0.70 -0.90 -1.06 -1.26c-0.18 -0.18 -0.10 -0.42 -0.22 -0.58c0.00 -0.27 0.23 -0.49 0.23 -0.76c0.00 -0.26 0.01 -0.49 -0.07 -0.75c-0.20 -0.66 -0.76 -0.50 -1.30 -0.60c-0.31 -0.06 -0.67 -0.41 -0.98 -0.27c-0.25 0.11 -0.30 0.13 -0.49 -0.09l0.00 0.00c-0.16 -0.22 -0.22 -0.45 -0.48 -0.61c-0.32 -0.21 -0.80 -0.01 -1.17 0.01c-0.31 0.02 -0.37 -0.30 -0.68 -0.23c-0.60 0.13 -0.38 -0.14 -0.49 -0.56c-0.01 -0.00 -0.01 -0.00 -0.01 -0.01c-0.25 -0.06 0.46 -0.51 0.53 -0.62c0.15 -0.23 0.09 -0.66 0.13 -0.92l0.23 -0.88l0.00 0.00z\"\n          },\n          50: {\n            name: \"Qu\\u1EA3ng Tr\\u1ECB\",\n            path: \"m102.02 147.43l0.02 -0.86c0.52 -0.57 0.40 -0.58 0.51 -1.31c0.06 -0.43 0.62 -0.18 0.86 -0.20c0.92 -0.07 -0.79 -1.31 -0.73 -1.58c0.07 -0.28 0.37 -0.42 0.62 -0.33c0.43 0.15 0.94 -0.70 1.55 -0.70c0.69 0.00 1.90 0.66 2.20 -0.43c0.12 -0.44 -0.32 -0.64 0.02 -1.18c0.15 -0.24 0.62 -1.06 0.80 -1.24l0.00 0.00c-1.02 -0.94 -1.78 -2.13 -2.90 -2.83c-0.45 -0.63 -1.04 -1.08 -1.47 -1.69c-0.33 -0.47 0.30 -1.59 -0.27 -1.84c-0.64 -0.28 -1.40 -0.76 -2.04 -1.28l0.00 0.00c-0.09 0.35 -1.17 1.14 -1.51 1.21c-0.71 0.14 -0.29 0.88 -0.99 0.88c-0.58 0.00 -0.25 0.65 -0.43 0.87c-0.13 0.17 -0.30 0.14 -0.44 0.29c-0.20 0.20 -0.18 0.44 -0.29 0.69c-0.32 0.78 -0.99 -0.08 -1.37 -0.25c-0.68 -0.30 -1.37 1.13 -1.70 -0.50l-0.86 -0.16l-0.01 -0.01l0.01 0.01l-0.05 5.37c0.22 0.83 0.92 1.50 1.62 1.84c0.84 0.41 0.09 0.72 0.00 1.12c-0.10 0.43 0.75 1.37 0.97 1.69c0.70 1.06 1.41 -0.44 1.87 -0.56c0.00 -0.36 0.45 -1.76 0.87 -1.16c0.14 0.20 0.54 0.22 0.54 0.53c0.00 0.17 -0.35 0.43 -0.32 0.54c0.11 0.42 0.45 1.78 1.04 1.93c0.74 0.19 0.80 1.95 1.69 1.06c0.06 0.04 0.12 0.06 0.18 0.09l0.00 0.00z\"\n          },\n          51: {\n            name: \"S\\xF3c Tr\\u0103ng\",\n            path: \"m94.07 283.03c-0.01 -0.01 -0.03 -0.02 -0.04 -0.04c-0.11 -0.05 -0.15 -0.48 -0.09 -0.58c0.10 -0.15 0.28 -0.26 0.39 -0.41c0.24 -0.32 0.51 -0.76 0.97 -0.76c0.45 0.00 0.00 0.42 -0.10 0.52c-0.20 0.20 -0.13 0.21 -0.06 0.42c0.05 0.16 -0.49 0.22 -0.54 0.46c-0.05 0.25 0.15 0.49 -0.33 0.49l-0.21 -0.10zm-12.69 -10.38c0.85 -0.30 1.73 -0.58 2.64 -0.87l2.72 -0.88c0.21 -0.07 1.18 -0.57 0.75 -0.84c-0.32 -0.20 -0.78 -0.47 -0.24 -0.86c0.43 -0.22 0.31 -0.65 0.62 -0.82c0.42 -0.23 1.11 0.00 1.11 -0.91c0.00 -0.44 0.27 -0.67 0.56 -0.64l0.00 0.00c-0.09 -0.35 -1.20 -1.16 -1.48 -1.34c-0.65 -0.40 -1.07 -1.16 -1.79 -1.60c-0.46 -0.29 -1.03 -1.07 -1.38 -1.53l-1.01 -1.22l0.00 0.00l-1.28 -0.78l0.00 0.00c-0.38 0.13 -0.78 2.54 -0.93 2.98c-0.30 0.90 -1.64 1.13 -2.22 1.85c-0.40 0.50 -1.58 0.68 -2.16 0.90l-0.69 0.26l0.00 0.00l-0.11 2.47c0.02 0.01 0.01 0.01 0.01 0.04c0.21 0.07 0.11 0.74 0.64 0.74c0.36 0.00 0.45 -0.24 0.77 0.08c0.29 0.29 0.35 0.05 0.63 0.18c0.22 0.10 0.35 0.39 0.62 0.43c0.25 0.04 0.38 -0.17 0.57 -0.31c0.15 -0.11 0.91 -0.19 1.04 -0.07c0.17 0.15 0.08 0.67 0.46 0.32c0.35 -0.32 0.87 -0.09 0.64 0.36c-0.09 0.19 -0.38 0.11 -0.51 0.21c-0.25 0.19 -0.07 0.29 -0.18 0.54l0.17 1.30l0.00 0.00z\"\n          },\n          52: {\n            name: \"S\\u01A1n La\",\n            path: \"m65.17 59.73l-0.66 0.23c-0.03 0.12 -0.29 0.44 -0.26 0.49c-0.11 0.03 0.19 0.44 0.23 0.51c0.28 0.58 1.08 1.96 1.63 2.30c0.61 0.38 0.20 1.62 0.56 1.80c0.97 0.48 -0.11 0.51 -0.02 1.03c0.06 0.34 0.37 0.74 -0.33 0.50c-0.45 -0.15 -1.26 -0.46 -1.74 -0.33c-1.08 0.28 -0.29 0.75 -0.48 1.18l-0.25 0.80l0.00 0.00l-0.39 0.21c-0.28 0.22 -0.30 0.49 -0.32 0.81c-0.02 0.19 -0.24 0.30 -0.41 0.30c-0.10 0.00 -0.18 -0.04 -0.27 -0.05c-0.07 -0.01 -0.48 -0.11 -0.49 -0.16c-0.13 0.00 -0.41 -0.22 -0.54 -0.29c-0.54 -0.30 -0.71 -0.58 -1.04 -1.09l0.00 0.00c0.00 -0.05 0.01 -0.09 0.01 -0.12l-0.01 -0.01c-0.07 0.00 -0.19 -0.03 -0.25 -0.06c-0.03 -0.02 -0.22 -0.03 -0.23 -0.05c-0.50 0.00 -1.73 -1.01 -1.89 -1.52c-0.15 -0.59 -1.14 -0.06 -1.47 -0.42c-0.51 -0.57 0.11 -0.79 -0.82 -1.05c-0.64 -0.18 -0.70 -2.21 -1.99 -1.23c-0.39 -0.30 -0.71 -1.17 -1.54 -0.95c-0.75 0.19 -0.70 -1.17 -1.70 -0.04c-0.14 0.16 -0.06 0.47 -0.26 0.67c-0.40 0.41 -1.05 0.00 -1.61 0.32c-0.50 0.50 -0.64 0.03 -1.10 0.25c-0.11 0.06 -0.71 1.31 -0.89 0.57c-0.16 0.00 -0.33 0.04 -0.48 0.04c-0.06 0.22 0.07 0.56 -0.14 0.72c-0.31 0.22 -0.30 0.23 -0.26 0.62c0.10 1.04 -0.83 0.62 -0.92 1.05c-0.06 0.28 0.36 0.89 -0.06 1.05c-0.78 0.30 -0.71 0.11 -1.10 -0.51c-0.22 -0.35 -0.42 -0.32 -0.75 -0.47c-0.45 -0.20 -0.06 -0.46 -0.81 -0.38c-0.51 0.00 -1.18 0.03 -1.38 -0.58c-0.11 -0.32 -0.66 -1.71 -0.98 -0.53c-0.22 0.82 -2.04 -0.45 -2.57 -0.45c-1.22 0.00 -2.01 -0.39 -2.62 -1.02l0.00 0.00l1.35 -0.40c0.19 -0.07 0.25 -0.04 0.44 -0.04c0.19 0.00 0.16 -0.19 0.24 -0.21c-0.20 -0.79 -0.14 -0.18 0.15 -0.78c0.10 -0.20 -0.01 -0.61 -0.15 -0.78c-0.22 -0.25 0.23 -0.29 0.08 -0.62c-0.06 -0.14 -0.41 -0.79 -0.01 -0.66c0.31 0.11 -0.19 -0.91 0.71 -0.45c0.36 0.18 0.46 0.55 0.98 0.55c1.35 0.00 0.24 -0.68 0.19 -1.23c-0.03 -0.28 0.35 -0.50 0.52 -0.64c0.17 -0.14 0.20 -0.97 0.20 -1.21c0.18 -0.41 0.05 -2.26 -0.74 -1.67c-0.04 -0.03 -0.59 -0.22 -0.46 -0.42c0.04 -0.06 0.65 -0.54 0.42 -0.54c-0.03 -0.13 -0.58 -0.59 -0.70 -0.76c-0.49 -0.70 1.46 -0.25 1.75 -0.47c0.43 -0.32 -0.02 -0.77 0.01 -1.23c0.04 -0.53 0.37 -0.33 0.69 -0.33c0.20 0.00 0.90 -0.90 0.86 -1.04c-0.09 -0.33 0.34 -0.47 0.32 -0.79c-0.02 -0.39 -0.25 -0.62 0.20 -0.87c0.15 -0.19 0.03 -0.29 0.31 -0.29c0.11 0.00 0.33 -0.04 0.33 -0.17c-0.02 -0.01 -0.00 -0.00 -0.02 -0.01c0.00 -0.24 -0.57 -0.46 -0.57 -0.90c0.00 -0.29 -0.26 -0.68 -0.38 -0.95c-0.21 -0.47 -0.21 -1.04 -0.58 -1.46c-0.14 -0.16 -0.24 -0.36 -0.41 -0.53c-0.37 -0.37 -0.11 -0.48 -0.11 -0.86l0.01 -0.01l0.29 -0.53l0.00 0.00c0.43 -0.60 0.49 -1.61 1.43 -0.84c0.30 0.25 0.75 0.25 1.04 0.48c0.15 0.12 0.28 0.19 0.43 0.36c0.04 0.04 0.05 0.19 0.06 0.26c0.01 0.06 0.08 0.27 0.06 0.27c0.17 0.14 0.80 1.22 0.73 1.47c-0.22 0.73 -0.57 0.97 0.32 1.18c0.38 0.09 0.40 0.35 0.57 0.62c0.35 0.54 0.89 0.33 1.23 1.13c0.37 0.88 0.75 0.27 1.30 0.27l0.00 0.00c0.37 0.05 0.33 0.36 0.62 0.48c0.42 0.17 0.88 -0.20 1.37 0.10c0.33 0.20 0.47 0.29 0.86 0.37c0.33 0.07 0.64 -0.03 0.95 -0.13c0.22 -0.07 0.46 0.01 0.69 0.10c0.27 0.10 0.61 -0.17 0.87 -0.27c0.34 -0.14 0.55 0.00 0.88 0.00c0.31 -0.04 1.22 0.05 1.22 0.42c-0.84 0.27 -0.77 0.70 -0.77 1.25c-0.63 0.21 0.09 2.03 0.27 2.45c0.29 0.66 0.48 0.48 1.06 0.61c0.80 0.18 0.99 1.34 1.86 0.95c0.55 -0.24 0.76 -1.23 1.41 -0.97c0.43 0.18 0.76 -0.27 1.20 0.13c0.97 0.87 1.19 -0.50 1.75 0.06c0.24 0.24 0.46 1.28 0.86 1.28c0.04 0.12 0.67 0.02 0.77 0.02l0.00 0.00c0.23 0.30 0.55 0.50 0.55 0.91c0.00 0.53 0.07 0.99 0.18 1.48c0.05 0.22 -0.22 0.50 -0.06 0.66c0.09 0.09 0.19 0.36 0.31 0.39c-0.01 0.02 0.36 0.24 0.37 0.27c0.03 0.12 0.30 0.24 0.30 0.36l0.00 0.00z\"\n          },\n          53: {\n            name: \"T\\xe2y Ninh\",\n            path: \"m87.47 242.30l0.89 -0.13c0.20 -0.06 0.54 0.03 0.67 -0.15c0.09 -0.13 -0.18 -0.30 -0.06 -0.47c0.18 -0.24 0.47 -0.33 0.72 -0.14c0.12 0.09 0.23 0.19 0.36 0.26c0.05 0.03 0.31 0.14 0.30 0.17c0.04 0.03 0.08 0.06 0.13 0.05l0.00 0.00c0.10 -0.04 0.17 -0.11 0.28 -0.13c0.53 -0.09 0.63 -0.10 0.63 -0.68c0.00 -0.36 0.28 -0.80 0.43 -1.13l0.07 -0.47l0.00 0.00c-0.02 -0.07 -0.13 -0.16 -0.15 -0.26c-0.03 -0.10 -0.04 -0.21 -0.04 -0.32c-0.01 -0.25 -0.48 -0.27 -0.63 -0.40c-0.15 -0.14 -0.14 -0.36 -0.14 -0.56c0.00 -0.45 -0.71 -0.38 -0.61 -0.79c0.11 -0.47 -0.28 -0.51 -0.14 -0.96c0.09 -0.29 0.01 -0.44 0.06 -0.72c0.06 -0.34 0.20 -0.67 0.24 -1.03c0.08 -0.59 0.36 -0.56 0.73 -0.87l0.36 -0.47l0.00 0.00c0.00 -0.45 0.12 -0.85 0.58 -1.00c0.66 -0.20 0.70 -0.82 0.21 -1.26c-0.14 -0.13 -0.10 -0.26 -0.14 -0.44l-0.40 -0.54l0.00 0.00c-0.45 0.40 -1.37 -0.40 -2.05 -0.16c-0.92 0.33 -0.58 -0.09 -1.13 -0.43c-0.32 -0.20 -1.42 -0.60 -1.74 -0.49c-0.48 0.17 -0.78 0.05 -1.12 -0.29c-0.20 -0.20 -0.98 -0.67 -1.22 -0.29c-0.63 1.03 -0.65 2.63 -2.17 1.96c-0.58 -0.26 -1.26 0.38 -1.45 0.85c0.17 0.12 -0.12 0.66 0.25 0.84c0.18 0.09 0.53 0.10 0.63 0.31c0.17 0.35 0.07 1.57 0.25 1.60c0.75 0.11 0.09 0.48 -0.07 0.81c-0.28 0.57 0.01 0.95 -0.12 1.60c0.00 0.30 -0.37 0.90 0.20 0.95c0.35 0.04 0.50 -0.01 0.50 0.42c0.00 0.69 0.91 0.88 1.41 0.88c0.60 0.00 0.98 2.49 2.42 1.95c0.78 -0.30 1.06 1.26 1.06 1.91l0.00 0.00z\"\n          },\n          54: {\n            name: \"Th\\xe1i B\\xecnh\",\n            path: \"m87.58 71.26c0.20 0.06 0.54 -0.06 0.41 0.35c-0.27 0.86 -0.06 0.76 0.78 0.79c0.82 0.04 0.11 0.53 -0.04 0.78c-0.18 0.30 -0.15 0.70 0.29 0.60c0.42 -0.09 1.06 -0.99 1.32 -0.46c0.09 0.19 0.40 0.24 0.57 0.28c0.22 0.06 0.32 0.38 0.46 0.42c0.13 0.24 0.38 0.63 0.69 0.64c0.39 0.02 0.87 -0.71 1.26 -0.39c0.29 0.24 0.75 0.49 1.05 0.72l0.00 0.00c-0.02 -0.40 -0.06 -0.78 -0.11 -0.92c-0.11 -0.36 -0.05 -0.79 -0.14 -1.17c-0.11 -0.43 0.40 -0.57 0.32 -0.88c-0.31 0.00 0.02 -0.60 -0.06 -0.76c-0.24 -0.47 -0.44 -0.52 -0.14 -1.18c0.35 -0.31 0.74 -1.18 1.17 -1.22c0.12 -0.01 0.22 -0.04 0.30 -0.07l0.00 0.00c-0.17 -0.17 -0.68 -0.43 -0.92 -0.51c-0.13 -0.05 -0.31 0.08 -0.42 0.13c-0.26 0.12 -0.77 0.49 -1.05 0.35c-0.41 -0.19 -0.27 -0.19 -0.69 0.01c-0.19 0.09 -0.48 -0.50 -0.55 -0.66c-0.11 -0.27 -0.68 -0.76 -0.63 -0.98c0.08 -0.34 0.20 -0.31 -0.14 -0.53l0.00 0.00c-0.02 0.00 -0.04 0.02 -0.05 0.04c-0.10 0.02 -0.39 0.27 -0.51 0.33c-0.28 0.14 -0.51 0.03 -0.78 0.07c-0.13 0.02 -0.24 0.12 -0.36 0.17c-0.22 0.10 -0.29 -0.20 -0.46 -0.18c-0.17 0.01 -0.20 0.18 -0.34 0.20l0.00 0.00l-0.09 0.41c-0.18 0.14 -0.45 0.50 -0.66 0.55c-0.26 0.07 -0.46 -0.29 -0.76 -0.13c-0.22 0.12 -0.23 0.10 -0.42 -0.05c-0.17 -0.14 -0.40 0.06 -0.47 0.24c-0.02 0.05 -0.01 0.26 0.04 0.27c0.00 0.07 -0.22 0.08 -0.29 0.16l0.00 0.00c0.33 0.18 0.38 0.27 0.48 0.61c0.09 0.31 0.63 0.48 0.76 0.88c0.12 0.36 0.20 0.72 0.20 1.10l0.00 0.00z\"\n          },\n          55: {\n            name: \"Th\\xe1i Nguy\\xean\",\n            path: \"m82.24 55.59c0.09 -0.16 -0.02 -0.25 0.05 -0.37c0.04 -0.08 0.31 0.06 0.38 -0.14c0.04 -0.12 0.15 -0.34 0.17 -0.39c0.49 0.16 0.51 -0.10 0.51 -0.55c0.00 -1.10 0.90 0.67 1.25 -0.12c0.49 -1.11 0.09 -2.23 0.52 -3.34c0.16 -0.41 0.55 -1.09 1.01 -0.68c0.34 0.30 0.82 0.06 1.19 0.43l0.00 0.00l0.35 -0.41c0.20 -0.47 0.15 -0.94 0.54 -1.32c0.42 -0.42 -0.93 -0.69 -1.13 -0.81c-0.26 -0.16 -0.53 -0.57 -0.80 -0.78c-0.03 -0.02 -0.20 -0.13 -0.18 -0.14c-0.23 -0.23 0.00 -0.81 0.14 -0.99c0.25 -0.33 -0.28 -0.63 -0.10 -0.87c0.20 -0.26 0.17 -0.29 0.30 -0.61l-0.49 -0.31l0.00 0.00c-0.42 -0.06 -0.60 -0.15 -0.97 -0.27c-0.51 -0.18 -0.39 0.41 -0.74 0.36c-0.50 -0.08 -1.50 0.90 -1.99 1.27c-0.50 0.37 -0.98 0.12 -1.31 0.72c-0.58 1.05 -0.99 0.28 -0.86 -0.49c0.14 -0.84 -0.07 -1.30 -0.07 -2.04c0.00 -0.94 -0.07 -0.48 -0.67 -0.95c-1.05 -0.84 -0.54 -0.12 -1.50 0.05c-0.96 0.16 -0.77 0.79 -1.57 1.22l0.00 0.00c0.32 1.01 -0.62 0.95 -0.43 1.64c0.17 0.60 -0.55 0.24 -0.55 0.95c0.00 0.66 0.64 0.51 0.64 0.90c0.00 0.26 -0.54 1.11 -0.66 1.43c-0.21 0.59 0.25 1.25 0.55 1.73l0.46 0.43l0.00 0.00c0.04 0.00 1.17 0.89 1.22 0.97c0.23 0.43 0.24 0.84 0.76 1.05c0.24 0.10 0.54 0.14 0.73 0.35c0.15 0.17 0.10 0.55 0.39 0.58c1.03 0.11 0.44 0.35 0.99 0.99l0.00 0.00c0.23 -0.30 0.17 -0.45 0.61 -0.45c0.03 0.08 0.33 0.02 0.41 0.05c0.30 0.11 0.19 0.32 0.25 0.58c0.02 0.08 0.12 0.24 0.18 0.27c0.18 0.11 0.18 0.11 0.39 0.11l0.01 -0.01l0.00 0.00z\"\n          },\n          56: {\n            name: \"Thanh H\\xf3a\",\n            path: \"m82.67 91.85c-0.06 -0.13 -0.04 -0.53 0.19 -0.38c0.08 0.06 0.17 0.21 0.18 0.31c0.03 0.14 -0.17 0.20 -0.27 0.21l-0.11 -0.14zm-16.46 -11.69l1.12 0.73c0.29 0.01 0.54 0.20 0.87 0.20c0.23 0.00 0.47 -0.04 0.68 -0.02c0.32 0.03 0.67 0.30 1.08 0.33c0.35 0.03 0.33 0.64 0.33 0.85c-0.26 0.07 -0.63 0.36 -0.77 0.39c0.00 0.27 -0.25 0.45 -0.25 0.78c0.00 0.64 -0.04 0.85 0.48 1.11c0.24 0.12 0.10 0.37 0.02 0.55c-0.16 0.38 0.10 0.35 0.27 0.60c0.42 0.08 0.48 0.56 0.83 0.66c1.08 0.30 0.52 -0.01 0.88 1.04c0.16 0.46 -0.05 1.22 0.06 1.74c0.25 1.14 0.64 -0.39 0.95 -0.62c0.57 -0.41 0.49 0.31 0.62 0.73c0.13 0.42 1.41 1.04 1.81 0.94c0.81 -0.19 1.10 -0.68 1.55 0.33c0.57 1.30 1.21 0.62 1.76 1.62c0.45 0.81 0.27 0.49 1.01 0.49c0.50 0.00 1.00 0.30 1.46 0.30l0.00 0.00c0.11 -0.18 0.11 -0.36 -0.21 -0.51c-0.44 -0.22 -0.54 -1.56 -0.46 -1.58c0.02 -0.10 0.56 -0.00 0.56 -0.26c0.00 -0.77 -0.46 -1.30 -0.12 -2.22c0.18 -0.43 0.98 -2.88 1.24 -2.97c0.50 -0.18 0.31 -0.94 0.74 -1.37c0.34 -0.34 -0.04 -0.70 0.15 -1.05c0.18 -0.33 0.48 -0.41 0.48 -0.84c0.00 -0.93 0.24 -0.65 0.92 -0.94c0.14 -0.06 0.24 -0.08 0.31 -0.06l0.00 0.00l0.11 -0.63c0.10 -0.34 0.40 -0.46 0.55 -0.79c0.16 -0.34 0.33 -0.66 0.22 -0.98c-0.47 0.00 -0.93 0.11 -1.45 0.08c-0.53 -0.03 -1.08 -0.46 -1.51 -0.77c-0.15 -0.48 -0.82 -0.41 -1.13 -0.72c-0.58 -0.58 -1.18 -0.59 -1.81 -0.94c-0.50 -0.27 -0.93 -1.33 -1.44 -1.39c-0.29 -0.17 -0.56 -0.50 -0.88 -0.66c-0.40 -0.19 -0.80 -0.17 -0.91 -0.71l0.07 -0.39l0.00 0.00c-0.15 -0.15 -0.69 0.14 -0.97 0.04c-0.62 -0.24 -0.64 -0.25 -1.32 -0.25c-0.71 0.00 -2.41 -0.59 -2.58 -1.34c-0.14 -0.65 -0.67 -1.10 -1.30 -1.15c-0.62 0.00 -0.36 -0.44 -0.82 -0.72c-0.19 -0.12 -0.80 -0.45 -1.01 -0.45c-0.27 0.00 -0.57 0.27 -0.83 0.34c-0.08 0.02 -0.83 -0.33 -0.86 -0.38c-0.17 -0.27 -0.26 -0.91 -0.52 -1.10c-0.60 -0.44 -0.83 -0.52 -1.47 -0.31l-0.91 0.38l0.00 0.00l-0.39 0.21c-0.28 0.22 -0.30 0.49 -0.32 0.81c-0.02 0.19 -0.24 0.30 -0.41 0.30c-0.10 0.00 -0.18 -0.04 -0.27 -0.05c-0.07 -0.01 -0.48 -0.11 -0.49 -0.16c-0.13 0.00 -0.41 -0.22 -0.54 -0.29c-0.54 -0.30 -0.71 -0.58 -1.04 -1.09l0.00 0.00c-0.02 0.21 -0.07 0.58 -0.16 0.61c0.00 0.44 -0.69 0.41 -0.69 0.95c0.00 0.41 -0.72 1.08 -1.17 0.95c-0.21 -0.06 -0.74 -0.33 -0.88 -0.19c-0.22 0.22 -0.20 0.45 -0.61 0.45c-0.01 0.04 -0.04 0.05 -0.04 0.12c-0.07 0.02 -0.09 0.23 -0.32 0.23c-0.01 0.04 -0.14 0.05 -0.19 0.05c-0.01 0.02 -0.00 0.00 -0.01 0.02l-0.02 0.00c-0.13 0.39 -0.64 0.73 0.15 0.94c0.61 0.16 1.60 0.84 2.22 0.60c0.80 -0.32 1.51 -0.48 1.80 0.41l1.02 0.53c0.45 0.23 0.36 0.59 0.24 0.95c-0.57 0.00 -0.43 0.22 -0.66 0.60l0.00 0.82c0.44 0.15 0.94 0.56 1.41 0.61c0.31 0.03 0.61 -0.67 1.29 -0.67c0.01 0.04 0.07 0.01 0.08 0.05c0.15 0.00 1.15 0.59 1.19 0.72c1.07 0.00 0.45 0.43 0.45 0.91c0.24 0.08 0.63 0.77 0.93 0.87c0.00 0.26 -0.52 0.19 -0.33 0.61c0.18 0.40 0.27 0.82 0.12 1.03l0.00 0.00z\"\n          },\n          57: {\n            name: \"Th\\u1EEBa Thi\\xEAn - Hu\\u1EBF\",\n            path: \"m115.40 151.78c0.09 -0.16 -0.01 -0.37 0.10 -0.56c0.08 -0.14 0.22 -0.28 0.33 -0.39c-0.04 -0.10 0.41 -1.05 0.44 -1.25c0.06 -0.42 0.45 -0.73 0.81 -0.42c0.45 0.39 0.40 0.12 0.74 -0.05c0.38 -0.19 0.86 0.20 1.27 0.33c0.44 0.13 1.51 -0.18 1.94 -0.34l0.00 0.00c-0.23 -0.15 -0.37 -0.43 -0.62 -0.35c-0.25 0.09 -0.60 0.34 -0.83 0.08c-0.62 -0.69 0.35 0.05 0.07 -0.74c-0.11 -0.32 -0.41 -1.08 -0.66 -1.27c-1.34 1.60 -5.05 -4.14 -6.74 -4.14c0.00 0.17 1.73 1.51 1.99 1.71c0.54 0.40 0.93 1.31 1.47 1.78c0.44 0.39 1.33 0.42 1.47 1.06c0.18 0.86 -0.70 0.08 -1.02 0.27c-0.38 0.24 -1.15 -0.29 -0.54 -0.79c0.41 -0.33 -2.00 -2.61 -2.41 -2.94c-0.33 -0.27 -0.59 0.35 -0.64 -0.43c-0.05 -0.82 -1.78 -0.98 -2.50 -1.18c-0.18 -0.32 -1.31 -0.59 -1.18 -1.10c0.04 -0.14 0.48 0.16 0.54 0.19l1.49 0.90c0.15 0.09 1.30 0.32 1.31 0.41c0.12 -0.09 -0.67 -0.48 -0.80 -0.57c-0.44 -0.32 -1.05 -0.66 -1.42 -1.04c-0.38 -0.38 -0.88 -0.45 -1.32 -0.74c-0.28 -0.19 -0.55 -0.40 -0.79 -0.63l0.00 0.00c-0.18 0.18 -0.65 1.00 -0.80 1.24c-0.34 0.54 0.10 0.74 -0.02 1.18c-0.30 1.09 -1.51 0.43 -2.20 0.43c-0.61 0.00 -1.12 0.85 -1.55 0.70c-0.25 -0.09 -0.55 0.06 -0.62 0.33c-0.06 0.26 1.64 1.51 0.73 1.58c-0.24 0.02 -0.79 -0.22 -0.86 0.20c-0.11 0.73 0.01 0.75 -0.51 1.31l-0.02 0.86l0.00 0.00c0.90 0.35 2.22 -0.27 1.99 1.59c-0.20 0.59 0.40 1.62 1.04 1.15c0.25 0.19 0.68 -0.01 1.11 0.48c0.30 0.35 0.94 1.36 1.43 1.16c0.54 -0.22 0.37 -0.10 0.80 -0.10c0.23 0.00 0.46 -0.39 0.79 -0.39c0.01 0.02 -0.00 0.01 0.02 0.01c0.09 0.26 -0.04 0.58 -0.04 0.87c0.07 0.02 0.09 0.13 0.08 0.28l0.00 0.00l0.54 -0.25c0.25 0.01 0.99 0.94 0.99 0.10c0.00 -0.31 0.76 -0.45 1.02 -0.52c0.40 -0.10 0.11 0.43 0.48 0.54c0.45 0.14 0.70 0.67 1.11 0.67c0.33 0.00 0.50 -0.83 1.01 -1.02c0.16 -0.18 0.24 -0.27 0.49 -0.20c0.19 0.05 0.33 -0.02 0.51 -0.02l0.00 0.00z\"\n          },\n          58: {\n            name: \"Ti\\u1EC1n Giang\",\n            path: \"m83.28 249.85l-0.04 0.66l-0.68 0.79l-0.63 0.66l-0.25 0.62l-0.47 0.12l-0.10 0.72l0.46 0.43c0.11 0.09 0.24 0.16 0.37 0.22c0.10 0.04 0.24 0.08 0.32 0.14c0.05 0.04 0.16 0.13 0.17 0.19l0.00 0.00c0.24 -0.05 0.42 -0.01 0.64 -0.15c0.24 -0.15 0.45 -0.41 0.69 -0.56c0.12 -0.07 0.61 -0.14 0.67 0.02c0.07 0.00 0.40 0.21 0.46 0.27l0.00 0.00c0.86 0.08 0.82 0.62 1.91 0.29c0.59 -0.18 1.20 -0.49 1.79 -0.62c0.39 -0.09 0.91 0.09 1.19 0.00c0.86 -0.27 0.76 -0.52 1.70 -0.16c0.24 0.09 0.55 0.33 0.74 0.50c0.33 0.30 0.77 0.32 1.16 0.49c0.35 -0.09 0.91 0.17 1.26 0.29c0.54 0.18 1.17 0.21 1.63 0.50c0.19 0.12 0.39 0.27 0.55 0.43c0.20 0.20 0.54 0.47 0.77 0.66l0.00 0.00c-0.03 -0.26 0.74 -0.21 0.46 -0.61c-0.33 -0.48 -0.72 -0.20 -0.44 -0.98c0.18 -0.51 -0.07 -1.13 0.12 -1.64c0.10 -0.35 -0.11 -0.58 -0.11 -0.90c0.00 -0.13 0.02 -0.20 0.05 -0.23l0.00 0.00l-0.85 -1.24l0.00 0.00c-0.06 0.09 -0.15 0.16 -0.24 0.21c-0.17 0.08 -0.70 1.04 -0.88 0.72c-0.20 -0.34 -0.19 -1.00 -0.57 -0.39c-0.17 0.28 -0.44 0.20 -0.66 0.38c-0.41 0.34 -0.22 0.48 -0.80 0.26c-0.51 -0.19 -0.67 -0.23 -1.07 0.17c-0.09 0.30 -0.67 -0.01 -0.95 -0.07c-0.81 -0.17 1.16 -0.98 -0.49 -1.10c-0.76 -0.05 -1.21 -2.00 -2.08 -1.94l-2.49 0.18c-0.39 0.03 -0.78 -0.17 -0.66 0.41c0.09 0.45 -0.32 0.42 -0.70 0.44l-1.97 -0.21l0.00 0.00z\"\n          },\n          59: {\n            name: \"Tr\\xe0 Vinh\",\n            path: \"m89.50 258.20l1.62 1.48l2.23 1.53l0.64 1.19l0.00 0.00c-0.57 -0.29 -1.05 0.97 -0.23 1.48c0.39 0.24 0.31 0.56 0.36 1.03c0.21 1.89 -3.00 4.04 -4.10 2.26c-0.13 -0.21 -0.31 -0.32 -0.48 -0.33l0.00 0.00c-0.09 -0.35 -1.20 -1.16 -1.48 -1.34c-0.65 -0.40 -1.07 -1.16 -1.79 -1.60c-0.46 -0.29 -1.03 -1.07 -1.38 -1.53l-1.01 -1.22l0.00 0.00c0.28 -0.18 0.70 -0.18 0.91 -0.47c0.28 -0.39 0.31 -0.20 0.68 -0.30c0.20 -0.05 0.32 -0.32 0.52 -0.35c0.50 -0.06 0.55 0.50 0.77 -0.23c0.10 -0.32 0.09 -0.68 0.37 -0.90c0.30 -0.23 0.65 0.15 1.07 0.11c0.17 -0.02 0.17 -0.42 0.25 -0.55c0.11 -0.19 0.42 -0.34 0.43 -0.36c0.13 0.10 0.45 0.10 0.62 0.08l0.00 0.00z\"\n          },\n          60: {\n            name: \"Tuy\\xean Quang\",\n            path: \"m72.67 52.31c0.37 -0.22 0.55 -0.51 0.97 -0.14c0.18 0.16 0.46 0.21 0.68 0.07c0.28 -0.17 0.35 -0.21 0.66 -0.29c0.30 -0.08 0.58 0.10 0.82 -0.20c0.10 -0.13 0.51 -0.48 0.51 -0.64l0.00 0.00l-0.46 -0.43c-0.30 -0.48 -0.76 -1.15 -0.55 -1.73c0.11 -0.32 0.66 -1.18 0.66 -1.43c0.00 -0.39 -0.64 -0.24 -0.64 -0.90c0.00 -0.71 0.72 -0.35 0.55 -0.95c-0.19 -0.69 0.75 -0.63 0.43 -1.64l0.00 0.00c-0.01 -0.05 -0.45 -0.40 -0.52 -0.49c-0.12 -0.15 -0.25 -0.33 -0.33 -0.51c-0.19 -0.41 -0.60 -0.56 -0.46 -1.12c0.07 -0.31 -0.04 -0.45 -0.06 -0.74c-0.03 -0.44 0.32 -0.67 0.32 -1.05c-0.35 -0.09 -0.37 -0.15 -0.54 -0.48c-0.27 -0.74 -0.66 -1.51 0.46 -1.73c0.08 -0.34 0.01 -1.05 0.51 -1.15c0.08 -0.30 -0.04 -0.59 0.06 -0.88c0.20 -0.55 0.59 -0.23 0.75 -0.47c0.26 -0.38 -0.37 -1.37 0.58 -1.68c0.00 -0.02 -0.01 -0.02 0.01 -0.02c0.00 -0.02 0.00 -0.04 0.02 -0.05c0.00 -0.50 -0.59 -1.75 -1.06 -1.91c0.00 -0.03 -0.05 -0.17 -0.06 -0.20c0.03 -0.02 0.02 -0.16 0.01 -0.19l-0.73 -0.08c0.07 0.02 -0.16 0.26 -0.19 0.29c-0.11 0.08 -0.22 0.14 -0.33 0.20c-0.22 0.13 -0.45 0.12 -0.69 0.06c-0.56 -0.13 -0.82 -0.51 -1.24 -0.67c-0.38 -0.14 -0.52 0.51 -0.89 0.45c-0.49 -0.08 -0.56 -0.62 -1.10 -0.78c-0.34 -0.10 -1.49 -0.63 -1.70 -0.38c-0.16 0.18 0.27 0.88 0.21 1.19c-0.07 0.40 -0.55 0.49 -0.56 0.87l-0.02 1.35l-0.04 0.12c0.22 0.52 -0.35 0.76 -0.35 1.16c0.00 0.51 0.31 0.44 -0.26 0.58c-0.07 0.34 0.19 0.90 -0.37 0.78c-0.45 -0.10 0.04 0.68 -0.08 0.98c-0.02 -0.01 -0.11 0.18 -0.14 0.23c-0.06 0.09 -0.15 0.14 -0.26 0.14c-0.23 0.02 -0.44 -0.05 -0.57 -0.23c-0.25 -0.35 -0.38 -0.56 -0.85 -0.49c-0.38 0.06 -0.43 -0.31 -0.75 -0.31c-0.11 0.32 0.15 0.46 0.17 0.75c0.02 0.36 -0.17 0.36 -0.33 0.62c-0.16 0.25 0.97 1.12 -0.11 1.46c-0.49 0.15 -0.42 -0.50 -0.93 0.17l0.00 0.00c0.51 0.27 0.42 2.02 1.00 2.02c0.41 0.00 0.51 0.32 0.70 0.63c0.20 0.33 0.61 -0.09 0.93 -0.01c0.00 0.28 0.06 0.63 0.11 0.91c0.04 0.25 -0.20 1.23 0.07 1.07c0.69 -0.39 0.29 0.73 0.51 0.73c0.10 0.21 0.24 0.29 0.37 0.45c0.19 0.24 0.09 0.58 0.29 0.80c0.19 0.21 0.79 0.51 0.48 0.87c-0.25 0.28 -0.42 0.41 -0.42 0.81l0.25 0.35l0.00 0.00c0.63 -0.06 0.97 0.48 1.63 0.57c0.29 0.04 0.86 0.40 1.08 0.56c0.31 0.22 -0.37 0.56 -0.01 0.78c0.56 0.33 0.28 0.85 0.73 1.19c0.50 0.39 0.28 0.76 1.08 0.76l0.00 0.00z\"\n          },\n          61: {\n            name: \"V\\u0129nh Long\",\n            path: \"m82.60 260.37l-0.97 -0.80l0.00 0.00c-0.16 -0.04 -0.34 -0.53 -0.39 -0.67c-0.07 -0.18 -0.37 -0.55 -0.55 -0.68c-0.20 -0.14 -0.46 -0.30 -0.62 -0.48l-1.22 -0.87l0.00 0.00l0.82 -1.21c0.24 0.10 0.35 0.06 0.46 0.30c0.10 0.20 0.23 0.16 0.38 0.05c0.25 0.19 0.40 0.46 0.79 0.60c0.39 0.14 0.48 -0.03 0.74 -0.29c0.29 -0.29 0.95 -0.11 0.95 -0.68c0.00 -0.42 -0.81 -0.65 -0.60 -0.94l0.03 -0.30l0.00 0.00c0.24 -0.05 0.42 -0.01 0.64 -0.15c0.24 -0.15 0.45 -0.41 0.69 -0.56c0.12 -0.07 0.61 -0.14 0.67 0.02c0.07 0.00 0.40 0.21 0.46 0.27l0.00 0.00c-0.18 0.82 -0.06 0.68 0.71 0.90c0.35 0.10 0.80 -0.08 1.13 0.25c0.25 0.25 0.30 0.57 0.52 0.81c0.31 0.34 0.76 0.44 1.10 0.78c0.34 0.34 0.54 0.55 0.79 1.04l0.35 0.44l0.00 0.00c-0.17 0.02 -0.49 0.01 -0.62 -0.08c-0.01 0.02 -0.32 0.17 -0.43 0.36c-0.08 0.13 -0.08 0.53 -0.25 0.55c-0.42 0.05 -0.77 -0.34 -1.07 -0.11c-0.28 0.21 -0.27 0.58 -0.37 0.90c-0.23 0.72 -0.28 0.17 -0.77 0.23c-0.20 0.02 -0.32 0.29 -0.52 0.35c-0.37 0.09 -0.40 -0.09 -0.68 0.30c-0.21 0.29 -0.62 0.29 -0.91 0.47l0.00 0.00l-1.28 -0.78l0.00 0.00z\"\n          },\n          62: {\n            name: \"V\\u0129nh Ph\\xFAc\",\n            path: \"m74.53 56.56c-0.06 0.70 -0.20 0.75 0.18 1.36c0.23 0.38 0.56 0.66 0.95 0.86c0.81 0.41 1.34 -0.54 2.17 0.08c0.54 0.41 1.10 -0.13 1.49 0.64c0.32 0.65 0.44 -0.18 0.63 -0.45c0.38 -0.54 0.75 -1.22 -0.02 -1.72c-0.99 -0.64 -0.23 -0.97 0.13 -1.58l0.33 -0.72l0.00 0.00c-0.55 -0.64 0.04 -0.88 -0.99 -0.99c-0.30 -0.03 -0.24 -0.42 -0.39 -0.58c-0.19 -0.21 -0.48 -0.25 -0.73 -0.35c-0.52 -0.21 -0.53 -0.62 -0.76 -1.05c-0.04 -0.08 -1.17 -0.97 -1.22 -0.97l0.00 0.00c0.00 0.16 -0.41 0.52 -0.51 0.64c-0.24 0.30 -0.52 0.13 -0.82 0.20c-0.30 0.08 -0.38 0.12 -0.66 0.29c-0.22 0.14 -0.50 0.09 -0.68 -0.07c-0.41 -0.37 -0.60 -0.07 -0.97 0.14l0.00 0.00c-0.08 0.42 -0.17 0.86 -0.05 1.29c0.15 0.53 0.55 -0.02 0.97 0.36c0.24 0.22 0.08 0.82 0.08 1.09c0.09 0.02 0.51 0.53 0.64 0.66c0.21 0.21 0.39 0.55 0.21 0.86l0.00 0.00z\"\n          },\n          63: {\n            name: \"Y\\xean B\\xe1i\",\n            path: \"m59.28 38.54c0.19 -0.22 0.58 -0.86 0.92 -0.78c0.25 0.06 0.32 0.27 0.66 0.32c0.36 0.06 1.17 0.08 1.20 0.57c0.01 0.15 0.11 1.58 0.45 1.41c0.06 0.06 1.13 -0.25 1.36 -0.25l0.00 0.00c0.51 0.27 0.42 2.02 1.00 2.02c0.41 0.00 0.51 0.32 0.70 0.63c0.20 0.33 0.61 -0.09 0.93 -0.01c0.00 0.28 0.06 0.63 0.11 0.91c0.04 0.25 -0.20 1.23 0.07 1.07c0.69 -0.39 0.29 0.73 0.51 0.73c0.10 0.21 0.24 0.29 0.37 0.45c0.19 0.24 0.09 0.58 0.29 0.80c0.19 0.21 0.79 0.51 0.48 0.87c-0.25 0.28 -0.42 0.41 -0.42 0.81l0.25 0.35l0.00 0.00c0.07 0.09 -0.01 0.54 -0.11 0.62c-0.11 0.10 -0.47 -0.07 -0.57 -0.12c-0.70 -0.32 -0.56 0.34 -0.91 0.49c-0.09 0.04 -0.95 0.16 -0.82 0.41c-0.05 0.05 -0.09 0.05 -0.14 0.08c-0.07 -0.05 -0.53 0.15 -0.55 0.24c-0.28 0.06 -0.01 0.94 -0.45 1.21c-0.47 0.28 0.31 0.87 0.31 1.27c0.00 0.19 0.12 0.35 0.12 0.55l-0.01 0.61c-0.01 0.30 -0.46 0.66 -0.43 0.74c0.05 0.14 0.40 0.58 0.36 0.68c-0.10 0.26 -0.44 -0.08 -0.60 -0.14c-0.26 -0.10 -0.00 0.80 -0.55 0.39l-0.27 0.20l0.00 0.00c-0.11 0.00 -0.74 0.09 -0.77 -0.02c-0.40 0.00 -0.62 -1.04 -0.86 -1.28c-0.56 -0.56 -0.78 0.81 -1.75 -0.06c-0.44 -0.40 -0.77 0.05 -1.20 -0.13c-0.64 -0.26 -0.86 0.73 -1.41 0.97c-0.87 0.38 -1.06 -0.78 -1.86 -0.95c-0.59 -0.13 -0.77 0.05 -1.06 -0.61c-0.19 -0.42 -0.91 -2.23 -0.27 -2.45c0.00 -0.56 -0.06 -0.98 0.77 -1.25c0.00 -0.37 -0.91 -0.46 -1.22 -0.42c-0.33 0.00 -0.54 -0.14 -0.88 0.00c-0.26 0.10 -0.60 0.38 -0.87 0.27c-0.23 -0.08 -0.47 -0.17 -0.69 -0.10c-0.31 0.10 -0.62 0.20 -0.95 0.13c-0.38 -0.08 -0.53 -0.17 -0.86 -0.37c-0.49 -0.30 -0.95 0.08 -1.37 -0.10c-0.29 -0.12 -0.25 -0.43 -0.62 -0.48l0.00 0.00c0.04 -0.21 -0.12 -0.63 0.04 -0.74c0.34 -0.24 1.04 -0.14 0.77 -0.82c-0.19 -0.50 -0.81 -1.05 -1.11 -1.53c-0.20 -0.31 -0.31 -0.84 -0.13 -1.21c0.16 -0.31 0.52 -0.08 0.79 -0.08c0.08 0.25 0.53 -0.28 0.58 -0.32l0.26 -0.41l0.00 0.00l0.25 0.43c-0.06 0.58 1.17 0.87 1.48 0.70c0.53 -0.30 1.13 0.14 1.66 0.35c1.53 0.59 -0.15 -1.71 1.24 -0.79c0.10 0.06 0.95 0.10 1.13 0.14c0.27 0.06 0.42 0.86 0.67 0.86c0.06 0.17 0.35 -0.24 0.38 -0.27c0.06 -0.09 0.37 -0.38 0.38 -0.44c1.72 -0.34 -0.35 -2.87 -0.15 -3.31c0.14 -0.31 0.38 -0.37 0.25 -0.78c-0.17 -0.52 -0.16 -0.88 0.37 -1.07c0.58 -0.21 0.93 0.62 1.26 0.95c0.21 0.16 0.57 0.33 0.71 0.54c0.08 0.11 0.29 0.36 0.43 0.36c0.01 0.02 0.07 0.02 0.10 0.02c0.04 0.12 0.32 -0.35 0.32 -0.50c0.00 -0.32 -0.19 -0.97 0.29 -1.00c0.43 -0.03 0.60 -0.22 0.60 -0.68c-0.41 -0.14 -0.94 0.04 -0.94 -0.69l0.00 0.00z\"\n          }\n        }\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    (function (l) {\n      l.fn.vectorMap(\"addMap\", \"world_mill\", {\n        insets: [{\n          width: 900,\n          top: 0,\n          height: 440.7063107441331,\n          bbox: [{\n            y: -12671671.123330014,\n            x: -20004297.151525836\n          }, {\n            y: 6930392.025135122,\n            x: 20026572.394749384\n          }],\n          left: 0\n        }],\n        paths: {\n          BD: {\n            path: \"M651.84,230.21l-0.6,-2.0l-1.36,-1.71l-2.31,-0.11l-0.41,0.48l0.2,0.94l-0.53,0.99l-0.72,-0.36l-0.68,0.35l-1.2,-0.36l-0.37,-2.0l-0.81,-1.86l0.39,-1.46l-0.22,-0.47l-1.14,-0.53l0.29,-0.5l1.48,-0.94l0.03,-0.65l-1.55,-1.22l0.55,-1.14l1.61,0.94l1.04,0.15l0.18,1.54l0.34,0.35l5.64,0.63l-0.84,1.64l-1.22,0.34l-0.77,1.51l0.07,0.47l1.37,1.37l0.67,-0.19l0.42,-1.39l1.21,3.84l-0.03,1.21l-0.33,-0.15l-0.4,0.28Z\",\n            name: \"Bangladesh\"\n          },\n          BE: {\n            path: \"M429.29,144.05l1.91,0.24l2.1,-0.63l2.63,1.99l-0.21,1.66l-0.69,0.4l-0.18,1.2l-1.66,-1.13l-1.39,0.15l-2.73,-2.7l-1.17,-0.18l-0.16,-0.52l1.54,-0.5Z\",\n            name: \"Belgium\"\n          },\n          BF: {\n            path: \"M421.42,247.64l-0.11,0.95l0.34,1.16l1.4,1.71l0.07,1.1l0.32,0.37l2.55,0.51l-0.04,1.28l-0.38,0.53l-1.07,0.21l-0.72,1.18l-0.63,0.21l-3.22,-0.25l-0.94,0.39l-5.4,-0.05l-0.39,0.38l0.16,2.73l-1.23,-0.43l-1.17,0.1l-0.89,0.57l-2.27,-1.72l-0.13,-1.11l0.61,-0.96l0.02,-0.93l1.87,-1.98l0.44,-1.81l0.43,-0.39l1.28,0.26l1.05,-0.52l0.47,-0.73l1.84,-1.09l0.55,-0.83l2.2,-1.0l1.15,-0.3l0.72,0.45l1.13,-0.01Z\",\n            name: \"Burkina Faso\"\n          },\n          BG: {\n            path: \"M491.65,168.18l-0.86,0.88l-0.91,2.17l0.48,1.34l-1.6,-0.24l-2.55,0.95l-0.28,1.51l-1.8,0.22l-2.0,-1.0l-1.92,0.79l-1.42,-0.07l-0.15,-1.63l-1.05,-0.97l0.0,-0.8l1.2,-1.57l0.01,-0.56l-1.14,-1.23l-0.05,-0.94l0.88,0.97l0.88,-0.2l1.91,0.47l3.68,0.16l1.42,-0.81l2.72,-0.66l2.55,1.24Z\",\n            name: \"Bulgaria\"\n          },\n          BA: {\n            path: \"M463.49,163.65l2.1,0.5l1.72,-0.03l1.52,0.68l-0.36,0.78l0.08,0.45l1.04,1.02l-0.25,0.98l-1.81,1.15l-0.38,1.38l-1.67,-0.87l-0.89,-1.2l-2.11,-1.83l-1.63,-2.22l0.23,-0.57l0.48,0.38l0.55,-0.06l0.43,-0.51l0.94,-0.06Z\",\n            name: \"Bosnia and Herz.\"\n          },\n          BN: {\n            path: \"M707.48,273.58l0.68,-0.65l1.41,-0.91l-0.15,1.63l-0.81,-0.05l-0.61,0.58l-0.53,-0.6Z\",\n            name: \"Brunei\"\n          },\n          BO: {\n            path: \"M263.83,340.69l-3.09,-0.23l-0.38,0.23l-0.7,1.52l-1.31,-1.53l-3.28,-0.64l-2.37,2.4l-1.31,0.26l-0.88,-3.26l-1.3,-2.86l0.74,-2.37l-0.13,-0.43l-1.2,-1.01l-0.37,-1.89l-1.08,-1.55l1.45,-2.56l-0.96,-2.33l0.47,-1.06l-0.34,-0.73l0.91,-1.32l0.16,-3.84l0.5,-1.18l-1.81,-3.41l2.46,0.07l0.8,-0.85l3.4,-1.91l2.66,-0.35l-0.19,1.38l0.3,1.07l-0.05,1.97l2.72,2.27l2.88,0.49l0.89,0.86l1.79,0.58l0.98,0.7l1.71,0.05l1.17,0.61l0.6,2.7l-0.7,0.54l0.96,2.99l0.37,0.28l4.3,0.1l-0.25,1.2l0.27,1.02l1.43,0.9l0.5,1.35l-0.41,1.86l-0.65,1.08l0.12,1.35l-2.69,-1.65l-2.4,-0.03l-4.36,0.76l-1.49,2.5l-0.11,1.52l-0.75,2.37Z\",\n            name: \"Bolivia\"\n          },\n          JP: {\n            path: \"M781.12,166.87l1.81,0.68l1.62,-0.97l0.39,2.42l-3.35,0.75l-2.23,2.88l-3.63,-1.9l-0.56,0.2l-1.26,3.05l-2.16,0.03l-0.29,-2.51l1.08,-2.03l2.45,-0.16l0.37,-0.33l1.25,-5.94l2.47,2.71l2.03,1.12ZM773.56,187.34l-0.91,2.22l0.37,1.52l-1.14,1.75l-3.02,1.26l-4.58,0.27l-3.34,3.01l-1.25,-0.8l-0.09,-1.9l-0.46,-0.38l-4.35,0.62l-3.0,1.32l-2.85,0.05l-0.37,0.27l0.13,0.44l2.32,1.89l-1.54,4.34l-1.26,0.9l-0.79,-0.7l0.56,-2.27l-0.21,-0.45l-1.47,-0.75l-0.74,-1.4l2.12,-0.84l1.26,-1.7l2.45,-1.42l1.83,-1.91l4.78,-0.81l2.6,0.57l0.44,-0.21l2.39,-4.66l1.29,1.06l0.5,0.01l5.1,-4.02l1.69,-3.73l-0.38,-3.4l0.9,-1.61l2.14,-0.44l1.23,3.72l-0.07,2.18l-2.23,2.84l-0.04,3.16ZM757.78,196.26l0.19,0.56l-1.01,1.21l-1.16,-0.68l-1.28,0.65l-0.69,1.45l-1.02,-0.5l0.01,-0.93l1.14,-1.38l1.57,0.14l0.85,-0.98l1.4,0.46Z\",\n            name: \"Japan\"\n          },\n          BI: {\n            path: \"M495.45,295.49l-1.08,-2.99l1.14,-0.11l0.64,-1.19l0.76,0.09l0.65,1.83l-2.1,2.36Z\",\n            name: \"Burundi\"\n          },\n          BJ: {\n            path: \"M429.57,255.75l-0.05,0.8l0.5,1.34l-0.42,0.86l0.17,0.79l-1.81,2.12l-0.57,1.76l-0.08,5.42l-1.41,0.2l-0.48,-1.36l0.11,-5.71l-0.52,-0.7l-0.2,-1.35l-1.48,-1.48l0.21,-0.9l0.89,-0.43l0.42,-0.92l1.27,-0.36l1.22,-1.34l0.61,-0.0l1.62,1.24Z\",\n            name: \"Benin\"\n          },\n          BT: {\n            path: \"M650.32,213.86l0.84,0.71l-0.12,1.1l-3.76,-0.11l-1.57,0.4l-1.93,-0.87l1.48,-1.96l1.13,-0.57l1.63,0.57l1.33,0.08l0.99,0.65Z\",\n            name: \"Bhutan\"\n          },\n          JM: {\n            path: \"M228.38,239.28l-0.8,0.4l-2.26,-1.06l0.84,-0.23l2.14,0.3l1.17,0.56l-1.08,0.03Z\",\n            name: \"Jamaica\"\n          },\n          BW: {\n            path: \"M483.92,330.07l2.27,4.01l2.83,2.86l0.96,0.31l0.78,2.43l2.13,0.61l1.02,0.76l-3.0,1.64l-2.32,2.02l-1.54,2.69l-1.52,0.45l-0.64,1.94l-1.34,0.52l-1.85,-0.12l-1.21,-0.74l-1.35,-0.3l-1.22,0.62l-0.75,1.37l-2.31,1.9l-1.4,0.21l-0.35,-0.59l0.16,-1.75l-1.48,-2.54l-0.62,-0.43l-0.0,-7.1l2.08,-0.08l0.39,-0.4l0.07,-8.9l5.19,-0.93l0.8,0.89l0.51,0.07l1.5,-0.95l2.21,-0.49Z\",\n            name: \"Botswana\"\n          },\n          BR: {\n            path: \"M259.98,275.05l3.24,0.7l0.65,-0.53l4.55,-1.32l1.08,-1.06l-0.02,-0.63l0.55,-0.05l0.28,0.28l-0.26,0.87l0.22,0.48l0.73,0.32l0.4,0.81l-0.62,0.86l-0.4,2.13l0.82,2.56l1.69,1.43l1.43,0.2l3.17,-1.68l3.18,0.3l0.65,-0.75l-0.27,-0.92l1.9,-0.09l2.39,0.99l1.06,-0.61l0.84,0.78l1.2,-0.18l1.18,-1.06l0.84,-1.94l1.36,-2.11l0.37,-0.05l1.89,5.45l1.33,0.59l0.05,1.28l-1.77,1.94l0.02,0.56l1.02,0.87l4.07,0.36l0.08,2.16l0.66,0.29l1.74,-1.5l6.97,2.32l1.02,1.22l-0.35,1.18l0.49,0.5l2.81,-0.74l4.77,1.3l3.75,-0.08l3.57,2.0l3.29,2.86l1.93,0.72l2.12,0.12l0.71,0.62l1.21,4.51l-0.95,3.98l-4.72,5.06l-1.64,2.92l-1.72,2.05l-0.8,0.3l-0.72,2.03l0.18,4.75l-0.94,5.53l-0.81,1.13l-0.43,3.36l-2.55,3.5l-0.4,2.51l-1.86,1.04l-0.67,1.53l-2.54,0.01l-3.94,1.01l-1.83,1.2l-2.87,0.82l-3.03,2.19l-2.2,2.83l-0.36,2.0l0.4,1.58l-0.44,2.6l-0.51,1.2l-1.77,1.54l-2.75,4.78l-3.83,3.42l-1.24,2.74l-1.18,1.15l-0.36,-0.83l0.95,-1.14l0.01,-0.5l-1.52,-1.97l-4.56,-3.32l-1.03,-0.0l-2.38,-2.02l-0.81,-0.0l5.34,-5.45l3.77,-2.58l0.22,-2.46l-1.35,-1.81l-0.91,0.07l0.58,-2.33l0.01,-1.54l-1.11,-0.83l-1.75,0.3l-0.44,-3.11l-0.52,-0.95l-1.88,-0.88l-1.24,0.47l-2.17,-0.41l0.15,-3.21l-0.62,-1.34l0.66,-0.73l-0.22,-1.34l0.66,-1.13l0.44,-2.04l-0.61,-1.83l-1.4,-0.86l-0.2,-0.75l0.34,-1.39l-0.38,-0.5l-4.52,-0.1l-0.72,-2.22l0.59,-0.42l-0.03,-1.1l-0.5,-0.87l-0.32,-1.7l-1.45,-0.76l-1.63,-0.02l-1.05,-0.72l-1.6,-0.48l-1.13,-0.99l-2.69,-0.4l-2.47,-2.06l0.13,-4.35l-0.45,-0.45l-3.46,0.5l-3.44,1.94l-0.6,0.74l-2.9,-0.17l-1.47,0.42l-0.72,-0.18l0.15,-3.52l-0.63,-0.34l-1.94,1.41l-1.87,-0.06l-0.83,-1.18l-1.37,-0.26l0.21,-1.01l-1.35,-1.49l-0.88,-1.91l0.56,-0.6l-0.0,-0.81l1.29,-0.62l0.22,-0.43l-0.22,-1.19l0.61,-0.91l0.15,-0.99l2.65,-1.58l1.99,-0.47l0.42,-0.36l2.06,0.11l0.42,-0.33l1.19,-8.0l-0.41,-1.56l-1.1,-1.0l0.01,-1.33l1.91,-0.42l0.08,-0.96l-0.33,-0.43l-1.14,-0.2l-0.02,-0.83l4.47,0.05l0.82,-0.67l0.82,1.81l0.8,0.07l1.15,1.1l2.26,-0.05l0.71,-0.83l2.78,-0.96l0.48,-1.13l1.6,-0.64l0.24,-0.47l-0.48,-0.82l-1.83,-0.19l-0.36,-3.22Z\",\n            name: \"Brazil\"\n          },\n          BS: {\n            path: \"M226.4,223.87l-0.48,-1.15l-0.84,-0.75l0.36,-1.11l0.95,1.95l0.01,1.06ZM225.56,216.43l-1.87,0.29l-0.04,-0.22l0.74,-0.14l1.17,0.06Z\",\n            name: \"Bahamas\"\n          },\n          BY: {\n            path: \"M493.84,128.32l0.29,0.7l0.49,0.23l1.19,-0.38l2.09,0.72l0.19,1.26l-0.45,1.24l1.57,2.26l0.89,0.59l0.17,0.81l1.58,0.56l0.4,0.5l-0.53,0.41l-1.87,-0.11l-0.73,0.38l-0.13,0.52l1.04,2.74l-1.91,0.26l-0.89,0.99l-0.11,1.18l-2.73,-0.04l-0.53,-0.62l-0.52,-0.08l-0.75,0.46l-0.91,-0.42l-1.92,-0.07l-2.75,-0.79l-2.6,-0.28l-2.0,0.07l-1.5,0.92l-0.67,0.07l-0.08,-1.22l-0.59,-1.19l1.36,-0.88l0.01,-1.35l-0.7,-1.41l-0.07,-1.0l2.16,-0.02l2.72,-1.3l0.75,-2.04l1.91,-1.04l0.2,-0.41l-0.19,-1.25l3.8,-1.78l2.3,0.77Z\",\n            name: \"Belarus\"\n          },\n          BZ: {\n            path: \"M198.03,244.38l0.1,-4.49l0.69,-0.06l0.74,-1.3l0.34,0.28l-0.4,1.3l0.17,0.58l-0.34,2.25l-1.3,1.42Z\",\n            name: \"Belize\"\n          },\n          RU: {\n            path: \"M491.55,115.25l2.55,-1.85l-0.01,-0.65l-2.2,-1.5l7.32,-6.76l1.03,-2.11l-0.13,-0.49l-3.46,-2.52l0.86,-2.7l-2.11,-2.81l1.56,-3.67l-2.77,-4.52l2.15,-2.99l-0.08,-0.55l-3.65,-2.73l0.3,-2.54l1.81,-0.37l4.26,-1.77l2.42,-1.45l4.06,2.61l6.79,1.04l9.34,4.85l1.78,1.88l0.14,2.46l-2.55,2.02l-3.9,1.06l-11.07,-3.14l-2.06,0.53l-0.13,0.7l3.94,2.94l0.31,5.86l0.26,0.36l5.14,2.24l0.58,-0.29l0.32,-1.94l-1.35,-1.78l1.13,-1.09l6.13,2.42l2.11,-0.98l0.18,-0.56l-1.51,-2.67l5.41,-3.76l2.07,0.22l2.26,1.41l0.57,-0.16l1.46,-2.87l-0.05,-0.44l-1.92,-2.32l1.12,-2.32l-1.32,-2.27l5.87,1.16l1.04,1.75l-2.59,0.43l-0.33,0.4l0.02,2.36l2.46,1.83l3.87,-0.91l0.86,-2.8l13.69,-5.65l0.99,0.11l-1.92,2.06l0.23,0.67l3.11,0.45l2.0,-1.48l4.56,-0.12l3.64,-1.73l2.65,2.44l0.56,-0.01l2.85,-2.88l-0.01,-0.57l-2.35,-2.29l0.9,-1.01l7.14,1.3l3.41,1.36l9.05,4.97l0.51,-0.11l1.67,-2.27l-0.05,-0.53l-2.43,-2.21l-0.06,-0.78l-0.34,-0.36l-2.52,-0.36l0.64,-1.93l-1.32,-3.46l-0.06,-1.21l4.48,-4.06l1.69,-4.29l1.6,-0.81l6.23,1.18l0.44,2.21l-2.29,3.64l0.06,0.5l1.47,1.39l0.76,3.0l-0.56,6.03l2.69,2.82l-0.96,2.57l-4.86,5.95l0.23,0.64l2.86,0.61l0.42,-0.17l0.93,-1.4l2.64,-1.03l0.87,-2.24l2.09,-1.96l0.07,-0.5l-1.36,-2.28l1.09,-2.69l-0.32,-0.55l-2.47,-0.33l-0.5,-2.06l1.94,-4.38l-0.06,-0.42l-2.96,-3.4l4.12,-2.88l0.16,-0.4l-0.51,-2.93l0.54,-0.05l1.13,2.25l-0.96,4.35l0.27,0.47l2.68,0.84l0.5,-0.51l-1.02,-2.99l3.79,-1.66l5.01,-0.24l4.53,2.61l0.48,-0.06l0.07,-0.48l-2.18,-3.82l-0.23,-4.67l3.98,-0.9l5.97,0.21l5.49,-0.64l0.27,-0.65l-1.83,-2.31l2.56,-2.9l2.87,-0.17l4.8,-2.47l6.54,-0.67l1.03,-1.42l6.25,-0.45l2.32,1.11l5.53,-2.7l4.5,0.08l0.39,-0.28l0.66,-2.15l2.26,-2.12l5.69,-2.11l3.21,1.29l-2.46,0.94l-0.25,0.42l0.34,0.35l5.41,0.77l0.61,2.33l0.58,0.25l2.2,-1.22l7.13,0.07l5.51,2.47l1.79,1.72l-0.53,2.24l-9.16,4.15l-1.97,1.52l0.16,0.71l6.77,1.91l2.16,-0.78l1.13,2.74l0.67,0.11l1.01,-1.15l3.81,-0.73l7.7,0.77l0.54,1.99l0.36,0.29l10.47,0.71l0.43,-0.38l0.13,-3.23l4.87,0.78l3.95,-0.02l3.83,2.4l1.03,2.71l-1.35,1.79l0.02,0.5l3.15,3.64l4.07,1.96l0.53,-0.18l2.23,-4.47l3.95,1.93l4.16,-1.21l4.73,1.39l2.05,-1.26l3.94,0.62l0.43,-0.55l-1.68,-4.02l2.89,-1.8l22.31,3.03l2.16,2.75l6.55,3.51l10.29,-0.81l4.82,0.73l1.85,1.66l-0.29,3.08l0.25,0.41l3.08,1.26l3.56,-0.88l4.35,-0.11l4.8,0.87l4.57,-0.47l4.23,3.79l0.43,0.07l3.1,-1.4l0.16,-0.6l-1.88,-2.62l0.85,-1.52l7.71,1.21l5.22,-0.26l7.09,2.09l9.59,5.22l6.35,4.11l-0.2,2.38l1.88,1.41l0.6,-0.42l-0.48,-2.53l6.15,0.57l4.4,3.51l-1.97,1.43l-4.0,0.41l-0.36,0.39l-0.06,3.79l-0.74,0.62l-2.07,-0.11l-1.91,-1.39l-3.14,-1.11l-0.78,-1.85l-2.72,-0.68l-2.63,0.49l-1.04,-1.1l0.46,-1.31l-0.5,-0.51l-3.0,0.98l-0.22,0.58l0.99,1.7l-1.21,1.48l-3.04,1.68l-3.12,-0.28l-0.4,0.23l0.09,0.46l2.2,2.09l1.46,3.2l1.15,1.1l0.24,1.33l-0.42,0.67l-4.63,-0.77l-6.96,2.9l-2.19,0.44l-7.6,5.06l-0.84,1.45l-3.61,-2.37l-6.24,2.82l-0.94,-1.15l-0.53,-0.08l-2.28,1.52l-3.2,-0.49l-0.44,0.27l-0.78,2.37l-3.05,3.78l0.09,1.47l0.29,0.36l2.54,0.72l-0.29,4.53l-1.97,0.11l-0.35,0.26l-1.07,2.94l0.8,1.45l-3.91,1.58l-1.05,3.95l-3.48,0.77l-0.3,0.3l-0.72,3.29l-3.09,2.65l-0.7,-1.74l-2.44,-12.44l1.16,-4.71l2.04,-2.06l0.22,-1.64l3.8,-0.86l4.46,-4.61l4.28,-3.81l4.48,-3.01l2.17,-5.63l-0.42,-0.54l-3.04,0.33l-1.77,3.31l-5.86,3.86l-1.86,-4.25l-0.45,-0.23l-6.46,1.3l-6.47,6.44l-0.01,0.55l1.58,1.74l-8.24,1.17l0.15,-2.2l-0.34,-0.42l-3.89,-0.56l-3.25,1.81l-7.62,-0.62l-8.45,1.19l-17.71,15.41l0.22,0.7l3.74,0.41l1.36,2.17l2.43,0.76l1.88,-1.68l2.4,0.2l3.4,3.54l0.08,2.6l-1.95,3.42l-0.21,3.9l-1.1,5.06l-3.71,4.54l-0.87,2.21l-8.29,8.89l-3.19,1.7l-1.32,0.03l-1.45,-1.36l-0.49,-0.04l-2.27,1.5l0.41,-3.65l-0.59,-2.47l1.75,-0.89l2.91,0.53l0.42,-0.2l1.68,-3.03l0.87,-3.46l0.97,-1.18l1.32,-2.88l-0.45,-0.56l-4.14,0.95l-2.19,1.25l-3.41,-0.0l-1.06,-2.93l-2.97,-2.3l-4.28,-1.06l-1.75,-5.07l-2.66,-5.01l-2.29,-1.29l-3.75,-1.01l-3.44,0.08l-3.18,0.62l-2.24,1.77l0.05,0.66l1.18,0.69l0.02,1.43l-1.33,1.05l-2.26,3.51l-0.04,1.43l-3.16,1.84l-2.82,-1.16l-3.01,0.23l-1.35,-1.07l-1.5,-0.35l-3.9,2.31l-3.22,0.52l-2.27,0.79l-3.05,-0.51l-2.21,0.03l-1.48,-1.6l-2.6,-1.63l-2.63,-0.43l-5.46,1.01l-3.23,-1.25l-0.72,-2.57l-5.2,-1.24l-2.75,-1.36l-0.5,0.12l-2.59,3.45l0.84,2.1l-2.06,1.93l-3.41,-0.77l-2.42,-0.12l-1.83,-1.54l-2.53,-0.05l-2.42,-0.98l-3.86,1.57l-4.72,2.78l-3.3,0.75l-1.55,-1.92l-3.0,0.41l-1.11,-1.33l-1.62,-0.59l-1.31,-1.94l-1.38,-0.6l-3.7,0.79l-3.31,-1.83l-0.51,0.11l-0.99,1.29l-5.29,-8.05l-2.96,-2.48l0.65,-0.77l0.01,-0.51l-0.5,-0.11l-6.2,3.21l-1.84,0.15l0.15,-1.39l-0.26,-0.42l-3.22,-1.17l-2.46,0.7l-0.69,-3.16l-0.32,-0.31l-4.5,-0.75l-2.47,1.47l-6.19,1.27l-1.29,0.86l-9.51,1.3l-1.15,1.17l-0.03,0.53l1.47,1.9l-1.89,0.69l-0.22,0.56l0.31,0.6l-2.11,1.44l0.03,0.68l3.75,2.12l-0.39,0.98l-3.23,-0.13l-0.86,0.86l-3.09,-1.59l-3.97,0.07l-2.66,1.35l-8.32,-3.56l-4.07,0.06l-5.39,3.68l-0.39,2.0l-2.03,-1.5l-0.59,0.13l-2.0,3.59l0.57,0.93l-1.28,2.16l0.06,0.48l2.13,2.17l1.95,0.04l1.37,1.82l-0.23,1.46l0.25,0.43l0.83,0.33l-0.8,1.31l-2.49,0.62l-2.49,3.2l0.0,0.49l2.17,2.78l-0.15,2.18l2.5,3.24l-1.58,1.59l-0.7,-0.13l-1.63,-1.72l-2.29,-0.84l-0.94,-1.31l-2.34,-0.63l-1.48,0.4l-0.43,-0.47l-3.51,-1.48l-5.76,-1.01l-0.45,0.19l-2.89,-2.34l-2.9,-1.2l-1.53,-1.29l1.29,-0.43l2.08,-2.61l-0.05,-0.55l-0.89,-0.79l3.05,-1.06l0.27,-0.42l-0.07,-0.69l-0.49,-0.35l-1.73,0.39l0.04,-0.68l1.04,-0.72l2.66,-0.48l0.4,-1.32l-0.5,-1.6l0.92,-1.54l0.03,-1.17l-0.29,-0.37l-3.69,-1.06l-1.41,0.02l-1.42,-1.41l-2.19,0.38l-2.77,-1.01l-0.03,-0.59l-0.89,-1.43l-2.0,-0.32l-0.11,-0.54l0.49,-0.53l0.01,-0.53l-1.6,-1.9l-3.58,0.02l-0.88,0.73l-0.46,-0.07l-1.0,-2.79l2.22,-0.02l0.97,-0.74l0.07,-0.57l-0.9,-1.04l-1.35,-0.48l-0.11,-0.7l-0.95,-0.58l-1.38,-1.99l0.46,-0.98l-0.51,-1.96l-2.45,-0.84l-1.21,0.3l-0.46,-0.76l-2.46,-0.83l-0.72,-1.87l-0.21,-1.69l-0.99,-0.85l0.85,-1.17l-0.7,-3.21l1.66,-1.97l-0.16,-0.79ZM749.2,170.72l-0.6,0.4l-0.13,0.16l-0.01,-0.51l0.74,-0.05ZM871.88,65.81l2.17,-0.13l3.19,1.16l-2.39,1.09l-5.63,0.48l-0.26,-0.84l2.92,-1.76ZM797.39,48.49l-2.0,1.36l-3.8,-0.42l-4.25,-1.8l0.35,-0.97l9.69,1.83ZM783.67,46.12l-1.63,3.09l-8.98,-0.13l-4.09,1.14l-4.54,-2.97l1.16,-3.01l3.05,-0.89l6.5,0.22l8.54,2.56ZM778.2,134.98l-0.56,-0.9l0.27,-0.12l0.29,1.01ZM778.34,135.48l0.94,3.53l-0.05,3.38l1.05,3.39l2.18,5.0l-2.89,-0.83l-0.49,0.26l-1.54,4.65l2.42,3.5l-0.04,1.13l-1.24,-1.24l-0.61,0.06l-1.09,1.61l-0.28,-1.61l0.27,-3.1l-0.28,-3.4l0.58,-2.47l0.11,-4.39l-1.46,-3.36l0.21,-4.32l2.15,-1.46l0.07,-0.34ZM771.95,56.61l1.76,-1.42l2.89,-0.42l3.28,1.71l0.14,0.6l-3.27,0.03l-4.81,-0.5ZM683.76,31.09l-13.01,1.93l4.03,-6.35l1.82,-0.56l1.73,0.34l5.99,2.98l-0.56,1.66ZM670.85,27.93l-5.08,0.64l-6.86,-1.57l-3.99,-2.05l-2.1,-4.16l-2.6,-0.87l5.72,-3.5l5.2,-1.28l4.69,2.85l5.59,5.4l-0.56,4.53ZM564.15,68.94l-0.64,0.17l-7.85,-0.57l-0.86,-2.04l-4.28,-1.17l-0.28,-1.94l2.27,-0.89l0.25,-0.39l-0.08,-2.38l4.81,-3.97l-0.15,-0.7l-1.47,-0.38l5.3,-3.81l0.15,-0.44l-0.58,-1.94l5.28,-2.51l8.21,-3.27l8.28,-0.96l4.35,-1.94l4.6,-0.64l1.36,1.61l-1.34,1.28l-16.43,4.94l-7.97,4.88l-7.74,9.63l0.66,4.14l4.16,3.27ZM548.81,18.48l-5.5,1.18l-0.58,1.02l-2.59,0.84l-2.13,-1.07l1.12,-1.42l-0.3,-0.65l-2.33,-0.07l1.68,-0.36l3.47,-0.06l0.42,1.29l0.66,0.16l1.38,-1.34l2.15,-0.88l2.94,1.01l-0.39,0.36ZM477.37,133.15l-4.08,0.05l-2.56,-0.32l0.33,-0.87l3.17,-1.03l3.24,0.96l-0.09,1.23Z\",\n            name: \"Russia\"\n          },\n          RW: {\n            path: \"M497.0,288.25l0.71,1.01l-0.11,1.09l-1.63,0.03l-1.04,1.39l-0.83,-0.11l0.51,-1.2l0.08,-1.34l0.42,-0.41l0.7,0.14l1.19,-0.61Z\",\n            name: \"Rwanda\"\n          },\n          RS: {\n            path: \"M469.4,163.99l0.42,-0.5l-0.01,-0.52l-1.15,-1.63l1.43,-0.62l1.33,0.12l1.17,1.06l0.46,1.13l1.34,0.64l0.35,1.35l1.46,0.9l0.76,-0.29l0.2,0.69l-0.48,0.78l0.22,1.12l1.05,1.22l-0.77,0.8l-0.37,1.52l-1.21,0.08l0.24,-0.64l-0.39,-0.54l-2.08,-1.64l-0.9,0.05l-0.48,0.94l-2.12,-1.37l0.53,-1.6l-1.11,-1.37l0.51,-1.1l-0.41,-0.57Z\",\n            name: \"Serbia\"\n          },\n          TL: {\n            path: \"M734.55,307.93l-0.1,-0.97l4.5,-0.86l-2.82,1.28l-1.59,0.55Z\",\n            name: \"Timor-Leste\"\n          },\n          TM: {\n            path: \"M553.03,173.76l-0.04,0.34l-0.09,-0.22l0.13,-0.12ZM555.87,172.66l0.45,-0.1l1.48,0.74l2.06,2.43l4.07,-0.18l0.38,-0.51l-0.32,-1.19l1.92,-0.94l1.91,-1.59l2.94,1.39l0.43,2.47l1.19,0.67l2.58,-0.13l0.62,0.4l1.32,3.12l4.54,3.44l2.67,1.45l3.06,1.14l-0.04,1.05l-1.33,-0.75l-0.59,0.19l-0.32,0.84l-2.2,0.81l-0.46,2.13l-1.21,0.74l-1.91,0.42l-0.73,1.33l-1.56,0.31l-2.22,-0.94l-0.2,-2.17l-0.38,-0.36l-1.73,-0.09l-2.76,-2.46l-2.14,-0.4l-2.84,-1.48l-1.78,-0.27l-1.24,0.53l-1.57,-0.08l-2.0,1.69l-1.7,0.43l-0.36,-1.58l0.36,-2.98l-0.22,-0.4l-1.65,-0.84l0.54,-1.69l-0.34,-0.52l-1.22,-0.13l0.36,-1.64l2.22,0.59l2.2,-0.95l0.12,-0.65l-1.77,-1.74l-0.66,-1.57Z\",\n            name: \"Turkmenistan\"\n          },\n          TJ: {\n            path: \"M597.75,178.82l-2.54,-0.44l-0.47,0.34l-0.24,1.7l0.43,0.45l2.64,-0.22l3.18,0.95l4.39,-0.41l0.56,2.37l0.52,0.29l0.67,-0.24l1.11,0.49l0.21,2.13l-3.76,-0.21l-1.8,1.32l-1.76,0.74l-0.61,-0.58l0.21,-2.23l-0.64,-0.49l-0.07,-0.93l-1.36,-0.66l-0.45,0.07l-1.08,1.01l-0.55,1.48l-1.31,-0.05l-0.95,1.16l-0.9,-0.35l-1.86,0.74l1.26,-2.83l-0.54,-2.17l-1.67,-0.82l0.33,-0.66l2.18,-0.04l1.19,-1.63l0.76,-1.79l2.43,-0.5l-0.26,1.0l0.73,1.05Z\",\n            name: \"Tajikistan\"\n          },\n          RO: {\n            path: \"M487.53,154.23l0.6,0.24l2.87,3.98l-0.17,2.69l0.45,1.42l1.32,0.81l1.35,-0.42l0.76,0.36l0.02,0.31l-0.83,0.45l-0.59,-0.22l-0.54,0.3l-0.62,3.3l-1.0,-0.22l-2.07,-1.13l-2.95,0.71l-1.25,0.76l-3.51,-0.15l-1.89,-0.47l-0.87,0.16l-0.82,-1.3l0.29,-0.26l-0.06,-0.64l-1.09,-0.34l-0.56,0.5l-1.05,-0.64l-0.39,-1.39l-1.36,-0.65l-0.35,-1.0l-0.83,-0.75l1.54,-0.54l2.66,-4.21l2.4,-1.24l2.96,0.34l1.48,0.73l0.79,-0.45l1.78,-0.3l0.75,-0.74l0.79,0.0Z\",\n            name: \"Romania\"\n          },\n          GW: {\n            path: \"M386.23,253.6l-0.29,0.84l0.15,0.6l-2.21,0.59l-0.86,0.96l-1.04,-0.83l-1.09,-0.23l-0.54,-1.06l-0.66,-0.49l2.41,-0.48l4.13,0.1Z\",\n            name: \"Guinea-Bissau\"\n          },\n          GT: {\n            path: \"M195.08,249.77l-2.48,-0.37l-1.03,-0.45l-1.14,-0.89l0.3,-0.99l-0.24,-0.68l0.96,-1.66l2.98,-0.01l0.4,-0.37l-0.19,-1.28l-1.67,-1.4l0.51,-0.4l0.0,-1.05l3.85,0.02l-0.21,4.53l0.4,0.43l1.46,0.38l-1.48,0.98l-0.35,0.7l0.12,0.57l-2.2,1.96Z\",\n            name: \"Guatemala\"\n          },\n          GR: {\n            path: \"M487.07,174.59l-0.59,1.43l-0.37,0.21l-2.84,-0.35l-3.03,0.77l-0.18,0.68l1.28,1.23l-0.61,0.23l-1.14,0.0l-1.2,-1.39l-0.63,0.03l-0.53,1.01l0.56,1.76l1.03,1.19l-0.56,0.38l-0.05,0.62l2.52,2.12l0.02,0.87l-1.78,-0.59l-0.48,0.56l0.5,1.0l-1.07,0.2l-0.3,0.53l0.75,2.01l-0.98,0.02l-1.84,-1.12l-1.37,-4.2l-2.21,-2.95l-0.11,-0.56l1.04,-1.28l0.2,-0.95l0.85,-0.66l0.03,-0.46l1.32,-0.21l1.01,-0.64l1.22,0.05l0.65,-0.56l2.26,-0.0l1.82,-0.75l1.85,1.0l2.28,-0.28l0.35,-0.39l0.01,-0.77l0.34,0.22ZM480.49,192.16l0.58,0.4l-0.68,-0.12l0.11,-0.28ZM482.52,192.82l2.51,0.06l0.24,0.32l-1.99,0.13l-0.77,-0.51Z\",\n            name: \"Greece\"\n          },\n          GQ: {\n            path: \"M448.79,279.62l0.02,2.22l-4.09,0.0l0.69,-2.27l3.38,0.05Z\",\n            name: \"Eq. Guinea\"\n          },\n          GY: {\n            path: \"M277.42,270.07l-0.32,1.83l-1.32,0.57l-0.23,0.46l-0.28,2.0l1.11,1.82l0.83,0.19l0.32,1.25l1.13,1.62l-1.21,-0.19l-1.08,0.71l-1.77,0.5l-0.44,0.46l-0.86,-0.09l-1.32,-1.01l-0.77,-2.27l0.36,-1.9l0.68,-1.23l-0.57,-1.17l-0.74,-0.43l0.12,-1.16l-0.9,-0.69l-1.1,0.09l-1.31,-1.48l0.53,-0.72l-0.04,-0.84l1.99,-0.86l0.05,-0.59l-0.71,-0.78l0.14,-0.57l1.66,-1.24l1.36,0.77l1.41,1.49l0.06,1.15l0.37,0.38l0.8,0.05l2.06,1.86Z\",\n            name: \"Guyana\"\n          },\n          GE: {\n            path: \"M521.71,168.93l5.29,0.89l4.07,2.01l1.41,-0.44l2.07,0.56l0.68,1.1l1.07,0.55l-0.12,0.59l0.98,1.29l-1.01,-0.13l-1.81,-0.83l-0.94,0.47l-3.23,0.43l-2.29,-1.39l-2.33,0.05l0.21,-0.97l-0.76,-2.26l-1.45,-1.12l-1.43,-0.39l-0.41,-0.42Z\",\n            name: \"Georgia\"\n          },\n          GB: {\n            path: \"M412.61,118.72l-2.19,3.22l-0.0,0.45l5.13,-0.3l-0.53,2.37l-2.2,3.12l0.29,0.63l2.37,0.21l2.33,4.3l1.76,0.69l2.2,5.12l2.94,0.77l-0.23,1.62l-1.15,0.88l-0.1,0.52l0.82,1.42l-1.86,1.43l-3.3,-0.02l-4.12,0.87l-1.04,-0.58l-0.47,0.06l-1.51,1.41l-2.12,-0.34l-1.86,1.18l-0.6,-0.29l3.19,-3.0l2.16,-0.69l0.28,-0.41l-0.34,-0.36l-3.73,-0.53l-0.4,-0.76l2.2,-0.87l0.17,-0.61l-1.26,-1.67l0.36,-1.7l3.38,0.28l0.43,-0.33l0.37,-1.99l-1.79,-2.49l-3.11,-0.72l-0.38,-0.59l0.79,-1.35l-0.04,-0.46l-0.82,-0.97l-0.61,0.01l-0.68,0.84l-0.1,-2.34l-1.23,-1.88l0.85,-3.47l1.77,-2.68l1.85,0.26l2.17,-0.22ZM406.26,132.86l-1.01,1.77l-1.57,-0.59l-1.16,0.01l0.37,-1.54l-0.39,-1.39l1.45,-0.1l2.3,1.84Z\",\n            name: \"United Kingdom\"\n          },\n          GA: {\n            path: \"M453.24,279.52l-0.08,0.98l0.7,1.29l2.36,0.24l-0.98,2.63l1.18,1.79l0.25,1.78l-0.29,1.52l-0.6,0.93l-1.84,-0.09l-1.23,-1.11l-0.66,0.23l-0.15,0.84l-1.42,0.26l-1.02,0.7l-0.11,0.52l0.77,1.35l-1.34,0.97l-3.94,-4.3l-1.44,-2.45l0.06,-0.6l0.54,-0.81l1.05,-3.46l4.17,-0.07l0.4,-0.4l-0.02,-2.66l2.39,0.21l1.25,-0.27Z\",\n            name: \"Gabon\"\n          },\n          GN: {\n            path: \"M391.8,254.11l0.47,0.8l1.11,-0.32l0.98,0.7l1.07,0.2l2.26,-1.22l0.64,0.44l1.13,1.56l-0.48,1.4l0.8,0.3l-0.08,0.48l0.46,0.68l-0.35,1.36l1.05,2.61l-1.0,0.69l0.03,1.41l-0.72,-0.06l-1.08,1.0l-0.24,-0.27l0.07,-1.11l-1.05,-1.54l-1.79,0.21l-0.35,-2.01l-1.6,-2.18l-2.0,-0.0l-1.31,0.54l-1.95,2.18l-1.86,-2.19l-1.2,-0.78l-0.3,-1.11l-0.8,-0.85l0.65,-0.72l0.81,-0.03l1.64,-0.8l0.23,-1.87l2.67,0.64l0.89,-0.3l1.21,0.15Z\",\n            name: \"Guinea\"\n          },\n          GM: {\n            path: \"M379.31,251.39l0.1,-0.35l2.43,-0.07l0.74,-0.61l0.51,-0.03l0.77,0.49l-1.03,-0.3l-1.87,0.9l-1.65,-0.04ZM384.03,250.91l0.91,0.05l0.75,-0.24l-0.59,0.31l-1.08,-0.13Z\",\n            name: \"Gambia\"\n          },\n          GL: {\n            path: \"M353.02,1.2l14.69,4.67l-3.68,1.89l-22.97,0.86l-0.36,0.27l0.12,0.43l1.55,1.18l8.79,-0.66l7.48,2.07l4.86,-1.77l1.66,1.73l-2.53,3.19l-0.01,0.48l0.46,0.15l6.35,-2.2l12.06,-2.31l7.24,1.13l1.09,1.99l-9.79,4.01l-1.44,1.32l-7.87,0.98l-0.35,0.41l0.38,0.38l5.07,0.24l-2.53,3.58l-2.07,3.81l0.08,6.05l2.57,3.11l-3.22,0.2l-4.12,1.66l-0.05,0.72l4.45,2.65l0.51,3.75l-2.3,0.4l-0.25,0.64l2.79,3.69l-4.82,0.31l-0.36,0.29l0.16,0.44l2.62,1.8l-0.59,1.22l-3.3,0.7l-3.45,0.01l-0.29,0.68l3.03,3.12l0.02,1.34l-4.4,-1.73l-1.72,1.35l0.15,0.66l3.31,1.15l3.13,2.71l0.81,3.16l-3.85,0.75l-4.89,-4.26l-0.47,-0.03l-0.17,0.44l0.79,2.86l-2.71,2.21l-0.13,0.44l0.37,0.27l8.73,0.34l-12.32,6.64l-7.24,1.48l-2.94,0.08l-2.69,1.75l-3.43,4.41l-5.24,2.84l-1.73,0.18l-7.12,2.1l-2.15,2.52l-0.13,2.99l-1.19,2.45l-4.01,3.09l-0.14,0.44l0.97,2.9l-2.28,6.48l-3.1,0.2l-3.83,-3.07l-4.86,-0.02l-2.25,-1.93l-1.7,-3.79l-4.3,-4.84l-1.21,-2.49l-0.44,-3.8l-3.32,-3.63l0.84,-2.86l-1.56,-1.7l2.28,-4.6l3.83,-1.74l1.03,-1.96l0.52,-3.47l-0.59,-0.41l-4.17,2.21l-2.07,0.58l-2.72,-1.28l-0.15,-2.71l0.85,-2.09l2.01,-0.06l5.06,1.2l0.46,-0.23l-0.14,-0.49l-6.54,-4.47l-2.67,0.55l-1.58,-0.86l2.56,-4.01l-0.03,-0.48l-1.5,-1.74l-4.98,-8.5l-3.13,-1.96l0.03,-1.88l-0.24,-0.37l-6.85,-3.02l-5.36,-0.38l-12.7,0.58l-2.78,-1.57l-3.66,-2.77l5.73,-1.45l5.0,-0.28l0.38,-0.38l-0.35,-0.41l-10.67,-1.38l-5.3,-2.06l0.25,-1.54l18.41,-5.26l1.22,-2.27l-0.25,-0.55l-6.14,-1.86l1.68,-1.77l8.55,-4.03l3.59,-0.63l0.3,-0.54l-0.88,-2.27l5.47,-1.47l7.65,-0.95l7.55,-0.05l3.04,1.85l6.48,-3.27l5.81,2.22l3.56,0.5l5.16,1.94l0.5,-0.21l-0.17,-0.52l-5.71,-3.13l0.28,-2.13l8.12,-3.6l8.7,0.28l3.35,-2.34l8.71,-0.6l19.93,0.8Z\",\n            name: \"Greenland\"\n          },\n          GH: {\n            path: \"M420.53,257.51l-0.01,0.72l0.96,1.2l0.24,3.73l0.59,0.95l-0.51,2.1l0.19,1.41l1.02,2.21l-6.97,2.84l-1.8,-0.57l0.04,-0.89l-1.02,-2.04l0.61,-2.65l1.07,-2.32l-0.96,-6.47l5.01,0.07l0.94,-0.39l0.61,0.11Z\",\n            name: \"Ghana\"\n          },\n          OM: {\n            path: \"M568.09,230.93l-0.91,1.67l-1.22,0.04l-0.6,0.76l-0.41,1.51l0.27,1.58l-1.16,0.05l-1.56,0.97l-0.76,1.74l-1.62,0.05l-0.98,0.65l-0.17,1.15l-0.89,0.52l-1.49,-0.18l-2.4,0.94l-2.47,-5.4l7.35,-2.71l1.67,-5.23l-1.12,-2.09l0.05,-0.83l0.67,-1.0l0.07,-1.05l0.9,-0.42l-0.05,-2.07l0.7,-0.01l1.0,1.62l1.51,1.08l3.3,0.84l1.73,2.29l0.81,0.37l-1.23,2.35l-0.99,0.79Z\",\n            name: \"Oman\"\n          },\n          TN: {\n            path: \"M448.1,188.24l-1.0,1.27l-0.02,1.32l0.84,0.88l-0.28,2.09l-1.53,1.32l-0.12,0.42l0.48,1.54l1.42,0.32l0.53,1.11l0.9,0.52l-0.11,1.67l-3.54,2.64l-0.1,2.38l-0.58,0.3l-0.96,-4.45l-1.54,-1.25l-0.16,-0.78l-1.92,-1.56l-0.18,-1.76l1.51,-1.62l0.59,-2.34l-0.38,-2.78l0.42,-1.21l2.45,-1.05l1.29,0.26l-0.06,1.11l0.58,0.38l1.47,-0.73Z\",\n            name: \"Tunisia\"\n          },\n          JO: {\n            path: \"M518.64,201.38l-5.14,1.56l-0.19,0.65l2.16,2.39l-0.89,1.14l-1.71,0.34l-1.71,1.8l-2.34,-0.37l1.21,-4.32l0.56,-4.07l2.8,0.94l4.46,-2.71l0.79,2.66Z\",\n            name: \"Jordan\"\n          },\n          HR: {\n            path: \"M455.59,162.84l1.09,0.07l-0.82,0.94l-0.27,-1.01ZM456.96,162.92l0.62,-0.41l1.73,0.45l0.42,-0.4l-0.01,-0.59l0.86,-0.52l0.2,-1.05l1.63,-0.68l2.57,1.68l2.07,0.6l0.87,-0.31l1.05,1.57l-0.52,0.63l-1.05,-0.56l-1.68,0.04l-2.1,-0.5l-1.29,0.06l-0.57,0.49l-0.59,-0.47l-0.62,0.16l-0.46,1.7l1.79,2.42l2.79,2.75l-1.18,-0.87l-2.21,-0.87l-1.67,-1.78l0.13,-0.63l-1.05,-1.19l-0.32,-1.27l-1.42,-0.43Z\",\n            name: \"Croatia\"\n          },\n          HT: {\n            path: \"M237.05,238.38l-1.16,0.43l-0.91,-0.55l0.05,-0.2l2.02,0.31ZM237.53,238.43l1.06,0.12l-0.05,0.01l-1.01,-0.12ZM239.25,238.45l0.79,-0.51l0.06,-0.62l-1.02,-1.0l0.02,-0.82l-0.3,-0.4l-0.93,-0.32l3.16,0.45l0.02,1.84l-0.48,0.34l-0.08,0.58l0.54,0.72l-1.78,-0.26Z\",\n            name: \"Haiti\"\n          },\n          HU: {\n            path: \"M462.08,157.89l0.65,-1.59l-0.09,-0.44l0.64,-0.0l0.39,-0.34l0.1,-0.69l1.75,0.87l2.32,-0.37l0.43,-0.66l3.49,-0.78l0.69,-0.78l0.57,-0.14l2.57,0.93l0.67,-0.23l1.03,0.65l0.08,0.37l-1.42,0.71l-2.59,4.14l-1.8,0.53l-1.68,-0.1l-2.74,1.23l-1.85,-0.54l-2.54,-1.66l-0.66,-1.1Z\",\n            name: \"Hungary\"\n          },\n          HN: {\n            path: \"M199.6,249.52l-1.7,-1.21l0.06,-0.94l3.04,-2.14l2.37,0.28l1.27,-0.09l1.1,-0.52l1.3,0.28l1.14,-0.25l1.38,0.37l2.23,1.37l-2.36,0.93l-1.23,-0.39l-0.88,1.3l-1.28,0.99l-0.98,-0.22l-0.42,0.52l-0.96,0.05l-0.36,0.41l0.04,0.88l-0.52,0.6l-0.3,0.04l-0.3,-0.55l-0.66,-0.31l0.11,-0.67l-0.48,-0.65l-0.87,-0.26l-0.73,0.2Z\",\n            name: \"Honduras\"\n          },\n          PR: {\n            path: \"M256.17,238.73l-0.26,0.27l-2.83,0.05l-0.07,-0.55l1.95,-0.1l1.22,0.33Z\",\n            name: \"Puerto Rico\"\n          },\n          PS: {\n            path: \"M509.21,203.07l0.1,-0.06l-0.02,0.03l-0.09,0.03ZM509.36,202.91l-0.02,-0.63l-0.33,-0.16l0.31,-1.09l0.24,0.1l-0.2,1.78Z\",\n            name: \"Palestine\"\n          },\n          PT: {\n            path: \"M401.84,187.38l-0.64,0.47l-1.13,-0.35l-0.91,0.17l0.28,-1.78l-0.24,-1.78l-1.25,-0.56l-0.45,-0.84l0.17,-1.66l1.01,-1.18l0.69,-2.92l-0.04,-1.39l-0.59,-1.9l1.3,-0.85l0.84,1.35l3.1,-0.3l0.46,0.99l-1.05,0.94l-0.03,2.16l-0.41,0.57l-0.08,1.1l-0.79,0.18l-0.26,0.59l0.91,1.6l-0.63,1.75l0.76,1.09l-1.1,1.52l0.07,1.05Z\",\n            name: \"Portugal\"\n          },\n          PY: {\n            path: \"M274.9,336.12l0.74,1.52l-0.16,3.45l0.32,0.41l2.64,0.5l1.11,-0.47l1.4,0.59l0.36,0.6l0.53,3.42l1.27,0.4l0.98,-0.38l0.51,0.27l-0.0,1.18l-1.21,5.32l-2.09,1.9l-1.8,0.4l-4.71,-0.98l2.2,-3.63l-0.32,-1.5l-2.78,-1.28l-3.03,-1.94l-2.07,-0.44l-4.34,-4.06l0.91,-2.9l0.08,-1.42l1.07,-2.04l4.13,-0.72l2.18,0.03l2.05,1.17l0.03,0.59Z\",\n            name: \"Paraguay\"\n          },\n          PA: {\n            path: \"M213.8,263.68l0.26,-1.52l-0.36,-0.26l-0.01,-0.49l0.44,-0.1l0.93,1.4l1.26,0.03l0.77,0.49l1.38,-0.23l2.51,-1.11l0.86,-0.72l3.45,0.85l1.4,1.18l0.41,1.74l-0.21,0.34l-0.53,-0.12l-0.47,0.29l-0.16,0.6l-0.68,-1.28l0.45,-0.49l-0.19,-0.66l-0.47,-0.13l-0.54,-0.84l-1.5,-0.75l-1.1,0.16l-0.75,0.99l-1.62,0.84l-0.18,0.96l0.85,0.97l-0.58,0.45l-0.69,0.08l-0.34,-1.18l-1.27,0.03l-0.71,-1.05l-2.59,-0.46Z\",\n            name: \"Panama\"\n          },\n          PG: {\n            path: \"M808.58,298.86l2.54,2.56l-0.13,0.26l-0.33,0.12l-0.87,-0.78l-1.22,-2.16ZM801.41,293.04l0.5,0.29l0.26,0.27l-0.49,-0.35l-0.27,-0.21ZM803.17,294.58l0.59,0.5l0.08,1.06l-0.29,-0.91l-0.38,-0.65ZM796.68,298.41l0.52,0.75l1.43,-0.19l2.27,-1.81l-0.01,-1.43l1.12,0.16l-0.04,1.1l-0.7,1.28l-1.12,0.18l-0.62,0.79l-2.46,1.11l-1.17,-0.0l-3.08,-1.25l3.41,0.0l0.45,-0.68ZM789.15,303.55l2.31,1.8l1.59,2.61l1.34,0.13l-0.06,0.66l0.31,0.43l1.06,0.24l0.06,0.65l2.25,1.05l-1.22,0.13l-0.72,-0.63l-4.56,-0.65l-3.22,-2.87l-1.49,-2.34l-3.27,-1.1l-2.38,0.72l-1.59,0.86l-0.2,0.42l0.27,1.55l-1.55,0.68l-1.36,-0.4l-2.21,-0.09l-0.08,-15.41l8.39,2.93l2.95,2.4l0.6,1.64l4.02,1.49l0.31,0.68l-1.76,0.21l-0.33,0.52l0.55,1.68Z\",\n            name: \"Papua New Guinea\"\n          },\n          PE: {\n            path: \"M244.96,295.21l-1.26,-0.07l-0.57,0.42l-1.93,0.45l-2.98,1.75l-0.36,1.36l-0.58,0.8l0.12,1.37l-1.24,0.59l-0.22,1.22l-0.62,0.84l1.04,2.27l1.28,1.44l-0.41,0.84l0.32,0.57l1.48,0.13l1.16,1.37l2.21,0.07l1.63,-1.08l-0.13,3.02l0.3,0.4l1.14,0.29l1.31,-0.34l1.9,3.59l-0.48,0.85l-0.17,3.85l-0.94,1.59l0.35,0.75l-0.47,1.07l0.98,1.97l-2.1,3.82l-0.98,0.5l-2.17,-1.28l-0.39,-1.16l-4.95,-2.58l-4.46,-2.79l-1.84,-1.51l-0.91,-1.84l0.3,-0.96l-2.11,-3.33l-4.82,-9.68l-1.04,-1.2l-0.87,-1.94l-3.4,-2.48l0.58,-1.18l-1.13,-2.23l0.66,-1.49l1.45,-1.15l-0.6,0.98l0.07,0.92l0.47,0.36l1.74,0.03l0.97,1.17l0.54,0.07l1.42,-1.03l0.6,-1.84l1.42,-2.02l3.04,-1.04l2.73,-2.62l0.86,-1.74l-0.1,-1.87l1.44,1.02l0.9,1.25l1.06,0.59l1.7,2.73l1.86,0.31l1.45,-0.61l0.96,0.39l1.36,-0.19l1.45,0.89l-1.4,2.21l0.31,0.61l0.59,0.05l0.47,0.5Z\",\n            name: \"Peru\"\n          },\n          PK: {\n            path: \"M615.09,192.34l-1.83,1.81l-2.6,0.39l-3.73,-0.68l-1.58,1.33l-0.09,0.42l1.77,4.39l1.7,1.23l-1.69,1.27l-0.12,2.14l-2.33,2.64l-1.6,2.8l-2.46,2.67l-3.03,-0.07l-2.76,2.83l0.05,0.6l1.5,1.11l0.26,1.9l1.44,1.5l0.37,1.68l-5.01,-0.01l-1.78,1.7l-1.42,-0.52l-0.76,-1.87l-2.27,-2.15l-11.61,0.86l0.71,-2.34l3.43,-1.32l0.25,-0.44l-0.21,-1.24l-1.2,-0.65l-0.28,-2.46l-2.29,-1.14l-1.28,-1.94l2.82,0.94l2.62,-0.38l1.42,0.33l0.76,-0.56l1.71,0.19l3.25,-1.14l0.27,-0.36l0.08,-2.19l1.18,-1.32l1.68,0.0l0.58,-0.82l1.6,-0.3l1.19,0.16l0.98,-0.78l0.02,-1.88l0.93,-1.47l1.48,-0.66l0.19,-0.55l-0.66,-1.25l2.04,-0.11l0.69,-1.01l-0.02,-1.16l1.11,-1.06l-0.17,-1.78l-0.49,-1.03l1.15,-0.98l5.42,-0.91l2.6,-0.82l1.6,1.16l0.97,2.34l3.45,0.97Z\",\n            name: \"Pakistan\"\n          },\n          PH: {\n            path: \"M737.01,263.84l0.39,2.97l-0.44,1.18l-0.55,-1.53l-0.67,-0.14l-1.17,1.28l0.65,2.09l-0.42,0.69l-2.48,-1.23l-0.57,-1.49l0.65,-1.03l-0.1,-0.54l-1.59,-1.19l-0.56,0.08l-0.65,0.87l-1.23,0.0l-1.58,0.97l0.83,-1.8l2.56,-1.42l0.65,0.84l0.45,0.13l1.9,-0.69l0.56,-1.11l1.5,-0.06l0.38,-0.43l-0.09,-1.19l1.21,0.71l0.36,2.02ZM733.59,256.58l0.05,0.75l0.08,0.26l-0.8,-0.42l-0.18,-0.71l0.85,0.12ZM734.08,256.1l-0.12,-1.12l-1.0,-1.27l1.36,0.03l0.53,0.73l0.51,2.04l-1.27,-0.4ZM733.76,257.68l0.38,0.98l-0.32,0.15l-0.07,-1.13ZM724.65,238.43l1.46,0.7l0.72,-0.31l-0.32,1.17l0.79,1.71l-0.57,1.84l-1.53,1.04l-0.39,2.25l0.56,2.04l1.63,0.57l1.16,-0.27l2.71,1.23l-0.19,1.08l0.76,0.84l-0.08,0.36l-1.4,-0.9l-0.88,-1.27l-0.66,0.0l-0.38,0.55l-1.6,-1.31l-2.15,0.36l-0.87,-0.39l0.07,-0.61l0.66,-0.55l-0.01,-0.62l-0.75,-0.59l-0.72,0.44l-0.74,-0.87l-0.39,-2.49l0.32,0.27l0.66,-0.28l0.26,-3.97l0.7,-2.02l1.14,0.0ZM731.03,258.87l-0.88,0.85l-1.19,1.94l-1.05,-1.19l0.93,-1.1l0.32,-1.47l0.52,-0.06l-0.27,1.15l0.22,0.45l0.49,-0.12l1.0,-1.32l-0.08,0.85ZM726.83,255.78l0.83,0.38l1.17,-0.0l-0.02,0.48l-2.0,1.4l0.03,-2.26ZM724.81,252.09l-0.38,1.27l-1.42,-1.95l1.2,0.05l0.6,0.63ZM716.55,261.82l1.1,-0.95l0.03,-0.03l-0.28,0.36l-0.85,0.61ZM719.22,259.06l0.04,-0.06l0.8,-1.53l0.16,0.75l-1.0,0.84Z\",\n            name: \"Philippines\"\n          },\n          PL: {\n            path: \"M468.44,149.42l-1.11,-1.54l-1.86,-0.33l-0.48,-1.05l-1.72,-0.37l-0.65,0.69l-0.72,-0.36l0.11,-0.61l-0.33,-0.46l-1.75,-0.27l-1.04,-0.93l-0.94,-1.94l0.16,-1.22l-0.62,-1.8l-0.78,-1.07l0.57,-1.04l-0.48,-1.43l1.41,-0.83l6.91,-2.71l2.14,0.5l0.52,0.91l5.51,0.44l4.55,-0.05l1.07,0.31l0.48,0.84l0.15,1.58l0.65,1.2l-0.01,0.99l-1.27,0.58l-0.19,0.54l0.73,1.48l0.08,1.55l1.2,2.76l-0.17,0.58l-1.23,0.44l-2.27,2.72l0.18,0.95l-1.97,-1.03l-1.98,0.4l-1.36,-0.28l-1.24,0.58l-1.07,-0.97l-1.16,0.24Z\",\n            name: \"Poland\"\n          },\n          ZM: {\n            path: \"M481.47,313.3l0.39,0.31l2.52,0.14l0.99,1.17l2.01,0.35l1.4,-0.64l0.69,1.17l1.78,0.33l1.84,2.35l2.23,0.18l0.4,-0.43l-0.21,-2.74l-0.62,-0.3l-0.48,0.32l-1.98,-1.17l0.72,-5.29l-0.51,-1.18l0.57,-1.3l3.68,-0.62l0.26,0.63l1.21,0.63l0.9,-0.22l2.16,0.67l1.33,0.71l1.07,1.02l0.56,1.87l-0.88,2.7l0.43,2.09l-0.73,0.87l-0.76,2.37l0.59,0.68l-6.6,1.83l-0.29,0.44l0.19,1.45l-1.68,0.35l-1.43,1.02l-0.38,0.87l-0.87,0.26l-3.48,3.69l-4.16,-0.53l-1.52,-1.0l-1.77,-0.13l-1.83,0.52l-3.04,-3.4l0.11,-7.59l4.82,0.03l0.39,-0.49l-0.18,-0.76l0.33,-0.83l-0.4,-1.36l0.24,-1.05Z\",\n            name: \"Zambia\"\n          },\n          EH: {\n            path: \"M384.42,230.28l0.25,-0.79l1.06,-1.29l0.8,-3.51l3.38,-2.78l0.7,-1.81l0.06,4.84l-1.98,0.2l-0.94,1.59l0.39,3.56l-3.7,-0.01ZM392.01,218.1l0.7,-1.8l1.77,-0.24l2.09,0.34l0.95,-0.62l1.28,-0.07l-0.0,2.51l-6.79,-0.12Z\",\n            name: \"W. Sahara\"\n          },\n          EE: {\n            path: \"M485.71,115.04l2.64,0.6l2.56,0.11l-1.6,1.91l0.61,3.54l-0.81,0.87l-1.78,-0.01l-3.22,-1.76l-1.8,0.45l0.21,-1.53l-0.58,-0.41l-0.69,0.34l-1.26,-1.03l-0.17,-1.63l2.83,-0.92l3.05,-0.52Z\",\n            name: \"Estonia\"\n          },\n          EG: {\n            path: \"M492.06,205.03l1.46,0.42l2.95,-1.64l2.04,-0.21l1.53,0.3l0.59,1.19l0.69,0.04l0.41,-0.64l1.81,0.58l1.95,0.16l1.04,-0.51l1.42,4.08l-2.03,4.54l-1.66,-1.77l-1.76,-3.85l-0.64,-0.12l-0.36,0.67l1.04,2.88l3.44,6.95l1.78,3.04l2.03,2.65l-0.36,0.53l0.23,2.01l2.7,2.19l-28.41,0.0l0.0,-18.96l-0.73,-2.2l0.59,-1.56l-0.32,-1.26l0.68,-0.99l3.06,-0.04l4.82,1.52Z\",\n            name: \"Egypt\"\n          },\n          ZA: {\n            path: \"M467.14,373.21l-0.13,-1.96l-0.68,-1.56l0.7,-0.68l-0.13,-2.33l-4.56,-8.19l0.77,-0.86l0.6,0.45l0.69,1.31l2.83,0.72l1.5,-0.26l2.24,-1.39l0.19,-9.55l1.35,2.3l-0.21,1.5l0.61,1.2l0.4,0.19l1.79,-0.27l2.6,-2.07l0.69,-1.32l0.96,-0.48l2.19,1.04l2.04,0.13l1.77,-0.65l0.85,-2.12l1.38,-0.33l1.59,-2.76l2.15,-1.89l3.41,-1.87l2.0,0.45l1.02,-0.28l0.99,0.2l1.75,5.29l-0.38,3.25l-0.81,-0.23l-1.0,0.46l-0.87,1.68l-0.05,1.16l1.97,1.84l1.47,-0.29l0.69,-1.18l1.09,0.01l-0.76,3.69l-0.58,1.09l-2.2,1.79l-3.17,4.76l-2.8,2.83l-3.57,2.88l-2.53,1.05l-1.22,0.14l-0.51,0.7l-1.18,-0.32l-1.39,0.5l-2.59,-0.52l-1.61,0.33l-1.18,-0.11l-2.55,1.1l-2.1,0.44l-1.6,1.07l-0.85,0.05l-0.93,-0.89l-0.93,-0.15l-0.97,-1.13l-0.25,0.05ZM491.45,364.19l0.62,-0.93l1.48,-0.59l1.18,-2.19l-0.07,-0.49l-1.99,-1.69l-1.66,0.56l-1.43,1.14l-1.34,1.73l0.02,0.51l1.88,2.11l1.31,-0.16Z\",\n            name: \"South Africa\"\n          },\n          EC: {\n            path: \"M231.86,285.53l0.29,1.59l-0.69,1.45l-2.61,2.51l-3.13,1.11l-1.53,2.18l-0.49,1.68l-1.0,0.73l-1.02,-1.11l-1.78,-0.16l0.67,-1.15l-0.24,-0.86l1.25,-2.13l-0.54,-1.09l-0.67,-0.08l-0.72,0.87l-0.87,-0.64l0.35,-0.69l-0.36,-1.96l0.81,-0.51l0.45,-1.51l0.92,-1.57l-0.07,-0.97l2.65,-1.33l2.75,1.35l0.77,1.05l2.12,0.35l0.76,-0.32l1.96,1.21Z\",\n            name: \"Ecuador\"\n          },\n          IT: {\n            path: \"M451.59,158.63l3.48,0.94l-0.21,1.17l0.3,0.83l-1.49,-0.24l-2.04,1.1l-0.21,0.39l0.13,1.45l-0.25,1.12l0.82,1.57l2.39,1.63l1.31,2.54l2.79,2.43l2.05,0.08l0.21,0.23l-0.39,0.33l0.09,0.67l4.05,1.97l2.17,1.76l-0.16,0.36l-1.17,-1.08l-2.18,-0.49l-0.44,0.2l-1.05,1.91l0.14,0.54l1.57,0.95l-0.19,0.98l-1.06,0.33l-1.25,2.34l-0.37,0.08l0.0,-0.33l1.0,-2.45l-1.73,-3.17l-1.12,-0.51l-0.88,-1.33l-1.51,-0.51l-1.27,-1.25l-1.75,-0.18l-4.12,-3.21l-1.62,-1.65l-1.03,-3.19l-3.53,-1.36l-1.3,0.51l-1.69,1.41l0.16,-0.72l-0.28,-0.47l-1.14,-0.33l-0.53,-1.96l0.72,-0.78l0.04,-0.48l-0.65,-1.17l0.8,0.39l1.4,-0.23l1.11,-0.84l0.52,0.35l1.19,-0.1l0.75,-1.2l1.53,0.33l1.36,-0.56l0.35,-1.14l1.08,0.32l0.68,-0.64l1.98,-0.44l0.42,0.82ZM459.19,184.75l-0.65,1.65l0.32,1.05l-0.31,0.89l-1.5,-0.85l-4.5,-1.67l0.19,-0.82l2.67,0.23l3.78,-0.48ZM443.93,176.05l1.18,1.66l-0.3,3.32l-1.06,-0.01l-0.77,0.73l-0.53,-0.44l-0.1,-3.37l-0.39,-1.22l1.04,0.01l0.92,-0.68Z\",\n            name: \"Italy\"\n          },\n          VN: {\n            path: \"M690.56,230.25l-2.7,1.82l-2.09,2.46l-0.63,1.95l4.31,6.45l2.32,1.65l1.43,1.94l1.11,4.59l-0.32,4.24l-1.93,1.54l-2.84,1.61l-2.11,2.15l-2.73,2.06l-0.59,-1.05l0.63,-1.53l-0.13,-0.47l-1.34,-1.04l1.51,-0.71l2.55,-0.18l0.3,-0.63l-0.82,-1.14l4.0,-2.07l0.31,-3.05l-0.57,-1.77l0.42,-2.66l-0.73,-1.97l-1.86,-1.76l-3.63,-5.29l-2.72,-1.46l0.36,-0.47l1.5,-0.64l0.21,-0.52l-0.97,-2.27l-0.37,-0.24l-2.83,-0.02l-2.24,-3.9l0.83,-0.4l4.39,-0.29l2.06,-1.31l1.15,0.89l1.88,0.4l-0.17,1.51l1.35,1.16l1.67,0.45Z\",\n            name: \"Vietnam\"\n          },\n          SB: {\n            path: \"M826.69,311.6l-0.61,0.09l-0.2,-0.33l0.37,0.15l0.44,0.09ZM824.18,307.38l-0.26,-0.3l-0.31,-0.91l0.03,0.0l0.54,1.21ZM823.04,309.33l-1.66,-0.22l-0.2,-0.52l1.16,0.28l0.69,0.46ZM819.28,304.68l1.14,0.65l0.02,0.03l-0.81,-0.44l-0.35,-0.23Z\",\n            name: \"Solomon Is.\"\n          },\n          ET: {\n            path: \"M516.04,247.79l1.1,0.84l1.63,-0.45l0.68,0.47l1.63,0.03l2.01,0.94l1.73,1.66l1.64,2.07l-1.52,2.04l0.16,1.72l0.39,0.38l2.05,0.0l-0.36,1.03l2.86,3.58l8.32,3.08l1.31,0.02l-6.32,6.75l-3.1,0.11l-2.36,1.77l-1.47,0.04l-0.86,0.79l-1.38,-0.0l-1.32,-0.81l-2.29,1.05l-0.76,0.98l-3.29,-0.41l-3.07,-2.07l-1.8,-0.07l-0.62,-0.6l0.0,-1.24l-0.28,-0.38l-1.15,-0.37l-1.4,-2.59l-1.19,-0.68l-0.47,-1.0l-1.27,-1.23l-1.16,-0.22l0.43,-0.72l1.45,-0.28l0.41,-0.95l-0.03,-2.21l0.68,-2.44l1.05,-0.63l1.43,-3.06l1.57,-1.37l1.02,-2.51l0.35,-1.88l2.52,0.46l0.44,-0.24l0.58,-1.43Z\",\n            name: \"Ethiopia\"\n          },\n          SO: {\n            path: \"M525.13,288.48l-1.13,-1.57l-0.03,-8.86l2.66,-3.38l1.67,-0.13l2.13,-1.69l3.41,-0.23l7.08,-7.55l2.91,-3.69l0.08,-4.82l2.98,-0.67l1.24,-0.86l0.45,-0.0l-0.2,3.0l-1.21,3.62l-2.73,5.97l-2.13,3.65l-5.03,6.16l-8.56,6.4l-2.78,3.08l-0.8,1.56Z\",\n            name: \"Somalia\"\n          },\n          ZW: {\n            path: \"M498.91,341.09l-1.11,-0.22l-0.92,0.28l-2.09,-0.44l-1.5,-1.11l-1.89,-0.43l-0.62,-1.4l-0.01,-0.84l-0.3,-0.38l-0.97,-0.25l-2.71,-2.74l-1.92,-3.32l3.83,0.45l3.73,-3.82l1.08,-0.44l0.26,-0.77l1.25,-0.9l1.41,-0.26l0.5,0.89l1.99,-0.05l1.72,1.17l1.11,0.17l1.05,0.66l0.01,2.99l-0.59,3.76l0.38,0.86l-0.23,1.23l-0.39,0.35l-0.63,1.81l-2.43,2.75Z\",\n            name: \"Zimbabwe\"\n          },\n          ES: {\n            path: \"M416.0,169.21l1.07,1.17l4.61,1.38l1.06,-0.57l2.6,1.26l2.71,-0.3l0.09,1.12l-2.14,1.8l-3.11,0.61l-0.31,0.31l-0.2,0.89l-1.54,1.69l-0.97,2.4l0.84,1.74l-1.32,1.27l-0.48,1.68l-1.88,0.65l-1.66,2.07l-5.36,-0.01l-1.79,1.08l-0.89,0.98l-0.88,-0.17l-0.79,-0.82l-0.68,-1.59l-2.37,-0.63l-0.11,-0.5l1.21,-1.82l-0.77,-1.13l0.61,-1.68l-0.76,-1.62l0.87,-0.49l0.09,-1.25l0.42,-0.6l0.03,-2.11l0.99,-0.69l0.13,-0.5l-1.03,-1.73l-1.46,-0.11l-0.61,0.38l-1.06,0.0l-0.52,-1.23l-0.53,-0.21l-1.32,0.67l-0.01,-1.49l-0.75,-0.96l3.03,-1.88l2.99,0.53l3.32,-0.02l2.63,0.51l6.01,-0.06Z\",\n            name: \"Spain\"\n          },\n          ER: {\n            path: \"M520.38,246.23l3.42,2.43l3.5,3.77l0.84,0.54l-0.95,-0.01l-3.51,-3.89l-2.33,-1.15l-1.73,-0.07l-0.91,-0.51l-1.26,0.51l-1.34,-1.02l-0.61,0.17l-0.66,1.61l-2.35,-0.43l-0.17,-0.67l1.29,-5.29l0.61,-0.61l1.95,-0.53l0.87,-1.01l1.17,2.41l0.68,2.33l1.49,1.43Z\",\n            name: \"Eritrea\"\n          },\n          ME: {\n            path: \"M468.91,172.53l-1.22,-1.02l0.47,-1.81l0.89,-0.72l2.26,1.51l-0.5,0.57l-0.75,-0.27l-1.14,1.73Z\",\n            name: \"Montenegro\"\n          },\n          MD: {\n            path: \"M488.41,153.73l1.4,-0.27l1.72,0.93l1.07,0.15l0.85,0.65l-0.14,0.84l0.96,0.85l1.12,2.47l-1.15,-0.07l-0.66,-0.41l-0.52,0.25l-0.09,0.86l-1.08,1.89l-0.27,-0.86l0.25,-1.34l-0.16,-1.6l-3.29,-4.34Z\",\n            name: \"Moldova\"\n          },\n          MG: {\n            path: \"M545.91,319.14l0.4,3.03l0.62,1.21l-0.21,1.02l-0.57,-0.8l-0.69,-0.01l-0.47,0.76l0.41,2.12l-0.18,0.87l-0.73,0.78l-0.15,2.14l-4.71,15.2l-1.06,2.88l-3.92,1.64l-3.12,-1.49l-0.6,-1.21l-0.19,-2.4l-0.86,-2.05l-0.21,-1.77l0.38,-1.62l1.21,-0.75l0.01,-0.76l1.19,-2.04l0.23,-1.66l-1.06,-2.99l-0.19,-2.21l0.81,-1.33l0.32,-1.46l4.63,-1.22l3.44,-3.0l0.85,-1.4l-0.08,-0.7l0.78,-0.04l1.38,-1.77l0.13,-1.64l0.45,-0.61l1.16,1.69l0.59,1.6Z\",\n            name: \"Madagascar\"\n          },\n          MA: {\n            path: \"M378.78,230.02l0.06,-0.59l0.92,-0.73l0.82,-1.37l-0.09,-1.04l0.79,-1.7l1.31,-1.58l0.96,-0.59l0.66,-1.55l0.09,-1.47l0.81,-1.48l1.72,-1.07l1.55,-2.69l1.16,-0.96l2.44,-0.39l1.94,-1.82l1.31,-0.78l2.09,-2.28l-0.51,-3.65l1.24,-3.7l1.5,-1.75l4.46,-2.57l2.37,-4.47l1.44,0.01l1.68,1.21l2.32,-0.19l3.47,0.65l0.8,1.54l0.16,1.71l0.86,2.96l0.56,0.59l-0.26,0.61l-3.05,0.44l-1.26,1.05l-1.33,0.22l-0.33,0.37l-0.09,1.78l-2.68,1.0l-1.07,1.42l-4.47,1.13l-4.04,2.01l-0.54,4.64l-1.15,0.06l-0.92,0.61l-1.96,-0.35l-2.42,0.54l-0.74,1.9l-0.86,0.4l-1.14,3.26l-3.53,3.01l-0.8,3.55l-0.96,1.1l-0.29,0.82l-4.95,0.18Z\",\n            name: \"Morocco\"\n          },\n          UZ: {\n            path: \"M598.64,172.75l-1.63,1.52l0.06,0.64l1.85,1.12l1.97,-0.64l2.21,1.17l-2.52,1.68l-2.59,-0.22l-0.18,-0.41l0.46,-1.23l-0.45,-0.53l-3.35,0.69l-2.1,3.51l-1.87,-0.12l-1.03,1.51l0.22,0.55l1.64,0.62l0.46,1.83l-1.19,2.49l-2.66,-0.53l0.05,-1.36l-0.26,-0.39l-3.3,-1.23l-2.56,-1.4l-4.4,-3.34l-1.34,-3.14l-1.08,-0.6l-2.58,0.13l-0.69,-0.44l-0.47,-2.52l-3.37,-1.6l-0.43,0.05l-2.07,1.72l-2.1,1.01l-0.21,0.47l0.28,1.01l-1.91,0.03l-0.09,-10.5l5.99,-1.7l6.19,3.54l2.71,2.84l7.05,-0.67l2.71,2.01l-0.17,2.81l0.39,0.42l0.9,0.02l0.44,2.14l0.38,0.32l2.94,0.09l0.95,1.42l1.28,-0.24l1.05,-2.04l4.43,-2.5Z\",\n            name: \"Uzbekistan\"\n          },\n          MM: {\n            path: \"M673.9,230.21l-1.97,1.57l-0.57,0.96l-1.4,0.6l-1.36,1.05l-1.99,0.36l-1.08,2.66l-0.91,0.4l-0.19,0.55l1.21,2.27l2.52,3.43l-0.79,1.91l-0.74,0.41l-0.17,0.52l0.65,1.37l1.61,1.95l0.25,2.58l0.9,2.13l-1.92,3.57l0.68,-2.25l-0.81,-1.74l0.19,-2.65l-1.05,-1.53l-1.24,-6.17l-1.12,-2.26l-0.6,-0.13l-4.34,3.02l-2.39,-0.65l0.77,-2.84l-0.52,-2.61l-1.91,-2.96l0.25,-0.75l-0.29,-0.51l-1.33,-0.3l-1.61,-1.93l-0.1,-1.3l0.82,-0.24l0.04,-1.64l1.02,-0.52l0.21,-0.45l-0.23,-0.95l0.54,-0.96l0.08,-2.22l1.46,0.45l0.47,-0.2l1.12,-2.19l0.16,-1.35l1.33,-2.16l-0.0,-1.52l2.89,-1.66l1.63,0.44l0.5,-0.44l-0.17,-1.4l0.64,-0.36l0.08,-1.04l0.77,-0.11l0.71,1.35l1.06,0.69l-0.03,3.86l-2.38,2.37l-0.3,3.15l0.46,0.43l2.28,-0.38l0.51,2.08l1.47,0.67l-0.6,1.8l0.19,0.48l2.97,1.48l1.64,-0.55l0.02,0.32Z\",\n            name: \"Myanmar\"\n          },\n          ML: {\n            path: \"M392.61,254.08l-0.19,-2.37l-0.99,-0.87l-0.44,-1.3l-0.09,-1.28l0.81,-0.58l0.35,-1.24l2.37,0.65l1.31,-0.47l0.86,0.15l0.66,-0.56l9.83,-0.04l0.38,-0.28l0.56,-1.8l-0.44,-0.65l-2.35,-21.95l3.27,-0.04l16.7,11.38l0.74,1.31l2.5,1.09l0.02,1.38l0.44,0.39l2.34,-0.21l0.01,5.38l-1.28,1.61l-0.26,1.49l-5.31,0.57l-1.07,0.92l-2.9,0.1l-0.86,-0.48l-1.38,0.36l-2.4,1.08l-0.6,0.87l-1.85,1.09l-0.43,0.7l-0.79,0.39l-1.44,-0.21l-0.81,0.84l-0.34,1.64l-1.91,2.02l-0.06,1.03l-0.67,1.22l0.13,1.16l-0.97,0.39l-0.23,-0.64l-0.52,-0.24l-1.35,0.4l-0.34,0.55l-2.69,-0.28l-0.37,-0.35l-0.02,-0.9l-0.65,-0.35l0.45,-0.64l-0.03,-0.53l-2.12,-2.44l-0.76,-0.01l-2.0,1.16l-0.78,-0.15l-0.8,-0.67l-1.21,0.23Z\",\n            name: \"Mali\"\n          },\n          MN: {\n            path: \"M676.61,146.48l3.81,1.68l5.67,-1.0l2.37,0.41l2.34,1.5l1.79,1.75l2.29,-0.03l3.12,0.52l2.47,-0.81l3.41,-0.59l3.53,-2.21l1.25,0.29l1.53,1.13l2.27,-0.21l-2.66,5.01l0.64,1.68l0.47,0.21l1.32,-0.38l2.38,0.48l2.02,-1.11l1.76,0.89l2.06,2.02l-0.13,0.53l-1.72,-0.29l-3.77,0.46l-1.88,0.99l-1.76,1.99l-3.71,1.17l-2.45,1.6l-3.83,-0.87l-0.41,0.17l-1.31,1.99l1.04,2.24l-1.52,0.9l-1.74,1.57l-2.79,1.02l-3.78,0.13l-4.05,1.05l-2.77,1.52l-1.16,-0.85l-2.94,0.0l-3.62,-1.79l-2.58,-0.49l-3.4,0.41l-5.12,-0.67l-2.63,0.06l-1.31,-1.6l-1.4,-3.0l-1.48,-0.33l-3.13,-1.94l-6.16,-0.93l-0.71,-1.06l0.86,-3.82l-1.93,-2.71l-3.5,-1.18l-1.95,-1.58l-0.5,-1.72l2.34,-0.52l4.75,-2.8l3.62,-1.47l2.18,0.97l2.46,0.05l1.81,1.53l2.46,0.12l3.95,0.71l2.43,-2.28l0.08,-0.48l-0.9,-1.72l2.24,-2.98l2.62,1.27l4.94,1.17l0.43,2.24Z\",\n            name: \"Mongolia\"\n          },\n          MK: {\n            path: \"M472.8,173.98l0.49,-0.71l3.57,-0.71l1.0,0.77l0.13,1.45l-0.65,0.53l-1.15,-0.05l-1.12,0.67l-1.39,0.22l-0.79,-0.55l-0.29,-1.03l0.19,-0.6Z\",\n            name: \"Macedonia\"\n          },\n          MW: {\n            path: \"M505.5,309.31l0.85,1.95l0.15,2.86l-0.69,1.65l0.71,1.8l0.06,1.28l0.49,0.64l0.07,1.06l0.4,0.55l0.8,-0.23l0.55,0.61l0.69,-0.21l0.34,0.6l0.19,2.94l-1.04,0.62l-0.54,1.25l-1.11,-1.08l-0.16,-1.56l0.51,-1.31l-0.32,-1.3l-0.99,-0.65l-0.82,0.12l-2.36,-1.64l0.63,-1.96l0.82,-1.18l-0.46,-2.01l0.9,-2.86l-0.94,-2.51l0.96,0.18l0.29,0.4Z\",\n            name: \"Malawi\"\n          },\n          MR: {\n            path: \"M407.36,220.66l-2.58,0.03l-0.39,0.44l2.42,22.56l0.36,0.43l-0.39,1.24l-9.75,0.04l-0.56,0.53l-0.91,-0.11l-1.27,0.45l-1.61,-0.66l-0.97,0.03l-0.36,0.29l-0.38,1.35l-0.42,0.23l-2.93,-3.4l-2.96,-1.52l-1.62,-0.03l-1.27,0.54l-1.12,-0.2l-0.65,0.4l-0.08,-0.49l0.68,-1.29l0.31,-2.43l-0.57,-3.91l0.23,-1.21l-0.69,-1.5l-1.15,-1.02l0.25,-0.39l9.58,0.02l0.4,-0.45l-0.46,-3.68l0.47,-1.04l2.12,-0.21l0.36,-0.4l-0.08,-6.4l7.81,0.13l0.41,-0.4l0.01,-3.31l7.76,5.35Z\",\n            name: \"Mauritania\"\n          },\n          UG: {\n            path: \"M498.55,276.32l0.7,-0.46l1.65,0.5l1.96,-0.57l1.7,0.01l1.45,-0.98l0.91,1.33l1.33,3.95l-2.57,4.03l-1.46,-0.4l-2.54,0.91l-1.37,1.61l-0.01,0.81l-2.42,-0.01l-2.26,1.01l-0.17,-1.59l0.58,-1.04l0.14,-1.94l1.37,-2.28l1.78,-1.58l-0.17,-0.65l-0.72,-0.24l0.13,-2.43Z\",\n            name: \"Uganda\"\n          },\n          MY: {\n            path: \"M717.47,273.46l-1.39,0.65l-2.12,-0.41l-2.88,-0.0l-0.38,0.28l-0.84,2.75l-0.99,0.96l-1.21,3.29l-1.73,0.45l-2.45,-0.68l-1.39,0.31l-1.33,1.15l-1.59,-0.14l-1.41,0.44l-1.44,-1.19l-0.18,-0.73l1.34,0.53l1.93,-0.47l0.75,-2.22l4.02,-1.03l2.75,-3.21l0.82,0.94l0.64,-0.05l0.4,-0.65l0.96,0.06l0.42,-0.36l0.24,-2.68l1.81,-1.64l1.21,-1.86l0.63,-0.01l1.07,1.05l0.34,1.28l3.44,1.35l-0.06,0.35l-1.37,0.1l-0.35,0.54l0.32,0.88ZM673.68,269.59l0.17,1.09l0.47,0.33l1.65,-0.3l0.87,-0.94l1.61,1.52l0.98,1.56l-0.12,2.81l0.41,2.29l0.95,0.9l0.88,2.44l-1.27,0.12l-5.1,-3.67l-0.34,-1.29l-1.37,-1.59l-0.33,-1.97l-0.88,-1.4l0.25,-1.68l-0.46,-1.05l1.63,0.84Z\",\n            name: \"Malaysia\"\n          },\n          MX: {\n            path: \"M133.12,200.41l0.2,0.47l9.63,3.33l6.96,-0.02l0.4,-0.4l0.0,-0.74l3.77,0.0l3.55,2.93l1.39,2.83l1.52,1.04l2.08,0.82l0.47,-0.14l1.46,-2.0l1.73,-0.04l1.59,0.98l2.05,3.35l1.47,1.56l1.26,3.14l2.18,1.02l2.26,0.58l-1.18,3.72l-0.42,5.04l1.79,4.89l1.62,1.89l0.61,1.52l1.2,1.42l2.55,0.66l1.37,1.1l7.54,-1.89l1.86,-1.3l1.14,-4.3l4.1,-1.21l3.57,-0.11l0.32,0.3l-0.06,0.94l-1.26,1.45l-0.67,1.71l0.38,0.7l-0.72,2.27l-0.49,-0.3l-1.0,0.08l-1.0,1.39l-0.47,-0.11l-0.53,0.47l-4.26,-0.02l-0.4,0.4l-0.0,1.06l-1.1,0.26l0.1,0.44l1.82,1.44l0.56,0.91l-3.19,0.21l-1.21,2.09l0.24,0.72l-0.2,0.44l-2.24,-2.18l-1.45,-0.93l-2.22,-0.69l-1.52,0.22l-3.07,1.16l-10.55,-3.85l-2.86,-1.96l-3.78,-0.92l-1.08,-1.19l-2.62,-1.43l-1.18,-1.54l-0.38,-0.81l0.66,-0.63l-0.18,-0.53l0.52,-0.76l0.01,-0.91l-2.0,-3.82l-2.21,-2.63l-2.53,-2.09l-1.19,-1.62l-2.2,-1.17l-0.3,-0.43l0.34,-1.48l-0.21,-0.45l-1.23,-0.6l-1.36,-1.2l-0.59,-1.78l-1.54,-0.47l-2.44,-2.55l-0.16,-0.9l-1.33,-2.03l-0.84,-1.99l-0.16,-1.33l-1.81,-1.1l-0.97,0.05l-1.31,-0.7l-0.57,0.22l-0.4,1.12l0.72,3.77l3.51,3.89l0.28,0.78l0.53,0.26l0.41,1.43l1.33,1.73l1.58,1.41l0.8,2.39l1.43,2.41l0.13,1.32l0.37,0.36l1.04,0.08l1.67,2.28l-0.85,0.76l-0.66,-1.51l-1.68,-1.54l-2.91,-1.87l0.06,-1.82l-0.54,-1.68l-2.91,-2.03l-0.55,0.09l-1.95,-1.1l-0.88,-0.94l0.68,-0.08l0.93,-1.01l0.08,-1.78l-1.93,-1.94l-1.46,-0.77l-3.75,-7.56l4.88,-0.42Z\",\n            name: \"Mexico\"\n          },\n          IL: {\n            path: \"M507.76,203.05l0.4,-0.78l0.18,0.4l-0.33,1.03l0.52,0.44l0.68,-0.22l-0.86,3.6l-1.16,-3.32l0.59,-0.74l-0.03,-0.41ZM508.73,200.34l0.37,-1.02l0.64,0.0l0.52,-0.51l-0.49,1.53l-0.56,-0.24l-0.48,0.23Z\",\n            name: \"Israel\"\n          },\n          FR: {\n            path: \"M444.48,172.62l-0.64,1.78l-0.58,-0.31l-0.49,-1.72l0.4,-0.89l1.0,-0.72l0.3,1.85ZM429.64,147.1l1.78,1.58l1.46,-0.13l2.1,1.42l1.35,0.27l1.23,0.83l3.04,0.5l-1.03,1.85l-0.3,2.12l-0.41,0.32l-0.95,-0.24l-0.5,0.43l0.06,0.61l-1.81,1.92l-0.04,1.42l0.55,0.38l0.88,-0.36l0.61,0.97l-0.03,1.0l0.57,0.91l-0.75,1.09l0.65,2.39l1.27,0.57l-0.18,0.82l-2.01,1.53l-4.77,-0.8l-3.82,1.0l-0.53,1.85l-2.49,0.34l-2.71,-1.31l-1.16,0.57l-4.31,-1.29l-0.72,-0.86l1.19,-1.78l0.39,-6.45l-2.58,-3.3l-1.9,-1.66l-3.72,-1.23l-0.19,-1.72l2.81,-0.61l4.12,0.81l0.47,-0.48l-0.6,-2.77l1.94,0.95l5.83,-2.54l0.92,-2.74l1.6,-0.49l0.24,0.78l1.36,0.33l1.05,1.19ZM289.01,278.39l-0.81,0.8l-0.78,0.12l-0.5,-0.66l-0.56,-0.1l-0.91,0.6l-0.46,-0.22l1.09,-2.96l-0.96,-1.77l-0.17,-1.49l1.07,-1.77l2.32,0.75l2.51,2.01l0.3,0.74l-2.14,3.96Z\",\n            name: \"France\"\n          },\n          XS: {\n            path: \"M531.15,258.94l1.51,0.12l5.13,-0.95l5.3,-1.48l-0.01,4.4l-2.67,3.39l-1.85,0.01l-8.04,-2.94l-2.55,-3.17l1.12,-1.71l2.04,2.34Z\",\n            name: \"Somaliland\"\n          },\n          FI: {\n            path: \"M492.17,76.39l-0.23,3.5l3.52,2.63l-2.08,2.88l-0.02,0.44l2.8,4.56l-1.59,3.31l2.16,3.24l-0.94,2.39l0.14,0.47l3.44,2.51l-0.77,1.62l-7.52,6.95l-4.5,0.31l-4.38,1.37l-3.8,0.74l-1.44,-1.96l-2.17,-1.11l0.5,-3.66l-1.16,-3.33l1.09,-2.08l2.21,-2.42l5.67,-4.32l1.64,-0.83l0.21,-0.42l-0.46,-2.02l-3.38,-1.89l-0.75,-1.43l-0.22,-6.74l-6.79,-4.8l0.8,-0.62l2.54,2.12l3.46,-0.12l3.0,0.96l2.51,-2.11l1.17,-3.08l3.55,-1.38l2.76,1.53l-0.95,2.79Z\",\n            name: \"Finland\"\n          },\n          FJ: {\n            path: \"M869.95,326.98l-1.21,0.41l-0.08,-0.23l2.97,-1.21l-0.14,0.42l-1.54,0.61ZM867.58,329.25l0.43,0.37l-0.27,0.88l-1.24,0.28l-1.04,-0.24l-0.14,-0.66l0.63,-0.58l0.92,0.26l0.7,-0.31Z\",\n            name: \"Fiji\"\n          },\n          FK: {\n            path: \"M274.36,425.85l1.44,1.08l-0.47,0.73l-3.0,0.89l-0.96,-1.0l-0.52,-0.05l-1.83,1.29l-0.73,-0.88l2.46,-1.64l1.93,0.76l1.67,-1.19Z\",\n            name: \"Falkland Is.\"\n          },\n          NI: {\n            path: \"M202.33,252.67l0.81,-0.18l1.03,-1.02l-0.04,-0.88l0.68,-0.0l0.63,-0.54l0.97,0.22l1.53,-1.26l0.58,-0.99l1.17,0.34l2.41,-0.94l0.13,1.32l-0.81,1.94l0.1,2.74l-0.36,0.37l-0.11,1.75l-0.47,0.81l0.18,1.14l-1.73,-0.85l-0.71,0.27l-1.47,-0.6l-0.52,0.16l-4.01,-3.81Z\",\n            name: \"Nicaragua\"\n          },\n          NL: {\n            path: \"M430.31,143.39l0.6,-0.5l2.13,-4.8l3.2,-1.33l1.74,0.08l0.33,0.8l-0.59,2.92l-0.5,0.99l-1.26,0.0l-0.4,0.45l0.33,2.7l-2.2,-1.78l-2.62,0.58l-0.75,-0.11Z\",\n            name: \"Netherlands\"\n          },\n          NO: {\n            path: \"M491.44,67.41l6.8,2.89l-2.29,0.86l-0.15,0.65l2.33,2.38l-4.98,1.79l0.84,-2.45l-0.18,-0.48l-3.55,-1.8l-3.89,1.52l-1.42,3.38l-2.12,1.72l-2.64,-1.0l-3.11,0.21l-2.66,-2.22l-0.5,-0.01l-1.41,1.1l-1.44,0.17l-0.35,0.35l-0.32,2.47l-4.32,-0.64l-0.44,0.29l-0.58,2.11l-2.45,0.2l-4.15,7.68l-3.88,5.76l0.78,1.62l-0.64,1.16l-2.24,-0.06l-0.38,0.24l-1.66,3.89l0.15,5.17l1.57,2.04l-0.78,4.16l-2.02,2.48l-0.85,1.63l-1.3,-1.75l-0.58,-0.07l-4.87,4.19l-3.1,0.79l-3.16,-1.7l-0.85,-3.77l-0.77,-8.55l2.14,-2.31l6.55,-3.27l5.02,-4.17l10.63,-13.84l10.98,-8.7l5.35,-1.91l4.34,0.12l3.69,-3.64l4.49,0.19l4.37,-0.89ZM484.55,20.04l4.26,1.75l-3.1,2.55l-7.1,0.65l-7.08,-0.9l-0.37,-1.31l-0.37,-0.29l-3.44,-0.1l-2.08,-2.0l6.87,-1.44l3.9,1.31l2.39,-1.64l6.13,1.4ZM481.69,33.93l-4.45,1.74l-3.54,-0.99l1.12,-0.9l0.05,-0.58l-1.06,-1.22l4.22,-0.89l1.09,1.97l2.57,0.87ZM466.44,24.04l7.43,3.77l-5.41,1.86l-1.58,4.08l-2.26,1.2l-1.12,4.11l-2.61,0.18l-4.79,-2.86l1.84,-1.54l-0.1,-0.68l-3.69,-1.53l-4.77,-4.51l-1.73,-3.89l6.11,-1.82l1.54,1.92l3.57,-0.08l1.2,-1.96l3.32,-0.18l3.05,1.92Z\",\n            name: \"Norway\"\n          },\n          NA: {\n            path: \"M474.26,330.66l-0.97,0.04l-0.38,0.4l-0.07,8.9l-2.09,0.08l-0.39,0.4l-0.0,17.42l-1.98,1.23l-1.17,0.17l-2.44,-0.66l-0.48,-1.13l-0.99,-0.74l-0.54,0.05l-0.9,1.01l-1.53,-1.68l-0.93,-1.88l-1.99,-8.56l-0.06,-3.12l-0.33,-1.52l-2.3,-3.34l-1.91,-4.83l-1.96,-2.43l-0.12,-1.57l2.33,-0.79l1.43,0.07l1.81,1.13l10.23,-0.25l1.84,1.23l5.87,0.35ZM474.66,330.64l6.51,-1.6l1.9,0.39l-1.69,0.4l-1.31,0.83l-1.12,-0.94l-4.29,0.92Z\",\n            name: \"Namibia\"\n          },\n          VU: {\n            path: \"M839.04,322.8l0.22,1.14l-0.44,0.03l-0.2,-1.45l0.42,0.27Z\",\n            name: \"Vanuatu\"\n          },\n          NC: {\n            path: \"M838.78,341.24l-0.33,0.22l-2.9,-1.75l-3.26,-3.37l1.65,0.83l4.85,4.07Z\",\n            name: \"New Caledonia\"\n          },\n          NE: {\n            path: \"M454.75,226.53l1.33,1.37l0.48,0.07l1.27,-0.7l0.53,3.52l0.94,0.83l0.17,0.92l0.81,0.69l-0.44,0.95l-0.96,5.26l-0.13,3.22l-3.04,2.31l-1.22,3.57l1.02,1.24l-0.0,1.46l0.39,0.4l1.13,0.04l-0.9,1.25l-1.47,-2.42l-0.86,-0.29l-2.09,1.37l-1.74,-0.67l-1.45,-0.17l-0.85,0.35l-1.36,-0.07l-1.64,1.09l-1.06,0.05l-2.94,-1.28l-1.44,0.59l-1.01,-0.03l-0.97,-0.94l-2.7,-0.98l-2.69,0.3l-0.87,0.64l-0.47,1.6l-0.75,1.16l-0.12,1.53l-1.57,-1.1l-1.31,0.24l0.03,-0.81l-0.32,-0.41l-2.59,-0.52l-0.15,-1.16l-1.35,-1.6l-0.29,-1.0l0.13,-0.84l1.29,-0.08l1.08,-0.92l3.31,-0.22l2.22,-0.41l0.32,-0.34l0.2,-1.47l1.39,-1.88l-0.01,-5.66l3.36,-1.12l7.24,-5.12l8.42,-4.92l3.69,1.06Z\",\n            name: \"Niger\"\n          },\n          NG: {\n            path: \"M456.32,253.89l0.64,0.65l-0.28,1.04l-2.11,2.01l-2.03,5.18l-1.37,1.16l-1.15,3.18l-1.33,0.66l-1.46,-0.97l-1.21,0.16l-1.38,1.36l-0.91,0.24l-1.79,4.06l-2.33,0.81l-1.11,-0.07l-0.86,0.5l-1.71,-0.05l-1.19,-1.39l-0.89,-1.89l-1.77,-1.66l-3.95,-0.08l0.07,-5.21l0.42,-1.43l1.95,-2.3l-0.14,-0.91l0.43,-1.18l-0.53,-1.41l0.25,-2.92l0.72,-1.07l0.32,-1.34l0.46,-0.39l2.47,-0.28l2.34,0.89l1.15,1.02l1.28,0.04l1.22,-0.58l3.03,1.27l1.49,-0.14l1.36,-1.0l1.33,0.07l0.82,-0.35l3.45,0.8l1.82,-1.32l1.84,2.67l0.66,0.16Z\",\n            name: \"Nigeria\"\n          },\n          NZ: {\n            path: \"M857.8,379.65l1.86,3.12l0.44,0.18l0.3,-0.38l0.03,-1.23l0.38,0.27l0.57,2.31l2.02,0.94l1.81,0.27l1.57,-1.06l0.7,0.18l-1.15,3.59l-1.98,0.11l-0.74,1.2l0.2,1.11l-2.42,3.98l-1.49,0.92l-1.04,-0.85l1.21,-2.05l-0.81,-2.01l-2.63,-1.25l0.04,-0.57l1.82,-1.19l0.43,-2.34l-0.16,-2.03l-0.95,-1.82l-0.06,-0.72l-3.11,-3.64l-0.79,-1.52l1.56,1.45l1.76,0.66l0.65,2.34ZM853.83,393.59l0.57,1.24l0.59,0.16l1.42,-0.97l0.46,0.79l0.0,1.03l-2.47,3.48l-1.26,1.2l-0.06,0.5l0.55,0.87l-1.41,0.07l-2.33,1.38l-2.03,5.02l-3.02,2.16l-2.06,-0.06l-1.71,-1.04l-2.47,-0.2l-0.27,-0.73l1.22,-2.1l3.05,-2.94l1.62,-0.59l4.02,-2.82l1.57,-1.67l1.07,-2.16l0.88,-0.7l0.48,-1.75l1.24,-0.97l0.35,0.79Z\",\n            name: \"New Zealand\"\n          },\n          NP: {\n            path: \"M641.14,213.62l0.01,3.19l-1.74,0.04l-4.8,-0.86l-1.58,-1.39l-3.37,-0.34l-7.65,-3.7l0.8,-2.09l2.33,-1.7l1.77,0.75l2.49,1.76l1.38,0.41l0.99,1.35l1.9,0.52l1.99,1.17l5.49,0.9Z\",\n            name: \"Nepal\"\n          },\n          XK: {\n            path: \"M472.77,172.64l-1.08,-1.29l0.96,-0.77l0.29,-0.83l1.98,1.64l-0.36,0.67l-1.79,0.58Z\",\n            name: \"Kosovo\"\n          },\n          CI: {\n            path: \"M407.4,259.27l0.86,0.42l0.56,0.9l1.13,0.53l1.19,-0.61l0.97,-0.08l1.42,0.54l0.6,3.24l-1.03,2.08l-0.65,2.84l1.06,2.33l-0.06,0.53l-2.54,-0.47l-1.66,0.03l-3.06,0.46l-4.11,1.6l0.32,-3.06l-1.18,-1.31l-1.32,-0.66l0.42,-0.85l-0.2,-1.4l0.5,-0.67l0.01,-1.59l0.84,-0.32l0.26,-0.5l-1.15,-3.01l0.12,-0.5l0.51,-0.25l0.66,0.31l1.93,0.02l0.67,-0.71l0.71,-0.14l0.25,0.69l0.57,0.22l1.4,-0.61Z\",\n            name: \"C\\xf4te d'Ivoire\"\n          },\n          CH: {\n            path: \"M444.62,156.35l-0.29,0.87l0.18,0.53l1.13,0.58l1.0,0.1l-0.1,0.65l-0.79,0.38l-1.72,-0.37l-0.45,0.23l-0.45,1.04l-0.75,0.06l-0.84,-0.4l-1.32,1.0l-0.96,0.12l-0.88,-0.55l-0.81,-1.3l-0.49,-0.16l-0.63,0.26l0.02,-0.65l1.71,-1.66l0.1,-0.56l0.93,0.08l0.58,-0.46l1.99,0.02l0.66,-0.61l2.19,0.79Z\",\n            name: \"Switzerland\"\n          },\n          CO: {\n            path: \"M242.07,254.93l-1.7,0.59l-0.59,1.18l-1.7,1.69l-0.38,1.93l-0.67,1.43l0.31,0.57l1.03,0.13l0.25,0.9l0.57,0.64l-0.04,2.34l1.64,1.42l3.16,-0.24l1.26,0.28l1.67,2.06l0.41,0.13l4.09,-0.39l0.45,0.22l-0.92,1.95l-0.2,1.8l0.52,1.83l0.75,1.05l-1.12,1.1l0.07,0.63l0.84,0.51l0.74,1.29l-0.39,-0.45l-0.59,-0.01l-0.71,0.74l-4.71,-0.05l-0.4,0.41l0.03,1.57l0.33,0.39l1.11,0.2l-1.68,0.4l-0.29,0.38l-0.01,1.82l1.16,1.14l0.34,1.25l-1.05,7.05l-1.04,-0.87l1.26,-1.99l-0.13,-0.56l-2.18,-1.23l-1.38,0.2l-1.14,-0.38l-1.27,0.61l-1.55,-0.26l-1.38,-2.46l-1.23,-0.75l-0.85,-1.2l-1.67,-1.19l-0.86,0.13l-2.11,-1.32l-1.01,0.31l-1.8,-0.29l-0.52,-0.91l-3.09,-1.68l0.77,-0.52l-0.1,-1.12l0.41,-0.64l1.34,-0.32l2.0,-2.88l-0.11,-0.57l-0.66,-0.43l0.39,-1.38l-0.52,-2.1l0.49,-0.83l-0.4,-2.13l-0.97,-1.35l0.17,-0.66l0.86,-0.08l0.47,-0.75l-0.46,-1.63l1.41,-0.07l1.8,-1.69l0.93,-0.24l0.3,-0.38l0.45,-2.76l1.22,-1.0l1.44,-0.04l0.45,-0.5l1.91,0.12l2.93,-1.84l1.15,-1.14l0.91,0.46l-0.25,0.45Z\",\n            name: \"Colombia\"\n          },\n          CN: {\n            path: \"M740.23,148.97l4.57,1.3l2.8,2.17l0.98,2.9l0.38,0.27l3.8,0.0l2.32,-1.28l3.29,-0.75l-0.96,2.09l-1.02,1.28l-0.85,3.4l-1.52,2.73l-2.76,-0.5l-2.4,1.13l-0.21,0.45l0.64,2.57l-0.32,3.2l-0.94,0.06l-0.37,0.89l-0.91,-1.01l-0.64,0.07l-0.92,1.57l-3.73,1.25l-0.26,0.48l0.26,1.06l-1.5,-0.08l-1.09,-0.86l-0.56,0.06l-1.67,2.06l-2.7,1.56l-2.03,1.88l-3.4,0.83l-1.93,1.4l-1.15,0.34l0.33,-0.7l-0.41,-0.89l1.79,-1.79l0.02,-0.54l-1.32,-1.56l-0.48,-0.1l-2.24,1.09l-2.83,2.06l-1.51,1.83l-2.28,0.13l-1.55,1.49l-0.04,0.5l1.32,1.97l2.0,0.58l0.31,1.35l1.98,0.84l3.0,-1.96l2.0,1.02l1.49,0.11l0.22,0.83l-3.37,0.86l-1.12,1.48l-2.5,1.52l-1.29,1.99l0.14,0.56l2.57,1.48l0.97,2.7l3.17,4.63l-0.03,1.66l-1.35,0.65l-0.2,0.51l0.6,1.47l1.4,0.91l-0.89,3.82l-1.43,0.38l-3.85,6.44l-2.27,3.11l-6.78,4.57l-2.73,0.29l-1.45,1.04l-0.62,-0.61l-0.55,-0.01l-1.36,1.25l-3.39,1.27l-2.61,0.4l-1.1,2.79l-0.81,0.09l-0.49,-1.42l0.5,-0.85l-0.25,-0.59l-3.36,-0.84l-1.3,0.4l-2.31,-0.62l-0.94,-0.84l0.33,-1.28l-0.3,-0.49l-2.19,-0.46l-1.13,-0.93l-0.47,-0.02l-2.06,1.36l-4.29,0.28l-2.76,1.05l-0.28,0.43l0.32,2.53l-0.59,-0.03l-0.19,-1.34l-0.55,-0.34l-1.68,0.7l-2.46,-1.23l0.62,-1.87l-0.26,-0.51l-1.37,-0.44l-0.54,-2.22l-0.45,-0.3l-2.13,0.35l0.24,-2.48l2.39,-2.4l0.03,-4.31l-1.19,-0.92l-0.78,-1.49l-0.41,-0.21l-1.41,0.19l-1.98,-0.3l0.46,-1.07l-1.17,-1.7l-0.55,-0.11l-1.63,1.05l-2.25,-0.57l-2.89,1.73l-2.25,1.98l-1.75,0.29l-1.17,-0.71l-3.31,-0.65l-1.48,0.79l-1.04,1.27l-0.12,-1.17l-0.54,-0.34l-1.44,0.54l-5.55,-0.86l-1.98,-1.16l-1.89,-0.54l-0.99,-1.35l-1.34,-0.37l-2.55,-1.79l-2.01,-0.84l-1.21,0.56l-5.57,-3.45l-0.53,-2.31l1.19,0.25l0.48,-0.37l0.08,-1.42l-0.98,-1.56l0.15,-2.44l-2.69,-3.32l-4.12,-1.23l-0.67,-2.0l-1.92,-1.48l-0.38,-0.7l-0.51,-3.01l-1.52,-0.66l-0.7,0.13l-0.48,-2.05l0.55,-0.51l-0.09,-0.82l2.03,-1.19l1.6,-0.54l2.56,0.38l0.42,-0.22l0.85,-1.7l3.0,-0.33l1.1,-1.26l4.05,-1.77l0.39,-0.91l-0.17,-1.44l1.45,-0.67l0.2,-0.52l-2.07,-4.9l4.51,-1.12l1.37,-0.73l1.89,-5.51l4.98,0.86l1.51,-1.7l0.11,-2.87l1.99,-0.38l1.83,-2.06l0.49,-0.13l0.68,2.08l2.23,1.77l3.44,1.16l1.55,2.29l-0.92,3.49l0.96,1.67l6.54,1.13l2.95,1.87l1.47,0.35l1.06,2.62l1.53,1.91l3.05,0.08l5.14,0.67l3.37,-0.41l2.36,0.43l3.65,1.8l3.06,0.04l1.45,0.88l2.87,-1.59l3.95,-1.02l3.83,-0.14l3.06,-1.14l1.77,-1.6l1.72,-1.01l0.17,-0.49l-1.1,-2.05l1.02,-1.54l4.02,0.8l2.45,-1.61l3.76,-1.19l1.96,-2.13l1.63,-0.83l3.51,-0.4l1.92,0.34l0.46,-0.3l0.17,-1.5l-2.27,-2.22l-2.11,-1.09l-2.18,1.11l-2.32,-0.47l-1.29,0.32l-0.4,-0.82l2.73,-5.16l3.02,1.06l3.53,-2.06l0.18,-1.68l2.16,-3.35l1.49,-1.35l-0.03,-1.85l-1.07,-0.85l1.54,-1.26l2.98,-0.59l3.23,-0.09l3.64,0.99l2.04,1.16l3.29,6.71l0.92,3.19ZM696.92,237.31l-1.87,1.08l-1.63,-0.64l-0.06,-1.79l1.03,-0.98l2.58,-0.69l1.16,0.05l0.3,0.54l-0.98,1.06l-0.53,1.37Z\",\n            name: \"China\"\n          },\n          CM: {\n            path: \"M457.92,257.49l1.05,1.91l-1.4,0.16l-1.05,-0.23l-0.45,0.22l-0.54,1.19l0.08,0.45l1.48,1.47l1.05,0.45l1.01,2.46l-1.52,2.99l-0.68,0.68l-0.13,3.69l2.38,3.84l1.09,0.8l0.24,2.48l-3.67,-1.14l-11.27,-0.13l0.23,-1.79l-0.98,-1.66l-1.19,-0.54l-0.44,-0.97l-0.6,-0.42l1.71,-4.27l0.75,-0.13l1.38,-1.36l0.65,-0.03l1.71,0.99l1.93,-1.12l1.14,-3.18l1.38,-1.17l2.0,-5.14l2.17,-2.13l0.3,-1.64l-0.86,-0.88l0.03,-0.33l0.94,1.28l0.07,3.22Z\",\n            name: \"Cameroon\"\n          },\n          CL: {\n            path: \"M246.5,429.18l-3.14,1.83l-0.57,3.16l-0.64,0.05l-2.68,-1.06l-2.82,-2.33l-3.04,-1.89l-0.69,-1.85l0.63,-2.14l-1.21,-2.11l-0.31,-5.37l1.01,-2.91l2.57,-2.38l-0.18,-0.68l-3.16,-0.77l2.05,-2.47l0.77,-4.65l2.32,0.9l0.54,-0.29l1.31,-6.31l-0.22,-0.44l-1.68,-0.8l-0.56,0.28l-0.7,3.36l-0.81,-0.22l1.56,-9.41l1.15,-2.24l-0.71,-2.82l-0.18,-2.84l1.01,-0.33l3.26,-9.14l1.07,-4.22l-0.56,-4.21l0.74,-2.34l-0.29,-3.27l1.46,-3.34l2.04,-16.59l-0.66,-7.76l1.03,-0.53l0.54,-0.9l0.79,1.14l0.32,1.78l1.25,1.16l-0.69,2.55l1.33,2.9l0.97,3.59l0.46,0.29l1.5,-0.3l0.11,0.23l-0.76,2.44l-2.57,1.23l-0.23,0.37l0.08,4.33l-0.46,0.77l0.56,1.21l-1.58,1.51l-1.68,2.62l-0.89,2.47l0.2,2.7l-1.48,2.73l1.12,5.09l0.64,0.61l-0.01,2.29l-1.38,2.68l0.01,2.4l-1.89,2.04l0.02,2.75l0.69,2.57l-1.43,1.13l-1.26,5.68l0.39,3.51l-0.97,0.89l0.58,3.5l1.02,1.14l-0.65,1.02l0.15,0.57l1.0,0.53l0.16,0.69l-1.03,0.85l0.26,1.75l-0.89,4.03l-1.31,2.66l0.24,1.75l-0.71,1.83l-1.99,1.7l0.3,3.67l0.88,1.19l1.58,0.01l0.01,2.21l1.04,1.95l5.98,0.63ZM248.69,430.79l0.0,7.33l0.4,0.4l3.52,0.05l-0.44,0.75l-1.94,0.98l-2.49,-0.37l-1.88,-1.06l-2.55,-0.49l-5.59,-3.71l-2.38,-2.63l4.1,2.48l3.32,1.23l0.45,-0.12l1.29,-1.57l0.83,-2.32l2.05,-1.24l1.31,0.29Z\",\n            name: \"Chile\"\n          },\n          XC: {\n            path: \"M504.91,192.87l0.34,0.01l0.27,-0.07l-0.29,0.26l-0.31,-0.2Z\",\n            name: \"N. Cyprus\"\n          },\n          CA: {\n            path: \"M280.06,145.6l-1.67,2.88l0.07,0.49l0.5,0.04l1.46,-0.98l1.0,0.42l-0.56,0.72l0.17,0.62l2.22,0.89l1.35,-0.71l1.95,0.78l-0.66,2.01l0.5,0.51l1.32,-0.42l0.98,3.17l-0.91,2.41l-0.8,0.08l-1.23,-0.45l0.47,-2.25l-0.89,-0.83l-0.48,0.06l-2.78,2.63l-0.34,-0.02l1.02,-0.85l-0.14,-0.69l-2.4,-0.77l-7.4,0.08l-0.17,-0.41l1.3,-0.94l0.02,-0.64l-0.73,-0.58l1.85,-1.74l2.57,-5.16l1.47,-1.79l1.99,-1.05l0.46,0.06l-1.53,2.45ZM68.32,74.16l4.13,0.95l4.02,2.14l2.61,0.4l2.47,-1.89l2.88,-1.31l3.85,0.48l3.71,-1.94l3.82,-1.04l1.56,1.68l0.49,0.08l1.87,-1.04l0.65,-1.98l1.24,0.35l4.16,3.94l0.54,0.01l2.75,-2.49l0.26,2.59l0.49,0.35l3.08,-0.73l1.04,-1.27l2.73,0.23l3.83,1.86l5.86,1.61l3.47,0.75l2.44,-0.26l2.73,1.78l-2.98,1.81l-0.19,0.41l0.31,0.32l4.53,0.92l6.87,-0.5l2.0,-0.69l2.49,2.39l0.53,0.02l2.72,-2.16l-0.02,-0.64l-2.16,-1.54l1.15,-1.06l4.83,-0.61l1.84,0.95l2.48,2.31l3.01,-0.23l4.55,1.92l3.85,-0.67l3.61,0.1l0.41,-0.44l-0.25,-2.36l1.79,-0.61l3.49,1.32l-0.01,3.77l0.31,0.39l0.45,-0.22l1.48,-3.16l1.74,0.1l0.41,-0.3l1.13,-4.37l-2.78,-3.11l-2.8,-1.74l0.19,-4.64l2.71,-3.07l2.98,0.67l2.41,1.95l3.19,4.8l-1.99,1.97l0.21,0.68l4.33,0.84l-0.01,4.15l0.25,0.37l0.44,-0.09l3.07,-3.15l2.54,2.39l-0.61,3.33l2.42,2.88l0.61,0.0l2.61,-3.08l1.88,-3.82l0.17,-4.58l6.72,0.94l3.13,2.04l0.13,1.82l-1.76,2.19l-0.01,0.49l1.66,2.16l-0.26,1.71l-4.68,2.8l-3.28,0.61l-2.47,-1.2l-0.55,0.23l-0.73,2.04l-2.38,3.43l-0.74,1.77l-2.74,2.57l-3.44,0.25l-2.21,1.78l-0.28,2.53l-2.82,0.55l-3.12,3.22l-2.72,4.31l-1.03,3.17l-0.14,4.31l0.33,0.41l3.44,0.57l2.24,5.95l0.45,0.23l3.4,-0.69l4.52,1.51l2.43,1.31l1.91,1.73l3.1,0.96l2.62,1.46l6.6,0.54l-0.35,2.74l0.81,3.53l1.81,3.78l3.83,3.3l0.45,0.04l2.1,-1.28l1.37,-3.69l-1.31,-5.38l-1.45,-1.58l3.57,-1.47l2.84,-2.46l1.52,-2.8l-0.25,-2.55l-1.7,-3.07l-2.85,-2.61l2.8,-3.95l-1.08,-3.37l-0.79,-5.67l1.36,-0.7l6.76,1.41l2.12,-0.96l5.12,3.36l1.05,1.61l4.08,0.26l-0.06,2.87l0.83,4.7l0.3,0.32l2.16,0.54l1.73,2.06l0.5,0.09l3.63,-2.03l2.52,-4.19l1.26,-1.32l7.6,11.72l-0.92,2.04l0.16,0.51l3.3,1.97l2.22,1.98l4.1,0.98l1.43,0.99l0.95,2.79l2.1,0.68l0.84,1.08l0.17,3.45l-3.37,2.26l-4.22,1.24l-3.06,2.63l-4.06,0.51l-5.35,-0.69l-6.39,0.2l-2.3,2.41l-3.26,1.51l-6.47,7.15l-0.06,0.48l0.44,0.19l2.13,-0.52l4.17,-4.24l5.12,-2.62l3.52,-0.3l1.69,1.21l-2.12,2.21l0.81,3.47l1.02,2.61l3.47,1.6l4.14,-0.45l2.15,-2.8l0.26,1.48l1.14,0.8l-2.56,1.69l-5.5,1.82l-2.54,1.27l-2.74,2.15l-1.4,-0.16l-0.07,-2.01l4.14,-2.44l0.18,-0.45l-0.39,-0.29l-6.63,0.45l-1.39,-1.49l-0.14,-4.43l-1.11,-0.91l-1.82,0.39l-0.66,-0.66l-0.6,0.03l-1.91,2.39l-0.82,2.52l-0.8,1.27l-1.67,0.56l-0.46,0.76l-8.31,0.07l-1.21,0.62l-2.35,1.97l-0.71,-0.14l-1.37,0.96l-1.12,-0.48l-4.74,1.26l-0.9,1.17l0.21,0.62l1.73,0.3l-1.81,0.31l-1.85,0.81l-2.11,-0.13l-2.95,1.78l-0.69,-0.09l1.39,-2.1l1.73,-1.21l0.1,-2.29l1.16,-1.99l0.49,0.53l2.03,0.42l1.2,-1.16l0.02,-0.47l-2.66,-3.51l-2.28,-0.61l-5.64,-0.71l-0.4,-0.57l-0.79,0.13l0.2,-0.41l-0.22,-0.55l-0.68,-0.26l0.19,-1.26l-0.78,-0.73l0.31,-0.64l-0.29,-0.57l-2.6,-0.44l-0.75,-1.63l-0.94,-0.66l-4.31,-0.65l-1.13,1.19l-1.48,0.59l-0.85,1.06l-2.83,-0.76l-2.09,0.39l-2.39,-0.97l-4.24,-0.7l-0.57,-0.4l-0.41,-1.63l-0.4,-0.3l-0.85,0.02l-0.39,0.4l-0.01,0.85l-69.13,-0.01l-6.51,-4.52l-4.5,-1.38l-1.26,-2.66l0.33,-1.93l-0.23,-0.43l-3.01,-1.35l-0.55,-2.77l-2.89,-2.38l-0.04,-1.45l1.39,-1.83l-0.28,-2.55l-4.16,-2.2l-4.07,-6.6l-4.02,-3.22l-1.3,-1.88l-0.5,-0.13l-2.51,1.21l-2.23,1.87l-3.85,-3.88l-2.44,-1.04l-2.22,-0.13l0.03,-37.49ZM260.37,148.65l3.04,0.76l2.26,1.2l-3.78,-0.95l-1.53,-1.01ZM249.4,3.81l6.68,0.49l5.32,0.79l4.26,1.57l-0.07,1.1l-5.85,2.53l-6.02,1.21l-2.39,1.39l-0.18,0.45l0.39,0.29l4.01,-0.02l-4.65,2.82l-4.2,1.74l-4.19,4.59l-5.03,0.92l-1.67,1.15l-7.47,0.59l-0.37,0.37l0.32,0.42l2.41,0.49l-0.81,0.47l-0.12,0.59l1.83,2.41l-2.02,1.59l-3.81,1.51l-1.32,2.16l-3.38,1.53l-0.22,0.48l0.35,1.19l0.4,0.29l3.88,-0.18l0.03,0.61l-6.33,2.95l-6.41,-1.4l-7.43,0.79l-3.72,-0.62l-4.4,-0.25l-0.23,-1.83l4.29,-1.11l0.28,-0.51l-1.1,-3.45l1.0,-0.25l6.58,2.28l0.47,-0.16l-0.05,-0.49l-3.41,-3.45l-3.58,-0.98l1.48,-1.55l4.34,-1.29l0.97,-2.19l-0.16,-0.48l-3.42,-2.13l-0.81,-2.26l6.2,0.22l2.24,0.58l3.91,-2.1l0.2,-0.43l-0.35,-0.32l-5.64,-0.67l-8.73,0.36l-4.26,-1.9l-2.12,-2.4l-2.78,-1.66l-0.41,-1.52l3.31,-1.03l2.93,-0.2l4.91,-0.99l3.7,-2.27l2.87,0.3l2.62,1.67l0.56,-0.14l1.82,-3.2l3.13,-0.94l4.44,-0.69l7.53,-0.26l1.48,0.67l7.19,-1.06l10.8,0.79ZM203.85,57.54l0.01,0.42l1.97,2.97l0.68,-0.02l2.24,-3.72l5.95,-1.86l4.01,4.64l-0.35,2.91l0.5,0.43l4.95,-1.36l2.32,-1.8l5.31,2.28l3.27,2.11l0.3,1.84l0.48,0.33l4.42,-0.99l2.64,2.87l5.97,1.77l2.06,1.72l2.11,3.71l-4.19,1.86l-0.01,0.73l5.9,2.83l3.94,0.94l3.78,3.95l3.46,0.25l-0.63,2.37l-4.11,4.47l-2.76,-1.56l-3.9,-3.94l-3.59,0.41l-0.33,0.34l-0.19,2.72l2.63,2.38l3.42,1.89l0.94,0.97l1.55,3.75l-0.7,2.29l-2.74,-0.92l-6.25,-3.15l-0.51,0.13l0.05,0.52l6.07,5.69l0.18,0.59l-6.09,-1.39l-5.31,-2.24l-2.63,-1.66l0.6,-0.77l-0.12,-0.6l-7.39,-4.01l-0.59,0.37l0.03,0.79l-6.73,0.6l-1.69,-1.1l1.36,-2.46l4.51,-0.07l5.15,-0.52l0.31,-0.6l-0.74,-1.3l0.78,-1.84l3.21,-4.05l-0.67,-2.35l-1.11,-1.6l-3.84,-2.1l-4.35,-1.28l0.91,-0.63l0.06,-0.61l-2.65,-2.75l-2.34,-0.36l-1.89,-1.46l-0.53,0.03l-1.24,1.23l-4.36,0.55l-9.04,-0.99l-9.26,-1.98l-1.6,-1.22l2.22,-1.77l0.13,-0.44l-0.38,-0.27l-3.22,-0.02l-0.72,-4.25l1.83,-4.04l2.42,-1.85l5.5,-1.1l-1.39,2.35ZM261.19,159.33l2.07,0.61l1.44,-0.04l-1.15,0.63l-2.94,-1.23l-0.4,-0.68l0.36,-0.37l0.61,1.07ZM230.83,84.39l-2.37,0.18l-0.49,-1.63l0.93,-2.09l1.94,-0.51l1.62,0.99l0.02,1.52l-1.66,1.54ZM229.43,58.25l0.11,0.65l-4.87,-0.21l-2.72,0.62l-3.1,-2.57l0.08,-1.26l0.86,-0.23l5.57,0.51l4.08,2.5ZM222.0,105.02l-0.72,1.49l-0.63,-0.19l-0.48,-0.84l0.81,-0.99l0.65,0.05l0.37,0.46ZM183.74,38.32l2.9,1.7l4.79,-0.01l1.84,1.46l-0.49,1.68l0.23,0.48l2.82,1.14l1.76,1.26l7.01,0.65l4.1,-1.1l5.03,-0.43l3.93,0.35l2.48,1.77l0.46,1.7l-1.3,1.1l-3.56,1.01l-3.23,-0.59l-7.17,0.76l-5.09,0.09l-3.99,-0.6l-6.42,-1.54l-0.79,-2.51l-0.3,-2.49l-2.64,-2.5l-5.32,-0.72l-2.52,-1.4l0.68,-1.57l4.78,0.31ZM207.38,91.35l0.4,1.56l0.56,0.26l1.06,-0.52l1.32,0.96l5.42,2.57l0.2,1.68l0.46,0.35l1.68,-0.28l1.15,0.85l-1.55,0.87l-3.61,-0.88l-1.32,-1.69l-0.57,-0.06l-2.45,2.1l-3.12,1.79l-0.7,-1.87l-0.42,-0.26l-2.16,0.24l1.39,-1.39l0.32,-3.14l0.76,-3.35l1.18,0.22ZM215.49,102.6l-2.67,1.95l-1.4,-0.07l-0.3,-0.58l1.53,-1.48l2.84,0.18ZM202.7,24.12l2.53,1.59l-2.87,1.4l-4.53,4.05l-4.25,0.38l-5.03,-0.68l-2.45,-2.04l0.03,-1.62l1.82,-1.37l0.14,-0.45l-0.38,-0.27l-4.45,0.04l-2.59,-1.76l-1.41,-2.29l1.57,-2.32l1.62,-1.66l2.44,-0.39l0.25,-0.65l-0.6,-0.74l4.86,-0.25l3.24,3.11l8.16,2.3l1.9,3.61ZM187.47,59.2l-2.76,3.49l-2.38,-0.15l-1.44,-3.84l0.04,-2.2l1.19,-1.88l2.3,-1.23l5.07,0.17l4.11,1.02l-3.24,3.72l-2.88,0.89ZM186.07,48.79l-1.08,1.53l-3.34,-0.34l-2.56,-1.1l1.03,-1.75l3.25,-1.23l1.95,1.58l0.75,1.3ZM185.71,35.32l-5.3,-0.2l-0.32,-0.71l4.31,0.07l1.3,0.84ZM180.68,32.48l-3.34,1.0l-1.79,-1.1l-0.98,-1.87l-0.15,-1.73l4.1,0.53l2.67,1.7l-0.51,1.47ZM180.9,76.31l-1.1,1.08l-3.13,-1.23l-2.12,0.43l-2.71,-1.57l1.72,-1.09l1.55,-1.72l3.81,1.9l1.98,2.2ZM169.74,54.87l2.96,0.97l4.17,-0.57l0.41,0.88l-2.14,2.11l0.09,0.64l3.55,1.92l-0.4,3.72l-3.79,1.65l-2.17,-0.35l-1.72,-1.74l-6.02,-3.5l0.03,-0.85l4.68,0.54l0.4,-0.21l-0.05,-0.45l-2.48,-2.81l2.46,-1.95ZM174.45,40.74l1.37,1.73l0.07,2.44l-1.05,3.45l-3.79,0.47l-2.32,-0.69l0.05,-2.64l-0.44,-0.41l-3.68,0.35l-0.12,-3.1l2.45,0.1l3.67,-1.73l3.41,0.29l0.37,-0.26ZM170.05,31.55l0.67,1.56l-3.33,-0.49l-4.22,-1.77l-4.35,-0.16l1.4,-0.94l-0.06,-0.7l-2.81,-1.23l-0.12,-1.39l4.39,0.68l6.62,1.98l1.81,2.47ZM134.5,58.13l-1.02,1.82l0.45,0.58l5.4,-1.39l3.33,2.29l0.49,-0.03l2.6,-2.23l1.94,1.32l2.0,4.5l0.7,0.06l1.3,-2.29l-1.63,-4.46l1.69,-0.54l2.31,0.71l2.65,1.81l2.49,7.92l8.48,4.27l-0.19,1.35l-3.79,0.33l-0.26,0.67l1.4,1.49l-0.58,1.1l-4.23,-0.64l-4.43,-1.19l-3.0,0.28l-4.66,1.47l-10.52,1.04l-1.43,-2.02l-3.42,-1.2l-2.21,0.43l-2.51,-2.86l4.84,-1.05l3.6,0.19l3.27,-0.78l0.31,-0.39l-0.31,-0.39l-4.84,-1.06l-8.79,0.27l-0.85,-1.07l5.26,-1.66l0.27,-0.45l-0.4,-0.34l-3.8,0.06l-3.81,-1.06l1.81,-3.01l1.66,-1.79l6.48,-2.81l1.97,0.71ZM158.7,56.61l-1.7,2.44l-3.2,-2.75l0.37,-0.3l3.11,-0.18l1.42,0.79ZM149.61,42.73l1.01,1.89l0.5,0.18l2.14,-0.82l2.23,0.19l0.36,2.04l-1.33,2.09l-8.28,0.76l-6.35,2.15l-3.41,0.1l-0.19,-0.96l4.9,-2.08l0.23,-0.46l-0.41,-0.31l-11.25,0.59l-2.89,-0.74l3.04,-4.44l2.14,-1.32l6.81,1.69l4.58,3.06l4.37,0.39l0.36,-0.63l-3.36,-4.6l1.85,-1.53l2.18,0.51l0.77,2.26ZM144.76,34.41l-4.36,1.44l-3.0,-1.4l1.46,-1.24l3.47,-0.52l2.96,0.71l-0.52,1.01ZM145.13,29.83l-1.9,0.66l-3.67,-0.0l2.27,-1.61l3.3,0.95ZM118.92,65.79l-6.03,2.02l-1.33,-1.9l-5.38,-2.28l2.59,-5.05l2.16,-3.14l-0.02,-0.48l-1.97,-2.41l7.64,-0.7l3.6,1.02l6.3,0.27l4.42,2.95l-2.53,0.98l-6.24,3.43l-3.1,3.28l-0.11,2.01ZM129.54,35.53l-0.28,3.37l-1.72,1.62l-2.33,0.28l-4.61,2.19l-3.86,0.76l-2.64,-0.87l3.72,-3.4l5.01,-3.34l3.72,0.07l3.0,-0.67ZM111.09,152.69l-0.67,0.24l-3.85,-1.37l-0.83,-1.17l-2.12,-1.07l-0.66,-1.02l-2.4,-0.55l-0.74,-1.71l6.02,1.45l2.0,2.55l2.52,1.39l0.73,1.27ZM87.8,134.64l0.89,0.29l1.86,-0.21l-0.65,3.34l1.69,2.33l-1.31,-1.33l-0.99,-1.62l-1.17,-0.98l-0.33,-1.82Z\",\n            name: \"Canada\"\n          },\n          CG: {\n            path: \"M466.72,276.48l-0.1,1.03l-1.25,2.97l-0.19,3.62l-0.46,1.78l-0.23,0.63l-1.61,1.19l-1.21,1.39l-1.09,2.43l0.04,2.09l-3.25,3.24l-0.5,-0.24l-0.5,-0.83l-1.36,-0.02l-0.98,0.89l-1.68,-0.99l-1.54,1.24l-1.52,-1.96l1.57,-1.14l0.11,-0.52l-0.77,-1.35l2.1,-0.66l0.39,-0.73l1.05,0.82l2.21,0.11l1.12,-1.37l0.37,-1.81l-0.27,-2.09l-1.13,-1.5l1.0,-2.69l-0.13,-0.45l-0.92,-0.58l-1.6,0.17l-0.51,-0.94l0.1,-0.61l2.75,0.09l3.97,1.24l0.51,-0.33l0.17,-1.28l1.24,-2.21l1.28,-1.14l2.76,0.49Z\",\n            name: \"Congo\"\n          },\n          CF: {\n            path: \"M461.16,278.2l-0.26,-1.19l-1.09,-0.77l-0.84,-1.17l-0.29,-1.0l-1.04,-1.15l0.08,-3.43l0.58,-0.49l1.16,-2.35l1.85,-0.17l0.61,-0.62l0.97,0.58l3.15,-0.96l2.48,-1.92l0.02,-0.96l2.81,0.02l2.36,-1.17l1.93,-2.85l1.16,-0.93l1.11,-0.3l0.27,0.86l1.34,1.47l-0.39,2.01l0.3,1.01l4.01,2.75l0.17,0.93l2.63,2.31l0.6,1.44l2.08,1.4l-3.84,-0.21l-1.94,0.88l-1.23,-0.49l-2.67,1.2l-1.29,-0.18l-0.51,0.36l-0.6,1.22l-3.35,-0.65l-1.57,-0.91l-2.42,-0.83l-1.45,0.91l-0.97,1.27l-0.26,1.56l-3.22,-0.43l-1.49,1.33l-0.94,1.62Z\",\n            name: \"Central African Rep.\"\n          },\n          CD: {\n            path: \"M487.01,272.38l2.34,-0.14l1.35,1.84l1.34,0.45l0.86,-0.39l1.21,0.12l1.07,-0.41l0.54,0.89l2.04,1.54l-0.14,2.72l0.7,0.54l-1.38,1.13l-1.53,2.54l-0.17,2.05l-0.59,1.08l-0.02,1.72l-0.72,0.84l-0.66,3.01l0.63,1.32l-0.44,4.26l0.64,1.47l-0.37,1.22l0.86,1.8l1.53,1.41l0.3,1.26l0.44,0.5l-4.08,0.75l-0.92,1.81l0.51,1.34l-0.74,5.43l0.17,0.38l2.45,1.46l0.54,-0.1l0.12,1.62l-1.28,-0.01l-1.85,-2.35l-1.94,-0.45l-0.48,-1.13l-0.55,-0.2l-1.41,0.74l-1.71,-0.3l-1.01,-1.18l-2.49,-0.19l-0.44,-0.77l-1.98,-0.21l-2.88,0.36l0.11,-2.41l-0.85,-1.13l-0.16,-1.36l0.32,-1.73l-0.46,-0.89l-0.04,-1.49l-0.4,-0.39l-2.53,0.02l0.1,-0.41l-0.39,-0.49l-1.28,0.01l-0.43,0.45l-1.62,0.32l-0.83,1.79l-1.09,-0.28l-2.4,0.52l-1.37,-1.91l-1.3,-3.3l-0.38,-0.27l-7.39,-0.03l-2.46,0.42l0.5,-0.45l0.37,-1.47l0.66,-0.38l0.92,0.08l0.73,-0.82l0.87,0.02l0.31,0.68l1.4,0.36l3.59,-3.63l0.01,-2.23l1.02,-2.29l2.69,-2.39l0.43,-0.99l0.49,-1.96l0.17,-3.51l1.25,-2.95l0.36,-3.14l0.86,-1.13l1.1,-0.66l3.57,1.73l3.65,0.73l0.46,-0.21l0.8,-1.46l1.24,0.19l2.61,-1.17l0.81,0.44l1.04,-0.03l0.59,-0.66l0.7,-0.16l1.81,0.25Z\",\n            name: \"Dem. Rep. Congo\"\n          },\n          CZ: {\n            path: \"M458.46,144.88l1.22,1.01l1.47,0.23l0.13,0.93l1.36,0.68l0.54,-0.2l0.24,-0.55l1.15,0.25l0.53,1.09l1.68,0.18l0.6,0.84l-1.04,0.73l-0.96,1.28l-1.6,0.17l-0.55,0.56l-1.04,-0.46l-1.05,0.15l-2.12,-0.96l-1.05,0.34l-1.2,1.12l-1.56,-0.87l-2.57,-2.1l-0.53,-1.88l4.7,-2.52l0.71,0.26l0.9,-0.28Z\",\n            name: \"Czech Rep.\"\n          },\n          CY: {\n            path: \"M504.36,193.47l0.43,0.28l-1.28,0.57l-0.92,-0.28l-0.24,-0.46l2.01,-0.13Z\",\n            name: \"Cyprus\"\n          },\n          CR: {\n            path: \"M211.34,258.05l0.48,0.99l1.6,1.6l-0.54,0.45l0.29,1.42l-0.25,1.19l-1.09,-0.59l-0.05,-1.25l-2.46,-1.42l-0.28,-0.77l-0.66,-0.45l-0.45,-0.0l-0.11,1.04l-1.32,-0.95l0.31,-1.3l-0.36,-0.6l0.31,-0.27l1.42,0.58l1.29,-0.14l0.56,0.56l0.74,0.17l0.55,-0.27Z\",\n            name: \"Costa Rica\"\n          },\n          CU: {\n            path: \"M221.21,227.25l1.27,1.02l2.19,-0.28l4.43,3.33l2.08,0.43l-0.1,0.38l0.36,0.5l1.75,0.1l1.48,0.84l-3.11,0.51l-4.15,-0.03l0.77,-0.67l-0.04,-0.64l-1.2,-0.74l-1.49,-0.16l-0.7,-0.61l-0.56,-1.4l-0.4,-0.25l-1.34,0.1l-2.2,-0.66l-0.88,-0.58l-3.18,-0.4l-0.27,-0.16l0.58,-0.74l-0.36,-0.29l-2.72,-0.05l-1.7,1.29l-0.91,0.03l-0.61,0.69l-1.01,0.22l1.11,-1.29l1.01,-0.52l3.69,-1.01l3.98,0.21l2.21,0.84Z\",\n            name: \"Cuba\"\n          },\n          SZ: {\n            path: \"M500.35,351.36l0.5,2.04l-0.38,0.89l-1.05,0.21l-1.23,-1.2l-0.02,-0.64l0.83,-1.57l1.34,0.27Z\",\n            name: \"Swaziland\"\n          },\n          SY: {\n            path: \"M511.0,199.79l0.05,-1.33l0.54,-1.36l1.28,-0.99l0.13,-0.45l-0.41,-1.11l-1.14,-0.36l-0.19,-1.74l0.52,-1.0l1.29,-1.21l0.2,-1.18l0.59,0.23l2.62,-0.76l1.36,0.52l2.06,-0.01l2.95,-1.08l3.25,-0.26l-0.67,0.94l-1.28,0.66l-0.21,0.4l0.23,2.01l-0.88,3.19l-10.15,5.73l-2.15,-0.85Z\",\n            name: \"Syria\"\n          },\n          KG: {\n            path: \"M621.35,172.32l-3.87,1.69l-0.96,1.18l-3.04,0.34l-1.13,1.86l-2.36,-0.35l-1.99,0.63l-2.39,1.4l0.06,0.95l-0.4,0.37l-4.52,0.43l-3.02,-0.93l-2.37,0.17l0.11,-0.79l2.32,0.42l1.13,-0.88l1.99,0.2l3.21,-2.14l-0.03,-0.69l-2.97,-1.57l-1.94,0.65l-1.22,-0.74l1.71,-1.58l-0.12,-0.67l-0.36,-0.15l0.32,-0.77l1.36,-0.35l4.02,1.02l0.49,-0.3l0.35,-1.59l1.09,-0.48l3.42,1.22l1.11,-0.31l7.64,0.39l1.16,1.0l1.23,0.39Z\",\n            name: \"Kyrgyzstan\"\n          },\n          KE: {\n            path: \"M506.26,284.69l1.87,-2.56l0.93,-2.15l-1.38,-4.08l-1.06,-1.6l2.82,-2.75l0.79,0.26l0.12,1.41l0.86,0.83l1.9,0.11l3.28,2.13l3.57,0.44l1.05,-1.12l1.96,-0.9l0.82,0.68l1.16,0.09l-1.78,2.45l0.03,9.12l1.3,1.94l-1.37,0.78l-0.67,1.03l-1.08,0.46l-0.34,1.67l-0.81,1.07l-0.45,1.55l-0.68,0.56l-3.2,-2.23l-0.35,-1.58l-8.86,-4.98l0.14,-1.6l-0.57,-1.04Z\",\n            name: \"Kenya\"\n          },\n          SS: {\n            path: \"M481.71,263.34l1.07,-0.72l1.2,-3.18l1.36,-0.26l1.61,1.99l0.87,0.34l1.1,-0.41l1.5,0.07l0.57,0.53l2.49,0.0l0.44,-0.63l1.07,-0.4l0.45,-0.84l0.59,-0.33l1.9,1.33l1.6,-0.2l2.83,-3.33l-0.32,-2.21l1.59,-0.52l-0.24,1.6l0.3,1.83l1.35,1.18l0.2,1.87l0.35,0.41l0.02,1.53l-0.23,0.47l-1.42,0.25l-0.85,1.44l0.3,0.6l1.4,0.16l1.11,1.08l0.59,1.13l1.03,0.53l1.28,2.36l-4.41,3.98l-1.74,0.01l-1.89,0.55l-1.47,-0.52l-1.15,0.57l-2.96,-2.62l-1.3,0.49l-1.06,-0.15l-0.79,0.39l-0.82,-0.22l-1.8,-2.7l-1.91,-1.1l-0.66,-1.5l-2.62,-2.32l-0.18,-0.94l-2.37,-1.6Z\",\n            name: \"S. Sudan\"\n          },\n          SR: {\n            path: \"M283.12,270.19l2.1,0.53l-1.08,1.95l0.2,1.72l0.93,1.49l-0.59,2.03l-0.43,0.71l-1.12,-0.42l-1.32,0.22l-0.93,-0.2l-0.46,0.26l-0.25,0.73l0.33,0.7l-0.89,-0.13l-1.39,-1.97l-0.31,-1.34l-0.97,-0.31l-0.89,-1.47l0.35,-1.61l1.45,-0.82l0.33,-1.87l2.61,0.44l0.57,-0.47l1.75,-0.16Z\",\n            name: \"Suriname\"\n          },\n          KH: {\n            path: \"M689.52,249.39l0.49,1.45l-0.28,2.74l-4.0,1.86l-0.16,0.6l0.68,0.95l-2.06,0.17l-2.05,0.97l-1.82,-0.32l-2.12,-3.7l-0.55,-2.85l1.4,-1.85l3.02,-0.45l2.23,0.35l2.01,0.98l0.51,-0.14l0.95,-1.48l1.74,0.74Z\",\n            name: \"Cambodia\"\n          },\n          SV: {\n            path: \"M195.8,250.13l1.4,-1.19l2.24,1.45l0.98,-0.27l0.44,0.2l-0.27,1.05l-1.14,-0.03l-3.64,-1.21Z\",\n            name: \"El Salvador\"\n          },\n          SK: {\n            path: \"M476.82,151.17l-1.14,1.9l-2.73,-0.92l-0.82,0.2l-0.74,0.8l-3.46,0.73l-0.47,0.69l-1.76,0.33l-1.88,-1.0l-0.18,-0.81l0.38,-0.75l1.87,-0.32l1.74,-1.89l0.83,0.16l0.79,-0.34l1.51,1.04l1.34,-0.63l1.25,0.3l1.65,-0.42l1.81,0.95Z\",\n            name: \"Slovakia\"\n          },\n          KR: {\n            path: \"M737.51,185.84l0.98,-0.1l0.87,-1.17l2.69,-0.32l0.33,-0.29l1.76,2.79l0.58,1.76l0.02,3.12l-0.8,1.32l-2.21,0.55l-1.93,1.13l-1.8,0.19l-0.2,-1.1l0.43,-2.28l-0.95,-2.56l1.43,-0.37l0.23,-0.62l-1.43,-2.06Z\",\n            name: \"Korea\"\n          },\n          SI: {\n            path: \"M456.18,162.07l-0.51,-1.32l0.18,-1.05l1.69,0.2l1.42,-0.71l2.09,-0.07l0.62,-0.51l0.21,0.47l-1.61,0.67l-0.44,1.34l-0.66,0.24l-0.26,0.82l-1.22,-0.49l-0.84,0.46l-0.69,-0.04Z\",\n            name: \"Slovenia\"\n          },\n          KP: {\n            path: \"M736.77,185.16l-0.92,-0.42l-0.88,0.62l-1.21,-0.88l0.96,-1.15l0.59,-2.59l-0.46,-0.74l-2.09,-0.77l1.64,-1.52l2.72,-1.58l1.58,-1.91l1.11,0.78l2.17,0.11l0.41,-0.5l-0.3,-1.22l3.52,-1.18l0.94,-1.4l0.98,1.08l-2.19,2.18l0.01,2.14l-1.06,0.54l-1.41,1.4l-1.7,0.52l-1.25,1.09l-0.14,1.98l0.94,0.45l1.15,1.04l-0.13,0.26l-2.6,0.29l-1.13,1.29l-1.22,0.08Z\",\n            name: \"Dem. Rep. Korea\"\n          },\n          KW: {\n            path: \"M540.81,207.91l0.37,0.86l-0.17,0.76l0.6,1.53l-0.95,0.04l-0.82,-1.28l-1.57,-0.18l1.31,-1.88l1.22,0.17Z\",\n            name: \"Kuwait\"\n          },\n          SN: {\n            path: \"M390.09,248.21l0.12,1.55l0.49,1.46l0.96,0.82l0.05,1.28l-1.26,-0.19l-0.75,0.33l-1.84,-0.61l-5.84,-0.13l-2.54,0.51l-0.22,-1.03l1.77,0.04l2.01,-0.91l1.03,0.48l1.09,0.04l1.29,-0.62l0.14,-0.58l-0.51,-0.74l-1.81,0.25l-1.13,-0.63l-0.79,0.04l-0.72,0.61l-2.31,0.06l-0.92,-1.77l-0.81,-0.64l0.64,-0.35l2.46,-3.74l1.04,0.19l1.38,-0.56l1.19,-0.02l2.72,1.37l3.03,3.48Z\",\n            name: \"Senegal\"\n          },\n          SL: {\n            path: \"M394.46,264.11l-1.73,1.98l-0.58,1.33l-2.07,-1.06l-1.22,-1.26l-0.65,-2.39l1.16,-0.96l0.67,-1.17l1.21,-0.52l1.66,0.0l1.03,1.64l0.52,2.41Z\",\n            name: \"Sierra Leone\"\n          },\n          KZ: {\n            path: \"M552.8,172.89l0.46,-1.27l-0.48,-1.05l-2.96,-1.19l-1.06,-2.58l-1.37,-0.87l-0.03,-0.3l1.95,0.23l0.45,-0.38l0.08,-1.96l1.75,-0.41l2.1,0.45l0.48,-0.33l0.45,-3.04l-0.45,-2.09l-0.41,-0.31l-2.42,0.15l-2.36,-0.73l-2.87,1.37l-2.17,0.61l-0.85,-0.34l0.13,-1.61l-1.6,-2.12l-2.02,-0.08l-1.78,-1.82l1.29,-2.18l-0.57,-0.95l1.62,-2.91l2.21,1.63l0.63,-0.27l0.29,-2.22l4.92,-3.43l3.71,-0.08l8.4,3.6l2.92,-1.36l3.77,-0.06l3.11,1.66l0.51,-0.11l0.6,-0.81l3.31,0.13l0.39,-0.25l0.63,-1.57l-0.17,-0.5l-3.5,-1.98l1.87,-1.27l-0.13,-1.03l1.98,-0.72l0.18,-0.62l-1.59,-2.06l0.81,-0.82l9.23,-1.18l1.33,-0.88l6.18,-1.26l2.26,-1.42l4.08,0.68l0.73,3.33l0.51,0.3l2.48,-0.8l2.79,1.02l-0.17,1.56l0.43,0.44l2.55,-0.24l4.89,-2.53l0.03,0.32l3.15,2.61l5.56,8.47l0.65,0.02l1.12,-1.46l3.15,1.74l3.76,-0.78l1.15,0.49l1.14,1.8l1.84,0.76l0.99,1.29l3.35,-0.25l1.02,1.52l-1.6,1.81l-1.93,0.28l-0.34,0.38l-0.11,3.05l-1.13,1.16l-4.75,-1.0l-0.46,0.27l-1.76,5.47l-1.1,0.59l-4.91,1.23l-0.27,0.54l2.1,4.97l-1.37,0.63l-0.23,0.41l0.13,1.13l-0.88,-0.25l-1.42,-1.13l-7.89,-0.4l-0.92,0.31l-3.73,-1.22l-1.42,0.63l-0.53,1.66l-3.72,-0.94l-1.85,0.43l-0.76,1.4l-4.65,2.62l-1.13,2.08l-0.44,0.01l-0.92,-1.4l-2.87,-0.09l-0.45,-2.14l-0.38,-0.32l-0.8,-0.01l0.0,-2.96l-3.0,-2.22l-7.31,0.58l-2.35,-2.68l-6.71,-3.69l-6.45,1.83l-0.29,0.39l0.1,10.85l-0.7,0.08l-1.62,-2.17l-1.83,-0.96l-3.11,0.59l-0.64,0.51Z\",\n            name: \"Kazakhstan\"\n          },\n          SA: {\n            path: \"M537.53,210.34l2.0,0.24l0.9,1.32l1.49,-0.06l0.87,2.08l1.29,0.76l0.51,0.99l1.56,1.03l-0.1,1.9l0.32,0.9l1.58,2.47l0.76,0.53l0.7,-0.04l1.68,4.23l7.53,1.33l0.51,-0.29l0.77,1.25l-1.55,4.87l-7.29,2.52l-7.3,1.03l-2.34,1.17l-1.88,2.74l-0.76,0.28l-0.82,-0.78l-0.91,0.12l-2.88,-0.51l-3.51,0.25l-0.86,-0.56l-0.57,0.15l-0.66,1.27l0.16,1.11l-0.43,0.32l-0.93,-1.4l-0.33,-1.16l-1.23,-0.88l-1.27,-2.06l-0.78,-2.22l-1.73,-1.79l-1.14,-0.48l-1.54,-2.31l-0.21,-3.41l-1.44,-2.93l-1.27,-1.16l-1.33,-0.57l-1.31,-3.37l-0.77,-0.67l-0.97,-1.97l-2.8,-4.03l-1.06,-0.17l0.37,-1.96l0.2,-0.72l2.74,0.3l1.08,-0.84l0.6,-0.94l1.74,-0.35l0.65,-1.03l0.71,-0.4l0.1,-0.62l-2.06,-2.28l4.39,-1.22l0.48,-0.37l2.77,0.69l3.66,1.9l7.03,5.5l4.87,0.3Z\",\n            name: \"Saudi Arabia\"\n          },\n          SE: {\n            path: \"M480.22,89.3l-4.03,1.17l-2.43,2.86l0.26,2.57l-8.77,6.64l-1.78,5.79l1.78,2.68l2.22,1.96l-2.07,3.77l-2.72,1.13l-0.95,6.04l-1.29,3.01l-2.74,-0.31l-0.4,0.22l-1.31,2.59l-2.34,0.13l-0.75,-3.09l-2.08,-4.03l-1.83,-4.96l1.0,-1.93l2.14,-2.7l0.83,-4.45l-1.6,-2.17l-0.15,-4.94l1.48,-3.39l2.58,-0.15l0.87,-1.59l-0.78,-1.57l3.76,-5.59l4.04,-7.48l2.17,0.01l0.39,-0.29l0.57,-2.07l4.37,0.64l0.46,-0.34l0.33,-2.56l1.1,-0.13l6.94,4.87l0.06,6.32l0.66,1.36Z\",\n            name: \"Sweden\"\n          },\n          SD: {\n            path: \"M505.98,259.4l-0.34,-0.77l-1.17,-0.9l-0.26,-1.61l0.29,-1.81l-0.34,-0.46l-1.16,-0.17l-0.54,0.59l-1.23,0.11l-0.28,0.65l0.53,0.65l0.17,1.22l-2.44,3.0l-0.96,0.19l-2.39,-1.4l-0.95,0.52l-0.38,0.78l-1.11,0.41l-0.29,0.5l-1.94,0.0l-0.54,-0.52l-1.81,-0.09l-0.95,0.4l-2.45,-2.35l-2.07,0.54l-0.73,1.26l-0.6,2.1l-1.25,0.58l-0.75,-0.62l0.27,-2.65l-1.48,-1.78l-0.22,-1.48l-0.92,-0.96l-0.02,-1.29l-0.57,-1.16l-0.68,-0.16l0.69,-1.29l-0.18,-1.14l0.65,-0.62l0.03,-0.55l-0.36,-0.41l1.55,-2.97l1.91,0.16l0.43,-0.4l-0.1,-10.94l2.49,-0.01l0.4,-0.4l-0.0,-4.82l29.02,0.0l0.64,2.04l-0.49,0.66l0.36,2.69l0.93,3.16l2.12,1.55l-0.89,1.04l-1.72,0.39l-0.98,0.9l-1.43,5.65l0.24,1.15l-0.38,2.06l-0.96,2.38l-1.53,1.31l-1.32,2.91l-1.22,0.86l-0.37,1.34Z\",\n            name: \"Sudan\"\n          },\n          DO: {\n            path: \"M241.8,239.2l0.05,-0.65l-0.46,-0.73l0.42,-0.44l0.19,-1.0l-0.09,-1.53l1.66,0.01l1.99,0.63l0.33,0.67l1.28,0.19l0.33,0.76l1.0,0.08l0.8,0.62l-0.45,0.51l-1.13,-0.47l-1.88,-0.01l-1.27,0.59l-0.75,-0.55l-1.01,0.54l-0.79,1.4l-0.23,-0.61Z\",\n            name: \"Dominican Rep.\"\n          },\n          DJ: {\n            path: \"M528.43,256.18l-0.45,0.66l-0.58,-0.25l-1.51,0.13l-0.18,-1.01l1.45,-1.95l0.83,0.17l0.77,-0.44l0.2,1.0l-1.2,0.51l-0.06,0.7l0.73,0.47Z\",\n            name: \"Djibouti\"\n          },\n          DK: {\n            path: \"M452.28,129.07l-1.19,2.24l-2.13,-1.6l-0.23,-0.95l2.98,-0.95l0.57,1.26ZM447.74,126.31l-0.26,0.57l-0.88,-0.07l-1.8,2.53l0.48,1.69l-1.09,0.36l-1.61,-0.39l-0.89,-1.69l-0.07,-3.43l0.96,-1.73l2.02,-0.2l1.09,-1.07l1.33,-0.67l-0.05,1.06l-0.73,1.41l0.3,1.0l1.2,0.64Z\",\n            name: \"Denmark\"\n          },\n          DE: {\n            path: \"M453.14,155.55l-0.55,-0.36l-1.2,-0.1l-1.87,0.57l-2.13,-0.13l-0.56,0.63l-0.86,-0.6l-0.96,0.09l-2.57,-0.93l-0.85,0.67l-1.47,-0.02l0.24,-1.75l1.23,-2.14l-0.28,-0.59l-3.52,-0.58l-0.92,-0.66l0.12,-1.2l-0.48,-0.88l0.27,-2.17l-0.37,-3.03l1.41,-0.22l0.63,-1.26l0.66,-3.19l-0.41,-1.18l0.26,-0.39l1.66,-0.15l0.33,0.54l0.62,0.07l1.7,-1.69l-0.54,-3.02l1.37,0.33l1.31,-0.37l0.31,1.18l2.25,0.71l-0.02,0.92l0.5,0.4l2.55,-0.65l1.34,-0.87l2.57,1.24l1.06,0.98l0.48,1.44l-0.57,0.74l-0.0,0.48l0.87,1.15l0.57,1.64l-0.14,1.29l0.82,1.7l-1.5,-0.07l-0.56,0.57l-4.47,2.15l-0.22,0.54l0.68,2.26l2.58,2.16l-0.66,1.11l-0.79,0.36l-0.23,0.43l0.32,1.87Z\",\n            name: \"Germany\"\n          },\n          YE: {\n            path: \"M528.27,246.72l0.26,-0.42l-0.22,-1.01l0.19,-1.5l0.92,-0.69l-0.07,-1.35l0.39,-0.75l1.01,0.47l3.34,-0.27l3.76,0.41l0.95,0.81l1.36,-0.58l1.74,-2.62l2.18,-1.09l6.86,-0.94l2.48,5.41l-1.64,0.76l-0.56,1.9l-6.23,2.16l-2.29,1.8l-1.93,0.05l-1.41,1.02l-4.24,0.74l-1.72,1.49l-3.28,0.19l-0.52,-1.18l0.02,-1.51l-1.34,-3.29Z\",\n            name: \"Yemen\"\n          },\n          DZ: {\n            path: \"M441.46,188.44l-0.32,1.07l0.39,2.64l-0.54,2.16l-1.58,1.82l0.37,2.39l1.91,1.55l0.18,0.8l1.42,1.03l1.84,7.23l0.12,1.16l-0.57,5.0l0.2,1.51l-0.87,0.99l-0.02,0.51l1.41,1.86l0.14,1.2l0.89,1.48l0.5,0.16l0.98,-0.41l1.73,1.08l0.82,1.23l-8.22,4.81l-7.23,5.11l-3.43,1.13l-2.3,0.21l-0.28,-1.59l-2.56,-1.09l-0.67,-1.25l-26.12,-17.86l0.01,-3.47l3.77,-1.88l2.44,-0.41l2.12,-0.75l1.08,-1.42l2.81,-1.05l0.35,-2.08l1.33,-0.29l1.04,-0.94l3.47,-0.69l0.46,-1.08l-0.1,-0.45l-0.58,-0.52l-0.82,-2.81l-0.19,-1.83l-0.78,-1.49l2.03,-1.31l2.63,-0.48l1.7,-1.22l2.31,-0.84l8.24,-0.73l1.49,0.38l2.28,-1.1l2.46,-0.02l0.92,0.6l1.35,-0.05Z\",\n            name: \"Algeria\"\n          },\n          US: {\n            path: \"M892.72,99.2l1.31,0.53l1.41,-0.37l1.89,0.98l1.89,0.42l-1.32,0.58l-2.9,-1.53l-2.08,0.22l-0.26,-0.15l0.07,-0.67ZM183.22,150.47l0.37,1.47l1.12,0.85l4.23,0.7l2.39,0.98l2.17,-0.38l1.85,0.5l-1.55,0.65l-3.49,2.61l-0.16,0.77l0.5,0.39l2.33,-0.61l1.77,1.02l5.15,-2.4l-0.31,0.65l0.25,0.56l1.36,0.38l1.71,1.16l4.7,-0.88l0.67,0.85l1.31,0.21l0.58,0.58l-1.34,0.17l-2.18,-0.32l-3.6,0.89l-2.71,3.25l0.35,0.9l0.59,-0.0l0.55,-0.6l-1.36,4.65l0.29,3.09l0.67,1.58l0.61,0.45l1.77,-0.44l1.6,-1.96l0.14,-2.21l-0.82,-1.96l0.11,-1.13l1.19,-2.37l0.44,-0.33l0.48,0.75l0.4,-0.29l0.4,-1.37l0.6,-0.47l0.24,-0.8l1.69,0.49l1.65,1.08l-0.03,2.37l-1.27,1.13l-0.0,1.13l0.87,0.36l1.66,-1.29l0.5,0.17l0.5,2.6l-2.49,3.75l0.17,0.61l1.54,0.62l1.48,0.17l1.92,-0.44l4.72,-2.15l2.16,-1.8l-0.05,-1.24l0.75,-0.22l3.92,0.36l2.12,-1.05l0.21,-0.4l-0.28,-1.48l3.27,-2.4l8.32,-0.02l0.56,-0.82l1.9,-0.77l0.93,-1.51l0.74,-2.37l1.58,-1.98l0.92,0.62l1.47,-0.47l0.8,0.66l-0.0,4.09l1.96,2.6l-2.34,1.31l-5.37,2.09l-1.83,2.72l0.02,1.79l0.83,1.59l0.54,0.23l-6.19,0.94l-2.2,0.89l-0.23,0.48l0.45,0.29l2.99,-0.46l-2.19,0.56l-1.13,0.0l-0.15,-0.32l-0.48,0.08l-0.76,0.82l0.22,0.67l0.32,0.06l-0.41,1.62l-1.27,1.58l-1.48,-1.07l-0.49,-0.04l-0.16,0.46l0.52,1.58l0.61,0.59l0.03,0.79l-0.95,1.38l-1.21,-1.22l-0.27,-2.27l-0.35,-0.35l-0.42,0.25l-0.48,1.27l0.33,1.41l-0.97,-0.27l-0.48,0.24l0.18,0.5l1.52,0.83l0.1,2.52l0.79,0.51l0.52,3.42l-1.42,1.88l-2.47,0.8l-1.71,1.66l-1.31,0.25l-1.27,1.03l-0.43,0.99l-2.69,1.78l-2.64,3.03l-0.45,2.12l0.45,2.08l0.85,2.38l1.09,1.9l0.04,1.2l1.16,3.06l-0.18,2.69l-0.55,1.43l-0.47,0.21l-0.89,-0.23l-0.49,-1.18l-0.87,-0.56l-2.75,-5.16l0.48,-1.68l-0.72,-1.78l-2.01,-2.38l-1.12,-0.53l-2.72,1.18l-1.47,-1.35l-1.57,-0.68l-2.99,0.31l-2.17,-0.3l-2.0,0.19l-1.15,0.46l-0.19,0.58l0.39,0.63l0.14,1.34l-0.84,-0.2l-0.84,0.46l-1.58,-0.07l-2.08,-1.44l-2.09,0.33l-1.91,-0.62l-3.73,0.84l-2.39,2.07l-2.54,1.22l-1.45,1.41l-0.61,1.38l0.34,3.71l-0.29,0.02l-3.5,-1.33l-1.25,-3.11l-1.44,-1.5l-2.24,-3.56l-1.76,-1.09l-2.27,-0.01l-1.71,2.07l-1.76,-0.69l-1.16,-0.74l-1.52,-2.98l-3.93,-3.16l-4.34,-0.0l-0.4,0.4l-0.0,0.74l-6.5,0.02l-9.02,-3.14l-0.34,-0.71l-5.7,0.49l-0.43,-1.29l-1.62,-1.61l-1.14,-0.38l-0.55,-0.88l-1.28,-0.13l-1.01,-0.77l-2.22,-0.27l-0.43,-0.3l-0.36,-1.58l-2.4,-2.83l-2.01,-3.85l-0.06,-0.9l-2.92,-3.26l-0.33,-2.29l-1.3,-1.66l0.52,-2.37l-0.09,-2.57l-0.78,-2.3l0.95,-2.82l0.61,-5.68l-0.47,-4.27l-1.46,-4.08l3.19,0.79l1.26,2.83l0.69,0.08l0.69,-1.14l-1.1,-4.79l68.76,-0.0l0.4,-0.4l0.14,-0.86ZM32.44,67.52l1.73,1.97l0.55,0.05l0.99,-0.79l3.65,0.24l-0.09,0.62l0.32,0.45l3.83,0.77l2.61,-0.43l5.19,1.4l4.84,0.43l1.89,0.57l3.42,-0.7l6.14,1.87l-0.03,38.06l0.38,0.4l2.39,0.11l2.31,0.98l3.9,3.99l0.55,0.04l2.4,-2.03l2.16,-1.04l1.2,1.71l3.95,3.14l4.09,6.63l4.2,2.29l0.06,1.83l-1.02,1.23l-1.16,-1.08l-2.04,-1.03l-0.67,-2.89l-3.28,-3.03l-1.65,-3.57l-6.35,-0.32l-2.82,-1.01l-5.26,-3.85l-6.77,-2.04l-3.53,0.3l-4.81,-1.69l-3.25,-1.63l-2.78,0.8l-0.28,0.46l0.44,2.21l-3.91,0.96l-2.26,1.27l-2.3,0.65l-0.27,-1.65l1.05,-3.42l2.49,-1.09l0.16,-0.6l-0.69,-0.96l-0.55,-0.1l-3.19,2.12l-1.78,2.56l-3.55,2.61l-0.04,0.61l1.56,1.52l-2.07,2.29l-5.11,2.57l-0.77,1.66l-3.76,1.77l-0.92,1.73l-2.69,1.38l-1.81,-0.22l-6.95,3.32l-3.97,0.91l4.85,-2.5l2.59,-1.86l3.26,-0.52l1.19,-1.4l3.42,-2.1l2.59,-2.27l0.42,-2.68l1.23,-2.1l-0.04,-0.46l-0.45,-0.11l-2.68,1.03l-0.63,-0.49l-0.53,0.03l-1.05,1.04l-1.36,-1.54l-0.66,0.08l-0.32,0.62l-0.58,-1.14l-0.56,-0.16l-2.41,1.42l-1.07,-0.0l-0.17,-1.75l0.3,-1.71l-1.61,-1.33l-3.41,0.59l-1.96,-1.63l-1.57,-0.84l-0.15,-2.21l-1.7,-1.43l0.82,-1.88l1.99,-2.12l0.88,-1.92l1.71,-0.24l2.04,0.51l1.87,-1.77l1.91,0.25l1.91,-1.23l0.17,-0.43l-0.47,-1.82l-1.07,-0.7l1.39,-1.17l0.12,-0.45l-0.39,-0.26l-1.65,0.07l-2.66,0.88l-0.75,0.78l-1.92,-0.8l-3.46,0.44l-3.44,-0.91l-1.06,-1.61l-2.65,-1.99l2.91,-1.43l5.5,-2.0l1.52,0.0l-0.26,1.62l0.41,0.46l5.29,-0.16l0.3,-0.65l-2.03,-2.59l-3.14,-1.68l-1.79,-2.12l-2.4,-1.83l-3.09,-1.24l1.04,-1.69l4.23,-0.14l3.36,-2.07l0.73,-2.27l2.39,-1.99l2.42,-0.52l4.65,-1.97l2.46,0.23l3.71,-2.35l3.5,0.89ZM37.6,123.41l-2.25,1.23l-0.95,-0.69l-0.29,-1.24l3.21,-1.63l1.42,0.21l0.67,0.7l-1.8,1.42ZM31.06,234.03l0.98,0.47l0.74,0.87l-1.77,1.07l-0.44,-1.53l0.49,-0.89ZM29.34,232.07l0.18,0.05l0.08,0.05l-0.16,0.03l-0.11,-0.14ZM25.16,230.17l0.05,-0.03l0.18,0.22l-0.13,-0.01l-0.1,-0.18ZM5.89,113.26l-1.08,0.41l-2.21,-1.12l1.53,-0.4l1.62,0.28l0.14,0.83Z\",\n            name: \"United States\"\n          },\n          UY: {\n            path: \"M286.85,372.74l-0.92,1.5l-2.59,1.44l-1.69,-0.52l-1.42,0.26l-2.39,-1.19l-1.52,0.08l-1.27,-1.3l0.16,-1.5l0.56,-0.79l-0.02,-2.73l1.21,-4.74l1.19,-0.21l2.37,2.0l1.08,0.03l4.36,3.17l1.22,1.6l-0.96,1.5l0.61,1.4Z\",\n            name: \"Uruguay\"\n          },\n          LB: {\n            path: \"M510.37,198.01l-0.88,0.51l1.82,-3.54l0.62,0.08l0.22,0.61l-1.13,0.88l-0.65,1.47Z\",\n            name: \"Lebanon\"\n          },\n          LA: {\n            path: \"M689.54,248.53l-1.76,-0.74l-0.49,0.15l-0.94,1.46l-1.32,-0.64l0.62,-0.98l0.11,-2.17l-2.04,-2.42l-0.25,-2.65l-1.9,-2.1l-2.15,-0.31l-0.78,0.91l-1.12,0.06l-1.05,-0.4l-2.06,1.2l-0.04,-1.59l0.61,-2.68l-0.36,-0.49l-1.35,-0.1l-0.11,-1.23l-0.96,-0.88l1.96,-1.89l0.39,0.36l1.33,0.07l0.42,-0.45l-0.34,-2.66l0.7,-0.21l1.28,1.81l1.11,2.35l0.36,0.23l2.82,0.02l0.71,1.67l-1.39,0.65l-0.72,0.93l0.13,0.6l2.91,1.51l3.6,5.25l1.88,1.78l0.56,1.62l-0.35,1.96Z\",\n            name: \"Lao PDR\"\n          },\n          TW: {\n            path: \"M724.01,226.68l-0.74,1.48l-0.9,-1.52l-0.25,-1.74l1.38,-2.44l1.73,-1.74l0.64,0.44l-1.85,5.52Z\",\n            name: \"Taiwan\"\n          },\n          TT: {\n            path: \"M266.64,259.32l0.28,-1.16l1.13,-0.22l-0.06,1.2l-1.35,0.18Z\",\n            name: \"Trinidad and Tobago\"\n          },\n          TR: {\n            path: \"M513.21,175.47l3.64,1.17l3.05,-0.44l2.1,0.26l3.11,-1.56l2.46,-0.13l2.19,1.33l0.33,0.82l-0.22,1.33l0.25,0.44l2.28,1.13l-1.17,0.57l-0.21,0.45l0.75,3.2l-0.41,1.16l1.13,1.92l-0.55,0.22l-0.9,-0.67l-2.91,-0.37l-1.24,0.46l-4.23,0.41l-2.81,1.05l-1.91,0.01l-1.52,-0.53l-2.58,0.75l-0.66,-0.45l-0.62,0.3l-0.12,1.45l-0.89,0.84l-0.47,-0.67l0.79,-1.3l-0.41,-0.2l-1.43,0.23l-2.0,-0.63l-2.02,1.65l-3.51,0.3l-2.13,-1.53l-2.7,-0.1l-0.86,1.24l-1.38,0.27l-2.29,-1.44l-2.71,-0.01l-1.37,-2.65l-1.68,-1.52l1.07,-1.99l-0.09,-0.49l-1.27,-1.12l2.37,-2.41l3.7,-0.11l1.28,-2.24l4.49,0.37l3.21,-1.97l2.81,-0.82l3.99,-0.06l4.29,2.07ZM488.79,176.72l-1.72,1.31l-0.5,-0.88l1.37,-2.57l-0.7,-0.85l1.7,-0.63l1.8,0.34l0.46,1.17l1.76,0.78l-2.87,0.32l-1.3,1.01Z\",\n            name: \"Turkey\"\n          },\n          LK: {\n            path: \"M624.16,268.99l-1.82,0.48l-0.99,-1.67l-0.42,-3.46l0.95,-3.43l1.21,0.98l2.26,4.19l-0.34,2.33l-0.85,0.58Z\",\n            name: \"Sri Lanka\"\n          },\n          LV: {\n            path: \"M489.16,122.85l0.96,0.66l0.22,1.65l0.68,1.76l-3.65,1.7l-2.23,-1.58l-1.29,-0.26l-0.68,-0.77l-2.42,0.34l-4.16,-0.23l-2.47,0.9l0.06,-1.98l1.13,-2.06l1.95,-1.02l2.12,2.58l2.01,-0.07l0.38,-0.33l0.44,-2.52l1.76,-0.53l3.06,1.7l2.15,0.07Z\",\n            name: \"Latvia\"\n          },\n          LT: {\n            path: \"M486.93,129.3l0.17,1.12l-1.81,0.98l-0.72,2.02l-2.47,1.18l-2.1,-0.02l-0.73,-1.05l-1.06,-0.3l-0.09,-1.87l-3.56,-1.13l-0.43,-2.36l2.48,-0.94l4.12,0.22l2.25,-0.31l0.52,0.69l1.24,0.21l2.19,1.56Z\",\n            name: \"Lithuania\"\n          },\n          LU: {\n            path: \"M436.08,149.45l-0.48,-0.07l0.3,-1.28l0.27,0.4l-0.09,0.96Z\",\n            name: \"Luxembourg\"\n          },\n          LR: {\n            path: \"M399.36,265.97l0.18,1.54l-0.48,0.99l0.08,0.47l2.47,1.8l-0.33,2.8l-2.65,-1.13l-5.78,-4.61l0.58,-1.32l2.1,-2.33l0.86,-0.22l0.77,1.14l-0.14,0.85l0.59,0.87l1.0,0.14l0.76,-0.99Z\",\n            name: \"Liberia\"\n          },\n          LS: {\n            path: \"M491.06,363.48l-0.49,0.15l-1.49,-1.67l1.1,-1.43l2.19,-1.44l1.51,1.27l-0.98,1.82l-1.23,0.38l-0.62,0.93Z\",\n            name: \"Lesotho\"\n          },\n          TH: {\n            path: \"M670.27,255.86l-1.41,3.87l0.15,2.0l0.38,0.36l1.38,0.07l0.9,2.04l0.55,2.34l1.4,1.44l1.61,0.38l0.96,0.97l-0.5,0.64l-1.1,0.2l-0.34,-1.18l-2.04,-1.1l-0.63,0.23l-0.63,-0.62l-0.48,-1.3l-2.56,-2.63l-0.73,0.41l0.95,-3.89l2.16,-4.22ZM670.67,254.77l-0.92,-2.18l-0.26,-2.61l-2.14,-3.06l0.71,-0.49l0.89,-2.59l-3.61,-5.45l0.87,-0.51l1.05,-2.58l1.74,-0.18l2.6,-1.59l0.76,0.56l0.13,1.39l0.37,0.36l1.23,0.09l-0.51,2.28l0.05,2.42l0.6,0.34l2.43,-1.42l0.77,0.39l1.47,-0.07l0.71,-0.88l1.48,0.14l1.71,1.88l0.25,2.65l1.92,2.11l-0.1,1.89l-0.61,0.86l-2.22,-0.33l-3.5,0.64l-1.6,2.12l0.36,2.58l-1.51,-0.79l-1.84,-0.01l0.28,-1.52l-0.4,-0.47l-2.21,0.01l-0.4,0.37l-0.19,2.74l-0.34,0.93Z\",\n            name: \"Thailand\"\n          },\n          TF: {\n            path: \"M596.68,420.38l-3.2,0.18l-0.05,-1.26l0.39,-1.41l1.3,0.78l2.08,0.35l-0.52,1.36Z\",\n            name: \"Fr. S. Antarctic Lands\"\n          },\n          TG: {\n            path: \"M422.7,257.63l-0.09,1.23l1.53,1.52l0.08,1.09l0.5,0.65l-0.11,5.62l0.49,1.47l-1.31,0.35l-1.02,-2.13l-0.18,-1.12l0.53,-2.19l-0.63,-1.16l-0.22,-3.68l-1.01,-1.4l0.07,-0.28l1.37,0.03Z\",\n            name: \"Togo\"\n          },\n          TD: {\n            path: \"M480.25,235.49l0.12,9.57l-2.1,0.05l-1.14,1.89l-0.69,1.63l0.34,0.73l-0.66,0.91l0.24,0.89l-0.86,1.95l0.45,0.5l0.6,-0.1l0.34,0.64l0.03,1.38l0.9,1.04l-1.45,0.43l-1.27,1.03l-1.83,2.76l-2.16,1.07l-2.31,-0.15l-0.86,0.25l-0.26,0.49l0.17,0.61l-2.11,1.68l-2.85,0.87l-1.09,-0.57l-0.73,0.66l-1.12,0.1l-1.1,-3.12l-1.25,-0.64l-1.22,-1.22l0.29,-0.64l3.01,0.04l0.35,-0.6l-1.3,-2.2l-0.08,-3.31l-0.97,-1.66l0.22,-1.04l-0.38,-0.48l-1.22,-0.04l0.0,-1.25l-0.98,-1.07l0.96,-3.01l3.25,-2.65l0.13,-3.33l0.95,-5.18l0.52,-1.07l-0.1,-0.48l-0.91,-0.78l-0.2,-0.96l-0.8,-0.58l-0.55,-3.65l2.1,-1.2l19.57,9.83Z\",\n            name: \"Chad\"\n          },\n          LY: {\n            path: \"M483.48,203.15l-0.75,1.1l0.29,1.39l-0.6,1.83l0.73,2.14l0.0,24.12l-2.48,0.01l-0.41,0.85l-19.41,-9.76l-4.41,2.28l-1.37,-1.33l-3.82,-1.1l-1.14,-1.65l-1.98,-1.23l-1.22,0.32l-0.66,-1.11l-0.17,-1.26l-1.28,-1.69l0.87,-1.19l-0.07,-4.34l0.43,-2.27l-0.86,-3.45l1.13,-0.76l0.22,-1.16l-0.2,-1.03l3.48,-2.61l0.29,-1.94l2.45,0.8l1.18,-0.21l1.98,0.44l3.15,1.18l1.37,2.54l5.72,1.67l2.64,1.35l1.61,-0.72l1.29,-1.34l-0.44,-2.34l0.66,-1.13l1.67,-1.21l1.57,-0.35l3.14,0.53l1.08,1.28l3.99,0.78l0.36,0.54Z\",\n            name: \"Libya\"\n          },\n          AE: {\n            path: \"M550.76,223.97l1.88,-0.4l3.84,0.02l4.78,-4.75l0.19,0.36l0.26,1.58l-0.81,0.01l-0.39,0.35l-0.08,2.04l-0.81,0.63l-0.01,0.96l-0.66,0.99l-0.39,1.41l-7.08,-1.25l-0.7,-1.96Z\",\n            name: \"United Arab Emirates\"\n          },\n          VE: {\n            path: \"M240.68,256.69l0.53,0.75l-0.02,1.06l-1.07,1.78l0.95,2.0l0.42,0.22l1.4,-0.44l0.56,-1.83l-0.77,-1.17l-0.1,-1.47l2.82,-0.93l0.26,-0.49l-0.28,-0.96l0.3,-0.28l0.66,1.31l1.96,0.26l1.4,1.22l0.08,0.68l0.39,0.35l4.81,-0.22l1.49,1.11l1.92,0.31l1.67,-0.84l0.22,-0.6l3.44,-0.14l-0.17,0.55l0.86,1.19l2.19,0.35l1.67,1.1l0.37,1.86l0.41,0.32l1.55,0.17l-1.66,1.35l-0.22,0.92l0.65,0.97l-1.67,0.54l-0.3,0.4l0.04,0.99l-0.56,0.57l-0.01,0.55l1.85,2.27l-0.66,0.69l-4.47,1.29l-0.72,0.54l-3.69,-0.9l-0.71,0.27l-0.02,0.7l0.91,0.53l-0.08,1.54l0.35,1.58l0.35,0.31l1.66,0.17l-1.3,0.52l-0.48,1.13l-2.68,0.91l-0.6,0.77l-1.57,0.13l-1.17,-1.13l-0.8,-2.52l-1.25,-1.26l1.02,-1.23l-1.29,-2.95l0.18,-1.62l1.0,-2.21l-0.2,-0.49l-1.14,-0.46l-4.02,0.36l-1.82,-2.1l-1.57,-0.33l-2.99,0.22l-1.06,-0.97l0.25,-1.23l-0.2,-1.01l-0.59,-0.69l-0.29,-1.06l-1.08,-0.39l0.78,-2.79l1.9,-2.11Z\",\n            name: \"Venezuela\"\n          },\n          AF: {\n            path: \"M600.7,188.88l-1.57,1.3l-0.1,0.48l0.8,2.31l-1.09,1.04l-0.03,1.27l-0.48,0.71l-2.16,-0.08l-0.37,0.59l0.78,1.48l-1.38,0.69l-1.06,1.69l0.06,1.7l-0.65,0.52l-0.91,-0.21l-1.91,0.36l-0.48,0.77l-1.88,0.13l-1.4,1.56l-0.18,2.32l-2.91,1.02l-1.65,-0.23l-0.71,0.55l-1.41,-0.3l-2.41,0.39l-3.52,-1.17l1.96,-2.35l-0.21,-1.78l-0.3,-0.34l-1.63,-0.4l-0.19,-1.58l-0.75,-2.03l0.95,-1.36l-0.19,-0.6l-0.73,-0.28l1.47,-4.8l2.14,0.9l2.12,-0.36l0.74,-1.34l1.77,-0.39l1.54,-0.92l0.63,-2.31l1.87,-0.5l0.49,-0.81l0.94,0.56l2.13,0.11l2.55,0.92l1.95,-0.83l0.65,0.43l0.56,-0.13l0.69,-1.12l1.57,-0.08l0.72,-1.66l0.79,-0.74l0.8,0.39l-0.17,0.56l0.71,0.58l-0.08,2.39l1.11,0.95ZM601.37,188.71l1.73,-0.71l1.43,-1.18l4.03,0.35l-2.23,0.74l-4.95,0.8Z\",\n            name: \"Afghanistan\"\n          },\n          IQ: {\n            path: \"M530.82,187.47l0.79,0.66l1.26,-0.28l1.46,3.08l1.63,0.94l0.14,1.23l-1.22,1.05l-0.53,2.52l1.73,2.67l3.12,1.62l1.15,1.88l-0.38,1.85l0.39,0.48l0.41,-0.0l0.02,1.07l0.76,0.94l-2.47,-0.1l-1.71,2.44l-4.31,-0.2l-7.02,-5.48l-3.73,-1.94l-2.88,-0.73l-0.85,-2.87l5.45,-3.02l0.95,-3.43l-0.19,-1.96l1.27,-0.7l1.22,-1.7l0.87,-0.36l2.69,0.34Z\",\n            name: \"Iraq\"\n          },\n          IS: {\n            path: \"M384.14,88.06l-0.37,2.61l2.54,2.51l-2.9,2.75l-9.19,3.4l-9.25,-1.66l1.7,-1.22l-0.1,-0.7l-4.05,-1.47l2.96,-0.53l0.33,-0.43l-0.11,-1.2l-0.33,-0.36l-4.67,-0.85l1.28,-2.04l3.45,-0.56l3.77,2.72l0.44,0.02l3.64,-2.16l3.3,1.08l3.98,-2.16l3.58,0.26Z\",\n            name: \"Iceland\"\n          },\n          IR: {\n            path: \"M533.43,187.16l-1.27,-2.15l0.42,-0.98l-0.71,-3.04l1.03,-0.5l0.33,0.83l1.26,1.35l2.05,0.51l1.11,-0.16l2.89,-2.11l0.62,-0.14l0.39,0.46l-0.72,1.2l0.06,0.49l1.56,1.53l0.65,0.04l0.67,1.81l2.56,0.83l1.87,1.48l3.69,0.49l3.91,-0.76l0.47,-0.73l2.17,-0.6l1.66,-1.54l1.51,0.08l1.18,-0.53l1.59,0.24l2.83,1.48l1.88,0.3l2.77,2.47l1.77,0.18l0.18,1.99l-1.68,5.49l0.24,0.5l0.61,0.23l-0.82,1.48l0.8,2.18l0.19,1.71l0.3,0.34l1.63,0.4l0.15,1.32l-2.15,2.35l-0.01,0.53l2.21,3.03l2.34,1.24l0.06,2.14l1.24,0.72l0.11,0.69l-3.31,1.27l-1.08,3.03l-9.68,-1.68l-0.99,-3.05l-1.43,-0.73l-2.17,0.46l-2.47,1.26l-2.83,-0.82l-2.46,-2.02l-2.41,-0.8l-3.42,-6.06l-0.48,-0.2l-1.18,0.39l-1.44,-0.82l-0.5,0.08l-0.65,0.74l-0.97,-1.01l-0.02,-1.31l-0.71,-0.39l0.26,-1.81l-1.29,-2.11l-3.13,-1.63l-1.58,-2.43l0.5,-1.9l1.31,-1.26l-0.19,-1.66l-1.74,-1.1l-1.57,-3.3Z\",\n            name: \"Iran\"\n          },\n          AM: {\n            path: \"M536.99,182.33l-0.28,0.03l-1.23,-2.13l-0.93,0.01l-0.62,-0.66l-0.69,-0.07l-0.96,-0.81l-1.56,-0.62l0.19,-1.12l-0.26,-0.79l2.72,-0.36l1.09,1.01l-0.17,0.92l1.02,0.78l-0.47,0.62l0.08,0.56l2.04,1.23l0.04,1.4Z\",\n            name: \"Armenia\"\n          },\n          AL: {\n            path: \"M470.32,171.8l0.74,0.03l0.92,0.89l-0.17,1.95l0.36,1.28l1.01,0.82l-1.82,2.83l-0.19,-0.61l-1.25,-0.89l-0.18,-1.2l0.53,-2.82l-0.54,-1.47l0.6,-0.83Z\",\n            name: \"Albania\"\n          },\n          AO: {\n            path: \"M461.55,300.03l1.26,3.15l1.94,2.36l2.47,-0.53l1.25,0.32l0.44,-0.18l0.93,-1.92l1.31,-0.08l0.41,-0.44l0.47,-0.0l-0.1,0.41l0.39,0.49l2.65,-0.02l0.03,1.19l0.48,1.01l-0.34,1.52l0.18,1.55l0.83,1.04l-0.13,2.85l0.54,0.39l3.96,-0.41l-0.1,1.79l0.39,1.05l-0.24,1.43l-4.7,-0.03l-0.4,0.39l-0.12,8.13l2.92,3.49l-3.83,0.88l-5.89,-0.36l-1.88,-1.24l-10.47,0.22l-1.3,-1.01l-1.85,-0.16l-2.4,0.77l-0.15,-1.06l0.33,-2.16l1.0,-3.45l1.35,-3.2l2.24,-2.8l0.33,-2.06l-0.13,-1.53l-0.8,-1.08l-1.21,-2.87l0.87,-1.62l-1.27,-4.12l-1.17,-1.53l2.47,-0.63l7.03,0.03ZM451.71,298.87l-0.47,-1.25l1.25,-1.11l0.32,0.3l-0.99,1.03l-0.12,1.03Z\",\n            name: \"Angola\"\n          },\n          AR: {\n            path: \"M249.29,428.93l-2.33,-0.52l-5.83,-0.43l-0.89,-1.66l0.05,-2.37l-0.45,-0.4l-1.43,0.18l-0.67,-0.91l-0.2,-3.13l1.88,-1.47l0.79,-2.04l-0.25,-1.7l1.3,-2.68l0.91,-4.15l-0.22,-1.69l0.85,-0.45l0.2,-0.44l-0.27,-1.16l-0.98,-0.68l0.59,-0.92l-0.05,-0.5l-1.04,-1.07l-0.52,-3.1l0.97,-0.86l-0.42,-3.58l1.2,-5.43l1.38,-0.98l0.16,-0.43l-0.75,-2.79l-0.01,-2.43l1.78,-1.75l0.06,-2.57l1.43,-2.85l0.01,-2.58l-0.69,-0.74l-1.09,-4.52l1.47,-2.7l-0.18,-2.79l0.85,-2.35l1.59,-2.46l1.73,-1.64l0.05,-0.52l-0.6,-0.84l0.44,-0.85l-0.07,-4.19l2.7,-1.44l0.86,-2.75l-0.21,-0.71l1.76,-2.01l2.9,0.57l1.38,1.78l0.68,-0.08l0.87,-1.87l2.39,0.09l4.95,4.77l2.17,0.49l3.0,1.92l2.47,1.0l0.25,0.82l-2.37,3.93l0.23,0.59l5.39,1.16l2.12,-0.44l2.45,-2.16l0.5,-2.38l0.76,-0.31l0.98,1.2l-0.04,1.8l-3.67,2.51l-2.85,2.66l-3.43,3.88l-1.3,5.07l0.01,2.72l-0.54,0.73l-0.36,3.28l3.14,2.64l-0.16,2.11l1.4,1.11l-0.1,1.09l-2.29,3.52l-3.55,1.49l-4.92,0.6l-2.71,-0.29l-0.43,0.51l0.5,1.65l-0.49,2.1l0.38,1.42l-1.19,0.83l-2.36,0.38l-2.3,-1.04l-1.38,0.83l0.41,3.64l1.69,0.91l1.4,-0.71l0.36,0.76l-2.04,0.86l-2.01,1.89l-0.97,4.63l-2.34,0.1l-2.09,1.78l-0.61,2.75l2.46,2.31l2.17,0.63l-0.7,2.32l-2.83,1.73l-1.73,3.86l-2.17,1.22l-1.16,1.67l0.75,3.76l1.04,1.28ZM256.71,438.88l-2.0,0.15l-1.4,-1.22l-3.82,-0.1l-0.0,-5.83l1.6,3.05l3.26,2.07l3.08,0.78l-0.71,1.1Z\",\n            name: \"Argentina\"\n          },\n          AU: {\n            path: \"M705.8,353.26l0.26,0.04l0.17,-0.47l-0.48,-1.42l0.92,1.11l0.45,0.15l0.27,-0.39l-0.1,-1.56l-1.98,-3.63l1.09,-3.31l-0.24,-1.57l0.34,-0.62l0.38,1.06l0.43,-0.19l0.99,-1.7l1.91,-0.83l1.29,-1.15l1.81,-0.91l0.96,-0.17l0.92,0.26l1.92,-0.95l1.47,-0.28l1.03,-0.8l1.43,0.04l2.78,-0.84l1.36,-1.15l0.71,-1.45l1.41,-1.26l0.3,-2.58l1.27,-1.59l0.78,1.65l0.54,0.19l1.07,-0.51l0.15,-0.6l-0.73,-1.0l0.45,-0.71l0.78,0.39l0.58,-0.3l0.28,-1.82l1.87,-2.14l1.12,-0.39l0.28,-0.58l0.62,0.17l0.53,-0.73l1.87,-0.57l1.65,1.05l1.35,1.48l3.39,0.38l0.43,-0.54l-0.46,-1.23l1.05,-1.79l1.04,-0.61l0.14,-0.55l-0.25,-0.41l0.88,-1.17l1.31,-0.77l1.3,0.27l2.1,-0.48l0.31,-0.4l-0.05,-1.3l-0.92,-0.77l1.48,0.56l1.41,1.07l2.11,0.65l0.81,-0.2l1.4,0.7l1.69,-0.66l0.8,0.19l0.64,-0.33l0.71,0.77l-1.33,1.94l-0.71,0.07l-0.35,0.51l0.24,0.86l-1.52,2.35l0.12,1.05l2.15,1.65l1.97,0.85l3.04,2.36l1.97,0.65l0.55,0.88l2.72,0.85l1.84,-1.1l2.07,-5.97l-0.42,-3.59l0.3,-1.73l0.47,-0.87l-0.31,-0.68l1.09,-3.28l0.46,-0.47l0.4,0.71l0.16,1.51l0.65,0.52l0.16,1.04l0.85,1.21l0.12,2.38l0.9,2.0l0.57,0.18l1.3,-0.78l1.69,1.7l-0.2,1.08l0.53,2.2l0.39,1.3l0.68,0.48l0.6,1.95l-0.19,1.48l0.81,1.76l6.01,3.69l-0.11,0.76l1.38,1.58l0.95,2.77l0.58,0.22l0.72,-0.41l0.8,0.9l0.61,0.01l0.46,2.41l4.81,4.71l0.66,2.02l-0.07,3.31l1.14,2.2l-0.13,2.24l-1.1,3.68l0.03,1.64l-0.47,1.89l-1.05,2.4l-1.9,1.47l-1.72,3.51l-2.38,6.09l-0.24,2.82l-1.14,0.8l-2.85,0.15l-2.31,1.19l-2.51,2.25l-3.09,-1.57l0.3,-1.15l-0.54,-0.47l-1.5,0.63l-2.01,1.94l-7.12,-2.18l-1.48,-1.63l-1.14,-3.74l-1.45,-1.26l-1.81,-0.26l0.56,-1.18l-0.61,-2.1l-0.72,-0.1l-1.14,1.82l-0.9,0.21l0.63,-0.82l0.36,-1.55l0.92,-1.31l-0.13,-2.34l-0.7,-0.22l-2.0,2.34l-1.51,0.93l-0.94,2.01l-1.35,-0.81l-0.02,-1.52l-1.57,-2.04l-1.09,-0.88l0.24,-0.33l-0.14,-0.59l-3.21,-1.69l-1.83,-0.12l-2.54,-1.35l-4.58,0.28l-6.02,1.9l-2.53,-0.13l-2.62,1.41l-2.13,0.63l-1.49,2.6l-3.49,0.31l-2.29,-0.5l-3.48,0.43l-1.6,1.47l-0.81,-0.04l-2.37,1.63l-3.26,-0.1l-3.72,-2.21l0.04,-1.05l1.19,-0.46l0.49,-0.89l0.21,-2.97l-0.28,-1.64l-1.34,-2.86l-0.38,-1.47l0.05,-1.72l-0.95,-1.7l-0.18,-0.97l-1.01,-0.99l-0.29,-1.98l-1.13,-1.75ZM784.92,393.44l2.65,1.02l3.23,-0.96l1.09,0.14l0.15,3.06l-0.85,1.13l-0.17,1.63l-0.87,-0.24l-1.57,1.91l-1.68,-0.18l-1.4,-2.36l-0.37,-2.04l-1.39,-2.51l0.04,-0.8l1.15,0.18Z\",\n            name: \"Australia\"\n          },\n          AT: {\n            path: \"M462.89,152.8l0.04,2.25l-1.07,0.0l-0.33,0.63l0.36,0.51l-1.04,2.13l-2.02,0.07l-1.33,0.7l-5.29,-0.99l-0.47,-0.93l-0.44,-0.21l-2.47,0.55l-0.42,0.51l-3.18,-0.81l0.43,-0.91l1.12,0.78l0.6,-0.17l0.25,-0.58l1.93,0.12l1.86,-0.56l1.0,0.08l0.68,0.57l0.62,-0.15l0.26,-0.77l-0.3,-1.78l0.8,-0.44l0.68,-1.15l1.52,0.85l0.47,-0.06l1.34,-1.25l0.64,-0.17l1.81,0.92l1.28,-0.11l0.7,0.37Z\",\n            name: \"Austria\"\n          },\n          IN: {\n            path: \"M623.34,207.03l-1.24,1.04l-0.97,2.55l0.22,0.51l8.04,3.87l3.42,0.37l1.57,1.38l4.92,0.88l2.18,-0.04l0.38,-0.3l0.29,-1.24l-0.32,-1.64l0.14,-0.87l0.82,-0.31l0.45,2.48l2.28,1.02l1.77,-0.38l4.14,0.1l0.38,-0.36l0.18,-1.66l-0.5,-0.65l1.37,-0.29l2.25,-1.99l2.7,-1.62l1.93,0.62l1.8,-0.98l0.79,1.14l-0.68,0.91l0.26,0.63l2.42,0.36l0.09,0.47l-0.83,0.75l0.13,1.07l-1.52,-0.29l-3.24,1.86l-0.13,1.78l-1.32,2.14l-0.18,1.39l-0.93,1.82l-1.64,-0.5l-0.52,0.37l-0.09,2.63l-0.56,1.11l0.19,0.81l-0.53,0.27l-1.18,-3.73l-1.08,-0.27l-0.38,0.31l-0.24,1.0l-0.66,-0.66l0.54,-1.06l1.22,-0.34l1.15,-2.25l-0.24,-0.56l-1.57,-0.47l-4.34,-0.28l-0.18,-1.56l-0.35,-0.35l-1.11,-0.12l-1.91,-1.12l-0.56,0.17l-0.88,1.82l0.11,0.49l1.36,1.07l-1.09,0.69l-0.69,1.11l0.18,0.56l1.24,0.57l-0.32,1.54l0.85,1.94l0.36,2.01l-0.22,0.59l-4.58,0.52l-0.33,0.42l0.13,1.8l-1.17,1.36l-3.65,1.81l-2.79,3.03l-4.32,3.28l-0.18,1.27l-4.65,1.79l-0.77,2.16l0.64,5.3l-1.06,2.49l-0.01,3.94l-1.24,0.28l-1.14,1.93l0.39,0.84l-1.68,0.53l-1.04,1.83l-0.65,0.47l-2.06,-2.05l-2.1,-6.02l-2.2,-3.64l-1.05,-4.75l-2.29,-3.57l-1.76,-8.2l0.01,-3.11l-0.49,-2.53l-0.55,-0.29l-3.53,1.52l-1.53,-0.27l-2.86,-2.77l0.85,-0.67l0.08,-0.55l-0.74,-1.03l-2.67,-2.06l1.24,-1.32l5.34,0.01l0.39,-0.49l-0.5,-2.29l-1.42,-1.46l-0.27,-1.93l-1.43,-1.2l2.31,-2.37l3.05,0.06l2.62,-2.85l1.6,-2.81l2.4,-2.73l0.07,-2.04l1.97,-1.48l-0.02,-0.65l-1.93,-1.31l-0.82,-1.78l-0.8,-2.21l0.9,-0.89l3.59,0.65l2.92,-0.42l2.33,-2.19l2.31,2.85l-0.24,2.13l0.99,1.59l-0.05,0.82l-1.34,-0.28l-0.47,0.48l0.7,3.06l2.62,1.99l2.99,1.65Z\",\n            name: \"India\"\n          },\n          TZ: {\n            path: \"M495.56,296.42l2.8,-3.12l-0.02,-0.81l-0.64,-1.3l0.68,-0.52l0.14,-1.47l-0.76,-1.25l0.31,-0.11l2.26,0.03l-0.51,2.76l0.76,1.3l0.5,0.12l1.05,-0.53l1.19,-0.12l0.61,0.24l1.43,-0.62l0.1,-0.67l-0.71,-0.62l1.57,-1.7l8.65,4.86l0.32,1.53l3.34,2.33l-1.05,2.8l0.13,1.61l1.63,1.12l-0.6,1.76l-0.01,2.33l1.89,4.03l0.57,0.43l-1.46,1.08l-2.61,0.94l-1.43,-0.04l-1.06,0.77l-2.29,0.36l-2.87,-0.68l-0.83,0.07l-0.63,-0.75l-0.31,-2.78l-1.32,-1.35l-3.25,-0.77l-3.96,-1.58l-1.18,-2.41l-0.32,-1.75l-1.76,-1.49l0.42,-1.05l-0.44,-0.89l0.08,-0.96l-0.46,-0.58l0.06,-0.56Z\",\n            name: \"Tanzania\"\n          },\n          AZ: {\n            path: \"M539.29,175.73l1.33,0.32l1.94,-1.8l2.3,3.34l1.43,0.43l-1.26,0.15l-0.35,0.32l-0.8,3.14l-0.99,0.96l0.05,1.11l-1.26,-1.13l0.7,-1.18l-0.04,-0.47l-0.74,-0.86l-1.48,0.15l-2.34,1.71l-0.03,-1.27l-2.03,-1.35l0.47,-0.62l-0.08,-0.56l-1.03,-0.79l0.29,-0.43l-0.14,-0.58l-1.13,-0.86l1.89,0.68l1.69,0.06l0.37,-0.87l-0.81,-1.37l0.42,0.06l1.63,1.72ZM533.78,180.57l0.61,0.46l0.69,-0.0l0.59,1.15l-0.68,-0.15l-1.21,-1.45Z\",\n            name: \"Azerbaijan\"\n          },\n          IE: {\n            path: \"M405.08,135.42l0.35,2.06l-1.75,2.78l-4.22,1.88l-2.84,-0.4l1.73,-3.0l-1.18,-3.53l4.6,-3.74l0.32,1.15l-0.49,1.74l0.4,0.51l1.47,-0.04l1.6,0.6Z\",\n            name: \"Ireland\"\n          },\n          ID: {\n            path: \"M756.47,287.89l0.69,4.01l2.79,1.78l0.51,-0.1l2.04,-2.59l2.71,-1.43l2.05,-0.0l3.9,1.73l2.46,0.45l0.08,15.12l-1.75,-1.54l-2.54,-0.51l-0.88,0.71l-2.32,0.06l0.69,-1.33l1.45,-0.64l0.23,-0.46l-0.65,-2.74l-1.24,-2.21l-5.04,-2.29l-2.09,-0.23l-3.68,-2.27l-0.55,0.13l-0.65,1.07l-0.52,0.12l-0.55,-1.89l-1.21,-0.78l1.84,-0.62l1.72,0.05l0.39,-0.52l-0.21,-0.66l-0.38,-0.28l-3.45,-0.0l-1.13,-1.48l-2.1,-0.43l-0.52,-0.6l2.69,-0.48l1.28,-0.78l3.66,0.94l0.3,0.71ZM757.91,300.34l-0.62,0.82l-0.1,-0.8l0.59,-1.12l0.13,1.1ZM747.38,292.98l0.34,0.72l-1.22,-0.57l-4.68,-0.1l0.27,-0.62l2.78,-0.09l2.52,0.67ZM741.05,285.25l-0.67,-2.88l0.64,-2.01l0.41,0.86l1.21,0.18l0.16,0.7l-0.1,1.68l-0.84,-0.16l-0.46,0.3l-0.34,1.34ZM739.05,293.5l-0.5,0.44l-1.34,-0.36l-0.17,-0.37l1.73,-0.08l0.27,0.36ZM721.45,284.51l-0.19,1.97l2.24,2.23l0.54,0.02l1.27,-1.07l2.75,-0.5l-0.9,1.21l-2.11,0.93l-0.16,0.6l2.22,3.01l-0.3,1.07l1.36,1.74l-2.26,0.85l-0.28,-0.31l0.12,-1.19l-1.64,-1.34l0.17,-2.23l-0.56,-0.39l-1.67,0.76l-0.23,0.39l0.3,6.17l-1.1,0.25l-0.69,-0.47l0.64,-2.21l-0.39,-2.42l-0.39,-0.34l-0.8,-0.01l-0.58,-1.29l0.98,-1.6l0.35,-1.96l1.32,-3.87ZM728.59,296.27l0.38,0.49l-0.02,1.28l-0.88,0.49l-0.53,-0.47l1.04,-1.79ZM729.04,286.98l0.27,-0.05l-0.02,0.13l-0.24,-0.08ZM721.68,284.05l0.16,-0.32l1.89,-1.65l1.83,0.68l3.16,0.35l2.94,-0.1l2.39,-1.66l-1.73,2.13l-1.66,0.43l-2.41,-0.48l-4.17,0.13l-2.39,0.51ZM730.55,310.47l1.11,-1.93l2.03,-0.82l0.08,0.62l-1.45,1.67l-1.77,0.46ZM728.12,305.88l-0.1,0.38l-3.46,0.66l-2.91,-0.27l-0.0,-0.25l1.54,-0.41l1.66,0.73l1.67,-0.19l1.61,-0.65ZM722.9,310.24l-0.64,0.03l-2.26,-1.2l1.11,-0.24l1.78,1.41ZM716.26,305.77l0.88,0.51l1.28,-0.17l0.2,0.35l-4.65,0.73l0.39,-0.67l1.15,-0.02l0.75,-0.73ZM711.66,293.84l-0.38,-0.16l-2.54,1.01l-1.12,-1.44l-1.69,-0.13l-1.16,-0.75l-3.04,0.77l-1.1,-1.15l-3.31,-0.11l-0.35,-3.05l-1.35,-0.95l-1.11,-1.98l-0.33,-2.06l0.27,-2.14l0.9,-1.01l0.37,1.15l2.09,1.49l1.53,-0.48l1.82,0.08l1.38,-1.19l1.0,-0.18l2.28,0.67l2.26,-0.53l1.52,-3.64l1.01,-0.99l0.78,-2.57l4.1,0.3l-1.11,1.77l0.02,0.46l1.7,2.2l-0.23,1.39l2.07,1.71l-2.33,0.42l-0.88,1.9l0.1,2.05l-2.4,1.9l-0.06,2.45l-0.7,2.79ZM692.58,302.03l0.35,0.26l4.8,0.25l0.78,-0.97l4.17,1.09l1.13,1.68l3.69,0.45l2.13,1.04l-1.8,0.6l-2.77,-0.99l-4.8,-0.12l-5.24,-1.41l-1.84,-0.25l-1.11,0.3l-4.26,-0.97l-0.7,-1.14l-1.59,-0.13l1.18,-1.65l2.74,0.13l2.87,1.13l0.26,0.68ZM685.53,299.17l-2.22,0.04l-2.06,-2.03l-3.15,-2.01l-2.93,-3.51l-3.11,-5.33l-2.2,-2.12l-1.64,-4.06l-2.32,-1.69l-1.27,-2.07l-1.96,-1.5l-2.51,-2.65l-0.11,-0.66l4.81,0.53l2.15,2.38l3.31,2.74l2.35,2.66l2.7,0.17l1.95,1.59l1.54,2.17l1.59,0.95l-0.84,1.71l0.15,0.52l1.44,0.87l0.79,0.1l0.4,1.58l0.87,1.4l1.96,0.39l1.0,1.31l-0.6,3.01l-0.09,3.5Z\",\n            name: \"Indonesia\"\n          },\n          UA: {\n            path: \"M492.5,162.44l1.28,-2.49l1.82,0.19l0.66,-0.23l0.09,-0.71l-0.25,-0.75l-0.79,-0.72l-0.33,-1.21l-0.86,-0.62l-0.02,-1.19l-1.13,-0.86l-1.15,-0.19l-2.04,-1.0l-1.66,0.32l-0.66,0.47l-0.92,-0.0l-0.84,0.78l-2.48,0.7l-1.18,-0.71l-3.07,-0.36l-0.89,0.43l-0.24,-0.55l-1.11,-0.7l0.35,-0.93l1.26,-1.02l-0.54,-1.23l2.04,-2.43l1.4,-0.62l0.25,-1.19l-1.04,-2.39l0.83,-0.13l1.28,-0.84l1.8,-0.07l2.47,0.26l2.86,0.81l1.88,0.06l0.86,0.44l1.04,-0.41l0.77,0.66l2.18,-0.15l0.92,0.3l0.52,-0.34l0.15,-1.53l0.56,-0.54l2.85,-0.05l0.84,-0.72l3.04,-0.18l1.23,1.46l-0.48,0.77l0.21,1.03l0.36,0.32l1.8,0.14l0.93,2.08l3.18,1.15l1.94,-0.45l1.67,1.49l1.4,-0.03l3.35,0.96l0.02,0.54l-0.96,1.59l0.47,1.97l-0.26,0.7l-2.36,0.28l-1.29,0.89l-0.23,1.38l-1.83,0.27l-1.58,0.97l-2.41,0.21l-2.16,1.17l-0.21,0.38l0.34,2.26l1.23,0.75l2.13,-0.08l-0.14,0.31l-2.65,0.53l-3.23,1.69l-0.87,-0.39l0.42,-1.1l-0.25,-0.52l-2.21,-0.73l2.35,-1.06l0.12,-0.65l-0.93,-0.82l-3.62,-0.74l-0.13,-0.89l-0.46,-0.34l-2.61,0.59l-0.91,1.69l-1.71,2.04l-0.86,-0.4l-1.62,0.27Z\",\n            name: \"Ukraine\"\n          },\n          QA: {\n            path: \"M549.33,221.64l-0.76,-0.23l-0.14,-1.64l0.84,-1.29l0.47,0.52l0.04,1.34l-0.45,1.3Z\",\n            name: \"Qatar\"\n          },\n          MZ: {\n            path: \"M508.58,318.75l-0.34,-2.57l0.51,-2.05l3.55,0.63l2.5,-0.38l1.02,-0.76l1.49,0.01l2.74,-0.98l1.66,-1.2l0.5,9.24l0.41,1.23l-0.68,1.67l-0.93,1.71l-1.5,1.5l-5.16,2.28l-2.78,2.73l-1.02,0.53l-1.71,1.8l-0.98,0.57l-0.35,2.41l1.16,1.94l0.49,2.17l0.43,0.31l-0.06,2.06l-0.39,1.17l0.5,0.72l-0.25,0.73l-0.92,0.83l-5.12,2.39l-1.22,1.36l0.21,1.13l0.58,0.39l-0.11,0.72l-1.22,-0.01l-0.73,-2.97l0.42,-3.09l-1.78,-5.37l2.49,-2.81l0.69,-1.89l0.44,-0.43l0.28,-1.53l-0.39,-0.93l0.59,-3.65l-0.01,-3.26l-1.49,-1.16l-1.2,-0.22l-1.74,-1.17l-1.92,0.01l-0.29,-2.08l7.06,-1.96l1.28,1.09l0.89,-0.1l0.67,0.44l0.1,0.73l-0.51,1.29l0.19,1.81l1.75,1.83l0.65,-0.13l0.71,-1.65l1.17,-0.86l-0.26,-3.47l-1.05,-1.85l-1.04,-0.94Z\",\n            name: \"Mozambique\"\n          }\n        },\n        height: 440.7063107441331,\n        projection: {\n          type: \"mill\",\n          centralMeridian: 11.5\n        },\n        width: 900\n      });\n    }).call(e, t(0));\n  }, function (l, e, t) {\n    t(0), t(24), l.exports = t(25);\n  }, function (l, e, t) {\n    (function (n, a) {\n      var c, i, r;\n      !function (l) {\n        var e = {\n          set: {\n            colors: 1,\n            values: 1,\n            backgroundColor: 1,\n            scaleColors: 1,\n            normalizeFunction: 1,\n            focus: 1\n          },\n          get: {\n            selectedRegions: 1,\n            selectedMarkers: 1,\n            mapObject: 1,\n            regionName: 1\n          }\n        };\n\n        l.fn.vectorMap = function (l) {\n          var t,\n              n,\n              t = this.children(\".jvectormap-container\").data(\"mapObject\");\n          if (\"addMap\" === l) o.Map.maps[arguments[1]] = arguments[2];else {\n            if ((\"set\" === l || \"get\" === l) && e[l][arguments[1]]) return n = arguments[1].charAt(0).toUpperCase() + arguments[1].substr(1), t[l + n].apply(t, Array.prototype.slice.call(arguments, 2));\n            l = l || {}, l.container = this, t = new o.Map(l);\n          }\n          return this;\n        };\n      }(n), function (n) {\n        i = [t(0)], c = n, void 0 !== (r = \"function\" === typeof c ? c.apply(e, i) : c) && (l.exports = r);\n      }(function (l) {\n        function e(e) {\n          var i = e || window.event,\n              r = o.call(arguments, 1),\n              s = 0,\n              h = 0,\n              p = 0,\n              u = 0;\n\n          if (e = l.event.fix(i), e.type = \"mousewheel\", \"detail\" in i && (p = -1 * i.detail), \"wheelDelta\" in i && (p = i.wheelDelta), \"wheelDeltaY\" in i && (p = i.wheelDeltaY), \"wheelDeltaX\" in i && (h = -1 * i.wheelDeltaX), \"axis\" in i && i.axis === i.HORIZONTAL_AXIS && (h = -1 * p, p = 0), s = 0 === p ? h : p, \"deltaY\" in i && (p = -1 * i.deltaY, s = p), \"deltaX\" in i && (h = i.deltaX, 0 === p && (s = -1 * h)), 0 !== p || 0 !== h) {\n            if (1 === i.deltaMode) {\n              var M = l.data(this, \"mousewheel-line-height\");\n              s *= M, p *= M, h *= M;\n            } else if (2 === i.deltaMode) {\n              var f = l.data(this, \"mousewheel-page-height\");\n              s *= f, p *= f, h *= f;\n            }\n\n            return u = Math.max(Math.abs(p), Math.abs(h)), (!c || c > u) && (c = u, n(i, u) && (c /= 40)), n(i, u) && (s /= 40, h /= 40, p /= 40), s = Math[s >= 1 ? \"floor\" : \"ceil\"](s / c), h = Math[h >= 1 ? \"floor\" : \"ceil\"](h / c), p = Math[p >= 1 ? \"floor\" : \"ceil\"](p / c), e.deltaX = h, e.deltaY = p, e.deltaFactor = c, e.deltaMode = 0, r.unshift(e, s, h, p), a && clearTimeout(a), a = setTimeout(t, 200), (l.event.dispatch || l.event.handle).apply(this, r);\n          }\n        }\n\n        function t() {\n          c = null;\n        }\n\n        function n(l, e) {\n          return h.settings.adjustOldDeltas && \"mousewheel\" === l.type && e % 120 === 0;\n        }\n\n        var a,\n            c,\n            i = [\"wheel\", \"mousewheel\", \"DOMMouseScroll\", \"MozMousePixelScroll\"],\n            r = \"onwheel\" in document || document.documentMode >= 9 ? [\"wheel\"] : [\"mousewheel\", \"DomMouseScroll\", \"MozMousePixelScroll\"],\n            o = Array.prototype.slice;\n        if (l.event.fixHooks) for (var s = i.length; s;) {\n          l.event.fixHooks[i[--s]] = l.event.mouseHooks;\n        }\n        var h = l.event.special.mousewheel = {\n          version: \"3.1.9\",\n          setup: function setup() {\n            if (this.addEventListener) for (var t = r.length; t;) {\n              this.addEventListener(r[--t], e, !1);\n            } else this.onmousewheel = e;\n            l.data(this, \"mousewheel-line-height\", h.getLineHeight(this)), l.data(this, \"mousewheel-page-height\", h.getPageHeight(this));\n          },\n          teardown: function teardown() {\n            if (this.removeEventListener) for (var l = r.length; l;) {\n              this.removeEventListener(r[--l], e, !1);\n            } else this.onmousewheel = null;\n          },\n          getLineHeight: function getLineHeight(e) {\n            return parseInt(l(e)[\"offsetParent\" in l.fn ? \"offsetParent\" : \"parent\"]().css(\"fontSize\"), 10);\n          },\n          getPageHeight: function getPageHeight(e) {\n            return l(e).height();\n          },\n          settings: {\n            adjustOldDeltas: !0\n          }\n        };\n        l.fn.extend({\n          mousewheel: function mousewheel(l) {\n            return l ? this.bind(\"mousewheel\", l) : this.trigger(\"mousewheel\");\n          },\n          unmousewheel: function unmousewheel(l) {\n            return this.unbind(\"mousewheel\", l);\n          }\n        });\n      });\n      var o = {\n        inherits: function inherits(l, e) {\n          function t() {}\n\n          t.prototype = e.prototype, l.prototype = new t(), l.prototype.constructor = l, l.parentClass = e;\n        },\n        mixin: function mixin(l, e) {\n          var t;\n\n          for (t in e.prototype) {\n            e.prototype.hasOwnProperty(t) && (l.prototype[t] = e.prototype[t]);\n          }\n        },\n        min: function min(l) {\n          var e,\n              t = Number.MAX_VALUE;\n          if (l instanceof Array) for (e = 0; e < l.length; e++) {\n            l[e] < t && (t = l[e]);\n          } else for (e in l) {\n            l[e] < t && (t = l[e]);\n          }\n          return t;\n        },\n        max: function max(l) {\n          var e,\n              t = Number.MIN_VALUE;\n          if (l instanceof Array) for (e = 0; e < l.length; e++) {\n            l[e] > t && (t = l[e]);\n          } else for (e in l) {\n            l[e] > t && (t = l[e]);\n          }\n          return t;\n        },\n        keys: function keys(l) {\n          var e,\n              t = [];\n\n          for (e in l) {\n            t.push(e);\n          }\n\n          return t;\n        },\n        values: function values(l) {\n          var e,\n              t,\n              n = [];\n\n          for (t = 0; t < arguments.length; t++) {\n            l = arguments[t];\n\n            for (e in l) {\n              n.push(l[e]);\n            }\n          }\n\n          return n;\n        },\n        whenImageLoaded: function whenImageLoaded(l) {\n          var e = new o.$.Deferred(),\n              t = o.$(\"<img/>\");\n          return t.error(function () {\n            e.reject();\n          }).load(function () {\n            e.resolve(t);\n          }), t.attr(\"src\", l), e;\n        },\n        isImageUrl: function isImageUrl(l) {\n          return /\\.\\w{3,4}$/.test(l);\n        }\n      };\n      o.$ = n, Array.prototype.indexOf || (Array.prototype.indexOf = function (l, e) {\n        var t;\n        if (null == this) throw new TypeError('\"this\" is null or not defined');\n        var n = Object(this),\n            a = n.length >>> 0;\n        if (0 === a) return -1;\n        var c = +e || 0;\n        if (Math.abs(c) === 1 / 0 && (c = 0), c >= a) return -1;\n\n        for (t = Math.max(c >= 0 ? c : a - Math.abs(c), 0); a > t;) {\n          if (t in n && n[t] === l) return t;\n          t++;\n        }\n\n        return -1;\n      }), o.AbstractElement = function (l, e) {\n        this.node = this.createElement(l), this.name = l, this.properties = {}, e && this.set(e);\n      }, o.AbstractElement.prototype.set = function (l, e) {\n        var t;\n        if (\"object\" == typeof l) for (t in l) {\n          this.properties[t] = l[t], this.applyAttr(t, l[t]);\n        } else this.properties[l] = e, this.applyAttr(l, e);\n      }, o.AbstractElement.prototype.get = function (l) {\n        return this.properties[l];\n      }, o.AbstractElement.prototype.applyAttr = function (l, e) {\n        this.node.setAttribute(l, e);\n      }, o.AbstractElement.prototype.remove = function () {\n        o.$(this.node).remove();\n      }, o.AbstractCanvasElement = function (l, e, t) {\n        this.container = l, this.setSize(e, t), this.rootElement = new o[this.classPrefix + \"GroupElement\"](), this.node.appendChild(this.rootElement.node), this.container.appendChild(this.node);\n      }, o.AbstractCanvasElement.prototype.add = function (l, e) {\n        e = e || this.rootElement, e.add(l), l.canvas = this;\n      }, o.AbstractCanvasElement.prototype.addPath = function (l, e, t) {\n        var n = new o[this.classPrefix + \"PathElement\"](l, e);\n        return this.add(n, t), n;\n      }, o.AbstractCanvasElement.prototype.addCircle = function (l, e, t) {\n        var n = new o[this.classPrefix + \"CircleElement\"](l, e);\n        return this.add(n, t), n;\n      }, o.AbstractCanvasElement.prototype.addImage = function (l, e, t) {\n        var n = new o[this.classPrefix + \"ImageElement\"](l, e);\n        return this.add(n, t), n;\n      }, o.AbstractCanvasElement.prototype.addText = function (l, e, t) {\n        var n = new o[this.classPrefix + \"TextElement\"](l, e);\n        return this.add(n, t), n;\n      }, o.AbstractCanvasElement.prototype.addGroup = function (l) {\n        var e = new o[this.classPrefix + \"GroupElement\"]();\n        return l ? l.node.appendChild(e.node) : this.node.appendChild(e.node), e.canvas = this, e;\n      }, o.AbstractShapeElement = function (l, e, t) {\n        this.style = t || {}, this.style.current = this.style.current || {}, this.isHovered = !1, this.isSelected = !1, this.updateStyle();\n      }, o.AbstractShapeElement.prototype.setStyle = function (l, e) {\n        var t = {};\n        \"object\" == typeof l ? t = l : t[l] = e, o.$.extend(this.style.current, t), this.updateStyle();\n      }, o.AbstractShapeElement.prototype.updateStyle = function () {\n        var l = {};\n        o.AbstractShapeElement.mergeStyles(l, this.style.initial), o.AbstractShapeElement.mergeStyles(l, this.style.current), this.isHovered && o.AbstractShapeElement.mergeStyles(l, this.style.hover), this.isSelected && (o.AbstractShapeElement.mergeStyles(l, this.style.selected), this.isHovered && o.AbstractShapeElement.mergeStyles(l, this.style.selectedHover)), this.set(l);\n      }, o.AbstractShapeElement.mergeStyles = function (l, e) {\n        var t;\n        e = e || {};\n\n        for (t in e) {\n          null === e[t] ? delete l[t] : l[t] = e[t];\n        }\n      }, o.SVGElement = function () {\n        o.SVGElement.parentClass.apply(this, arguments);\n      }, o.inherits(o.SVGElement, o.AbstractElement), o.SVGElement.svgns = \"http://www.w3.org/2000/svg\", o.SVGElement.prototype.createElement = function (l) {\n        return document.createElementNS(o.SVGElement.svgns, l);\n      }, o.SVGElement.prototype.addClass = function (l) {\n        this.node.setAttribute(\"class\", l);\n      }, o.SVGElement.prototype.getElementCtr = function (l) {\n        return o[\"SVG\" + l];\n      }, o.SVGElement.prototype.getBBox = function () {\n        return this.node.getBBox();\n      }, o.SVGGroupElement = function () {\n        o.SVGGroupElement.parentClass.call(this, \"g\");\n      }, o.inherits(o.SVGGroupElement, o.SVGElement), o.SVGGroupElement.prototype.add = function (l) {\n        this.node.appendChild(l.node);\n      }, o.SVGCanvasElement = function () {\n        this.classPrefix = \"SVG\", o.SVGCanvasElement.parentClass.call(this, \"svg\"), this.defsElement = new o.SVGElement(\"defs\"), this.node.appendChild(this.defsElement.node), o.AbstractCanvasElement.apply(this, arguments);\n      }, o.inherits(o.SVGCanvasElement, o.SVGElement), o.mixin(o.SVGCanvasElement, o.AbstractCanvasElement), o.SVGCanvasElement.prototype.setSize = function (l, e) {\n        this.width = l, this.height = e, this.node.setAttribute(\"width\", l), this.node.setAttribute(\"height\", e);\n      }, o.SVGCanvasElement.prototype.applyTransformParams = function (l, e, t) {\n        this.scale = l, this.transX = e, this.transY = t, this.rootElement.node.setAttribute(\"transform\", \"scale(\" + l + \") translate(\" + e + \", \" + t + \")\");\n      }, o.SVGShapeElement = function (l, e) {\n        o.SVGShapeElement.parentClass.call(this, l, e), o.AbstractShapeElement.apply(this, arguments);\n      }, o.inherits(o.SVGShapeElement, o.SVGElement), o.mixin(o.SVGShapeElement, o.AbstractShapeElement), o.SVGShapeElement.prototype.applyAttr = function (l, e) {\n        var t,\n            n,\n            a = this;\n        \"fill\" === l && o.isImageUrl(e) ? o.SVGShapeElement.images[e] ? this.applyAttr(\"fill\", \"url(#image\" + o.SVGShapeElement.images[e] + \")\") : o.whenImageLoaded(e).then(function (l) {\n          n = new o.SVGElement(\"image\"), n.node.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", e), n.applyAttr(\"x\", \"0\"), n.applyAttr(\"y\", \"0\"), n.applyAttr(\"width\", l[0].width), n.applyAttr(\"height\", l[0].height), t = new o.SVGElement(\"pattern\"), t.applyAttr(\"id\", \"image\" + o.SVGShapeElement.imageCounter), t.applyAttr(\"x\", 0), t.applyAttr(\"y\", 0), t.applyAttr(\"width\", l[0].width / 2), t.applyAttr(\"height\", l[0].height / 2), t.applyAttr(\"viewBox\", \"0 0 \" + l[0].width + \" \" + l[0].height), t.applyAttr(\"patternUnits\", \"userSpaceOnUse\"), t.node.appendChild(n.node), a.canvas.defsElement.node.appendChild(t.node), o.SVGShapeElement.images[e] = o.SVGShapeElement.imageCounter++, a.applyAttr(\"fill\", \"url(#image\" + o.SVGShapeElement.images[e] + \")\");\n        }) : o.SVGShapeElement.parentClass.prototype.applyAttr.apply(this, arguments);\n      }, o.SVGShapeElement.imageCounter = 1, o.SVGShapeElement.images = {}, o.SVGPathElement = function (l, e) {\n        o.SVGPathElement.parentClass.call(this, \"path\", l, e), this.node.setAttribute(\"fill-rule\", \"evenodd\");\n      }, o.inherits(o.SVGPathElement, o.SVGShapeElement), o.SVGCircleElement = function (l, e) {\n        o.SVGCircleElement.parentClass.call(this, \"circle\", l, e);\n      }, o.inherits(o.SVGCircleElement, o.SVGShapeElement), o.SVGImageElement = function (l, e) {\n        o.SVGImageElement.parentClass.call(this, \"image\", l, e);\n      }, o.inherits(o.SVGImageElement, o.SVGShapeElement), o.SVGImageElement.prototype.applyAttr = function (l, e) {\n        var t = this;\n        \"image\" == l ? o.whenImageLoaded(e).then(function (l) {\n          t.node.setAttributeNS(\"http://www.w3.org/1999/xlink\", \"href\", e), t.width = l[0].width, t.height = l[0].height, t.applyAttr(\"width\", t.width), t.applyAttr(\"height\", t.height), t.applyAttr(\"x\", t.cx - t.width / 2), t.applyAttr(\"y\", t.cy - t.height / 2), o.$(t.node).trigger(\"imageloaded\", [l]);\n        }) : \"cx\" == l ? (this.cx = e, this.width && this.applyAttr(\"x\", e - this.width / 2)) : \"cy\" == l ? (this.cy = e, this.height && this.applyAttr(\"y\", e - this.height / 2)) : o.SVGImageElement.parentClass.prototype.applyAttr.apply(this, arguments);\n      }, o.SVGTextElement = function (l, e) {\n        o.SVGTextElement.parentClass.call(this, \"text\", l, e);\n      }, o.inherits(o.SVGTextElement, o.SVGShapeElement), o.SVGTextElement.prototype.applyAttr = function (l, e) {\n        \"text\" === l ? this.node.textContent = e : o.SVGTextElement.parentClass.prototype.applyAttr.apply(this, arguments);\n      }, o.VMLElement = function () {\n        o.VMLElement.VMLInitialized || o.VMLElement.initializeVML(), o.VMLElement.parentClass.apply(this, arguments);\n      }, o.inherits(o.VMLElement, o.AbstractElement), o.VMLElement.VMLInitialized = !1, o.VMLElement.initializeVML = function () {\n        try {\n          document.namespaces.rvml || document.namespaces.add(\"rvml\", \"urn:schemas-microsoft-com:vml\"), o.VMLElement.prototype.createElement = function (l) {\n            return document.createElement(\"<rvml:\" + l + ' class=\"rvml\">');\n          };\n        } catch (l) {\n          o.VMLElement.prototype.createElement = function (l) {\n            return document.createElement(\"<\" + l + ' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"rvml\">');\n          };\n        }\n\n        document.createStyleSheet().addRule(\".rvml\", \"behavior:url(#default#VML)\"), o.VMLElement.VMLInitialized = !0;\n      }, o.VMLElement.prototype.getElementCtr = function (l) {\n        return o[\"VML\" + l];\n      }, o.VMLElement.prototype.addClass = function (l) {\n        o.$(this.node).addClass(l);\n      }, o.VMLElement.prototype.applyAttr = function (l, e) {\n        this.node[l] = e;\n      }, o.VMLElement.prototype.getBBox = function () {\n        var l = o.$(this.node);\n        return {\n          x: l.position().left / this.canvas.scale,\n          y: l.position().top / this.canvas.scale,\n          width: l.width() / this.canvas.scale,\n          height: l.height() / this.canvas.scale\n        };\n      }, o.VMLGroupElement = function () {\n        o.VMLGroupElement.parentClass.call(this, \"group\"), this.node.style.left = \"0px\", this.node.style.top = \"0px\", this.node.coordorigin = \"0 0\";\n      }, o.inherits(o.VMLGroupElement, o.VMLElement), o.VMLGroupElement.prototype.add = function (l) {\n        this.node.appendChild(l.node);\n      }, o.VMLCanvasElement = function () {\n        this.classPrefix = \"VML\", o.VMLCanvasElement.parentClass.call(this, \"group\"), o.AbstractCanvasElement.apply(this, arguments), this.node.style.position = \"absolute\";\n      }, o.inherits(o.VMLCanvasElement, o.VMLElement), o.mixin(o.VMLCanvasElement, o.AbstractCanvasElement), o.VMLCanvasElement.prototype.setSize = function (l, e) {\n        var t, n, a, c;\n\n        if (this.width = l, this.height = e, this.node.style.width = l + \"px\", this.node.style.height = e + \"px\", this.node.coordsize = l + \" \" + e, this.node.coordorigin = \"0 0\", this.rootElement) {\n          for (t = this.rootElement.node.getElementsByTagName(\"shape\"), a = 0, c = t.length; c > a; a++) {\n            t[a].coordsize = l + \" \" + e, t[a].style.width = l + \"px\", t[a].style.height = e + \"px\";\n          }\n\n          for (n = this.node.getElementsByTagName(\"group\"), a = 0, c = n.length; c > a; a++) {\n            n[a].coordsize = l + \" \" + e, n[a].style.width = l + \"px\", n[a].style.height = e + \"px\";\n          }\n        }\n      }, o.VMLCanvasElement.prototype.applyTransformParams = function (l, e, t) {\n        this.scale = l, this.transX = e, this.transY = t, this.rootElement.node.coordorigin = this.width - e - this.width / 100 + \",\" + (this.height - t - this.height / 100), this.rootElement.node.coordsize = this.width / l + \",\" + this.height / l;\n      }, o.VMLShapeElement = function (l, e) {\n        o.VMLShapeElement.parentClass.call(this, l, e), this.fillElement = new o.VMLElement(\"fill\"), this.strokeElement = new o.VMLElement(\"stroke\"), this.node.appendChild(this.fillElement.node), this.node.appendChild(this.strokeElement.node), this.node.stroked = !1, o.AbstractShapeElement.apply(this, arguments);\n      }, o.inherits(o.VMLShapeElement, o.VMLElement), o.mixin(o.VMLShapeElement, o.AbstractShapeElement), o.VMLShapeElement.prototype.applyAttr = function (l, e) {\n        switch (l) {\n          case \"fill\":\n            this.node.fillcolor = e;\n            break;\n\n          case \"fill-opacity\":\n            this.fillElement.node.opacity = Math.round(100 * e) + \"%\";\n            break;\n\n          case \"stroke\":\n            this.node.stroked = \"none\" !== e, this.node.strokecolor = e;\n            break;\n\n          case \"stroke-opacity\":\n            this.strokeElement.node.opacity = Math.round(100 * e) + \"%\";\n            break;\n\n          case \"stroke-width\":\n            this.node.stroked = 0 !== parseInt(e, 10), this.node.strokeweight = e;\n            break;\n\n          case \"d\":\n            this.node.path = o.VMLPathElement.pathSvgToVml(e);\n            break;\n\n          default:\n            o.VMLShapeElement.parentClass.prototype.applyAttr.apply(this, arguments);\n        }\n      }, o.VMLPathElement = function (l, e) {\n        var t = new o.VMLElement(\"skew\");\n        o.VMLPathElement.parentClass.call(this, \"shape\", l, e), this.node.coordorigin = \"0 0\", t.node.on = !0, t.node.matrix = \"0.01,0,0,0.01,0,0\", t.node.offset = \"0,0\", this.node.appendChild(t.node);\n      }, o.inherits(o.VMLPathElement, o.VMLShapeElement), o.VMLPathElement.prototype.applyAttr = function (l, e) {\n        \"d\" === l ? this.node.path = o.VMLPathElement.pathSvgToVml(e) : o.VMLShapeElement.prototype.applyAttr.call(this, l, e);\n      }, o.VMLPathElement.pathSvgToVml = function (l) {\n        var e,\n            t,\n            n = 0,\n            a = 0;\n        return l = l.replace(/(-?\\d+)e(-?\\d+)/g, \"0\"), l.replace(/([MmLlHhVvCcSs])\\s*((?:-?\\d*(?:\\.\\d+)?\\s*,?\\s*)+)/g, function (l, c, i) {\n          i = i.replace(/(\\d)-/g, \"$1,-\").replace(/^\\s+/g, \"\").replace(/\\s+$/g, \"\").replace(/\\s+/g, \",\").split(\",\"), i[0] || i.shift();\n\n          for (var r = 0, o = i.length; o > r; r++) {\n            i[r] = Math.round(100 * i[r]);\n          }\n\n          switch (c) {\n            case \"m\":\n              return n += i[0], a += i[1], \"t\" + i.join(\",\");\n\n            case \"M\":\n              return n = i[0], a = i[1], \"m\" + i.join(\",\");\n\n            case \"l\":\n              return n += i[0], a += i[1], \"r\" + i.join(\",\");\n\n            case \"L\":\n              return n = i[0], a = i[1], \"l\" + i.join(\",\");\n\n            case \"h\":\n              return n += i[0], \"r\" + i[0] + \",0\";\n\n            case \"H\":\n              return \"l\" + (n = i[0]) + \",\" + a;\n\n            case \"v\":\n              return a += i[0], \"r0,\" + i[0];\n\n            case \"V\":\n              return a = i[0], \"l\" + n + \",\" + a;\n\n            case \"c\":\n              return e = n + i[i.length - 4], t = a + i[i.length - 3], n += i[i.length - 2], a += i[i.length - 1], \"v\" + i.join(\",\");\n\n            case \"C\":\n              return e = i[i.length - 4], t = i[i.length - 3], n = i[i.length - 2], a = i[i.length - 1], \"c\" + i.join(\",\");\n\n            case \"s\":\n              return i.unshift(a - t), i.unshift(n - e), e = n + i[i.length - 4], t = a + i[i.length - 3], n += i[i.length - 2], a += i[i.length - 1], \"v\" + i.join(\",\");\n\n            case \"S\":\n              return i.unshift(a + a - t), i.unshift(n + n - e), e = i[i.length - 4], t = i[i.length - 3], n = i[i.length - 2], a = i[i.length - 1], \"c\" + i.join(\",\");\n          }\n\n          return \"\";\n        }).replace(/z/g, \"e\");\n      }, o.VMLCircleElement = function (l, e) {\n        o.VMLCircleElement.parentClass.call(this, \"oval\", l, e);\n      }, o.inherits(o.VMLCircleElement, o.VMLShapeElement), o.VMLCircleElement.prototype.applyAttr = function (l, e) {\n        switch (l) {\n          case \"r\":\n            this.node.style.width = 2 * e + \"px\", this.node.style.height = 2 * e + \"px\", this.applyAttr(\"cx\", this.get(\"cx\") || 0), this.applyAttr(\"cy\", this.get(\"cy\") || 0);\n            break;\n\n          case \"cx\":\n            if (!e) return;\n            this.node.style.left = e - (this.get(\"r\") || 0) + \"px\";\n            break;\n\n          case \"cy\":\n            if (!e) return;\n            this.node.style.top = e - (this.get(\"r\") || 0) + \"px\";\n            break;\n\n          default:\n            o.VMLCircleElement.parentClass.prototype.applyAttr.call(this, l, e);\n        }\n      }, o.VectorCanvas = function (l, e, t) {\n        return this.mode = window.SVGAngle ? \"svg\" : \"vml\", this.impl = \"svg\" == this.mode ? new o.SVGCanvasElement(l, e, t) : new o.VMLCanvasElement(l, e, t), this.impl.mode = this.mode, this.impl;\n      }, o.SimpleScale = function (l) {\n        this.scale = l;\n      }, o.SimpleScale.prototype.getValue = function (l) {\n        return l;\n      }, o.OrdinalScale = function (l) {\n        this.scale = l;\n      }, o.OrdinalScale.prototype.getValue = function (l) {\n        return this.scale[l];\n      }, o.OrdinalScale.prototype.getTicks = function () {\n        var l,\n            e = [];\n\n        for (l in this.scale) {\n          e.push({\n            label: l,\n            value: this.scale[l]\n          });\n        }\n\n        return e;\n      }, o.NumericScale = function (l, e, t, n) {\n        this.scale = [], e = e || \"linear\", l && this.setScale(l), e && this.setNormalizeFunction(e), \"undefined\" != typeof t && this.setMin(t), \"undefined\" != typeof n && this.setMax(n);\n      }, o.NumericScale.prototype = {\n        setMin: function setMin(l) {\n          this.clearMinValue = l, this.minValue = \"function\" == typeof this.normalize ? this.normalize(l) : l;\n        },\n        setMax: function setMax(l) {\n          this.clearMaxValue = l, this.maxValue = \"function\" == typeof this.normalize ? this.normalize(l) : l;\n        },\n        setScale: function setScale(l) {\n          var e;\n\n          for (this.scale = [], e = 0; e < l.length; e++) {\n            this.scale[e] = [l[e]];\n          }\n        },\n        setNormalizeFunction: function setNormalizeFunction(l) {\n          \"polynomial\" === l ? this.normalize = function (l) {\n            return Math.pow(l, .2);\n          } : \"linear\" === l ? delete this.normalize : this.normalize = l, this.setMin(this.clearMinValue), this.setMax(this.clearMaxValue);\n        },\n        getValue: function getValue(l) {\n          var e,\n              t,\n              n = [],\n              a = 0,\n              c = 0;\n\n          for (\"function\" == typeof this.normalize && (l = this.normalize(l)), c = 0; c < this.scale.length - 1; c++) {\n            e = this.vectorLength(this.vectorSubtract(this.scale[c + 1], this.scale[c])), n.push(e), a += e;\n          }\n\n          for (t = (this.maxValue - this.minValue) / a, c = 0; c < n.length; c++) {\n            n[c] *= t;\n          }\n\n          for (c = 0, l -= this.minValue; l - n[c] >= 0;) {\n            l -= n[c], c++;\n          }\n\n          return l = this.vectorToNum(c == this.scale.length - 1 ? this.scale[c] : this.vectorAdd(this.scale[c], this.vectorMult(this.vectorSubtract(this.scale[c + 1], this.scale[c]), l / n[c])));\n        },\n        vectorToNum: function vectorToNum(l) {\n          var e,\n              t = 0;\n\n          for (e = 0; e < l.length; e++) {\n            t += Math.round(l[e]) * Math.pow(256, l.length - e - 1);\n          }\n\n          return t;\n        },\n        vectorSubtract: function vectorSubtract(l, e) {\n          var t,\n              n = [];\n\n          for (t = 0; t < l.length; t++) {\n            n[t] = l[t] - e[t];\n          }\n\n          return n;\n        },\n        vectorAdd: function vectorAdd(l, e) {\n          var t,\n              n = [];\n\n          for (t = 0; t < l.length; t++) {\n            n[t] = l[t] + e[t];\n          }\n\n          return n;\n        },\n        vectorMult: function vectorMult(l, e) {\n          var t,\n              n = [];\n\n          for (t = 0; t < l.length; t++) {\n            n[t] = l[t] * e;\n          }\n\n          return n;\n        },\n        vectorLength: function vectorLength(l) {\n          var e,\n              t = 0;\n\n          for (e = 0; e < l.length; e++) {\n            t += l[e] * l[e];\n          }\n\n          return Math.sqrt(t);\n        },\n        getTicks: function getTicks() {\n          var l,\n              e,\n              t = [this.clearMinValue, this.clearMaxValue],\n              n = t[1] - t[0],\n              a = Math.pow(10, Math.floor(Math.log(n / 5) / Math.LN10)),\n              c = 5 / n * a,\n              i = [];\n\n          for (.15 >= c ? a *= 10 : .35 >= c ? a *= 5 : .75 >= c && (a *= 2), t[0] = Math.floor(t[0] / a) * a, t[1] = Math.ceil(t[1] / a) * a, l = t[0]; l <= t[1];) {\n            e = l == t[0] ? this.clearMinValue : l == t[1] ? this.clearMaxValue : l, i.push({\n              label: l,\n              value: this.getValue(e)\n            }), l += a;\n          }\n\n          return i;\n        }\n      }, o.ColorScale = function () {\n        o.ColorScale.parentClass.apply(this, arguments);\n      }, o.inherits(o.ColorScale, o.NumericScale), o.ColorScale.prototype.setScale = function (l) {\n        var e;\n\n        for (e = 0; e < l.length; e++) {\n          this.scale[e] = o.ColorScale.rgbToArray(l[e]);\n        }\n      }, o.ColorScale.prototype.getValue = function (l) {\n        return o.ColorScale.numToRgb(o.ColorScale.parentClass.prototype.getValue.call(this, l));\n      }, o.ColorScale.arrayToRgb = function (l) {\n        var e,\n            t,\n            n = \"#\";\n\n        for (t = 0; t < l.length; t++) {\n          e = l[t].toString(16), n += 1 == e.length ? \"0\" + e : e;\n        }\n\n        return n;\n      }, o.ColorScale.numToRgb = function (l) {\n        for (l = l.toString(16); l.length < 6;) {\n          l = \"0\" + l;\n        }\n\n        return \"#\" + l;\n      }, o.ColorScale.rgbToArray = function (l) {\n        return l = l.substr(1), [parseInt(l.substr(0, 2), 16), parseInt(l.substr(2, 2), 16), parseInt(l.substr(4, 2), 16)];\n      }, o.Legend = function (l) {\n        this.params = l || {}, this.map = this.params.map, this.series = this.params.series, this.body = o.$(\"<div/>\"), this.body.addClass(\"jvectormap-legend\"), this.params.cssClass && this.body.addClass(this.params.cssClass), l.vertical ? this.map.legendCntVertical.append(this.body) : this.map.legendCntHorizontal.append(this.body), this.render();\n      }, o.Legend.prototype.render = function () {\n        var l,\n            e,\n            t,\n            n,\n            a = this.series.scale.getTicks(),\n            c = o.$(\"<div/>\").addClass(\"jvectormap-legend-inner\");\n\n        for (this.body.html(\"\"), this.params.title && this.body.append(o.$(\"<div/>\").addClass(\"jvectormap-legend-title\").html(this.params.title)), this.body.append(c), l = 0; l < a.length; l++) {\n          switch (e = o.$(\"<div/>\").addClass(\"jvectormap-legend-tick\"), t = o.$(\"<div/>\").addClass(\"jvectormap-legend-tick-sample\"), this.series.params.attribute) {\n            case \"fill\":\n              o.isImageUrl(a[l].value) ? t.css(\"background\", \"url(\" + a[l].value + \")\") : t.css(\"background\", a[l].value);\n              break;\n\n            case \"stroke\":\n              t.css(\"background\", a[l].value);\n              break;\n\n            case \"image\":\n              t.css(\"background\", \"url(\" + a[l].value + \") no-repeat center center\");\n              break;\n\n            case \"r\":\n              o.$(\"<div/>\").css({\n                \"border-radius\": a[l].value,\n                border: this.map.params.markerStyle.initial[\"stroke-width\"] + \"px \" + this.map.params.markerStyle.initial.stroke + \" solid\",\n                width: 2 * a[l].value + \"px\",\n                height: 2 * a[l].value + \"px\",\n                background: this.map.params.markerStyle.initial.fill\n              }).appendTo(t);\n          }\n\n          e.append(t), n = a[l].label, this.params.labelRender && (n = this.params.labelRender(n)), e.append(o.$(\"<div>\" + n + \" </div>\").addClass(\"jvectormap-legend-tick-text\")), c.append(e);\n        }\n\n        c.append(o.$(\"<div/>\").css(\"clear\", \"both\"));\n      }, o.DataSeries = function (l, e, t) {\n        var n;\n        l = l || {}, l.attribute = l.attribute || \"fill\", this.elements = e, this.params = l, this.map = t, l.attributes && this.setAttributes(l.attributes), o.$.isArray(l.scale) ? (n = \"fill\" === l.attribute || \"stroke\" === l.attribute ? o.ColorScale : o.NumericScale, this.scale = new n(l.scale, l.normalizeFunction, l.min, l.max)) : this.scale = l.scale ? new o.OrdinalScale(l.scale) : new o.SimpleScale(l.scale), this.values = l.values || {}, this.setValues(this.values), this.params.legend && (this.legend = new o.Legend(a.extend({\n          map: this.map,\n          series: this\n        }, this.params.legend)));\n      }, o.DataSeries.prototype = {\n        setAttributes: function setAttributes(l, e) {\n          var t,\n              n = l;\n          if (\"string\" == typeof l) this.elements[l] && this.elements[l].setStyle(this.params.attribute, e);else for (t in n) {\n            this.elements[t] && this.elements[t].element.setStyle(this.params.attribute, n[t]);\n          }\n        },\n        setValues: function setValues(l) {\n          var e,\n              t,\n              n = -Number.MAX_VALUE,\n              a = Number.MAX_VALUE,\n              c = {};\n          if (this.scale instanceof o.OrdinalScale || this.scale instanceof o.SimpleScale) for (t in l) {\n            c[t] = l[t] ? this.scale.getValue(l[t]) : this.elements[t].element.style.initial[this.params.attribute];\n          } else {\n            if (\"undefined\" == typeof this.params.min || \"undefined\" == typeof this.params.max) for (t in l) {\n              e = parseFloat(l[t]), e > n && (n = e), a > e && (a = e);\n            }\n            \"undefined\" == typeof this.params.min ? (this.scale.setMin(a), this.params.min = a) : this.scale.setMin(this.params.min), \"undefined\" == typeof this.params.max ? (this.scale.setMax(n), this.params.max = n) : this.scale.setMax(this.params.max);\n\n            for (t in l) {\n              \"indexOf\" != t && (e = parseFloat(l[t]), c[t] = isNaN(e) ? this.elements[t].element.style.initial[this.params.attribute] : this.scale.getValue(e));\n            }\n          }\n          this.setAttributes(c), o.$.extend(this.values, l);\n        },\n        clear: function clear() {\n          var l,\n              e = {};\n\n          for (l in this.values) {\n            this.elements[l] && (e[l] = this.elements[l].element.shape.style.initial[this.params.attribute]);\n          }\n\n          this.setAttributes(e), this.values = {};\n        },\n        setScale: function setScale(l) {\n          this.scale.setScale(l), this.values && this.setValues(this.values);\n        },\n        setNormalizeFunction: function setNormalizeFunction(l) {\n          this.scale.setNormalizeFunction(l), this.values && this.setValues(this.values);\n        }\n      }, o.Proj = {\n        degRad: 180 / Math.PI,\n        radDeg: Math.PI / 180,\n        radius: 6381372,\n        sgn: function sgn(l) {\n          return l > 0 ? 1 : 0 > l ? -1 : l;\n        },\n        mill: function mill(l, e, t) {\n          return {\n            x: this.radius * (e - t) * this.radDeg,\n            y: -this.radius * Math.log(Math.tan((45 + .4 * l) * this.radDeg)) / .8\n          };\n        },\n        mill_inv: function mill_inv(l, e, t) {\n          return {\n            lat: (2.5 * Math.atan(Math.exp(.8 * e / this.radius)) - 5 * Math.PI / 8) * this.degRad,\n            lng: (t * this.radDeg + l / this.radius) * this.degRad\n          };\n        },\n        merc: function merc(l, e, t) {\n          return {\n            x: this.radius * (e - t) * this.radDeg,\n            y: -this.radius * Math.log(Math.tan(Math.PI / 4 + l * Math.PI / 360))\n          };\n        },\n        merc_inv: function merc_inv(l, e, t) {\n          return {\n            lat: (2 * Math.atan(Math.exp(e / this.radius)) - Math.PI / 2) * this.degRad,\n            lng: (t * this.radDeg + l / this.radius) * this.degRad\n          };\n        },\n        aea: function aea(l, e, t) {\n          var n = t * this.radDeg,\n              a = 29.5 * this.radDeg,\n              c = 45.5 * this.radDeg,\n              i = l * this.radDeg,\n              r = e * this.radDeg,\n              o = (Math.sin(a) + Math.sin(c)) / 2,\n              s = Math.cos(a) * Math.cos(a) + 2 * o * Math.sin(a),\n              h = o * (r - n),\n              p = Math.sqrt(s - 2 * o * Math.sin(i)) / o,\n              u = Math.sqrt(s - 2 * o * Math.sin(0)) / o;\n          return {\n            x: p * Math.sin(h) * this.radius,\n            y: -(u - p * Math.cos(h)) * this.radius\n          };\n        },\n        aea_inv: function aea_inv(l, e, t) {\n          var n = l / this.radius,\n              a = e / this.radius,\n              c = t * this.radDeg,\n              i = 29.5 * this.radDeg,\n              r = 45.5 * this.radDeg,\n              o = (Math.sin(i) + Math.sin(r)) / 2,\n              s = Math.cos(i) * Math.cos(i) + 2 * o * Math.sin(i),\n              h = Math.sqrt(s - 2 * o * Math.sin(0)) / o,\n              p = Math.sqrt(n * n + (h - a) * (h - a)),\n              u = Math.atan(n / (h - a));\n          return {\n            lat: Math.asin((s - p * p * o * o) / (2 * o)) * this.degRad,\n            lng: (c + u / o) * this.degRad\n          };\n        },\n        lcc: function lcc(l, e, t) {\n          var n = t * this.radDeg,\n              a = e * this.radDeg,\n              c = 33 * this.radDeg,\n              i = 45 * this.radDeg,\n              r = l * this.radDeg,\n              o = Math.log(Math.cos(c) * (1 / Math.cos(i))) / Math.log(Math.tan(Math.PI / 4 + i / 2) * (1 / Math.tan(Math.PI / 4 + c / 2))),\n              s = Math.cos(c) * Math.pow(Math.tan(Math.PI / 4 + c / 2), o) / o,\n              h = s * Math.pow(1 / Math.tan(Math.PI / 4 + r / 2), o),\n              p = s * Math.pow(1 / Math.tan(Math.PI / 4 + 0), o);\n          return {\n            x: h * Math.sin(o * (a - n)) * this.radius,\n            y: -(p - h * Math.cos(o * (a - n))) * this.radius\n          };\n        },\n        lcc_inv: function lcc_inv(l, e, t) {\n          var n = l / this.radius,\n              a = e / this.radius,\n              c = t * this.radDeg,\n              i = 33 * this.radDeg,\n              r = 45 * this.radDeg,\n              o = Math.log(Math.cos(i) * (1 / Math.cos(r))) / Math.log(Math.tan(Math.PI / 4 + r / 2) * (1 / Math.tan(Math.PI / 4 + i / 2))),\n              s = Math.cos(i) * Math.pow(Math.tan(Math.PI / 4 + i / 2), o) / o,\n              h = s * Math.pow(1 / Math.tan(Math.PI / 4 + 0), o),\n              p = this.sgn(o) * Math.sqrt(n * n + (h - a) * (h - a)),\n              u = Math.atan(n / (h - a));\n          return {\n            lat: (2 * Math.atan(Math.pow(s / p, 1 / o)) - Math.PI / 2) * this.degRad,\n            lng: (c + u / o) * this.degRad\n          };\n        }\n      }, o.MapObject = function () {}, o.MapObject.prototype.getLabelText = function (l) {\n        return this.config.label ? \"function\" == typeof this.config.label.render ? this.config.label.render(l) : l : null;\n      }, o.MapObject.prototype.getLabelOffsets = function (l) {\n        var e;\n        return this.config.label && (\"function\" == typeof this.config.label.offsets ? e = this.config.label.offsets(l) : \"object\" == typeof this.config.label.offsets && (e = this.config.label.offsets[l])), e || [0, 0];\n      }, o.MapObject.prototype.setHovered = function (l) {\n        this.isHovered !== l && (this.isHovered = l, this.shape.isHovered = l, this.shape.updateStyle(), this.label && (this.label.isHovered = l, this.label.updateStyle()));\n      }, o.MapObject.prototype.setSelected = function (l) {\n        this.isSelected !== l && (this.isSelected = l, this.shape.isSelected = l, this.shape.updateStyle(), this.label && (this.label.isSelected = l, this.label.updateStyle()), o.$(this.shape).trigger(\"selected\", [l]));\n      }, o.MapObject.prototype.setStyle = function () {\n        this.shape.setStyle.apply(this.shape, arguments);\n      }, o.MapObject.prototype.remove = function () {\n        this.shape.remove(), this.label && this.label.remove();\n      }, o.Region = function (l) {\n        var e, t, n, a;\n        this.config = l, this.map = this.config.map, a = l.canvas.addGroup(l.canvas.rootElement), this.shape = l.canvas.addPath({\n          d: l.path\n        }, l.style, a), l.canvas.addPath({\n          d: l.path,\n          \"data-code\": l.code\n        }, {\n          initial: {\n            fill: \"transparent\",\n            stroke: \"transparent\",\n            \"stroke-width\": l.margin\n          }\n        }, a).addClass(\"jvectormap-region jvectormap-element\"), e = this.shape.getBBox(), t = this.getLabelText(l.code), this.config.label && t && (n = this.getLabelOffsets(l.code), this.labelX = e.x + e.width / 2 + n[0], this.labelY = e.y + e.height / 2 + n[1], this.label = l.canvas.addText({\n          text: t,\n          \"text-anchor\": \"middle\",\n          \"alignment-baseline\": \"central\",\n          x: this.labelX,\n          y: this.labelY,\n          \"data-code\": l.code\n        }, l.labelStyle, l.labelsGroup), this.label.addClass(\"jvectormap-region jvectormap-element\"));\n      }, o.inherits(o.Region, o.MapObject), o.Region.prototype.updateLabelPosition = function () {\n        this.label && this.label.set({\n          x: this.labelX * this.map.scale + this.map.transX * this.map.scale,\n          y: this.labelY * this.map.scale + this.map.transY * this.map.scale\n        });\n      }, o.Marker = function (l) {\n        var e;\n        this.config = l, this.map = this.config.map, this.isImage = !!this.config.style.initial.image, this.createShape(), e = this.getLabelText(l.index), this.config.label && e && (this.offsets = this.getLabelOffsets(l.index), this.labelX = l.cx / this.map.scale - this.map.transX, this.labelY = l.cy / this.map.scale - this.map.transY, this.label = l.canvas.addText({\n          text: e,\n          \"data-index\": l.index,\n          dy: \"0.6ex\",\n          x: this.labelX,\n          y: this.labelY\n        }, l.labelStyle, l.labelsGroup), this.label.addClass(\"jvectormap-marker jvectormap-element\"));\n      }, o.inherits(o.Marker, o.MapObject), o.Marker.prototype.createShape = function () {\n        var l = this;\n        this.shape && this.shape.remove(), this.shape = this.config.canvas[this.isImage ? \"addImage\" : \"addCircle\"]({\n          \"data-index\": this.config.index,\n          cx: this.config.cx,\n          cy: this.config.cy\n        }, this.config.style, this.config.group), this.shape.addClass(\"jvectormap-marker jvectormap-element\"), this.isImage && o.$(this.shape.node).on(\"imageloaded\", function () {\n          l.updateLabelPosition();\n        });\n      }, o.Marker.prototype.updateLabelPosition = function () {\n        this.label && this.label.set({\n          x: this.labelX * this.map.scale + this.offsets[0] + this.map.transX * this.map.scale + 5 + (this.isImage ? (this.shape.width || 0) / 2 : this.shape.properties.r),\n          y: this.labelY * this.map.scale + this.map.transY * this.map.scale + this.offsets[1]\n        });\n      }, o.Marker.prototype.setStyle = function (l) {\n        var e;\n        o.Marker.parentClass.prototype.setStyle.apply(this, arguments), \"r\" === l && this.updateLabelPosition(), (e = !!this.shape.get(\"image\")) != this.isImage && (this.isImage = e, this.config.style = o.$.extend(!0, {}, this.shape.style), this.createShape());\n      }, o.Map = function (l) {\n        var e,\n            t = this;\n        if (this.params = o.$.extend(!0, {}, o.Map.defaultParams, l), !o.Map.maps[this.params.map]) throw new Error(\"Attempt to use map which was not loaded: \" + this.params.map);\n        this.mapData = o.Map.maps[this.params.map], this.markers = {}, this.regions = {}, this.regionsColors = {}, this.regionsData = {}, this.container = o.$(\"<div>\").addClass(\"jvectormap-container\"), this.params.container && this.params.container.append(this.container), this.container.data(\"mapObject\", this), this.defaultWidth = this.mapData.width, this.defaultHeight = this.mapData.height, this.setBackgroundColor(this.params.backgroundColor), this.onResize = function () {\n          t.updateSize();\n        }, o.$(window).resize(this.onResize);\n\n        for (e in o.Map.apiEvents) {\n          this.params[e] && this.container.bind(o.Map.apiEvents[e] + \".jvectormap\", this.params[e]);\n        }\n\n        this.canvas = new o.VectorCanvas(this.container[0], this.width, this.height), this.params.bindTouchEvents && (\"ontouchstart\" in window || window.DocumentTouch && document instanceof DocumentTouch ? this.bindContainerTouchEvents() : window.MSGesture && this.bindContainerPointerEvents()), this.bindContainerEvents(), this.bindElementEvents(), this.createTip(), this.params.zoomButtons && this.bindZoomButtons(), this.createRegions(), this.createMarkers(this.params.markers || {}), this.updateSize(), this.params.focusOn && (\"string\" == typeof this.params.focusOn ? this.params.focusOn = {\n          region: this.params.focusOn\n        } : o.$.isArray(this.params.focusOn) && (this.params.focusOn = {\n          regions: this.params.focusOn\n        }), this.setFocus(this.params.focusOn)), this.params.selectedRegions && this.setSelectedRegions(this.params.selectedRegions), this.params.selectedMarkers && this.setSelectedMarkers(this.params.selectedMarkers), this.legendCntHorizontal = o.$(\"<div/>\").addClass(\"jvectormap-legend-cnt jvectormap-legend-cnt-h\"), this.legendCntVertical = o.$(\"<div/>\").addClass(\"jvectormap-legend-cnt jvectormap-legend-cnt-v\"), this.container.append(this.legendCntHorizontal), this.container.append(this.legendCntVertical), this.params.series && this.createSeries();\n      }, o.Map.prototype = {\n        transX: 0,\n        transY: 0,\n        scale: 1,\n        baseTransX: 0,\n        baseTransY: 0,\n        baseScale: 1,\n        width: 0,\n        height: 0,\n        setBackgroundColor: function setBackgroundColor(l) {\n          this.container.css(\"background-color\", l);\n        },\n        resize: function resize() {\n          var l = this.baseScale;\n          this.width / this.height > this.defaultWidth / this.defaultHeight ? (this.baseScale = this.height / this.defaultHeight, this.baseTransX = Math.abs(this.width - this.defaultWidth * this.baseScale) / (2 * this.baseScale)) : (this.baseScale = this.width / this.defaultWidth, this.baseTransY = Math.abs(this.height - this.defaultHeight * this.baseScale) / (2 * this.baseScale)), this.scale *= this.baseScale / l, this.transX *= this.baseScale / l, this.transY *= this.baseScale / l;\n        },\n        updateSize: function updateSize() {\n          this.width = this.container.width(), this.height = this.container.height(), this.resize(), this.canvas.setSize(this.width, this.height), this.applyTransform();\n        },\n        reset: function reset() {\n          var l, e;\n\n          for (l in this.series) {\n            for (e = 0; e < this.series[l].length; e++) {\n              this.series[l][e].clear();\n            }\n          }\n\n          this.scale = this.baseScale, this.transX = this.baseTransX, this.transY = this.baseTransY, this.applyTransform();\n        },\n        applyTransform: function applyTransform() {\n          var l, e, t, n;\n          this.defaultWidth * this.scale <= this.width ? (l = (this.width - this.defaultWidth * this.scale) / (2 * this.scale), t = (this.width - this.defaultWidth * this.scale) / (2 * this.scale)) : (l = 0, t = (this.width - this.defaultWidth * this.scale) / this.scale), this.defaultHeight * this.scale <= this.height ? (e = (this.height - this.defaultHeight * this.scale) / (2 * this.scale), n = (this.height - this.defaultHeight * this.scale) / (2 * this.scale)) : (e = 0, n = (this.height - this.defaultHeight * this.scale) / this.scale), this.transY > e ? this.transY = e : this.transY < n && (this.transY = n), this.transX > l ? this.transX = l : this.transX < t && (this.transX = t), this.canvas.applyTransformParams(this.scale, this.transX, this.transY), this.markers && this.repositionMarkers(), this.repositionLabels(), this.container.trigger(\"viewportChange\", [this.scale / this.baseScale, this.transX, this.transY]);\n        },\n        bindContainerEvents: function bindContainerEvents() {\n          var l,\n              e,\n              t = !1,\n              n = this;\n          this.params.panOnDrag && (this.container.mousemove(function (a) {\n            return t && (n.transX -= (l - a.pageX) / n.scale, n.transY -= (e - a.pageY) / n.scale, n.applyTransform(), l = a.pageX, e = a.pageY), !1;\n          }).mousedown(function (n) {\n            return t = !0, l = n.pageX, e = n.pageY, !1;\n          }), this.onContainerMouseUp = function () {\n            t = !1;\n          }, o.$(\"body\").mouseup(this.onContainerMouseUp)), this.params.zoomOnScroll && this.container.mousewheel(function (l) {\n            var e = o.$(n.container).offset(),\n                t = l.pageX - e.left,\n                a = l.pageY - e.top,\n                c = Math.pow(1 + n.params.zoomOnScrollSpeed / 1e3, l.deltaFactor * l.deltaY);\n            n.tip.hide(), n.setScale(n.scale * c, t, a), l.preventDefault();\n          });\n        },\n        bindContainerTouchEvents: function bindContainerTouchEvents() {\n          var l,\n              e,\n              t,\n              n,\n              a,\n              c,\n              i,\n              r = this,\n              s = function s(_s) {\n            var h,\n                p,\n                u,\n                M,\n                f = _s.originalEvent.touches;\n            \"touchstart\" == _s.type && (i = 0), 1 == f.length ? (1 == i && (u = r.transX, M = r.transY, r.transX -= (t - f[0].pageX) / r.scale, r.transY -= (n - f[0].pageY) / r.scale, r.applyTransform(), r.tip.hide(), (u != r.transX || M != r.transY) && _s.preventDefault()), t = f[0].pageX, n = f[0].pageY) : 2 == f.length && (2 == i ? (p = Math.sqrt(Math.pow(f[0].pageX - f[1].pageX, 2) + Math.pow(f[0].pageY - f[1].pageY, 2)) / e, r.setScale(l * p, a, c), r.tip.hide(), _s.preventDefault()) : (h = o.$(r.container).offset(), a = f[0].pageX > f[1].pageX ? f[1].pageX + (f[0].pageX - f[1].pageX) / 2 : f[0].pageX + (f[1].pageX - f[0].pageX) / 2, c = f[0].pageY > f[1].pageY ? f[1].pageY + (f[0].pageY - f[1].pageY) / 2 : f[0].pageY + (f[1].pageY - f[0].pageY) / 2, a -= h.left, c -= h.top, l = r.scale, e = Math.sqrt(Math.pow(f[0].pageX - f[1].pageX, 2) + Math.pow(f[0].pageY - f[1].pageY, 2)))), i = f.length;\n          };\n\n          o.$(this.container).bind(\"touchstart\", s), o.$(this.container).bind(\"touchmove\", s);\n        },\n        bindContainerPointerEvents: function bindContainerPointerEvents() {\n          var l = this,\n              e = new MSGesture(),\n              t = this.container[0],\n              n = function n(l) {\n            e.addPointer(l.pointerId);\n          },\n              a = function a(e) {\n            var t, n;\n            (0 != e.translationX || 0 != e.translationY) && (t = l.transX, n = l.transY, l.transX += e.translationX / l.scale, l.transY += e.translationY / l.scale, l.applyTransform(), l.tip.hide(), (t != l.transX || n != l.transY) && e.preventDefault()), 1 != e.scale && (l.setScale(l.scale * e.scale, e.offsetX, e.offsetY), l.tip.hide(), e.preventDefault());\n          };\n\n          e.target = t, t.addEventListener(\"MSGestureChange\", a, !1), t.addEventListener(\"pointerdown\", n, !1);\n        },\n        bindElementEvents: function bindElementEvents() {\n          var l,\n              e,\n              t,\n              n = this;\n          this.container.mousemove(function (n) {\n            Math.abs(l - n.pageX) + Math.abs(e - n.pageY) > 2 && (t = !0);\n          }), this.container.delegate(\"[class~='jvectormap-element']\", \"mouseover mouseout\", function (l) {\n            var e = o.$(this).attr(\"class\").baseVal || o.$(this).attr(\"class\"),\n                t = -1 === e.indexOf(\"jvectormap-region\") ? \"marker\" : \"region\",\n                a = o.$(this).attr(\"region\" == t ? \"data-code\" : \"data-index\"),\n                c = \"region\" == t ? n.regions[a].element : n.markers[a].element,\n                i = \"region\" == t ? n.mapData.paths[a].name : n.markers[a].config.name || \"\",\n                r = o.$.Event(t + \"TipShow.jvectormap\"),\n                s = o.$.Event(t + \"Over.jvectormap\");\n            \"mouseover\" == l.type ? (n.container.trigger(s, [a]), s.isDefaultPrevented() || c.setHovered(!0), n.tip.text(i), n.container.trigger(r, [n.tip, a]), r.isDefaultPrevented() || (n.tip.show(), n.tipWidth = n.tip.width(), n.tipHeight = n.tip.height())) : (c.setHovered(!1), n.tip.hide(), n.container.trigger(t + \"Out.jvectormap\", [a]));\n          }), this.container.delegate(\"[class~='jvectormap-element']\", \"mousedown\", function (n) {\n            l = n.pageX, e = n.pageY, t = !1;\n          }), this.container.delegate(\"[class~='jvectormap-element']\", \"mouseup\", function () {\n            var l = o.$(this).attr(\"class\").baseVal ? o.$(this).attr(\"class\").baseVal : o.$(this).attr(\"class\"),\n                e = -1 === l.indexOf(\"jvectormap-region\") ? \"marker\" : \"region\",\n                a = o.$(this).attr(\"region\" == e ? \"data-code\" : \"data-index\"),\n                c = o.$.Event(e + \"Click.jvectormap\"),\n                i = \"region\" == e ? n.regions[a].element : n.markers[a].element;\n            t || (n.container.trigger(c, [a]), (\"region\" === e && n.params.regionsSelectable || \"marker\" === e && n.params.markersSelectable) && (c.isDefaultPrevented() || (n.params[e + \"sSelectableOne\"] && n.clearSelected(e + \"s\"), i.setSelected(!i.isSelected))));\n          });\n        },\n        bindZoomButtons: function bindZoomButtons() {\n          var l = this;\n          o.$(\"<div/>\").addClass(\"jvectormap-zoomin\").text(\"+\").appendTo(this.container), o.$(\"<div/>\").addClass(\"jvectormap-zoomout\").html(\"&#x2212;\").appendTo(this.container), this.container.find(\".jvectormap-zoomin\").click(function () {\n            l.setScale(l.scale * l.params.zoomStep, l.width / 2, l.height / 2, !1, l.params.zoomAnimate);\n          }), this.container.find(\".jvectormap-zoomout\").click(function () {\n            l.setScale(l.scale / l.params.zoomStep, l.width / 2, l.height / 2, !1, l.params.zoomAnimate);\n          });\n        },\n        createTip: function createTip() {\n          var l = this;\n          this.tip = o.$(\"<div/>\").addClass(\"jvectormap-tip\").appendTo(o.$(\"body\")), this.container.mousemove(function (e) {\n            var t = e.pageX - 15 - l.tipWidth,\n                n = e.pageY - 15 - l.tipHeight;\n            5 > t && (t = e.pageX + 15), 5 > n && (n = e.pageY + 15), l.tip.css({\n              left: t,\n              top: n\n            });\n          });\n        },\n        setScale: function setScale(l, e, t, n, a) {\n          var c,\n              i,\n              r,\n              s,\n              h,\n              p,\n              u,\n              M,\n              f,\n              d = o.$.Event(\"zoom.jvectormap\"),\n              m = this,\n              Z = 0,\n              g = Math.abs(Math.round(60 * (l - this.scale) / Math.max(l, this.scale))),\n              y = new o.$.Deferred();\n          return l > this.params.zoomMax * this.baseScale ? l = this.params.zoomMax * this.baseScale : l < this.params.zoomMin * this.baseScale && (l = this.params.zoomMin * this.baseScale), \"undefined\" != typeof e && \"undefined\" != typeof t && (zoomStep = l / this.scale, n ? (M = e + this.defaultWidth * (this.width / (this.defaultWidth * l)) / 2, f = t + this.defaultHeight * (this.height / (this.defaultHeight * l)) / 2) : (M = this.transX - (zoomStep - 1) / l * e, f = this.transY - (zoomStep - 1) / l * t)), a && g > 0 ? (i = this.scale, r = (l - i) / g, s = this.transX * this.scale, p = this.transY * this.scale, h = (M * l - s) / g, u = (f * l - p) / g, c = setInterval(function () {\n            Z += 1, m.scale = i + r * Z, m.transX = (s + h * Z) / m.scale, m.transY = (p + u * Z) / m.scale, m.applyTransform(), Z == g && (clearInterval(c), m.container.trigger(d, [l / m.baseScale]), y.resolve());\n          }, 10)) : (this.transX = M, this.transY = f, this.scale = l, this.applyTransform(), this.container.trigger(d, [l / this.baseScale]), y.resolve()), y;\n        },\n        setFocus: function setFocus(l) {\n          var e, t, n, a, c, i;\n\n          if (l = l || {}, l.region ? a = [l.region] : l.regions && (a = l.regions), a) {\n            for (c = 0; c < a.length; c++) {\n              this.regions[a[c]] && (t = this.regions[a[c]].element.shape.getBBox()) && (\"undefined\" == typeof e ? e = t : (n = {\n                x: Math.min(e.x, t.x),\n                y: Math.min(e.y, t.y),\n                width: Math.max(e.x + e.width, t.x + t.width) - Math.min(e.x, t.x),\n                height: Math.max(e.y + e.height, t.y + t.height) - Math.min(e.y, t.y)\n              }, e = n));\n            }\n\n            return this.setScale(Math.min(this.width / e.width, this.height / e.height), -(e.x + e.width / 2), -(e.y + e.height / 2), !0, l.animate);\n          }\n\n          return l.lat && l.lng ? (i = this.latLngToPoint(l.lat, l.lng), l.x = this.transX - i.x / this.scale, l.y = this.transY - i.y / this.scale) : l.x && l.y && (l.x *= -this.defaultWidth, l.y *= -this.defaultHeight), this.setScale(l.scale * this.baseScale, l.x, l.y, !0, l.animate);\n        },\n        getSelected: function getSelected(l) {\n          var e,\n              t = [];\n\n          for (e in this[l]) {\n            this[l][e].element.isSelected && t.push(e);\n          }\n\n          return t;\n        },\n        getSelectedRegions: function getSelectedRegions() {\n          return this.getSelected(\"regions\");\n        },\n        getSelectedMarkers: function getSelectedMarkers() {\n          return this.getSelected(\"markers\");\n        },\n        setSelected: function setSelected(l, e) {\n          var t;\n          if (\"object\" != typeof e && (e = [e]), o.$.isArray(e)) for (t = 0; t < e.length; t++) {\n            this[l][e[t]].element.setSelected(!0);\n          } else for (t in e) {\n            this[l][t].element.setSelected(!!e[t]);\n          }\n        },\n        setSelectedRegions: function setSelectedRegions(l) {\n          this.setSelected(\"regions\", l);\n        },\n        setSelectedMarkers: function setSelectedMarkers(l) {\n          this.setSelected(\"markers\", l);\n        },\n        clearSelected: function clearSelected(l) {\n          var e,\n              t = {},\n              n = this.getSelected(l);\n\n          for (e = 0; e < n.length; e++) {\n            t[n[e]] = !1;\n          }\n\n          this.setSelected(l, t);\n        },\n        clearSelectedRegions: function clearSelectedRegions() {\n          this.clearSelected(\"regions\");\n        },\n        clearSelectedMarkers: function clearSelectedMarkers() {\n          this.clearSelected(\"markers\");\n        },\n        getMapObject: function getMapObject() {\n          return this;\n        },\n        getRegionName: function getRegionName(l) {\n          return this.mapData.paths[l].name;\n        },\n        createRegions: function createRegions() {\n          var l,\n              e,\n              t = this;\n          this.regionLabelsGroup = this.regionLabelsGroup || this.canvas.addGroup();\n\n          for (l in this.mapData.paths) {\n            e = new o.Region({\n              map: this,\n              path: this.mapData.paths[l].path,\n              code: l,\n              style: o.$.extend(!0, {}, this.params.regionStyle),\n              margin: this.params.regionMargin,\n              labelStyle: o.$.extend(!0, {}, this.params.regionLabelStyle),\n              canvas: this.canvas,\n              labelsGroup: this.regionLabelsGroup,\n              label: \"vml\" != this.canvas.mode ? this.params.labels && this.params.labels.regions : null\n            }), o.$(e.shape).bind(\"selected\", function (l, e) {\n              t.container.trigger(\"regionSelected.jvectormap\", [o.$(this.node).attr(\"data-code\"), e, t.getSelectedRegions()]);\n            }), this.regions[l] = {\n              element: e,\n              config: this.mapData.paths[l]\n            };\n          }\n        },\n        createMarkers: function createMarkers(l) {\n          var e,\n              t,\n              n,\n              a,\n              c,\n              i = this;\n          if (this.markersGroup = this.markersGroup || this.canvas.addGroup(), this.markerLabelsGroup = this.markerLabelsGroup || this.canvas.addGroup(), o.$.isArray(l)) for (c = l.slice(), l = {}, e = 0; e < c.length; e++) {\n            l[e] = c[e];\n          }\n\n          for (e in l) {\n            a = l[e] instanceof Array ? {\n              latLng: l[e]\n            } : l[e], !1 !== (n = this.getMarkerPosition(a)) && (t = new o.Marker({\n              map: this,\n              style: o.$.extend(!0, {}, this.params.markerStyle, {\n                initial: a.style || {}\n              }),\n              labelStyle: o.$.extend(!0, {}, this.params.markerLabelStyle),\n              index: e,\n              cx: n.x,\n              cy: n.y,\n              group: this.markersGroup,\n              canvas: this.canvas,\n              labelsGroup: this.markerLabelsGroup,\n              label: \"vml\" != this.canvas.mode ? this.params.labels && this.params.labels.markers : null\n            }), o.$(t.shape).bind(\"selected\", function (l, e) {\n              i.container.trigger(\"markerSelected.jvectormap\", [o.$(this.node).attr(\"data-index\"), e, i.getSelectedMarkers()]);\n            }), this.markers[e] && this.removeMarkers([e]), this.markers[e] = {\n              element: t,\n              config: a\n            });\n          }\n        },\n        repositionMarkers: function repositionMarkers() {\n          var l, e;\n\n          for (l in this.markers) {\n            !1 !== (e = this.getMarkerPosition(this.markers[l].config)) && this.markers[l].element.setStyle({\n              cx: e.x,\n              cy: e.y\n            });\n          }\n        },\n        repositionLabels: function repositionLabels() {\n          var l;\n\n          for (l in this.regions) {\n            this.regions[l].element.updateLabelPosition();\n          }\n\n          for (l in this.markers) {\n            this.markers[l].element.updateLabelPosition();\n          }\n        },\n        getMarkerPosition: function getMarkerPosition(l) {\n          return o.Map.maps[this.params.map].projection ? this.latLngToPoint.apply(this, l.latLng || [0, 0]) : {\n            x: l.coords[0] * this.scale + this.transX * this.scale,\n            y: l.coords[1] * this.scale + this.transY * this.scale\n          };\n        },\n        addMarker: function addMarker(l, e, t) {\n          var n,\n              a,\n              c = {},\n              i = [],\n              t = t || [];\n\n          for (c[l] = e, a = 0; a < t.length; a++) {\n            n = {}, \"undefined\" != typeof t[a] && (n[l] = t[a]), i.push(n);\n          }\n\n          this.addMarkers(c, i);\n        },\n        addMarkers: function addMarkers(l, e) {\n          var t;\n\n          for (e = e || [], this.createMarkers(l), t = 0; t < e.length; t++) {\n            this.series.markers[t].setValues(e[t] || {});\n          }\n        },\n        removeMarkers: function removeMarkers(l) {\n          var e;\n\n          for (e = 0; e < l.length; e++) {\n            this.markers[l[e]].element.remove(), delete this.markers[l[e]];\n          }\n        },\n        removeAllMarkers: function removeAllMarkers() {\n          var l,\n              e = [];\n\n          for (l in this.markers) {\n            e.push(l);\n          }\n\n          this.removeMarkers(e);\n        },\n        latLngToPoint: function latLngToPoint(l, e) {\n          var t,\n              n,\n              a,\n              c = o.Map.maps[this.params.map].projection,\n              i = c.centralMeridian;\n          return -180 + i > e && (e += 360), t = o.Proj[c.type](l, e, i), !!(n = this.getInsetForPoint(t.x, t.y)) && (a = n.bbox, t.x = (t.x - a[0].x) / (a[1].x - a[0].x) * n.width * this.scale, t.y = (t.y - a[0].y) / (a[1].y - a[0].y) * n.height * this.scale, {\n            x: t.x + this.transX * this.scale + n.left * this.scale,\n            y: t.y + this.transY * this.scale + n.top * this.scale\n          });\n        },\n        pointToLatLng: function pointToLatLng(l, e) {\n          var t,\n              n,\n              a,\n              c,\n              i,\n              r = o.Map.maps[this.params.map].projection,\n              s = r.centralMeridian,\n              h = o.Map.maps[this.params.map].insets;\n\n          for (t = 0; t < h.length; t++) {\n            if (n = h[t], a = n.bbox, c = l - (this.transX * this.scale + n.left * this.scale), i = e - (this.transY * this.scale + n.top * this.scale), c = c / (n.width * this.scale) * (a[1].x - a[0].x) + a[0].x, i = i / (n.height * this.scale) * (a[1].y - a[0].y) + a[0].y, c > a[0].x && c < a[1].x && i > a[0].y && i < a[1].y) return o.Proj[r.type + \"_inv\"](c, -i, s);\n          }\n\n          return !1;\n        },\n        getInsetForPoint: function getInsetForPoint(l, e) {\n          var t,\n              n,\n              a = o.Map.maps[this.params.map].insets;\n\n          for (t = 0; t < a.length; t++) {\n            if (n = a[t].bbox, l > n[0].x && l < n[1].x && e > n[0].y && e < n[1].y) return a[t];\n          }\n        },\n        createSeries: function createSeries() {\n          var l, e;\n          this.series = {\n            markers: [],\n            regions: []\n          };\n\n          for (e in this.params.series) {\n            for (l = 0; l < this.params.series[e].length; l++) {\n              this.series[e][l] = new o.DataSeries(this.params.series[e][l], this[e], this);\n            }\n          }\n        },\n        remove: function remove() {\n          this.tip.remove(), this.container.remove(), o.$(window).unbind(\"resize\", this.onResize), o.$(\"body\").unbind(\"mouseup\", this.onContainerMouseUp);\n        }\n      }, o.Map.maps = {}, o.Map.defaultParams = {\n        map: \"world_mill_en\",\n        backgroundColor: \"#505050\",\n        zoomButtons: !0,\n        zoomOnScroll: !0,\n        zoomOnScrollSpeed: 3,\n        panOnDrag: !0,\n        zoomMax: 8,\n        zoomMin: 1,\n        zoomStep: 1.6,\n        zoomAnimate: !0,\n        regionsSelectable: !1,\n        markersSelectable: !1,\n        bindTouchEvents: !0,\n        regionStyle: {\n          initial: {\n            fill: \"white\",\n            \"fill-opacity\": 1,\n            stroke: \"none\",\n            \"stroke-width\": 0,\n            \"stroke-opacity\": 1\n          },\n          hover: {\n            \"fill-opacity\": .8,\n            cursor: \"pointer\"\n          },\n          selected: {\n            fill: \"yellow\"\n          },\n          selectedHover: {}\n        },\n        regionMargin: 0,\n        regionLabelStyle: {\n          initial: {\n            \"font-family\": \"Verdana\",\n            \"font-size\": \"12\",\n            \"font-weight\": \"bold\",\n            cursor: \"default\",\n            fill: \"black\"\n          },\n          hover: {\n            cursor: \"pointer\"\n          }\n        },\n        markerStyle: {\n          initial: {\n            fill: \"grey\",\n            stroke: \"#505050\",\n            \"fill-opacity\": 1,\n            \"stroke-width\": 1,\n            \"stroke-opacity\": 1,\n            r: 5\n          },\n          hover: {\n            stroke: \"black\",\n            \"stroke-width\": 2,\n            cursor: \"pointer\"\n          },\n          selected: {\n            fill: \"blue\"\n          },\n          selectedHover: {}\n        },\n        markerLabelStyle: {\n          initial: {\n            \"font-family\": \"Verdana\",\n            \"font-size\": \"12\",\n            \"font-weight\": \"bold\",\n            cursor: \"default\",\n            fill: \"black\"\n          },\n          hover: {\n            cursor: \"pointer\"\n          }\n        }\n      }, o.Map.apiEvents = {\n        onRegionTipShow: \"regionTipShow\",\n        onRegionOver: \"regionOver\",\n        onRegionOut: \"regionOut\",\n        onRegionClick: \"regionClick\",\n        onRegionSelected: \"regionSelected\",\n        onMarkerTipShow: \"markerTipShow\",\n        onMarkerOver: \"markerOver\",\n        onMarkerOut: \"markerOut\",\n        onMarkerClick: \"markerClick\",\n        onMarkerSelected: \"markerSelected\",\n        onViewportChange: \"viewportChange\"\n      }, o.MultiMap = function (l) {\n        var e = this;\n        this.maps = {}, this.params = o.$.extend(!0, {}, o.MultiMap.defaultParams, l), this.params.maxLevel = this.params.maxLevel || Number.MAX_VALUE, this.params.main = this.params.main || {}, this.params.main.multiMapLevel = 0, this.history = [this.addMap(this.params.main.map, this.params.main)], this.defaultProjection = this.history[0].mapData.projection.type, this.mapsLoaded = {}, this.params.container.css({\n          position: \"relative\"\n        }), this.backButton = o.$(\"<div/>\").addClass(\"jvectormap-goback\").text(\"Back\").appendTo(this.params.container), this.backButton.hide(), this.backButton.click(function () {\n          e.goBack();\n        }), this.spinner = o.$(\"<div/>\").addClass(\"jvectormap-spinner\").appendTo(this.params.container), this.spinner.hide();\n      }, o.MultiMap.prototype = {\n        addMap: function addMap(l, e) {\n          var t = o.$(\"<div/>\").css({\n            width: \"100%\",\n            height: \"100%\"\n          });\n          return this.params.container.append(t), this.maps[l] = new o.Map(o.$.extend(e, {\n            container: t\n          })), this.params.maxLevel > e.multiMapLevel && this.maps[l].container.on(\"regionClick.jvectormap\", {\n            scope: this\n          }, function (l, e) {\n            var t = l.data.scope,\n                n = t.params.mapNameByCode(e, t);\n            t.drillDownPromise && \"pending\" === t.drillDownPromise.state() || t.drillDown(n, e);\n          }), this.maps[l];\n        },\n        downloadMap: function downloadMap(l) {\n          var e = this,\n              t = o.$.Deferred();\n          return this.mapsLoaded[l] ? t.resolve() : o.$.get(this.params.mapUrlByCode(l, this)).then(function () {\n            e.mapsLoaded[l] = !0, t.resolve();\n          }, function () {\n            t.reject();\n          }), t;\n        },\n        drillDown: function drillDown(l, e) {\n          var t = this.history[this.history.length - 1],\n              n = this,\n              a = t.setFocus({\n            region: e,\n            animate: !0\n          }),\n              c = this.downloadMap(e);\n          a.then(function () {\n            \"pending\" === c.state() && n.spinner.show();\n          }), c.always(function () {\n            n.spinner.hide();\n          }), this.drillDownPromise = o.$.when(c, a), this.drillDownPromise.then(function () {\n            t.params.container.hide(), n.maps[l] ? n.maps[l].params.container.show() : n.addMap(l, {\n              map: l,\n              multiMapLevel: t.params.multiMapLevel + 1\n            }), n.history.push(n.maps[l]), n.backButton.show();\n          });\n        },\n        goBack: function goBack() {\n          var l = this.history.pop(),\n              e = this.history[this.history.length - 1],\n              t = this;\n          l.setFocus({\n            scale: 1,\n            x: .5,\n            y: .5,\n            animate: !0\n          }).then(function () {\n            l.params.container.hide(), e.params.container.show(), e.updateSize(), 1 === t.history.length && t.backButton.hide(), e.setFocus({\n              scale: 1,\n              x: .5,\n              y: .5,\n              animate: !0\n            });\n          });\n        }\n      }, o.MultiMap.defaultParams = {\n        mapNameByCode: function mapNameByCode(l, e) {\n          return l.toLowerCase() + \"_\" + e.defaultProjection + \"_en\";\n        },\n        mapUrlByCode: function mapUrlByCode(l, e) {\n          return \"jquery-jvectormap-data-\" + l.toLowerCase() + \"-\" + e.defaultProjection + \"-en.js\";\n        }\n      };\n    }).call(e, t(0), t(0));\n  }, function (l, e, t) {\n    \"use strict\";\n\n    Object.defineProperty(e, \"__esModule\", {\n      value: !0\n    });\n    var n = t(26);\n    t.d(e, \"VectorMap\", function () {\n      return n.a;\n    });\n  }, function (l, e, t) {\n    \"use strict\";\n\n    (function (l) {\n      function n(l, e) {\n        if (!(l instanceof e)) throw new TypeError(\"Cannot call a class as a function\");\n      }\n\n      function a(l, e) {\n        if (!l) throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        return !e || \"object\" !== typeof e && \"function\" !== typeof e ? l : e;\n      }\n\n      function c(l, e) {\n        if (\"function\" !== typeof e && null !== e) throw new TypeError(\"Super expression must either be null or a function, not \" + typeof e);\n        l.prototype = Object.create(e && e.prototype, {\n          constructor: {\n            value: l,\n            enumerable: !1,\n            writable: !0,\n            configurable: !0\n          }\n        }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(l, e) : l.__proto__ = e);\n      }\n\n      var i = t(27),\n          r = t.n(i),\n          o = t(28),\n          s = (t.n(o), t(33)),\n          h = t.n(s),\n          p = t(2),\n          u = function () {\n        function l(l, e) {\n          for (var t = 0; t < e.length; t++) {\n            var n = e[t];\n            n.enumerable = n.enumerable || !1, n.configurable = !0, \"value\" in n && (n.writable = !0), Object.defineProperty(l, n.key, n);\n          }\n        }\n\n        return function (e, t, n) {\n          return t && l(e.prototype, t), n && l(e, n), e;\n        };\n      }(),\n          M = l,\n          f = function (l) {\n        function e(l) {\n          n(this, e);\n          var t = a(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, l));\n          return t.$node = null, t.$mapObject = null, t;\n        }\n\n        return c(e, l), u(e, [{\n          key: \"componentWillMount\",\n          value: function value() {\n            var l = this.props.map;\n            if (!l || -1 === p.default.indexOf(l)) throw new Error(\"No such map, please select one of the following: \" + p.default.join());\n            t(38)(\"./\" + l);\n          }\n        }, {\n          key: \"componentDidMount\",\n          value: function value() {\n            var l = this.props.map;\n            this.$node = M(this.refs.map), l && (this.$node.vectorMap(Object.assign({}, this.props)), this.$mapObject = this.$node.vectorMap(\"get\", \"mapObject\"));\n          }\n        }, {\n          key: \"componentDidUpdate\",\n          value: function value() {\n            var l = this.props.map;\n            this.$node = M(this.refs.map), this.$node.empty(), l && (this.$node.vectorMap(Object.assign({}, this.props)), this.$mapObject = this.$node.vectorMap(\"get\", \"mapObject\"));\n          }\n        }, {\n          key: \"setBackgroundColor\",\n          value: function value(l) {\n            this.$mapObject.setBackgroundColor(l);\n          }\n        }, {\n          key: \"getMapObject\",\n          value: function value() {\n            return this.$mapObject;\n          }\n        }, {\n          key: \"render\",\n          value: function value() {\n            var l = {},\n                e = this.props,\n                t = e.containerStyle,\n                n = e.containerClassName;\n            return t && (l.style = t), n && (l.className = n), r.a.createElement(\"div\", Object.assign({\n              ref: \"map\"\n            }, l));\n          }\n        }]), e;\n      }(r.a.PureComponent);\n\n      f.propTypes = {\n        containerStyle: h.a.object,\n        containerClassName: h.a.string,\n        map: h.a.oneOf(p.default).isRequired,\n        backgroundColor: h.a.string,\n        zoomOnScroll: h.a.bool,\n        zoomOnScrollSpeed: h.a.bool,\n        panOnDrag: h.a.bool,\n        zoomMax: h.a.number,\n        zoomMin: h.a.number,\n        zoomStep: h.a.number,\n        zoomAnimate: h.a.bool,\n        regionsSelectable: h.a.bool,\n        regionsSelectableOne: h.a.bool,\n        markersSelectable: h.a.bool,\n        markersSelectableOne: h.a.bool,\n        regionStyle: h.a.object,\n        regionLabelStyle: h.a.object,\n        markerStyle: h.a.object,\n        markerLabelStyle: h.a.object,\n        markers: h.a.oneOfType([h.a.object, h.a.array]),\n        series: h.a.object,\n        focusOn: h.a.oneOfType([h.a.string, h.a.object]),\n        labels: h.a.object,\n        selectedRegions: h.a.oneOfType([h.a.array, h.a.object, h.a.string]),\n        selectedMarkers: h.a.oneOfType([h.a.array, h.a.object, h.a.string]),\n        onRegionTipShow: h.a.func,\n        onRegionOver: h.a.func,\n        onRegionOut: h.a.func,\n        onRegionClick: h.a.func,\n        onRegionSelected: h.a.func,\n        onMarkerTipShow: h.a.func,\n        onMarkerOver: h.a.func,\n        onMarkerOut: h.a.func,\n        onMarkerClick: h.a.func,\n        onMarkerSelected: h.a.func,\n        onViewportChange: h.a.func\n      }, e.a = f;\n    }).call(e, t(0));\n  }, function (e, t) {\n    e.exports = l;\n  }, function (l, e, t) {\n    var n = t(29);\n    \"string\" === typeof n && (n = [[l.i, n, \"\"]]);\n    var a = {};\n    a.transform = void 0;\n    t(31)(n, a);\n    n.locals && (l.exports = n.locals);\n  }, function (l, e, t) {\n    e = l.exports = t(30)(!1), e.push([l.i, \".SecondExample {\\n  text-align: center;\\n  width: 100%; }\\n\\n.SecondExample-text {\\n  color: #4b5658;\\n  font-size: 20px; }\\n\\n.SecondExample-link {\\n  color: #4b5658;\\n  text-decoration: none; }\\n  .SecondExample-link:hover {\\n    border-bottom: 1px solid #4b5658; }\\n\\n.SecondExample-github-link {\\n  color: #3079ab;\\n  font-size: 22px;\\n  text-decoration: none; }\\n  .SecondExample-github-link:hover {\\n    border-bottom: 1px solid #3079ab; }\\n\", \"\"]);\n  }, function (l, e, t) {\n    \"use strict\";\n\n    function n(l, e) {\n      var t = l[1] || \"\",\n          n = l[3];\n      if (!n) return t;\n\n      if (e && \"function\" === typeof btoa) {\n        var c = a(n);\n        return [t].concat(n.sources.map(function (l) {\n          return \"/*# sourceURL=\" + n.sourceRoot + l + \" */\";\n        })).concat([c]).join(\"\\n\");\n      }\n\n      return [t].join(\"\\n\");\n    }\n\n    function a(l) {\n      return \"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(l)))) + \" */\";\n    }\n\n    l.exports = function (l) {\n      var e = [];\n      return e.toString = function () {\n        return this.map(function (e) {\n          var t = n(e, l);\n          return e[2] ? \"@media \" + e[2] + \"{\" + t + \"}\" : t;\n        }).join(\"\");\n      }, e.i = function (l, t) {\n        \"string\" === typeof l && (l = [[null, l, \"\"]]);\n\n        for (var n = {}, a = 0; a < this.length; a++) {\n          var c = this[a][0];\n          null != c && (n[c] = !0);\n        }\n\n        for (a = 0; a < l.length; a++) {\n          var i = l[a];\n          null != i[0] && n[i[0]] || (t && !i[2] ? i[2] = t : t && (i[2] = \"(\" + i[2] + \") and (\" + t + \")\"), e.push(i));\n        }\n      }, e;\n    };\n  }, function (l, e, t) {\n    function n(l, e) {\n      for (var t = 0; t < l.length; t++) {\n        var n = l[t],\n            a = f[n.id];\n\n        if (a) {\n          a.refs++;\n\n          for (var c = 0; c < a.parts.length; c++) {\n            a.parts[c](n.parts[c]);\n          }\n\n          for (; c < n.parts.length; c++) {\n            a.parts.push(h(n.parts[c], e));\n          }\n        } else {\n          for (var i = [], c = 0; c < n.parts.length; c++) {\n            i.push(h(n.parts[c], e));\n          }\n\n          f[n.id] = {\n            id: n.id,\n            refs: 1,\n            parts: i\n          };\n        }\n      }\n    }\n\n    function a(l, e) {\n      for (var t = [], n = {}, a = 0; a < l.length; a++) {\n        var c = l[a],\n            i = e.base ? c[0] + e.base : c[0],\n            r = c[1],\n            o = c[2],\n            s = c[3],\n            h = {\n          css: r,\n          media: o,\n          sourceMap: s\n        };\n        n[i] ? n[i].parts.push(h) : t.push(n[i] = {\n          id: i,\n          parts: [h]\n        });\n      }\n\n      return t;\n    }\n\n    function c(l, e) {\n      var t = m(l.insertInto);\n      if (!t) throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n      var n = y[y.length - 1];\n      if (\"top\" === l.insertAt) n ? n.nextSibling ? t.insertBefore(e, n.nextSibling) : t.appendChild(e) : t.insertBefore(e, t.firstChild), y.push(e);else {\n        if (\"bottom\" !== l.insertAt) throw new Error(\"Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.\");\n        t.appendChild(e);\n      }\n    }\n\n    function i(l) {\n      if (null === l.parentNode) return !1;\n      l.parentNode.removeChild(l);\n      var e = y.indexOf(l);\n      e >= 0 && y.splice(e, 1);\n    }\n\n    function r(l) {\n      var e = document.createElement(\"style\");\n      return l.attrs.type = \"text/css\", s(e, l.attrs), c(l, e), e;\n    }\n\n    function o(l) {\n      var e = document.createElement(\"link\");\n      return l.attrs.type = \"text/css\", l.attrs.rel = \"stylesheet\", s(e, l.attrs), c(l, e), e;\n    }\n\n    function s(l, e) {\n      Object.keys(e).forEach(function (t) {\n        l.setAttribute(t, e[t]);\n      });\n    }\n\n    function h(l, e) {\n      var t, n, a, c;\n\n      if (e.transform && l.css) {\n        if (!(c = e.transform(l.css))) return function () {};\n        l.css = c;\n      }\n\n      if (e.singleton) {\n        var s = g++;\n        t = Z || (Z = r(e)), n = p.bind(null, t, s, !1), a = p.bind(null, t, s, !0);\n      } else l.sourceMap && \"function\" === typeof URL && \"function\" === typeof URL.createObjectURL && \"function\" === typeof URL.revokeObjectURL && \"function\" === typeof Blob && \"function\" === typeof btoa ? (t = o(e), n = M.bind(null, t, e), a = function a() {\n        i(t), t.href && URL.revokeObjectURL(t.href);\n      }) : (t = r(e), n = u.bind(null, t), a = function a() {\n        i(t);\n      });\n\n      return n(l), function (e) {\n        if (e) {\n          if (e.css === l.css && e.media === l.media && e.sourceMap === l.sourceMap) return;\n          n(l = e);\n        } else a();\n      };\n    }\n\n    function p(l, e, t, n) {\n      var a = t ? \"\" : n.css;\n      if (l.styleSheet) l.styleSheet.cssText = b(e, a);else {\n        var c = document.createTextNode(a),\n            i = l.childNodes;\n        i[e] && l.removeChild(i[e]), i.length ? l.insertBefore(c, i[e]) : l.appendChild(c);\n      }\n    }\n\n    function u(l, e) {\n      var t = e.css,\n          n = e.media;\n      if (n && l.setAttribute(\"media\", n), l.styleSheet) l.styleSheet.cssText = t;else {\n        for (; l.firstChild;) {\n          l.removeChild(l.firstChild);\n        }\n\n        l.appendChild(document.createTextNode(t));\n      }\n    }\n\n    function M(l, e, t) {\n      var n = t.css,\n          a = t.sourceMap,\n          c = void 0 === e.convertToAbsoluteUrls && a;\n      (e.convertToAbsoluteUrls || c) && (n = v(n)), a && (n += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(a)))) + \" */\");\n      var i = new Blob([n], {\n        type: \"text/css\"\n      }),\n          r = l.href;\n      l.href = URL.createObjectURL(i), r && URL.revokeObjectURL(r);\n    }\n\n    var f = {},\n        d = function (l) {\n      var e;\n      return function () {\n        return \"undefined\" === typeof e && (e = l.apply(this, arguments)), e;\n      };\n    }(function () {\n      return window && document && document.all && !window.atob;\n    }),\n        m = function (l) {\n      var e = {};\n      return function (t) {\n        return \"undefined\" === typeof e[t] && (e[t] = l.call(this, t)), e[t];\n      };\n    }(function (l) {\n      return document.querySelector(l);\n    }),\n        Z = null,\n        g = 0,\n        y = [],\n        v = t(32);\n\n    l.exports = function (l, e) {\n      if (\"undefined\" !== typeof DEBUG && DEBUG && \"object\" !== typeof document) throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n      e = e || {}, e.attrs = \"object\" === typeof e.attrs ? e.attrs : {}, e.singleton || (e.singleton = d()), e.insertInto || (e.insertInto = \"head\"), e.insertAt || (e.insertAt = \"bottom\");\n      var t = a(l, e);\n      return n(t, e), function (l) {\n        for (var c = [], i = 0; i < t.length; i++) {\n          var r = t[i],\n              o = f[r.id];\n          o.refs--, c.push(o);\n        }\n\n        if (l) {\n          n(a(l, e), e);\n        }\n\n        for (var i = 0; i < c.length; i++) {\n          var o = c[i];\n\n          if (0 === o.refs) {\n            for (var s = 0; s < o.parts.length; s++) {\n              o.parts[s]();\n            }\n\n            delete f[o.id];\n          }\n        }\n      };\n    };\n\n    var b = function () {\n      var l = [];\n      return function (e, t) {\n        return l[e] = t, l.filter(Boolean).join(\"\\n\");\n      };\n    }();\n  }, function (l, e) {\n    l.exports = function (l) {\n      var e = \"undefined\" !== typeof window && window.location;\n      if (!e) throw new Error(\"fixUrls requires window.location\");\n      if (!l || \"string\" !== typeof l) return l;\n      var t = e.protocol + \"//\" + e.host,\n          n = t + e.pathname.replace(/\\/[^\\/]*$/, \"/\");\n      return l.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function (l, e) {\n        var a = e.trim().replace(/^\"(.*)\"$/, function (l, e) {\n          return e;\n        }).replace(/^'(.*)'$/, function (l, e) {\n          return e;\n        });\n        if (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/)/i.test(a)) return l;\n        var c;\n        return c = 0 === a.indexOf(\"//\") ? a : 0 === a.indexOf(\"/\") ? t + a : n + a.replace(/^\\.\\//, \"\"), \"url(\" + JSON.stringify(c) + \")\";\n      });\n    };\n  }, function (l, e, t) {\n    (function (e) {\n      if (\"production\" !== e.env.NODE_ENV) {\n        var n = \"function\" === typeof Symbol && Symbol.for && Symbol.for(\"react.element\") || 60103,\n            a = function a(l) {\n          return \"object\" === typeof l && null !== l && l.$$typeof === n;\n        };\n\n        l.exports = t(34)(a, !0);\n      } else l.exports = t(37)();\n    }).call(e, t(1));\n  }, function (l, e, t) {\n    \"use strict\";\n\n    (function (e) {\n      var n = t(3),\n          a = t(4),\n          c = t(6),\n          i = t(35),\n          r = t(5),\n          o = t(36);\n\n      l.exports = function (l, t) {\n        function s(l) {\n          var e = l && (T && l[T] || l[A]);\n          if (\"function\" === typeof e) return e;\n        }\n\n        function h(l, e) {\n          return l === e ? 0 !== l || 1 / l === 1 / e : l !== l && e !== e;\n        }\n\n        function p(l) {\n          this.message = l, this.stack = \"\";\n        }\n\n        function u(l) {\n          function n(n, s, h, u, M, f, d) {\n            if (u = u || k, f = f || h, d !== r) if (t) a(!1, \"Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types\");else if (\"production\" !== e.env.NODE_ENV && \"undefined\" !== typeof console) {\n              var m = u + \":\" + h;\n              !i[m] && o < 3 && (c(!1, \"You are manually calling a React.PropTypes validation function for the `%s` prop on `%s`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details.\", f, u), i[m] = !0, o++);\n            }\n            return null == s[h] ? n ? new p(null === s[h] ? \"The \" + M + \" `\" + f + \"` is marked as required in `\" + u + \"`, but its value is `null`.\" : \"The \" + M + \" `\" + f + \"` is marked as required in `\" + u + \"`, but its value is `undefined`.\") : null : l(s, h, u, M, f);\n          }\n\n          if (\"production\" !== e.env.NODE_ENV) var i = {},\n              o = 0;\n          var s = n.bind(null, !1);\n          return s.isRequired = n.bind(null, !0), s;\n        }\n\n        function M(l) {\n          function e(e, t, n, a, c, i) {\n            var r = e[t];\n            if (x(r) !== l) return new p(\"Invalid \" + a + \" `\" + c + \"` of type `\" + w(r) + \"` supplied to `\" + n + \"`, expected `\" + l + \"`.\");\n            return null;\n          }\n\n          return u(e);\n        }\n\n        function f(l) {\n          function e(e, t, n, a, c) {\n            if (\"function\" !== typeof l) return new p(\"Property `\" + c + \"` of component `\" + n + \"` has invalid PropType notation inside arrayOf.\");\n            var i = e[t];\n\n            if (!Array.isArray(i)) {\n              return new p(\"Invalid \" + a + \" `\" + c + \"` of type `\" + x(i) + \"` supplied to `\" + n + \"`, expected an array.\");\n            }\n\n            for (var o = 0; o < i.length; o++) {\n              var s = l(i, o, n, a, c + \"[\" + o + \"]\", r);\n              if (s instanceof Error) return s;\n            }\n\n            return null;\n          }\n\n          return u(e);\n        }\n\n        function d(l) {\n          function e(e, t, n, a, c) {\n            if (!(e[t] instanceof l)) {\n              var i = l.name || k;\n              return new p(\"Invalid \" + a + \" `\" + c + \"` of type `\" + C(e[t]) + \"` supplied to `\" + n + \"`, expected instance of `\" + i + \"`.\");\n            }\n\n            return null;\n          }\n\n          return u(e);\n        }\n\n        function m(l) {\n          function t(e, t, n, a, c) {\n            for (var i = e[t], r = 0; r < l.length; r++) {\n              if (h(i, l[r])) return null;\n            }\n\n            return new p(\"Invalid \" + a + \" `\" + c + \"` of value `\" + i + \"` supplied to `\" + n + \"`, expected one of \" + JSON.stringify(l) + \".\");\n          }\n\n          return Array.isArray(l) ? u(t) : (\"production\" !== e.env.NODE_ENV && c(!1, \"Invalid argument supplied to oneOf, expected an instance of array.\"), n.thatReturnsNull);\n        }\n\n        function Z(l) {\n          function e(e, t, n, a, c) {\n            if (\"function\" !== typeof l) return new p(\"Property `\" + c + \"` of component `\" + n + \"` has invalid PropType notation inside objectOf.\");\n            var i = e[t],\n                o = x(i);\n            if (\"object\" !== o) return new p(\"Invalid \" + a + \" `\" + c + \"` of type `\" + o + \"` supplied to `\" + n + \"`, expected an object.\");\n\n            for (var s in i) {\n              if (i.hasOwnProperty(s)) {\n                var h = l(i, s, n, a, c + \".\" + s, r);\n                if (h instanceof Error) return h;\n              }\n            }\n\n            return null;\n          }\n\n          return u(e);\n        }\n\n        function g(l) {\n          function t(e, t, n, a, c) {\n            for (var i = 0; i < l.length; i++) {\n              if (null == (0, l[i])(e, t, n, a, c, r)) return null;\n            }\n\n            return new p(\"Invalid \" + a + \" `\" + c + \"` supplied to `\" + n + \"`.\");\n          }\n\n          if (!Array.isArray(l)) return \"production\" !== e.env.NODE_ENV && c(!1, \"Invalid argument supplied to oneOfType, expected an instance of array.\"), n.thatReturnsNull;\n\n          for (var a = 0; a < l.length; a++) {\n            var i = l[a];\n            if (\"function\" !== typeof i) return c(!1, \"Invalid argument supplied to oneOfType. Expected an array of check functions, but received %s at index %s.\", E(i), a), n.thatReturnsNull;\n          }\n\n          return u(t);\n        }\n\n        function y(l) {\n          function e(e, t, n, a, c) {\n            var i = e[t],\n                o = x(i);\n            if (\"object\" !== o) return new p(\"Invalid \" + a + \" `\" + c + \"` of type `\" + o + \"` supplied to `\" + n + \"`, expected `object`.\");\n\n            for (var s in l) {\n              var h = l[s];\n\n              if (h) {\n                var u = h(i, s, n, a, c + \".\" + s, r);\n                if (u) return u;\n              }\n            }\n\n            return null;\n          }\n\n          return u(e);\n        }\n\n        function v(l) {\n          function e(e, t, n, a, c) {\n            var o = e[t],\n                s = x(o);\n            if (\"object\" !== s) return new p(\"Invalid \" + a + \" `\" + c + \"` of type `\" + s + \"` supplied to `\" + n + \"`, expected `object`.\");\n            var h = i({}, e[t], l);\n\n            for (var u in h) {\n              var M = l[u];\n              if (!M) return new p(\"Invalid \" + a + \" `\" + c + \"` key `\" + u + \"` supplied to `\" + n + \"`.\\nBad object: \" + JSON.stringify(e[t], null, \"  \") + \"\\nValid keys: \" + JSON.stringify(Object.keys(l), null, \"  \"));\n              var f = M(o, u, n, a, c + \".\" + u, r);\n              if (f) return f;\n            }\n\n            return null;\n          }\n\n          return u(e);\n        }\n\n        function b(e) {\n          switch (typeof e) {\n            case \"number\":\n            case \"string\":\n            case \"undefined\":\n              return !0;\n\n            case \"boolean\":\n              return !e;\n\n            case \"object\":\n              if (Array.isArray(e)) return e.every(b);\n              if (null === e || l(e)) return !0;\n              var t = s(e);\n              if (!t) return !1;\n              var n,\n                  a = t.call(e);\n\n              if (t !== e.entries) {\n                for (; !(n = a.next()).done;) {\n                  if (!b(n.value)) return !1;\n                }\n              } else for (; !(n = a.next()).done;) {\n                var c = n.value;\n                if (c && !b(c[1])) return !1;\n              }\n\n              return !0;\n\n            default:\n              return !1;\n          }\n        }\n\n        function S(l, e) {\n          return \"symbol\" === l || \"Symbol\" === e[\"@@toStringTag\"] || \"function\" === typeof Symbol && e instanceof Symbol;\n        }\n\n        function x(l) {\n          var e = typeof l;\n          return Array.isArray(l) ? \"array\" : l instanceof RegExp ? \"object\" : S(e, l) ? \"symbol\" : e;\n        }\n\n        function w(l) {\n          if (\"undefined\" === typeof l || null === l) return \"\" + l;\n          var e = x(l);\n\n          if (\"object\" === e) {\n            if (l instanceof Date) return \"date\";\n            if (l instanceof RegExp) return \"regexp\";\n          }\n\n          return e;\n        }\n\n        function E(l) {\n          var e = w(l);\n\n          switch (e) {\n            case \"array\":\n            case \"object\":\n              return \"an \" + e;\n\n            case \"boolean\":\n            case \"date\":\n            case \"regexp\":\n              return \"a \" + e;\n\n            default:\n              return e;\n          }\n        }\n\n        function C(l) {\n          return l.constructor && l.constructor.name ? l.constructor.name : k;\n        }\n\n        var T = \"function\" === typeof Symbol && Symbol.iterator,\n            A = \"@@iterator\",\n            k = \"<<anonymous>>\",\n            z = {\n          array: M(\"array\"),\n          bool: M(\"boolean\"),\n          func: M(\"function\"),\n          number: M(\"number\"),\n          object: M(\"object\"),\n          string: M(\"string\"),\n          symbol: M(\"symbol\"),\n          any: function () {\n            return u(n.thatReturnsNull);\n          }(),\n          arrayOf: f,\n          element: function () {\n            function e(e, t, n, a, c) {\n              var i = e[t];\n\n              if (!l(i)) {\n                return new p(\"Invalid \" + a + \" `\" + c + \"` of type `\" + x(i) + \"` supplied to `\" + n + \"`, expected a single ReactElement.\");\n              }\n\n              return null;\n            }\n\n            return u(e);\n          }(),\n          instanceOf: d,\n          node: function () {\n            function l(l, e, t, n, a) {\n              return b(l[e]) ? null : new p(\"Invalid \" + n + \" `\" + a + \"` supplied to `\" + t + \"`, expected a ReactNode.\");\n            }\n\n            return u(l);\n          }(),\n          objectOf: Z,\n          oneOf: m,\n          oneOfType: g,\n          shape: y,\n          exact: v\n        };\n        return p.prototype = Error.prototype, z.checkPropTypes = o, z.PropTypes = z, z;\n      };\n    }).call(e, t(1));\n  }, function (l, e, t) {\n    \"use strict\";\n\n    function n(l) {\n      if (null === l || void 0 === l) throw new TypeError(\"Object.assign cannot be called with null or undefined\");\n      return Object(l);\n    }\n\n    var a = Object.getOwnPropertySymbols,\n        c = Object.prototype.hasOwnProperty,\n        i = Object.prototype.propertyIsEnumerable;\n    l.exports = function () {\n      try {\n        if (!Object.assign) return !1;\n        var l = new String(\"abc\");\n        if (l[5] = \"de\", \"5\" === Object.getOwnPropertyNames(l)[0]) return !1;\n\n        for (var e = {}, t = 0; t < 10; t++) {\n          e[\"_\" + String.fromCharCode(t)] = t;\n        }\n\n        if (\"0123456789\" !== Object.getOwnPropertyNames(e).map(function (l) {\n          return e[l];\n        }).join(\"\")) return !1;\n        var n = {};\n        return \"abcdefghijklmnopqrst\".split(\"\").forEach(function (l) {\n          n[l] = l;\n        }), \"abcdefghijklmnopqrst\" === Object.keys(Object.assign({}, n)).join(\"\");\n      } catch (l) {\n        return !1;\n      }\n    }() ? Object.assign : function (l, e) {\n      for (var t, r, o = n(l), s = 1; s < arguments.length; s++) {\n        t = Object(arguments[s]);\n\n        for (var h in t) {\n          c.call(t, h) && (o[h] = t[h]);\n        }\n\n        if (a) {\n          r = a(t);\n\n          for (var p = 0; p < r.length; p++) {\n            i.call(t, r[p]) && (o[r[p]] = t[r[p]]);\n          }\n        }\n      }\n\n      return o;\n    };\n  }, function (l, e, t) {\n    \"use strict\";\n\n    (function (e) {\n      function n(l, t, n, o, s) {\n        if (\"production\" !== e.env.NODE_ENV) for (var h in l) {\n          if (l.hasOwnProperty(h)) {\n            var p;\n\n            try {\n              a(\"function\" === typeof l[h], \"%s: %s type `%s` is invalid; it must be a function, usually from the `prop-types` package, but received `%s`.\", o || \"React class\", n, h, typeof l[h]), p = l[h](t, h, o, n, null, i);\n            } catch (l) {\n              p = l;\n            }\n\n            if (c(!p || p instanceof Error, \"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\", o || \"React class\", n, h, typeof p), p instanceof Error && !(p.message in r)) {\n              r[p.message] = !0;\n              var u = s ? s() : \"\";\n              c(!1, \"Failed %s type: %s%s\", n, p.message, null != u ? u : \"\");\n            }\n          }\n        }\n      }\n\n      if (\"production\" !== e.env.NODE_ENV) var a = t(4),\n          c = t(6),\n          i = t(5),\n          r = {};\n      l.exports = n;\n    }).call(e, t(1));\n  }, function (l, e, t) {\n    \"use strict\";\n\n    var n = t(3),\n        a = t(4),\n        c = t(5);\n\n    l.exports = function () {\n      function l(l, e, t, n, i, r) {\n        r !== c && a(!1, \"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types\");\n      }\n\n      function e() {\n        return l;\n      }\n\n      l.isRequired = l;\n      var t = {\n        array: l,\n        bool: l,\n        func: l,\n        number: l,\n        object: l,\n        string: l,\n        symbol: l,\n        any: l,\n        arrayOf: e,\n        element: l,\n        instanceOf: e,\n        node: l,\n        objectOf: e,\n        oneOf: e,\n        oneOfType: e,\n        shape: e,\n        exact: e\n      };\n      return t.checkPropTypes = n, t.PropTypes = t, t;\n    };\n  }, function (l, e, t) {\n    function n(l) {\n      return t(a(l));\n    }\n\n    function a(l) {\n      var e = c[l];\n      if (!(e + 1)) throw new Error(\"Cannot find module '\" + l + \"'.\");\n      return e;\n    }\n\n    var c = {\n      \"./\": 2,\n      \"./africa_mill\": 7,\n      \"./africa_mill.js\": 7,\n      \"./ar_mill\": 8,\n      \"./ar_mill.js\": 8,\n      \"./asia_mill\": 9,\n      \"./asia_mill.js\": 9,\n      \"./brazil\": 10,\n      \"./brazil.js\": 10,\n      \"./ca_lcc\": 11,\n      \"./ca_lcc.js\": 11,\n      \"./ch_mill\": 12,\n      \"./ch_mill.js\": 12,\n      \"./continents_mill\": 13,\n      \"./continents_mill.js\": 13,\n      \"./es_mill\": 14,\n      \"./es_mill.js\": 14,\n      \"./europe_mill\": 15,\n      \"./europe_mill.js\": 15,\n      \"./index\": 2,\n      \"./index.js\": 2,\n      \"./north_america_mill\": 16,\n      \"./north_america_mill.js\": 16,\n      \"./oceania_mill\": 17,\n      \"./oceania_mill.js\": 17,\n      \"./se_mill\": 18,\n      \"./se_mill.js\": 18,\n      \"./south_america_mill\": 19,\n      \"./south_america_mill.js\": 19,\n      \"./us_aea\": 20,\n      \"./us_aea.js\": 20,\n      \"./vietnam\": 21,\n      \"./vietnam.js\": 21,\n      \"./world_mill\": 22,\n      \"./world_mill.js\": 22\n    };\n    n.keys = function () {\n      return Object.keys(c);\n    }, n.resolve = a, l.exports = n, n.id = 38;\n  }]);\n});","//     Underscore.js 1.9.1\n//     http://underscorejs.org\n//     (c) 2009-2018 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n(function () {\n  // Baseline setup\n  // --------------\n  // Establish the root object, `window` (`self`) in the browser, `global`\n  // on the server, or `this` in some virtual machines. We use `self`\n  // instead of `window` for `WebWorker` support.\n  var root = typeof self == 'object' && self.self === self && self || typeof global == 'object' && global.global === global && global || this || {}; // Save the previous value of the `_` variable.\n\n  var previousUnderscore = root._; // Save bytes in the minified (but not gzipped) version:\n\n  var ArrayProto = Array.prototype,\n      ObjProto = Object.prototype;\n  var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null; // Create quick reference variables for speed access to core prototypes.\n\n  var push = ArrayProto.push,\n      slice = ArrayProto.slice,\n      toString = ObjProto.toString,\n      hasOwnProperty = ObjProto.hasOwnProperty; // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n\n  var nativeIsArray = Array.isArray,\n      nativeKeys = Object.keys,\n      nativeCreate = Object.create; // Naked function reference for surrogate-prototype-swapping.\n\n  var Ctor = function Ctor() {}; // Create a safe reference to the Underscore object for use below.\n\n\n  var _ = function _(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  }; // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for their old module API. If we're in\n  // the browser, add `_` as a global object.\n  // (`nodeType` is checked to ensure that `module`\n  // and `exports` are not HTML elements.)\n\n\n  if (typeof exports != 'undefined' && !exports.nodeType) {\n    if (typeof module != 'undefined' && !module.nodeType && module.exports) {\n      exports = module.exports = _;\n    }\n\n    exports._ = _;\n  } else {\n    root._ = _;\n  } // Current version.\n\n\n  _.VERSION = '1.9.1'; // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n\n  var optimizeCb = function optimizeCb(func, context, argCount) {\n    if (context === void 0) return func;\n\n    switch (argCount == null ? 3 : argCount) {\n      case 1:\n        return function (value) {\n          return func.call(context, value);\n        };\n      // The 2-argument case is omitted because we’re not using it.\n\n      case 3:\n        return function (value, index, collection) {\n          return func.call(context, value, index, collection);\n        };\n\n      case 4:\n        return function (accumulator, value, index, collection) {\n          return func.call(context, accumulator, value, index, collection);\n        };\n    }\n\n    return function () {\n      return func.apply(context, arguments);\n    };\n  };\n\n  var builtinIteratee; // An internal function to generate callbacks that can be applied to each\n  // element in a collection, returning the desired result — either `identity`,\n  // an arbitrary callback, a property matcher, or a property accessor.\n\n  var cb = function cb(value, context, argCount) {\n    if (_.iteratee !== builtinIteratee) return _.iteratee(value, context);\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return optimizeCb(value, context, argCount);\n    if (_.isObject(value) && !_.isArray(value)) return _.matcher(value);\n    return _.property(value);\n  }; // External wrapper for our callback generator. Users may customize\n  // `_.iteratee` if they want additional predicate/iteratee shorthand styles.\n  // This abstraction hides the internal-only argCount argument.\n\n\n  _.iteratee = builtinIteratee = function builtinIteratee(value, context) {\n    return cb(value, context, Infinity);\n  }; // Some functions take a variable number of arguments, or a few expected\n  // arguments at the beginning and then a variable number of values to operate\n  // on. This helper accumulates all remaining arguments past the function’s\n  // argument length (or an explicit `startIndex`), into an array that becomes\n  // the last argument. Similar to ES6’s \"rest parameter\".\n\n\n  var restArguments = function restArguments(func, startIndex) {\n    startIndex = startIndex == null ? func.length - 1 : +startIndex;\n    return function () {\n      var length = Math.max(arguments.length - startIndex, 0),\n          rest = Array(length),\n          index = 0;\n\n      for (; index < length; index++) {\n        rest[index] = arguments[index + startIndex];\n      }\n\n      switch (startIndex) {\n        case 0:\n          return func.call(this, rest);\n\n        case 1:\n          return func.call(this, arguments[0], rest);\n\n        case 2:\n          return func.call(this, arguments[0], arguments[1], rest);\n      }\n\n      var args = Array(startIndex + 1);\n\n      for (index = 0; index < startIndex; index++) {\n        args[index] = arguments[index];\n      }\n\n      args[startIndex] = rest;\n      return func.apply(this, args);\n    };\n  }; // An internal function for creating a new object that inherits from another.\n\n\n  var baseCreate = function baseCreate(prototype) {\n    if (!_.isObject(prototype)) return {};\n    if (nativeCreate) return nativeCreate(prototype);\n    Ctor.prototype = prototype;\n    var result = new Ctor();\n    Ctor.prototype = null;\n    return result;\n  };\n\n  var shallowProperty = function shallowProperty(key) {\n    return function (obj) {\n      return obj == null ? void 0 : obj[key];\n    };\n  };\n\n  var has = function has(obj, path) {\n    return obj != null && hasOwnProperty.call(obj, path);\n  };\n\n  var deepGet = function deepGet(obj, path) {\n    var length = path.length;\n\n    for (var i = 0; i < length; i++) {\n      if (obj == null) return void 0;\n      obj = obj[path[i]];\n    }\n\n    return length ? obj : void 0;\n  }; // Helper for collection methods to determine whether a collection\n  // should be iterated as an array or as an object.\n  // Related: http://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength\n  // Avoids a very nasty iOS 8 JIT bug on ARM-64. #2094\n\n\n  var MAX_ARRAY_INDEX = Math.pow(2, 53) - 1;\n  var getLength = shallowProperty('length');\n\n  var isArrayLike = function isArrayLike(collection) {\n    var length = getLength(collection);\n    return typeof length == 'number' && length >= 0 && length <= MAX_ARRAY_INDEX;\n  }; // Collection Functions\n  // --------------------\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n\n\n  _.each = _.forEach = function (obj, iteratee, context) {\n    iteratee = optimizeCb(iteratee, context);\n    var i, length;\n\n    if (isArrayLike(obj)) {\n      for (i = 0, length = obj.length; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n\n    return obj;\n  }; // Return the results of applying the iteratee to each element.\n\n\n  _.map = _.collect = function (obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n\n    return results;\n  }; // Create a reducing function iterating left or right.\n\n\n  var createReduce = function createReduce(dir) {\n    // Wrap code that reassigns argument variables in a separate function than\n    // the one that accesses `arguments.length` to avoid a perf hit. (#1991)\n    var reducer = function reducer(obj, iteratee, memo, initial) {\n      var keys = !isArrayLike(obj) && _.keys(obj),\n          length = (keys || obj).length,\n          index = dir > 0 ? 0 : length - 1;\n\n      if (!initial) {\n        memo = obj[keys ? keys[index] : index];\n        index += dir;\n      }\n\n      for (; index >= 0 && index < length; index += dir) {\n        var currentKey = keys ? keys[index] : index;\n        memo = iteratee(memo, obj[currentKey], currentKey, obj);\n      }\n\n      return memo;\n    };\n\n    return function (obj, iteratee, memo, context) {\n      var initial = arguments.length >= 3;\n      return reducer(obj, optimizeCb(iteratee, context, 4), memo, initial);\n    };\n  }; // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n\n\n  _.reduce = _.foldl = _.inject = createReduce(1); // The right-associative version of reduce, also known as `foldr`.\n\n  _.reduceRight = _.foldr = createReduce(-1); // Return the first value which passes a truth test. Aliased as `detect`.\n\n  _.find = _.detect = function (obj, predicate, context) {\n    var keyFinder = isArrayLike(obj) ? _.findIndex : _.findKey;\n    var key = keyFinder(obj, predicate, context);\n    if (key !== void 0 && key !== -1) return obj[key];\n  }; // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n\n\n  _.filter = _.select = function (obj, predicate, context) {\n    var results = [];\n    predicate = cb(predicate, context);\n\n    _.each(obj, function (value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n\n    return results;\n  }; // Return all the elements for which a truth test fails.\n\n\n  _.reject = function (obj, predicate, context) {\n    return _.filter(obj, _.negate(cb(predicate)), context);\n  }; // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n\n\n  _.every = _.all = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n\n    return true;\n  }; // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n\n\n  _.some = _.any = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n\n    var keys = !isArrayLike(obj) && _.keys(obj),\n        length = (keys || obj).length;\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n\n    return false;\n  }; // Determine if the array or object contains a given item (using `===`).\n  // Aliased as `includes` and `include`.\n\n\n  _.contains = _.includes = _.include = function (obj, item, fromIndex, guard) {\n    if (!isArrayLike(obj)) obj = _.values(obj);\n    if (typeof fromIndex != 'number' || guard) fromIndex = 0;\n    return _.indexOf(obj, item, fromIndex) >= 0;\n  }; // Invoke a method (with arguments) on every item in a collection.\n\n\n  _.invoke = restArguments(function (obj, path, args) {\n    var contextPath, func;\n\n    if (_.isFunction(path)) {\n      func = path;\n    } else if (_.isArray(path)) {\n      contextPath = path.slice(0, -1);\n      path = path[path.length - 1];\n    }\n\n    return _.map(obj, function (context) {\n      var method = func;\n\n      if (!method) {\n        if (contextPath && contextPath.length) {\n          context = deepGet(context, contextPath);\n        }\n\n        if (context == null) return void 0;\n        method = context[path];\n      }\n\n      return method == null ? method : method.apply(context, args);\n    });\n  }); // Convenience version of a common use case of `map`: fetching a property.\n\n  _.pluck = function (obj, key) {\n    return _.map(obj, _.property(key));\n  }; // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n\n\n  _.where = function (obj, attrs) {\n    return _.filter(obj, _.matcher(attrs));\n  }; // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n\n\n  _.findWhere = function (obj, attrs) {\n    return _.find(obj, _.matcher(attrs));\n  }; // Return the maximum element (or element-based computation).\n\n\n  _.max = function (obj, iteratee, context) {\n    var result = -Infinity,\n        lastComputed = -Infinity,\n        value,\n        computed;\n\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n\n        if (value != null && value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n\n      _.each(obj, function (v, index, list) {\n        computed = iteratee(v, index, list);\n\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n\n    return result;\n  }; // Return the minimum element (or element-based computation).\n\n\n  _.min = function (obj, iteratee, context) {\n    var result = Infinity,\n        lastComputed = Infinity,\n        value,\n        computed;\n\n    if (iteratee == null || typeof iteratee == 'number' && typeof obj[0] != 'object' && obj != null) {\n      obj = isArrayLike(obj) ? obj : _.values(obj);\n\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n\n        if (value != null && value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = cb(iteratee, context);\n\n      _.each(obj, function (v, index, list) {\n        computed = iteratee(v, index, list);\n\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = v;\n          lastComputed = computed;\n        }\n      });\n    }\n\n    return result;\n  }; // Shuffle a collection.\n\n\n  _.shuffle = function (obj) {\n    return _.sample(obj, Infinity);\n  }; // Sample **n** random values from a collection using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n\n\n  _.sample = function (obj, n, guard) {\n    if (n == null || guard) {\n      if (!isArrayLike(obj)) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n\n    var sample = isArrayLike(obj) ? _.clone(obj) : _.values(obj);\n    var length = getLength(sample);\n    n = Math.max(Math.min(n, length), 0);\n    var last = length - 1;\n\n    for (var index = 0; index < n; index++) {\n      var rand = _.random(index, last);\n\n      var temp = sample[index];\n      sample[index] = sample[rand];\n      sample[rand] = temp;\n    }\n\n    return sample.slice(0, n);\n  }; // Sort the object's values by a criterion produced by an iteratee.\n\n\n  _.sortBy = function (obj, iteratee, context) {\n    var index = 0;\n    iteratee = cb(iteratee, context);\n    return _.pluck(_.map(obj, function (value, key, list) {\n      return {\n        value: value,\n        index: index++,\n        criteria: iteratee(value, key, list)\n      };\n    }).sort(function (left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n\n      return left.index - right.index;\n    }), 'value');\n  }; // An internal function used for aggregate \"group by\" operations.\n\n\n  var group = function group(behavior, partition) {\n    return function (obj, iteratee, context) {\n      var result = partition ? [[], []] : {};\n      iteratee = cb(iteratee, context);\n\n      _.each(obj, function (value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n\n      return result;\n    };\n  }; // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n\n\n  _.groupBy = group(function (result, value, key) {\n    if (has(result, key)) result[key].push(value);else result[key] = [value];\n  }); // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n\n  _.indexBy = group(function (result, value, key) {\n    result[key] = value;\n  }); // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n\n  _.countBy = group(function (result, value, key) {\n    if (has(result, key)) result[key]++;else result[key] = 1;\n  });\n  var reStrSymbol = /[^\\ud800-\\udfff]|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\ud800-\\udfff]/g; // Safely create a real, live array from anything iterable.\n\n  _.toArray = function (obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n\n    if (_.isString(obj)) {\n      // Keep surrogate pair characters together\n      return obj.match(reStrSymbol);\n    }\n\n    if (isArrayLike(obj)) return _.map(obj, _.identity);\n    return _.values(obj);\n  }; // Return the number of elements in an object.\n\n\n  _.size = function (obj) {\n    if (obj == null) return 0;\n    return isArrayLike(obj) ? obj.length : _.keys(obj).length;\n  }; // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n\n\n  _.partition = group(function (result, value, pass) {\n    result[pass ? 0 : 1].push(value);\n  }, true); // Array Functions\n  // ---------------\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n\n  _.first = _.head = _.take = function (array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[0];\n    return _.initial(array, array.length - n);\n  }; // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N.\n\n\n  _.initial = function (array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  }; // Get the last element of an array. Passing **n** will return the last N\n  // values in the array.\n\n\n  _.last = function (array, n, guard) {\n    if (array == null || array.length < 1) return n == null ? void 0 : [];\n    if (n == null || guard) return array[array.length - 1];\n    return _.rest(array, Math.max(0, array.length - n));\n  }; // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array.\n\n\n  _.rest = _.tail = _.drop = function (array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  }; // Trim out all falsy values from an array.\n\n\n  _.compact = function (array) {\n    return _.filter(array, Boolean);\n  }; // Internal implementation of a recursive `flatten` function.\n\n\n  var flatten = function flatten(input, shallow, strict, output) {\n    output = output || [];\n    var idx = output.length;\n\n    for (var i = 0, length = getLength(input); i < length; i++) {\n      var value = input[i];\n\n      if (isArrayLike(value) && (_.isArray(value) || _.isArguments(value))) {\n        // Flatten current level of array or arguments object.\n        if (shallow) {\n          var j = 0,\n              len = value.length;\n\n          while (j < len) {\n            output[idx++] = value[j++];\n          }\n        } else {\n          flatten(value, shallow, strict, output);\n          idx = output.length;\n        }\n      } else if (!strict) {\n        output[idx++] = value;\n      }\n    }\n\n    return output;\n  }; // Flatten out an array, either recursively (by default), or just one level.\n\n\n  _.flatten = function (array, shallow) {\n    return flatten(array, shallow, false);\n  }; // Return a version of the array that does not contain the specified value(s).\n\n\n  _.without = restArguments(function (array, otherArrays) {\n    return _.difference(array, otherArrays);\n  }); // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // The faster algorithm will not work with an iteratee if the iteratee\n  // is not a one-to-one function, so providing an iteratee will disable\n  // the faster algorithm.\n  // Aliased as `unique`.\n\n  _.uniq = _.unique = function (array, isSorted, iteratee, context) {\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n\n    if (iteratee != null) iteratee = cb(iteratee, context);\n    var result = [];\n    var seen = [];\n\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var value = array[i],\n          computed = iteratee ? iteratee(value, i, array) : value;\n\n      if (isSorted && !iteratee) {\n        if (!i || seen !== computed) result.push(value);\n        seen = computed;\n      } else if (iteratee) {\n        if (!_.contains(seen, computed)) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (!_.contains(result, value)) {\n        result.push(value);\n      }\n    }\n\n    return result;\n  }; // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n\n\n  _.union = restArguments(function (arrays) {\n    return _.uniq(flatten(arrays, true, true));\n  }); // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n\n  _.intersection = function (array) {\n    var result = [];\n    var argsLength = arguments.length;\n\n    for (var i = 0, length = getLength(array); i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      var j;\n\n      for (j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n\n      if (j === argsLength) result.push(item);\n    }\n\n    return result;\n  }; // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n\n\n  _.difference = restArguments(function (array, rest) {\n    rest = flatten(rest, true, true);\n    return _.filter(array, function (value) {\n      return !_.contains(rest, value);\n    });\n  }); // Complement of _.zip. Unzip accepts an array of arrays and groups\n  // each array's elements on shared indices.\n\n  _.unzip = function (array) {\n    var length = array && _.max(array, getLength).length || 0;\n    var result = Array(length);\n\n    for (var index = 0; index < length; index++) {\n      result[index] = _.pluck(array, index);\n    }\n\n    return result;\n  }; // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n\n\n  _.zip = restArguments(_.unzip); // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values. Passing by pairs is the reverse of _.pairs.\n\n  _.object = function (list, values) {\n    var result = {};\n\n    for (var i = 0, length = getLength(list); i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n\n    return result;\n  }; // Generator function to create the findIndex and findLastIndex functions.\n\n\n  var createPredicateIndexFinder = function createPredicateIndexFinder(dir) {\n    return function (array, predicate, context) {\n      predicate = cb(predicate, context);\n      var length = getLength(array);\n      var index = dir > 0 ? 0 : length - 1;\n\n      for (; index >= 0 && index < length; index += dir) {\n        if (predicate(array[index], index, array)) return index;\n      }\n\n      return -1;\n    };\n  }; // Returns the first index on an array-like that passes a predicate test.\n\n\n  _.findIndex = createPredicateIndexFinder(1);\n  _.findLastIndex = createPredicateIndexFinder(-1); // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n\n  _.sortedIndex = function (array, obj, iteratee, context) {\n    iteratee = cb(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0,\n        high = getLength(array);\n\n    while (low < high) {\n      var mid = Math.floor((low + high) / 2);\n      if (iteratee(array[mid]) < value) low = mid + 1;else high = mid;\n    }\n\n    return low;\n  }; // Generator function to create the indexOf and lastIndexOf functions.\n\n\n  var createIndexFinder = function createIndexFinder(dir, predicateFind, sortedIndex) {\n    return function (array, item, idx) {\n      var i = 0,\n          length = getLength(array);\n\n      if (typeof idx == 'number') {\n        if (dir > 0) {\n          i = idx >= 0 ? idx : Math.max(idx + length, i);\n        } else {\n          length = idx >= 0 ? Math.min(idx + 1, length) : idx + length + 1;\n        }\n      } else if (sortedIndex && idx && length) {\n        idx = sortedIndex(array, item);\n        return array[idx] === item ? idx : -1;\n      }\n\n      if (item !== item) {\n        idx = predicateFind(slice.call(array, i, length), _.isNaN);\n        return idx >= 0 ? idx + i : -1;\n      }\n\n      for (idx = dir > 0 ? i : length - 1; idx >= 0 && idx < length; idx += dir) {\n        if (array[idx] === item) return idx;\n      }\n\n      return -1;\n    };\n  }; // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n\n\n  _.indexOf = createIndexFinder(1, _.findIndex, _.sortedIndex);\n  _.lastIndexOf = createIndexFinder(-1, _.findLastIndex); // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n\n  _.range = function (start, stop, step) {\n    if (stop == null) {\n      stop = start || 0;\n      start = 0;\n    }\n\n    if (!step) {\n      step = stop < start ? -1 : 1;\n    }\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  }; // Chunk a single array into multiple arrays, each containing `count` or fewer\n  // items.\n\n\n  _.chunk = function (array, count) {\n    if (count == null || count < 1) return [];\n    var result = [];\n    var i = 0,\n        length = array.length;\n\n    while (i < length) {\n      result.push(slice.call(array, i, i += count));\n    }\n\n    return result;\n  }; // Function (ahem) Functions\n  // ------------------\n  // Determines whether to execute a function as a constructor\n  // or a normal function with the provided arguments.\n\n\n  var executeBound = function executeBound(sourceFunc, boundFunc, context, callingContext, args) {\n    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);\n    var self = baseCreate(sourceFunc.prototype);\n    var result = sourceFunc.apply(self, args);\n    if (_.isObject(result)) return result;\n    return self;\n  }; // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n\n\n  _.bind = restArguments(function (func, context, args) {\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    var bound = restArguments(function (callArgs) {\n      return executeBound(func, bound, context, this, args.concat(callArgs));\n    });\n    return bound;\n  }); // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder by default, allowing any combination of arguments to be\n  // pre-filled. Set `_.partial.placeholder` for a custom placeholder argument.\n\n  _.partial = restArguments(function (func, boundArgs) {\n    var placeholder = _.partial.placeholder;\n\n    var bound = function bound() {\n      var position = 0,\n          length = boundArgs.length;\n      var args = Array(length);\n\n      for (var i = 0; i < length; i++) {\n        args[i] = boundArgs[i] === placeholder ? arguments[position++] : boundArgs[i];\n      }\n\n      while (position < arguments.length) {\n        args.push(arguments[position++]);\n      }\n\n      return executeBound(func, bound, this, this, args);\n    };\n\n    return bound;\n  });\n  _.partial.placeholder = _; // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n\n  _.bindAll = restArguments(function (obj, keys) {\n    keys = flatten(keys, false, false);\n    var index = keys.length;\n    if (index < 1) throw new Error('bindAll must be passed function names');\n\n    while (index--) {\n      var key = keys[index];\n      obj[key] = _.bind(obj[key], obj);\n    }\n  }); // Memoize an expensive function by storing its results.\n\n  _.memoize = function (func, hasher) {\n    var memoize = function memoize(key) {\n      var cache = memoize.cache;\n      var address = '' + (hasher ? hasher.apply(this, arguments) : key);\n      if (!has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n\n    memoize.cache = {};\n    return memoize;\n  }; // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n\n\n  _.delay = restArguments(function (func, wait, args) {\n    return setTimeout(function () {\n      return func.apply(null, args);\n    }, wait);\n  }); // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n\n  _.defer = _.partial(_.delay, _, 1); // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n\n  _.throttle = function (func, wait, options) {\n    var timeout, context, args, result;\n    var previous = 0;\n    if (!options) options = {};\n\n    var later = function later() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n\n    var throttled = function throttled() {\n      var now = _.now();\n\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n\n      if (remaining <= 0 || remaining > wait) {\n        if (timeout) {\n          clearTimeout(timeout);\n          timeout = null;\n        }\n\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n\n      return result;\n    };\n\n    throttled.cancel = function () {\n      clearTimeout(timeout);\n      previous = 0;\n      timeout = context = args = null;\n    };\n\n    return throttled;\n  }; // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n\n\n  _.debounce = function (func, wait, immediate) {\n    var timeout, result;\n\n    var later = function later(context, args) {\n      timeout = null;\n      if (args) result = func.apply(context, args);\n    };\n\n    var debounced = restArguments(function (args) {\n      if (timeout) clearTimeout(timeout);\n\n      if (immediate) {\n        var callNow = !timeout;\n        timeout = setTimeout(later, wait);\n        if (callNow) result = func.apply(this, args);\n      } else {\n        timeout = _.delay(later, wait, this, args);\n      }\n\n      return result;\n    });\n\n    debounced.cancel = function () {\n      clearTimeout(timeout);\n      timeout = null;\n    };\n\n    return debounced;\n  }; // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n\n\n  _.wrap = function (func, wrapper) {\n    return _.partial(wrapper, func);\n  }; // Returns a negated version of the passed-in predicate.\n\n\n  _.negate = function (predicate) {\n    return function () {\n      return !predicate.apply(this, arguments);\n    };\n  }; // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n\n\n  _.compose = function () {\n    var args = arguments;\n    var start = args.length - 1;\n    return function () {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n\n      while (i--) {\n        result = args[i].call(this, result);\n      }\n\n      return result;\n    };\n  }; // Returns a function that will only be executed on and after the Nth call.\n\n\n  _.after = function (times, func) {\n    return function () {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  }; // Returns a function that will only be executed up to (but not including) the Nth call.\n\n\n  _.before = function (times, func) {\n    var memo;\n    return function () {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      }\n\n      if (times <= 1) func = null;\n      return memo;\n    };\n  }; // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n\n\n  _.once = _.partial(_.before, 2);\n  _.restArguments = restArguments; // Object Functions\n  // ----------------\n  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.\n\n  var hasEnumBug = !{\n    toString: null\n  }.propertyIsEnumerable('toString');\n  var nonEnumerableProps = ['valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n\n  var collectNonEnumProps = function collectNonEnumProps(obj, keys) {\n    var nonEnumIdx = nonEnumerableProps.length;\n    var constructor = obj.constructor;\n    var proto = _.isFunction(constructor) && constructor.prototype || ObjProto; // Constructor is a special case.\n\n    var prop = 'constructor';\n    if (has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);\n\n    while (nonEnumIdx--) {\n      prop = nonEnumerableProps[nonEnumIdx];\n\n      if (prop in obj && obj[prop] !== proto[prop] && !_.contains(keys, prop)) {\n        keys.push(prop);\n      }\n    }\n  }; // Retrieve the names of an object's own properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`.\n\n\n  _.keys = function (obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n\n    for (var key in obj) {\n      if (has(obj, key)) keys.push(key);\n    } // Ahem, IE < 9.\n\n\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  }; // Retrieve all the property names of an object.\n\n\n  _.allKeys = function (obj) {\n    if (!_.isObject(obj)) return [];\n    var keys = [];\n\n    for (var key in obj) {\n      keys.push(key);\n    } // Ahem, IE < 9.\n\n\n    if (hasEnumBug) collectNonEnumProps(obj, keys);\n    return keys;\n  }; // Retrieve the values of an object's properties.\n\n\n  _.values = function (obj) {\n    var keys = _.keys(obj);\n\n    var length = keys.length;\n    var values = Array(length);\n\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n\n    return values;\n  }; // Returns the results of applying the iteratee to each element of the object.\n  // In contrast to _.map it returns an object.\n\n\n  _.mapObject = function (obj, iteratee, context) {\n    iteratee = cb(iteratee, context);\n\n    var keys = _.keys(obj),\n        length = keys.length,\n        results = {};\n\n    for (var index = 0; index < length; index++) {\n      var currentKey = keys[index];\n      results[currentKey] = iteratee(obj[currentKey], currentKey, obj);\n    }\n\n    return results;\n  }; // Convert an object into a list of `[key, value]` pairs.\n  // The opposite of _.object.\n\n\n  _.pairs = function (obj) {\n    var keys = _.keys(obj);\n\n    var length = keys.length;\n    var pairs = Array(length);\n\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n\n    return pairs;\n  }; // Invert the keys and values of an object. The values must be serializable.\n\n\n  _.invert = function (obj) {\n    var result = {};\n\n    var keys = _.keys(obj);\n\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n\n    return result;\n  }; // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`.\n\n\n  _.functions = _.methods = function (obj) {\n    var names = [];\n\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n\n    return names.sort();\n  }; // An internal function for creating assigner functions.\n\n\n  var createAssigner = function createAssigner(keysFunc, defaults) {\n    return function (obj) {\n      var length = arguments.length;\n      if (defaults) obj = Object(obj);\n      if (length < 2 || obj == null) return obj;\n\n      for (var index = 1; index < length; index++) {\n        var source = arguments[index],\n            keys = keysFunc(source),\n            l = keys.length;\n\n        for (var i = 0; i < l; i++) {\n          var key = keys[i];\n          if (!defaults || obj[key] === void 0) obj[key] = source[key];\n        }\n      }\n\n      return obj;\n    };\n  }; // Extend a given object with all the properties in passed-in object(s).\n\n\n  _.extend = createAssigner(_.allKeys); // Assigns a given object with all the own properties in the passed-in object(s).\n  // (https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object/assign)\n\n  _.extendOwn = _.assign = createAssigner(_.keys); // Returns the first key on an object that passes a predicate test.\n\n  _.findKey = function (obj, predicate, context) {\n    predicate = cb(predicate, context);\n\n    var keys = _.keys(obj),\n        key;\n\n    for (var i = 0, length = keys.length; i < length; i++) {\n      key = keys[i];\n      if (predicate(obj[key], key, obj)) return key;\n    }\n  }; // Internal pick helper function to determine if `obj` has key `key`.\n\n\n  var keyInObj = function keyInObj(value, key, obj) {\n    return key in obj;\n  }; // Return a copy of the object only containing the whitelisted properties.\n\n\n  _.pick = restArguments(function (obj, keys) {\n    var result = {},\n        iteratee = keys[0];\n    if (obj == null) return result;\n\n    if (_.isFunction(iteratee)) {\n      if (keys.length > 1) iteratee = optimizeCb(iteratee, keys[1]);\n      keys = _.allKeys(obj);\n    } else {\n      iteratee = keyInObj;\n      keys = flatten(keys, false, false);\n      obj = Object(obj);\n    }\n\n    for (var i = 0, length = keys.length; i < length; i++) {\n      var key = keys[i];\n      var value = obj[key];\n      if (iteratee(value, key, obj)) result[key] = value;\n    }\n\n    return result;\n  }); // Return a copy of the object without the blacklisted properties.\n\n  _.omit = restArguments(function (obj, keys) {\n    var iteratee = keys[0],\n        context;\n\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n      if (keys.length > 1) context = keys[1];\n    } else {\n      keys = _.map(flatten(keys, false, false), String);\n\n      iteratee = function iteratee(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n\n    return _.pick(obj, iteratee, context);\n  }); // Fill in a given object with default properties.\n\n  _.defaults = createAssigner(_.allKeys, true); // Creates an object that inherits from the given prototype object.\n  // If additional properties are provided then they will be added to the\n  // created object.\n\n  _.create = function (prototype, props) {\n    var result = baseCreate(prototype);\n    if (props) _.extendOwn(result, props);\n    return result;\n  }; // Create a (shallow-cloned) duplicate of an object.\n\n\n  _.clone = function (obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  }; // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n\n\n  _.tap = function (obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  }; // Returns whether an object has a given set of `key:value` pairs.\n\n\n  _.isMatch = function (object, attrs) {\n    var keys = _.keys(attrs),\n        length = keys.length;\n\n    if (object == null) return !length;\n    var obj = Object(object);\n\n    for (var i = 0; i < length; i++) {\n      var key = keys[i];\n      if (attrs[key] !== obj[key] || !(key in obj)) return false;\n    }\n\n    return true;\n  }; // Internal recursive comparison function for `isEqual`.\n\n\n  var eq, deepEq;\n\n  eq = function eq(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b; // `null` or `undefined` only equal to itself (strict comparison).\n\n    if (a == null || b == null) return false; // `NaN`s are equivalent, but non-reflexive.\n\n    if (a !== a) return b !== b; // Exhaust primitive checks\n\n    var type = typeof a;\n    if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\n    return deepEq(a, b, aStack, bStack);\n  }; // Internal recursive comparison function for `isEqual`.\n\n\n  deepEq = function deepEq(a, b, aStack, bStack) {\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped; // Compare `[[Class]]` names.\n\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]': // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN.\n        if (+a !== +a) return +b !== +b; // An `egal` comparison is performed for other numeric values.\n\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n\n      case '[object Symbol]':\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\n    }\n\n    var areArrays = className === '[object Array]';\n\n    if (!areArrays) {\n      if (typeof a != 'object' || typeof b != 'object') return false; // Objects with different constructors are not equivalent, but `Object`s or `Array`s\n      // from different frames are.\n\n      var aCtor = a.constructor,\n          bCtor = b.constructor;\n\n      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor && _.isFunction(bCtor) && bCtor instanceof bCtor) && 'constructor' in a && 'constructor' in b) {\n        return false;\n      }\n    } // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    // Initializing stack of traversed objects.\n    // It's done here since we only need them for objects and arrays comparison.\n\n\n    aStack = aStack || [];\n    bStack = bStack || [];\n    var length = aStack.length;\n\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    } // Add the first object to the stack of traversed objects.\n\n\n    aStack.push(a);\n    bStack.push(b); // Recursively compare objects and arrays.\n\n    if (areArrays) {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      length = a.length;\n      if (length !== b.length) return false; // Deep compare the contents, ignoring non-numeric properties.\n\n      while (length--) {\n        if (!eq(a[length], b[length], aStack, bStack)) return false;\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a),\n          key;\n\n      length = keys.length; // Ensure that both objects contain the same number of properties before comparing deep equality.\n\n      if (_.keys(b).length !== length) return false;\n\n      while (length--) {\n        // Deep compare each member\n        key = keys[length];\n        if (!(has(b, key) && eq(a[key], b[key], aStack, bStack))) return false;\n      }\n    } // Remove the first object from the stack of traversed objects.\n\n\n    aStack.pop();\n    bStack.pop();\n    return true;\n  }; // Perform a deep comparison to check if two objects are equal.\n\n\n  _.isEqual = function (a, b) {\n    return eq(a, b);\n  }; // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n\n\n  _.isEmpty = function (obj) {\n    if (obj == null) return true;\n    if (isArrayLike(obj) && (_.isArray(obj) || _.isString(obj) || _.isArguments(obj))) return obj.length === 0;\n    return _.keys(obj).length === 0;\n  }; // Is a given value a DOM element?\n\n\n  _.isElement = function (obj) {\n    return !!(obj && obj.nodeType === 1);\n  }; // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n\n\n  _.isArray = nativeIsArray || function (obj) {\n    return toString.call(obj) === '[object Array]';\n  }; // Is a given variable an object?\n\n\n  _.isObject = function (obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  }; // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError, isMap, isWeakMap, isSet, isWeakSet.\n\n\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error', 'Symbol', 'Map', 'WeakMap', 'Set', 'WeakSet'], function (name) {\n    _['is' + name] = function (obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  }); // Define a fallback version of the method in browsers (ahem, IE < 9), where\n  // there isn't any inspectable \"Arguments\" type.\n\n\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function (obj) {\n      return has(obj, 'callee');\n    };\n  } // Optimize `isFunction` if appropriate. Work around some typeof bugs in old v8,\n  // IE 11 (#1621), Safari 8 (#1929), and PhantomJS (#2236).\n\n\n  var nodelist = root.document && root.document.childNodes;\n\n  if (typeof /./ != 'function' && typeof Int8Array != 'object' && typeof nodelist != 'function') {\n    _.isFunction = function (obj) {\n      return typeof obj == 'function' || false;\n    };\n  } // Is a given object a finite number?\n\n\n  _.isFinite = function (obj) {\n    return !_.isSymbol(obj) && isFinite(obj) && !isNaN(parseFloat(obj));\n  }; // Is the given value `NaN`?\n\n\n  _.isNaN = function (obj) {\n    return _.isNumber(obj) && isNaN(obj);\n  }; // Is a given value a boolean?\n\n\n  _.isBoolean = function (obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  }; // Is a given value equal to null?\n\n\n  _.isNull = function (obj) {\n    return obj === null;\n  }; // Is a given variable undefined?\n\n\n  _.isUndefined = function (obj) {\n    return obj === void 0;\n  }; // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n\n\n  _.has = function (obj, path) {\n    if (!_.isArray(path)) {\n      return has(obj, path);\n    }\n\n    var length = path.length;\n\n    for (var i = 0; i < length; i++) {\n      var key = path[i];\n\n      if (obj == null || !hasOwnProperty.call(obj, key)) {\n        return false;\n      }\n\n      obj = obj[key];\n    }\n\n    return !!length;\n  }; // Utility Functions\n  // -----------------\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n\n\n  _.noConflict = function () {\n    root._ = previousUnderscore;\n    return this;\n  }; // Keep the identity function around for default iteratees.\n\n\n  _.identity = function (value) {\n    return value;\n  }; // Predicate-generating functions. Often useful outside of Underscore.\n\n\n  _.constant = function (value) {\n    return function () {\n      return value;\n    };\n  };\n\n  _.noop = function () {}; // Creates a function that, when passed an object, will traverse that object’s\n  // properties down the given `path`, specified as an array of keys or indexes.\n\n\n  _.property = function (path) {\n    if (!_.isArray(path)) {\n      return shallowProperty(path);\n    }\n\n    return function (obj) {\n      return deepGet(obj, path);\n    };\n  }; // Generates a function for a given object that returns a given property.\n\n\n  _.propertyOf = function (obj) {\n    if (obj == null) {\n      return function () {};\n    }\n\n    return function (path) {\n      return !_.isArray(path) ? obj[path] : deepGet(obj, path);\n    };\n  }; // Returns a predicate for checking whether an object has a given set of\n  // `key:value` pairs.\n\n\n  _.matcher = _.matches = function (attrs) {\n    attrs = _.extendOwn({}, attrs);\n    return function (obj) {\n      return _.isMatch(obj, attrs);\n    };\n  }; // Run a function **n** times.\n\n\n  _.times = function (n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = optimizeCb(iteratee, context, 1);\n\n    for (var i = 0; i < n; i++) {\n      accum[i] = iteratee(i);\n    }\n\n    return accum;\n  }; // Return a random integer between min and max (inclusive).\n\n\n  _.random = function (min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n\n    return min + Math.floor(Math.random() * (max - min + 1));\n  }; // A (possibly faster) way to get the current timestamp as an integer.\n\n\n  _.now = Date.now || function () {\n    return new Date().getTime();\n  }; // List of HTML entities for escaping.\n\n\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n\n  var unescapeMap = _.invert(escapeMap); // Functions for escaping and unescaping strings to/from HTML interpolation.\n\n\n  var createEscaper = function createEscaper(map) {\n    var escaper = function escaper(match) {\n      return map[match];\n    }; // Regexes for identifying a key that needs to be escaped.\n\n\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function (string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap); // Traverses the children of `obj` along `path`. If a child is a function, it\n  // is invoked with its parent as context. Returns the value of the final\n  // child, or `fallback` if any child is undefined.\n\n  _.result = function (obj, path, fallback) {\n    if (!_.isArray(path)) path = [path];\n    var length = path.length;\n\n    if (!length) {\n      return _.isFunction(fallback) ? fallback.call(obj) : fallback;\n    }\n\n    for (var i = 0; i < length; i++) {\n      var prop = obj == null ? void 0 : obj[path[i]];\n\n      if (prop === void 0) {\n        prop = fallback;\n        i = length; // Ensure we don't continue iterating.\n      }\n\n      obj = _.isFunction(prop) ? prop.call(obj) : prop;\n    }\n\n    return obj;\n  }; // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n\n\n  var idCounter = 0;\n\n  _.uniqueId = function (prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  }; // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n\n\n  _.templateSettings = {\n    evaluate: /<%([\\s\\S]+?)%>/g,\n    interpolate: /<%=([\\s\\S]+?)%>/g,\n    escape: /<%-([\\s\\S]+?)%>/g\n  }; // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n\n  var noMatch = /(.)^/; // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n\n  var escapes = {\n    \"'\": \"'\",\n    '\\\\': '\\\\',\n    '\\r': 'r',\n    '\\n': 'n',\n    \"\\u2028\": 'u2028',\n    \"\\u2029\": 'u2029'\n  };\n  var escapeRegExp = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function escapeChar(match) {\n    return '\\\\' + escapes[match];\n  }; // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n\n\n  _.template = function (text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings); // Combine delimiters into one regular expression via alternation.\n\n    var matcher = RegExp([(settings.escape || noMatch).source, (settings.interpolate || noMatch).source, (settings.evaluate || noMatch).source].join('|') + '|$', 'g'); // Compile the template source, escaping string literals appropriately.\n\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function (match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escapeRegExp, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      } // Adobe VMs need the match returned to produce the correct offset.\n\n\n      return match;\n    });\n    source += \"';\\n\"; // If a variable is not specified, place data values in local scope.\n\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n    source = \"var __t,__p='',__j=Array.prototype.join,\" + \"print=function(){__p+=__j.call(arguments,'');};\\n\" + source + 'return __p;\\n';\n    var render;\n\n    try {\n      render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function template(data) {\n      return render.call(this, data, _);\n    }; // Provide the compiled source as a convenience for precompilation.\n\n\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n    return template;\n  }; // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n\n\n  _.chain = function (obj) {\n    var instance = _(obj);\n\n    instance._chain = true;\n    return instance;\n  }; // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n  // Helper function to continue chaining intermediate results.\n\n\n  var chainResult = function chainResult(instance, obj) {\n    return instance._chain ? _(obj).chain() : obj;\n  }; // Add your own custom functions to the Underscore object.\n\n\n  _.mixin = function (obj) {\n    _.each(_.functions(obj), function (name) {\n      var func = _[name] = obj[name];\n\n      _.prototype[name] = function () {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return chainResult(this, func.apply(_, args));\n      };\n    });\n\n    return _;\n  }; // Add all of the Underscore functions to the wrapper object.\n\n\n  _.mixin(_); // Add all mutator Array functions to the wrapper.\n\n\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function (name) {\n    var method = ArrayProto[name];\n\n    _.prototype[name] = function () {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return chainResult(this, obj);\n    };\n  }); // Add all accessor Array functions to the wrapper.\n\n\n  _.each(['concat', 'join', 'slice'], function (name) {\n    var method = ArrayProto[name];\n\n    _.prototype[name] = function () {\n      return chainResult(this, method.apply(this._wrapped, arguments));\n    };\n  }); // Extracts the result from a wrapped and chained object.\n\n\n  _.prototype.value = function () {\n    return this._wrapped;\n  }; // Provide unwrapping proxy for some methods used in engine operations\n  // such as arithmetic and JSON stringification.\n\n\n  _.prototype.valueOf = _.prototype.toJSON = _.prototype.value;\n\n  _.prototype.toString = function () {\n    return String(this._wrapped);\n  }; // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n\n\n  if (typeof define == 'function' && define.amd) {\n    define('underscore', [], function () {\n      return _;\n    });\n  }\n})();","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"react-calendar/dist/Calendar.css\");\n\nvar _DateRangePicker = _interopRequireDefault(require(\"./DateRangePicker\"));\n\nrequire(\"./DateRangePicker.css\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // File is created during build phase and placed in dist directory\n// eslint-disable-next-line import/no-unresolved\n\n\nvar _default = _DateRangePicker.default;\nexports.default = _default;","/** @license React v16.8.6\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar k = require(\"object-assign\"),\n    n = \"function\" === typeof Symbol && Symbol.for,\n    p = n ? Symbol.for(\"react.element\") : 60103,\n    q = n ? Symbol.for(\"react.portal\") : 60106,\n    r = n ? Symbol.for(\"react.fragment\") : 60107,\n    t = n ? Symbol.for(\"react.strict_mode\") : 60108,\n    u = n ? Symbol.for(\"react.profiler\") : 60114,\n    v = n ? Symbol.for(\"react.provider\") : 60109,\n    w = n ? Symbol.for(\"react.context\") : 60110,\n    x = n ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    y = n ? Symbol.for(\"react.forward_ref\") : 60112,\n    z = n ? Symbol.for(\"react.suspense\") : 60113,\n    aa = n ? Symbol.for(\"react.memo\") : 60115,\n    ba = n ? Symbol.for(\"react.lazy\") : 60116,\n    A = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction ca(a, b, d, c, e, g, h, f) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [d, c, e, g, h, f],\n          m = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[m++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction B(a) {\n  for (var b = arguments.length - 1, d = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, c = 0; c < b; c++) {\n    d += \"&args[]=\" + encodeURIComponent(arguments[c + 1]);\n  }\n\n  ca(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", d);\n}\n\nvar C = {\n  isMounted: function isMounted() {\n    return !1;\n  },\n  enqueueForceUpdate: function enqueueForceUpdate() {},\n  enqueueReplaceState: function enqueueReplaceState() {},\n  enqueueSetState: function enqueueSetState() {}\n},\n    D = {};\n\nfunction E(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nE.prototype.isReactComponent = {};\n\nE.prototype.setState = function (a, b) {\n  \"object\" !== typeof a && \"function\" !== typeof a && null != a ? B(\"85\") : void 0;\n  this.updater.enqueueSetState(this, a, b, \"setState\");\n};\n\nE.prototype.forceUpdate = function (a) {\n  this.updater.enqueueForceUpdate(this, a, \"forceUpdate\");\n};\n\nfunction F() {}\n\nF.prototype = E.prototype;\n\nfunction G(a, b, d) {\n  this.props = a;\n  this.context = b;\n  this.refs = D;\n  this.updater = d || C;\n}\n\nvar H = G.prototype = new F();\nH.constructor = G;\nk(H, E.prototype);\nH.isPureReactComponent = !0;\nvar I = {\n  current: null\n},\n    J = {\n  current: null\n},\n    K = Object.prototype.hasOwnProperty,\n    L = {\n  key: !0,\n  ref: !0,\n  __self: !0,\n  __source: !0\n};\n\nfunction M(a, b, d) {\n  var c = void 0,\n      e = {},\n      g = null,\n      h = null;\n  if (null != b) for (c in void 0 !== b.ref && (h = b.ref), void 0 !== b.key && (g = \"\" + b.key), b) {\n    K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = b[c]);\n  }\n  var f = arguments.length - 2;\n  if (1 === f) e.children = d;else if (1 < f) {\n    for (var l = Array(f), m = 0; m < f; m++) {\n      l[m] = arguments[m + 2];\n    }\n\n    e.children = l;\n  }\n  if (a && a.defaultProps) for (c in f = a.defaultProps, f) {\n    void 0 === e[c] && (e[c] = f[c]);\n  }\n  return {\n    $$typeof: p,\n    type: a,\n    key: g,\n    ref: h,\n    props: e,\n    _owner: J.current\n  };\n}\n\nfunction da(a, b) {\n  return {\n    $$typeof: p,\n    type: a.type,\n    key: b,\n    ref: a.ref,\n    props: a.props,\n    _owner: a._owner\n  };\n}\n\nfunction N(a) {\n  return \"object\" === typeof a && null !== a && a.$$typeof === p;\n}\n\nfunction escape(a) {\n  var b = {\n    \"=\": \"=0\",\n    \":\": \"=2\"\n  };\n  return \"$\" + (\"\" + a).replace(/[=:]/g, function (a) {\n    return b[a];\n  });\n}\n\nvar O = /\\/+/g,\n    P = [];\n\nfunction Q(a, b, d, c) {\n  if (P.length) {\n    var e = P.pop();\n    e.result = a;\n    e.keyPrefix = b;\n    e.func = d;\n    e.context = c;\n    e.count = 0;\n    return e;\n  }\n\n  return {\n    result: a,\n    keyPrefix: b,\n    func: d,\n    context: c,\n    count: 0\n  };\n}\n\nfunction R(a) {\n  a.result = null;\n  a.keyPrefix = null;\n  a.func = null;\n  a.context = null;\n  a.count = 0;\n  10 > P.length && P.push(a);\n}\n\nfunction S(a, b, d, c) {\n  var e = typeof a;\n  if (\"undefined\" === e || \"boolean\" === e) a = null;\n  var g = !1;\n  if (null === a) g = !0;else switch (e) {\n    case \"string\":\n    case \"number\":\n      g = !0;\n      break;\n\n    case \"object\":\n      switch (a.$$typeof) {\n        case p:\n        case q:\n          g = !0;\n      }\n\n  }\n  if (g) return d(c, a, \"\" === b ? \".\" + T(a, 0) : b), 1;\n  g = 0;\n  b = \"\" === b ? \".\" : b + \":\";\n  if (Array.isArray(a)) for (var h = 0; h < a.length; h++) {\n    e = a[h];\n    var f = b + T(e, h);\n    g += S(e, f, d, c);\n  } else if (null === a || \"object\" !== typeof a ? f = null : (f = A && a[A] || a[\"@@iterator\"], f = \"function\" === typeof f ? f : null), \"function\" === typeof f) for (a = f.call(a), h = 0; !(e = a.next()).done;) {\n    e = e.value, f = b + T(e, h++), g += S(e, f, d, c);\n  } else \"object\" === e && (d = \"\" + a, B(\"31\", \"[object Object]\" === d ? \"object with keys {\" + Object.keys(a).join(\", \") + \"}\" : d, \"\"));\n  return g;\n}\n\nfunction U(a, b, d) {\n  return null == a ? 0 : S(a, \"\", b, d);\n}\n\nfunction T(a, b) {\n  return \"object\" === typeof a && null !== a && null != a.key ? escape(a.key) : b.toString(36);\n}\n\nfunction ea(a, b) {\n  a.func.call(a.context, b, a.count++);\n}\n\nfunction fa(a, b, d) {\n  var c = a.result,\n      e = a.keyPrefix;\n  a = a.func.call(a.context, b, a.count++);\n  Array.isArray(a) ? V(a, c, d, function (a) {\n    return a;\n  }) : null != a && (N(a) && (a = da(a, e + (!a.key || b && b.key === a.key ? \"\" : (\"\" + a.key).replace(O, \"$&/\") + \"/\") + d)), c.push(a));\n}\n\nfunction V(a, b, d, c, e) {\n  var g = \"\";\n  null != d && (g = (\"\" + d).replace(O, \"$&/\") + \"/\");\n  b = Q(b, g, c, e);\n  U(a, fa, b);\n  R(b);\n}\n\nfunction W() {\n  var a = I.current;\n  null === a ? B(\"321\") : void 0;\n  return a;\n}\n\nvar X = {\n  Children: {\n    map: function map(a, b, d) {\n      if (null == a) return a;\n      var c = [];\n      V(a, c, null, b, d);\n      return c;\n    },\n    forEach: function forEach(a, b, d) {\n      if (null == a) return a;\n      b = Q(null, null, b, d);\n      U(a, ea, b);\n      R(b);\n    },\n    count: function count(a) {\n      return U(a, function () {\n        return null;\n      }, null);\n    },\n    toArray: function toArray(a) {\n      var b = [];\n      V(a, b, null, function (a) {\n        return a;\n      });\n      return b;\n    },\n    only: function only(a) {\n      N(a) ? void 0 : B(\"143\");\n      return a;\n    }\n  },\n  createRef: function createRef() {\n    return {\n      current: null\n    };\n  },\n  Component: E,\n  PureComponent: G,\n  createContext: function createContext(a, b) {\n    void 0 === b && (b = null);\n    a = {\n      $$typeof: w,\n      _calculateChangedBits: b,\n      _currentValue: a,\n      _currentValue2: a,\n      _threadCount: 0,\n      Provider: null,\n      Consumer: null\n    };\n    a.Provider = {\n      $$typeof: v,\n      _context: a\n    };\n    return a.Consumer = a;\n  },\n  forwardRef: function forwardRef(a) {\n    return {\n      $$typeof: y,\n      render: a\n    };\n  },\n  lazy: function lazy(a) {\n    return {\n      $$typeof: ba,\n      _ctor: a,\n      _status: -1,\n      _result: null\n    };\n  },\n  memo: function memo(a, b) {\n    return {\n      $$typeof: aa,\n      type: a,\n      compare: void 0 === b ? null : b\n    };\n  },\n  useCallback: function useCallback(a, b) {\n    return W().useCallback(a, b);\n  },\n  useContext: function useContext(a, b) {\n    return W().useContext(a, b);\n  },\n  useEffect: function useEffect(a, b) {\n    return W().useEffect(a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, d) {\n    return W().useImperativeHandle(a, b, d);\n  },\n  useDebugValue: function useDebugValue() {},\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return W().useLayoutEffect(a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    return W().useMemo(a, b);\n  },\n  useReducer: function useReducer(a, b, d) {\n    return W().useReducer(a, b, d);\n  },\n  useRef: function useRef(a) {\n    return W().useRef(a);\n  },\n  useState: function useState(a) {\n    return W().useState(a);\n  },\n  Fragment: r,\n  StrictMode: t,\n  Suspense: z,\n  createElement: M,\n  cloneElement: function cloneElement(a, b, d) {\n    null === a || void 0 === a ? B(\"267\", a) : void 0;\n    var c = void 0,\n        e = k({}, a.props),\n        g = a.key,\n        h = a.ref,\n        f = a._owner;\n\n    if (null != b) {\n      void 0 !== b.ref && (h = b.ref, f = J.current);\n      void 0 !== b.key && (g = \"\" + b.key);\n      var l = void 0;\n      a.type && a.type.defaultProps && (l = a.type.defaultProps);\n\n      for (c in b) {\n        K.call(b, c) && !L.hasOwnProperty(c) && (e[c] = void 0 === b[c] && void 0 !== l ? l[c] : b[c]);\n      }\n    }\n\n    c = arguments.length - 2;\n    if (1 === c) e.children = d;else if (1 < c) {\n      l = Array(c);\n\n      for (var m = 0; m < c; m++) {\n        l[m] = arguments[m + 2];\n      }\n\n      e.children = l;\n    }\n    return {\n      $$typeof: p,\n      type: a.type,\n      key: g,\n      ref: h,\n      props: e,\n      _owner: f\n    };\n  },\n  createFactory: function createFactory(a) {\n    var b = M.bind(null, a);\n    b.type = a;\n    return b;\n  },\n  isValidElement: N,\n  version: \"16.8.6\",\n  unstable_ConcurrentMode: x,\n  unstable_Profiler: u,\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    ReactCurrentDispatcher: I,\n    ReactCurrentOwner: J,\n    assign: k\n  }\n},\n    Y = {\n  default: X\n},\n    Z = Y && X || Y;\nmodule.exports = Z.default || Z;","/** @license React v16.8.6\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';\n\nvar aa = require(\"react\"),\n    n = require(\"object-assign\"),\n    r = require(\"scheduler\");\n\nfunction ba(a, b, c, d, e, f, g, h) {\n  if (!a) {\n    a = void 0;\n    if (void 0 === b) a = Error(\"Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.\");else {\n      var l = [c, d, e, f, g, h],\n          k = 0;\n      a = Error(b.replace(/%s/g, function () {\n        return l[k++];\n      }));\n      a.name = \"Invariant Violation\";\n    }\n    a.framesToPop = 1;\n    throw a;\n  }\n}\n\nfunction x(a) {\n  for (var b = arguments.length - 1, c = \"https://reactjs.org/docs/error-decoder.html?invariant=\" + a, d = 0; d < b; d++) {\n    c += \"&args[]=\" + encodeURIComponent(arguments[d + 1]);\n  }\n\n  ba(!1, \"Minified React error #\" + a + \"; visit %s for the full message or use the non-minified dev environment for full errors and additional helpful warnings. \", c);\n}\n\naa ? void 0 : x(\"227\");\n\nfunction ca(a, b, c, d, e, f, g, h, l) {\n  var k = Array.prototype.slice.call(arguments, 3);\n\n  try {\n    b.apply(c, k);\n  } catch (m) {\n    this.onError(m);\n  }\n}\n\nvar da = !1,\n    ea = null,\n    fa = !1,\n    ha = null,\n    ia = {\n  onError: function onError(a) {\n    da = !0;\n    ea = a;\n  }\n};\n\nfunction ja(a, b, c, d, e, f, g, h, l) {\n  da = !1;\n  ea = null;\n  ca.apply(ia, arguments);\n}\n\nfunction ka(a, b, c, d, e, f, g, h, l) {\n  ja.apply(this, arguments);\n\n  if (da) {\n    if (da) {\n      var k = ea;\n      da = !1;\n      ea = null;\n    } else x(\"198\"), k = void 0;\n\n    fa || (fa = !0, ha = k);\n  }\n}\n\nvar la = null,\n    ma = {};\n\nfunction na() {\n  if (la) for (var a in ma) {\n    var b = ma[a],\n        c = la.indexOf(a);\n    -1 < c ? void 0 : x(\"96\", a);\n\n    if (!oa[c]) {\n      b.extractEvents ? void 0 : x(\"97\", a);\n      oa[c] = b;\n      c = b.eventTypes;\n\n      for (var d in c) {\n        var e = void 0;\n        var f = c[d],\n            g = b,\n            h = d;\n        pa.hasOwnProperty(h) ? x(\"99\", h) : void 0;\n        pa[h] = f;\n        var l = f.phasedRegistrationNames;\n\n        if (l) {\n          for (e in l) {\n            l.hasOwnProperty(e) && qa(l[e], g, h);\n          }\n\n          e = !0;\n        } else f.registrationName ? (qa(f.registrationName, g, h), e = !0) : e = !1;\n\n        e ? void 0 : x(\"98\", d, a);\n      }\n    }\n  }\n}\n\nfunction qa(a, b, c) {\n  ra[a] ? x(\"100\", a) : void 0;\n  ra[a] = b;\n  sa[a] = b.eventTypes[c].dependencies;\n}\n\nvar oa = [],\n    pa = {},\n    ra = {},\n    sa = {},\n    ta = null,\n    ua = null,\n    va = null;\n\nfunction wa(a, b, c) {\n  var d = a.type || \"unknown-event\";\n  a.currentTarget = va(c);\n  ka(d, b, void 0, a);\n  a.currentTarget = null;\n}\n\nfunction xa(a, b) {\n  null == b ? x(\"30\") : void 0;\n  if (null == a) return b;\n\n  if (Array.isArray(a)) {\n    if (Array.isArray(b)) return a.push.apply(a, b), a;\n    a.push(b);\n    return a;\n  }\n\n  return Array.isArray(b) ? [a].concat(b) : [a, b];\n}\n\nfunction ya(a, b, c) {\n  Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);\n}\n\nvar za = null;\n\nfunction Aa(a) {\n  if (a) {\n    var b = a._dispatchListeners,\n        c = a._dispatchInstances;\n    if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) {\n      wa(a, b[d], c[d]);\n    } else b && wa(a, b, c);\n    a._dispatchListeners = null;\n    a._dispatchInstances = null;\n    a.isPersistent() || a.constructor.release(a);\n  }\n}\n\nvar Ba = {\n  injectEventPluginOrder: function injectEventPluginOrder(a) {\n    la ? x(\"101\") : void 0;\n    la = Array.prototype.slice.call(a);\n    na();\n  },\n  injectEventPluginsByName: function injectEventPluginsByName(a) {\n    var b = !1,\n        c;\n\n    for (c in a) {\n      if (a.hasOwnProperty(c)) {\n        var d = a[c];\n        ma.hasOwnProperty(c) && ma[c] === d || (ma[c] ? x(\"102\", c) : void 0, ma[c] = d, b = !0);\n      }\n    }\n\n    b && na();\n  }\n};\n\nfunction Ca(a, b) {\n  var c = a.stateNode;\n  if (!c) return null;\n  var d = ta(c);\n  if (!d) return null;\n  c = d[b];\n\n  a: switch (b) {\n    case \"onClick\":\n    case \"onClickCapture\":\n    case \"onDoubleClick\":\n    case \"onDoubleClickCapture\":\n    case \"onMouseDown\":\n    case \"onMouseDownCapture\":\n    case \"onMouseMove\":\n    case \"onMouseMoveCapture\":\n    case \"onMouseUp\":\n    case \"onMouseUpCapture\":\n      (d = !d.disabled) || (a = a.type, d = !(\"button\" === a || \"input\" === a || \"select\" === a || \"textarea\" === a));\n      a = !d;\n      break a;\n\n    default:\n      a = !1;\n  }\n\n  if (a) return null;\n  c && \"function\" !== typeof c ? x(\"231\", b, typeof c) : void 0;\n  return c;\n}\n\nfunction Da(a) {\n  null !== a && (za = xa(za, a));\n  a = za;\n  za = null;\n  if (a && (ya(a, Aa), za ? x(\"95\") : void 0, fa)) throw a = ha, fa = !1, ha = null, a;\n}\n\nvar Ea = Math.random().toString(36).slice(2),\n    Fa = \"__reactInternalInstance$\" + Ea,\n    Ga = \"__reactEventHandlers$\" + Ea;\n\nfunction Ha(a) {\n  if (a[Fa]) return a[Fa];\n\n  for (; !a[Fa];) {\n    if (a.parentNode) a = a.parentNode;else return null;\n  }\n\n  a = a[Fa];\n  return 5 === a.tag || 6 === a.tag ? a : null;\n}\n\nfunction Ia(a) {\n  a = a[Fa];\n  return !a || 5 !== a.tag && 6 !== a.tag ? null : a;\n}\n\nfunction Ja(a) {\n  if (5 === a.tag || 6 === a.tag) return a.stateNode;\n  x(\"33\");\n}\n\nfunction Ka(a) {\n  return a[Ga] || null;\n}\n\nfunction La(a) {\n  do {\n    a = a.return;\n  } while (a && 5 !== a.tag);\n\n  return a ? a : null;\n}\n\nfunction Ma(a, b, c) {\n  if (b = Ca(a, c.dispatchConfig.phasedRegistrationNames[b])) c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a);\n}\n\nfunction Na(a) {\n  if (a && a.dispatchConfig.phasedRegistrationNames) {\n    for (var b = a._targetInst, c = []; b;) {\n      c.push(b), b = La(b);\n    }\n\n    for (b = c.length; 0 < b--;) {\n      Ma(c[b], \"captured\", a);\n    }\n\n    for (b = 0; b < c.length; b++) {\n      Ma(c[b], \"bubbled\", a);\n    }\n  }\n}\n\nfunction Oa(a, b, c) {\n  a && c && c.dispatchConfig.registrationName && (b = Ca(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = xa(c._dispatchListeners, b), c._dispatchInstances = xa(c._dispatchInstances, a));\n}\n\nfunction Pa(a) {\n  a && a.dispatchConfig.registrationName && Oa(a._targetInst, null, a);\n}\n\nfunction Qa(a) {\n  ya(a, Na);\n}\n\nvar Ra = !(\"undefined\" === typeof window || !window.document || !window.document.createElement);\n\nfunction Sa(a, b) {\n  var c = {};\n  c[a.toLowerCase()] = b.toLowerCase();\n  c[\"Webkit\" + a] = \"webkit\" + b;\n  c[\"Moz\" + a] = \"moz\" + b;\n  return c;\n}\n\nvar Ta = {\n  animationend: Sa(\"Animation\", \"AnimationEnd\"),\n  animationiteration: Sa(\"Animation\", \"AnimationIteration\"),\n  animationstart: Sa(\"Animation\", \"AnimationStart\"),\n  transitionend: Sa(\"Transition\", \"TransitionEnd\")\n},\n    Ua = {},\n    Va = {};\nRa && (Va = document.createElement(\"div\").style, \"AnimationEvent\" in window || (delete Ta.animationend.animation, delete Ta.animationiteration.animation, delete Ta.animationstart.animation), \"TransitionEvent\" in window || delete Ta.transitionend.transition);\n\nfunction Wa(a) {\n  if (Ua[a]) return Ua[a];\n  if (!Ta[a]) return a;\n  var b = Ta[a],\n      c;\n\n  for (c in b) {\n    if (b.hasOwnProperty(c) && c in Va) return Ua[a] = b[c];\n  }\n\n  return a;\n}\n\nvar Xa = Wa(\"animationend\"),\n    Ya = Wa(\"animationiteration\"),\n    Za = Wa(\"animationstart\"),\n    $a = Wa(\"transitionend\"),\n    ab = \"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),\n    bb = null,\n    cb = null,\n    db = null;\n\nfunction eb() {\n  if (db) return db;\n  var a,\n      b = cb,\n      c = b.length,\n      d,\n      e = \"value\" in bb ? bb.value : bb.textContent,\n      f = e.length;\n\n  for (a = 0; a < c && b[a] === e[a]; a++) {\n    ;\n  }\n\n  var g = c - a;\n\n  for (d = 1; d <= g && b[c - d] === e[f - d]; d++) {\n    ;\n  }\n\n  return db = e.slice(a, 1 < d ? 1 - d : void 0);\n}\n\nfunction fb() {\n  return !0;\n}\n\nfunction gb() {\n  return !1;\n}\n\nfunction y(a, b, c, d) {\n  this.dispatchConfig = a;\n  this._targetInst = b;\n  this.nativeEvent = c;\n  a = this.constructor.Interface;\n\n  for (var e in a) {\n    a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : \"target\" === e ? this.target = d : this[e] = c[e]);\n  }\n\n  this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? fb : gb;\n  this.isPropagationStopped = gb;\n  return this;\n}\n\nn(y.prototype, {\n  preventDefault: function preventDefault() {\n    this.defaultPrevented = !0;\n    var a = this.nativeEvent;\n    a && (a.preventDefault ? a.preventDefault() : \"unknown\" !== typeof a.returnValue && (a.returnValue = !1), this.isDefaultPrevented = fb);\n  },\n  stopPropagation: function stopPropagation() {\n    var a = this.nativeEvent;\n    a && (a.stopPropagation ? a.stopPropagation() : \"unknown\" !== typeof a.cancelBubble && (a.cancelBubble = !0), this.isPropagationStopped = fb);\n  },\n  persist: function persist() {\n    this.isPersistent = fb;\n  },\n  isPersistent: gb,\n  destructor: function destructor() {\n    var a = this.constructor.Interface,\n        b;\n\n    for (b in a) {\n      this[b] = null;\n    }\n\n    this.nativeEvent = this._targetInst = this.dispatchConfig = null;\n    this.isPropagationStopped = this.isDefaultPrevented = gb;\n    this._dispatchInstances = this._dispatchListeners = null;\n  }\n});\ny.Interface = {\n  type: null,\n  target: null,\n  currentTarget: function currentTarget() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function timeStamp(a) {\n    return a.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null\n};\n\ny.extend = function (a) {\n  function b() {}\n\n  function c() {\n    return d.apply(this, arguments);\n  }\n\n  var d = this;\n  b.prototype = d.prototype;\n  var e = new b();\n  n(e, c.prototype);\n  c.prototype = e;\n  c.prototype.constructor = c;\n  c.Interface = n({}, d.Interface, a);\n  c.extend = d.extend;\n  hb(c);\n  return c;\n};\n\nhb(y);\n\nfunction ib(a, b, c, d) {\n  if (this.eventPool.length) {\n    var e = this.eventPool.pop();\n    this.call(e, a, b, c, d);\n    return e;\n  }\n\n  return new this(a, b, c, d);\n}\n\nfunction jb(a) {\n  a instanceof this ? void 0 : x(\"279\");\n  a.destructor();\n  10 > this.eventPool.length && this.eventPool.push(a);\n}\n\nfunction hb(a) {\n  a.eventPool = [];\n  a.getPooled = ib;\n  a.release = jb;\n}\n\nvar kb = y.extend({\n  data: null\n}),\n    lb = y.extend({\n  data: null\n}),\n    mb = [9, 13, 27, 32],\n    nb = Ra && \"CompositionEvent\" in window,\n    ob = null;\nRa && \"documentMode\" in document && (ob = document.documentMode);\nvar pb = Ra && \"TextEvent\" in window && !ob,\n    qb = Ra && (!nb || ob && 8 < ob && 11 >= ob),\n    rb = String.fromCharCode(32),\n    sb = {\n  beforeInput: {\n    phasedRegistrationNames: {\n      bubbled: \"onBeforeInput\",\n      captured: \"onBeforeInputCapture\"\n    },\n    dependencies: [\"compositionend\", \"keypress\", \"textInput\", \"paste\"]\n  },\n  compositionEnd: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionEnd\",\n      captured: \"onCompositionEndCapture\"\n    },\n    dependencies: \"blur compositionend keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionStart: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionStart\",\n      captured: \"onCompositionStartCapture\"\n    },\n    dependencies: \"blur compositionstart keydown keypress keyup mousedown\".split(\" \")\n  },\n  compositionUpdate: {\n    phasedRegistrationNames: {\n      bubbled: \"onCompositionUpdate\",\n      captured: \"onCompositionUpdateCapture\"\n    },\n    dependencies: \"blur compositionupdate keydown keypress keyup mousedown\".split(\" \")\n  }\n},\n    tb = !1;\n\nfunction ub(a, b) {\n  switch (a) {\n    case \"keyup\":\n      return -1 !== mb.indexOf(b.keyCode);\n\n    case \"keydown\":\n      return 229 !== b.keyCode;\n\n    case \"keypress\":\n    case \"mousedown\":\n    case \"blur\":\n      return !0;\n\n    default:\n      return !1;\n  }\n}\n\nfunction vb(a) {\n  a = a.detail;\n  return \"object\" === typeof a && \"data\" in a ? a.data : null;\n}\n\nvar wb = !1;\n\nfunction xb(a, b) {\n  switch (a) {\n    case \"compositionend\":\n      return vb(b);\n\n    case \"keypress\":\n      if (32 !== b.which) return null;\n      tb = !0;\n      return rb;\n\n    case \"textInput\":\n      return a = b.data, a === rb && tb ? null : a;\n\n    default:\n      return null;\n  }\n}\n\nfunction yb(a, b) {\n  if (wb) return \"compositionend\" === a || !nb && ub(a, b) ? (a = eb(), db = cb = bb = null, wb = !1, a) : null;\n\n  switch (a) {\n    case \"paste\":\n      return null;\n\n    case \"keypress\":\n      if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {\n        if (b.char && 1 < b.char.length) return b.char;\n        if (b.which) return String.fromCharCode(b.which);\n      }\n\n      return null;\n\n    case \"compositionend\":\n      return qb && \"ko\" !== b.locale ? null : b.data;\n\n    default:\n      return null;\n  }\n}\n\nvar zb = {\n  eventTypes: sb,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = void 0;\n    var f = void 0;\n    if (nb) b: {\n      switch (a) {\n        case \"compositionstart\":\n          e = sb.compositionStart;\n          break b;\n\n        case \"compositionend\":\n          e = sb.compositionEnd;\n          break b;\n\n        case \"compositionupdate\":\n          e = sb.compositionUpdate;\n          break b;\n      }\n\n      e = void 0;\n    } else wb ? ub(a, c) && (e = sb.compositionEnd) : \"keydown\" === a && 229 === c.keyCode && (e = sb.compositionStart);\n    e ? (qb && \"ko\" !== c.locale && (wb || e !== sb.compositionStart ? e === sb.compositionEnd && wb && (f = eb()) : (bb = d, cb = \"value\" in bb ? bb.value : bb.textContent, wb = !0)), e = kb.getPooled(e, b, c, d), f ? e.data = f : (f = vb(c), null !== f && (e.data = f)), Qa(e), f = e) : f = null;\n    (a = pb ? xb(a, c) : yb(a, c)) ? (b = lb.getPooled(sb.beforeInput, b, c, d), b.data = a, Qa(b)) : b = null;\n    return null === f ? b : null === b ? f : [f, b];\n  }\n},\n    Ab = null,\n    Bb = null,\n    Cb = null;\n\nfunction Db(a) {\n  if (a = ua(a)) {\n    \"function\" !== typeof Ab ? x(\"280\") : void 0;\n    var b = ta(a.stateNode);\n    Ab(a.stateNode, a.type, b);\n  }\n}\n\nfunction Eb(a) {\n  Bb ? Cb ? Cb.push(a) : Cb = [a] : Bb = a;\n}\n\nfunction Fb() {\n  if (Bb) {\n    var a = Bb,\n        b = Cb;\n    Cb = Bb = null;\n    Db(a);\n    if (b) for (a = 0; a < b.length; a++) {\n      Db(b[a]);\n    }\n  }\n}\n\nfunction Gb(a, b) {\n  return a(b);\n}\n\nfunction Hb(a, b, c) {\n  return a(b, c);\n}\n\nfunction Ib() {}\n\nvar Jb = !1;\n\nfunction Kb(a, b) {\n  if (Jb) return a(b);\n  Jb = !0;\n\n  try {\n    return Gb(a, b);\n  } finally {\n    if (Jb = !1, null !== Bb || null !== Cb) Ib(), Fb();\n  }\n}\n\nvar Lb = {\n  color: !0,\n  date: !0,\n  datetime: !0,\n  \"datetime-local\": !0,\n  email: !0,\n  month: !0,\n  number: !0,\n  password: !0,\n  range: !0,\n  search: !0,\n  tel: !0,\n  text: !0,\n  time: !0,\n  url: !0,\n  week: !0\n};\n\nfunction Mb(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return \"input\" === b ? !!Lb[a.type] : \"textarea\" === b ? !0 : !1;\n}\n\nfunction Nb(a) {\n  a = a.target || a.srcElement || window;\n  a.correspondingUseElement && (a = a.correspondingUseElement);\n  return 3 === a.nodeType ? a.parentNode : a;\n}\n\nfunction Ob(a) {\n  if (!Ra) return !1;\n  a = \"on\" + a;\n  var b = a in document;\n  b || (b = document.createElement(\"div\"), b.setAttribute(a, \"return;\"), b = \"function\" === typeof b[a]);\n  return b;\n}\n\nfunction Pb(a) {\n  var b = a.type;\n  return (a = a.nodeName) && \"input\" === a.toLowerCase() && (\"checkbox\" === b || \"radio\" === b);\n}\n\nfunction Qb(a) {\n  var b = Pb(a) ? \"checked\" : \"value\",\n      c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b),\n      d = \"\" + a[b];\n\n  if (!a.hasOwnProperty(b) && \"undefined\" !== typeof c && \"function\" === typeof c.get && \"function\" === typeof c.set) {\n    var e = c.get,\n        f = c.set;\n    Object.defineProperty(a, b, {\n      configurable: !0,\n      get: function get() {\n        return e.call(this);\n      },\n      set: function set(a) {\n        d = \"\" + a;\n        f.call(this, a);\n      }\n    });\n    Object.defineProperty(a, b, {\n      enumerable: c.enumerable\n    });\n    return {\n      getValue: function getValue() {\n        return d;\n      },\n      setValue: function setValue(a) {\n        d = \"\" + a;\n      },\n      stopTracking: function stopTracking() {\n        a._valueTracker = null;\n        delete a[b];\n      }\n    };\n  }\n}\n\nfunction Rb(a) {\n  a._valueTracker || (a._valueTracker = Qb(a));\n}\n\nfunction Sb(a) {\n  if (!a) return !1;\n  var b = a._valueTracker;\n  if (!b) return !0;\n  var c = b.getValue();\n  var d = \"\";\n  a && (d = Pb(a) ? a.checked ? \"true\" : \"false\" : a.value);\n  a = d;\n  return a !== c ? (b.setValue(a), !0) : !1;\n}\n\nvar Tb = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\nTb.hasOwnProperty(\"ReactCurrentDispatcher\") || (Tb.ReactCurrentDispatcher = {\n  current: null\n});\nvar Ub = /^(.*)[\\\\\\/]/,\n    z = \"function\" === typeof Symbol && Symbol.for,\n    Vb = z ? Symbol.for(\"react.element\") : 60103,\n    Wb = z ? Symbol.for(\"react.portal\") : 60106,\n    Xb = z ? Symbol.for(\"react.fragment\") : 60107,\n    Yb = z ? Symbol.for(\"react.strict_mode\") : 60108,\n    Zb = z ? Symbol.for(\"react.profiler\") : 60114,\n    $b = z ? Symbol.for(\"react.provider\") : 60109,\n    ac = z ? Symbol.for(\"react.context\") : 60110,\n    bc = z ? Symbol.for(\"react.concurrent_mode\") : 60111,\n    cc = z ? Symbol.for(\"react.forward_ref\") : 60112,\n    dc = z ? Symbol.for(\"react.suspense\") : 60113,\n    ec = z ? Symbol.for(\"react.memo\") : 60115,\n    fc = z ? Symbol.for(\"react.lazy\") : 60116,\n    gc = \"function\" === typeof Symbol && Symbol.iterator;\n\nfunction hc(a) {\n  if (null === a || \"object\" !== typeof a) return null;\n  a = gc && a[gc] || a[\"@@iterator\"];\n  return \"function\" === typeof a ? a : null;\n}\n\nfunction ic(a) {\n  if (null == a) return null;\n  if (\"function\" === typeof a) return a.displayName || a.name || null;\n  if (\"string\" === typeof a) return a;\n\n  switch (a) {\n    case bc:\n      return \"ConcurrentMode\";\n\n    case Xb:\n      return \"Fragment\";\n\n    case Wb:\n      return \"Portal\";\n\n    case Zb:\n      return \"Profiler\";\n\n    case Yb:\n      return \"StrictMode\";\n\n    case dc:\n      return \"Suspense\";\n  }\n\n  if (\"object\" === typeof a) switch (a.$$typeof) {\n    case ac:\n      return \"Context.Consumer\";\n\n    case $b:\n      return \"Context.Provider\";\n\n    case cc:\n      var b = a.render;\n      b = b.displayName || b.name || \"\";\n      return a.displayName || (\"\" !== b ? \"ForwardRef(\" + b + \")\" : \"ForwardRef\");\n\n    case ec:\n      return ic(a.type);\n\n    case fc:\n      if (a = 1 === a._status ? a._result : null) return ic(a);\n  }\n  return null;\n}\n\nfunction jc(a) {\n  var b = \"\";\n\n  do {\n    a: switch (a.tag) {\n      case 3:\n      case 4:\n      case 6:\n      case 7:\n      case 10:\n      case 9:\n        var c = \"\";\n        break a;\n\n      default:\n        var d = a._debugOwner,\n            e = a._debugSource,\n            f = ic(a.type);\n        c = null;\n        d && (c = ic(d.type));\n        d = f;\n        f = \"\";\n        e ? f = \" (at \" + e.fileName.replace(Ub, \"\") + \":\" + e.lineNumber + \")\" : c && (f = \" (created by \" + c + \")\");\n        c = \"\\n    in \" + (d || \"Unknown\") + f;\n    }\n\n    b += c;\n    a = a.return;\n  } while (a);\n\n  return b;\n}\n\nvar kc = /^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,\n    lc = Object.prototype.hasOwnProperty,\n    mc = {},\n    nc = {};\n\nfunction oc(a) {\n  if (lc.call(nc, a)) return !0;\n  if (lc.call(mc, a)) return !1;\n  if (kc.test(a)) return nc[a] = !0;\n  mc[a] = !0;\n  return !1;\n}\n\nfunction pc(a, b, c, d) {\n  if (null !== c && 0 === c.type) return !1;\n\n  switch (typeof b) {\n    case \"function\":\n    case \"symbol\":\n      return !0;\n\n    case \"boolean\":\n      if (d) return !1;\n      if (null !== c) return !c.acceptsBooleans;\n      a = a.toLowerCase().slice(0, 5);\n      return \"data-\" !== a && \"aria-\" !== a;\n\n    default:\n      return !1;\n  }\n}\n\nfunction qc(a, b, c, d) {\n  if (null === b || \"undefined\" === typeof b || pc(a, b, c, d)) return !0;\n  if (d) return !1;\n  if (null !== c) switch (c.type) {\n    case 3:\n      return !b;\n\n    case 4:\n      return !1 === b;\n\n    case 5:\n      return isNaN(b);\n\n    case 6:\n      return isNaN(b) || 1 > b;\n  }\n  return !1;\n}\n\nfunction C(a, b, c, d, e) {\n  this.acceptsBooleans = 2 === b || 3 === b || 4 === b;\n  this.attributeName = d;\n  this.attributeNamespace = e;\n  this.mustUseProperty = c;\n  this.propertyName = a;\n  this.type = b;\n}\n\nvar D = {};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 0, !1, a, null);\n});\n[[\"acceptCharset\", \"accept-charset\"], [\"className\", \"class\"], [\"htmlFor\", \"for\"], [\"httpEquiv\", \"http-equiv\"]].forEach(function (a) {\n  var b = a[0];\n  D[b] = new C(b, 1, !1, a[1], null);\n});\n[\"contentEditable\", \"draggable\", \"spellCheck\", \"value\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a.toLowerCase(), null);\n});\n[\"autoReverse\", \"externalResourcesRequired\", \"focusable\", \"preserveAlpha\"].forEach(function (a) {\n  D[a] = new C(a, 2, !1, a, null);\n});\n\"allowFullScreen async autoFocus autoPlay controls default defer disabled formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function (a) {\n  D[a] = new C(a, 3, !1, a.toLowerCase(), null);\n});\n[\"checked\", \"multiple\", \"muted\", \"selected\"].forEach(function (a) {\n  D[a] = new C(a, 3, !0, a, null);\n});\n[\"capture\", \"download\"].forEach(function (a) {\n  D[a] = new C(a, 4, !1, a, null);\n});\n[\"cols\", \"rows\", \"size\", \"span\"].forEach(function (a) {\n  D[a] = new C(a, 6, !1, a, null);\n});\n[\"rowSpan\", \"start\"].forEach(function (a) {\n  D[a] = new C(a, 5, !1, a.toLowerCase(), null);\n});\nvar rc = /[\\-:]([a-z])/g;\n\nfunction sc(a) {\n  return a[1].toUpperCase();\n}\n\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, null);\n});\n\"xlink:actuate xlink:arcrole xlink:href xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/1999/xlink\");\n});\n[\"xml:base\", \"xml:lang\", \"xml:space\"].forEach(function (a) {\n  var b = a.replace(rc, sc);\n  D[b] = new C(b, 1, !1, a, \"http://www.w3.org/XML/1998/namespace\");\n});\n[\"tabIndex\", \"crossOrigin\"].forEach(function (a) {\n  D[a] = new C(a, 1, !1, a.toLowerCase(), null);\n});\n\nfunction tc(a, b, c, d) {\n  var e = D.hasOwnProperty(b) ? D[b] : null;\n  var f = null !== e ? 0 === e.type : d ? !1 : !(2 < b.length) || \"o\" !== b[0] && \"O\" !== b[0] || \"n\" !== b[1] && \"N\" !== b[1] ? !1 : !0;\n  f || (qc(b, c, e, d) && (c = null), d || null === e ? oc(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, \"\" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 === e.type ? !1 : \"\" : c : (b = e.attributeName, d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (e = e.type, c = 3 === e || 4 === e && !0 === c ? \"\" : \"\" + c, d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));\n}\n\nfunction uc(a) {\n  switch (typeof a) {\n    case \"boolean\":\n    case \"number\":\n    case \"object\":\n    case \"string\":\n    case \"undefined\":\n      return a;\n\n    default:\n      return \"\";\n  }\n}\n\nfunction vc(a, b) {\n  var c = b.checked;\n  return n({}, b, {\n    defaultChecked: void 0,\n    defaultValue: void 0,\n    value: void 0,\n    checked: null != c ? c : a._wrapperState.initialChecked\n  });\n}\n\nfunction wc(a, b) {\n  var c = null == b.defaultValue ? \"\" : b.defaultValue,\n      d = null != b.checked ? b.checked : b.defaultChecked;\n  c = uc(null != b.value ? b.value : c);\n  a._wrapperState = {\n    initialChecked: d,\n    initialValue: c,\n    controlled: \"checkbox\" === b.type || \"radio\" === b.type ? null != b.checked : null != b.value\n  };\n}\n\nfunction xc(a, b) {\n  b = b.checked;\n  null != b && tc(a, \"checked\", b, !1);\n}\n\nfunction yc(a, b) {\n  xc(a, b);\n  var c = uc(b.value),\n      d = b.type;\n  if (null != c) {\n    if (\"number\" === d) {\n      if (0 === c && \"\" === a.value || a.value != c) a.value = \"\" + c;\n    } else a.value !== \"\" + c && (a.value = \"\" + c);\n  } else if (\"submit\" === d || \"reset\" === d) {\n    a.removeAttribute(\"value\");\n    return;\n  }\n  b.hasOwnProperty(\"value\") ? zc(a, b.type, c) : b.hasOwnProperty(\"defaultValue\") && zc(a, b.type, uc(b.defaultValue));\n  null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);\n}\n\nfunction Ac(a, b, c) {\n  if (b.hasOwnProperty(\"value\") || b.hasOwnProperty(\"defaultValue\")) {\n    var d = b.type;\n    if (!(\"submit\" !== d && \"reset\" !== d || void 0 !== b.value && null !== b.value)) return;\n    b = \"\" + a._wrapperState.initialValue;\n    c || b === a.value || (a.value = b);\n    a.defaultValue = b;\n  }\n\n  c = a.name;\n  \"\" !== c && (a.name = \"\");\n  a.defaultChecked = !a.defaultChecked;\n  a.defaultChecked = !!a._wrapperState.initialChecked;\n  \"\" !== c && (a.name = c);\n}\n\nfunction zc(a, b, c) {\n  if (\"number\" !== b || a.ownerDocument.activeElement !== a) null == c ? a.defaultValue = \"\" + a._wrapperState.initialValue : a.defaultValue !== \"\" + c && (a.defaultValue = \"\" + c);\n}\n\nvar Bc = {\n  change: {\n    phasedRegistrationNames: {\n      bubbled: \"onChange\",\n      captured: \"onChangeCapture\"\n    },\n    dependencies: \"blur change click focus input keydown keyup selectionchange\".split(\" \")\n  }\n};\n\nfunction Cc(a, b, c) {\n  a = y.getPooled(Bc.change, a, b, c);\n  a.type = \"change\";\n  Eb(c);\n  Qa(a);\n  return a;\n}\n\nvar Dc = null,\n    Ec = null;\n\nfunction Fc(a) {\n  Da(a);\n}\n\nfunction Gc(a) {\n  var b = Ja(a);\n  if (Sb(b)) return a;\n}\n\nfunction Hc(a, b) {\n  if (\"change\" === a) return b;\n}\n\nvar Ic = !1;\nRa && (Ic = Ob(\"input\") && (!document.documentMode || 9 < document.documentMode));\n\nfunction Jc() {\n  Dc && (Dc.detachEvent(\"onpropertychange\", Kc), Ec = Dc = null);\n}\n\nfunction Kc(a) {\n  \"value\" === a.propertyName && Gc(Ec) && (a = Cc(Ec, a, Nb(a)), Kb(Fc, a));\n}\n\nfunction Lc(a, b, c) {\n  \"focus\" === a ? (Jc(), Dc = b, Ec = c, Dc.attachEvent(\"onpropertychange\", Kc)) : \"blur\" === a && Jc();\n}\n\nfunction Mc(a) {\n  if (\"selectionchange\" === a || \"keyup\" === a || \"keydown\" === a) return Gc(Ec);\n}\n\nfunction Nc(a, b) {\n  if (\"click\" === a) return Gc(b);\n}\n\nfunction Oc(a, b) {\n  if (\"input\" === a || \"change\" === a) return Gc(b);\n}\n\nvar Pc = {\n  eventTypes: Bc,\n  _isInputEventSupported: Ic,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = b ? Ja(b) : window,\n        f = void 0,\n        g = void 0,\n        h = e.nodeName && e.nodeName.toLowerCase();\n    \"select\" === h || \"input\" === h && \"file\" === e.type ? f = Hc : Mb(e) ? Ic ? f = Oc : (f = Mc, g = Lc) : (h = e.nodeName) && \"input\" === h.toLowerCase() && (\"checkbox\" === e.type || \"radio\" === e.type) && (f = Nc);\n    if (f && (f = f(a, b))) return Cc(f, c, d);\n    g && g(a, e, b);\n    \"blur\" === a && (a = e._wrapperState) && a.controlled && \"number\" === e.type && zc(e, \"number\", e.value);\n  }\n},\n    Qc = y.extend({\n  view: null,\n  detail: null\n}),\n    Rc = {\n  Alt: \"altKey\",\n  Control: \"ctrlKey\",\n  Meta: \"metaKey\",\n  Shift: \"shiftKey\"\n};\n\nfunction Sc(a) {\n  var b = this.nativeEvent;\n  return b.getModifierState ? b.getModifierState(a) : (a = Rc[a]) ? !!b[a] : !1;\n}\n\nfunction Tc() {\n  return Sc;\n}\n\nvar Uc = 0,\n    Vc = 0,\n    Wc = !1,\n    Xc = !1,\n    Yc = Qc.extend({\n  screenX: null,\n  screenY: null,\n  clientX: null,\n  clientY: null,\n  pageX: null,\n  pageY: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  getModifierState: Tc,\n  button: null,\n  buttons: null,\n  relatedTarget: function relatedTarget(a) {\n    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);\n  },\n  movementX: function movementX(a) {\n    if (\"movementX\" in a) return a.movementX;\n    var b = Uc;\n    Uc = a.screenX;\n    return Wc ? \"mousemove\" === a.type ? a.screenX - b : 0 : (Wc = !0, 0);\n  },\n  movementY: function movementY(a) {\n    if (\"movementY\" in a) return a.movementY;\n    var b = Vc;\n    Vc = a.screenY;\n    return Xc ? \"mousemove\" === a.type ? a.screenY - b : 0 : (Xc = !0, 0);\n  }\n}),\n    Zc = Yc.extend({\n  pointerId: null,\n  width: null,\n  height: null,\n  pressure: null,\n  tangentialPressure: null,\n  tiltX: null,\n  tiltY: null,\n  twist: null,\n  pointerType: null,\n  isPrimary: null\n}),\n    $c = {\n  mouseEnter: {\n    registrationName: \"onMouseEnter\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  mouseLeave: {\n    registrationName: \"onMouseLeave\",\n    dependencies: [\"mouseout\", \"mouseover\"]\n  },\n  pointerEnter: {\n    registrationName: \"onPointerEnter\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  },\n  pointerLeave: {\n    registrationName: \"onPointerLeave\",\n    dependencies: [\"pointerout\", \"pointerover\"]\n  }\n},\n    ad = {\n  eventTypes: $c,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = \"mouseover\" === a || \"pointerover\" === a,\n        f = \"mouseout\" === a || \"pointerout\" === a;\n    if (e && (c.relatedTarget || c.fromElement) || !f && !e) return null;\n    e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window;\n    f ? (f = b, b = (b = c.relatedTarget || c.toElement) ? Ha(b) : null) : f = null;\n    if (f === b) return null;\n    var g = void 0,\n        h = void 0,\n        l = void 0,\n        k = void 0;\n    if (\"mouseout\" === a || \"mouseover\" === a) g = Yc, h = $c.mouseLeave, l = $c.mouseEnter, k = \"mouse\";else if (\"pointerout\" === a || \"pointerover\" === a) g = Zc, h = $c.pointerLeave, l = $c.pointerEnter, k = \"pointer\";\n    var m = null == f ? e : Ja(f);\n    e = null == b ? e : Ja(b);\n    a = g.getPooled(h, f, c, d);\n    a.type = k + \"leave\";\n    a.target = m;\n    a.relatedTarget = e;\n    c = g.getPooled(l, b, c, d);\n    c.type = k + \"enter\";\n    c.target = e;\n    c.relatedTarget = m;\n    d = b;\n    if (f && d) a: {\n      b = f;\n      e = d;\n      k = 0;\n\n      for (g = b; g; g = La(g)) {\n        k++;\n      }\n\n      g = 0;\n\n      for (l = e; l; l = La(l)) {\n        g++;\n      }\n\n      for (; 0 < k - g;) {\n        b = La(b), k--;\n      }\n\n      for (; 0 < g - k;) {\n        e = La(e), g--;\n      }\n\n      for (; k--;) {\n        if (b === e || b === e.alternate) break a;\n        b = La(b);\n        e = La(e);\n      }\n\n      b = null;\n    } else b = null;\n    e = b;\n\n    for (b = []; f && f !== e;) {\n      k = f.alternate;\n      if (null !== k && k === e) break;\n      b.push(f);\n      f = La(f);\n    }\n\n    for (f = []; d && d !== e;) {\n      k = d.alternate;\n      if (null !== k && k === e) break;\n      f.push(d);\n      d = La(d);\n    }\n\n    for (d = 0; d < b.length; d++) {\n      Oa(b[d], \"bubbled\", a);\n    }\n\n    for (d = f.length; 0 < d--;) {\n      Oa(f[d], \"captured\", c);\n    }\n\n    return [a, c];\n  }\n};\n\nfunction bd(a, b) {\n  return a === b && (0 !== a || 1 / a === 1 / b) || a !== a && b !== b;\n}\n\nvar cd = Object.prototype.hasOwnProperty;\n\nfunction dd(a, b) {\n  if (bd(a, b)) return !0;\n  if (\"object\" !== typeof a || null === a || \"object\" !== typeof b || null === b) return !1;\n  var c = Object.keys(a),\n      d = Object.keys(b);\n  if (c.length !== d.length) return !1;\n\n  for (d = 0; d < c.length; d++) {\n    if (!cd.call(b, c[d]) || !bd(a[c[d]], b[c[d]])) return !1;\n  }\n\n  return !0;\n}\n\nfunction ed(a) {\n  var b = a;\n  if (a.alternate) for (; b.return;) {\n    b = b.return;\n  } else {\n    if (0 !== (b.effectTag & 2)) return 1;\n\n    for (; b.return;) {\n      if (b = b.return, 0 !== (b.effectTag & 2)) return 1;\n    }\n  }\n  return 3 === b.tag ? 2 : 3;\n}\n\nfunction fd(a) {\n  2 !== ed(a) ? x(\"188\") : void 0;\n}\n\nfunction gd(a) {\n  var b = a.alternate;\n  if (!b) return b = ed(a), 3 === b ? x(\"188\") : void 0, 1 === b ? null : a;\n\n  for (var c = a, d = b;;) {\n    var e = c.return,\n        f = e ? e.alternate : null;\n    if (!e || !f) break;\n\n    if (e.child === f.child) {\n      for (var g = e.child; g;) {\n        if (g === c) return fd(e), a;\n        if (g === d) return fd(e), b;\n        g = g.sibling;\n      }\n\n      x(\"188\");\n    }\n\n    if (c.return !== d.return) c = e, d = f;else {\n      g = !1;\n\n      for (var h = e.child; h;) {\n        if (h === c) {\n          g = !0;\n          c = e;\n          d = f;\n          break;\n        }\n\n        if (h === d) {\n          g = !0;\n          d = e;\n          c = f;\n          break;\n        }\n\n        h = h.sibling;\n      }\n\n      if (!g) {\n        for (h = f.child; h;) {\n          if (h === c) {\n            g = !0;\n            c = f;\n            d = e;\n            break;\n          }\n\n          if (h === d) {\n            g = !0;\n            d = f;\n            c = e;\n            break;\n          }\n\n          h = h.sibling;\n        }\n\n        g ? void 0 : x(\"189\");\n      }\n    }\n    c.alternate !== d ? x(\"190\") : void 0;\n  }\n\n  3 !== c.tag ? x(\"188\") : void 0;\n  return c.stateNode.current === c ? a : b;\n}\n\nfunction hd(a) {\n  a = gd(a);\n  if (!a) return null;\n\n  for (var b = a;;) {\n    if (5 === b.tag || 6 === b.tag) return b;\n    if (b.child) b.child.return = b, b = b.child;else {\n      if (b === a) break;\n\n      for (; !b.sibling;) {\n        if (!b.return || b.return === a) return null;\n        b = b.return;\n      }\n\n      b.sibling.return = b.return;\n      b = b.sibling;\n    }\n  }\n\n  return null;\n}\n\nvar id = y.extend({\n  animationName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    jd = y.extend({\n  clipboardData: function clipboardData(a) {\n    return \"clipboardData\" in a ? a.clipboardData : window.clipboardData;\n  }\n}),\n    kd = Qc.extend({\n  relatedTarget: null\n});\n\nfunction ld(a) {\n  var b = a.keyCode;\n  \"charCode\" in a ? (a = a.charCode, 0 === a && 13 === b && (a = 13)) : a = b;\n  10 === a && (a = 13);\n  return 32 <= a || 13 === a ? a : 0;\n}\n\nvar md = {\n  Esc: \"Escape\",\n  Spacebar: \" \",\n  Left: \"ArrowLeft\",\n  Up: \"ArrowUp\",\n  Right: \"ArrowRight\",\n  Down: \"ArrowDown\",\n  Del: \"Delete\",\n  Win: \"OS\",\n  Menu: \"ContextMenu\",\n  Apps: \"ContextMenu\",\n  Scroll: \"ScrollLock\",\n  MozPrintableKey: \"Unidentified\"\n},\n    nd = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  12: \"Clear\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  19: \"Pause\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  45: \"Insert\",\n  46: \"Delete\",\n  112: \"F1\",\n  113: \"F2\",\n  114: \"F3\",\n  115: \"F4\",\n  116: \"F5\",\n  117: \"F6\",\n  118: \"F7\",\n  119: \"F8\",\n  120: \"F9\",\n  121: \"F10\",\n  122: \"F11\",\n  123: \"F12\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  224: \"Meta\"\n},\n    od = Qc.extend({\n  key: function key(a) {\n    if (a.key) {\n      var b = md[a.key] || a.key;\n      if (\"Unidentified\" !== b) return b;\n    }\n\n    return \"keypress\" === a.type ? (a = ld(a), 13 === a ? \"Enter\" : String.fromCharCode(a)) : \"keydown\" === a.type || \"keyup\" === a.type ? nd[a.keyCode] || \"Unidentified\" : \"\";\n  },\n  location: null,\n  ctrlKey: null,\n  shiftKey: null,\n  altKey: null,\n  metaKey: null,\n  repeat: null,\n  locale: null,\n  getModifierState: Tc,\n  charCode: function charCode(a) {\n    return \"keypress\" === a.type ? ld(a) : 0;\n  },\n  keyCode: function keyCode(a) {\n    return \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  },\n  which: function which(a) {\n    return \"keypress\" === a.type ? ld(a) : \"keydown\" === a.type || \"keyup\" === a.type ? a.keyCode : 0;\n  }\n}),\n    pd = Yc.extend({\n  dataTransfer: null\n}),\n    qd = Qc.extend({\n  touches: null,\n  targetTouches: null,\n  changedTouches: null,\n  altKey: null,\n  metaKey: null,\n  ctrlKey: null,\n  shiftKey: null,\n  getModifierState: Tc\n}),\n    rd = y.extend({\n  propertyName: null,\n  elapsedTime: null,\n  pseudoElement: null\n}),\n    sd = Yc.extend({\n  deltaX: function deltaX(a) {\n    return \"deltaX\" in a ? a.deltaX : \"wheelDeltaX\" in a ? -a.wheelDeltaX : 0;\n  },\n  deltaY: function deltaY(a) {\n    return \"deltaY\" in a ? a.deltaY : \"wheelDeltaY\" in a ? -a.wheelDeltaY : \"wheelDelta\" in a ? -a.wheelDelta : 0;\n  },\n  deltaZ: null,\n  deltaMode: null\n}),\n    td = [[\"abort\", \"abort\"], [Xa, \"animationEnd\"], [Ya, \"animationIteration\"], [Za, \"animationStart\"], [\"canplay\", \"canPlay\"], [\"canplaythrough\", \"canPlayThrough\"], [\"drag\", \"drag\"], [\"dragenter\", \"dragEnter\"], [\"dragexit\", \"dragExit\"], [\"dragleave\", \"dragLeave\"], [\"dragover\", \"dragOver\"], [\"durationchange\", \"durationChange\"], [\"emptied\", \"emptied\"], [\"encrypted\", \"encrypted\"], [\"ended\", \"ended\"], [\"error\", \"error\"], [\"gotpointercapture\", \"gotPointerCapture\"], [\"load\", \"load\"], [\"loadeddata\", \"loadedData\"], [\"loadedmetadata\", \"loadedMetadata\"], [\"loadstart\", \"loadStart\"], [\"lostpointercapture\", \"lostPointerCapture\"], [\"mousemove\", \"mouseMove\"], [\"mouseout\", \"mouseOut\"], [\"mouseover\", \"mouseOver\"], [\"playing\", \"playing\"], [\"pointermove\", \"pointerMove\"], [\"pointerout\", \"pointerOut\"], [\"pointerover\", \"pointerOver\"], [\"progress\", \"progress\"], [\"scroll\", \"scroll\"], [\"seeking\", \"seeking\"], [\"stalled\", \"stalled\"], [\"suspend\", \"suspend\"], [\"timeupdate\", \"timeUpdate\"], [\"toggle\", \"toggle\"], [\"touchmove\", \"touchMove\"], [$a, \"transitionEnd\"], [\"waiting\", \"waiting\"], [\"wheel\", \"wheel\"]],\n    ud = {},\n    vd = {};\n\nfunction wd(a, b) {\n  var c = a[0];\n  a = a[1];\n  var d = \"on\" + (a[0].toUpperCase() + a.slice(1));\n  b = {\n    phasedRegistrationNames: {\n      bubbled: d,\n      captured: d + \"Capture\"\n    },\n    dependencies: [c],\n    isInteractive: b\n  };\n  ud[a] = b;\n  vd[c] = b;\n}\n\n[[\"blur\", \"blur\"], [\"cancel\", \"cancel\"], [\"click\", \"click\"], [\"close\", \"close\"], [\"contextmenu\", \"contextMenu\"], [\"copy\", \"copy\"], [\"cut\", \"cut\"], [\"auxclick\", \"auxClick\"], [\"dblclick\", \"doubleClick\"], [\"dragend\", \"dragEnd\"], [\"dragstart\", \"dragStart\"], [\"drop\", \"drop\"], [\"focus\", \"focus\"], [\"input\", \"input\"], [\"invalid\", \"invalid\"], [\"keydown\", \"keyDown\"], [\"keypress\", \"keyPress\"], [\"keyup\", \"keyUp\"], [\"mousedown\", \"mouseDown\"], [\"mouseup\", \"mouseUp\"], [\"paste\", \"paste\"], [\"pause\", \"pause\"], [\"play\", \"play\"], [\"pointercancel\", \"pointerCancel\"], [\"pointerdown\", \"pointerDown\"], [\"pointerup\", \"pointerUp\"], [\"ratechange\", \"rateChange\"], [\"reset\", \"reset\"], [\"seeked\", \"seeked\"], [\"submit\", \"submit\"], [\"touchcancel\", \"touchCancel\"], [\"touchend\", \"touchEnd\"], [\"touchstart\", \"touchStart\"], [\"volumechange\", \"volumeChange\"]].forEach(function (a) {\n  wd(a, !0);\n});\ntd.forEach(function (a) {\n  wd(a, !1);\n});\nvar xd = {\n  eventTypes: ud,\n  isInteractiveTopLevelEventType: function isInteractiveTopLevelEventType(a) {\n    a = vd[a];\n    return void 0 !== a && !0 === a.isInteractive;\n  },\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = vd[a];\n    if (!e) return null;\n\n    switch (a) {\n      case \"keypress\":\n        if (0 === ld(c)) return null;\n\n      case \"keydown\":\n      case \"keyup\":\n        a = od;\n        break;\n\n      case \"blur\":\n      case \"focus\":\n        a = kd;\n        break;\n\n      case \"click\":\n        if (2 === c.button) return null;\n\n      case \"auxclick\":\n      case \"dblclick\":\n      case \"mousedown\":\n      case \"mousemove\":\n      case \"mouseup\":\n      case \"mouseout\":\n      case \"mouseover\":\n      case \"contextmenu\":\n        a = Yc;\n        break;\n\n      case \"drag\":\n      case \"dragend\":\n      case \"dragenter\":\n      case \"dragexit\":\n      case \"dragleave\":\n      case \"dragover\":\n      case \"dragstart\":\n      case \"drop\":\n        a = pd;\n        break;\n\n      case \"touchcancel\":\n      case \"touchend\":\n      case \"touchmove\":\n      case \"touchstart\":\n        a = qd;\n        break;\n\n      case Xa:\n      case Ya:\n      case Za:\n        a = id;\n        break;\n\n      case $a:\n        a = rd;\n        break;\n\n      case \"scroll\":\n        a = Qc;\n        break;\n\n      case \"wheel\":\n        a = sd;\n        break;\n\n      case \"copy\":\n      case \"cut\":\n      case \"paste\":\n        a = jd;\n        break;\n\n      case \"gotpointercapture\":\n      case \"lostpointercapture\":\n      case \"pointercancel\":\n      case \"pointerdown\":\n      case \"pointermove\":\n      case \"pointerout\":\n      case \"pointerover\":\n      case \"pointerup\":\n        a = Zc;\n        break;\n\n      default:\n        a = y;\n    }\n\n    b = a.getPooled(e, b, c, d);\n    Qa(b);\n    return b;\n  }\n},\n    yd = xd.isInteractiveTopLevelEventType,\n    zd = [];\n\nfunction Ad(a) {\n  var b = a.targetInst,\n      c = b;\n\n  do {\n    if (!c) {\n      a.ancestors.push(c);\n      break;\n    }\n\n    var d;\n\n    for (d = c; d.return;) {\n      d = d.return;\n    }\n\n    d = 3 !== d.tag ? null : d.stateNode.containerInfo;\n    if (!d) break;\n    a.ancestors.push(c);\n    c = Ha(d);\n  } while (c);\n\n  for (c = 0; c < a.ancestors.length; c++) {\n    b = a.ancestors[c];\n    var e = Nb(a.nativeEvent);\n    d = a.topLevelType;\n\n    for (var f = a.nativeEvent, g = null, h = 0; h < oa.length; h++) {\n      var l = oa[h];\n      l && (l = l.extractEvents(d, b, f, e)) && (g = xa(g, l));\n    }\n\n    Da(g);\n  }\n}\n\nvar Bd = !0;\n\nfunction E(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !1);\n}\n\nfunction Ed(a, b) {\n  if (!b) return null;\n  var c = (yd(a) ? Cd : Dd).bind(null, a);\n  b.addEventListener(a, c, !0);\n}\n\nfunction Cd(a, b) {\n  Hb(Dd, a, b);\n}\n\nfunction Dd(a, b) {\n  if (Bd) {\n    var c = Nb(b);\n    c = Ha(c);\n    null === c || \"number\" !== typeof c.tag || 2 === ed(c) || (c = null);\n\n    if (zd.length) {\n      var d = zd.pop();\n      d.topLevelType = a;\n      d.nativeEvent = b;\n      d.targetInst = c;\n      a = d;\n    } else a = {\n      topLevelType: a,\n      nativeEvent: b,\n      targetInst: c,\n      ancestors: []\n    };\n\n    try {\n      Kb(Ad, a);\n    } finally {\n      a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 10 > zd.length && zd.push(a);\n    }\n  }\n}\n\nvar Fd = {},\n    Gd = 0,\n    Hd = \"_reactListenersID\" + (\"\" + Math.random()).slice(2);\n\nfunction Id(a) {\n  Object.prototype.hasOwnProperty.call(a, Hd) || (a[Hd] = Gd++, Fd[a[Hd]] = {});\n  return Fd[a[Hd]];\n}\n\nfunction Jd(a) {\n  a = a || (\"undefined\" !== typeof document ? document : void 0);\n  if (\"undefined\" === typeof a) return null;\n\n  try {\n    return a.activeElement || a.body;\n  } catch (b) {\n    return a.body;\n  }\n}\n\nfunction Kd(a) {\n  for (; a && a.firstChild;) {\n    a = a.firstChild;\n  }\n\n  return a;\n}\n\nfunction Ld(a, b) {\n  var c = Kd(a);\n  a = 0;\n\n  for (var d; c;) {\n    if (3 === c.nodeType) {\n      d = a + c.textContent.length;\n      if (a <= b && d >= b) return {\n        node: c,\n        offset: b - a\n      };\n      a = d;\n    }\n\n    a: {\n      for (; c;) {\n        if (c.nextSibling) {\n          c = c.nextSibling;\n          break a;\n        }\n\n        c = c.parentNode;\n      }\n\n      c = void 0;\n    }\n\n    c = Kd(c);\n  }\n}\n\nfunction Md(a, b) {\n  return a && b ? a === b ? !0 : a && 3 === a.nodeType ? !1 : b && 3 === b.nodeType ? Md(a, b.parentNode) : \"contains\" in a ? a.contains(b) : a.compareDocumentPosition ? !!(a.compareDocumentPosition(b) & 16) : !1 : !1;\n}\n\nfunction Nd() {\n  for (var a = window, b = Jd(); b instanceof a.HTMLIFrameElement;) {\n    try {\n      var c = \"string\" === typeof b.contentWindow.location.href;\n    } catch (d) {\n      c = !1;\n    }\n\n    if (c) a = b.contentWindow;else break;\n    b = Jd(a.document);\n  }\n\n  return b;\n}\n\nfunction Od(a) {\n  var b = a && a.nodeName && a.nodeName.toLowerCase();\n  return b && (\"input\" === b && (\"text\" === a.type || \"search\" === a.type || \"tel\" === a.type || \"url\" === a.type || \"password\" === a.type) || \"textarea\" === b || \"true\" === a.contentEditable);\n}\n\nfunction Pd() {\n  var a = Nd();\n\n  if (Od(a)) {\n    if (\"selectionStart\" in a) var b = {\n      start: a.selectionStart,\n      end: a.selectionEnd\n    };else a: {\n      b = (b = a.ownerDocument) && b.defaultView || window;\n      var c = b.getSelection && b.getSelection();\n\n      if (c && 0 !== c.rangeCount) {\n        b = c.anchorNode;\n        var d = c.anchorOffset,\n            e = c.focusNode;\n        c = c.focusOffset;\n\n        try {\n          b.nodeType, e.nodeType;\n        } catch (A) {\n          b = null;\n          break a;\n        }\n\n        var f = 0,\n            g = -1,\n            h = -1,\n            l = 0,\n            k = 0,\n            m = a,\n            p = null;\n\n        b: for (;;) {\n          for (var t;;) {\n            m !== b || 0 !== d && 3 !== m.nodeType || (g = f + d);\n            m !== e || 0 !== c && 3 !== m.nodeType || (h = f + c);\n            3 === m.nodeType && (f += m.nodeValue.length);\n            if (null === (t = m.firstChild)) break;\n            p = m;\n            m = t;\n          }\n\n          for (;;) {\n            if (m === a) break b;\n            p === b && ++l === d && (g = f);\n            p === e && ++k === c && (h = f);\n            if (null !== (t = m.nextSibling)) break;\n            m = p;\n            p = m.parentNode;\n          }\n\n          m = t;\n        }\n\n        b = -1 === g || -1 === h ? null : {\n          start: g,\n          end: h\n        };\n      } else b = null;\n    }\n    b = b || {\n      start: 0,\n      end: 0\n    };\n  } else b = null;\n\n  return {\n    focusedElem: a,\n    selectionRange: b\n  };\n}\n\nfunction Qd(a) {\n  var b = Nd(),\n      c = a.focusedElem,\n      d = a.selectionRange;\n\n  if (b !== c && c && c.ownerDocument && Md(c.ownerDocument.documentElement, c)) {\n    if (null !== d && Od(c)) if (b = d.start, a = d.end, void 0 === a && (a = b), \"selectionStart\" in c) c.selectionStart = b, c.selectionEnd = Math.min(a, c.value.length);else if (a = (b = c.ownerDocument || document) && b.defaultView || window, a.getSelection) {\n      a = a.getSelection();\n      var e = c.textContent.length,\n          f = Math.min(d.start, e);\n      d = void 0 === d.end ? f : Math.min(d.end, e);\n      !a.extend && f > d && (e = d, d = f, f = e);\n      e = Ld(c, f);\n      var g = Ld(c, d);\n      e && g && (1 !== a.rangeCount || a.anchorNode !== e.node || a.anchorOffset !== e.offset || a.focusNode !== g.node || a.focusOffset !== g.offset) && (b = b.createRange(), b.setStart(e.node, e.offset), a.removeAllRanges(), f > d ? (a.addRange(b), a.extend(g.node, g.offset)) : (b.setEnd(g.node, g.offset), a.addRange(b)));\n    }\n    b = [];\n\n    for (a = c; a = a.parentNode;) {\n      1 === a.nodeType && b.push({\n        element: a,\n        left: a.scrollLeft,\n        top: a.scrollTop\n      });\n    }\n\n    \"function\" === typeof c.focus && c.focus();\n\n    for (c = 0; c < b.length; c++) {\n      a = b[c], a.element.scrollLeft = a.left, a.element.scrollTop = a.top;\n    }\n  }\n}\n\nvar Rd = Ra && \"documentMode\" in document && 11 >= document.documentMode,\n    Sd = {\n  select: {\n    phasedRegistrationNames: {\n      bubbled: \"onSelect\",\n      captured: \"onSelectCapture\"\n    },\n    dependencies: \"blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange\".split(\" \")\n  }\n},\n    Td = null,\n    Ud = null,\n    Vd = null,\n    Wd = !1;\n\nfunction Xd(a, b) {\n  var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;\n  if (Wd || null == Td || Td !== Jd(c)) return null;\n  c = Td;\n  \"selectionStart\" in c && Od(c) ? c = {\n    start: c.selectionStart,\n    end: c.selectionEnd\n  } : (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection(), c = {\n    anchorNode: c.anchorNode,\n    anchorOffset: c.anchorOffset,\n    focusNode: c.focusNode,\n    focusOffset: c.focusOffset\n  });\n  return Vd && dd(Vd, c) ? null : (Vd = c, a = y.getPooled(Sd.select, Ud, a, b), a.type = \"select\", a.target = Td, Qa(a), a);\n}\n\nvar Yd = {\n  eventTypes: Sd,\n  extractEvents: function extractEvents(a, b, c, d) {\n    var e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument,\n        f;\n\n    if (!(f = !e)) {\n      a: {\n        e = Id(e);\n        f = sa.onSelect;\n\n        for (var g = 0; g < f.length; g++) {\n          var h = f[g];\n\n          if (!e.hasOwnProperty(h) || !e[h]) {\n            e = !1;\n            break a;\n          }\n        }\n\n        e = !0;\n      }\n\n      f = !e;\n    }\n\n    if (f) return null;\n    e = b ? Ja(b) : window;\n\n    switch (a) {\n      case \"focus\":\n        if (Mb(e) || \"true\" === e.contentEditable) Td = e, Ud = b, Vd = null;\n        break;\n\n      case \"blur\":\n        Vd = Ud = Td = null;\n        break;\n\n      case \"mousedown\":\n        Wd = !0;\n        break;\n\n      case \"contextmenu\":\n      case \"mouseup\":\n      case \"dragend\":\n        return Wd = !1, Xd(c, d);\n\n      case \"selectionchange\":\n        if (Rd) break;\n\n      case \"keydown\":\n      case \"keyup\":\n        return Xd(c, d);\n    }\n\n    return null;\n  }\n};\nBa.injectEventPluginOrder(\"ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin\".split(\" \"));\nta = Ka;\nua = Ia;\nva = Ja;\nBa.injectEventPluginsByName({\n  SimpleEventPlugin: xd,\n  EnterLeaveEventPlugin: ad,\n  ChangeEventPlugin: Pc,\n  SelectEventPlugin: Yd,\n  BeforeInputEventPlugin: zb\n});\n\nfunction Zd(a) {\n  var b = \"\";\n  aa.Children.forEach(a, function (a) {\n    null != a && (b += a);\n  });\n  return b;\n}\n\nfunction $d(a, b) {\n  a = n({\n    children: void 0\n  }, b);\n  if (b = Zd(b.children)) a.children = b;\n  return a;\n}\n\nfunction ae(a, b, c, d) {\n  a = a.options;\n\n  if (b) {\n    b = {};\n\n    for (var e = 0; e < c.length; e++) {\n      b[\"$\" + c[e]] = !0;\n    }\n\n    for (c = 0; c < a.length; c++) {\n      e = b.hasOwnProperty(\"$\" + a[c].value), a[c].selected !== e && (a[c].selected = e), e && d && (a[c].defaultSelected = !0);\n    }\n  } else {\n    c = \"\" + uc(c);\n    b = null;\n\n    for (e = 0; e < a.length; e++) {\n      if (a[e].value === c) {\n        a[e].selected = !0;\n        d && (a[e].defaultSelected = !0);\n        return;\n      }\n\n      null !== b || a[e].disabled || (b = a[e]);\n    }\n\n    null !== b && (b.selected = !0);\n  }\n}\n\nfunction be(a, b) {\n  null != b.dangerouslySetInnerHTML ? x(\"91\") : void 0;\n  return n({}, b, {\n    value: void 0,\n    defaultValue: void 0,\n    children: \"\" + a._wrapperState.initialValue\n  });\n}\n\nfunction ce(a, b) {\n  var c = b.value;\n  null == c && (c = b.defaultValue, b = b.children, null != b && (null != c ? x(\"92\") : void 0, Array.isArray(b) && (1 >= b.length ? void 0 : x(\"93\"), b = b[0]), c = b), null == c && (c = \"\"));\n  a._wrapperState = {\n    initialValue: uc(c)\n  };\n}\n\nfunction de(a, b) {\n  var c = uc(b.value),\n      d = uc(b.defaultValue);\n  null != c && (c = \"\" + c, c !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c));\n  null != d && (a.defaultValue = \"\" + d);\n}\n\nfunction ee(a) {\n  var b = a.textContent;\n  b === a._wrapperState.initialValue && (a.value = b);\n}\n\nvar fe = {\n  html: \"http://www.w3.org/1999/xhtml\",\n  mathml: \"http://www.w3.org/1998/Math/MathML\",\n  svg: \"http://www.w3.org/2000/svg\"\n};\n\nfunction ge(a) {\n  switch (a) {\n    case \"svg\":\n      return \"http://www.w3.org/2000/svg\";\n\n    case \"math\":\n      return \"http://www.w3.org/1998/Math/MathML\";\n\n    default:\n      return \"http://www.w3.org/1999/xhtml\";\n  }\n}\n\nfunction he(a, b) {\n  return null == a || \"http://www.w3.org/1999/xhtml\" === a ? ge(b) : \"http://www.w3.org/2000/svg\" === a && \"foreignObject\" === b ? \"http://www.w3.org/1999/xhtml\" : a;\n}\n\nvar ie = void 0,\n    je = function (a) {\n  return \"undefined\" !== typeof MSApp && MSApp.execUnsafeLocalFunction ? function (b, c, d, e) {\n    MSApp.execUnsafeLocalFunction(function () {\n      return a(b, c, d, e);\n    });\n  } : a;\n}(function (a, b) {\n  if (a.namespaceURI !== fe.svg || \"innerHTML\" in a) a.innerHTML = b;else {\n    ie = ie || document.createElement(\"div\");\n    ie.innerHTML = \"<svg>\" + b + \"</svg>\";\n\n    for (b = ie.firstChild; a.firstChild;) {\n      a.removeChild(a.firstChild);\n    }\n\n    for (; b.firstChild;) {\n      a.appendChild(b.firstChild);\n    }\n  }\n});\n\nfunction ke(a, b) {\n  if (b) {\n    var c = a.firstChild;\n\n    if (c && c === a.lastChild && 3 === c.nodeType) {\n      c.nodeValue = b;\n      return;\n    }\n  }\n\n  a.textContent = b;\n}\n\nvar le = {\n  animationIterationCount: !0,\n  borderImageOutset: !0,\n  borderImageSlice: !0,\n  borderImageWidth: !0,\n  boxFlex: !0,\n  boxFlexGroup: !0,\n  boxOrdinalGroup: !0,\n  columnCount: !0,\n  columns: !0,\n  flex: !0,\n  flexGrow: !0,\n  flexPositive: !0,\n  flexShrink: !0,\n  flexNegative: !0,\n  flexOrder: !0,\n  gridArea: !0,\n  gridRow: !0,\n  gridRowEnd: !0,\n  gridRowSpan: !0,\n  gridRowStart: !0,\n  gridColumn: !0,\n  gridColumnEnd: !0,\n  gridColumnSpan: !0,\n  gridColumnStart: !0,\n  fontWeight: !0,\n  lineClamp: !0,\n  lineHeight: !0,\n  opacity: !0,\n  order: !0,\n  orphans: !0,\n  tabSize: !0,\n  widows: !0,\n  zIndex: !0,\n  zoom: !0,\n  fillOpacity: !0,\n  floodOpacity: !0,\n  stopOpacity: !0,\n  strokeDasharray: !0,\n  strokeDashoffset: !0,\n  strokeMiterlimit: !0,\n  strokeOpacity: !0,\n  strokeWidth: !0\n},\n    me = [\"Webkit\", \"ms\", \"Moz\", \"O\"];\nObject.keys(le).forEach(function (a) {\n  me.forEach(function (b) {\n    b = b + a.charAt(0).toUpperCase() + a.substring(1);\n    le[b] = le[a];\n  });\n});\n\nfunction ne(a, b, c) {\n  return null == b || \"boolean\" === typeof b || \"\" === b ? \"\" : c || \"number\" !== typeof b || 0 === b || le.hasOwnProperty(a) && le[a] ? (\"\" + b).trim() : b + \"px\";\n}\n\nfunction oe(a, b) {\n  a = a.style;\n\n  for (var c in b) {\n    if (b.hasOwnProperty(c)) {\n      var d = 0 === c.indexOf(\"--\"),\n          e = ne(c, b[c], d);\n      \"float\" === c && (c = \"cssFloat\");\n      d ? a.setProperty(c, e) : a[c] = e;\n    }\n  }\n}\n\nvar pe = n({\n  menuitem: !0\n}, {\n  area: !0,\n  base: !0,\n  br: !0,\n  col: !0,\n  embed: !0,\n  hr: !0,\n  img: !0,\n  input: !0,\n  keygen: !0,\n  link: !0,\n  meta: !0,\n  param: !0,\n  source: !0,\n  track: !0,\n  wbr: !0\n});\n\nfunction qe(a, b) {\n  b && (pe[a] && (null != b.children || null != b.dangerouslySetInnerHTML ? x(\"137\", a, \"\") : void 0), null != b.dangerouslySetInnerHTML && (null != b.children ? x(\"60\") : void 0, \"object\" === typeof b.dangerouslySetInnerHTML && \"__html\" in b.dangerouslySetInnerHTML ? void 0 : x(\"61\")), null != b.style && \"object\" !== typeof b.style ? x(\"62\", \"\") : void 0);\n}\n\nfunction re(a, b) {\n  if (-1 === a.indexOf(\"-\")) return \"string\" === typeof b.is;\n\n  switch (a) {\n    case \"annotation-xml\":\n    case \"color-profile\":\n    case \"font-face\":\n    case \"font-face-src\":\n    case \"font-face-uri\":\n    case \"font-face-format\":\n    case \"font-face-name\":\n    case \"missing-glyph\":\n      return !1;\n\n    default:\n      return !0;\n  }\n}\n\nfunction se(a, b) {\n  a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument;\n  var c = Id(a);\n  b = sa[b];\n\n  for (var d = 0; d < b.length; d++) {\n    var e = b[d];\n\n    if (!c.hasOwnProperty(e) || !c[e]) {\n      switch (e) {\n        case \"scroll\":\n          Ed(\"scroll\", a);\n          break;\n\n        case \"focus\":\n        case \"blur\":\n          Ed(\"focus\", a);\n          Ed(\"blur\", a);\n          c.blur = !0;\n          c.focus = !0;\n          break;\n\n        case \"cancel\":\n        case \"close\":\n          Ob(e) && Ed(e, a);\n          break;\n\n        case \"invalid\":\n        case \"submit\":\n        case \"reset\":\n          break;\n\n        default:\n          -1 === ab.indexOf(e) && E(e, a);\n      }\n\n      c[e] = !0;\n    }\n  }\n}\n\nfunction te() {}\n\nvar ue = null,\n    ve = null;\n\nfunction we(a, b) {\n  switch (a) {\n    case \"button\":\n    case \"input\":\n    case \"select\":\n    case \"textarea\":\n      return !!b.autoFocus;\n  }\n\n  return !1;\n}\n\nfunction xe(a, b) {\n  return \"textarea\" === a || \"option\" === a || \"noscript\" === a || \"string\" === typeof b.children || \"number\" === typeof b.children || \"object\" === typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;\n}\n\nvar ye = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    ze = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    Ae = r.unstable_scheduleCallback,\n    Be = r.unstable_cancelCallback;\n\nfunction Ce(a, b, c, d, e) {\n  a[Ga] = e;\n  \"input\" === c && \"radio\" === e.type && null != e.name && xc(a, e);\n  re(c, d);\n  d = re(c, e);\n\n  for (var f = 0; f < b.length; f += 2) {\n    var g = b[f],\n        h = b[f + 1];\n    \"style\" === g ? oe(a, h) : \"dangerouslySetInnerHTML\" === g ? je(a, h) : \"children\" === g ? ke(a, h) : tc(a, g, h, d);\n  }\n\n  switch (c) {\n    case \"input\":\n      yc(a, e);\n      break;\n\n    case \"textarea\":\n      de(a, e);\n      break;\n\n    case \"select\":\n      b = a._wrapperState.wasMultiple, a._wrapperState.wasMultiple = !!e.multiple, c = e.value, null != c ? ae(a, !!e.multiple, c, !1) : b !== !!e.multiple && (null != e.defaultValue ? ae(a, !!e.multiple, e.defaultValue, !0) : ae(a, !!e.multiple, e.multiple ? [] : \"\", !1));\n  }\n}\n\nfunction De(a) {\n  for (a = a.nextSibling; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nfunction Ee(a) {\n  for (a = a.firstChild; a && 1 !== a.nodeType && 3 !== a.nodeType;) {\n    a = a.nextSibling;\n  }\n\n  return a;\n}\n\nnew Set();\nvar Fe = [],\n    Ge = -1;\n\nfunction F(a) {\n  0 > Ge || (a.current = Fe[Ge], Fe[Ge] = null, Ge--);\n}\n\nfunction G(a, b) {\n  Ge++;\n  Fe[Ge] = a.current;\n  a.current = b;\n}\n\nvar He = {},\n    H = {\n  current: He\n},\n    I = {\n  current: !1\n},\n    Ie = He;\n\nfunction Je(a, b) {\n  var c = a.type.contextTypes;\n  if (!c) return He;\n  var d = a.stateNode;\n  if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;\n  var e = {},\n      f;\n\n  for (f in c) {\n    e[f] = b[f];\n  }\n\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = b, a.__reactInternalMemoizedMaskedChildContext = e);\n  return e;\n}\n\nfunction J(a) {\n  a = a.childContextTypes;\n  return null !== a && void 0 !== a;\n}\n\nfunction Ke(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Le(a) {\n  F(I, a);\n  F(H, a);\n}\n\nfunction Me(a, b, c) {\n  H.current !== He ? x(\"168\") : void 0;\n  G(H, b, a);\n  G(I, c, a);\n}\n\nfunction Ne(a, b, c) {\n  var d = a.stateNode;\n  a = b.childContextTypes;\n  if (\"function\" !== typeof d.getChildContext) return c;\n  d = d.getChildContext();\n\n  for (var e in d) {\n    e in a ? void 0 : x(\"108\", ic(b) || \"Unknown\", e);\n  }\n\n  return n({}, c, d);\n}\n\nfunction Oe(a) {\n  var b = a.stateNode;\n  b = b && b.__reactInternalMemoizedMergedChildContext || He;\n  Ie = H.current;\n  G(H, b, a);\n  G(I, I.current, a);\n  return !0;\n}\n\nfunction Pe(a, b, c) {\n  var d = a.stateNode;\n  d ? void 0 : x(\"169\");\n  c ? (b = Ne(a, b, Ie), d.__reactInternalMemoizedMergedChildContext = b, F(I, a), F(H, a), G(H, b, a)) : F(I, a);\n  G(I, c, a);\n}\n\nvar Qe = null,\n    Re = null;\n\nfunction Se(a) {\n  return function (b) {\n    try {\n      return a(b);\n    } catch (c) {}\n  };\n}\n\nfunction Te(a) {\n  if (\"undefined\" === typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;\n  var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (b.isDisabled || !b.supportsFiber) return !0;\n\n  try {\n    var c = b.inject(a);\n    Qe = Se(function (a) {\n      return b.onCommitFiberRoot(c, a);\n    });\n    Re = Se(function (a) {\n      return b.onCommitFiberUnmount(c, a);\n    });\n  } catch (d) {}\n\n  return !0;\n}\n\nfunction Ue(a, b, c, d) {\n  this.tag = a;\n  this.key = c;\n  this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null;\n  this.index = 0;\n  this.ref = null;\n  this.pendingProps = b;\n  this.contextDependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null;\n  this.mode = d;\n  this.effectTag = 0;\n  this.lastEffect = this.firstEffect = this.nextEffect = null;\n  this.childExpirationTime = this.expirationTime = 0;\n  this.alternate = null;\n}\n\nfunction K(a, b, c, d) {\n  return new Ue(a, b, c, d);\n}\n\nfunction Ve(a) {\n  a = a.prototype;\n  return !(!a || !a.isReactComponent);\n}\n\nfunction We(a) {\n  if (\"function\" === typeof a) return Ve(a) ? 1 : 0;\n\n  if (void 0 !== a && null !== a) {\n    a = a.$$typeof;\n    if (a === cc) return 11;\n    if (a === ec) return 14;\n  }\n\n  return 2;\n}\n\nfunction Xe(a, b) {\n  var c = a.alternate;\n  null === c ? (c = K(a.tag, b, a.key, a.mode), c.elementType = a.elementType, c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null);\n  c.childExpirationTime = a.childExpirationTime;\n  c.expirationTime = a.expirationTime;\n  c.child = a.child;\n  c.memoizedProps = a.memoizedProps;\n  c.memoizedState = a.memoizedState;\n  c.updateQueue = a.updateQueue;\n  c.contextDependencies = a.contextDependencies;\n  c.sibling = a.sibling;\n  c.index = a.index;\n  c.ref = a.ref;\n  return c;\n}\n\nfunction Ye(a, b, c, d, e, f) {\n  var g = 2;\n  d = a;\n  if (\"function\" === typeof a) Ve(a) && (g = 1);else if (\"string\" === typeof a) g = 5;else a: switch (a) {\n    case Xb:\n      return Ze(c.children, e, f, b);\n\n    case bc:\n      return $e(c, e | 3, f, b);\n\n    case Yb:\n      return $e(c, e | 2, f, b);\n\n    case Zb:\n      return a = K(12, c, b, e | 4), a.elementType = Zb, a.type = Zb, a.expirationTime = f, a;\n\n    case dc:\n      return a = K(13, c, b, e), a.elementType = dc, a.type = dc, a.expirationTime = f, a;\n\n    default:\n      if (\"object\" === typeof a && null !== a) switch (a.$$typeof) {\n        case $b:\n          g = 10;\n          break a;\n\n        case ac:\n          g = 9;\n          break a;\n\n        case cc:\n          g = 11;\n          break a;\n\n        case ec:\n          g = 14;\n          break a;\n\n        case fc:\n          g = 16;\n          d = null;\n          break a;\n      }\n      x(\"130\", null == a ? a : typeof a, \"\");\n  }\n  b = K(g, c, b, e);\n  b.elementType = a;\n  b.type = d;\n  b.expirationTime = f;\n  return b;\n}\n\nfunction Ze(a, b, c, d) {\n  a = K(7, a, d, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction $e(a, b, c, d) {\n  a = K(8, a, d, b);\n  b = 0 === (b & 1) ? Yb : bc;\n  a.elementType = b;\n  a.type = b;\n  a.expirationTime = c;\n  return a;\n}\n\nfunction af(a, b, c) {\n  a = K(6, a, null, b);\n  a.expirationTime = c;\n  return a;\n}\n\nfunction bf(a, b, c) {\n  b = K(4, null !== a.children ? a.children : [], a.key, b);\n  b.expirationTime = c;\n  b.stateNode = {\n    containerInfo: a.containerInfo,\n    pendingChildren: null,\n    implementation: a.implementation\n  };\n  return b;\n}\n\nfunction cf(a, b) {\n  a.didError = !1;\n  var c = a.earliestPendingTime;\n  0 === c ? a.earliestPendingTime = a.latestPendingTime = b : c < b ? a.earliestPendingTime = b : a.latestPendingTime > b && (a.latestPendingTime = b);\n  df(b, a);\n}\n\nfunction ef(a, b) {\n  a.didError = !1;\n  if (0 === b) a.earliestPendingTime = 0, a.latestPendingTime = 0, a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0;else {\n    b < a.latestPingedTime && (a.latestPingedTime = 0);\n    var c = a.latestPendingTime;\n    0 !== c && (c > b ? a.earliestPendingTime = a.latestPendingTime = 0 : a.earliestPendingTime > b && (a.earliestPendingTime = a.latestPendingTime));\n    c = a.earliestSuspendedTime;\n    0 === c ? cf(a, b) : b < a.latestSuspendedTime ? (a.earliestSuspendedTime = 0, a.latestSuspendedTime = 0, a.latestPingedTime = 0, cf(a, b)) : b > c && cf(a, b);\n  }\n  df(0, a);\n}\n\nfunction ff(a, b) {\n  a.didError = !1;\n  a.latestPingedTime >= b && (a.latestPingedTime = 0);\n  var c = a.earliestPendingTime,\n      d = a.latestPendingTime;\n  c === b ? a.earliestPendingTime = d === b ? a.latestPendingTime = 0 : d : d === b && (a.latestPendingTime = c);\n  c = a.earliestSuspendedTime;\n  d = a.latestSuspendedTime;\n  0 === c ? a.earliestSuspendedTime = a.latestSuspendedTime = b : c < b ? a.earliestSuspendedTime = b : d > b && (a.latestSuspendedTime = b);\n  df(b, a);\n}\n\nfunction gf(a, b) {\n  var c = a.earliestPendingTime;\n  a = a.earliestSuspendedTime;\n  c > b && (b = c);\n  a > b && (b = a);\n  return b;\n}\n\nfunction df(a, b) {\n  var c = b.earliestSuspendedTime,\n      d = b.latestSuspendedTime,\n      e = b.earliestPendingTime,\n      f = b.latestPingedTime;\n  e = 0 !== e ? e : f;\n  0 === e && (0 === a || d < a) && (e = d);\n  a = e;\n  0 !== a && c > a && (a = c);\n  b.nextExpirationTimeToWorkOn = e;\n  b.expirationTime = a;\n}\n\nfunction L(a, b) {\n  if (a && a.defaultProps) {\n    b = n({}, b);\n    a = a.defaultProps;\n\n    for (var c in a) {\n      void 0 === b[c] && (b[c] = a[c]);\n    }\n  }\n\n  return b;\n}\n\nfunction hf(a) {\n  var b = a._result;\n\n  switch (a._status) {\n    case 1:\n      return b;\n\n    case 2:\n      throw b;\n\n    case 0:\n      throw b;\n\n    default:\n      a._status = 0;\n      b = a._ctor;\n      b = b();\n      b.then(function (b) {\n        0 === a._status && (b = b.default, a._status = 1, a._result = b);\n      }, function (b) {\n        0 === a._status && (a._status = 2, a._result = b);\n      });\n\n      switch (a._status) {\n        case 1:\n          return a._result;\n\n        case 2:\n          throw a._result;\n      }\n\n      a._result = b;\n      throw b;\n  }\n}\n\nvar jf = new aa.Component().refs;\n\nfunction kf(a, b, c, d) {\n  b = a.memoizedState;\n  c = c(d, b);\n  c = null === c || void 0 === c ? b : n({}, b, c);\n  a.memoizedState = c;\n  d = a.updateQueue;\n  null !== d && 0 === a.expirationTime && (d.baseState = c);\n}\n\nvar tf = {\n  isMounted: function isMounted(a) {\n    return (a = a._reactInternalFiber) ? 2 === ed(a) : !1;\n  },\n  enqueueSetState: function enqueueSetState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueReplaceState: function enqueueReplaceState(a, b, c) {\n    a = a._reactInternalFiber;\n    var d = lf();\n    d = mf(d, a);\n    var e = nf(d);\n    e.tag = rf;\n    e.payload = b;\n    void 0 !== c && null !== c && (e.callback = c);\n    of();\n    pf(a, e);\n    qf(a, d);\n  },\n  enqueueForceUpdate: function enqueueForceUpdate(a, b) {\n    a = a._reactInternalFiber;\n    var c = lf();\n    c = mf(c, a);\n    var d = nf(c);\n    d.tag = sf;\n    void 0 !== b && null !== b && (d.callback = b);\n    of();\n    pf(a, d);\n    qf(a, c);\n  }\n};\n\nfunction uf(a, b, c, d, e, f, g) {\n  a = a.stateNode;\n  return \"function\" === typeof a.shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : b.prototype && b.prototype.isPureReactComponent ? !dd(c, d) || !dd(e, f) : !0;\n}\n\nfunction vf(a, b, c) {\n  var d = !1,\n      e = He;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? f = M(f) : (e = J(b) ? Ie : H.current, d = b.contextTypes, f = (d = null !== d && void 0 !== d) ? Je(a, e) : He);\n  b = new b(c, f);\n  a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null;\n  b.updater = tf;\n  a.stateNode = b;\n  b._reactInternalFiber = a;\n  d && (a = a.stateNode, a.__reactInternalMemoizedUnmaskedChildContext = e, a.__reactInternalMemoizedMaskedChildContext = f);\n  return b;\n}\n\nfunction wf(a, b, c, d) {\n  a = b.state;\n  \"function\" === typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d);\n  \"function\" === typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d);\n  b.state !== a && tf.enqueueReplaceState(b, b.state, null);\n}\n\nfunction xf(a, b, c, d) {\n  var e = a.stateNode;\n  e.props = c;\n  e.state = a.memoizedState;\n  e.refs = jf;\n  var f = b.contextType;\n  \"object\" === typeof f && null !== f ? e.context = M(f) : (f = J(b) ? Ie : H.current, e.context = Je(a, f));\n  f = a.updateQueue;\n  null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState);\n  f = b.getDerivedStateFromProps;\n  \"function\" === typeof f && (kf(a, b, f, c), e.state = a.memoizedState);\n  \"function\" === typeof b.getDerivedStateFromProps || \"function\" === typeof e.getSnapshotBeforeUpdate || \"function\" !== typeof e.UNSAFE_componentWillMount && \"function\" !== typeof e.componentWillMount || (b = e.state, \"function\" === typeof e.componentWillMount && e.componentWillMount(), \"function\" === typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), b !== e.state && tf.enqueueReplaceState(e, e.state, null), f = a.updateQueue, null !== f && (yf(a, f, c, e, d), e.state = a.memoizedState));\n  \"function\" === typeof e.componentDidMount && (a.effectTag |= 4);\n}\n\nvar zf = Array.isArray;\n\nfunction Af(a, b, c) {\n  a = c.ref;\n\n  if (null !== a && \"function\" !== typeof a && \"object\" !== typeof a) {\n    if (c._owner) {\n      c = c._owner;\n      var d = void 0;\n      c && (1 !== c.tag ? x(\"309\") : void 0, d = c.stateNode);\n      d ? void 0 : x(\"147\", a);\n      var e = \"\" + a;\n      if (null !== b && null !== b.ref && \"function\" === typeof b.ref && b.ref._stringRef === e) return b.ref;\n\n      b = function b(a) {\n        var b = d.refs;\n        b === jf && (b = d.refs = {});\n        null === a ? delete b[e] : b[e] = a;\n      };\n\n      b._stringRef = e;\n      return b;\n    }\n\n    \"string\" !== typeof a ? x(\"284\") : void 0;\n    c._owner ? void 0 : x(\"290\", a);\n  }\n\n  return a;\n}\n\nfunction Bf(a, b) {\n  \"textarea\" !== a.type && x(\"31\", \"[object Object]\" === Object.prototype.toString.call(b) ? \"object with keys {\" + Object.keys(b).join(\", \") + \"}\" : b, \"\");\n}\n\nfunction Cf(a) {\n  function b(b, c) {\n    if (a) {\n      var d = b.lastEffect;\n      null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c;\n      c.nextEffect = null;\n      c.effectTag = 8;\n    }\n  }\n\n  function c(c, d) {\n    if (!a) return null;\n\n    for (; null !== d;) {\n      b(c, d), d = d.sibling;\n    }\n\n    return null;\n  }\n\n  function d(a, b) {\n    for (a = new Map(); null !== b;) {\n      null !== b.key ? a.set(b.key, b) : a.set(b.index, b), b = b.sibling;\n    }\n\n    return a;\n  }\n\n  function e(a, b, c) {\n    a = Xe(a, b, c);\n    a.index = 0;\n    a.sibling = null;\n    return a;\n  }\n\n  function f(b, c, d) {\n    b.index = d;\n    if (!a) return c;\n    d = b.alternate;\n    if (null !== d) return d = d.index, d < c ? (b.effectTag = 2, c) : d;\n    b.effectTag = 2;\n    return c;\n  }\n\n  function g(b) {\n    a && null === b.alternate && (b.effectTag = 2);\n    return b;\n  }\n\n  function h(a, b, c, d) {\n    if (null === b || 6 !== b.tag) return b = af(c, a.mode, d), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function l(a, b, c, d) {\n    if (null !== b && b.elementType === c.type) return d = e(b, c.props, d), d.ref = Af(a, b, c), d.return = a, d;\n    d = Ye(c.type, c.key, c.props, null, a.mode, d);\n    d.ref = Af(a, b, c);\n    d.return = a;\n    return d;\n  }\n\n  function k(a, b, c, d) {\n    if (null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation) return b = bf(c, a.mode, d), b.return = a, b;\n    b = e(b, c.children || [], d);\n    b.return = a;\n    return b;\n  }\n\n  function m(a, b, c, d, f) {\n    if (null === b || 7 !== b.tag) return b = Ze(c, a.mode, d, f), b.return = a, b;\n    b = e(b, c, d);\n    b.return = a;\n    return b;\n  }\n\n  function p(a, b, c) {\n    if (\"string\" === typeof b || \"number\" === typeof b) return b = af(\"\" + b, a.mode, c), b.return = a, b;\n\n    if (\"object\" === typeof b && null !== b) {\n      switch (b.$$typeof) {\n        case Vb:\n          return c = Ye(b.type, b.key, b.props, null, a.mode, c), c.ref = Af(a, null, b), c.return = a, c;\n\n        case Wb:\n          return b = bf(b, a.mode, c), b.return = a, b;\n      }\n\n      if (zf(b) || hc(b)) return b = Ze(b, a.mode, c, null), b.return = a, b;\n      Bf(a, b);\n    }\n\n    return null;\n  }\n\n  function t(a, b, c, d) {\n    var e = null !== b ? b.key : null;\n    if (\"string\" === typeof c || \"number\" === typeof c) return null !== e ? null : h(a, b, \"\" + c, d);\n\n    if (\"object\" === typeof c && null !== c) {\n      switch (c.$$typeof) {\n        case Vb:\n          return c.key === e ? c.type === Xb ? m(a, b, c.props.children, d, e) : l(a, b, c, d) : null;\n\n        case Wb:\n          return c.key === e ? k(a, b, c, d) : null;\n      }\n\n      if (zf(c) || hc(c)) return null !== e ? null : m(a, b, c, d, null);\n      Bf(a, c);\n    }\n\n    return null;\n  }\n\n  function A(a, b, c, d, e) {\n    if (\"string\" === typeof d || \"number\" === typeof d) return a = a.get(c) || null, h(b, a, \"\" + d, e);\n\n    if (\"object\" === typeof d && null !== d) {\n      switch (d.$$typeof) {\n        case Vb:\n          return a = a.get(null === d.key ? c : d.key) || null, d.type === Xb ? m(b, a, d.props.children, e, d.key) : l(b, a, d, e);\n\n        case Wb:\n          return a = a.get(null === d.key ? c : d.key) || null, k(b, a, d, e);\n      }\n\n      if (zf(d) || hc(d)) return a = a.get(c) || null, m(b, a, d, e, null);\n      Bf(b, d);\n    }\n\n    return null;\n  }\n\n  function v(e, g, h, k) {\n    for (var l = null, m = null, q = g, u = g = 0, B = null; null !== q && u < h.length; u++) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var w = t(e, q, h[u], k);\n\n      if (null === w) {\n        null === q && (q = B);\n        break;\n      }\n\n      a && q && null === w.alternate && b(e, q);\n      g = f(w, g, u);\n      null === m ? l = w : m.sibling = w;\n      m = w;\n      q = B;\n    }\n\n    if (u === h.length) return c(e, q), l;\n\n    if (null === q) {\n      for (; u < h.length; u++) {\n        if (q = p(e, h[u], k)) g = f(q, g, u), null === m ? l = q : m.sibling = q, m = q;\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); u < h.length; u++) {\n      if (B = A(q, e, u, h[u], k)) a && null !== B.alternate && q.delete(null === B.key ? u : B.key), g = f(B, g, u), null === m ? l = B : m.sibling = B, m = B;\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  function R(e, g, h, k) {\n    var l = hc(h);\n    \"function\" !== typeof l ? x(\"150\") : void 0;\n    h = l.call(h);\n    null == h ? x(\"151\") : void 0;\n\n    for (var m = l = null, q = g, u = g = 0, B = null, w = h.next(); null !== q && !w.done; u++, w = h.next()) {\n      q.index > u ? (B = q, q = null) : B = q.sibling;\n      var v = t(e, q, w.value, k);\n\n      if (null === v) {\n        q || (q = B);\n        break;\n      }\n\n      a && q && null === v.alternate && b(e, q);\n      g = f(v, g, u);\n      null === m ? l = v : m.sibling = v;\n      m = v;\n      q = B;\n    }\n\n    if (w.done) return c(e, q), l;\n\n    if (null === q) {\n      for (; !w.done; u++, w = h.next()) {\n        w = p(e, w.value, k), null !== w && (g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n      }\n\n      return l;\n    }\n\n    for (q = d(e, q); !w.done; u++, w = h.next()) {\n      w = A(q, e, u, w.value, k), null !== w && (a && null !== w.alternate && q.delete(null === w.key ? u : w.key), g = f(w, g, u), null === m ? l = w : m.sibling = w, m = w);\n    }\n\n    a && q.forEach(function (a) {\n      return b(e, a);\n    });\n    return l;\n  }\n\n  return function (a, d, f, h) {\n    var k = \"object\" === typeof f && null !== f && f.type === Xb && null === f.key;\n    k && (f = f.props.children);\n    var l = \"object\" === typeof f && null !== f;\n    if (l) switch (f.$$typeof) {\n      case Vb:\n        a: {\n          l = f.key;\n\n          for (k = d; null !== k;) {\n            if (k.key === l) {\n              if (7 === k.tag ? f.type === Xb : k.elementType === f.type) {\n                c(a, k.sibling);\n                d = e(k, f.type === Xb ? f.props.children : f.props, h);\n                d.ref = Af(a, k, f);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, k);\n                break;\n              }\n            } else b(a, k);\n            k = k.sibling;\n          }\n\n          f.type === Xb ? (d = Ze(f.props.children, a.mode, h, f.key), d.return = a, a = d) : (h = Ye(f.type, f.key, f.props, null, a.mode, h), h.ref = Af(a, d, f), h.return = a, a = h);\n        }\n\n        return g(a);\n\n      case Wb:\n        a: {\n          for (k = f.key; null !== d;) {\n            if (d.key === k) {\n              if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {\n                c(a, d.sibling);\n                d = e(d, f.children || [], h);\n                d.return = a;\n                a = d;\n                break a;\n              } else {\n                c(a, d);\n                break;\n              }\n            } else b(a, d);\n            d = d.sibling;\n          }\n\n          d = bf(f, a.mode, h);\n          d.return = a;\n          a = d;\n        }\n\n        return g(a);\n    }\n    if (\"string\" === typeof f || \"number\" === typeof f) return f = \"\" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), d = e(d, f, h), d.return = a, a = d) : (c(a, d), d = af(f, a.mode, h), d.return = a, a = d), g(a);\n    if (zf(f)) return v(a, d, f, h);\n    if (hc(f)) return R(a, d, f, h);\n    l && Bf(a, f);\n    if (\"undefined\" === typeof f && !k) switch (a.tag) {\n      case 1:\n      case 0:\n        h = a.type, x(\"152\", h.displayName || h.name || \"Component\");\n    }\n    return c(a, d);\n  };\n}\n\nvar Df = Cf(!0),\n    Ef = Cf(!1),\n    Ff = {},\n    N = {\n  current: Ff\n},\n    Gf = {\n  current: Ff\n},\n    Hf = {\n  current: Ff\n};\n\nfunction If(a) {\n  a === Ff ? x(\"174\") : void 0;\n  return a;\n}\n\nfunction Jf(a, b) {\n  G(Hf, b, a);\n  G(Gf, a, a);\n  G(N, Ff, a);\n  var c = b.nodeType;\n\n  switch (c) {\n    case 9:\n    case 11:\n      b = (b = b.documentElement) ? b.namespaceURI : he(null, \"\");\n      break;\n\n    default:\n      c = 8 === c ? b.parentNode : b, b = c.namespaceURI || null, c = c.tagName, b = he(b, c);\n  }\n\n  F(N, a);\n  G(N, b, a);\n}\n\nfunction Kf(a) {\n  F(N, a);\n  F(Gf, a);\n  F(Hf, a);\n}\n\nfunction Lf(a) {\n  If(Hf.current);\n  var b = If(N.current);\n  var c = he(b, a.type);\n  b !== c && (G(Gf, a, a), G(N, c, a));\n}\n\nfunction Mf(a) {\n  Gf.current === a && (F(N, a), F(Gf, a));\n}\n\nvar Nf = 0,\n    Of = 2,\n    Pf = 4,\n    Qf = 8,\n    Rf = 16,\n    Sf = 32,\n    Tf = 64,\n    Uf = 128,\n    Vf = Tb.ReactCurrentDispatcher,\n    Wf = 0,\n    Xf = null,\n    O = null,\n    P = null,\n    Yf = null,\n    Q = null,\n    Zf = null,\n    $f = 0,\n    ag = null,\n    bg = 0,\n    cg = !1,\n    dg = null,\n    eg = 0;\n\nfunction fg() {\n  x(\"321\");\n}\n\nfunction gg(a, b) {\n  if (null === b) return !1;\n\n  for (var c = 0; c < b.length && c < a.length; c++) {\n    if (!bd(a[c], b[c])) return !1;\n  }\n\n  return !0;\n}\n\nfunction hg(a, b, c, d, e, f) {\n  Wf = f;\n  Xf = b;\n  P = null !== a ? a.memoizedState : null;\n  Vf.current = null === P ? ig : jg;\n  b = c(d, e);\n\n  if (cg) {\n    do {\n      cg = !1, eg += 1, P = null !== a ? a.memoizedState : null, Zf = Yf, ag = Q = O = null, Vf.current = jg, b = c(d, e);\n    } while (cg);\n\n    dg = null;\n    eg = 0;\n  }\n\n  Vf.current = kg;\n  a = Xf;\n  a.memoizedState = Yf;\n  a.expirationTime = $f;\n  a.updateQueue = ag;\n  a.effectTag |= bg;\n  a = null !== O && null !== O.next;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  a ? x(\"300\") : void 0;\n  return b;\n}\n\nfunction lg() {\n  Vf.current = kg;\n  Wf = 0;\n  Zf = Q = Yf = P = O = Xf = null;\n  $f = 0;\n  ag = null;\n  bg = 0;\n  cg = !1;\n  dg = null;\n  eg = 0;\n}\n\nfunction mg() {\n  var a = {\n    memoizedState: null,\n    baseState: null,\n    queue: null,\n    baseUpdate: null,\n    next: null\n  };\n  null === Q ? Yf = Q = a : Q = Q.next = a;\n  return Q;\n}\n\nfunction ng() {\n  if (null !== Zf) Q = Zf, Zf = Q.next, O = P, P = null !== O ? O.next : null;else {\n    null === P ? x(\"310\") : void 0;\n    O = P;\n    var a = {\n      memoizedState: O.memoizedState,\n      baseState: O.baseState,\n      queue: O.queue,\n      baseUpdate: O.baseUpdate,\n      next: null\n    };\n    Q = null === Q ? Yf = a : Q.next = a;\n    P = O.next;\n  }\n  return Q;\n}\n\nfunction og(a, b) {\n  return \"function\" === typeof b ? b(a) : b;\n}\n\nfunction pg(a) {\n  var b = ng(),\n      c = b.queue;\n  null === c ? x(\"311\") : void 0;\n  c.lastRenderedReducer = a;\n\n  if (0 < eg) {\n    var d = c.dispatch;\n\n    if (null !== dg) {\n      var e = dg.get(c);\n\n      if (void 0 !== e) {\n        dg.delete(c);\n        var f = b.memoizedState;\n\n        do {\n          f = a(f, e.action), e = e.next;\n        } while (null !== e);\n\n        bd(f, b.memoizedState) || (qg = !0);\n        b.memoizedState = f;\n        b.baseUpdate === c.last && (b.baseState = f);\n        c.lastRenderedState = f;\n        return [f, d];\n      }\n    }\n\n    return [b.memoizedState, d];\n  }\n\n  d = c.last;\n  var g = b.baseUpdate;\n  f = b.baseState;\n  null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null;\n\n  if (null !== d) {\n    var h = e = null,\n        l = d,\n        k = !1;\n\n    do {\n      var m = l.expirationTime;\n      m < Wf ? (k || (k = !0, h = g, e = f), m > $f && ($f = m)) : f = l.eagerReducer === a ? l.eagerState : a(f, l.action);\n      g = l;\n      l = l.next;\n    } while (null !== l && l !== d);\n\n    k || (h = g, e = f);\n    bd(f, b.memoizedState) || (qg = !0);\n    b.memoizedState = f;\n    b.baseUpdate = h;\n    b.baseState = e;\n    c.lastRenderedState = f;\n  }\n\n  return [b.memoizedState, c.dispatch];\n}\n\nfunction rg(a, b, c, d) {\n  a = {\n    tag: a,\n    create: b,\n    destroy: c,\n    deps: d,\n    next: null\n  };\n  null === ag ? (ag = {\n    lastEffect: null\n  }, ag.lastEffect = a.next = a) : (b = ag.lastEffect, null === b ? ag.lastEffect = a.next = a : (c = b.next, b.next = a, a.next = c, ag.lastEffect = a));\n  return a;\n}\n\nfunction sg(a, b, c, d) {\n  var e = mg();\n  bg |= a;\n  e.memoizedState = rg(b, c, void 0, void 0 === d ? null : d);\n}\n\nfunction tg(a, b, c, d) {\n  var e = ng();\n  d = void 0 === d ? null : d;\n  var f = void 0;\n\n  if (null !== O) {\n    var g = O.memoizedState;\n    f = g.destroy;\n\n    if (null !== d && gg(d, g.deps)) {\n      rg(Nf, c, f, d);\n      return;\n    }\n  }\n\n  bg |= a;\n  e.memoizedState = rg(b, c, f, d);\n}\n\nfunction ug(a, b) {\n  if (\"function\" === typeof b) return a = a(), b(a), function () {\n    b(null);\n  };\n  if (null !== b && void 0 !== b) return a = a(), b.current = a, function () {\n    b.current = null;\n  };\n}\n\nfunction vg() {}\n\nfunction wg(a, b, c) {\n  25 > eg ? void 0 : x(\"301\");\n  var d = a.alternate;\n  if (a === Xf || null !== d && d === Xf) {\n    if (cg = !0, a = {\n      expirationTime: Wf,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    }, null === dg && (dg = new Map()), c = dg.get(b), void 0 === c) dg.set(b, a);else {\n      for (b = c; null !== b.next;) {\n        b = b.next;\n      }\n\n      b.next = a;\n    }\n  } else {\n    of();\n    var e = lf();\n    e = mf(e, a);\n    var f = {\n      expirationTime: e,\n      action: c,\n      eagerReducer: null,\n      eagerState: null,\n      next: null\n    },\n        g = b.last;\n    if (null === g) f.next = f;else {\n      var h = g.next;\n      null !== h && (f.next = h);\n      g.next = f;\n    }\n    b.last = f;\n    if (0 === a.expirationTime && (null === d || 0 === d.expirationTime) && (d = b.lastRenderedReducer, null !== d)) try {\n      var l = b.lastRenderedState,\n          k = d(l, c);\n      f.eagerReducer = d;\n      f.eagerState = k;\n      if (bd(k, l)) return;\n    } catch (m) {} finally {}\n    qf(a, e);\n  }\n}\n\nvar kg = {\n  readContext: M,\n  useCallback: fg,\n  useContext: fg,\n  useEffect: fg,\n  useImperativeHandle: fg,\n  useLayoutEffect: fg,\n  useMemo: fg,\n  useReducer: fg,\n  useRef: fg,\n  useState: fg,\n  useDebugValue: fg\n},\n    ig = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    mg().memoizedState = [a, void 0 === b ? null : b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return sg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return sg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return sg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = mg();\n    b = void 0 === b ? null : b;\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: function useReducer(a, b, c) {\n    var d = mg();\n    b = void 0 !== c ? c(b) : b;\n    d.memoizedState = d.baseState = b;\n    a = d.queue = {\n      last: null,\n      dispatch: null,\n      lastRenderedReducer: a,\n      lastRenderedState: b\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [d.memoizedState, a];\n  },\n  useRef: function useRef(a) {\n    var b = mg();\n    a = {\n      current: a\n    };\n    return b.memoizedState = a;\n  },\n  useState: function useState(a) {\n    var b = mg();\n    \"function\" === typeof a && (a = a());\n    b.memoizedState = b.baseState = a;\n    a = b.queue = {\n      last: null,\n      dispatch: null,\n      lastRenderedReducer: og,\n      lastRenderedState: a\n    };\n    a = a.dispatch = wg.bind(null, Xf, a);\n    return [b.memoizedState, a];\n  },\n  useDebugValue: vg\n},\n    jg = {\n  readContext: M,\n  useCallback: function useCallback(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useContext: M,\n  useEffect: function useEffect(a, b) {\n    return tg(516, Uf | Tf, a, b);\n  },\n  useImperativeHandle: function useImperativeHandle(a, b, c) {\n    c = null !== c && void 0 !== c ? c.concat([a]) : null;\n    return tg(4, Pf | Sf, ug.bind(null, b, a), c);\n  },\n  useLayoutEffect: function useLayoutEffect(a, b) {\n    return tg(4, Pf | Sf, a, b);\n  },\n  useMemo: function useMemo(a, b) {\n    var c = ng();\n    b = void 0 === b ? null : b;\n    var d = c.memoizedState;\n    if (null !== d && null !== b && gg(b, d[1])) return d[0];\n    a = a();\n    c.memoizedState = [a, b];\n    return a;\n  },\n  useReducer: pg,\n  useRef: function useRef() {\n    return ng().memoizedState;\n  },\n  useState: function useState(a) {\n    return pg(og, a);\n  },\n  useDebugValue: vg\n},\n    xg = null,\n    yg = null,\n    zg = !1;\n\nfunction Ag(a, b) {\n  var c = K(5, null, null, 0);\n  c.elementType = \"DELETED\";\n  c.type = \"DELETED\";\n  c.stateNode = b;\n  c.return = a;\n  c.effectTag = 8;\n  null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;\n}\n\nfunction Bg(a, b) {\n  switch (a.tag) {\n    case 5:\n      var c = a.type;\n      b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b;\n      return null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 6:\n      return b = \"\" === a.pendingProps || 3 !== b.nodeType ? null : b, null !== b ? (a.stateNode = b, !0) : !1;\n\n    case 13:\n      return !1;\n\n    default:\n      return !1;\n  }\n}\n\nfunction Cg(a) {\n  if (zg) {\n    var b = yg;\n\n    if (b) {\n      var c = b;\n\n      if (!Bg(a, b)) {\n        b = De(c);\n\n        if (!b || !Bg(a, b)) {\n          a.effectTag |= 2;\n          zg = !1;\n          xg = a;\n          return;\n        }\n\n        Ag(xg, c);\n      }\n\n      xg = a;\n      yg = Ee(b);\n    } else a.effectTag |= 2, zg = !1, xg = a;\n  }\n}\n\nfunction Dg(a) {\n  for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 18 !== a.tag;) {\n    a = a.return;\n  }\n\n  xg = a;\n}\n\nfunction Eg(a) {\n  if (a !== xg) return !1;\n  if (!zg) return Dg(a), zg = !0, !1;\n  var b = a.type;\n  if (5 !== a.tag || \"head\" !== b && \"body\" !== b && !xe(b, a.memoizedProps)) for (b = yg; b;) {\n    Ag(a, b), b = De(b);\n  }\n  Dg(a);\n  yg = xg ? De(a.stateNode) : null;\n  return !0;\n}\n\nfunction Fg() {\n  yg = xg = null;\n  zg = !1;\n}\n\nvar Gg = Tb.ReactCurrentOwner,\n    qg = !1;\n\nfunction S(a, b, c, d) {\n  b.child = null === a ? Ef(b, null, c, d) : Df(b, a.child, c, d);\n}\n\nfunction Hg(a, b, c, d, e) {\n  c = c.render;\n  var f = b.ref;\n  Ig(b, e);\n  d = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, d, e);\n  return b.child;\n}\n\nfunction Kg(a, b, c, d, e, f) {\n  if (null === a) {\n    var g = c.type;\n    if (\"function\" === typeof g && !Ve(g) && void 0 === g.defaultProps && null === c.compare && void 0 === c.defaultProps) return b.tag = 15, b.type = g, Lg(a, b, g, d, e, f);\n    a = Ye(c.type, null, d, null, b.mode, f);\n    a.ref = b.ref;\n    a.return = b;\n    return b.child = a;\n  }\n\n  g = a.child;\n  if (e < f && (e = g.memoizedProps, c = c.compare, c = null !== c ? c : dd, c(e, d) && a.ref === b.ref)) return Jg(a, b, f);\n  b.effectTag |= 1;\n  a = Xe(g, d, f);\n  a.ref = b.ref;\n  a.return = b;\n  return b.child = a;\n}\n\nfunction Lg(a, b, c, d, e, f) {\n  return null !== a && dd(a.memoizedProps, d) && a.ref === b.ref && (qg = !1, e < f) ? Jg(a, b, f) : Mg(a, b, c, d, f);\n}\n\nfunction Ng(a, b) {\n  var c = b.ref;\n  if (null === a && null !== c || null !== a && a.ref !== c) b.effectTag |= 128;\n}\n\nfunction Mg(a, b, c, d, e) {\n  var f = J(c) ? Ie : H.current;\n  f = Je(b, f);\n  Ig(b, e);\n  c = hg(a, b, c, d, f, e);\n  if (null !== a && !qg) return b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), Jg(a, b, e);\n  b.effectTag |= 1;\n  S(a, b, c, e);\n  return b.child;\n}\n\nfunction Og(a, b, c, d, e) {\n  if (J(c)) {\n    var f = !0;\n    Oe(b);\n  } else f = !1;\n\n  Ig(b, e);\n  if (null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), vf(b, c, d, e), xf(b, c, d, e), d = !0;else if (null === a) {\n    var g = b.stateNode,\n        h = b.memoizedProps;\n    g.props = h;\n    var l = g.context,\n        k = c.contextType;\n    \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k));\n    var m = c.getDerivedStateFromProps,\n        p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate;\n    p || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k);\n    Pg = !1;\n    var t = b.memoizedState;\n    l = g.state = t;\n    var A = b.updateQueue;\n    null !== A && (yf(b, A, d, g, e), l = b.memoizedState);\n    h !== d || t !== l || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), l = b.memoizedState), (h = Pg || uf(b, c, h, d, t, l, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillMount && \"function\" !== typeof g.componentWillMount || (\"function\" === typeof g.componentWillMount && g.componentWillMount(), \"function\" === typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), \"function\" === typeof g.componentDidMount && (b.effectTag |= 4)) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), b.memoizedProps = d, b.memoizedState = l), g.props = d, g.state = l, g.context = k, d = h) : (\"function\" === typeof g.componentDidMount && (b.effectTag |= 4), d = !1);\n  } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : L(b.type, h), l = g.context, k = c.contextType, \"object\" === typeof k && null !== k ? k = M(k) : (k = J(c) ? Ie : H.current, k = Je(b, k)), m = c.getDerivedStateFromProps, (p = \"function\" === typeof m || \"function\" === typeof g.getSnapshotBeforeUpdate) || \"function\" !== typeof g.UNSAFE_componentWillReceiveProps && \"function\" !== typeof g.componentWillReceiveProps || (h !== d || l !== k) && wf(b, g, d, k), Pg = !1, l = b.memoizedState, t = g.state = l, A = b.updateQueue, null !== A && (yf(b, A, d, g, e), t = b.memoizedState), h !== d || l !== t || I.current || Pg ? (\"function\" === typeof m && (kf(b, c, m, d), t = b.memoizedState), (m = Pg || uf(b, c, h, d, l, t, k)) ? (p || \"function\" !== typeof g.UNSAFE_componentWillUpdate && \"function\" !== typeof g.componentWillUpdate || (\"function\" === typeof g.componentWillUpdate && g.componentWillUpdate(d, t, k), \"function\" === typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, t, k)), \"function\" === typeof g.componentDidUpdate && (b.effectTag |= 4), \"function\" === typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), b.memoizedProps = d, b.memoizedState = t), g.props = d, g.state = t, g.context = k, d = m) : (\"function\" !== typeof g.componentDidUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 4), \"function\" !== typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && l === a.memoizedState || (b.effectTag |= 256), d = !1);\n  return Qg(a, b, c, d, f, e);\n}\n\nfunction Qg(a, b, c, d, e, f) {\n  Ng(a, b);\n  var g = 0 !== (b.effectTag & 64);\n  if (!d && !g) return e && Pe(b, c, !1), Jg(a, b, f);\n  d = b.stateNode;\n  Gg.current = b;\n  var h = g && \"function\" !== typeof c.getDerivedStateFromError ? null : d.render();\n  b.effectTag |= 1;\n  null !== a && g ? (b.child = Df(b, a.child, null, f), b.child = Df(b, null, h, f)) : S(a, b, h, f);\n  b.memoizedState = d.state;\n  e && Pe(b, c, !0);\n  return b.child;\n}\n\nfunction Rg(a) {\n  var b = a.stateNode;\n  b.pendingContext ? Me(a, b.pendingContext, b.pendingContext !== b.context) : b.context && Me(a, b.context, !1);\n  Jf(a, b.containerInfo);\n}\n\nfunction Sg(a, b, c) {\n  var d = b.mode,\n      e = b.pendingProps,\n      f = b.memoizedState;\n\n  if (0 === (b.effectTag & 64)) {\n    f = null;\n    var g = !1;\n  } else f = {\n    timedOutAt: null !== f ? f.timedOutAt : 0\n  }, g = !0, b.effectTag &= -65;\n\n  if (null === a) {\n    if (g) {\n      var h = e.fallback;\n      a = Ze(null, d, 0, null);\n      0 === (b.mode & 1) && (a.child = null !== b.memoizedState ? b.child.child : b.child);\n      d = Ze(h, d, c, null);\n      a.sibling = d;\n      c = a;\n      c.return = d.return = b;\n    } else c = d = Ef(b, null, e.children, c);\n  } else null !== a.memoizedState ? (d = a.child, h = d.sibling, g ? (c = e.fallback, e = Xe(d, d.pendingProps, 0), 0 === (b.mode & 1) && (g = null !== b.memoizedState ? b.child.child : b.child, g !== d.child && (e.child = g)), d = e.sibling = Xe(h, c, h.expirationTime), c = e, e.childExpirationTime = 0, c.return = d.return = b) : c = d = Df(b, d.child, e.children, c)) : (h = a.child, g ? (g = e.fallback, e = Ze(null, d, 0, null), e.child = h, 0 === (b.mode & 1) && (e.child = null !== b.memoizedState ? b.child.child : b.child), d = e.sibling = Ze(g, d, c, null), d.effectTag |= 2, c = e, e.childExpirationTime = 0, c.return = d.return = b) : d = c = Df(b, h, e.children, c)), b.stateNode = a.stateNode;\n  b.memoizedState = f;\n  b.child = c;\n  return d;\n}\n\nfunction Jg(a, b, c) {\n  null !== a && (b.contextDependencies = a.contextDependencies);\n  if (b.childExpirationTime < c) return null;\n  null !== a && b.child !== a.child ? x(\"153\") : void 0;\n\n  if (null !== b.child) {\n    a = b.child;\n    c = Xe(a, a.pendingProps, a.expirationTime);\n    b.child = c;\n\n    for (c.return = b; null !== a.sibling;) {\n      a = a.sibling, c = c.sibling = Xe(a, a.pendingProps, a.expirationTime), c.return = b;\n    }\n\n    c.sibling = null;\n  }\n\n  return b.child;\n}\n\nfunction Tg(a, b, c) {\n  var d = b.expirationTime;\n  if (null !== a) {\n    if (a.memoizedProps !== b.pendingProps || I.current) qg = !0;else {\n      if (d < c) {\n        qg = !1;\n\n        switch (b.tag) {\n          case 3:\n            Rg(b);\n            Fg();\n            break;\n\n          case 5:\n            Lf(b);\n            break;\n\n          case 1:\n            J(b.type) && Oe(b);\n            break;\n\n          case 4:\n            Jf(b, b.stateNode.containerInfo);\n            break;\n\n          case 10:\n            Ug(b, b.memoizedProps.value);\n            break;\n\n          case 13:\n            if (null !== b.memoizedState) {\n              d = b.child.childExpirationTime;\n              if (0 !== d && d >= c) return Sg(a, b, c);\n              b = Jg(a, b, c);\n              return null !== b ? b.sibling : null;\n            }\n\n        }\n\n        return Jg(a, b, c);\n      }\n    }\n  } else qg = !1;\n  b.expirationTime = 0;\n\n  switch (b.tag) {\n    case 2:\n      d = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      a = b.pendingProps;\n      var e = Je(b, H.current);\n      Ig(b, c);\n      e = hg(null, b, d, a, e, c);\n      b.effectTag |= 1;\n\n      if (\"object\" === typeof e && null !== e && \"function\" === typeof e.render && void 0 === e.$$typeof) {\n        b.tag = 1;\n        lg();\n\n        if (J(d)) {\n          var f = !0;\n          Oe(b);\n        } else f = !1;\n\n        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;\n        var g = d.getDerivedStateFromProps;\n        \"function\" === typeof g && kf(b, d, g, a);\n        e.updater = tf;\n        b.stateNode = e;\n        e._reactInternalFiber = b;\n        xf(b, d, a, c);\n        b = Qg(null, b, d, !0, f, c);\n      } else b.tag = 0, S(null, b, e, c), b = b.child;\n\n      return b;\n\n    case 16:\n      e = b.elementType;\n      null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2);\n      f = b.pendingProps;\n      a = hf(e);\n      b.type = a;\n      e = b.tag = We(a);\n      f = L(a, f);\n      g = void 0;\n\n      switch (e) {\n        case 0:\n          g = Mg(null, b, a, f, c);\n          break;\n\n        case 1:\n          g = Og(null, b, a, f, c);\n          break;\n\n        case 11:\n          g = Hg(null, b, a, f, c);\n          break;\n\n        case 14:\n          g = Kg(null, b, a, L(a.type, f), d, c);\n          break;\n\n        default:\n          x(\"306\", a, \"\");\n      }\n\n      return g;\n\n    case 0:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Mg(a, b, d, e, c);\n\n    case 1:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Og(a, b, d, e, c);\n\n    case 3:\n      Rg(b);\n      d = b.updateQueue;\n      null === d ? x(\"282\") : void 0;\n      e = b.memoizedState;\n      e = null !== e ? e.element : null;\n      yf(b, d, b.pendingProps, null, c);\n      d = b.memoizedState.element;\n      if (d === e) Fg(), b = Jg(a, b, c);else {\n        e = b.stateNode;\n        if (e = (null === a || null === a.child) && e.hydrate) yg = Ee(b.stateNode.containerInfo), xg = b, e = zg = !0;\n        e ? (b.effectTag |= 2, b.child = Ef(b, null, d, c)) : (S(a, b, d, c), Fg());\n        b = b.child;\n      }\n      return b;\n\n    case 5:\n      return Lf(b), null === a && Cg(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, g = e.children, xe(d, e) ? g = null : null !== f && xe(d, f) && (b.effectTag |= 16), Ng(a, b), 1 !== c && b.mode & 1 && e.hidden ? (b.expirationTime = b.childExpirationTime = 1, b = null) : (S(a, b, g, c), b = b.child), b;\n\n    case 6:\n      return null === a && Cg(b), null;\n\n    case 13:\n      return Sg(a, b, c);\n\n    case 4:\n      return Jf(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = Df(b, null, d, c) : S(a, b, d, c), b.child;\n\n    case 11:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), Hg(a, b, d, e, c);\n\n    case 7:\n      return S(a, b, b.pendingProps, c), b.child;\n\n    case 8:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 12:\n      return S(a, b, b.pendingProps.children, c), b.child;\n\n    case 10:\n      a: {\n        d = b.type._context;\n        e = b.pendingProps;\n        g = b.memoizedProps;\n        f = e.value;\n        Ug(b, f);\n\n        if (null !== g) {\n          var h = g.value;\n          f = bd(h, f) ? 0 : (\"function\" === typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823) | 0;\n\n          if (0 === f) {\n            if (g.children === e.children && !I.current) {\n              b = Jg(a, b, c);\n              break a;\n            }\n          } else for (h = b.child, null !== h && (h.return = b); null !== h;) {\n            var l = h.contextDependencies;\n\n            if (null !== l) {\n              g = h.child;\n\n              for (var k = l.first; null !== k;) {\n                if (k.context === d && 0 !== (k.observedBits & f)) {\n                  1 === h.tag && (k = nf(c), k.tag = sf, pf(h, k));\n                  h.expirationTime < c && (h.expirationTime = c);\n                  k = h.alternate;\n                  null !== k && k.expirationTime < c && (k.expirationTime = c);\n                  k = c;\n\n                  for (var m = h.return; null !== m;) {\n                    var p = m.alternate;\n                    if (m.childExpirationTime < k) m.childExpirationTime = k, null !== p && p.childExpirationTime < k && (p.childExpirationTime = k);else if (null !== p && p.childExpirationTime < k) p.childExpirationTime = k;else break;\n                    m = m.return;\n                  }\n\n                  l.expirationTime < c && (l.expirationTime = c);\n                  break;\n                }\n\n                k = k.next;\n              }\n            } else g = 10 === h.tag ? h.type === b.type ? null : h.child : h.child;\n\n            if (null !== g) g.return = h;else for (g = h; null !== g;) {\n              if (g === b) {\n                g = null;\n                break;\n              }\n\n              h = g.sibling;\n\n              if (null !== h) {\n                h.return = g.return;\n                g = h;\n                break;\n              }\n\n              g = g.return;\n            }\n            h = g;\n          }\n        }\n\n        S(a, b, e.children, c);\n        b = b.child;\n      }\n\n      return b;\n\n    case 9:\n      return e = b.type, f = b.pendingProps, d = f.children, Ig(b, c), e = M(e, f.unstable_observedBits), d = d(e), b.effectTag |= 1, S(a, b, d, c), b.child;\n\n    case 14:\n      return e = b.type, f = L(e, b.pendingProps), f = L(e.type, f), Kg(a, b, e, f, d, c);\n\n    case 15:\n      return Lg(a, b, b.type, b.pendingProps, d, c);\n\n    case 17:\n      return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : L(d, e), null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), b.tag = 1, J(d) ? (a = !0, Oe(b)) : a = !1, Ig(b, c), vf(b, d, e, c), xf(b, d, e, c), Qg(null, b, d, !0, a, c);\n  }\n\n  x(\"156\");\n}\n\nvar Vg = {\n  current: null\n},\n    Wg = null,\n    Xg = null,\n    Yg = null;\n\nfunction Ug(a, b) {\n  var c = a.type._context;\n  G(Vg, c._currentValue, a);\n  c._currentValue = b;\n}\n\nfunction Zg(a) {\n  var b = Vg.current;\n  F(Vg, a);\n  a.type._context._currentValue = b;\n}\n\nfunction Ig(a, b) {\n  Wg = a;\n  Yg = Xg = null;\n  var c = a.contextDependencies;\n  null !== c && c.expirationTime >= b && (qg = !0);\n  a.contextDependencies = null;\n}\n\nfunction M(a, b) {\n  if (Yg !== a && !1 !== b && 0 !== b) {\n    if (\"number\" !== typeof b || 1073741823 === b) Yg = a, b = 1073741823;\n    b = {\n      context: a,\n      observedBits: b,\n      next: null\n    };\n    null === Xg ? (null === Wg ? x(\"308\") : void 0, Xg = b, Wg.contextDependencies = {\n      first: b,\n      expirationTime: 0\n    }) : Xg = Xg.next = b;\n  }\n\n  return a._currentValue;\n}\n\nvar $g = 0,\n    rf = 1,\n    sf = 2,\n    ah = 3,\n    Pg = !1;\n\nfunction bh(a) {\n  return {\n    baseState: a,\n    firstUpdate: null,\n    lastUpdate: null,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction ch(a) {\n  return {\n    baseState: a.baseState,\n    firstUpdate: a.firstUpdate,\n    lastUpdate: a.lastUpdate,\n    firstCapturedUpdate: null,\n    lastCapturedUpdate: null,\n    firstEffect: null,\n    lastEffect: null,\n    firstCapturedEffect: null,\n    lastCapturedEffect: null\n  };\n}\n\nfunction nf(a) {\n  return {\n    expirationTime: a,\n    tag: $g,\n    payload: null,\n    callback: null,\n    next: null,\n    nextEffect: null\n  };\n}\n\nfunction dh(a, b) {\n  null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, a.lastUpdate = b);\n}\n\nfunction pf(a, b) {\n  var c = a.alternate;\n\n  if (null === c) {\n    var d = a.updateQueue;\n    var e = null;\n    null === d && (d = a.updateQueue = bh(a.memoizedState));\n  } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = bh(a.memoizedState), e = c.updateQueue = bh(c.memoizedState)) : d = a.updateQueue = ch(e) : null === e && (e = c.updateQueue = ch(d));\n\n  null === e || d === e ? dh(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (dh(d, b), dh(e, b)) : (dh(d, b), e.lastUpdate = b);\n}\n\nfunction eh(a, b) {\n  var c = a.updateQueue;\n  c = null === c ? a.updateQueue = bh(a.memoizedState) : fh(a, c);\n  null === c.lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, c.lastCapturedUpdate = b);\n}\n\nfunction fh(a, b) {\n  var c = a.alternate;\n  null !== c && b === c.updateQueue && (b = a.updateQueue = ch(b));\n  return b;\n}\n\nfunction gh(a, b, c, d, e, f) {\n  switch (c.tag) {\n    case rf:\n      return a = c.payload, \"function\" === typeof a ? a.call(f, d, e) : a;\n\n    case ah:\n      a.effectTag = a.effectTag & -2049 | 64;\n\n    case $g:\n      a = c.payload;\n      e = \"function\" === typeof a ? a.call(f, d, e) : a;\n      if (null === e || void 0 === e) break;\n      return n({}, d, e);\n\n    case sf:\n      Pg = !0;\n  }\n\n  return d;\n}\n\nfunction yf(a, b, c, d, e) {\n  Pg = !1;\n  b = fh(a, b);\n\n  for (var f = b.baseState, g = null, h = 0, l = b.firstUpdate, k = f; null !== l;) {\n    var m = l.expirationTime;\n    m < e ? (null === g && (g = l, f = k), h < m && (h = m)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastEffect ? b.firstEffect = b.lastEffect = l : (b.lastEffect.nextEffect = l, b.lastEffect = l)));\n    l = l.next;\n  }\n\n  m = null;\n\n  for (l = b.firstCapturedUpdate; null !== l;) {\n    var p = l.expirationTime;\n    p < e ? (null === m && (m = l, null === g && (f = k)), h < p && (h = p)) : (k = gh(a, b, l, k, c, d), null !== l.callback && (a.effectTag |= 32, l.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = l : (b.lastCapturedEffect.nextEffect = l, b.lastCapturedEffect = l)));\n    l = l.next;\n  }\n\n  null === g && (b.lastUpdate = null);\n  null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32;\n  null === g && null === m && (f = k);\n  b.baseState = f;\n  b.firstUpdate = g;\n  b.firstCapturedUpdate = m;\n  a.expirationTime = h;\n  a.memoizedState = k;\n}\n\nfunction hh(a, b, c) {\n  null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null);\n  ih(b.firstEffect, c);\n  b.firstEffect = b.lastEffect = null;\n  ih(b.firstCapturedEffect, c);\n  b.firstCapturedEffect = b.lastCapturedEffect = null;\n}\n\nfunction ih(a, b) {\n  for (; null !== a;) {\n    var c = a.callback;\n\n    if (null !== c) {\n      a.callback = null;\n      var d = b;\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c.call(d);\n    }\n\n    a = a.nextEffect;\n  }\n}\n\nfunction jh(a, b) {\n  return {\n    value: a,\n    source: b,\n    stack: jc(b)\n  };\n}\n\nfunction kh(a) {\n  a.effectTag |= 4;\n}\n\nvar lh = void 0,\n    mh = void 0,\n    nh = void 0,\n    oh = void 0;\n\nlh = function lh(a, b) {\n  for (var c = b.child; null !== c;) {\n    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode);else if (4 !== c.tag && null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n    if (c === b) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === b) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n};\n\nmh = function mh() {};\n\nnh = function nh(a, b, c, d, e) {\n  var f = a.memoizedProps;\n\n  if (f !== d) {\n    var g = b.stateNode;\n    If(N.current);\n    a = null;\n\n    switch (c) {\n      case \"input\":\n        f = vc(g, f);\n        d = vc(g, d);\n        a = [];\n        break;\n\n      case \"option\":\n        f = $d(g, f);\n        d = $d(g, d);\n        a = [];\n        break;\n\n      case \"select\":\n        f = n({}, f, {\n          value: void 0\n        });\n        d = n({}, d, {\n          value: void 0\n        });\n        a = [];\n        break;\n\n      case \"textarea\":\n        f = be(g, f);\n        d = be(g, d);\n        a = [];\n        break;\n\n      default:\n        \"function\" !== typeof f.onClick && \"function\" === typeof d.onClick && (g.onclick = te);\n    }\n\n    qe(c, d);\n    g = c = void 0;\n    var h = null;\n\n    for (c in f) {\n      if (!d.hasOwnProperty(c) && f.hasOwnProperty(c) && null != f[c]) if (\"style\" === c) {\n        var l = f[c];\n\n        for (g in l) {\n          l.hasOwnProperty(g) && (h || (h = {}), h[g] = \"\");\n        }\n      } else \"dangerouslySetInnerHTML\" !== c && \"children\" !== c && \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && \"autoFocus\" !== c && (ra.hasOwnProperty(c) ? a || (a = []) : (a = a || []).push(c, null));\n    }\n\n    for (c in d) {\n      var k = d[c];\n      l = null != f ? f[c] : void 0;\n      if (d.hasOwnProperty(c) && k !== l && (null != k || null != l)) if (\"style\" === c) {\n        if (l) {\n          for (g in l) {\n            !l.hasOwnProperty(g) || k && k.hasOwnProperty(g) || (h || (h = {}), h[g] = \"\");\n          }\n\n          for (g in k) {\n            k.hasOwnProperty(g) && l[g] !== k[g] && (h || (h = {}), h[g] = k[g]);\n          }\n        } else h || (a || (a = []), a.push(c, h)), h = k;\n      } else \"dangerouslySetInnerHTML\" === c ? (k = k ? k.__html : void 0, l = l ? l.__html : void 0, null != k && l !== k && (a = a || []).push(c, \"\" + k)) : \"children\" === c ? l === k || \"string\" !== typeof k && \"number\" !== typeof k || (a = a || []).push(c, \"\" + k) : \"suppressContentEditableWarning\" !== c && \"suppressHydrationWarning\" !== c && (ra.hasOwnProperty(c) ? (null != k && se(e, c), a || l === k || (a = [])) : (a = a || []).push(c, k));\n    }\n\n    h && (a = a || []).push(\"style\", h);\n    e = a;\n    (b.updateQueue = e) && kh(b);\n  }\n};\n\noh = function oh(a, b, c, d) {\n  c !== d && kh(b);\n};\n\nvar ph = \"function\" === typeof WeakSet ? WeakSet : Set;\n\nfunction qh(a, b) {\n  var c = b.source,\n      d = b.stack;\n  null === d && null !== c && (d = jc(c));\n  null !== c && ic(c.type);\n  b = b.value;\n  null !== a && 1 === a.tag && ic(a.type);\n\n  try {\n    console.error(b);\n  } catch (e) {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction rh(a) {\n  var b = a.ref;\n  if (null !== b) if (\"function\" === typeof b) try {\n    b(null);\n  } catch (c) {\n    sh(a, c);\n  } else b.current = null;\n}\n\nfunction th(a, b, c) {\n  c = c.updateQueue;\n  c = null !== c ? c.lastEffect : null;\n\n  if (null !== c) {\n    var d = c = c.next;\n\n    do {\n      if ((d.tag & a) !== Nf) {\n        var e = d.destroy;\n        d.destroy = void 0;\n        void 0 !== e && e();\n      }\n\n      (d.tag & b) !== Nf && (e = d.create, d.destroy = e());\n      d = d.next;\n    } while (d !== c);\n  }\n}\n\nfunction uh(a, b) {\n  for (var c = a;;) {\n    if (5 === c.tag) {\n      var d = c.stateNode;\n      if (b) d.style.display = \"none\";else {\n        d = c.stateNode;\n        var e = c.memoizedProps.style;\n        e = void 0 !== e && null !== e && e.hasOwnProperty(\"display\") ? e.display : null;\n        d.style.display = ne(\"display\", e);\n      }\n    } else if (6 === c.tag) c.stateNode.nodeValue = b ? \"\" : c.memoizedProps;else if (13 === c.tag && null !== c.memoizedState) {\n      d = c.child.sibling;\n      d.return = c;\n      c = d;\n      continue;\n    } else if (null !== c.child) {\n      c.child.return = c;\n      c = c.child;\n      continue;\n    }\n\n    if (c === a) break;\n\n    for (; null === c.sibling;) {\n      if (null === c.return || c.return === a) return;\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n    c = c.sibling;\n  }\n}\n\nfunction vh(a) {\n  \"function\" === typeof Re && Re(a);\n\n  switch (a.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      var b = a.updateQueue;\n\n      if (null !== b && (b = b.lastEffect, null !== b)) {\n        var c = b = b.next;\n\n        do {\n          var d = c.destroy;\n\n          if (void 0 !== d) {\n            var e = a;\n\n            try {\n              d();\n            } catch (f) {\n              sh(e, f);\n            }\n          }\n\n          c = c.next;\n        } while (c !== b);\n      }\n\n      break;\n\n    case 1:\n      rh(a);\n      b = a.stateNode;\n      if (\"function\" === typeof b.componentWillUnmount) try {\n        b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();\n      } catch (f) {\n        sh(a, f);\n      }\n      break;\n\n    case 5:\n      rh(a);\n      break;\n\n    case 4:\n      wh(a);\n  }\n}\n\nfunction xh(a) {\n  return 5 === a.tag || 3 === a.tag || 4 === a.tag;\n}\n\nfunction yh(a) {\n  a: {\n    for (var b = a.return; null !== b;) {\n      if (xh(b)) {\n        var c = b;\n        break a;\n      }\n\n      b = b.return;\n    }\n\n    x(\"160\");\n    c = void 0;\n  }\n\n  var d = b = void 0;\n\n  switch (c.tag) {\n    case 5:\n      b = c.stateNode;\n      d = !1;\n      break;\n\n    case 3:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    case 4:\n      b = c.stateNode.containerInfo;\n      d = !0;\n      break;\n\n    default:\n      x(\"161\");\n  }\n\n  c.effectTag & 16 && (ke(b, \"\"), c.effectTag &= -17);\n\n  a: b: for (c = a;;) {\n    for (; null === c.sibling;) {\n      if (null === c.return || xh(c.return)) {\n        c = null;\n        break a;\n      }\n\n      c = c.return;\n    }\n\n    c.sibling.return = c.return;\n\n    for (c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag;) {\n      if (c.effectTag & 2) continue b;\n      if (null === c.child || 4 === c.tag) continue b;else c.child.return = c, c = c.child;\n    }\n\n    if (!(c.effectTag & 2)) {\n      c = c.stateNode;\n      break a;\n    }\n  }\n\n  for (var e = a;;) {\n    if (5 === e.tag || 6 === e.tag) {\n      if (c) {\n        if (d) {\n          var f = b,\n              g = e.stateNode,\n              h = c;\n          8 === f.nodeType ? f.parentNode.insertBefore(g, h) : f.insertBefore(g, h);\n        } else b.insertBefore(e.stateNode, c);\n      } else d ? (g = b, h = e.stateNode, 8 === g.nodeType ? (f = g.parentNode, f.insertBefore(h, g)) : (f = g, f.appendChild(h)), g = g._reactRootContainer, null !== g && void 0 !== g || null !== f.onclick || (f.onclick = te)) : b.appendChild(e.stateNode);\n    } else if (4 !== e.tag && null !== e.child) {\n      e.child.return = e;\n      e = e.child;\n      continue;\n    }\n    if (e === a) break;\n\n    for (; null === e.sibling;) {\n      if (null === e.return || e.return === a) return;\n      e = e.return;\n    }\n\n    e.sibling.return = e.return;\n    e = e.sibling;\n  }\n}\n\nfunction wh(a) {\n  for (var b = a, c = !1, d = void 0, e = void 0;;) {\n    if (!c) {\n      c = b.return;\n\n      a: for (;;) {\n        null === c ? x(\"160\") : void 0;\n\n        switch (c.tag) {\n          case 5:\n            d = c.stateNode;\n            e = !1;\n            break a;\n\n          case 3:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n\n          case 4:\n            d = c.stateNode.containerInfo;\n            e = !0;\n            break a;\n        }\n\n        c = c.return;\n      }\n\n      c = !0;\n    }\n\n    if (5 === b.tag || 6 === b.tag) {\n      a: for (var f = b, g = f;;) {\n        if (vh(g), null !== g.child && 4 !== g.tag) g.child.return = g, g = g.child;else {\n          if (g === f) break;\n\n          for (; null === g.sibling;) {\n            if (null === g.return || g.return === f) break a;\n            g = g.return;\n          }\n\n          g.sibling.return = g.return;\n          g = g.sibling;\n        }\n      }\n\n      e ? (f = d, g = b.stateNode, 8 === f.nodeType ? f.parentNode.removeChild(g) : f.removeChild(g)) : d.removeChild(b.stateNode);\n    } else if (4 === b.tag) {\n      if (null !== b.child) {\n        d = b.stateNode.containerInfo;\n        e = !0;\n        b.child.return = b;\n        b = b.child;\n        continue;\n      }\n    } else if (vh(b), null !== b.child) {\n      b.child.return = b;\n      b = b.child;\n      continue;\n    }\n\n    if (b === a) break;\n\n    for (; null === b.sibling;) {\n      if (null === b.return || b.return === a) return;\n      b = b.return;\n      4 === b.tag && (c = !1);\n    }\n\n    b.sibling.return = b.return;\n    b = b.sibling;\n  }\n}\n\nfunction zh(a, b) {\n  switch (b.tag) {\n    case 0:\n    case 11:\n    case 14:\n    case 15:\n      th(Pf, Qf, b);\n      break;\n\n    case 1:\n      break;\n\n    case 5:\n      var c = b.stateNode;\n\n      if (null != c) {\n        var d = b.memoizedProps;\n        a = null !== a ? a.memoizedProps : d;\n        var e = b.type,\n            f = b.updateQueue;\n        b.updateQueue = null;\n        null !== f && Ce(c, f, e, a, d, b);\n      }\n\n      break;\n\n    case 6:\n      null === b.stateNode ? x(\"162\") : void 0;\n      b.stateNode.nodeValue = b.memoizedProps;\n      break;\n\n    case 3:\n      break;\n\n    case 12:\n      break;\n\n    case 13:\n      c = b.memoizedState;\n      d = void 0;\n      a = b;\n      null === c ? d = !1 : (d = !0, a = b.child, 0 === c.timedOutAt && (c.timedOutAt = lf()));\n      null !== a && uh(a, d);\n      c = b.updateQueue;\n\n      if (null !== c) {\n        b.updateQueue = null;\n        var g = b.stateNode;\n        null === g && (g = b.stateNode = new ph());\n        c.forEach(function (a) {\n          var c = Ah.bind(null, b, a);\n          g.has(a) || (g.add(a), a.then(c, c));\n        });\n      }\n\n      break;\n\n    case 17:\n      break;\n\n    default:\n      x(\"163\");\n  }\n}\n\nvar Bh = \"function\" === typeof WeakMap ? WeakMap : Map;\n\nfunction Ch(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  c.payload = {\n    element: null\n  };\n  var d = b.value;\n\n  c.callback = function () {\n    Dh(d);\n    qh(a, b);\n  };\n\n  return c;\n}\n\nfunction Eh(a, b, c) {\n  c = nf(c);\n  c.tag = ah;\n  var d = a.type.getDerivedStateFromError;\n\n  if (\"function\" === typeof d) {\n    var e = b.value;\n\n    c.payload = function () {\n      return d(e);\n    };\n  }\n\n  var f = a.stateNode;\n  null !== f && \"function\" === typeof f.componentDidCatch && (c.callback = function () {\n    \"function\" !== typeof d && (null === Fh ? Fh = new Set([this]) : Fh.add(this));\n    var c = b.value,\n        e = b.stack;\n    qh(a, b);\n    this.componentDidCatch(c, {\n      componentStack: null !== e ? e : \"\"\n    });\n  });\n  return c;\n}\n\nfunction Gh(a) {\n  switch (a.tag) {\n    case 1:\n      J(a.type) && Ke(a);\n      var b = a.effectTag;\n      return b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 3:\n      return Kf(a), Le(a), b = a.effectTag, 0 !== (b & 64) ? x(\"285\") : void 0, a.effectTag = b & -2049 | 64, a;\n\n    case 5:\n      return Mf(a), null;\n\n    case 13:\n      return b = a.effectTag, b & 2048 ? (a.effectTag = b & -2049 | 64, a) : null;\n\n    case 18:\n      return null;\n\n    case 4:\n      return Kf(a), null;\n\n    case 10:\n      return Zg(a), null;\n\n    default:\n      return null;\n  }\n}\n\nvar Hh = Tb.ReactCurrentDispatcher,\n    Ih = Tb.ReactCurrentOwner,\n    Jh = 1073741822,\n    Kh = !1,\n    T = null,\n    Lh = null,\n    U = 0,\n    Mh = -1,\n    Nh = !1,\n    V = null,\n    Oh = !1,\n    Ph = null,\n    Qh = null,\n    Rh = null,\n    Fh = null;\n\nfunction Sh() {\n  if (null !== T) for (var a = T.return; null !== a;) {\n    var b = a;\n\n    switch (b.tag) {\n      case 1:\n        var c = b.type.childContextTypes;\n        null !== c && void 0 !== c && Ke(b);\n        break;\n\n      case 3:\n        Kf(b);\n        Le(b);\n        break;\n\n      case 5:\n        Mf(b);\n        break;\n\n      case 4:\n        Kf(b);\n        break;\n\n      case 10:\n        Zg(b);\n    }\n\n    a = a.return;\n  }\n  Lh = null;\n  U = 0;\n  Mh = -1;\n  Nh = !1;\n  T = null;\n}\n\nfunction Th() {\n  for (; null !== V;) {\n    var a = V.effectTag;\n    a & 16 && ke(V.stateNode, \"\");\n\n    if (a & 128) {\n      var b = V.alternate;\n      null !== b && (b = b.ref, null !== b && (\"function\" === typeof b ? b(null) : b.current = null));\n    }\n\n    switch (a & 14) {\n      case 2:\n        yh(V);\n        V.effectTag &= -3;\n        break;\n\n      case 6:\n        yh(V);\n        V.effectTag &= -3;\n        zh(V.alternate, V);\n        break;\n\n      case 4:\n        zh(V.alternate, V);\n        break;\n\n      case 8:\n        a = V, wh(a), a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null, a = a.alternate, null !== a && (a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null);\n    }\n\n    V = V.nextEffect;\n  }\n}\n\nfunction Uh() {\n  for (; null !== V;) {\n    if (V.effectTag & 256) a: {\n      var a = V.alternate,\n          b = V;\n\n      switch (b.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Of, Nf, b);\n          break a;\n\n        case 1:\n          if (b.effectTag & 256 && null !== a) {\n            var c = a.memoizedProps,\n                d = a.memoizedState;\n            a = b.stateNode;\n            b = a.getSnapshotBeforeUpdate(b.elementType === b.type ? c : L(b.type, c), d);\n            a.__reactInternalSnapshotBeforeUpdate = b;\n          }\n\n          break a;\n\n        case 3:\n        case 5:\n        case 6:\n        case 4:\n        case 17:\n          break a;\n\n        default:\n          x(\"163\");\n      }\n    }\n    V = V.nextEffect;\n  }\n}\n\nfunction Vh(a, b) {\n  for (; null !== V;) {\n    var c = V.effectTag;\n\n    if (c & 36) {\n      var d = V.alternate,\n          e = V,\n          f = b;\n\n      switch (e.tag) {\n        case 0:\n        case 11:\n        case 15:\n          th(Rf, Sf, e);\n          break;\n\n        case 1:\n          var g = e.stateNode;\n          if (e.effectTag & 4) if (null === d) g.componentDidMount();else {\n            var h = e.elementType === e.type ? d.memoizedProps : L(e.type, d.memoizedProps);\n            g.componentDidUpdate(h, d.memoizedState, g.__reactInternalSnapshotBeforeUpdate);\n          }\n          d = e.updateQueue;\n          null !== d && hh(e, d, g, f);\n          break;\n\n        case 3:\n          d = e.updateQueue;\n\n          if (null !== d) {\n            g = null;\n            if (null !== e.child) switch (e.child.tag) {\n              case 5:\n                g = e.child.stateNode;\n                break;\n\n              case 1:\n                g = e.child.stateNode;\n            }\n            hh(e, d, g, f);\n          }\n\n          break;\n\n        case 5:\n          f = e.stateNode;\n          null === d && e.effectTag & 4 && we(e.type, e.memoizedProps) && f.focus();\n          break;\n\n        case 6:\n          break;\n\n        case 4:\n          break;\n\n        case 12:\n          break;\n\n        case 13:\n          break;\n\n        case 17:\n          break;\n\n        default:\n          x(\"163\");\n      }\n    }\n\n    c & 128 && (e = V.ref, null !== e && (f = V.stateNode, \"function\" === typeof e ? e(f) : e.current = f));\n    c & 512 && (Ph = a);\n    V = V.nextEffect;\n  }\n}\n\nfunction Wh(a, b) {\n  Rh = Qh = Ph = null;\n  var c = W;\n  W = !0;\n\n  do {\n    if (b.effectTag & 512) {\n      var d = !1,\n          e = void 0;\n\n      try {\n        var f = b;\n        th(Uf, Nf, f);\n        th(Nf, Tf, f);\n      } catch (g) {\n        d = !0, e = g;\n      }\n\n      d && sh(b, e);\n    }\n\n    b = b.nextEffect;\n  } while (null !== b);\n\n  W = c;\n  c = a.expirationTime;\n  0 !== c && Xh(a, c);\n  X || W || Yh(1073741823, !1);\n}\n\nfunction of() {\n  null !== Qh && Be(Qh);\n  null !== Rh && Rh();\n}\n\nfunction Zh(a, b) {\n  Oh = Kh = !0;\n  a.current === b ? x(\"177\") : void 0;\n  var c = a.pendingCommitExpirationTime;\n  0 === c ? x(\"261\") : void 0;\n  a.pendingCommitExpirationTime = 0;\n  var d = b.expirationTime,\n      e = b.childExpirationTime;\n  ef(a, e > d ? e : d);\n  Ih.current = null;\n  d = void 0;\n  1 < b.effectTag ? null !== b.lastEffect ? (b.lastEffect.nextEffect = b, d = b.firstEffect) : d = b : d = b.firstEffect;\n  ue = Bd;\n  ve = Pd();\n  Bd = !1;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    var f = void 0;\n\n    try {\n      Uh();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Th();\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  Qd(ve);\n  ve = null;\n  Bd = !!ue;\n  ue = null;\n  a.current = b;\n\n  for (V = d; null !== V;) {\n    e = !1;\n    f = void 0;\n\n    try {\n      Vh(a, c);\n    } catch (h) {\n      e = !0, f = h;\n    }\n\n    e && (null === V ? x(\"178\") : void 0, sh(V, f), null !== V && (V = V.nextEffect));\n  }\n\n  if (null !== d && null !== Ph) {\n    var g = Wh.bind(null, a, d);\n    Qh = r.unstable_runWithPriority(r.unstable_NormalPriority, function () {\n      return Ae(g);\n    });\n    Rh = g;\n  }\n\n  Kh = Oh = !1;\n  \"function\" === typeof Qe && Qe(b.stateNode);\n  c = b.expirationTime;\n  b = b.childExpirationTime;\n  b = b > c ? b : c;\n  0 === b && (Fh = null);\n  $h(a, b);\n}\n\nfunction ai(a) {\n  for (;;) {\n    var b = a.alternate,\n        c = a.return,\n        d = a.sibling;\n\n    if (0 === (a.effectTag & 1024)) {\n      T = a;\n\n      a: {\n        var e = b;\n        b = a;\n        var f = U;\n        var g = b.pendingProps;\n\n        switch (b.tag) {\n          case 2:\n            break;\n\n          case 16:\n            break;\n\n          case 15:\n          case 0:\n            break;\n\n          case 1:\n            J(b.type) && Ke(b);\n            break;\n\n          case 3:\n            Kf(b);\n            Le(b);\n            g = b.stateNode;\n            g.pendingContext && (g.context = g.pendingContext, g.pendingContext = null);\n            if (null === e || null === e.child) Eg(b), b.effectTag &= -3;\n            mh(b);\n            break;\n\n          case 5:\n            Mf(b);\n            var h = If(Hf.current);\n            f = b.type;\n            if (null !== e && null != b.stateNode) nh(e, b, f, g, h), e.ref !== b.ref && (b.effectTag |= 128);else if (g) {\n              var l = If(N.current);\n\n              if (Eg(b)) {\n                g = b;\n                e = g.stateNode;\n                var k = g.type,\n                    m = g.memoizedProps,\n                    p = h;\n                e[Fa] = g;\n                e[Ga] = m;\n                f = void 0;\n                h = k;\n\n                switch (h) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", e);\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (k = 0; k < ab.length; k++) {\n                      E(ab[k], e);\n                    }\n\n                    break;\n\n                  case \"source\":\n                    E(\"error\", e);\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", e);\n                    E(\"load\", e);\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", e);\n                    E(\"submit\", e);\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", e);\n                    break;\n\n                  case \"input\":\n                    wc(e, m);\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"select\":\n                    e._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    E(\"invalid\", e);\n                    se(p, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(e, m), E(\"invalid\", e), se(p, \"onChange\");\n                }\n\n                qe(h, m);\n                k = null;\n\n                for (f in m) {\n                  m.hasOwnProperty(f) && (l = m[f], \"children\" === f ? \"string\" === typeof l ? e.textContent !== l && (k = [\"children\", l]) : \"number\" === typeof l && e.textContent !== \"\" + l && (k = [\"children\", \"\" + l]) : ra.hasOwnProperty(f) && null != l && se(p, f));\n                }\n\n                switch (h) {\n                  case \"input\":\n                    Rb(e);\n                    Ac(e, m, !0);\n                    break;\n\n                  case \"textarea\":\n                    Rb(e);\n                    ee(e, m);\n                    break;\n\n                  case \"select\":\n                  case \"option\":\n                    break;\n\n                  default:\n                    \"function\" === typeof m.onClick && (e.onclick = te);\n                }\n\n                f = k;\n                g.updateQueue = f;\n                g = null !== f ? !0 : !1;\n                g && kh(b);\n              } else {\n                m = b;\n                p = f;\n                e = g;\n                k = 9 === h.nodeType ? h : h.ownerDocument;\n                l === fe.html && (l = ge(p));\n                l === fe.html ? \"script\" === p ? (e = k.createElement(\"div\"), e.innerHTML = \"<script>\\x3c/script>\", k = e.removeChild(e.firstChild)) : \"string\" === typeof e.is ? k = k.createElement(p, {\n                  is: e.is\n                }) : (k = k.createElement(p), \"select\" === p && (p = k, e.multiple ? p.multiple = !0 : e.size && (p.size = e.size))) : k = k.createElementNS(l, p);\n                e = k;\n                e[Fa] = m;\n                e[Ga] = g;\n                lh(e, b, !1, !1);\n                p = e;\n                k = f;\n                m = g;\n                var t = h,\n                    A = re(k, m);\n\n                switch (k) {\n                  case \"iframe\":\n                  case \"object\":\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"video\":\n                  case \"audio\":\n                    for (h = 0; h < ab.length; h++) {\n                      E(ab[h], p);\n                    }\n\n                    h = m;\n                    break;\n\n                  case \"source\":\n                    E(\"error\", p);\n                    h = m;\n                    break;\n\n                  case \"img\":\n                  case \"image\":\n                  case \"link\":\n                    E(\"error\", p);\n                    E(\"load\", p);\n                    h = m;\n                    break;\n\n                  case \"form\":\n                    E(\"reset\", p);\n                    E(\"submit\", p);\n                    h = m;\n                    break;\n\n                  case \"details\":\n                    E(\"toggle\", p);\n                    h = m;\n                    break;\n\n                  case \"input\":\n                    wc(p, m);\n                    h = vc(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"option\":\n                    h = $d(p, m);\n                    break;\n\n                  case \"select\":\n                    p._wrapperState = {\n                      wasMultiple: !!m.multiple\n                    };\n                    h = n({}, m, {\n                      value: void 0\n                    });\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  case \"textarea\":\n                    ce(p, m);\n                    h = be(p, m);\n                    E(\"invalid\", p);\n                    se(t, \"onChange\");\n                    break;\n\n                  default:\n                    h = m;\n                }\n\n                qe(k, h);\n                l = void 0;\n                var v = k,\n                    R = p,\n                    u = h;\n\n                for (l in u) {\n                  if (u.hasOwnProperty(l)) {\n                    var q = u[l];\n                    \"style\" === l ? oe(R, q) : \"dangerouslySetInnerHTML\" === l ? (q = q ? q.__html : void 0, null != q && je(R, q)) : \"children\" === l ? \"string\" === typeof q ? (\"textarea\" !== v || \"\" !== q) && ke(R, q) : \"number\" === typeof q && ke(R, \"\" + q) : \"suppressContentEditableWarning\" !== l && \"suppressHydrationWarning\" !== l && \"autoFocus\" !== l && (ra.hasOwnProperty(l) ? null != q && se(t, l) : null != q && tc(R, l, q, A));\n                  }\n                }\n\n                switch (k) {\n                  case \"input\":\n                    Rb(p);\n                    Ac(p, m, !1);\n                    break;\n\n                  case \"textarea\":\n                    Rb(p);\n                    ee(p, m);\n                    break;\n\n                  case \"option\":\n                    null != m.value && p.setAttribute(\"value\", \"\" + uc(m.value));\n                    break;\n\n                  case \"select\":\n                    h = p;\n                    h.multiple = !!m.multiple;\n                    p = m.value;\n                    null != p ? ae(h, !!m.multiple, p, !1) : null != m.defaultValue && ae(h, !!m.multiple, m.defaultValue, !0);\n                    break;\n\n                  default:\n                    \"function\" === typeof h.onClick && (p.onclick = te);\n                }\n\n                (g = we(f, g)) && kh(b);\n                b.stateNode = e;\n              }\n\n              null !== b.ref && (b.effectTag |= 128);\n            } else null === b.stateNode ? x(\"166\") : void 0;\n            break;\n\n          case 6:\n            e && null != b.stateNode ? oh(e, b, e.memoizedProps, g) : (\"string\" !== typeof g && (null === b.stateNode ? x(\"166\") : void 0), e = If(Hf.current), If(N.current), Eg(b) ? (g = b, f = g.stateNode, e = g.memoizedProps, f[Fa] = g, (g = f.nodeValue !== e) && kh(b)) : (f = b, g = (9 === e.nodeType ? e : e.ownerDocument).createTextNode(g), g[Fa] = b, f.stateNode = g));\n            break;\n\n          case 11:\n            break;\n\n          case 13:\n            g = b.memoizedState;\n\n            if (0 !== (b.effectTag & 64)) {\n              b.expirationTime = f;\n              T = b;\n              break a;\n            }\n\n            g = null !== g;\n            f = null !== e && null !== e.memoizedState;\n            null !== e && !g && f && (e = e.child.sibling, null !== e && (h = b.firstEffect, null !== h ? (b.firstEffect = e, e.nextEffect = h) : (b.firstEffect = b.lastEffect = e, e.nextEffect = null), e.effectTag = 8));\n            if (g || f) b.effectTag |= 4;\n            break;\n\n          case 7:\n            break;\n\n          case 8:\n            break;\n\n          case 12:\n            break;\n\n          case 4:\n            Kf(b);\n            mh(b);\n            break;\n\n          case 10:\n            Zg(b);\n            break;\n\n          case 9:\n            break;\n\n          case 14:\n            break;\n\n          case 17:\n            J(b.type) && Ke(b);\n            break;\n\n          case 18:\n            break;\n\n          default:\n            x(\"156\");\n        }\n\n        T = null;\n      }\n\n      b = a;\n\n      if (1 === U || 1 !== b.childExpirationTime) {\n        g = 0;\n\n        for (f = b.child; null !== f;) {\n          e = f.expirationTime, h = f.childExpirationTime, e > g && (g = e), h > g && (g = h), f = f.sibling;\n        }\n\n        b.childExpirationTime = g;\n      }\n\n      if (null !== T) return T;\n      null !== c && 0 === (c.effectTag & 1024) && (null === c.firstEffect && (c.firstEffect = a.firstEffect), null !== a.lastEffect && (null !== c.lastEffect && (c.lastEffect.nextEffect = a.firstEffect), c.lastEffect = a.lastEffect), 1 < a.effectTag && (null !== c.lastEffect ? c.lastEffect.nextEffect = a : c.firstEffect = a, c.lastEffect = a));\n    } else {\n      a = Gh(a, U);\n      if (null !== a) return a.effectTag &= 1023, a;\n      null !== c && (c.firstEffect = c.lastEffect = null, c.effectTag |= 1024);\n    }\n\n    if (null !== d) return d;\n    if (null !== c) a = c;else break;\n  }\n\n  return null;\n}\n\nfunction bi(a) {\n  var b = Tg(a.alternate, a, U);\n  a.memoizedProps = a.pendingProps;\n  null === b && (b = ai(a));\n  Ih.current = null;\n  return b;\n}\n\nfunction ci(a, b) {\n  Kh ? x(\"243\") : void 0;\n  of();\n  Kh = !0;\n  var c = Hh.current;\n  Hh.current = kg;\n  var d = a.nextExpirationTimeToWorkOn;\n  if (d !== U || a !== Lh || null === T) Sh(), Lh = a, U = d, T = Xe(Lh.current, null, U), a.pendingCommitExpirationTime = 0;\n  var e = !1;\n\n  do {\n    try {\n      if (b) for (; null !== T && !di();) {\n        T = bi(T);\n      } else for (; null !== T;) {\n        T = bi(T);\n      }\n    } catch (u) {\n      if (Yg = Xg = Wg = null, lg(), null === T) e = !0, Dh(u);else {\n        null === T ? x(\"271\") : void 0;\n        var f = T,\n            g = f.return;\n        if (null === g) e = !0, Dh(u);else {\n          a: {\n            var h = a,\n                l = g,\n                k = f,\n                m = u;\n            g = U;\n            k.effectTag |= 1024;\n            k.firstEffect = k.lastEffect = null;\n\n            if (null !== m && \"object\" === typeof m && \"function\" === typeof m.then) {\n              var p = m;\n              m = l;\n              var t = -1,\n                  A = -1;\n\n              do {\n                if (13 === m.tag) {\n                  var v = m.alternate;\n\n                  if (null !== v && (v = v.memoizedState, null !== v)) {\n                    A = 10 * (1073741822 - v.timedOutAt);\n                    break;\n                  }\n\n                  v = m.pendingProps.maxDuration;\n                  if (\"number\" === typeof v) if (0 >= v) t = 0;else if (-1 === t || v < t) t = v;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = l;\n\n              do {\n                if (v = 13 === m.tag) v = void 0 === m.memoizedProps.fallback ? !1 : null === m.memoizedState;\n\n                if (v) {\n                  l = m.updateQueue;\n                  null === l ? (l = new Set(), l.add(p), m.updateQueue = l) : l.add(p);\n\n                  if (0 === (m.mode & 1)) {\n                    m.effectTag |= 64;\n                    k.effectTag &= -1957;\n                    1 === k.tag && (null === k.alternate ? k.tag = 17 : (g = nf(1073741823), g.tag = sf, pf(k, g)));\n                    k.expirationTime = 1073741823;\n                    break a;\n                  }\n\n                  k = h;\n                  l = g;\n                  var R = k.pingCache;\n                  null === R ? (R = k.pingCache = new Bh(), v = new Set(), R.set(p, v)) : (v = R.get(p), void 0 === v && (v = new Set(), R.set(p, v)));\n                  v.has(l) || (v.add(l), k = ei.bind(null, k, p, l), p.then(k, k));\n                  -1 === t ? h = 1073741823 : (-1 === A && (A = 10 * (1073741822 - gf(h, g)) - 5E3), h = A + t);\n                  0 <= h && Mh < h && (Mh = h);\n                  m.effectTag |= 2048;\n                  m.expirationTime = g;\n                  break a;\n                }\n\n                m = m.return;\n              } while (null !== m);\n\n              m = Error((ic(k.type) || \"A React component\") + \" suspended while rendering, but no fallback UI was specified.\\n\\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.\" + jc(k));\n            }\n\n            Nh = !0;\n            m = jh(m, k);\n            h = l;\n\n            do {\n              switch (h.tag) {\n                case 3:\n                  h.effectTag |= 2048;\n                  h.expirationTime = g;\n                  g = Ch(h, m, g);\n                  eh(h, g);\n                  break a;\n\n                case 1:\n                  if (t = m, A = h.type, k = h.stateNode, 0 === (h.effectTag & 64) && (\"function\" === typeof A.getDerivedStateFromError || null !== k && \"function\" === typeof k.componentDidCatch && (null === Fh || !Fh.has(k)))) {\n                    h.effectTag |= 2048;\n                    h.expirationTime = g;\n                    g = Eh(h, t, g);\n                    eh(h, g);\n                    break a;\n                  }\n\n              }\n\n              h = h.return;\n            } while (null !== h);\n          }\n\n          T = ai(f);\n          continue;\n        }\n      }\n    }\n\n    break;\n  } while (1);\n\n  Kh = !1;\n  Hh.current = c;\n  Yg = Xg = Wg = null;\n  lg();\n  if (e) Lh = null, a.finishedWork = null;else if (null !== T) a.finishedWork = null;else {\n    c = a.current.alternate;\n    null === c ? x(\"281\") : void 0;\n    Lh = null;\n\n    if (Nh) {\n      e = a.latestPendingTime;\n      f = a.latestSuspendedTime;\n      g = a.latestPingedTime;\n\n      if (0 !== e && e < d || 0 !== f && f < d || 0 !== g && g < d) {\n        ff(a, d);\n        fi(a, c, d, a.expirationTime, -1);\n        return;\n      }\n\n      if (!a.didError && b) {\n        a.didError = !0;\n        d = a.nextExpirationTimeToWorkOn = d;\n        b = a.expirationTime = 1073741823;\n        fi(a, c, d, b, -1);\n        return;\n      }\n    }\n\n    b && -1 !== Mh ? (ff(a, d), b = 10 * (1073741822 - gf(a, d)), b < Mh && (Mh = b), b = 10 * (1073741822 - lf()), b = Mh - b, fi(a, c, d, a.expirationTime, 0 > b ? 0 : b)) : (a.pendingCommitExpirationTime = d, a.finishedWork = c);\n  }\n}\n\nfunction sh(a, b) {\n  for (var c = a.return; null !== c;) {\n    switch (c.tag) {\n      case 1:\n        var d = c.stateNode;\n\n        if (\"function\" === typeof c.type.getDerivedStateFromError || \"function\" === typeof d.componentDidCatch && (null === Fh || !Fh.has(d))) {\n          a = jh(b, a);\n          a = Eh(c, a, 1073741823);\n          pf(c, a);\n          qf(c, 1073741823);\n          return;\n        }\n\n        break;\n\n      case 3:\n        a = jh(b, a);\n        a = Ch(c, a, 1073741823);\n        pf(c, a);\n        qf(c, 1073741823);\n        return;\n    }\n\n    c = c.return;\n  }\n\n  3 === a.tag && (c = jh(b, a), c = Ch(a, c, 1073741823), pf(a, c), qf(a, 1073741823));\n}\n\nfunction mf(a, b) {\n  var c = r.unstable_getCurrentPriorityLevel(),\n      d = void 0;\n  if (0 === (b.mode & 1)) d = 1073741823;else if (Kh && !Oh) d = U;else {\n    switch (c) {\n      case r.unstable_ImmediatePriority:\n        d = 1073741823;\n        break;\n\n      case r.unstable_UserBlockingPriority:\n        d = 1073741822 - 10 * (((1073741822 - a + 15) / 10 | 0) + 1);\n        break;\n\n      case r.unstable_NormalPriority:\n        d = 1073741822 - 25 * (((1073741822 - a + 500) / 25 | 0) + 1);\n        break;\n\n      case r.unstable_LowPriority:\n      case r.unstable_IdlePriority:\n        d = 1;\n        break;\n\n      default:\n        x(\"313\");\n    }\n\n    null !== Lh && d === U && --d;\n  }\n  c === r.unstable_UserBlockingPriority && (0 === gi || d < gi) && (gi = d);\n  return d;\n}\n\nfunction ei(a, b, c) {\n  var d = a.pingCache;\n  null !== d && d.delete(b);\n  if (null !== Lh && U === c) Lh = null;else if (b = a.earliestSuspendedTime, d = a.latestSuspendedTime, 0 !== b && c <= b && c >= d) {\n    a.didError = !1;\n    b = a.latestPingedTime;\n    if (0 === b || b > c) a.latestPingedTime = c;\n    df(c, a);\n    c = a.expirationTime;\n    0 !== c && Xh(a, c);\n  }\n}\n\nfunction Ah(a, b) {\n  var c = a.stateNode;\n  null !== c && c.delete(b);\n  b = lf();\n  b = mf(b, a);\n  a = hi(a, b);\n  null !== a && (cf(a, b), b = a.expirationTime, 0 !== b && Xh(a, b));\n}\n\nfunction hi(a, b) {\n  a.expirationTime < b && (a.expirationTime = b);\n  var c = a.alternate;\n  null !== c && c.expirationTime < b && (c.expirationTime = b);\n  var d = a.return,\n      e = null;\n  if (null === d && 3 === a.tag) e = a.stateNode;else for (; null !== d;) {\n    c = d.alternate;\n    d.childExpirationTime < b && (d.childExpirationTime = b);\n    null !== c && c.childExpirationTime < b && (c.childExpirationTime = b);\n\n    if (null === d.return && 3 === d.tag) {\n      e = d.stateNode;\n      break;\n    }\n\n    d = d.return;\n  }\n  return e;\n}\n\nfunction qf(a, b) {\n  a = hi(a, b);\n  null !== a && (!Kh && 0 !== U && b > U && Sh(), cf(a, b), Kh && !Oh && Lh === a || Xh(a, a.expirationTime), ii > ji && (ii = 0, x(\"185\")));\n}\n\nfunction ki(a, b, c, d, e) {\n  return r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    return a(b, c, d, e);\n  });\n}\n\nvar li = null,\n    Y = null,\n    mi = 0,\n    ni = void 0,\n    W = !1,\n    oi = null,\n    Z = 0,\n    gi = 0,\n    pi = !1,\n    qi = null,\n    X = !1,\n    ri = !1,\n    si = null,\n    ti = r.unstable_now(),\n    ui = 1073741822 - (ti / 10 | 0),\n    vi = ui,\n    ji = 50,\n    ii = 0,\n    wi = null;\n\nfunction xi() {\n  ui = 1073741822 - ((r.unstable_now() - ti) / 10 | 0);\n}\n\nfunction yi(a, b) {\n  if (0 !== mi) {\n    if (b < mi) return;\n    null !== ni && r.unstable_cancelCallback(ni);\n  }\n\n  mi = b;\n  a = r.unstable_now() - ti;\n  ni = r.unstable_scheduleCallback(zi, {\n    timeout: 10 * (1073741822 - b) - a\n  });\n}\n\nfunction fi(a, b, c, d, e) {\n  a.expirationTime = d;\n  0 !== e || di() ? 0 < e && (a.timeoutHandle = ye(Ai.bind(null, a, b, c), e)) : (a.pendingCommitExpirationTime = c, a.finishedWork = b);\n}\n\nfunction Ai(a, b, c) {\n  a.pendingCommitExpirationTime = c;\n  a.finishedWork = b;\n  xi();\n  vi = ui;\n  Bi(a, c);\n}\n\nfunction $h(a, b) {\n  a.expirationTime = b;\n  a.finishedWork = null;\n}\n\nfunction lf() {\n  if (W) return vi;\n  Ci();\n  if (0 === Z || 1 === Z) xi(), vi = ui;\n  return vi;\n}\n\nfunction Xh(a, b) {\n  null === a.nextScheduledRoot ? (a.expirationTime = b, null === Y ? (li = Y = a, a.nextScheduledRoot = a) : (Y = Y.nextScheduledRoot = a, Y.nextScheduledRoot = li)) : b > a.expirationTime && (a.expirationTime = b);\n  W || (X ? ri && (oi = a, Z = 1073741823, Di(a, 1073741823, !1)) : 1073741823 === b ? Yh(1073741823, !1) : yi(a, b));\n}\n\nfunction Ci() {\n  var a = 0,\n      b = null;\n  if (null !== Y) for (var c = Y, d = li; null !== d;) {\n    var e = d.expirationTime;\n\n    if (0 === e) {\n      null === c || null === Y ? x(\"244\") : void 0;\n\n      if (d === d.nextScheduledRoot) {\n        li = Y = d.nextScheduledRoot = null;\n        break;\n      } else if (d === li) li = e = d.nextScheduledRoot, Y.nextScheduledRoot = e, d.nextScheduledRoot = null;else if (d === Y) {\n        Y = c;\n        Y.nextScheduledRoot = li;\n        d.nextScheduledRoot = null;\n        break;\n      } else c.nextScheduledRoot = d.nextScheduledRoot, d.nextScheduledRoot = null;\n\n      d = c.nextScheduledRoot;\n    } else {\n      e > a && (a = e, b = d);\n      if (d === Y) break;\n      if (1073741823 === a) break;\n      c = d;\n      d = d.nextScheduledRoot;\n    }\n  }\n  oi = b;\n  Z = a;\n}\n\nvar Ei = !1;\n\nfunction di() {\n  return Ei ? !0 : r.unstable_shouldYield() ? Ei = !0 : !1;\n}\n\nfunction zi() {\n  try {\n    if (!di() && null !== li) {\n      xi();\n      var a = li;\n\n      do {\n        var b = a.expirationTime;\n        0 !== b && ui <= b && (a.nextExpirationTimeToWorkOn = ui);\n        a = a.nextScheduledRoot;\n      } while (a !== li);\n    }\n\n    Yh(0, !0);\n  } finally {\n    Ei = !1;\n  }\n}\n\nfunction Yh(a, b) {\n  Ci();\n  if (b) for (xi(), vi = ui; null !== oi && 0 !== Z && a <= Z && !(Ei && ui > Z);) {\n    Di(oi, Z, ui > Z), Ci(), xi(), vi = ui;\n  } else for (; null !== oi && 0 !== Z && a <= Z;) {\n    Di(oi, Z, !1), Ci();\n  }\n  b && (mi = 0, ni = null);\n  0 !== Z && yi(oi, Z);\n  ii = 0;\n  wi = null;\n  if (null !== si) for (a = si, si = null, b = 0; b < a.length; b++) {\n    var c = a[b];\n\n    try {\n      c._onComplete();\n    } catch (d) {\n      pi || (pi = !0, qi = d);\n    }\n  }\n  if (pi) throw a = qi, qi = null, pi = !1, a;\n}\n\nfunction Bi(a, b) {\n  W ? x(\"253\") : void 0;\n  oi = a;\n  Z = b;\n  Di(a, b, !1);\n  Yh(1073741823, !1);\n}\n\nfunction Di(a, b, c) {\n  W ? x(\"245\") : void 0;\n  W = !0;\n\n  if (c) {\n    var d = a.finishedWork;\n    null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && (di() ? a.finishedWork = d : Fi(a, d, b)));\n  } else d = a.finishedWork, null !== d ? Fi(a, d, b) : (a.finishedWork = null, d = a.timeoutHandle, -1 !== d && (a.timeoutHandle = -1, ze(d)), ci(a, c), d = a.finishedWork, null !== d && Fi(a, d, b));\n\n  W = !1;\n}\n\nfunction Fi(a, b, c) {\n  var d = a.firstBatch;\n\n  if (null !== d && d._expirationTime >= c && (null === si ? si = [d] : si.push(d), d._defer)) {\n    a.finishedWork = b;\n    a.expirationTime = 0;\n    return;\n  }\n\n  a.finishedWork = null;\n  a === wi ? ii++ : (wi = a, ii = 0);\n  r.unstable_runWithPriority(r.unstable_ImmediatePriority, function () {\n    Zh(a, b);\n  });\n}\n\nfunction Dh(a) {\n  null === oi ? x(\"246\") : void 0;\n  oi.expirationTime = 0;\n  pi || (pi = !0, qi = a);\n}\n\nfunction Gi(a, b) {\n  var c = X;\n  X = !0;\n\n  try {\n    return a(b);\n  } finally {\n    (X = c) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Hi(a, b) {\n  if (X && !ri) {\n    ri = !0;\n\n    try {\n      return a(b);\n    } finally {\n      ri = !1;\n    }\n  }\n\n  return a(b);\n}\n\nfunction Ii(a, b, c) {\n  X || W || 0 === gi || (Yh(gi, !1), gi = 0);\n  var d = X;\n  X = !0;\n\n  try {\n    return r.unstable_runWithPriority(r.unstable_UserBlockingPriority, function () {\n      return a(b, c);\n    });\n  } finally {\n    (X = d) || W || Yh(1073741823, !1);\n  }\n}\n\nfunction Ji(a, b, c, d, e) {\n  var f = b.current;\n\n  a: if (c) {\n    c = c._reactInternalFiber;\n\n    b: {\n      2 === ed(c) && 1 === c.tag ? void 0 : x(\"170\");\n      var g = c;\n\n      do {\n        switch (g.tag) {\n          case 3:\n            g = g.stateNode.context;\n            break b;\n\n          case 1:\n            if (J(g.type)) {\n              g = g.stateNode.__reactInternalMemoizedMergedChildContext;\n              break b;\n            }\n\n        }\n\n        g = g.return;\n      } while (null !== g);\n\n      x(\"171\");\n      g = void 0;\n    }\n\n    if (1 === c.tag) {\n      var h = c.type;\n\n      if (J(h)) {\n        c = Ne(c, h, g);\n        break a;\n      }\n    }\n\n    c = g;\n  } else c = He;\n\n  null === b.context ? b.context = c : b.pendingContext = c;\n  b = e;\n  e = nf(d);\n  e.payload = {\n    element: a\n  };\n  b = void 0 === b ? null : b;\n  null !== b && (e.callback = b);\n  of();\n  pf(f, e);\n  qf(f, d);\n  return d;\n}\n\nfunction Ki(a, b, c, d) {\n  var e = b.current,\n      f = lf();\n  e = mf(f, e);\n  return Ji(a, b, c, e, d);\n}\n\nfunction Li(a) {\n  a = a.current;\n  if (!a.child) return null;\n\n  switch (a.child.tag) {\n    case 5:\n      return a.child.stateNode;\n\n    default:\n      return a.child.stateNode;\n  }\n}\n\nfunction Mi(a, b, c) {\n  var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;\n  return {\n    $$typeof: Wb,\n    key: null == d ? null : \"\" + d,\n    children: a,\n    containerInfo: b,\n    implementation: c\n  };\n}\n\nAb = function Ab(a, b, c) {\n  switch (b) {\n    case \"input\":\n      yc(a, c);\n      b = c.name;\n\n      if (\"radio\" === c.type && null != b) {\n        for (c = a; c.parentNode;) {\n          c = c.parentNode;\n        }\n\n        c = c.querySelectorAll(\"input[name=\" + JSON.stringify(\"\" + b) + '][type=\"radio\"]');\n\n        for (b = 0; b < c.length; b++) {\n          var d = c[b];\n\n          if (d !== a && d.form === a.form) {\n            var e = Ka(d);\n            e ? void 0 : x(\"90\");\n            Sb(d);\n            yc(d, e);\n          }\n        }\n      }\n\n      break;\n\n    case \"textarea\":\n      de(a, c);\n      break;\n\n    case \"select\":\n      b = c.value, null != b && ae(a, !!c.multiple, b, !1);\n  }\n};\n\nfunction Ni(a) {\n  var b = 1073741822 - 25 * (((1073741822 - lf() + 500) / 25 | 0) + 1);\n  b >= Jh && (b = Jh - 1);\n  this._expirationTime = Jh = b;\n  this._root = a;\n  this._callbacks = this._next = null;\n  this._hasChildren = this._didComplete = !1;\n  this._children = null;\n  this._defer = !0;\n}\n\nNi.prototype.render = function (a) {\n  this._defer ? void 0 : x(\"250\");\n  this._hasChildren = !0;\n  this._children = a;\n  var b = this._root._internalRoot,\n      c = this._expirationTime,\n      d = new Oi();\n  Ji(a, b, null, c, d._onCommit);\n  return d;\n};\n\nNi.prototype.then = function (a) {\n  if (this._didComplete) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nNi.prototype.commit = function () {\n  var a = this._root._internalRoot,\n      b = a.firstBatch;\n  this._defer && null !== b ? void 0 : x(\"251\");\n\n  if (this._hasChildren) {\n    var c = this._expirationTime;\n\n    if (b !== this) {\n      this._hasChildren && (c = this._expirationTime = b._expirationTime, this.render(this._children));\n\n      for (var d = null, e = b; e !== this;) {\n        d = e, e = e._next;\n      }\n\n      null === d ? x(\"251\") : void 0;\n      d._next = e._next;\n      this._next = b;\n      a.firstBatch = this;\n    }\n\n    this._defer = !1;\n    Bi(a, c);\n    b = this._next;\n    this._next = null;\n    b = a.firstBatch = b;\n    null !== b && b._hasChildren && b.render(b._children);\n  } else this._next = null, this._defer = !1;\n};\n\nNi.prototype._onComplete = function () {\n  if (!this._didComplete) {\n    this._didComplete = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      (0, a[b])();\n    }\n  }\n};\n\nfunction Oi() {\n  this._callbacks = null;\n  this._didCommit = !1;\n  this._onCommit = this._onCommit.bind(this);\n}\n\nOi.prototype.then = function (a) {\n  if (this._didCommit) a();else {\n    var b = this._callbacks;\n    null === b && (b = this._callbacks = []);\n    b.push(a);\n  }\n};\n\nOi.prototype._onCommit = function () {\n  if (!this._didCommit) {\n    this._didCommit = !0;\n    var a = this._callbacks;\n    if (null !== a) for (var b = 0; b < a.length; b++) {\n      var c = a[b];\n      \"function\" !== typeof c ? x(\"191\", c) : void 0;\n      c();\n    }\n  }\n};\n\nfunction Pi(a, b, c) {\n  b = K(3, null, null, b ? 3 : 0);\n  a = {\n    current: b,\n    containerInfo: a,\n    pendingChildren: null,\n    pingCache: null,\n    earliestPendingTime: 0,\n    latestPendingTime: 0,\n    earliestSuspendedTime: 0,\n    latestSuspendedTime: 0,\n    latestPingedTime: 0,\n    didError: !1,\n    pendingCommitExpirationTime: 0,\n    finishedWork: null,\n    timeoutHandle: -1,\n    context: null,\n    pendingContext: null,\n    hydrate: c,\n    nextExpirationTimeToWorkOn: 0,\n    expirationTime: 0,\n    firstBatch: null,\n    nextScheduledRoot: null\n  };\n  this._internalRoot = b.stateNode = a;\n}\n\nPi.prototype.render = function (a, b) {\n  var c = this._internalRoot,\n      d = new Oi();\n  b = void 0 === b ? null : b;\n  null !== b && d.then(b);\n  Ki(a, c, null, d._onCommit);\n  return d;\n};\n\nPi.prototype.unmount = function (a) {\n  var b = this._internalRoot,\n      c = new Oi();\n  a = void 0 === a ? null : a;\n  null !== a && c.then(a);\n  Ki(null, b, null, c._onCommit);\n  return c;\n};\n\nPi.prototype.legacy_renderSubtreeIntoContainer = function (a, b, c) {\n  var d = this._internalRoot,\n      e = new Oi();\n  c = void 0 === c ? null : c;\n  null !== c && e.then(c);\n  Ki(b, d, a, e._onCommit);\n  return e;\n};\n\nPi.prototype.createBatch = function () {\n  var a = new Ni(this),\n      b = a._expirationTime,\n      c = this._internalRoot,\n      d = c.firstBatch;\n  if (null === d) c.firstBatch = a, a._next = null;else {\n    for (c = null; null !== d && d._expirationTime >= b;) {\n      c = d, d = d._next;\n    }\n\n    a._next = d;\n    null !== c && (c._next = a);\n  }\n  return a;\n};\n\nfunction Qi(a) {\n  return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || \" react-mount-point-unstable \" !== a.nodeValue));\n}\n\nGb = Gi;\nHb = Ii;\n\nIb = function Ib() {\n  W || 0 === gi || (Yh(gi, !1), gi = 0);\n};\n\nfunction Ri(a, b) {\n  b || (b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null, b = !(!b || 1 !== b.nodeType || !b.hasAttribute(\"data-reactroot\")));\n  if (!b) for (var c; c = a.lastChild;) {\n    a.removeChild(c);\n  }\n  return new Pi(a, !1, b);\n}\n\nfunction Si(a, b, c, d, e) {\n  var f = c._reactRootContainer;\n\n  if (f) {\n    if (\"function\" === typeof e) {\n      var g = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        g.call(a);\n      };\n    }\n\n    null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n  } else {\n    f = c._reactRootContainer = Ri(c, d);\n\n    if (\"function\" === typeof e) {\n      var h = e;\n\n      e = function e() {\n        var a = Li(f._internalRoot);\n        h.call(a);\n      };\n    }\n\n    Hi(function () {\n      null != a ? f.legacy_renderSubtreeIntoContainer(a, b, e) : f.render(b, e);\n    });\n  }\n\n  return Li(f._internalRoot);\n}\n\nfunction Ti(a, b) {\n  var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;\n  Qi(b) ? void 0 : x(\"200\");\n  return Mi(a, b, null, c);\n}\n\nvar Vi = {\n  createPortal: Ti,\n  findDOMNode: function findDOMNode(a) {\n    if (null == a) return null;\n    if (1 === a.nodeType) return a;\n    var b = a._reactInternalFiber;\n    void 0 === b && (\"function\" === typeof a.render ? x(\"188\") : x(\"268\", Object.keys(a)));\n    a = hd(b);\n    a = null === a ? null : a.stateNode;\n    return a;\n  },\n  hydrate: function hydrate(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !0, c);\n  },\n  render: function render(a, b, c) {\n    Qi(b) ? void 0 : x(\"200\");\n    return Si(null, a, b, !1, c);\n  },\n  unstable_renderSubtreeIntoContainer: function unstable_renderSubtreeIntoContainer(a, b, c, d) {\n    Qi(c) ? void 0 : x(\"200\");\n    null == a || void 0 === a._reactInternalFiber ? x(\"38\") : void 0;\n    return Si(a, b, c, !1, d);\n  },\n  unmountComponentAtNode: function unmountComponentAtNode(a) {\n    Qi(a) ? void 0 : x(\"40\");\n    return a._reactRootContainer ? (Hi(function () {\n      Si(null, null, a, !1, function () {\n        a._reactRootContainer = null;\n      });\n    }), !0) : !1;\n  },\n  unstable_createPortal: function unstable_createPortal() {\n    return Ti.apply(void 0, arguments);\n  },\n  unstable_batchedUpdates: Gi,\n  unstable_interactiveUpdates: Ii,\n  flushSync: function flushSync(a, b) {\n    W ? x(\"187\") : void 0;\n    var c = X;\n    X = !0;\n\n    try {\n      return ki(a, b);\n    } finally {\n      X = c, Yh(1073741823, !1);\n    }\n  },\n  unstable_createRoot: Ui,\n  unstable_flushControlled: function unstable_flushControlled(a) {\n    var b = X;\n    X = !0;\n\n    try {\n      ki(a);\n    } finally {\n      (X = b) || W || Yh(1073741823, !1);\n    }\n  },\n  __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {\n    Events: [Ia, Ja, Ka, Ba.injectEventPluginsByName, pa, Qa, function (a) {\n      ya(a, Pa);\n    }, Eb, Fb, Dd, Da]\n  }\n};\n\nfunction Ui(a, b) {\n  Qi(a) ? void 0 : x(\"299\", \"unstable_createRoot\");\n  return new Pi(a, !0, null != b && !0 === b.hydrate);\n}\n\n(function (a) {\n  var b = a.findFiberByHostInstance;\n  return Te(n({}, a, {\n    overrideProps: null,\n    currentDispatcherRef: Tb.ReactCurrentDispatcher,\n    findHostInstanceByFiber: function findHostInstanceByFiber(a) {\n      a = hd(a);\n      return null === a ? null : a.stateNode;\n    },\n    findFiberByHostInstance: function findFiberByHostInstance(a) {\n      return b ? b(a) : null;\n    }\n  }));\n})({\n  findFiberByHostInstance: Ha,\n  bundleType: 0,\n  version: \"16.8.6\",\n  rendererPackageName: \"react-dom\"\n});\n\nvar Wi = {\n  default: Vi\n},\n    Xi = Wi && Vi || Wi;\nmodule.exports = Xi.default || Xi;","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}","/** @license React v0.13.6\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: !0\n});\nvar d = null,\n    e = !1,\n    g = 3,\n    k = -1,\n    l = -1,\n    m = !1,\n    n = !1;\n\nfunction p() {\n  if (!m) {\n    var a = d.expirationTime;\n    n ? q() : n = !0;\n\n    _r(t, a);\n  }\n}\n\nfunction u() {\n  var a = d,\n      b = d.next;\n  if (d === b) d = null;else {\n    var c = d.previous;\n    d = c.next = b;\n    b.previous = c;\n  }\n  a.next = a.previous = null;\n  c = a.callback;\n  b = a.expirationTime;\n  a = a.priorityLevel;\n  var f = g,\n      Q = l;\n  g = a;\n  l = b;\n\n  try {\n    var h = c();\n  } finally {\n    g = f, l = Q;\n  }\n\n  if (\"function\" === typeof h) if (h = {\n    callback: h,\n    priorityLevel: a,\n    expirationTime: b,\n    next: null,\n    previous: null\n  }, null === d) d = h.next = h.previous = h;else {\n    c = null;\n    a = d;\n\n    do {\n      if (a.expirationTime >= b) {\n        c = a;\n        break;\n      }\n\n      a = a.next;\n    } while (a !== d);\n\n    null === c ? c = d : c === d && (d = h, p());\n    b = c.previous;\n    b.next = c.previous = h;\n    h.next = c;\n    h.previous = b;\n  }\n}\n\nfunction v() {\n  if (-1 === k && null !== d && 1 === d.priorityLevel) {\n    m = !0;\n\n    try {\n      do {\n        u();\n      } while (null !== d && 1 === d.priorityLevel);\n    } finally {\n      m = !1, null !== d ? p() : n = !1;\n    }\n  }\n}\n\nfunction t(a) {\n  m = !0;\n  var b = e;\n  e = a;\n\n  try {\n    if (a) for (; null !== d;) {\n      var c = exports.unstable_now();\n\n      if (d.expirationTime <= c) {\n        do {\n          u();\n        } while (null !== d && d.expirationTime <= c);\n      } else break;\n    } else if (null !== d) {\n      do {\n        u();\n      } while (null !== d && !w());\n    }\n  } finally {\n    m = !1, e = b, null !== d ? p() : n = !1, v();\n  }\n}\n\nvar x = Date,\n    y = \"function\" === typeof setTimeout ? setTimeout : void 0,\n    z = \"function\" === typeof clearTimeout ? clearTimeout : void 0,\n    A = \"function\" === typeof requestAnimationFrame ? requestAnimationFrame : void 0,\n    B = \"function\" === typeof cancelAnimationFrame ? cancelAnimationFrame : void 0,\n    C,\n    D;\n\nfunction E(a) {\n  C = A(function (b) {\n    z(D);\n    a(b);\n  });\n  D = y(function () {\n    B(C);\n    a(exports.unstable_now());\n  }, 100);\n}\n\nif (\"object\" === typeof performance && \"function\" === typeof performance.now) {\n  var F = performance;\n\n  exports.unstable_now = function () {\n    return F.now();\n  };\n} else exports.unstable_now = function () {\n  return x.now();\n};\n\nvar _r,\n    q,\n    w,\n    G = null;\n\n\"undefined\" !== typeof window ? G = window : \"undefined\" !== typeof global && (G = global);\n\nif (G && G._schedMock) {\n  var H = G._schedMock;\n  _r = H[0];\n  q = H[1];\n  w = H[2];\n  exports.unstable_now = H[3];\n} else if (\"undefined\" === typeof window || \"function\" !== typeof MessageChannel) {\n  var I = null,\n      J = function J(a) {\n    if (null !== I) try {\n      I(a);\n    } finally {\n      I = null;\n    }\n  };\n\n  _r = function r(a) {\n    null !== I ? setTimeout(_r, 0, a) : (I = a, setTimeout(J, 0, !1));\n  };\n\n  q = function q() {\n    I = null;\n  };\n\n  w = function w() {\n    return !1;\n  };\n} else {\n  \"undefined\" !== typeof console && (\"function\" !== typeof A && console.error(\"This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"), \"function\" !== typeof B && console.error(\"This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills\"));\n  var K = null,\n      L = !1,\n      M = -1,\n      N = !1,\n      O = !1,\n      P = 0,\n      R = 33,\n      S = 33;\n\n  w = function w() {\n    return P <= exports.unstable_now();\n  };\n\n  var T = new MessageChannel(),\n      U = T.port2;\n\n  T.port1.onmessage = function () {\n    L = !1;\n    var a = K,\n        b = M;\n    K = null;\n    M = -1;\n    var c = exports.unstable_now(),\n        f = !1;\n    if (0 >= P - c) if (-1 !== b && b <= c) f = !0;else {\n      N || (N = !0, E(V));\n      K = a;\n      M = b;\n      return;\n    }\n\n    if (null !== a) {\n      O = !0;\n\n      try {\n        a(f);\n      } finally {\n        O = !1;\n      }\n    }\n  };\n\n  var V = function V(a) {\n    if (null !== K) {\n      E(V);\n      var b = a - P + S;\n      b < S && R < S ? (8 > b && (b = 8), S = b < R ? R : b) : R = b;\n      P = a + S;\n      L || (L = !0, U.postMessage(void 0));\n    } else N = !1;\n  };\n\n  _r = function _r(a, b) {\n    K = a;\n    M = b;\n    O || 0 > b ? U.postMessage(void 0) : N || (N = !0, E(V));\n  };\n\n  q = function q() {\n    K = null;\n    L = !1;\n    M = -1;\n  };\n}\n\nexports.unstable_ImmediatePriority = 1;\nexports.unstable_UserBlockingPriority = 2;\nexports.unstable_NormalPriority = 3;\nexports.unstable_IdlePriority = 5;\nexports.unstable_LowPriority = 4;\n\nexports.unstable_runWithPriority = function (a, b) {\n  switch (a) {\n    case 1:\n    case 2:\n    case 3:\n    case 4:\n    case 5:\n      break;\n\n    default:\n      a = 3;\n  }\n\n  var c = g,\n      f = k;\n  g = a;\n  k = exports.unstable_now();\n\n  try {\n    return b();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_next = function (a) {\n  switch (g) {\n    case 1:\n    case 2:\n    case 3:\n      var b = 3;\n      break;\n\n    default:\n      b = g;\n  }\n\n  var c = g,\n      f = k;\n  g = b;\n  k = exports.unstable_now();\n\n  try {\n    return a();\n  } finally {\n    g = c, k = f, v();\n  }\n};\n\nexports.unstable_scheduleCallback = function (a, b) {\n  var c = -1 !== k ? k : exports.unstable_now();\n  if (\"object\" === typeof b && null !== b && \"number\" === typeof b.timeout) b = c + b.timeout;else switch (g) {\n    case 1:\n      b = c + -1;\n      break;\n\n    case 2:\n      b = c + 250;\n      break;\n\n    case 5:\n      b = c + 1073741823;\n      break;\n\n    case 4:\n      b = c + 1E4;\n      break;\n\n    default:\n      b = c + 5E3;\n  }\n  a = {\n    callback: a,\n    priorityLevel: g,\n    expirationTime: b,\n    next: null,\n    previous: null\n  };\n  if (null === d) d = a.next = a.previous = a, p();else {\n    c = null;\n    var f = d;\n\n    do {\n      if (f.expirationTime > b) {\n        c = f;\n        break;\n      }\n\n      f = f.next;\n    } while (f !== d);\n\n    null === c ? c = d : c === d && (d = a, p());\n    b = c.previous;\n    b.next = c.previous = a;\n    a.next = c;\n    a.previous = b;\n  }\n  return a;\n};\n\nexports.unstable_cancelCallback = function (a) {\n  var b = a.next;\n\n  if (null !== b) {\n    if (b === a) d = null;else {\n      a === d && (d = b);\n      var c = a.previous;\n      c.next = b;\n      b.previous = c;\n    }\n    a.next = a.previous = null;\n  }\n};\n\nexports.unstable_wrapCallback = function (a) {\n  var b = g;\n  return function () {\n    var c = g,\n        f = k;\n    g = b;\n    k = exports.unstable_now();\n\n    try {\n      return a.apply(this, arguments);\n    } finally {\n      g = c, k = f, v();\n    }\n  };\n};\n\nexports.unstable_getCurrentPriorityLevel = function () {\n  return g;\n};\n\nexports.unstable_shouldYield = function () {\n  return !e && (null !== d && d.expirationTime < l || w());\n};\n\nexports.unstable_continueExecution = function () {\n  null !== d && p();\n};\n\nexports.unstable_pauseExecution = function () {};\n\nexports.unstable_getFirstCallbackNode = function () {\n  return d;\n};","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _makeEventProps = _interopRequireDefault(require(\"make-event-props\"));\n\nvar _mergeClassNames = _interopRequireDefault(require(\"merge-class-names\"));\n\nvar _reactFit = _interopRequireDefault(require(\"react-fit\"));\n\nvar _entry = _interopRequireDefault(require(\"react-calendar/dist/entry.nostyle\"));\n\nvar _DateInput = _interopRequireDefault(require(\"react-date-picker/dist/DateInput\"));\n\nvar _utils = require(\"./shared/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar baseClassName = 'react-daterange-picker';\n\nvar DateRangePicker =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(DateRangePicker, _PureComponent);\n\n  function DateRangePicker() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DateRangePicker);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DateRangePicker)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onOutsideAction\", function (event) {\n      if (_this.wrapper && !_this.wrapper.contains(event.target)) {\n        _this.closeCalendar();\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"openCalendar\", function () {\n      _this.setState({\n        isOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"closeCalendar\", function () {\n      _this.setState(function (prevState) {\n        if (!prevState.isOpen) {\n          return null;\n        }\n\n        return {\n          isOpen: false\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"toggleCalendar\", function () {\n      _this.setState(function (prevState) {\n        return {\n          isOpen: !prevState.isOpen\n        };\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChange\", function (value) {\n      var closeCalendar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n      _this.setState({\n        isOpen: !closeCalendar\n      });\n\n      var onChange = _this.props.onChange;\n\n      if (onChange) {\n        onChange(value);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChangeFrom\", function (valueFrom) {\n      var closeCalendar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var value = _this.props.value;\n\n      var _concat = [].concat(value),\n          _concat2 = _slicedToArray(_concat, 2),\n          valueTo = _concat2[1];\n\n      _this.onChange([valueFrom, valueTo], closeCalendar);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChangeTo\", function (valueTo) {\n      var closeCalendar = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var value = _this.props.value;\n\n      var _concat3 = [].concat(value),\n          _concat4 = _slicedToArray(_concat3, 1),\n          valueFrom = _concat4[0];\n\n      _this.onChange([valueFrom, valueTo], closeCalendar);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onFocus\", function (event) {\n      var _this$props = _this.props,\n          disabled = _this$props.disabled,\n          onFocus = _this$props.onFocus;\n\n      if (onFocus) {\n        onFocus(event);\n      } // Internet Explorer still fires onFocus on disabled elements\n\n\n      if (disabled) {\n        return;\n      }\n\n      _this.openCalendar();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"stopPropagation\", function (event) {\n      return event.stopPropagation();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"clear\", function () {\n      return _this.onChange(null);\n    });\n\n    return _this;\n  }\n\n  _createClass(DateRangePicker, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('mousedown', this.onOutsideAction);\n      document.addEventListener('focusin', this.onOutsideAction);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var isOpen = this.state.isOpen;\n      var _this$props2 = this.props,\n          onCalendarClose = _this$props2.onCalendarClose,\n          onCalendarOpen = _this$props2.onCalendarOpen;\n\n      if (isOpen !== prevState.isOpen) {\n        (0, _utils.callIfDefined)(isOpen ? onCalendarOpen : onCalendarClose);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('mousedown', this.onOutsideAction);\n      document.removeEventListener('focusin', this.onOutsideAction);\n    }\n  }, {\n    key: \"renderInputs\",\n    value: function renderInputs() {\n      var _this$props3 = this.props,\n          calendarIcon = _this$props3.calendarIcon,\n          clearIcon = _this$props3.clearIcon,\n          disabled = _this$props3.disabled,\n          format = _this$props3.format,\n          locale = _this$props3.locale,\n          maxDetail = _this$props3.maxDetail,\n          maxDate = _this$props3.maxDate,\n          minDate = _this$props3.minDate,\n          name = _this$props3.name,\n          required = _this$props3.required,\n          showLeadingZeros = _this$props3.showLeadingZeros,\n          value = _this$props3.value;\n      var isOpen = this.state.isOpen;\n\n      var _concat5 = [].concat(value),\n          _concat6 = _slicedToArray(_concat5, 2),\n          valueFrom = _concat6[0],\n          valueTo = _concat6[1];\n\n      var commonProps = {\n        className: \"\".concat(baseClassName, \"__inputGroup\"),\n        disabled: disabled,\n        format: format,\n        isCalendarOpen: isOpen,\n        locale: locale,\n        maxDate: maxDate,\n        maxDetail: maxDetail,\n        minDate: minDate,\n        required: required,\n        showLeadingZeros: showLeadingZeros\n      };\n      return _react.default.createElement(\"div\", {\n        className: \"\".concat(baseClassName, \"__wrapper\")\n      }, _react.default.createElement(_DateInput.default, _extends({}, commonProps, {\n        name: \"\".concat(name, \"_from\"),\n        onChange: this.onChangeFrom,\n        returnValue: \"start\",\n        value: valueFrom\n      })), \"\\u2013\", _react.default.createElement(_DateInput.default, _extends({}, commonProps, {\n        name: \"\".concat(name, \"_to\"),\n        onChange: this.onChangeTo,\n        returnValue: \"end\",\n        value: valueTo\n      })), clearIcon !== null && _react.default.createElement(\"button\", {\n        className: \"\".concat(baseClassName, \"__clear-button \").concat(baseClassName, \"__button\"),\n        disabled: disabled,\n        onClick: this.clear,\n        onFocus: this.stopPropagation,\n        type: \"button\"\n      }, clearIcon), calendarIcon !== null && _react.default.createElement(\"button\", {\n        className: \"\".concat(baseClassName, \"__calendar-button \").concat(baseClassName, \"__button\"),\n        disabled: disabled,\n        onClick: this.toggleCalendar,\n        onFocus: this.stopPropagation,\n        onBlur: this.resetValue,\n        type: \"button\"\n      }, calendarIcon));\n    }\n  }, {\n    key: \"renderCalendar\",\n    value: function renderCalendar() {\n      var isOpen = this.state.isOpen;\n\n      if (isOpen === null) {\n        return null;\n      }\n\n      var _this$props4 = this.props,\n          calendarClassName = _this$props4.calendarClassName,\n          datePickerClassName = _this$props4.className,\n          onChange = _this$props4.onChange,\n          value = _this$props4.value,\n          calendarProps = _objectWithoutProperties(_this$props4, [\"calendarClassName\", \"className\", \"onChange\", \"value\"]);\n\n      var className = \"\".concat(baseClassName, \"__calendar\");\n      return _react.default.createElement(_reactFit.default, null, _react.default.createElement(\"div\", {\n        className: (0, _mergeClassNames.default)(className, \"\".concat(className, \"--\").concat(isOpen ? 'open' : 'closed'))\n      }, _react.default.createElement(_entry.default, _extends({\n        className: calendarClassName,\n        onChange: this.onChange,\n        selectRange: true,\n        value: value || null\n      }, calendarProps))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props5 = this.props,\n          className = _this$props5.className,\n          disabled = _this$props5.disabled;\n      var isOpen = this.state.isOpen;\n      return _react.default.createElement(\"div\", _extends({\n        className: (0, _mergeClassNames.default)(baseClassName, \"\".concat(baseClassName, \"--\").concat(isOpen ? 'open' : 'closed'), \"\".concat(baseClassName, \"--\").concat(disabled ? 'disabled' : 'enabled'), className)\n      }, this.eventProps, {\n        onFocus: this.onFocus,\n        ref: function ref(_ref) {\n          if (!_ref) {\n            return;\n          }\n\n          _this2.wrapper = _ref;\n        }\n      }), this.renderInputs(), this.renderCalendar());\n    }\n  }, {\n    key: \"eventProps\",\n    get: function get() {\n      return (0, _makeEventProps.default)(this.props);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      if (nextProps.isOpen !== prevState.isOpenProps) {\n        return {\n          isOpen: nextProps.isOpen,\n          isOpenProps: nextProps.isOpen\n        };\n      }\n\n      return null;\n    }\n  }]);\n\n  return DateRangePicker;\n}(_react.PureComponent);\n\nexports.default = DateRangePicker;\n\nvar CalendarIcon = _react.default.createElement(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"19\",\n  height: \"19\",\n  viewBox: \"0 0 19 19\"\n}, _react.default.createElement(\"g\", {\n  stroke: \"black\",\n  strokeWidth: \"2\"\n}, _react.default.createElement(\"rect\", {\n  width: \"15\",\n  height: \"15\",\n  x: \"2\",\n  y: \"2\",\n  fill: \"none\"\n}), _react.default.createElement(\"line\", {\n  x1: \"6\",\n  y1: \"0\",\n  x2: \"6\",\n  y2: \"4\"\n}), _react.default.createElement(\"line\", {\n  x1: \"13\",\n  y1: \"0\",\n  x2: \"13\",\n  y2: \"4\"\n})));\n\nvar ClearIcon = _react.default.createElement(\"svg\", {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  width: \"19\",\n  height: \"19\",\n  viewBox: \"0 0 19 19\"\n}, _react.default.createElement(\"g\", {\n  stroke: \"black\",\n  strokeWidth: \"2\"\n}, _react.default.createElement(\"line\", {\n  x1: \"4\",\n  y1: \"4\",\n  x2: \"15\",\n  y2: \"15\"\n}), _react.default.createElement(\"line\", {\n  x1: \"15\",\n  y1: \"4\",\n  x2: \"4\",\n  y2: \"15\"\n})));\n\nDateRangePicker.defaultProps = {\n  calendarIcon: CalendarIcon,\n  clearIcon: ClearIcon,\n  isOpen: null,\n  name: 'daterange'\n};\nDateRangePicker.propTypes = _objectSpread({}, _entry.default.propTypes, {\n  calendarClassName: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string)]),\n  calendarIcon: _propTypes.default.node,\n  className: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.arrayOf(_propTypes.default.string)]),\n  clearIcon: _propTypes.default.node,\n  disabled: _propTypes.default.bool,\n  format: _propTypes.default.string,\n  isOpen: _propTypes.default.bool,\n  name: _propTypes.default.string,\n  onCalendarClose: _propTypes.default.func,\n  onCalendarOpen: _propTypes.default.func,\n  required: _propTypes.default.bool,\n  showLeadingZeros: _propTypes.default.bool\n});\n(0, _reactLifecyclesCompat.polyfill)(DateRangePicker);","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\n\nfunction emptyFunctionWithReset() {}\n\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function () {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n\n    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use PropTypes.checkPropTypes() to call them. ' + 'Read more at http://fb.me/use-check-prop-types');\n    err.name = 'Invariant Violation';\n    throw err;\n  }\n\n  ;\n  shim.isRequired = shim;\n\n  function getShim() {\n    return shim;\n  }\n\n  ; // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n  ReactPropTypes.PropTypes = ReactPropTypes;\n  return ReactPropTypes;\n};","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\nmodule.exports = ReactPropTypesSecret;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.focusEvents = exports.keyboardEvents = exports.touchEvents = exports.mouseEvents = void 0; // As defined on the list of supported mouse events: https://reactjs.org/docs/events.html#mouse-events\n\nvar mouseEvents = ['onClick', 'onContextMenu', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp']; // As defined on the list of supported touch events: https://reactjs.org/docs/events.html#touch-events\n\nexports.mouseEvents = mouseEvents;\nvar touchEvents = ['onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart']; // As defined on the list of supported keyboard events: https://reactjs.org/docs/events.html#keyboard-events\n\nexports.touchEvents = touchEvents;\nvar keyboardEvents = ['onKeyDown', 'onKeyPress', 'onKeyUp']; // As defined on the list of supported keyboard events: https://reactjs.org/docs/events.html#focus-events\n\nexports.keyboardEvents = keyboardEvents;\nvar focusEvents = ['onFocus', 'onBlur'];\n/**\n * Returns an object with on-event callback props curried with provided args.\n * @param {Object} props Props passed to a component.\n * @param {Function=} getArgs A function that returns argument(s) on-event callbacks\n *   shall be curried with.\n */\n\nexports.focusEvents = focusEvents;\n\nvar makeEventProps = function makeEventProps(props, getArgs) {\n  var eventProps = {};\n  [].concat(mouseEvents, touchEvents, keyboardEvents, focusEvents).forEach(function (eventName) {\n    if (props[eventName]) {\n      eventProps[eventName] = function (event) {\n        return getArgs ? props[eventName](event, getArgs(eventName)) : props[eventName](event);\n      };\n    }\n  });\n  return eventProps;\n};\n\nvar _default = makeEventProps;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _detectElementOverflow = _interopRequireDefault(require(\"detect-element-overflow\"));\n\nvar _utils = require(\"./shared/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar isDisplayContentsSupported = typeof window !== 'undefined' && 'CSS' in window && CSS.supports('display', 'contents');\nvar isMutationObserverSupported = typeof window !== 'undefined' && 'MutationObserver' in window;\n\nvar capitalize = function capitalize(a) {\n  return a[0].toUpperCase() + a.slice(1);\n};\n\nvar findScrollContainer = function findScrollContainer(element) {\n  if (!element) {\n    return undefined;\n  }\n\n  var parent = element.parentElement;\n\n  while (parent) {\n    var _window$getComputedSt = window.getComputedStyle(parent),\n        overflow = _window$getComputedSt.overflow;\n\n    if (overflow.split(' ').every(function (o) {\n      return o === 'auto' || o === 'scroll';\n    })) {\n      return parent;\n    }\n\n    parent = parent.parentElement;\n  }\n\n  return document.documentElement;\n};\n\nvar alignAxis = function alignAxis(_ref) {\n  var axis = _ref.axis,\n      container = _ref.container,\n      element = _ref.element,\n      invertAxis = _ref.invertAxis,\n      secondary = _ref.secondary,\n      spacing = _ref.spacing;\n  var style = window.getComputedStyle(element);\n  var scrollContainer = findScrollContainer(element);\n  var parent = container.parentElement;\n  var parentCollisions = (0, _detectElementOverflow.default)(parent, scrollContainer);\n  var isX = axis === 'x';\n  var startProperty = isX ? 'left' : 'top';\n  var endProperty = isX ? 'right' : 'bottom';\n  var sizeProperty = isX ? 'width' : 'height';\n  var overflowStartProperty = \"overflow\".concat(capitalize(startProperty));\n  var overflowEndProperty = \"overflow\".concat(capitalize(endProperty));\n  var uppercasedSizeProperty = capitalize(sizeProperty);\n  var offsetSizeProperty = \"offset\".concat(uppercasedSizeProperty);\n  var clientSizeProperty = \"client\".concat(uppercasedSizeProperty);\n  var minSizeProperty = \"min-\".concat(sizeProperty);\n  var scrollbarWidth = scrollContainer[offsetSizeProperty] - scrollContainer[clientSizeProperty];\n  var availableStartSpace = -parentCollisions[overflowStartProperty] - spacing;\n  var availableEndSpace = -parentCollisions[overflowEndProperty] - spacing - scrollbarWidth;\n\n  if (secondary) {\n    availableStartSpace += parent[clientSizeProperty];\n    availableEndSpace += parent[clientSizeProperty];\n  }\n\n  var offsetSize = element[offsetSizeProperty];\n\n  var displayStart = function displayStart() {\n    element.style[startProperty] = 'unset';\n    element.style[endProperty] = secondary ? '0' : '100%';\n  };\n\n  var displayEnd = function displayEnd() {\n    element.style[startProperty] = secondary ? '0' : '100%';\n    element.style[endProperty] = 'unset';\n  };\n\n  var displayIfFits = function displayIfFits(availableSpace, display) {\n    var fits = offsetSize <= availableSpace;\n\n    if (fits) {\n      display();\n    }\n\n    return fits;\n  };\n\n  var displayStartIfFits = function displayStartIfFits() {\n    return displayIfFits(availableStartSpace, displayStart);\n  };\n\n  var displayEndIfFits = function displayEndIfFits() {\n    return displayIfFits(availableEndSpace, displayEnd);\n  };\n\n  var displayWhereverShrinkedFits = function displayWhereverShrinkedFits() {\n    var moreSpaceStart = availableStartSpace > availableEndSpace;\n    var minSize = style[minSizeProperty] && parseInt(style[minSizeProperty], 10);\n\n    var shrinkToSize = function shrinkToSize(size) {\n      if (minSize && size < minSize) {\n        (0, _utils.warnOnDev)(\"<Fit />'s child will not fit anywhere with its current \".concat(minSizeProperty, \" of \").concat(minSize, \"px.\"));\n      }\n\n      var newSize = Math.max(size, minSize || 0);\n      (0, _utils.warnOnDev)(\"<Fit />'s child needed to have its \".concat(sizeProperty, \" decreased to \").concat(newSize, \"px.\"));\n      element.style[sizeProperty] = \"\".concat(newSize, \"px\");\n    };\n\n    if (moreSpaceStart) {\n      shrinkToSize(availableStartSpace);\n      displayStart();\n    } else {\n      shrinkToSize(availableEndSpace);\n      displayEnd();\n    }\n  };\n\n  var fits;\n\n  if (invertAxis) {\n    fits = displayStartIfFits() || displayEndIfFits();\n  } else {\n    fits = displayEndIfFits() || displayStartIfFits();\n  }\n\n  if (!fits) {\n    displayWhereverShrinkedFits();\n  }\n};\n\nvar alignMainAxis = function alignMainAxis(args) {\n  return alignAxis(args);\n};\n\nvar alignSecondaryAxis = function alignSecondaryAxis(args) {\n  return alignAxis(_objectSpread({}, args, {\n    axis: args.axis === 'x' ? 'y' : 'x',\n    secondary: true\n  }));\n};\n\nvar alignBothAxis = function alignBothAxis(args) {\n  var invertAxis = args.invertAxis,\n      invertSecondaryAxis = args.invertSecondaryAxis,\n      commonArgs = _objectWithoutProperties(args, [\"invertAxis\", \"invertSecondaryAxis\"]);\n\n  alignMainAxis(_objectSpread({}, commonArgs, {\n    invertAxis: invertAxis\n  }));\n  alignSecondaryAxis(_objectSpread({}, commonArgs, {\n    invertAxis: invertSecondaryAxis\n  }));\n};\n\nvar Fit =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Fit, _Component);\n\n  function Fit() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Fit);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Fit)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMutation\", function () {\n      _this.fit();\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"mutationObserver\", isMutationObserverSupported && new MutationObserver(_this.onMutation));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"fit\", function () {\n      var _assertThisInitialize = _assertThisInitialized(_assertThisInitialized(_this)),\n          container = _assertThisInitialize.container,\n          element = _assertThisInitialize.element;\n\n      if (!element) {\n        return;\n      }\n\n      var elementWidth = element.clientWidth;\n      var elementHeight = element.clientHeight; // No need to recalculate - already did that for current dimensions\n\n      if (_this.elementWidth === elementWidth && _this.elementHeight === elementHeight) {\n        return;\n      } // Save the dimensions so that we know we don't need to repeat the function if unchanged\n\n\n      _this.elementWidth = elementWidth;\n      _this.elementHeight = elementHeight;\n      var parent = container.parentElement;\n      /**\n       * We need to ensure that <Fit />'s child has a absolute position. Otherwise,\n       * we wouldn't be able to place the child in the correct position.\n       */\n\n      var style = window.getComputedStyle(element);\n      var position = style.position;\n\n      if (position !== 'absolute') {\n        (0, _utils.warnOnDev)('<Fit />\\'s child does not have absolute position. You should apply `position: absolute` to it.');\n        element.style.position = 'absolute';\n      }\n      /**\n       * We need to ensure that <Fit />'s parent has a relative position. Otherwise,\n       * we wouldn't be able to place the child in the correct position.\n       */\n\n\n      var parentStyle = window.getComputedStyle(parent);\n      var parentPosition = parentStyle.position;\n\n      if (parentPosition !== 'relative' && parentPosition !== 'absolute') {\n        (0, _utils.warnOnDev)('<Fit />\\'s parent does not have relative position. You should apply `position: relative` to it.');\n        parent.style.position = 'relative';\n      }\n\n      var _this$props = _this.props,\n          invertAxis = _this$props.invertAxis,\n          invertSecondaryAxis = _this$props.invertSecondaryAxis,\n          mainAxis = _this$props.mainAxis,\n          spacing = _this$props.spacing;\n      alignBothAxis({\n        container: container,\n        element: element,\n        invertAxis: invertAxis,\n        invertSecondaryAxis: invertSecondaryAxis,\n        axis: mainAxis,\n        spacing: spacing\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Fit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (!isDisplayContentsSupported) {\n        // eslint-disable-next-line react/no-find-dom-node\n        var element = (0, _reactDom.findDOMNode)(this);\n        this.container = element;\n        this.element = element;\n      }\n\n      this.fit();\n\n      if (isMutationObserverSupported) {\n        this.mutationObserver.observe(this.element, {\n          attributes: true,\n          attributeFilter: ['class', 'style']\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var children = this.props.children;\n\n      var child = _react.default.Children.only(children);\n\n      if (isDisplayContentsSupported) {\n        return _react.default.createElement(\"div\", {\n          style: {\n            display: 'contents'\n          },\n          ref: function ref(_ref2) {\n            _this2.container = _ref2;\n            _this2.element = _ref2 && _ref2.firstChild;\n          }\n        }, child);\n      }\n\n      return child;\n    }\n  }]);\n\n  return Fit;\n}(_react.Component);\n\nexports.default = Fit;\nFit.propTypes = {\n  children: _propTypes.default.node,\n  invertAxis: _propTypes.default.bool,\n  invertSecondaryAxis: _propTypes.default.bool,\n  mainAxis: _propTypes.default.oneOf(['x', 'y']),\n  spacing: _propTypes.default.number\n};\nFit.defaultProps = {\n  mainAxis: 'y',\n  spacing: 8\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar detectElementOverflow = function detectElementOverflow(element, container) {\n  return {\n    get collidedTop() {\n      return element.getBoundingClientRect().top < container.getBoundingClientRect().top;\n    },\n\n    get collidedBottom() {\n      return element.getBoundingClientRect().bottom > container.getBoundingClientRect().bottom;\n    },\n\n    get collidedLeft() {\n      return element.getBoundingClientRect().left < container.getBoundingClientRect().left;\n    },\n\n    get collidedRight() {\n      return element.getBoundingClientRect().right > container.getBoundingClientRect().right;\n    },\n\n    get overflowTop() {\n      return container.getBoundingClientRect().top - element.getBoundingClientRect().top;\n    },\n\n    get overflowBottom() {\n      return element.getBoundingClientRect().bottom - container.getBoundingClientRect().bottom;\n    },\n\n    get overflowLeft() {\n      return container.getBoundingClientRect().left - element.getBoundingClientRect().left;\n    },\n\n    get overflowRight() {\n      return element.getBoundingClientRect().right - container.getBoundingClientRect().right;\n    }\n\n  };\n};\n\nexports.default = detectElementOverflow;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.warnOnDev = exports.isProduction = void 0;\n/**\n * Checks whether we're running on a production build or not.\n */\n\nvar isProduction = process.env.NODE_ENV === 'production';\nexports.isProduction = isProduction;\n\nvar consoleOnDev = function consoleOnDev(method) {\n  if (!isProduction) {\n    var _console;\n\n    for (var _len = arguments.length, message = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      message[_key - 1] = arguments[_key];\n    } // eslint-disable-next-line no-console\n\n\n    (_console = console)[method].apply(_console, message);\n  }\n};\n\nvar warnOnDev = function warnOnDev() {\n  for (var _len2 = arguments.length, message = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    message[_key2] = arguments[_key2];\n  }\n\n  return consoleOnDev.apply(void 0, ['warn'].concat(message));\n};\n\nexports.warnOnDev = warnOnDev;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"Calendar\", {\n  enumerable: true,\n  get: function get() {\n    return _Calendar.default;\n  }\n});\nObject.defineProperty(exports, \"CenturyView\", {\n  enumerable: true,\n  get: function get() {\n    return _CenturyView.default;\n  }\n});\nObject.defineProperty(exports, \"DecadeView\", {\n  enumerable: true,\n  get: function get() {\n    return _DecadeView.default;\n  }\n});\nObject.defineProperty(exports, \"YearView\", {\n  enumerable: true,\n  get: function get() {\n    return _YearView.default;\n  }\n});\nObject.defineProperty(exports, \"MonthView\", {\n  enumerable: true,\n  get: function get() {\n    return _MonthView.default;\n  }\n});\nexports.default = void 0;\n\nvar _Calendar = _interopRequireDefault(require(\"./Calendar\"));\n\nvar _CenturyView = _interopRequireDefault(require(\"./CenturyView\"));\n\nvar _DecadeView = _interopRequireDefault(require(\"./DecadeView\"));\n\nvar _YearView = _interopRequireDefault(require(\"./YearView\"));\n\nvar _MonthView = _interopRequireDefault(require(\"./MonthView\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar _default = _Calendar.default;\nexports.default = _default;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _mergeClassNames = _interopRequireDefault(require(\"merge-class-names\"));\n\nvar _Navigation = _interopRequireDefault(require(\"./Calendar/Navigation\"));\n\nvar _CenturyView = _interopRequireDefault(require(\"./CenturyView\"));\n\nvar _DecadeView = _interopRequireDefault(require(\"./DecadeView\"));\n\nvar _YearView = _interopRequireDefault(require(\"./YearView\"));\n\nvar _MonthView = _interopRequireDefault(require(\"./MonthView\"));\n\nvar _dates = require(\"./shared/dates\");\n\nvar _propTypes2 = require(\"./shared/propTypes\");\n\nvar _utils = require(\"./shared/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar allViews = ['century', 'decade', 'year', 'month'];\nvar allValueTypes = [].concat(_toConsumableArray(allViews.slice(1)), ['day']);\n\nvar datesAreDifferent = function datesAreDifferent(date1, date2) {\n  return date1 && !date2 || !date1 && date2 || date1 && date2 && date1.getTime() !== date2.getTime();\n};\n/**\n * Returns views array with disallowed values cut off.\n */\n\n\nvar getLimitedViews = function getLimitedViews(minDetail, maxDetail) {\n  return allViews.slice(allViews.indexOf(minDetail), allViews.indexOf(maxDetail) + 1);\n};\n\nvar getView = function getView(view, minDetail, maxDetail) {\n  if (view && getLimitedViews(minDetail, maxDetail).indexOf(view) !== -1) {\n    return view;\n  }\n\n  return getLimitedViews(minDetail, maxDetail).pop();\n};\n/**\n * Determines whether a given view is allowed with currently applied settings.\n */\n\n\nvar isViewAllowed = function isViewAllowed(view, minDetail, maxDetail) {\n  var views = getLimitedViews(minDetail, maxDetail);\n  return views.indexOf(view) !== -1;\n};\n/**\n * Returns value type that can be returned with currently applied settings.\n */\n\n\nvar getValueType = function getValueType(maxDetail) {\n  return allValueTypes[allViews.indexOf(maxDetail)];\n};\n\nvar getValueFrom = function getValueFrom(value) {\n  if (!value) {\n    return null;\n  }\n\n  var rawValueFrom = value instanceof Array && value.length === 2 ? value[0] : value;\n\n  if (!rawValueFrom) {\n    return null;\n  }\n\n  var valueFromDate = new Date(rawValueFrom);\n\n  if (isNaN(valueFromDate.getTime())) {\n    throw new Error(\"Invalid date: \".concat(value));\n  }\n\n  return valueFromDate;\n};\n\nvar getDetailValueFrom = function getDetailValueFrom(value, minDate, maxDate, maxDetail) {\n  var valueFrom = getValueFrom(value);\n\n  if (!valueFrom) {\n    return null;\n  }\n\n  var detailValueFrom = (0, _dates.getBegin)(getValueType(maxDetail), valueFrom);\n  return (0, _utils.between)(detailValueFrom, minDate, maxDate);\n};\n\nvar getValueTo = function getValueTo(value) {\n  if (!value) {\n    return null;\n  }\n\n  var rawValueTo = value instanceof Array && value.length === 2 ? value[1] : value;\n\n  if (!rawValueTo) {\n    return null;\n  }\n\n  var valueToDate = new Date(rawValueTo);\n\n  if (isNaN(valueToDate.getTime())) {\n    throw new Error(\"Invalid date: \".concat(value));\n  }\n\n  return valueToDate;\n};\n\nvar getDetailValueTo = function getDetailValueTo(value, minDate, maxDate, maxDetail) {\n  var valueTo = getValueTo(value);\n\n  if (!valueTo) {\n    return null;\n  }\n\n  var detailValueTo = (0, _dates.getEnd)(getValueType(maxDetail), valueTo);\n  return (0, _utils.between)(detailValueTo, minDate, maxDate);\n};\n\nvar getDetailValueArray = function getDetailValueArray(value, minDate, maxDate, maxDetail) {\n  if (value instanceof Array) {\n    return value;\n  }\n\n  return [getDetailValueFrom(value, minDate, maxDate, maxDetail), getDetailValueTo(value, minDate, maxDate, maxDetail)];\n};\n\nvar getActiveStartDate = function getActiveStartDate(props) {\n  var activeStartDate = props.activeStartDate,\n      maxDate = props.maxDate,\n      maxDetail = props.maxDetail,\n      minDate = props.minDate,\n      minDetail = props.minDetail,\n      value = props.value,\n      view = props.view;\n  var rangeType = getView(view, minDetail, maxDetail);\n  var valueFrom = getDetailValueFrom(value, minDate, maxDate, maxDetail) || activeStartDate || new Date();\n  return (0, _dates.getBegin)(rangeType, valueFrom);\n};\n\nvar Calendar =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Calendar, _Component);\n\n  function Calendar() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Calendar);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Calendar)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {});\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"setActiveStartDate\", function (activeStartDate) {\n      var onActiveDateChange = _this.props.onActiveDateChange;\n\n      _this.setState({\n        activeStartDate: activeStartDate\n      }, function () {\n        var view = _this.state.view;\n        (0, _utils.callIfDefined)(onActiveDateChange, {\n          activeStartDate: activeStartDate,\n          view: view\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"drillDown\", function (activeStartDate) {\n      if (!_this.drillDownAvailable) {\n        return;\n      }\n\n      var _this$props = _this.props,\n          maxDetail = _this$props.maxDetail,\n          minDetail = _this$props.minDetail,\n          onDrillDown = _this$props.onDrillDown;\n      var views = getLimitedViews(minDetail, maxDetail);\n\n      _this.setState(function (prevState) {\n        var nextView = views[views.indexOf(prevState.view) + 1];\n        return {\n          activeStartDate: activeStartDate,\n          view: nextView\n        };\n      }, function () {\n        var view = _this.state.view;\n        (0, _utils.callIfDefined)(onDrillDown, {\n          activeStartDate: activeStartDate,\n          view: view\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"drillUp\", function () {\n      if (!_this.drillUpAvailable) {\n        return;\n      }\n\n      var _this$props2 = _this.props,\n          maxDetail = _this$props2.maxDetail,\n          minDetail = _this$props2.minDetail,\n          onDrillUp = _this$props2.onDrillUp;\n      var views = getLimitedViews(minDetail, maxDetail);\n\n      _this.setState(function (prevState) {\n        var nextView = views[views.indexOf(prevState.view) - 1];\n        var activeStartDate = (0, _dates.getBegin)(nextView, prevState.activeStartDate);\n        return {\n          activeStartDate: activeStartDate,\n          view: nextView\n        };\n      }, function () {\n        var _this$state = _this.state,\n            activeStartDate = _this$state.activeStartDate,\n            view = _this$state.view;\n        (0, _utils.callIfDefined)(onDrillUp, {\n          activeStartDate: activeStartDate,\n          view: view\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChange\", function (value) {\n      var _this$props3 = _this.props,\n          onChange = _this$props3.onChange,\n          selectRange = _this$props3.selectRange;\n      var nextValue;\n      var callback;\n\n      if (selectRange) {\n        var previousValue = _this.state.value; // Range selection turned on\n\n        if (!previousValue || [].concat(previousValue).length !== 1 // 0 or 2 - either way we're starting a new array\n        ) {\n            // First value\n            nextValue = (0, _dates.getBegin)(_this.valueType, value);\n          } else {\n          // Second value\n          nextValue = (0, _dates.getValueRange)(_this.valueType, previousValue, value);\n\n          callback = function callback() {\n            return (0, _utils.callIfDefined)(onChange, nextValue);\n          };\n        }\n      } else {\n        // Range selection turned off\n        nextValue = _this.getProcessedValue(value);\n\n        callback = function callback() {\n          return (0, _utils.callIfDefined)(onChange, nextValue);\n        };\n      }\n\n      _this.setState({\n        value: nextValue\n      }, callback);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMouseOver\", function (value) {\n      _this.setState({\n        hover: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onMouseOut\", function () {\n      _this.setState({\n        hover: null\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(Calendar, [{\n    key: \"getProcessedValue\",\n\n    /**\n     * Gets current value in a desired format.\n     */\n    value: function getProcessedValue(value) {\n      var _this$props4 = this.props,\n          minDate = _this$props4.minDate,\n          maxDate = _this$props4.maxDate,\n          maxDetail = _this$props4.maxDetail,\n          returnValue = _this$props4.returnValue;\n\n      var processFunction = function () {\n        switch (returnValue) {\n          case 'start':\n            return getDetailValueFrom;\n\n          case 'end':\n            return getDetailValueTo;\n\n          case 'range':\n            return getDetailValueArray;\n\n          default:\n            throw new Error('Invalid returnValue.');\n        }\n      }();\n\n      return processFunction(value, minDate, maxDate, maxDetail);\n    }\n  }, {\n    key: \"renderContent\",\n    value: function renderContent() {\n      var _this$props5 = this.props,\n          calendarType = _this$props5.calendarType,\n          locale = _this$props5.locale,\n          maxDate = _this$props5.maxDate,\n          minDate = _this$props5.minDate,\n          renderChildren = _this$props5.renderChildren,\n          selectRange = _this$props5.selectRange,\n          tileClassName = _this$props5.tileClassName,\n          tileContent = _this$props5.tileContent,\n          tileDisabled = _this$props5.tileDisabled;\n      var _this$state2 = this.state,\n          activeStartDate = _this$state2.activeStartDate,\n          hover = _this$state2.hover,\n          value = _this$state2.value,\n          view = _this$state2.view;\n      var onMouseOver = this.onMouseOver,\n          valueType = this.valueType;\n      var commonProps = {\n        activeStartDate: activeStartDate,\n        hover: hover,\n        locale: locale,\n        maxDate: maxDate,\n        minDate: minDate,\n        onMouseOver: selectRange ? onMouseOver : null,\n        tileClassName: tileClassName,\n        tileContent: tileContent || renderChildren,\n        // For backwards compatibility\n        tileDisabled: tileDisabled,\n        value: value,\n        valueType: valueType\n      };\n      var clickAction = this.drillDownAvailable ? this.drillDown : this.onChange;\n\n      switch (view) {\n        case 'century':\n          {\n            var onClickDecade = this.props.onClickDecade;\n            return _react.default.createElement(_CenturyView.default, _extends({\n              onClick: (0, _utils.mergeFunctions)(clickAction, onClickDecade)\n            }, commonProps));\n          }\n\n        case 'decade':\n          {\n            var onClickYear = this.props.onClickYear;\n            return _react.default.createElement(_DecadeView.default, _extends({\n              onClick: (0, _utils.mergeFunctions)(clickAction, onClickYear)\n            }, commonProps));\n          }\n\n        case 'year':\n          {\n            var _this$props6 = this.props,\n                formatMonth = _this$props6.formatMonth,\n                onClickMonth = _this$props6.onClickMonth;\n            return _react.default.createElement(_YearView.default, _extends({\n              formatMonth: formatMonth,\n              onClick: (0, _utils.mergeFunctions)(clickAction, onClickMonth)\n            }, commonProps));\n          }\n\n        case 'month':\n          {\n            var _this$props7 = this.props,\n                formatShortWeekday = _this$props7.formatShortWeekday,\n                onClickDay = _this$props7.onClickDay,\n                onClickWeekNumber = _this$props7.onClickWeekNumber,\n                showFixedNumberOfWeeks = _this$props7.showFixedNumberOfWeeks,\n                showNeighboringMonth = _this$props7.showNeighboringMonth,\n                showWeekNumbers = _this$props7.showWeekNumbers;\n            return _react.default.createElement(_MonthView.default, _extends({\n              calendarType: calendarType,\n              formatShortWeekday: formatShortWeekday,\n              onClick: (0, _utils.mergeFunctions)(clickAction, onClickDay),\n              onClickWeekNumber: onClickWeekNumber,\n              showFixedNumberOfWeeks: showFixedNumberOfWeeks,\n              showNeighboringMonth: showNeighboringMonth,\n              showWeekNumbers: showWeekNumbers\n            }, commonProps));\n          }\n\n        default:\n          throw new Error(\"Invalid view: \".concat(view, \".\"));\n      }\n    }\n  }, {\n    key: \"renderNavigation\",\n    value: function renderNavigation() {\n      var showNavigation = this.props.showNavigation;\n\n      if (!showNavigation) {\n        return null;\n      }\n\n      var _this$props8 = this.props,\n          formatMonthYear = _this$props8.formatMonthYear,\n          locale = _this$props8.locale,\n          maxDate = _this$props8.maxDate,\n          maxDetail = _this$props8.maxDetail,\n          minDate = _this$props8.minDate,\n          minDetail = _this$props8.minDetail,\n          navigationAriaLabel = _this$props8.navigationAriaLabel,\n          navigationLabel = _this$props8.navigationLabel,\n          next2AriaLabel = _this$props8.next2AriaLabel,\n          next2Label = _this$props8.next2Label,\n          nextAriaLabel = _this$props8.nextAriaLabel,\n          nextLabel = _this$props8.nextLabel,\n          prev2AriaLabel = _this$props8.prev2AriaLabel,\n          prev2Label = _this$props8.prev2Label,\n          prevAriaLabel = _this$props8.prevAriaLabel,\n          prevLabel = _this$props8.prevLabel;\n      var _this$state3 = this.state,\n          activeStartDate = _this$state3.activeStartDate,\n          view = _this$state3.view;\n      return _react.default.createElement(_Navigation.default, {\n        activeStartDate: activeStartDate,\n        drillUp: this.drillUp,\n        formatMonthYear: formatMonthYear,\n        locale: locale,\n        maxDate: maxDate,\n        minDate: minDate,\n        navigationAriaLabel: navigationAriaLabel,\n        navigationLabel: navigationLabel,\n        next2AriaLabel: next2AriaLabel,\n        next2Label: next2Label,\n        nextAriaLabel: nextAriaLabel,\n        nextLabel: nextLabel,\n        prev2AriaLabel: prev2AriaLabel,\n        prev2Label: prev2Label,\n        prevAriaLabel: prevAriaLabel,\n        prevLabel: prevLabel,\n        setActiveStartDate: this.setActiveStartDate,\n        view: view,\n        views: getLimitedViews(minDetail, maxDetail)\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props9 = this.props,\n          className = _this$props9.className,\n          selectRange = _this$props9.selectRange;\n      var value = this.state.value;\n      var onMouseOut = this.onMouseOut;\n      var valueArray = [].concat(value);\n      return _react.default.createElement(\"div\", {\n        className: (0, _mergeClassNames.default)('react-calendar', selectRange && valueArray.length === 1 && 'react-calendar--selectRange', className),\n        onMouseOut: selectRange ? onMouseOut : null,\n        onBlur: selectRange ? onMouseOut : null\n      }, this.renderNavigation(), this.renderContent());\n    }\n  }, {\n    key: \"drillDownAvailable\",\n    get: function get() {\n      var _this$props10 = this.props,\n          maxDetail = _this$props10.maxDetail,\n          minDetail = _this$props10.minDetail;\n      var view = this.state.view;\n      var views = getLimitedViews(minDetail, maxDetail);\n      return views.indexOf(view) < views.length - 1;\n    }\n  }, {\n    key: \"drillUpAvailable\",\n    get: function get() {\n      var _this$props11 = this.props,\n          maxDetail = _this$props11.maxDetail,\n          minDetail = _this$props11.minDetail;\n      var view = this.state.view;\n      var views = getLimitedViews(minDetail, maxDetail);\n      return views.indexOf(view) > 0;\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      var maxDetail = this.props.maxDetail;\n      return getValueType(maxDetail);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var minDate = nextProps.minDate,\n          maxDate = nextProps.maxDate,\n          minDetail = nextProps.minDetail,\n          maxDetail = nextProps.maxDetail;\n      var nextState = {};\n      /**\n       * If the next activeStartDate is different from the current one, update\n       * activeStartDate (for display) and activeStartDateProps (for future comparisons)\n       */\n\n      var nextActiveStartDate = getActiveStartDate(nextProps);\n\n      if (datesAreDifferent(nextActiveStartDate, prevState.activeStartDateProps)) {\n        nextState.activeStartDate = nextActiveStartDate;\n        nextState.activeStartDateProps = nextActiveStartDate;\n      }\n      /**\n       * If the next view is different from the current one, and the previously set view is not\n       * valid based on minDetail and maxDetail, get a new one.\n       */\n\n\n      var nextView = getView(nextProps.view, minDetail, maxDetail);\n\n      if (nextView !== prevState.viewProps && !isViewAllowed(prevState.view, minDetail, maxDetail)) {\n        nextState.view = nextView;\n        nextState.viewProps = nextView;\n      }\n      /**\n       * If the next value is different from the current one (with an exception of situation in\n       * which values provided are limited by minDate and maxDate so that the dates are the same),\n       * get a new one.\n       */\n\n\n      var values = [nextProps.value, prevState.valueProps];\n\n      if (nextState.view // Allowed view changed\n      || datesAreDifferent.apply(void 0, _toConsumableArray(values.map(function (value) {\n        return getValueFrom(value, minDate, maxDate, maxDetail);\n      }))) || datesAreDifferent.apply(void 0, _toConsumableArray(values.map(function (value) {\n        return getValueTo(value, minDate, maxDate, maxDetail);\n      })))) {\n        nextState.value = nextProps.value;\n        nextState.valueProps = nextProps.value;\n      }\n\n      if (!nextProps.selectRange && prevState.hover) {\n        nextState.hover = null;\n      }\n\n      return nextState;\n    }\n  }]);\n\n  return Calendar;\n}(_react.Component);\n\nexports.default = Calendar;\nCalendar.defaultProps = {\n  maxDetail: 'month',\n  minDetail: 'century',\n  returnValue: 'start',\n  showNavigation: true,\n  showNeighboringMonth: true,\n  view: 'month'\n};\nCalendar.propTypes = {\n  activeStartDate: _propTypes.default.instanceOf(Date),\n  calendarType: _propTypes2.isCalendarType,\n  className: _propTypes2.isClassName,\n  formatMonth: _propTypes.default.func,\n  formatMonthYear: _propTypes.default.func,\n  formatShortWeekday: _propTypes.default.func,\n  locale: _propTypes.default.string,\n  maxDate: _propTypes2.isMaxDate,\n  maxDetail: _propTypes.default.oneOf(allViews),\n  minDate: _propTypes2.isMinDate,\n  minDetail: _propTypes.default.oneOf(allViews),\n  navigationAriaLabel: _propTypes.default.string,\n  navigationLabel: _propTypes.default.func,\n  next2AriaLabel: _propTypes.default.string,\n  next2Label: _propTypes.default.node,\n  nextAriaLabel: _propTypes.default.string,\n  nextLabel: _propTypes.default.node,\n  onActiveDateChange: _propTypes.default.func,\n  onChange: _propTypes.default.func,\n  onClickDay: _propTypes.default.func,\n  onClickDecade: _propTypes.default.func,\n  onClickMonth: _propTypes.default.func,\n  onClickWeekNumber: _propTypes.default.func,\n  onClickYear: _propTypes.default.func,\n  onDrillDown: _propTypes.default.func,\n  onDrillUp: _propTypes.default.func,\n  prev2AriaLabel: _propTypes.default.string,\n  prev2Label: _propTypes.default.node,\n  prevAriaLabel: _propTypes.default.string,\n  prevLabel: _propTypes.default.node,\n  renderChildren: _propTypes.default.func,\n  // For backwards compatibility\n  returnValue: _propTypes.default.oneOf(['start', 'end', 'range']),\n  selectRange: _propTypes.default.bool,\n  showFixedNumberOfWeeks: _propTypes.default.bool,\n  showNavigation: _propTypes.default.bool,\n  showNeighboringMonth: _propTypes.default.bool,\n  showWeekNumbers: _propTypes.default.bool,\n  tileClassName: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes2.isClassName]),\n  tileContent: _propTypes.default.oneOfType([_propTypes.default.func, _propTypes.default.node]),\n  tileDisabled: _propTypes.default.func,\n  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes2.isValue]),\n  view: _propTypes.default.oneOf(allViews)\n};\n(0, _reactLifecyclesCompat.polyfill)(Calendar);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Navigation;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _dateFormatter = require(\"../shared/dateFormatter\");\n\nvar _propTypes2 = require(\"../shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar className = 'react-calendar__navigation';\n\nfunction Navigation(_ref) {\n  var date = _ref.activeStartDate,\n      drillUp = _ref.drillUp,\n      formatMonthYear = _ref.formatMonthYear,\n      locale = _ref.locale,\n      maxDate = _ref.maxDate,\n      minDate = _ref.minDate,\n      navigationAriaLabel = _ref.navigationAriaLabel,\n      navigationLabel = _ref.navigationLabel,\n      next2AriaLabel = _ref.next2AriaLabel,\n      next2Label = _ref.next2Label,\n      nextAriaLabel = _ref.nextAriaLabel,\n      nextLabel = _ref.nextLabel,\n      prev2AriaLabel = _ref.prev2AriaLabel,\n      prev2Label = _ref.prev2Label,\n      prevAriaLabel = _ref.prevAriaLabel,\n      prevLabel = _ref.prevLabel,\n      setActiveStartDate = _ref.setActiveStartDate,\n      view = _ref.view,\n      views = _ref.views;\n  var drillUpAvailable = views.indexOf(view) > 0;\n  var shouldShowPrevNext2Buttons = view !== 'century';\n  var previousActiveStartDate = (0, _dates.getBeginPrevious)(view, date);\n  var previousActiveStartDate2 = shouldShowPrevNext2Buttons && (0, _dates.getBeginPrevious2)(view, date);\n  var nextActiveStartDate = (0, _dates.getBeginNext)(view, date);\n  var nextActiveStartDate2 = shouldShowPrevNext2Buttons && (0, _dates.getBeginNext2)(view, date);\n\n  var prevButtonDisabled = function () {\n    if (previousActiveStartDate.getFullYear() < 1000) {\n      return true;\n    }\n\n    var previousActiveEndDate = (0, _dates.getEndPrevious)(view, date);\n    return minDate && minDate >= previousActiveEndDate;\n  }();\n\n  var prev2ButtonDisabled = shouldShowPrevNext2Buttons && function () {\n    if (previousActiveStartDate2.getFullYear() < 1000) {\n      return true;\n    }\n\n    var previousActiveEndDate = (0, _dates.getEndPrevious2)(view, date);\n    return minDate && minDate >= previousActiveEndDate;\n  }();\n\n  var nextButtonDisabled = maxDate && maxDate <= nextActiveStartDate;\n  var next2ButtonDisabled = shouldShowPrevNext2Buttons && maxDate && maxDate <= nextActiveStartDate2;\n\n  function onClickPrevious() {\n    setActiveStartDate(previousActiveStartDate);\n  }\n\n  function onClickPrevious2() {\n    setActiveStartDate(previousActiveStartDate2);\n  }\n\n  function onClickNext() {\n    setActiveStartDate(nextActiveStartDate);\n  }\n\n  function onClickNext2() {\n    setActiveStartDate(nextActiveStartDate2);\n  }\n\n  var label = function () {\n    switch (view) {\n      case 'century':\n        return (0, _dates.getCenturyLabel)(date);\n\n      case 'decade':\n        return (0, _dates.getDecadeLabel)(date);\n\n      case 'year':\n        return (0, _dates.getYear)(date);\n\n      case 'month':\n        return formatMonthYear(locale, date);\n\n      default:\n        throw new Error(\"Invalid view: \".concat(view, \".\"));\n    }\n  }();\n\n  return _react.default.createElement(\"div\", {\n    className: className,\n    style: {\n      display: 'flex'\n    }\n  }, prev2Label !== null && shouldShowPrevNext2Buttons && _react.default.createElement(\"button\", {\n    className: \"\".concat(className, \"__arrow \").concat(className, \"__prev2-button\"),\n    disabled: prev2ButtonDisabled,\n    onClick: onClickPrevious2,\n    type: \"button\",\n    \"aria-label\": prev2AriaLabel\n  }, prev2Label), _react.default.createElement(\"button\", {\n    className: \"\".concat(className, \"__arrow \").concat(className, \"__prev-button\"),\n    disabled: prevButtonDisabled,\n    onClick: onClickPrevious,\n    type: \"button\",\n    \"aria-label\": prevAriaLabel\n  }, prevLabel), _react.default.createElement(\"button\", {\n    className: \"react-calendar__navigation__label\",\n    onClick: drillUp,\n    disabled: !drillUpAvailable,\n    style: {\n      flexGrow: 1\n    },\n    type: \"button\",\n    \"aria-label\": navigationAriaLabel\n  }, navigationLabel ? navigationLabel({\n    date: date,\n    view: view,\n    label: label\n  }) : label), _react.default.createElement(\"button\", {\n    className: \"\".concat(className, \"__arrow \").concat(className, \"__next-button\"),\n    disabled: nextButtonDisabled,\n    onClick: onClickNext,\n    type: \"button\",\n    \"aria-label\": nextAriaLabel\n  }, nextLabel), next2Label !== null && shouldShowPrevNext2Buttons && _react.default.createElement(\"button\", {\n    className: \"\".concat(className, \"__arrow \").concat(className, \"__next2-button\"),\n    disabled: next2ButtonDisabled,\n    onClick: onClickNext2,\n    type: \"button\",\n    \"aria-label\": next2AriaLabel\n  }, next2Label));\n}\n\nNavigation.defaultProps = {\n  formatMonthYear: _dateFormatter.formatMonthYear,\n  navigationAriaLabel: '',\n  next2AriaLabel: '',\n  next2Label: '»',\n  nextAriaLabel: '',\n  nextLabel: '›',\n  prev2AriaLabel: '',\n  prev2Label: '«',\n  prevAriaLabel: '',\n  prevLabel: '‹'\n};\nNavigation.propTypes = {\n  activeStartDate: _propTypes.default.instanceOf(Date).isRequired,\n  drillUp: _propTypes.default.func.isRequired,\n  formatMonthYear: _propTypes.default.func,\n  locale: _propTypes.default.string,\n  maxDate: _propTypes.default.instanceOf(Date),\n  minDate: _propTypes.default.instanceOf(Date),\n  next2AriaLabel: _propTypes.default.string,\n  next2Label: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.node]),\n  nextAriaLabel: _propTypes.default.string,\n  nextLabel: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.node]),\n  navigationAriaLabel: _propTypes.default.string,\n  navigationLabel: _propTypes.default.func,\n  prev2AriaLabel: _propTypes.default.string,\n  prev2Label: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.node]),\n  prevAriaLabel: _propTypes.default.string,\n  prevLabel: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.node]),\n  setActiveStartDate: _propTypes.default.func.isRequired,\n  view: _propTypes2.isView.isRequired,\n  views: _propTypes2.isViews.isRequired\n};","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/** Used as references for various `Number` constants. */\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n/** `Object#toString` result references. */\n\nvar symbolTag = '[object Symbol]';\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objectToString = objectProto.toString;\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\n\nfunction before(n, func) {\n  var result;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  n = toInteger(n);\n  return function () {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n\n    if (n <= 1) {\n      func = undefined;\n    }\n\n    return result;\n  };\n}\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\n\n\nfunction once(func) {\n  return before(2, func);\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\n\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && objectToString.call(value) == symbolTag;\n}\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = once;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Decades;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _TileGroup = _interopRequireDefault(require(\"../TileGroup\"));\n\nvar _Decade = _interopRequireDefault(require(\"./Decade\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _propTypes = require(\"../shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction Decades(props) {\n  var activeStartDate = props.activeStartDate;\n  var start = (0, _dates.getBeginOfCenturyYear)(activeStartDate);\n  var end = start + 99;\n  return _react.default.createElement(_TileGroup.default, _extends({}, props, {\n    className: \"react-calendar__century-view__decades\",\n    dateTransform: _dates.getBeginOfDecade,\n    dateType: \"decade\",\n    end: end,\n    start: start,\n    step: 10,\n    tile: _Decade.default\n  }));\n}\n\nDecades.propTypes = _objectSpread({}, _propTypes.tileGroupProps);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Decade;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Tile = _interopRequireDefault(require(\"../Tile\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _propTypes2 = require(\"../shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar className = 'react-calendar__century-view__decades__decade';\n\nfunction Decade(_ref) {\n  var classes = _ref.classes,\n      point = _ref.point,\n      otherProps = _objectWithoutProperties(_ref, [\"classes\", \"point\"]);\n\n  return _react.default.createElement(_Tile.default, _extends({}, otherProps, {\n    classes: [].concat(classes, className),\n    maxDateTransform: _dates.getEndOfDecade,\n    minDateTransform: _dates.getBeginOfDecade,\n    view: \"century\"\n  }), (0, _dates.getDecadeLabel)(point));\n}\n\nDecade.propTypes = _objectSpread({}, _propTypes2.tileProps, {\n  point: _propTypes.default.number.isRequired\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Years;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _TileGroup = _interopRequireDefault(require(\"../TileGroup\"));\n\nvar _Year = _interopRequireDefault(require(\"./Year\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _propTypes = require(\"../shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction Years(props) {\n  var activeStartDate = props.activeStartDate;\n  var start = (0, _dates.getBeginOfDecadeYear)(activeStartDate);\n  var end = start + 9;\n  return _react.default.createElement(_TileGroup.default, _extends({}, props, {\n    className: \"react-calendar__decade-view__years\",\n    dateTransform: function dateTransform(year) {\n      return new Date(year, 0, 1);\n    },\n    dateType: \"year\",\n    end: end,\n    start: start,\n    tile: _Year.default\n  }));\n}\n\nYears.propTypes = _objectSpread({}, _propTypes.tileGroupProps);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Year;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Tile = _interopRequireDefault(require(\"../Tile\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _propTypes2 = require(\"../shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar className = 'react-calendar__decade-view__years__year';\n\nfunction Year(_ref) {\n  var classes = _ref.classes,\n      point = _ref.point,\n      otherProps = _objectWithoutProperties(_ref, [\"classes\", \"point\"]);\n\n  return _react.default.createElement(_Tile.default, _extends({}, otherProps, {\n    classes: [].concat(classes, className),\n    maxDateTransform: _dates.getEndOfYear,\n    minDateTransform: _dates.getBeginOfYear,\n    view: \"decade\"\n  }), point);\n}\n\nYear.propTypes = _objectSpread({}, _propTypes2.tileProps, {\n  point: _propTypes.default.number.isRequired\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Months;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _TileGroup = _interopRequireDefault(require(\"../TileGroup\"));\n\nvar _Month = _interopRequireDefault(require(\"./Month\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _propTypes2 = require(\"../shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction Months(props) {\n  var activeStartDate = props.activeStartDate;\n  var start = 0;\n  var end = 11;\n  var year = (0, _dates.getYear)(activeStartDate);\n  return _react.default.createElement(_TileGroup.default, _extends({}, props, {\n    className: \"react-calendar__year-view__months\",\n    dateTransform: function dateTransform(monthIndex) {\n      return new Date(year, monthIndex, 1);\n    },\n    dateType: \"month\",\n    end: end,\n    start: start,\n    tile: _Month.default\n  }));\n}\n\nMonths.propTypes = _objectSpread({}, _propTypes2.tileGroupProps, {\n  locale: _propTypes.default.string\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Month;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Tile = _interopRequireDefault(require(\"../Tile\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _dateFormatter = require(\"../shared/dateFormatter\");\n\nvar _propTypes2 = require(\"../shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar className = 'react-calendar__year-view__months__month';\n\nfunction Month(_ref) {\n  var classes = _ref.classes,\n      date = _ref.date,\n      formatMonth = _ref.formatMonth,\n      locale = _ref.locale,\n      otherProps = _objectWithoutProperties(_ref, [\"classes\", \"date\", \"formatMonth\", \"locale\"]);\n\n  return _react.default.createElement(_Tile.default, _extends({}, otherProps, {\n    classes: [].concat(classes, className),\n    date: date,\n    formatAbbr: _dateFormatter.formatMonthYear,\n    locale: locale,\n    maxDateTransform: _dates.getEndOfMonth,\n    minDateTransform: _dates.getBeginOfMonth,\n    view: \"year\"\n  }), formatMonth(locale, date));\n}\n\nMonth.defaultProps = {\n  formatMonth: _dateFormatter.formatMonth\n};\nMonth.propTypes = _objectSpread({}, _propTypes2.tileProps, {\n  formatMonth: _propTypes.default.func\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Days;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _TileGroup = _interopRequireDefault(require(\"../TileGroup\"));\n\nvar _Day = _interopRequireDefault(require(\"./Day\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _propTypes2 = require(\"../shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction Days(props) {\n  var activeStartDate = props.activeStartDate,\n      calendarType = props.calendarType;\n\n  var showFixedNumberOfWeeks = props.showFixedNumberOfWeeks,\n      showNeighboringMonth = props.showNeighboringMonth,\n      otherProps = _objectWithoutProperties(props, [\"showFixedNumberOfWeeks\", \"showNeighboringMonth\"]);\n\n  var year = (0, _dates.getYear)(activeStartDate);\n  var monthIndex = (0, _dates.getMonthIndex)(activeStartDate);\n  var hasFixedNumberOfWeeks = showFixedNumberOfWeeks || showNeighboringMonth;\n  var dayOfWeek = (0, _dates.getDayOfWeek)(activeStartDate, calendarType);\n  var offset = hasFixedNumberOfWeeks ? 0 : dayOfWeek;\n  /**\n   * Defines on which day of the month the grid shall start. If we simply show current\n   * month, we obviously start on day one, but if showNeighboringMonth is set to\n   * true, we need to find the beginning of the week the first day of the month is in.\n   */\n\n  var start = (hasFixedNumberOfWeeks ? -dayOfWeek : 0) + 1;\n  /**\n   * Defines on which day of the month the grid shall end. If we simply show current\n   * month, we need to stop on the last day of the month, but if showNeighboringMonth\n   * is set to true, we need to find the end of the week the last day of the month is in.\n   */\n\n  var end = function () {\n    if (showFixedNumberOfWeeks) {\n      // Always show 6 weeks\n      return start + 6 * 7 - 1;\n    }\n\n    var daysInMonth = (0, _dates.getDaysInMonth)(activeStartDate);\n\n    if (showNeighboringMonth) {\n      var activeEndDate = new Date(year, monthIndex, daysInMonth);\n      return daysInMonth + (7 - (0, _dates.getDayOfWeek)(activeEndDate, calendarType) - 1);\n    }\n\n    return daysInMonth;\n  }();\n\n  return _react.default.createElement(_TileGroup.default, _extends({}, otherProps, {\n    className: \"react-calendar__month-view__days\",\n    count: 7,\n    dateTransform: function dateTransform(day) {\n      return new Date(year, monthIndex, day);\n    },\n    dateType: \"day\",\n    end: end,\n    offset: offset,\n    start: start,\n    tile: _Day.default // Tile props\n    ,\n    currentMonthIndex: monthIndex\n  }));\n}\n\nDays.propTypes = _objectSpread({\n  calendarType: _propTypes2.isCalendarType.isRequired,\n  showFixedNumberOfWeeks: _propTypes.default.bool,\n  showNeighboringMonth: _propTypes.default.bool\n}, _propTypes2.tileGroupProps);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Day;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Tile = _interopRequireDefault(require(\"../Tile\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _dateFormatter = require(\"../shared/dateFormatter\");\n\nvar _propTypes2 = require(\"../shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar className = 'react-calendar__month-view__days__day';\n\nfunction Day(_ref) {\n  var calendarType = _ref.calendarType,\n      classes = _ref.classes,\n      currentMonthIndex = _ref.currentMonthIndex,\n      date = _ref.date,\n      otherProps = _objectWithoutProperties(_ref, [\"calendarType\", \"classes\", \"currentMonthIndex\", \"date\"]);\n\n  return _react.default.createElement(_Tile.default, _extends({}, otherProps, {\n    classes: [].concat(classes, className, (0, _dates.isWeekend)(date, calendarType) ? \"\".concat(className, \"--weekend\") : null, date.getMonth() !== currentMonthIndex ? \"\".concat(className, \"--neighboringMonth\") : null),\n    date: date,\n    formatAbbr: _dateFormatter.formatLongDate,\n    maxDateTransform: _dates.getEndOfDay,\n    minDateTransform: _dates.getBeginOfDay,\n    view: \"month\"\n  }), (0, _dates.getDay)(date));\n}\n\nDay.propTypes = _objectSpread({}, _propTypes2.tileProps, {\n  currentMonthIndex: _propTypes.default.number.isRequired\n});","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Weekdays;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Flex = _interopRequireDefault(require(\"../Flex\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _dateFormatter = require(\"../shared/dateFormatter\");\n\nvar _propTypes2 = require(\"../shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction Weekdays(props) {\n  var calendarType = props.calendarType,\n      formatShortWeekday = props.formatShortWeekday,\n      locale = props.locale;\n  var anyDate = new Date();\n  var beginOfMonth = (0, _dates.getBeginOfMonth)(anyDate);\n  var year = (0, _dates.getYear)(beginOfMonth);\n  var monthIndex = (0, _dates.getMonthIndex)(beginOfMonth);\n  var weekdays = [];\n\n  for (var weekday = 1; weekday <= 7; weekday += 1) {\n    var weekdayDate = new Date(year, monthIndex, weekday - (0, _dates.getDayOfWeek)(beginOfMonth, calendarType));\n    var abbr = (0, _dateFormatter.formatWeekday)(locale, weekdayDate);\n    weekdays.push(_react.default.createElement(\"div\", {\n      className: \"react-calendar__month-view__weekdays__weekday\",\n      key: weekday\n    }, _react.default.createElement(\"abbr\", {\n      title: abbr,\n      \"aria-label\": abbr\n    }, formatShortWeekday(locale, weekdayDate).replace('.', ''))));\n  }\n\n  return _react.default.createElement(_Flex.default, {\n    className: \"react-calendar__month-view__weekdays\",\n    count: 7\n  }, weekdays);\n}\n\nWeekdays.defaultProps = {\n  formatShortWeekday: _dateFormatter.formatShortWeekday\n};\nWeekdays.propTypes = {\n  calendarType: _propTypes2.isCalendarType.isRequired,\n  formatShortWeekday: _propTypes.default.func,\n  locale: _propTypes.default.string\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = WeekNumbers;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _WeekNumber = _interopRequireDefault(require(\"./WeekNumber\"));\n\nvar _Flex = _interopRequireDefault(require(\"../Flex\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _propTypes2 = require(\"../shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction WeekNumbers(props) {\n  var activeStartDate = props.activeStartDate,\n      calendarType = props.calendarType,\n      onClickWeekNumber = props.onClickWeekNumber,\n      showFixedNumberOfWeeks = props.showFixedNumberOfWeeks;\n\n  var numberOfWeeks = function () {\n    if (showFixedNumberOfWeeks) {\n      return 6;\n    }\n\n    var numberOfDays = (0, _dates.getDaysInMonth)(activeStartDate);\n    var startWeekday = (0, _dates.getDayOfWeek)(activeStartDate, calendarType);\n    var days = numberOfDays - (7 - startWeekday);\n    return 1 + Math.ceil(days / 7);\n  }();\n\n  var dates = function () {\n    var year = (0, _dates.getYear)(activeStartDate);\n    var monthIndex = (0, _dates.getMonthIndex)(activeStartDate);\n    var day = (0, _dates.getDay)(activeStartDate);\n    var result = [];\n\n    for (var index = 0; index < numberOfWeeks; index += 1) {\n      result.push((0, _dates.getBeginOfWeek)(new Date(year, monthIndex, day + index * 7), calendarType));\n    }\n\n    return result;\n  }();\n\n  var weekNumbers = dates.map(function (date) {\n    return (0, _dates.getWeekNumber)(date, calendarType);\n  });\n  return _react.default.createElement(_Flex.default, {\n    className: \"react-calendar__month-view__weekNumbers\",\n    count: numberOfWeeks,\n    direction: \"column\",\n    style: {\n      flexBasis: 'calc(100% * (1 / 8)',\n      flexShrink: 0\n    }\n  }, weekNumbers.map(function (weekNumber, weekIndex) {\n    return _react.default.createElement(_WeekNumber.default, {\n      date: dates[weekIndex],\n      key: weekNumber,\n      onClickWeekNumber: onClickWeekNumber,\n      weekNumber: weekNumber\n    });\n  }));\n}\n\nWeekNumbers.propTypes = {\n  activeStartDate: _propTypes.default.instanceOf(Date).isRequired,\n  calendarType: _propTypes2.isCalendarType.isRequired,\n  onClickWeekNumber: _propTypes.default.func,\n  showFixedNumberOfWeeks: _propTypes.default.bool\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = WeekNumber;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction WeekNumber(_ref) {\n  var date = _ref.date,\n      onClickWeekNumber = _ref.onClickWeekNumber,\n      weekNumber = _ref.weekNumber;\n  return onClickWeekNumber ? _react.default.createElement(\"button\", {\n    className: \"react-calendar__tile\",\n    onClick: function onClick() {\n      return onClickWeekNumber(weekNumber, date);\n    },\n    style: {\n      flexGrow: 1\n    },\n    type: \"button\"\n  }, _react.default.createElement(\"span\", null, weekNumber)) : _react.default.createElement(\"div\", {\n    className: \"react-calendar__tile\",\n    style: {\n      flexGrow: 1\n    }\n  }, _react.default.createElement(\"span\", null, weekNumber));\n}\n\nWeekNumber.propTypes = {\n  date: _propTypes.default.instanceOf(Date).isRequired,\n  onClickWeekNumber: _propTypes.default.func,\n  weekNumber: _propTypes.default.number.isRequired\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _reactLifecyclesCompat = require(\"react-lifecycles-compat\");\n\nvar _Divider = _interopRequireDefault(require(\"./Divider\"));\n\nvar _DayInput = _interopRequireDefault(require(\"./DateInput/DayInput\"));\n\nvar _MonthInput = _interopRequireDefault(require(\"./DateInput/MonthInput\"));\n\nvar _YearInput = _interopRequireDefault(require(\"./DateInput/YearInput\"));\n\nvar _NativeInput = _interopRequireDefault(require(\"./DateInput/NativeInput\"));\n\nvar _dateFormatter = require(\"./shared/dateFormatter\");\n\nvar _dates = require(\"./shared/dates\");\n\nvar _propTypes2 = require(\"./shared/propTypes\");\n\nvar _utils = require(\"./shared/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nvar defaultMinDate = new Date(-8.64e15);\nvar defaultMaxDate = new Date(8.64e15);\nvar allViews = ['century', 'decade', 'year', 'month'];\nvar allValueTypes = [].concat(_toConsumableArray(allViews.slice(1)), ['day']);\n\nvar datesAreDifferent = function datesAreDifferent(date1, date2) {\n  return date1 && !date2 || !date1 && date2 || date1 && date2 && date1.getTime() !== date2.getTime();\n};\n/**\n * Returns value type that can be returned with currently applied settings.\n */\n\n\nvar getValueType = function getValueType(maxDetail) {\n  return allValueTypes[allViews.indexOf(maxDetail)];\n};\n\nvar getValueFromRange = function getValueFromRange(valueOrArrayOfValues, index) {\n  if (Array.isArray(valueOrArrayOfValues)) {\n    return valueOrArrayOfValues[index];\n  }\n\n  return valueOrArrayOfValues;\n};\n\nvar parseAndValidateDate = function parseAndValidateDate(rawValue) {\n  if (!rawValue) {\n    return null;\n  }\n\n  var valueDate = new Date(rawValue);\n\n  if (isNaN(valueDate.getTime())) {\n    throw new Error(\"Invalid date: \".concat(rawValue));\n  }\n\n  return valueDate;\n};\n\nvar getValueFrom = function getValueFrom(value) {\n  var valueFrom = getValueFromRange(value, 0);\n  return parseAndValidateDate(valueFrom);\n};\n\nvar getDetailValueFrom = function getDetailValueFrom(value, minDate, maxDate, maxDetail) {\n  var valueFrom = getValueFrom(value);\n\n  if (!valueFrom) {\n    return null;\n  }\n\n  var detailValueFrom = (0, _dates.getBegin)(getValueType(maxDetail), valueFrom);\n  return (0, _utils.between)(detailValueFrom, minDate, maxDate);\n};\n\nvar getValueTo = function getValueTo(value) {\n  var valueTo = getValueFromRange(value, 1);\n  return parseAndValidateDate(valueTo);\n};\n\nvar getDetailValueTo = function getDetailValueTo(value, minDate, maxDate, maxDetail) {\n  var valueTo = getValueTo(value);\n\n  if (!valueTo) {\n    return null;\n  }\n\n  var detailValueTo = (0, _dates.getEnd)(getValueType(maxDetail), valueTo);\n  return (0, _utils.between)(detailValueTo, minDate, maxDate);\n};\n\nvar getDetailValueArray = function getDetailValueArray(value, minDate, maxDate, maxDetail) {\n  if (value instanceof Array) {\n    return value;\n  }\n\n  return [getDetailValueFrom(value, minDate, maxDate, maxDetail), getDetailValueTo(value, minDate, maxDate, maxDetail)];\n};\n\nvar isValidInput = function isValidInput(element) {\n  return element.tagName === 'INPUT' && element.type === 'number';\n};\n\nvar findInput = function findInput(element, property) {\n  var nextElement = element;\n\n  do {\n    nextElement = nextElement[property];\n  } while (nextElement && !isValidInput(nextElement));\n\n  return nextElement;\n};\n\nvar focus = function focus(element) {\n  return element && element.focus();\n};\n\nvar _renderCustomInputs = function renderCustomInputs(placeholder, elementFunctions) {\n  var pattern = new RegExp(Object.keys(elementFunctions).map(function (el) {\n    return \"\".concat(el, \"+\");\n  }).join('|'), 'g');\n  var matches = placeholder.match(pattern);\n  return placeholder.split(pattern).reduce(function (arr, element, index) {\n    var divider = element && // eslint-disable-next-line react/no-array-index-key\n    _react.default.createElement(_Divider.default, {\n      key: \"separator_\".concat(index)\n    }, element);\n\n    var res = [].concat(_toConsumableArray(arr), [divider]);\n    var currentMatch = matches && matches[index];\n\n    if (currentMatch) {\n      var renderFunction = elementFunctions[currentMatch] || elementFunctions[Object.keys(elementFunctions).find(function (elementFunction) {\n        return currentMatch.match(elementFunction);\n      })];\n      res.push(renderFunction(currentMatch));\n    }\n\n    return res;\n  }, []);\n};\n\nvar DateInput =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(DateInput, _PureComponent);\n\n  function DateInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, DateInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(DateInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"state\", {\n      year: null,\n      month: null,\n      day: null\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onClick\", function (event) {\n      if (event.target === event.currentTarget) {\n        // Wrapper was directly clicked\n        var firstInput = event.target.children[1];\n        focus(firstInput);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onKeyDown\", function (event) {\n      switch (event.key) {\n        case 'ArrowLeft':\n        case 'ArrowRight':\n        case _this.divider:\n          {\n            event.preventDefault();\n            var input = event.target;\n            var property = event.key === 'ArrowLeft' ? 'previousElementSibling' : 'nextElementSibling';\n            var nextInput = findInput(input, property);\n            focus(nextInput);\n            break;\n          }\n\n        default:\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChange\", function (event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n\n      _this.setState(_defineProperty({}, name, value ? parseInt(value, 10) : null), _this.onChangeExternal);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChangeNative\", function (event) {\n      var onChange = _this.props.onChange;\n      var value = event.target.value;\n\n      if (!onChange) {\n        return;\n      }\n\n      var processedValue = function () {\n        if (!value) {\n          return null;\n        }\n\n        var _value$split = value.split('-'),\n            _value$split2 = _slicedToArray(_value$split, 3),\n            yearString = _value$split2[0],\n            monthString = _value$split2[1],\n            dayString = _value$split2[2];\n\n        var year = parseInt(yearString, 10);\n        var monthIndex = parseInt(monthString, 10) - 1 || 0;\n        var date = parseInt(dayString, 10) || 1;\n        return new Date(year, monthIndex, date);\n      }();\n\n      onChange(processedValue, false);\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"onChangeExternal\", function () {\n      var onChange = _this.props.onChange;\n\n      if (!onChange) {\n        return;\n      }\n\n      var formElements = [_this.dayInput, _this.monthInput, _this.yearInput].filter(Boolean);\n      var values = {};\n      formElements.forEach(function (formElement) {\n        values[formElement.name] = formElement.value;\n      });\n\n      if (formElements.every(function (formElement) {\n        return !formElement.value;\n      })) {\n        onChange(null, false);\n      } else if (formElements.every(function (formElement) {\n        return formElement.value && formElement.checkValidity();\n      })) {\n        var proposedValue = new Date(values.year, (values.month || 1) - 1, values.day || 1);\n\n        var processedValue = _this.getProcessedValue(proposedValue);\n\n        onChange(processedValue, false);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderDay\", function (currentMatch) {\n      var showLeadingZeros = _this.props.showLeadingZeros;\n      var _this$state = _this.state,\n          day = _this$state.day,\n          month = _this$state.month,\n          year = _this$state.year;\n\n      if (currentMatch && currentMatch.length > 2) {\n        throw new Error(\"Unsupported token: \".concat(currentMatch));\n      }\n\n      var showLeadingZerosFromFormat = currentMatch && currentMatch.length === 2;\n      return _react.default.createElement(_DayInput.default, _extends({\n        key: \"day\"\n      }, _this.commonInputProps, {\n        month: month,\n        showLeadingZeros: showLeadingZerosFromFormat || showLeadingZeros,\n        value: day,\n        year: year\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderMonth\", function (currentMatch) {\n      var showLeadingZeros = _this.props.showLeadingZeros;\n      var _this$state2 = _this.state,\n          month = _this$state2.month,\n          year = _this$state2.year;\n\n      if (currentMatch && currentMatch.length > 2) {\n        throw new Error(\"Unsupported token: \".concat(currentMatch));\n      }\n\n      var showLeadingZerosFromFormat = currentMatch && currentMatch.length === 2;\n      return _react.default.createElement(_MonthInput.default, _extends({\n        key: \"month\"\n      }, _this.commonInputProps, {\n        showLeadingZeros: showLeadingZerosFromFormat || showLeadingZeros,\n        value: month,\n        year: year\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"renderYear\", function () {\n      var year = _this.state.year;\n      return _react.default.createElement(_YearInput.default, _extends({\n        key: \"year\"\n      }, _this.commonInputProps, {\n        value: year,\n        valueType: _this.valueType\n      }));\n    });\n\n    return _this;\n  }\n\n  _createClass(DateInput, [{\n    key: \"getProcessedValue\",\n\n    /**\n     * Gets current value in a desired format.\n     */\n    value: function getProcessedValue(value) {\n      var _this$props = this.props,\n          minDate = _this$props.minDate,\n          maxDate = _this$props.maxDate,\n          maxDetail = _this$props.maxDetail,\n          returnValue = _this$props.returnValue;\n\n      switch (returnValue) {\n        case 'start':\n          return getDetailValueFrom(value, minDate, maxDate, maxDetail);\n\n        case 'end':\n          return getDetailValueTo(value, minDate, maxDate, maxDetail);\n\n        case 'range':\n          return getDetailValueArray(value, minDate, maxDate, maxDetail);\n\n        default:\n          throw new Error('Invalid returnValue.');\n      }\n    }\n  }, {\n    key: \"renderCustomInputs\",\n    value: function renderCustomInputs() {\n      var placeholder = this.placeholder;\n      var elementFunctions = {\n        d: this.renderDay,\n        M: this.renderMonth,\n        y: this.renderYear\n      };\n      return _renderCustomInputs(placeholder, elementFunctions);\n    }\n  }, {\n    key: \"renderNativeInput\",\n    value: function renderNativeInput() {\n      var _this$props2 = this.props,\n          disabled = _this$props2.disabled,\n          maxDate = _this$props2.maxDate,\n          minDate = _this$props2.minDate,\n          name = _this$props2.name,\n          required = _this$props2.required;\n      var value = this.state.value;\n      return _react.default.createElement(_NativeInput.default, {\n        key: \"date\",\n        disabled: disabled,\n        maxDate: maxDate || defaultMaxDate,\n        minDate: minDate || defaultMinDate,\n        name: name,\n        onChange: this.onChangeNative,\n        required: required,\n        value: value,\n        valueType: this.valueType\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var className = this.props.className;\n      return _react.default.createElement(\"div\", {\n        className: className,\n        onClick: this.onClick,\n        role: \"presentation\"\n      }, this.renderNativeInput(), this.renderCustomInputs());\n    }\n  }, {\n    key: \"formatDate\",\n    get: function get() {\n      var _this$props3 = this.props,\n          locale = _this$props3.locale,\n          maxDetail = _this$props3.maxDetail;\n      var options = {\n        year: 'numeric'\n      };\n      var level = allViews.indexOf(maxDetail);\n\n      if (level >= 2) {\n        options.month = 'numeric';\n      }\n\n      if (level >= 3) {\n        options.day = 'numeric';\n      }\n\n      return (0, _dateFormatter.getFormatter)(locale, options);\n    }\n  }, {\n    key: \"formatNumber\",\n    get: function get() {\n      var locale = this.props.locale;\n      var options = {\n        useGrouping: false\n      };\n      return (0, _dateFormatter.getFormatter)(locale, options);\n    }\n  }, {\n    key: \"divider\",\n    get: function get() {\n      return this.placeholder.match(/[^0-9a-z]/i)[0];\n    }\n  }, {\n    key: \"placeholder\",\n    get: function get() {\n      var format = this.props.format;\n\n      if (format) {\n        return format;\n      }\n\n      var year = 2017;\n      var monthIndex = 11;\n      var day = 11;\n      var date = new Date(year, monthIndex, day);\n      return this.formatDate(date).replace(this.formatNumber(year), 'y').replace(this.formatNumber(monthIndex + 1), 'M').replace(this.formatNumber(day), 'd');\n    }\n  }, {\n    key: \"commonInputProps\",\n    get: function get() {\n      var _this2 = this;\n\n      var _this$props4 = this.props,\n          className = _this$props4.className,\n          disabled = _this$props4.disabled,\n          isCalendarOpen = _this$props4.isCalendarOpen,\n          maxDate = _this$props4.maxDate,\n          minDate = _this$props4.minDate,\n          required = _this$props4.required;\n      return {\n        className: className,\n        disabled: disabled,\n        maxDate: maxDate || defaultMaxDate,\n        minDate: minDate || defaultMinDate,\n        onChange: this.onChange,\n        onKeyDown: this.onKeyDown,\n        // This is only for showing validity when editing\n        required: required || isCalendarOpen,\n        itemRef: function itemRef(ref, name) {\n          // Save a reference to each input field\n          _this2[\"\".concat(name, \"Input\")] = ref;\n        }\n      };\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      var maxDetail = this.props.maxDetail;\n      return getValueType(maxDetail);\n    }\n  }], [{\n    key: \"getDerivedStateFromProps\",\n    value: function getDerivedStateFromProps(nextProps, prevState) {\n      var minDate = nextProps.minDate,\n          maxDate = nextProps.maxDate,\n          maxDetail = nextProps.maxDetail;\n      var nextState = {};\n      /**\n       * If isCalendarOpen flag has changed, we have to update it.\n       * It's saved in state purely for use in getDerivedStateFromProps.\n       */\n\n      if (nextProps.isCalendarOpen !== prevState.isCalendarOpen) {\n        nextState.isCalendarOpen = nextProps.isCalendarOpen;\n      }\n      /**\n       * If the next value is different from the current one  (with an exception of situation in\n       * which values provided are limited by minDate and maxDate so that the dates are the same),\n       * get a new one.\n       */\n\n\n      var nextValue = getDetailValueFrom(nextProps.value, minDate, maxDate, maxDetail);\n      var values = [nextValue, prevState.value];\n\n      if ( // Toggling calendar visibility resets values\n      nextState.isCalendarOpen // Flag was toggled\n      || datesAreDifferent.apply(void 0, _toConsumableArray(values.map(function (value) {\n        return getDetailValueFrom(value, minDate, maxDate, maxDetail);\n      }))) || datesAreDifferent.apply(void 0, _toConsumableArray(values.map(function (value) {\n        return getDetailValueTo(value, minDate, maxDate, maxDetail);\n      })))) {\n        if (nextValue) {\n          nextState.year = (0, _dates.getYear)(nextValue);\n          nextState.month = (0, _dates.getMonth)(nextValue);\n          nextState.day = (0, _dates.getDay)(nextValue);\n        } else {\n          nextState.year = null;\n          nextState.month = null;\n          nextState.day = null;\n        }\n\n        nextState.value = nextValue;\n      }\n\n      return nextState;\n    }\n  }]);\n\n  return DateInput;\n}(_react.PureComponent);\n\nexports.default = DateInput;\nDateInput.defaultProps = {\n  maxDetail: 'month',\n  name: 'date',\n  returnValue: 'start'\n};\nDateInput.propTypes = {\n  className: _propTypes.default.string.isRequired,\n  disabled: _propTypes.default.bool,\n  format: _propTypes.default.string,\n  isCalendarOpen: _propTypes.default.bool,\n  locale: _propTypes.default.string,\n  maxDate: _propTypes2.isMaxDate,\n  maxDetail: _propTypes.default.oneOf(allViews),\n  minDate: _propTypes2.isMinDate,\n  name: _propTypes.default.string,\n  onChange: _propTypes.default.func,\n  required: _propTypes.default.bool,\n  returnValue: _propTypes.default.oneOf(['start', 'end', 'range']),\n  showLeadingZeros: _propTypes.default.bool,\n  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.instanceOf(Date), _propTypes.default.arrayOf(_propTypes.default.instanceOf(Date))])\n};\n(0, _reactLifecyclesCompat.polyfill)(DateInput);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Divider;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction Divider(_ref) {\n  var children = _ref.children;\n  return _react.default.createElement(\"span\", {\n    className: \"react-date-picker__inputGroup__divider\"\n  }, children);\n}\n\nDivider.propTypes = {\n  children: _propTypes.default.node\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Input = _interopRequireDefault(require(\"./Input\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _propTypes2 = require(\"../shared/propTypes\");\n\nvar _utils = require(\"../shared/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar DayInput =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(DayInput, _PureComponent);\n\n  function DayInput() {\n    _classCallCheck(this, DayInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(DayInput).apply(this, arguments));\n  }\n\n  _createClass(DayInput, [{\n    key: \"render\",\n    value: function render() {\n      var maxDay = this.maxDay,\n          minDay = this.minDay;\n\n      var _this$props = this.props,\n          maxDate = _this$props.maxDate,\n          minDate = _this$props.minDate,\n          month = _this$props.month,\n          year = _this$props.year,\n          otherProps = _objectWithoutProperties(_this$props, [\"maxDate\", \"minDate\", \"month\", \"year\"]);\n\n      return _react.default.createElement(_Input.default, _extends({\n        name: \"day\",\n        max: maxDay,\n        min: minDay\n      }, otherProps));\n    }\n  }, {\n    key: \"currentMonthMaxDays\",\n    get: function get() {\n      var _this$props2 = this.props,\n          year = _this$props2.year,\n          month = _this$props2.month;\n\n      if (!month) {\n        return 31;\n      }\n\n      return (0, _dates.getDaysInMonth)(new Date(year, month - 1, 1));\n    }\n  }, {\n    key: \"maxDay\",\n    get: function get() {\n      var _this$props3 = this.props,\n          maxDate = _this$props3.maxDate,\n          month = _this$props3.month,\n          year = _this$props3.year;\n      return (0, _utils.min)(this.currentMonthMaxDays, maxDate && year === (0, _dates.getYear)(maxDate) && month === (0, _dates.getMonth)(maxDate) && (0, _dates.getDay)(maxDate));\n    }\n  }, {\n    key: \"minDay\",\n    get: function get() {\n      var _this$props4 = this.props,\n          minDate = _this$props4.minDate,\n          month = _this$props4.month,\n          year = _this$props4.year;\n      return (0, _utils.max)(1, minDate && year === (0, _dates.getYear)(minDate) && month === (0, _dates.getMonth)(minDate) && (0, _dates.getDay)(minDate));\n    }\n  }]);\n\n  return DayInput;\n}(_react.PureComponent);\n\nexports.default = DayInput;\nDayInput.propTypes = {\n  className: _propTypes.default.string.isRequired,\n  disabled: _propTypes.default.bool,\n  itemRef: _propTypes.default.func,\n  maxDate: _propTypes2.isMaxDate,\n  minDate: _propTypes2.isMinDate,\n  month: _propTypes.default.number,\n  onChange: _propTypes.default.func,\n  onKeyDown: _propTypes.default.func,\n  required: _propTypes.default.bool,\n  showLeadingZeros: _propTypes.default.bool,\n  value: _propTypes.default.number,\n  year: _propTypes.default.number\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Input = _interopRequireDefault(require(\"./Input\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _propTypes2 = require(\"../shared/propTypes\");\n\nvar _utils = require(\"../shared/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar MonthInput =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(MonthInput, _PureComponent);\n\n  function MonthInput() {\n    _classCallCheck(this, MonthInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MonthInput).apply(this, arguments));\n  }\n\n  _createClass(MonthInput, [{\n    key: \"render\",\n    value: function render() {\n      var maxMonth = this.maxMonth,\n          minMonth = this.minMonth;\n\n      var _this$props = this.props,\n          maxDate = _this$props.maxDate,\n          minDate = _this$props.minDate,\n          year = _this$props.year,\n          otherProps = _objectWithoutProperties(_this$props, [\"maxDate\", \"minDate\", \"year\"]);\n\n      return _react.default.createElement(_Input.default, _extends({\n        name: \"month\",\n        max: maxMonth,\n        min: minMonth\n      }, otherProps));\n    }\n  }, {\n    key: \"maxMonth\",\n    get: function get() {\n      var _this$props2 = this.props,\n          maxDate = _this$props2.maxDate,\n          year = _this$props2.year;\n      return (0, _utils.min)(12, maxDate && year === (0, _dates.getYear)(maxDate) && (0, _dates.getMonth)(maxDate));\n    }\n  }, {\n    key: \"minMonth\",\n    get: function get() {\n      var _this$props3 = this.props,\n          minDate = _this$props3.minDate,\n          year = _this$props3.year;\n      return (0, _utils.max)(1, minDate && year === (0, _dates.getYear)(minDate) && (0, _dates.getMonth)(minDate));\n    }\n  }]);\n\n  return MonthInput;\n}(_react.PureComponent);\n\nexports.default = MonthInput;\nMonthInput.propTypes = {\n  className: _propTypes.default.string.isRequired,\n  disabled: _propTypes.default.bool,\n  itemRef: _propTypes.default.func,\n  maxDate: _propTypes2.isMaxDate,\n  minDate: _propTypes2.isMinDate,\n  onChange: _propTypes.default.func,\n  onKeyDown: _propTypes.default.func,\n  required: _propTypes.default.bool,\n  showLeadingZeros: _propTypes.default.bool,\n  value: _propTypes.default.number,\n  year: _propTypes.default.number\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _Input = _interopRequireDefault(require(\"./Input\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _propTypes2 = require(\"../shared/propTypes\");\n\nvar _utils = require(\"../shared/utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar YearInput =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(YearInput, _PureComponent);\n\n  function YearInput() {\n    _classCallCheck(this, YearInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(YearInput).apply(this, arguments));\n  }\n\n  _createClass(YearInput, [{\n    key: \"render\",\n    value: function render() {\n      var maxYear = this.maxYear,\n          minYear = this.minYear,\n          yearStep = this.yearStep;\n\n      var _this$props = this.props,\n          maxDate = _this$props.maxDate,\n          minDate = _this$props.minDate,\n          valueType = _this$props.valueType,\n          otherProps = _objectWithoutProperties(_this$props, [\"maxDate\", \"minDate\", \"valueType\"]);\n\n      return _react.default.createElement(_Input.default, _extends({\n        name: \"year\",\n        max: maxYear,\n        min: minYear,\n        placeholder: \"----\",\n        step: yearStep\n      }, otherProps));\n    }\n  }, {\n    key: \"maxYear\",\n    get: function get() {\n      var maxDate = this.props.maxDate;\n      return (0, _utils.min)(275760, maxDate && (0, _dates.getYear)(maxDate));\n    }\n  }, {\n    key: \"minYear\",\n    get: function get() {\n      var minDate = this.props.minDate;\n      return (0, _utils.max)(1000, minDate && (0, _dates.getYear)(minDate));\n    }\n  }, {\n    key: \"yearStep\",\n    get: function get() {\n      var valueType = this.props.valueType;\n\n      if (valueType === 'century') {\n        return 10;\n      }\n\n      return 1;\n    }\n  }]);\n\n  return YearInput;\n}(_react.PureComponent);\n\nexports.default = YearInput;\nYearInput.propTypes = {\n  className: _propTypes.default.string.isRequired,\n  disabled: _propTypes.default.bool,\n  itemRef: _propTypes.default.func,\n  maxDate: _propTypes2.isMaxDate,\n  minDate: _propTypes2.isMinDate,\n  onChange: _propTypes.default.func,\n  onKeyDown: _propTypes.default.func,\n  required: _propTypes.default.bool,\n  value: _propTypes.default.number,\n  valueType: _propTypes2.isValueType\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _dates = require(\"../shared/dates\");\n\nvar _propTypes2 = require(\"../shared/propTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar NativeInput =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(NativeInput, _PureComponent);\n\n  function NativeInput() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, NativeInput);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(NativeInput)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_assertThisInitialized(_this)), \"stopPropagation\", function (event) {\n      return event.stopPropagation();\n    });\n\n    return _this;\n  }\n\n  _createClass(NativeInput, [{\n    key: \"render\",\n    value: function render() {\n      var nativeValueParser = this.nativeValueParser;\n      var _this$props = this.props,\n          disabled = _this$props.disabled,\n          maxDate = _this$props.maxDate,\n          minDate = _this$props.minDate,\n          name = _this$props.name,\n          onChange = _this$props.onChange,\n          required = _this$props.required,\n          value = _this$props.value;\n      return _react.default.createElement(\"input\", {\n        type: this.nativeInputType,\n        disabled: disabled,\n        max: maxDate ? nativeValueParser(maxDate) : null,\n        min: minDate ? nativeValueParser(minDate) : null,\n        name: name,\n        onChange: onChange,\n        onFocus: this.stopPropagation,\n        required: required,\n        style: {\n          visibility: 'hidden',\n          position: 'absolute',\n          top: '-9999px',\n          left: '-9999px'\n        },\n        value: value ? nativeValueParser(value) : ''\n      });\n    }\n  }, {\n    key: \"nativeInputType\",\n    get: function get() {\n      var valueType = this.props.valueType;\n\n      switch (valueType) {\n        case 'decade':\n        case 'year':\n          return 'number';\n\n        case 'month':\n          return 'month';\n\n        case 'day':\n          return 'date';\n\n        default:\n          throw new Error('Invalid valueType.');\n      }\n    }\n  }, {\n    key: \"nativeValueParser\",\n    get: function get() {\n      var valueType = this.props.valueType;\n\n      switch (valueType) {\n        case 'century':\n        case 'decade':\n        case 'year':\n          return _dates.getYear;\n\n        case 'month':\n          return _dates.getISOLocalMonth;\n\n        case 'day':\n          return _dates.getISOLocalDate;\n\n        default:\n          throw new Error('Invalid valueType.');\n      }\n    }\n  }]);\n\n  return NativeInput;\n}(_react.PureComponent);\n\nexports.default = NativeInput;\nNativeInput.propTypes = {\n  disabled: _propTypes.default.bool,\n  maxDate: _propTypes2.isMaxDate,\n  minDate: _propTypes2.isMinDate,\n  name: _propTypes.default.string,\n  onChange: _propTypes.default.func,\n  required: _propTypes.default.bool,\n  value: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.instanceOf(Date)]),\n  valueType: _propTypes2.isValueType\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFormatter = void 0;\n\nvar _getUserLocale = _interopRequireDefault(require(\"get-user-locale\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar formatterCache = {};\n/* eslint-disable import/prefer-default-export */\n\n/**\n * Gets Intl-based date formatter from formatter cache. If it doesn't exist in cache\n * just yet, it will be created on the fly.\n */\n\nvar getFormatter = function getFormatter(locale, options) {\n  if (!locale) {\n    // Default parameter is not enough as it does not protect us from null values\n    // eslint-disable-next-line no-param-reassign\n    locale = (0, _getUserLocale.default)();\n  }\n\n  var stringifiedOptions = JSON.stringify(options);\n\n  if (!formatterCache[locale]) {\n    formatterCache[locale] = {};\n  }\n\n  if (!formatterCache[locale][stringifiedOptions]) {\n    formatterCache[locale][stringifiedOptions] = function (n) {\n      return n.toLocaleString(locale, options);\n    };\n  }\n\n  return formatterCache[locale][stringifiedOptions];\n};\n\nexports.getFormatter = getFormatter;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"callIfDefined\", {\n  enumerable: true,\n  get: function get() {\n    return _utils.callIfDefined;\n  }\n});\n\nvar _utils = require(\"react-date-picker/dist/shared/utils\");"],"sourceRoot":""}